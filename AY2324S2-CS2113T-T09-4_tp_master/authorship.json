[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |    Name    |             Github Profile             | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"--------|:----------:|:--------------------------------------:|:---------:","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Justin Soh | [Github](https://github.com/JustinSoh) | [Portfolio](https://justinsoh.github.io/)","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Rouvin Erh | [Github](https://github.com/rouvinerh) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alfaatih | [Github](https://github.com/L5-Z) | [Portfolio](https://l5-z.github.io)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"j013n3"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Jolene  | [Github](https://github.com/j013n3) | [Portfolio](docs/team/j013n3.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ying Jia | [Github](https://github.com/syj02) | [Portfolio](docs/team/syj02.md)","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"j013n3":1,"JustinSoh":2,"rouvinerh":1,"L5-Z":1,"syj02":1,"-":3}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"# PulsePilot","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"rouvinerh":1,"-":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"PulsePilot is a **desktop app for tracking health-related information, optimised for users via a Command Line Interface (CLI)**. If one can type fast, you can key in and track health-related information faster than traditional GUI applications installed on your phone or computer.","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"* [Features](#features)","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    - [Notes About Command Format](#notes-about-command-format)","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    - [General](#general)","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"      - [List](#list)","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"      - [Help](#help)","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"      - [Exit](#exit)","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"      - [Saving Data](#saving-data)","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"    - [Workouts](#workouts)","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"      - [Run](#run)","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"      - [Gym](#gym)","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    - [Health](#health)","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"      - [BMI](#bmi)","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"      - [Menstrual Cycle](#menstrual-cycle)","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"* [Frequently Asked Questions (FAQ)](#faq)","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"1. Ensure that you have the latest Java 11.","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"2. Download the latest `pulsepilot.jar`.","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"3. Copy the file to the folder you want to use as the home folder for PulsePilot.","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"4. Open a command terminal (either cmd.exe or bash), cd to the folder with `pulsepilot.jar` in it, and use `java -jar pulsepilot.jar` to run the application.","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"5. The welcome message for PulsePilot should be printed to the screen.","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"6. Type commands in the command line and press Enter to execute it. Using `help` and pressing Enter will print the help message.","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"Include banner from bot here.","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"### Notes About Command Format","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"* Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"    * TO ADD EXAMPLES FOR THE SPECIFIC COMMANDS.","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"* Items in square brackets are optional.","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"    * TO ADD EXAMPLES FOR THE SPECIFIC COMMANDS.","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"* Extraneous parameters for commands that do not take in parameters (such as help) will be ignored.","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"    * e.g. If the command entered is `help me`, it will be interpreted as `help`.","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"* Items with `...`  after them can be used multiple times, not including zero times.","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"### General","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"#### List","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"#### Help","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"#### Exit","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"#### Saving Data","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"### Workouts","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"Tracks either a gym or exercise workout (to be changed).","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"#### Gym","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"Add New Gym: `gym`","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"Adds a new gym exercise to the exercise tracker.","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"Format: `gym /s:Bench Press...` (to be changed)","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"* **At least one station** has to be provided. Can include as many as the user wants.","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"* Parameters must be **in order**.","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"* `STATION` refers to the station name (i.e. `Bench Press`, `Deadlift`)","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"* `WEIGHT` is a **1 decimal point** number in kilograms (i.e. `85.5`) representing the amount of weight carried for the station.","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"* `SETS` is a **positive integer more than 1** representing the number of sets done for the station.","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"* `REPETITIONS` is a **positive integer more than 1** representing the number of repetitions done per set.","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"* `DATE` is in `DD/MM/YYYY` format (i.e. `05/12/2023`).","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"Example:","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"Include the expected output of the bot here. ","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"#### Run","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"To be added. ","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"rouvinerh"},"content":"### Health","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"Tracks health of the user.","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"#### BMI","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"To be added.","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"rouvinerh"},"content":"#### Menstrual Cycle","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"rouvinerh"},"content":"**1.** How do I transfer my data to another computer?","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"rouvinerh"},"content":"Ensure that you have the `data.txt` file in the same directory as `pulsepilot.jar`. ","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"rouvinerh"},"content":"TO ADD MORE. ","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":114,"author":{"gitId":"rouvinerh"},"content":"| Action | Format, Examples |","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"rouvinerh"},"content":"|--------|------------------|","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"rouvinerh"},"content":"| help   |                  |","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"rouvinerh"},"content":"| run    |                  |","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"rouvinerh"},"content":"| gym    |                  |","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"rouvinerh"},"content":"| bmi    |                  |","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"rouvinerh":89,"-":32}},{"path":"src/main/java/health/Bmi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"j013n3"},"content":"package health;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"j013n3"},"content":"/*","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":" * The Bmi class extends the Health class and provides functionality","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"j013n3"},"content":" * to calculate and categorise the Body Mass Index based on user\u0027s","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"j013n3"},"content":" * height and weight.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"j013n3"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"public class Bmi extends Health {","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"    /*","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"     * The height of the user in meters.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"    protected static double height;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"    /*","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"     * The weight of the user in kilograms.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"    protected static double weight;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"    protected static double bmiValue;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"    protected static String bmiCategory;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"    /*","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"     * Constructor for Health object.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"    public Bmi(String height, String weight) {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"        this.height \u003d Double.valueOf(height);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"        this.weight \u003d Double.valueOf(weight);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"        this.bmiValue \u003d calculateBmiValue();","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"        this.bmiCategory \u003d getBmiCategory(bmiValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"    public static String[] getBmi(String input) throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"        String[] results \u003d new String[Constant.BMI_PARAMETERS];","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":"        if (!input.contains(\"/h\") || !input.contains(\"/height:\") || !input.contains(\"/weight:\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"            throw new CustomExceptions.InvalidInput(Constant.MISSING_PARAMETERS);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"        int indexH \u003d input.indexOf(\"/h\");","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"        int indexHeight \u003d input.indexOf(\"/height\");","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"        int indexWeight \u003d input.indexOf(\"/weight\");","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"        String command \u003d input.substring(indexH + Constant.BMI_H_OFFSET, indexHeight).trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"        String heightSubstring \u003d input.substring(indexHeight + Constant.BMI_HEIGHT_OFFSET, indexWeight).trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"        String weightSubstring \u003d input.substring(indexWeight + Constant.BMI_WEIGHT_OFFSET).trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"syj02"},"content":"        if (command.isEmpty() || heightSubstring.isEmpty() || weightSubstring.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"            // throw new CustomExceptions(Constant.UNSPECIFIED_PARAMETERS;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"        results[0] \u003d command;","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"        results[1] \u003d heightSubstring;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"        results[2] \u003d weightSubstring;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"        return results;","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"j013n3"},"content":"    /*","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"j013n3"},"content":"     * Calculates BMI based on height and weight, prints calculated BMI value,","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"j013n3"},"content":"     * and calls the printBMICategory method.","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"    public double calculateBmiValue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"syj02"},"content":"        return Math.round((weight / (Math.pow(height, 2.0))) * 100.0) / 100.0;","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"j013n3"},"content":"    /*","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"syj02"},"content":"     * Prints the BMI category based on the calculated Bmi value.","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"syj02"},"content":"     * @param Bmi The BMI value to categorize.","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"syj02"},"content":"    public static String getBmiCategory(double bmiValue) {","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"syj02"},"content":"        if (bmiValue \u003c 18.5) {","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"syj02"},"content":"            return Constant.UNDERWEIGHT_MESSAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"syj02"},"content":"        } else if (bmiValue \u003c 24.9) {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"syj02"},"content":"            return Constant.NORMAL_WEIGHT_MESSAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"syj02"},"content":"        } else if (bmiValue \u003c 29.9) {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"syj02"},"content":"            return Constant.OVERWEIGHT_MESSAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"syj02"},"content":"        } else if (bmiValue \u003c 39.9) {","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"syj02"},"content":"            return Constant.OBESE_MESSAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"j013n3"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"syj02"},"content":"            return Constant.SEVERELY_OBESE_MESSAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"syj02"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"syj02"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"syj02"},"content":"        return \"Your BMI is \" + this.calculateBmiValue() + System.lineSeparator() + this.getBmiCategory(bmiValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"j013n3"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"j013n3":21,"syj02":71}},{"path":"src/main/java/health/Health.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"j013n3"},"content":"package health;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"j013n3"},"content":"/*","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"j013n3"},"content":" * The Health class represents health information of the user.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"j013n3"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"j013n3"},"content":"public class Health {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"    public static String checkTypeOfHealth(String userInput) throws","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"            CustomExceptions.InvalidInput,","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"            CustomExceptions.InsufficientInput {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"        String[] userInputs \u003d userInput.split(\"/\"); // Constant.SPLIT_BY_SLASH \u003d \"/\"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"        String healthType \u003d userInputs[Constant.HEALTH_TYPE_INDEX].trim(); // Constant.EXERCISE_TYPE_INDEX \u003d 1","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"        if (healthType.isBlank()){","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"            throw new CustomExceptions.InvalidInput(Constant.BLANK_INPUT_FOR_HEALTH);","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"        healthType \u003d healthType.toLowerCase();","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"        boolean isBmi \u003d healthType.equals(Constant.BMI_INPUT);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"        boolean isPeriod \u003d healthType.equals(Constant.PERIOD_INPUT);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"        if(!isBmi \u0026\u0026 !isPeriod){","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"            throw new CustomExceptions.InvalidInput(Constant.INVALID_INPUT_FOR_EXERCISE);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"        if(isBmi \u0026\u0026 userInputs.length \u003c 3){","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"            throw new CustomExceptions.InsufficientInput(Constant.INSUFFICIENT_PARAMETERS_FOR_BMI);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"        if(isPeriod \u0026\u0026 userInputs.length \u003c 3){","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"            throw new CustomExceptions.InsufficientInput(Constant.INSUFFICIENT_PARAMETERS_FOR_PERIOD);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"        if (isBmi){","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"            return Constant.BMI;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"            return Constant.PERIOD;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"j013n3"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"j013n3":18,"syj02":29}},{"path":"src/main/java/health/HealthList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"package health;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"public class HealthList extends ArrayList\u003cHealth\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"    private static final ArrayList\u003cBmi\u003e bmis \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"    public static void addBmi(Bmi bmi) {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"        bmis.add(bmi);","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"    public static void showCurrentBmi() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"        int currentIndex \u003d bmis.size();","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"        System.out.println(bmis.get(currentIndex - 1));","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"syj02":16}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"import static ui.Handler.initialiseBot;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"import static ui.Handler.processInput;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"import static ui.Handler.terminateBot;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"     * Main entry-point for PulsePilot.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"        initialiseBot();","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"        processInput();","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"        terminateBot();","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"L5-Z":7,"-":9}},{"path":"src/main/java/storage/DataFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raajamani"},"content":"package storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"raajamani"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"raajamani"},"content":"import health.Health;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"raajamani"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"public class DataFile {","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"raajamani"},"content":"    private Health health;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"raajamani"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"raajamani"},"content":"    public void save(int id, Health health) {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"raajamani"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"raajamani"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"    public static DataFile load(int id) {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"raajamani"},"content":"        // return new Storage(...)","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"raajamani"},"content":"        return null;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"raajamani"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"raajamani"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"raajamani"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"rouvinerh":2,"raajamani":14}},{"path":"src/main/java/storage/LogFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"public class LogFile {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"    protected static FileHandler logFileHandler \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    private static final Logger logger \u003d Logger.getLogger(LogFile.class.getName());","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     * Initializes the log file handler.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"    public LogFile (){","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"        initializeLogFile();","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     * Initialises the log file to be used. Creates the log file if needed, then sets formatters.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     * Parent handlers are set to false to prevent printing of logs to terminal.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"    public static void initializeLogFile() {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"            if (logFileHandler \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"                logFileHandler \u003d new FileHandler(Constant.LOG_FILE_PATH);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"                logFileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"                logger.addHandler(logFileHandler);","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"                logger.setUseParentHandlers(false);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"            throw new RuntimeException(\"Error setting up log file\", e);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"        assert(logFileHandler !\u003d null);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     * Writes commands used and any errors to log file.","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"     * @param input   String representing the user\u0027s input.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"     * @param isError Boolean variable to determine if log is an error.","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"    public static void writeLog(String input, boolean isError) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"        if (isError) {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"            logger.log(Level.WARNING, \"Error: \" + input);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"            logger.log(Level.INFO, input);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"rouvinerh":52}},{"path":"src/main/java/ui/Handler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"package ui;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"j013n3"},"content":"import health.Bmi;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"j013n3"},"content":"import health.Health;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"import health.HealthList;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"import utility.Command;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"import workouts.Run;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"import workouts.WorkoutList;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"import storage.LogFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":" * Represents user input parsing and handling","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":" * before providing feedback to the user.","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"public class Handler {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"    static LogFile logging \u003d new LogFile();","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"     * Processes user input and filters for valid command words from enum {@code Command},","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"     * then creates the relevant {@code Task} object based on details entered.","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"     * @throws IllegalArgumentException If an error occurs during command processing.","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"    public static void processInput() {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"        while (in.hasNextLine()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"            String instruction \u003d userInput.toUpperCase().split(\" \")[0];","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"            logging.writeLog(\"User Input: \" + userInput, false);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"            try {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"                Command command \u003d Command.valueOf(instruction);","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"                switch (command) {","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"                case EXIT:","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"                    return;","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"                case LOAD:","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"                    handleLoad(userInput);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"                case NEW:","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"                    handleExercise(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"L5-Z"},"content":"                case HISTORY:","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"L5-Z"},"content":"                    handleHistory(userInput);","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"L5-Z"},"content":"                case LATEST:","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"L5-Z"},"content":"                    handleLatest(userInput);","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"L5-Z"},"content":"                case HEALTH:","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"L5-Z"},"content":"                    handleHealth(userInput);","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"L5-Z"},"content":"                case START:","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"L5-Z"},"content":"                    handleStart(userInput);","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"                case END:","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"L5-Z"},"content":"                    handleEnd(userInput);","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"L5-Z"},"content":"                case TODAY:","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"L5-Z"},"content":"                    handleToday(userInput);","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"L5-Z"},"content":"                case LENGTH:","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"L5-Z"},"content":"                    handleLength(userInput);","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"L5-Z"},"content":"                case HELP:","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"L5-Z"},"content":"                    Output.printHelp();","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"L5-Z"},"content":"                default:","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"L5-Z"},"content":"                    // Yet to implement : throw new CustomException();","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"L5-Z"},"content":"                }","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"L5-Z"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"L5-Z"},"content":"                // Yet to implement : Reply.printException(e, Constant.INVALID_COMMAND);","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"L5-Z"},"content":"                // Yet to implement : } catch (CustomException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"L5-Z"},"content":"                // Yet to implement : Reply.printException(e);","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"L5-Z"},"content":"            }","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"     * Checks the type of exercise based on the user input.","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"     * Usage: to use this method whenever the user enters a new exercise.","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"     * Handles all the checks for input validity and sufficiency.","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"     * Can assume input is valid and sufficient if no exceptions are thrown.","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"JustinSoh"},"content":"     * @return The type of exercise {@code Constant.RUN} or {@code Constant.GYM}.","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"     * @throws CustomExceptions.InvalidInput If the user input is invalid or blank.","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"     * @throws CustomExceptions.InsufficientInput If the user input is insufficient.","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"    public static String checkTypeOfExercise(String userInput) throws","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"            CustomExceptions.InvalidInput,","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"            CustomExceptions.InsufficientInput {","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"        String[] userInputs \u003d userInput.split(\"/\"); // Constant.SPLIT_BY_SLASH \u003d \"/\"","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"        String exerciseType \u003d userInputs[Constant.EXERCISE_TYPE_INDEX].trim(); // Constant.EXERCISE_TYPE_INDEX \u003d 1","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"JustinSoh"},"content":"        if (exerciseType.isBlank()){","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(Constant.BLANK_INPUT_FOR_EXERCISE);","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"JustinSoh"},"content":"        exerciseType \u003d exerciseType.toLowerCase();","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"JustinSoh"},"content":"        boolean isRun \u003d exerciseType.equals(Constant.RUN_INPUT);","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"JustinSoh"},"content":"        boolean isGym \u003d exerciseType.equals(Constant.GYM_INPUT);","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"JustinSoh"},"content":"        if(!isRun \u0026\u0026 !isGym){","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(Constant.INVALID_INPUT_FOR_EXERCISE);","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"JustinSoh"},"content":"        if(isRun \u0026\u0026 userInputs.length \u003c 5){","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InsufficientInput(Constant.INSUFFICIENT_PARAMETERS_FOR_RUN);","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"JustinSoh"},"content":"        if(isGym \u0026\u0026 userInputs.length \u003c 3){","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InsufficientInput(Constant.INSUFFICIENT_PARAMETERS_FOR_GYM);","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"JustinSoh"},"content":"        if (isRun){","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"JustinSoh"},"content":"            return Constant.RUN;","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"JustinSoh"},"content":"        }else {","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"JustinSoh"},"content":"            return Constant.GYM;","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"L5-Z"},"content":"     * Constructs a new {@code }  object based on the user input.","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"L5-Z"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"JustinSoh"},"content":"    public static void handleExercise(String userInput) {","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"JustinSoh"},"content":"            String typeOfExercise \u003d checkTypeOfExercise(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"JustinSoh"},"content":"            if (typeOfExercise.equals(Constant.RUN)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"L5-Z"},"content":"                String[] runDetails \u003d getRun(userInput);","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"JustinSoh"},"content":"                if (runDetails[0].isEmpty() || runDetails[1].isEmpty() || runDetails[2].isEmpty()","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"JustinSoh"},"content":"                        || runDetails[3].isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"L5-Z"},"content":"                    throw new CustomExceptions.InvalidInput(\"Missing parameter(s)\");","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"L5-Z"},"content":"                }","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"L5-Z"},"content":"                Run newRun \u003d new Run(runDetails[2], runDetails[1], runDetails[3]);","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"L5-Z"},"content":"                WorkoutList.addRun(newRun);","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"L5-Z"},"content":"                System.out.println(\"Added: run | \" + runDetails[1] + \" | \" + runDetails[2] + \" | \" + runDetails[3]);","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"JustinSoh"},"content":"            } else if (typeOfExercise.equals(Constant.GYM)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"JustinSoh"},"content":"                // Yet to implement : handleGym(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"JustinSoh"},"content":"                getGym(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"syj02"},"content":"        } catch (CustomExceptions.InvalidInput | CustomExceptions.InsufficientInput e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"L5-Z"},"content":"            // throw new CustomExceptions.InvalidInput(Constant.UNSPECIFIED_PARAMETER);","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"L5-Z"},"content":"    public static void handleLoad(String userInput){}","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"JustinSoh"},"content":"    public static void handleHistory(String userInput){","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"JustinSoh"},"content":"        Output.printHistory(\"all\");","lastModifiedDate":"2024-03-12"},{"lineNumber":189,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"JustinSoh"},"content":"    public static void handleLatest(String userInput){","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"JustinSoh"},"content":"        // if asked to show latest run","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"rouvinerh"},"content":"        Output.printLatestRun();","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"syj02"},"content":"    public static void handleHealth(String userInput){","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"syj02"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"syj02"},"content":"            String typeOfHealth \u003d Health.checkTypeOfHealth(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"syj02"},"content":"            if (typeOfHealth.equals(Constant.BMI)){","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"syj02"},"content":"                String[] bmiDetails \u003d Bmi.getBmi(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"syj02"},"content":"                if (bmiDetails[0].isEmpty() || bmiDetails[1].isEmpty() || bmiDetails[2].isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"syj02"},"content":"                    throw new CustomExceptions.InvalidInput(\"Missing parameter(s)\");","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"j013n3"},"content":"                }","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"syj02"},"content":"                Bmi newBmi \u003d new Bmi(bmiDetails[1], bmiDetails[2]);","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"syj02"},"content":"                HealthList.addBmi(newBmi);","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"syj02"},"content":"                System.out.println(\"Added: bmi | \" + bmiDetails[1] + \" | \" + bmiDetails[2]);","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"syj02"},"content":"                System.out.println(newBmi);","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"syj02"},"content":"            } else if (typeOfHealth.equals(Constant.PERIOD)){","lastModifiedDate":"2024-03-18"},{"lineNumber":209,"author":{"gitId":"syj02"},"content":"                // Yet to implement","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"j013n3"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":211,"author":{"gitId":"syj02"},"content":"        } catch (CustomExceptions.InvalidInput | CustomExceptions.InsufficientInput e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"syj02"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"L5-Z"},"content":"    public static void handleStart(String userInput){}","lastModifiedDate":"2024-03-14"},{"lineNumber":217,"author":{"gitId":"L5-Z"},"content":"    public static void handleEnd(String userInput){}","lastModifiedDate":"2024-03-14"},{"lineNumber":218,"author":{"gitId":"L5-Z"},"content":"    public static void handleToday(String userInput){}","lastModifiedDate":"2024-03-14"},{"lineNumber":219,"author":{"gitId":"L5-Z"},"content":"    public static void handleLength(String userInput){}","lastModifiedDate":"2024-03-14"},{"lineNumber":220,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":221,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"JustinSoh"},"content":"    public static void getGym(String input){","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"temp\");","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":226,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":227,"author":{"gitId":"L5-Z"},"content":"     * Parses a string containing run information, extracts the command, distance and end time before returning","lastModifiedDate":"2024-03-14"},{"lineNumber":228,"author":{"gitId":"L5-Z"},"content":"     * an array of strings containing the information.","lastModifiedDate":"2024-03-14"},{"lineNumber":229,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":230,"author":{"gitId":"L5-Z"},"content":"     * @param input A string containing the Run information in the format \"new /e:run /d:DISTANCE /t:TIME [/date:DATE]\".","lastModifiedDate":"2024-03-14"},{"lineNumber":231,"author":{"gitId":"L5-Z"},"content":"     * @return An array of strings containing the extracted command, distance, time taken and date(if given).","lastModifiedDate":"2024-03-14"},{"lineNumber":232,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":233,"author":{"gitId":"L5-Z"},"content":"    public static String[] getRun(String input) throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":234,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":235,"author":{"gitId":"L5-Z"},"content":"        String[] results \u003d new String[4]; // Constant.RUN_PARAMETERS \u003d 4","lastModifiedDate":"2024-03-14"},{"lineNumber":236,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":237,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":238,"author":{"gitId":"L5-Z"},"content":"        if (!input.contains(\"/e\") || !input.contains(\"/d\") || !input.contains(\"/t\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":239,"author":{"gitId":"L5-Z"},"content":"            throw new CustomExceptions.InvalidInput(Constant.UNSPECIFIED_PARAMETER);","lastModifiedDate":"2024-03-18"},{"lineNumber":240,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":241,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":242,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"L5-Z"},"content":"        int indexE \u003d input.indexOf(\"/e\");","lastModifiedDate":"2024-03-14"},{"lineNumber":244,"author":{"gitId":"L5-Z"},"content":"        int indexD \u003d input.indexOf(\"/d\");","lastModifiedDate":"2024-03-14"},{"lineNumber":245,"author":{"gitId":"L5-Z"},"content":"        int indexT \u003d input.indexOf(\"/t\");","lastModifiedDate":"2024-03-14"},{"lineNumber":246,"author":{"gitId":"L5-Z"},"content":"        int indexDate \u003d input.indexOf(\"/date\");","lastModifiedDate":"2024-03-14"},{"lineNumber":247,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":248,"author":{"gitId":"L5-Z"},"content":"        String command \u003d input.substring(indexE + 3, indexD).trim(); // Constant.RUN_E_OFFSET , \"/e:\" \u003d 3","lastModifiedDate":"2024-03-14"},{"lineNumber":249,"author":{"gitId":"L5-Z"},"content":"        assert !command.isEmpty() : \"Command should not be empty\";","lastModifiedDate":"2024-03-18"},{"lineNumber":250,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":251,"author":{"gitId":"L5-Z"},"content":"        String dSubstring \u003d input.substring(indexD + 3, indexT).trim(); // Constant.RUN_D_OFFSET , \"/d:\" \u003d 3","lastModifiedDate":"2024-03-14"},{"lineNumber":252,"author":{"gitId":"L5-Z"},"content":"        assert !dSubstring.isEmpty() : \"Distance should not be empty\";","lastModifiedDate":"2024-03-18"},{"lineNumber":253,"author":{"gitId":"L5-Z"},"content":"        assert dSubstring.matches(\"\\\\d+(\\\\.\\\\d+)?\") : \"Distance should be a valid numeric value (assuming KM)\";","lastModifiedDate":"2024-03-18"},{"lineNumber":254,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":255,"author":{"gitId":"L5-Z"},"content":"        String tSubstring \u003d input.substring(indexT + 3, indexDate).trim(); // Constant.RUN_T_OFFSET , \"/t:\" \u003d 3","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"L5-Z"},"content":"        assert !tSubstring.isEmpty() : \"Time should not be empty\";","lastModifiedDate":"2024-03-18"},{"lineNumber":257,"author":{"gitId":"L5-Z"},"content":"        assert tSubstring.matches(\"\\\\d{2}:\\\\d{2}:\\\\d{2}\") : \"Time should be in the format HH:MM:SS\";","lastModifiedDate":"2024-03-18"},{"lineNumber":258,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":259,"author":{"gitId":"L5-Z"},"content":"        String dateSubstring \u003d input.substring(indexDate + 6).trim(); // Constant.RUN_DATE_OFFSET , \"/date:\" \u003d 6","lastModifiedDate":"2024-03-14"},{"lineNumber":260,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":261,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":262,"author":{"gitId":"L5-Z"},"content":"        if (command.isEmpty() || dSubstring.isEmpty() || tSubstring.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"L5-Z"},"content":"            //throw new CustomException(Constant.UNSPECIFIED_PARAMETER);","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":265,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":266,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":267,"author":{"gitId":"L5-Z"},"content":"        results[0] \u003d command;","lastModifiedDate":"2024-03-14"},{"lineNumber":268,"author":{"gitId":"L5-Z"},"content":"        results[1] \u003d dSubstring;","lastModifiedDate":"2024-03-14"},{"lineNumber":269,"author":{"gitId":"L5-Z"},"content":"        results[2] \u003d tSubstring;","lastModifiedDate":"2024-03-14"},{"lineNumber":270,"author":{"gitId":"L5-Z"},"content":"        results[3] \u003d dateSubstring;","lastModifiedDate":"2024-03-14"},{"lineNumber":271,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":272,"author":{"gitId":"L5-Z"},"content":"        return results;","lastModifiedDate":"2024-03-14"},{"lineNumber":273,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":274,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":275,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":276,"author":{"gitId":"L5-Z"},"content":"     * Initializes PulsePilot by printing a welcome message, loading tasks from storage,","lastModifiedDate":"2024-03-18"},{"lineNumber":277,"author":{"gitId":"L5-Z"},"content":"     * and returning the tasks list.","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":279,"author":{"gitId":"L5-Z"},"content":"    public static void initialiseBot() {","lastModifiedDate":"2024-03-11"},{"lineNumber":280,"author":{"gitId":"L5-Z"},"content":"        Output.printWelcomeBanner();","lastModifiedDate":"2024-03-18"},{"lineNumber":281,"author":{"gitId":"rouvinerh"},"content":"        logging.writeLog(\"Started bot\", false);","lastModifiedDate":"2024-03-18"},{"lineNumber":282,"author":{"gitId":"L5-Z"},"content":"        // Yet to implement : Check for existing save, if not, make a new one","lastModifiedDate":"2024-03-18"},{"lineNumber":283,"author":{"gitId":"L5-Z"},"content":"        // Yet to implement : int status \u003d Storage.load();","lastModifiedDate":"2024-03-18"},{"lineNumber":284,"author":{"gitId":"L5-Z"},"content":"        int status \u003d 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":285,"author":{"gitId":"L5-Z"},"content":"        if (status \u003d\u003d 1) {","lastModifiedDate":"2024-03-18"},{"lineNumber":286,"author":{"gitId":"L5-Z"},"content":"            Output.printGreeting(1);","lastModifiedDate":"2024-03-18"},{"lineNumber":287,"author":{"gitId":"L5-Z"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-14"},{"lineNumber":288,"author":{"gitId":"rouvinerh"},"content":"            String name \u003d in.nextLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":289,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(\"Welcome aboard, \" + name);","lastModifiedDate":"2024-03-18"},{"lineNumber":290,"author":{"gitId":"rouvinerh"},"content":"            logging.writeLog(\"Name entered: \" + name, false);","lastModifiedDate":"2024-03-18"},{"lineNumber":291,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":292,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":293,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":294,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":295,"author":{"gitId":"L5-Z"},"content":"     * Terminates PulsePilot by saving tasks to storage, printing a goodbye message,","lastModifiedDate":"2024-03-18"},{"lineNumber":296,"author":{"gitId":"L5-Z"},"content":"     * and indicating the filename where tasks are saved.","lastModifiedDate":"2024-03-11"},{"lineNumber":297,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":298,"author":{"gitId":"L5-Z"},"content":"    public static void terminateBot() {","lastModifiedDate":"2024-03-11"},{"lineNumber":299,"author":{"gitId":"rouvinerh"},"content":"        logging.writeLog(\"Bot exited gracefully\", false);","lastModifiedDate":"2024-03-18"},{"lineNumber":300,"author":{"gitId":"L5-Z"},"content":"        // Yet to implement : Storage.saveTasks(tasks);","lastModifiedDate":"2024-03-11"},{"lineNumber":301,"author":{"gitId":"L5-Z"},"content":"        // Yet to implement : Reply.printGoodbyeMessage();","lastModifiedDate":"2024-03-11"},{"lineNumber":302,"author":{"gitId":"L5-Z"},"content":"        // Yet to implement : Reply.printReply(\"Saved tasks as: \" + Constant.FILE_NAME);","lastModifiedDate":"2024-03-11"},{"lineNumber":303,"author":{"gitId":"L5-Z"},"content":"        System.exit(0);","lastModifiedDate":"2024-03-11"},{"lineNumber":304,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":305,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":306,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"j013n3":4,"JustinSoh":70,"rouvinerh":11,"L5-Z":199,"syj02":22}},{"path":"src/main/java/ui/Output.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"package ui;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import workouts.Workout;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import workouts.WorkoutList;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"public class Output {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"    * Prints a horizontal line.","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"    */","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"    private static void printLine() {","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"        System.out.println(Constant.PARTITION_LINE);","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"    * Prints the help message.","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"    */","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"    public static void printHelp() {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"Commands List:\");","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"        System.out.println();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"list - prints out the List\");","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"help - procures command list\");","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"exit - terminates the bot\");","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"bmi - calculates BMI\");","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"weight - save current weight\");","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"height - save current height\");","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"bmi format: bmi *parameter*\");","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"     * Prints an ASCII Art depicting the word \u0027PulsePilot\u0027.","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"    public static void printArt() {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\" _              _\");","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"|_)    |  _  _ |_) o  |  _ _|_\");","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"|  |_| | _\u003e (/_|   |  | (_) |_\");","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"    private static String getFormattedRunWithIndex(int index, Workout currentWorkout){","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"        return String.format(Constant.PRINT_RUN_FORMAT_WITH_INDEX, index, currentWorkout);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"    public static void printAddRun(Workout newRun){","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"        printLine();","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(Constant.ADD_RUN);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(Constant.RUN_HEADER);","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(newRun);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"        printLine();","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"    public static void printLatestRun(){","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"        try{","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"            printLine();","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"            Workout latestRun \u003d WorkoutList.getLatestRun();","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"            String latestRunString \u003d getFormattedRunWithIndex(WorkoutList.getRunSize(), latestRun);","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(Constant.RUN_HEADER_WITH_INDEX_FORMAT);","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(latestRunString);","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.OutOfBounds e){","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"        } finally {","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"            printLine();","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"    public static void printHistory(String filter) {","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"        try{","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"            printLine();","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"            ArrayList\u003cWorkout\u003e workoutList \u003d WorkoutList.getWorkouts(filter);","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(Constant.RUN_HEADER_WITH_INDEX_FORMAT);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"            for (int i \u003d 0; i \u003c workoutList.size(); i++){","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"                Workout currentWorkout \u003d workoutList.get(i);","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"                String output \u003d getFormattedRunWithIndex(index, currentWorkout);","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"                System.out.println(output);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.OutOfBounds | CustomExceptions.InvalidInput  e ){","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"        } finally {","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"            printLine();","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"L5-Z"},"content":"    public static void printWelcomeBanner() {","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"L5-Z"},"content":"        printArt();","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"Engaging orbital thrusters...\");","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"PulsePilot on standby\");","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"L5-Z"},"content":"    public static void printGreeting(int status) {","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"L5-Z"},"content":"        if (status \u003d\u003d 0) {","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"L5-Z"},"content":"            System.out.println(Constant.SUCCESSFUL_LOAD);","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"L5-Z"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"L5-Z"},"content":"            System.out.println(Constant.MISSING_FILE);","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"JustinSoh":48,"rouvinerh":3,"L5-Z":58}},{"path":"src/main/java/utility/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"package utility;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"public enum Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"    LOAD,","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"    NEW,","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"    HISTORY,","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"    LATEST,","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"    HEALTH,","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"    HEIGHT,","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"    WEIGHT,","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"    BMI,","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"    START,","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"    END,","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"    TODAY,","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"    LENGTH,","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"    HELP,","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    EXIT,","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"JustinSoh":2,"L5-Z":17}},{"path":"src/main/java/utility/Constant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"package utility;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"public class Constant {","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"    // Formatted Replies","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"    public static final Integer MAX_RUNTIME_ARRAY_LENGTH \u003d 3;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"    public static final Integer MIN_RUNTIME_ARRAY_LENGTH \u003d 2;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"    public static final Integer EXERCISE_TYPE_INDEX \u003d 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"    public static final String PARTITION_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"    public static final String ADD_RUN \u003d \"Successfully added a new run\";","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"    // Constant for Workout","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"    public static final String RUN \u003d \"run\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"    public static final String GYM \u003d \"gym\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    public static final String ALL \u003d \"all\";","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"    public static final String RUN_INPUT \u003d \"e:run\";","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"    public static final String GYM_INPUT \u003d \"e:gym\";","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    public static final String RUN_FORMAT \u003d \"%s \\t%s\\t\\t%s\\t\\t%s\\t\\t%s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"    public static final String PRINT_RUN_FORMAT_WITH_INDEX \u003d \"%d.\\t\\t\\t%s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"    public static final String RUN_HEADER_WITH_INDEX_FORMAT \u003d \"Index\\t\\tType\\tTime\\t\\tDistance\\tPace\\t\\tDate\";","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    public static final String RUN_HEADER \u003d \"Type\\\\tTime\\\\t\\\\tDistance\\\\tPace\\\\t\\\\tDate\\\"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"    // Constant for Error","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"    public static final String INVALID_PRINT_HISTORY_FILTER \u003d \"Invalid filter! Filter is only \u0027all\u0027, \u0027run\u0027 or \u0027gym\u0027\";","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"    public static final String NO_RUNS_FOUND \u003d \"No runs found! You need to add a run first!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    public static final String NO_HISTORY_FOUND \u003d \"No history found!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"    public static final String BLANK_INPUT_FOR_EXERCISE \u003d \"Type of exercise cannot be empty. \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"            \"Please input either /e:run or /e:gym\";","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"    public static final String INVALID_INPUT_FOR_EXERCISE \u003d \"Invalid input for exercise type! \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"            \"Please input either /e:run or /e:gym\";","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"    public static final String INVALID_RUN_TIME \u003d \"Invalid run time!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"    public static final String INVALID_GYM_INPUT \u003d \"Invalid gym parameters!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"    public static final String INVALID_GYM_STATION_INDEX \u003d \"Invalid gym station index!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"    public static final String INSUFFICIENT_PARAMETERS_FOR_RUN \u003d \"Insufficient parameters for run! \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"            \"Example input: new /e:run /d:DISTANCE /t:TIME [/date:DATE]\";","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"    public static final String INSUFFICIENT_PARAMETERS_FOR_GYM \u003d \"Insufficient parameters for gym! \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"            \"Example input: new /e:gym /n:\u003cnumber of exercise\u003e\";","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"    public static final Integer HEALTH_TYPE_INDEX \u003d 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"    public static final String BMI_INPUT \u003d \"h:bmi\";","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"    public static final String PERIOD_INPUT \u003d \"h:period\";","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"    public static final String BMI \u003d \"bmi\";","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"    public static final String PERIOD \u003d \"period\";","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"syj02"},"content":"    public static final Integer BMI_PARAMETERS \u003d 2;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"    public static final Integer BMI_H_OFFSET \u003d 8;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"    public static final Integer BMI_HEIGHT_OFFSET \u003d 8;","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"    public static final Integer BMI_WEIGHT_OFFSET \u003d 8;","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"    public static final String UNDERWEIGHT_MESSAGE \u003d \"You\u0027re underweight.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"    public static final String NORMAL_WEIGHT_MESSAGE \u003d \"Great! You\u0027re within normal range.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"    public static final String OVERWEIGHT_MESSAGE \u003d \"You\u0027re overweight.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"    public static final String OBESE_MESSAGE \u003d \"You\u0027re obese.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"    public static final String SEVERELY_OBESE_MESSAGE \u003d \"You\u0027re severely obese.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"    public static final String BLANK_INPUT_FOR_HEALTH \u003d \"Type of health cannot be empty. \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"            \"Please input either /h:bmi or /h:period\";","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"    public static final String INSUFFICIENT_PARAMETERS_FOR_BMI \u003d \"Insufficient parameters for bmi! \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"            \"Example input: /h:bmi /height:height /weight:weight\";","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"    public static final String INSUFFICIENT_PARAMETERS_FOR_PERIOD \u003d \"Insufficient parameters for period! \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"            \"Example input: /h:period /start:startDate /end:endDate\";","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"    public static final String MISSING_PARAMETERS \u003d \"Missing parameter(s)\";","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"L5-Z"},"content":"    // Input Errors","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"L5-Z"},"content":"    public static final String INVALID_COMMAND \u003d \"Invalid command. Enter \u0027help\u0027 to view available commands.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"L5-Z"},"content":"    public static final String UNSPECIFIED_PARAMETER \u003d \"Parameter(s) unspecified.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"L5-Z"},"content":"    public static final String INVALID_PARAMETER \u003d \"Parameter(s) invalid or out of bounds\";","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"L5-Z"},"content":"    public static final String NO_DATE_SPECIFIED \u003d \"NA\";","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"L5-Z"},"content":"    // Storage Replies","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"L5-Z"},"content":"    public static final String SAVE_ERROR \u003d \"File save failed.\\nWrite error occurred:\\n\";","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"L5-Z"},"content":"    public static final String MISSING_FILE \u003d \"What is your name, Captain?\";","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"L5-Z"},"content":"    public static final String LOAD_ERROR \u003d \"File read error:\\n\" + \"Error at \";","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"    public static final String CORRUPT_ERROR \u003d \"\\nFile is corrupted. Ceasing any further data imports.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"L5-Z"},"content":"    public static final String SUCCESSFUL_LOAD \u003d \"Welcome back, Captain\\n\" + \"Previous data has been synchronised.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"    public static final String LOG_FILE_PATH \u003d\"./pulsepilot_log.txt\";","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"JustinSoh":29,"rouvinerh":8,"L5-Z":19,"syj02":23}},{"path":"src/main/java/utility/CustomExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package utility;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import storage.LogFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":" * Represents a custom exception class designed for PulsePilot to handle errors during command processing.","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"public class CustomExceptions extends Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"    public static class OutOfBounds extends Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"        public OutOfBounds(String message) {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"            super(\"\\u001b[31mError: \" + message + \"\\u001b[0m\");","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"            LogFile.writeLog(message, true);","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"    public static class InvalidInput extends Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"        public InvalidInput(String message) {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"            super(\"\\u001b[31mError: \" + message + \"\\u001b[0m\");","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"            LogFile.writeLog(message, true);","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"    public static class FileWriteError extends Exception{","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"        public FileWriteError(String message) {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"            super(\"\\u001b[31mError: \" + message + \"\\u001b[0m\");","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"            LogFile.writeLog(message, true);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"    public static class FileCreateError extends Exception{","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"        public FileCreateError(String message) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"            super(\"\\u001b[31mError: \" + message + \"\\u001b[0m\");","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"            LogFile.writeLog(message, true);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"    public static class InsufficientInput extends Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"        public InsufficientInput(String message) {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"            super(\"\\u001b[31mError: \" + message + \"\\u001b[0m\");","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"            LogFile.writeLog(message, true);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"JustinSoh":22,"rouvinerh":18,"L5-Z":3}},{"path":"src/main/java/utility/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package utility;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"public class Parser {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"     * Parses and converts String date to a LocalDate variable.","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"     * @param dateTime","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"     * @return","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    public static LocalDate parseDate(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"        LocalDate formattedDate \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"            formattedDate \u003d LocalDate.parse(dateTime, formatter);","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"            System.err.println(\"Error parsing date: \" + e.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"        return formattedDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"rouvinerh":26}},{"path":"src/main/java/workouts/Gym.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import utility.Parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"public class Gym extends Workout{","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"    protected LocalDate date \u003d null;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    protected ArrayList\u003cGymStation\u003e stations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    // takes (station name, weight, sets, reps)","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    public Gym() {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    // overloaded constructor for optional date","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"    public Gym(String stringDate) {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"        this.date \u003d Parser.parseDate(stringDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     * Adds station to an ArrayList of GymStation object","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     * Takes string name, weight done, number of sets, number of reps","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"     * @param name","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"     * @param stringWeight","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"     * @param stringNumberOfSet","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     * @param stringReps","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.InvalidInput","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    public void addStation(String name, String stringWeight, String stringNumberOfSet,","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"                           String stringReps) throws CustomExceptions.InvalidInput{","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"            int reps \u003d Integer.parseInt(stringReps);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"            int weight \u003d Integer.parseInt(stringWeight);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"            int numberOfSets \u003d Integer.parseInt(stringNumberOfSet);","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"            Integer[] weightAndReps \u003d {weight, reps};","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"            GymStation newStation \u003d new GymStation(name, weightAndReps, numberOfSets);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"            stations.add(newStation);","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"            throw new CustomExceptions.InvalidInput(Constant.INVALID_GYM_INPUT);","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"     * Get specific station as part of Gym object based on workout.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     * @return","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"    public ArrayList\u003cGymStation\u003e getStations(){","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"        return stations;","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"    public GymStation getStationByIndex(int index) throws CustomExceptions.OutOfBounds{","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"        if (index \u003e\u003d stations.size() || index \u003c 0) {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"            throw new CustomExceptions.OutOfBounds(Constant.INVALID_GYM_STATION_INDEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"        return stations.get(index);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"        // to be implemented","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"        return null;","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"rouvinerh":66}},{"path":"src/main/java/workouts/GymSet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"public class GymSet {","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"    int weight;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"    int repititions;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"     * GymSet contains the weight and reps done for 1 set (from a station)","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"     * @param weight","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"     * @param repititions","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    public GymSet(int weight, int repititions){","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"        this.repititions \u003d repititions;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"rouvinerh":17}},{"path":"src/main/java/workouts/GymStation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"public class GymStation {","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"    protected String stationName;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"    protected ArrayList\u003cGymSet\u003e sets;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"    protected int numberOfSets;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"     * Gym Station contains an ArrayList of GymSets.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"     * @param name","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"     * @param weightAndReps","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"     * @param numberOfSets","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    public GymStation(String name, Integer[] weightAndReps, int numberOfSets) {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"        this.stationName \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"        this.numberOfSets \u003d numberOfSets;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"        processSets(weightAndReps);","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"    public void processSets(Integer[] weightAndReps){","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"        int weight \u003d weightAndReps[0];","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"        int repetition \u003d weightAndReps[1];","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"        GymSet newSet \u003d new GymSet(weight, repetition);","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"        sets.add(newSet);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"    public String getStationName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"        return stationName;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    public  ArrayList\u003cGymSet\u003e getSets() {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"        return sets;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"    public GymSet getSpecificSet(int index) {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"        return sets.get(index);","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"    public int getNumberOfSets() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"        return numberOfSets;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"rouvinerh":44}},{"path":"src/main/java/workouts/Run.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import utility.Parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"public class Run extends Workout{","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"    protected Integer[] times;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"    protected double distance;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"    protected LocalDate date \u003d null;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    protected String pace;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"    protected boolean isHourPresent;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"    // overloaded constructor for optional date parameter","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    public Run(String stringTime, String stringDistance) throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"        times \u003d parseTime(stringTime);","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"        distance \u003d Double.parseDouble(stringDistance);","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"        pace \u003d calculatePace();","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"        WorkoutList.addRun(this);","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"    public Run(String stringTime, String stringDistance, String stringDate) throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"        times \u003d parseTime(stringTime);","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"        distance \u003d Double.parseDouble(stringDistance);","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"        date \u003d Parser.parseDate(stringDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"        pace \u003d calculatePace();","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"        WorkoutList.addRun(this);","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     * Returns string format of time taken for run.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"     * @return","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    public String getTimes()  {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"        if (isHourPresent) {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"            return times[0] + \":\" + times[1] + \":\" + times[2];","lastModifiedDate":"2024-03-10"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"        } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"            return times[0] + \":\" + times[1];","lastModifiedDate":"2024-03-10"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"    public double getDistance() {","lastModifiedDate":"2024-03-10"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"        return distance;","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"    public String getPace() {","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"        return pace;","lastModifiedDate":"2024-03-10"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     * Method parses the time format in either hh:mm:ss or mm:ss.","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"     * Sets {@code isHourPresent} variable to true if hours have been specified.","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"     * Otherwise, set to false.","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"     * @param inputTime String variable representing time taken in either hh:mm:ss or mm:ss format","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"     * @return A list of integers representing the hours (if present), minutes and seconds.","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"    public Integer[] parseTime(String inputTime) throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"        String[] stringTimeParts \u003d inputTime.split(\":\");","lastModifiedDate":"2024-03-10"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"        int inputLength \u003d stringTimeParts.length;","lastModifiedDate":"2024-03-10"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"        Integer[] integerTimes \u003d new Integer[inputLength];","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"        if (inputLength \u003d\u003d Constant.MAX_RUNTIME_ARRAY_LENGTH) {","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"            this.isHourPresent \u003d true;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"            integerTimes[0] \u003d Integer.parseInt(stringTimeParts[0]);","lastModifiedDate":"2024-03-10"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"            integerTimes[1] \u003d Integer.parseInt(stringTimeParts[1]);","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"            integerTimes[2] \u003d Integer.parseInt(stringTimeParts[2]);","lastModifiedDate":"2024-03-10"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"        } else if (inputLength \u003d\u003d Constant.MIN_RUNTIME_ARRAY_LENGTH) {","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"            this.isHourPresent \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"            integerTimes[0] \u003d Integer.parseInt(stringTimeParts[0]);","lastModifiedDate":"2024-03-10"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"            integerTimes[1] \u003d Integer.parseInt(stringTimeParts[1]);","lastModifiedDate":"2024-03-10"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"        } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"            throw new CustomExceptions.InvalidInput(Constant.INVALID_RUN_TIME);","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"        return integerTimes;","lastModifiedDate":"2024-03-10"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"     * Method checks if hour has been specified, then returns total seconds.","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"     * @return The total number of seconds in the run.","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"    public int calculateTotalSeconds() {","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"        int totalSeconds;","lastModifiedDate":"2024-03-10"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"        if (this.isHourPresent) {","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"            totalSeconds \u003d this.times[0] * 3600 + this.times[1] * 60  + this.times[2];","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"        } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"            totalSeconds \u003d this.times[0] * 60 + this.times[1];","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"        return totalSeconds;","lastModifiedDate":"2024-03-10"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"     * Method calculates the pace of the run.","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"rouvinerh"},"content":"     * @return","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"    public String calculatePace() {","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"        int totalSeconds \u003d calculateTotalSeconds();","lastModifiedDate":"2024-03-10"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"        double paceInDecimal \u003d ((double) totalSeconds / this.distance) / 60;","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"        int minutes \u003d (int) paceInDecimal;","lastModifiedDate":"2024-03-10"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"        double remainingSeconds \u003d paceInDecimal - minutes;","lastModifiedDate":"2024-03-10"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"        int seconds \u003d (int) Math.round(remainingSeconds * 60);","lastModifiedDate":"2024-03-10"},{"lineNumber":102,"author":{"gitId":"rouvinerh"},"content":"        return String.format(\"%d:%02d/km\", minutes, seconds);","lastModifiedDate":"2024-03-10"},{"lineNumber":103,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"     * Method overrides the Workout toString() for specific run formatting","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"     * run  mm:ss  distance  pace","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"     * e.g. run  30:10   60:3   30:01/km","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"JustinSoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"JustinSoh"},"content":"        String printedDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"        if (date !\u003d null){","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"            printedDate \u003d date.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"rouvinerh"},"content":"        } else{","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"            printedDate \u003d Constant.NO_DATE_SPECIFIED;","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"        return String.format(Constant.RUN_FORMAT, Constant.RUN, getTimes(), getDistance(), getPace(), printedDate);","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"JustinSoh":22,"rouvinerh":101}},{"path":"src/main/java/workouts/Workout.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import utility.Parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"public abstract class Workout {","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"    protected LocalDate date \u003d null;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"    public Workout(String stringDate) {","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"        this.date \u003d Parser.parseDate(stringDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    // overloaded constructor for optional date parameter","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"    public Workout() {","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"        return date;","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"    public String toString(){","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"        return getDate().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"JustinSoh":12,"rouvinerh":17}},{"path":"src/main/java/workouts/WorkoutList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"public class WorkoutList extends ArrayList\u003cWorkout\u003e {","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    private static final ArrayList\u003cWorkout\u003e workouts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    private static final ArrayList\u003cWorkout\u003e runs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"     * Adds a workout to the list of workouts whenever addRun is called","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"     * @param workout Workout object","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    private static void addWorkout(Workout workout) {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"        workouts.add(workout);","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"     * Adds a run to the list of runs and to the main workout list too","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"     * @param run Run object","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    public static void addRun(Run run) {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"        runs.add(run);","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"        addWorkout(run);","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"     * Returns a list of workouts based on the filter","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"     * @param filter can be \"all\", \"run\" or \"gym\"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"     *               \"all\" returns all workouts","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"     *               \"run\" returns only runs","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"     *               \"gym\" returns only gym workouts","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"     * @return ArrayList of workouts","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"    public static ArrayList\u003cWorkout\u003e getWorkouts(String filter)","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"            throws CustomExceptions.OutOfBounds,","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"            CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"        if(!filter.equals(Constant.ALL) \u0026\u0026 !filter.equals(Constant.RUN) \u0026\u0026 !filter.equals(Constant.GYM)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(Constant.INVALID_PRINT_HISTORY_FILTER);","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"        if(filter.equals(Constant.RUN) \u0026\u0026 runs.isEmpty()){","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.OutOfBounds(Constant.NO_RUNS_FOUND);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"        if(filter.equals(Constant.ALL) \u0026\u0026 workouts.isEmpty()){","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.OutOfBounds(Constant.NO_HISTORY_FOUND);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"        if(filter.equals(Constant.RUN)){","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"            return runs;","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"        } else {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"            return workouts;","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"    public static Run getLatestRun() throws CustomExceptions.OutOfBounds {","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"        if (runs.isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.OutOfBounds(Constant.NO_RUNS_FOUND);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"        return (Run) runs.get(runs.size() - 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"    public static int getRunSize() {","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"        return runs.size();","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"    public static void clearWorkoutsAndRun() {","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"        workouts.clear();","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"        runs.clear();","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"JustinSoh":67,"rouvinerh":12}},{"path":"src/test/java/health/BmiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"package health;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"class BmiTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"    void setUpStreams() {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"    @AfterEach","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"    void restoreStreams() {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"    void calculateBMI_heightWeight_printsCorrectBMIAndCategory() {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"        // Arrange","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"        Bmi bmi \u003d new Bmi(\"1.75\", \"70.0\");","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"        String expected \u003d \"Your BMI is 22.86\"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"                + \"Great! You\u0027re within normal range.\"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"        // Act","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"        System.out.println(bmi);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"        // Assert","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"    void printBMICategory_underweight_printsCorrectCategory() {","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"        // Arrange","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"        String expected \u003d \"You\u0027re underweight.\" + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"        // Act","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"        System.out.println(Bmi.getBmiCategory(17.5));","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"        // Assert","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"    void printBMICategory_normal_printsCorrectCategory() {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"        // Arrange","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"        String expected \u003d \"Great! You\u0027re within normal range.\" + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"        // Act","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"        System.out.println(Bmi.getBmiCategory(22.0));","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"        // Assert","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"j013n3"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"j013n3"},"content":"    void printBMICategory_overweight_printsCorrectCategory() {","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"j013n3"},"content":"        // Arrange","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"j013n3"},"content":"        String expected \u003d \"You\u0027re overweight.\" + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"j013n3"},"content":"        // Act","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"syj02"},"content":"        System.out.println(Bmi.getBmiCategory(27.0));","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"j013n3"},"content":"        // Assert","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"j013n3"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"j013n3"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"j013n3"},"content":"    void printBMICategory_obese_printsCorrectCategory() {","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"j013n3"},"content":"        // Arrange","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"j013n3"},"content":"        String expected \u003d \"You\u0027re obese.\" + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"j013n3"},"content":"        // Act","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"syj02"},"content":"        System.out.println(Bmi.getBmiCategory(32.0));","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"j013n3"},"content":"        // Assert","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"j013n3"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"j013n3"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"j013n3"},"content":"    void printBMICategory_severelyObese_printsCorrectCategory() {","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"j013n3"},"content":"        // Arrange","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"j013n3"},"content":"        String expected \u003d \"You\u0027re severely obese.\" + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"j013n3"},"content":"        // Act","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"syj02"},"content":"        System.out.println(Bmi.getBmiCategory(40.0));","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"j013n3"},"content":"        // Assert","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"j013n3"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"syj02"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"syj02"},"content":"    void showCurrentBmi_printsCorrectCurrentBmi() {","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"syj02"},"content":"        // Arrange","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"syj02"},"content":"        Bmi bmi \u003d new Bmi(\"1.71\", \"60.5\");","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"syj02"},"content":"        HealthList.addBmi(bmi);","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"syj02"},"content":"        String expected \u003d \"Your BMI is 20.69\"","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"syj02"},"content":"                + \"Great! You\u0027re within normal range.\"","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator();","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"syj02"},"content":"        // Act","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"syj02"},"content":"        HealthList.showCurrentBmi();","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"syj02"},"content":"        // Assert","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"syj02"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"j013n3":33,"syj02":87}},{"path":"src/test/java/storage/LogFileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"class LogFileTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    void initializeLogFile_noInput_logFileHandlerNotNull() {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"        LogFile logTest \u003d new LogFile();","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"        assertNotNull(logTest.logFileHandler);","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"rouvinerh":14}},{"path":"src/test/java/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raajamani"},"content":"package storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"raajamani"},"content":"public class StorageTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"raajamani"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"raajamani"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"raajamani"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"raajamani":5}},{"path":"src/test/java/ui/HandlerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package ui;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"class HandlerTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"    @AfterEach","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"    void getRun_validInput_expectCorrectParsing() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"        // Test Setup","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"        String input \u003d \"new /e:run /d:10.3 /t:00:40:10 /date:15/03/2024\";","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"        // Exercise","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"        String[] result \u003d Handler.getRun(input);","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"        // Verify","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"        assertArrayEquals(new String[]{\"run\", \"10.3\", \"00:40:10\", \"15/03/2024\"}, result);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"    void getRun_missingParameter_expectException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"        // Test Setup","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"        String input \u003d \"new /e:run /d:10.3\"; // Missing /t parameter","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"        // Exercise and Verify","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e Handler.getRun(input));","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"     * Test the behavior of the checkTypeOfExercise method when the user input is valid.","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"     * Expected behavior is to return {@code Constant.RUN} or {@code Constant.GYM}","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"     * Does not expect EXCEPTION to be thrown.","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"    void checkTypeOfExercise_correctUserInput_expectRunOrGym() {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"            String input1 \u003d \"new /e:run /d:10.3 /t:00:40:10 /date:15/03/2024\";","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"            String expected1 \u003d Constant.RUN;","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"            String result1 \u003d Handler.checkTypeOfExercise(input1);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result1, expected1);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"            String input2 \u003d \"new /e:gym /n:4\";","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"            String expected2 \u003d Constant.GYM;","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"            String result2 \u003d Handler.checkTypeOfExercise(input2);","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result2, expected2);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"            // with capital letter","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"            String input3 \u003d \"NEW /E:run /D:10.3 /T:00:40:10 /Date:15/03/2024\";","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"            String expected3 \u003d Constant.RUN;","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"            String result3 \u003d Handler.checkTypeOfExercise(input3);","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result3, expected3);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"            String input4 \u003d \"NEW /E:gym /N:4\";","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"            String expected4 \u003d Constant.GYM;","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"            String result4 \u003d Handler.checkTypeOfExercise(input4);","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result4, expected4);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"            // exercises in captial letter","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"            String input5 \u003d \"NEW /E:RUN /D:10.3 /T:00:40:10 /Date:15/03/2024\";","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"            String expected5 \u003d Constant.RUN;","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"            String result5 \u003d Handler.checkTypeOfExercise(input5);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result5, expected5);","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"            String input6 \u003d \"NEW /E:GYM /N:4\";","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"            String expected6 \u003d Constant.GYM;","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"            String result6 \u003d Handler.checkTypeOfExercise(input6);","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result6, expected6);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.InvalidInput | CustomExceptions.InsufficientInput e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"            fail(e.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"JustinSoh"},"content":"     * Test the behavior of the checkTypeOfExercise method when the user input has invalid parameters.","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"JustinSoh"},"content":"     * Expected behavior is to raise {@code InvalidInput} exception.","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"     * Does not test for insufficient parameters.","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"     * Refer to {@code checkTypeOfExercise_insufficientUserInput_throwInsufficientInput()} for that.","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"    void checkTypeOfExercise_invalidUserInput_throwInvalidInput() {","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"        // with invalid exercise type","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"        String input1 \u003d \"new /e\";","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input1);","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"        // with invalid exercise type","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"        String input2 \u003d \"new /e:wrong /d:10.3 /t:00:40:10 /date:15/03/2024\";","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input2);","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"        // with invalid exercise type","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"        String input3 \u003d \"new /e:gymm /d:10.3 /t:00:40:10 /date:15/03/2024\";","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input3);","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"        // with invalid format","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"        String input4 \u003d \"new /e-gymm /d-10.3 /t:00:40:10 /date:15/03/2024\";","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input4);","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"JustinSoh"},"content":"        // with wrong slash","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"        String input5 \u003d \"new \\\\e:run \\\\d:30:10 \\\\t:00:20:10 \\\\date:15/03/2024\";","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input5);","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"JustinSoh"},"content":"     * Test the behavior of the checkTypeOfExercise method when the user input has insufficient parameters.","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"JustinSoh"},"content":"     * Expected behavior is to raise {@code InsufficientInput} exception.","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"JustinSoh"},"content":"     * Does not test for invalid values.","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"JustinSoh"},"content":"     * Refer to {@code checkTypeOfExercise_invalidUserInput_throwInvalidInput()} for that.","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"JustinSoh"},"content":"    void checkTypeOfExercise_insufficientUserInput_throwInsufficientInput() {","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"JustinSoh"},"content":"        // without distance, time, and date","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"JustinSoh"},"content":"        String input2 \u003d \"new /e:run\";","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InsufficientInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input2);","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"JustinSoh"},"content":"        // without time and date","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"JustinSoh"},"content":"        String input3 \u003d \"new /e:run /d:10.3\";","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InsufficientInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input3);","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"JustinSoh"},"content":"        // without the date","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"JustinSoh"},"content":"        String input4 \u003d \"new /e:run /d:30:10 /t:00:20:10\";","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InsufficientInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input4);","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"JustinSoh":127,"rouvinerh":1,"L5-Z":39}},{"path":"src/test/java/ui/OutputTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package ui;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"import workouts.Run;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"import workouts.WorkoutList;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"class OutputTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    private static final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"    private static final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"    private static final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"    private static final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    @BeforeAll","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"    public static void setUpStreams() {","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"    private static void cleanup() {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"        WorkoutList.clearWorkoutsAndRun();","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"        outContent.reset();","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"    @AfterAll","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"    public static void restoreStreams() {","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"    void printHistory_runsOnly_expectAllRunsPrinted() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"        new Run(\"40:10\", \"10.3\", \"15/03/2024\");","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"        new Run(\"01:59:10\", \"15.3\");","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"        String expected \u003d Constant.PARTITION_LINE + \"\\n\" +","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"                \"Index\\t\\tType\\tTime\\t\\tDistance\\tPace\\t\\tDate\\n\" +","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"                \"1.\\t\\t\\trun \\t40:10\\t\\t10.3\\t\\t3:54/km\\t\\t2024-03-15\\n\" +","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"                \"2.\\t\\t\\trun \\t1:59:10\\t\\t15.3\\t\\t7:47/km\\t\\tNA\\n\" +","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"                Constant.PARTITION_LINE + \"\\n\";","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"        expected \u003d expected.replaceAll(\"\\\\n|\\\\r\\\\n\", System.lineSeparator());","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"        Output.printHistory(\"run\");","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"        cleanup();","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"    void printHistory_invalidHistoryFilter_throwError() {","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"        String expected \u003d Constant.PARTITION_LINE + \"\\n\" +","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"                \"\\u001B[31mError: Invalid filter! Filter is only \u0027all\u0027, \u0027run\u0027 or \u0027gym\u0027\\u001B[0m\" + \"\\n\" +","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"                Constant.PARTITION_LINE + \"\\n\";","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"        expected \u003d expected.replaceAll(\"\\\\n|\\\\r\\\\n\", System.lineSeparator());","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"        Output.printHistory(\"invalidFilter\");","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"        cleanup();","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"    void printLatestRun_oneRun_expectOneRunPrinted() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"        // Test Setup","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"        new Run(\"40:10\", \"10.3\");","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"        String expected \u003d Constant.PARTITION_LINE + \"\\n\" +","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"                \"Index\\t\\tType\\tTime\\t\\tDistance\\tPace\\t\\tDate\\n\" +","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"                \"1.\\t\\t\\trun \\t40:10\\t\\t10.3\\t\\t3:54/km\\t\\tNA\\n\" +","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"                Constant.PARTITION_LINE + \"\\n\";","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"        expected \u003d expected.replaceAll(\"\\\\n|\\\\r\\\\n\", System.lineSeparator());","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"        Output.printLatestRun();","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"        cleanup();","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"    void printLatestRun_noRun_expectNoRunMessage() {","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"        // Test Setup","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"        String expected \u003d Constant.PARTITION_LINE + \"\\n\" +","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"                \"\\u001B[31mError: No runs found! You need to add a run first!\\u001B[0m\\n\" +","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"                Constant.PARTITION_LINE + \"\\n\";","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"        expected \u003d expected.replaceAll(\"\\\\n|\\\\r\\\\n\", System.lineSeparator());","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"        Output.printLatestRun();","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"        cleanup();","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"JustinSoh":64,"rouvinerh":32}},{"path":"src/test/java/utility/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package utility;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"class ParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"    void parseDate_correctDateInput_returnDate() {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"        LocalDate result \u003d Parser.parseDate(\"08/03/2024\");","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"        LocalDate expected \u003d LocalDate.of(2024, 3, 8);","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"    void parseDate_incorrectDateInput_throwException () {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"        System.setErr(new PrintStream(outputStream));","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"        String invalidDate \u003d \"2024-03-08\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"        Parser.parseDate(invalidDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"        String errorMessage \u003d outputStream.toString().trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"        assertTrue(errorMessage.contains(\"Error parsing date\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"        System.setErr(System.err);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"rouvinerh":31}},{"path":"src/test/java/workouts/RunTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"class RunTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of parsing a time string with hours into an integer array.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    void parseTime_correctInputWithHours_returnListOfTimes() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"        String testTime \u003d \"01:59:10\";","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"        Run runTest \u003d new Run(testTime, \"15.3\");","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"        Integer[] result \u003d runTest.parseTime(testTime);","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"        Integer[] expected \u003d {1, 59, 10};","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"        for (int i \u003d 0; i \u003c Constant.MAX_RUNTIME_ARRAY_LENGTH; i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"            assertEquals(result[i], expected[i]);","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"        WorkoutList.clearWorkoutsAndRun();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of parsing a time string without hours into an integer array.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"    void parseTime_correctInputWithOutHours_returnListOfTimes() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"        String testTime \u003d \"50:52\";","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"        Run runTest \u003d new Run(testTime, \"15.3\");","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"        Integer[] result \u003d runTest.parseTime(\"50:52\");","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"        Integer[] expected \u003d {50, 52};","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"        for (int i \u003d 0; i \u003c Constant.MIN_RUNTIME_ARRAY_LENGTH; i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"            assertEquals(result[i], expected[i]);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"        WorkoutList.clearWorkoutsAndRun();","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"     * Test the behaviour of an incorrect time string being passed in for the run.","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"    void parseTime_wrongInput_throwInvalidInputForRun() {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"        String testTime \u003d \"50\";","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e new Run(testTime, \"15.3\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of calculating the total seconds taken for the run.","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"    void calculateSeconds_correctInput_returnTotalSeconds() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"        Run testRun \u003d new Run(\"01:05:42\", \"10.3\");","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"        int result \u003d testRun.calculateTotalSeconds();","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"        int expected \u003d 3942;","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(result, expected);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"        WorkoutList.clearWorkoutsAndRun();","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of calculating and returning a string representing the pace for the run.","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"    void calculatePace_correctInput_returnPace() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"        Run testRun \u003d new Run(\"1:20:10\", \"10.3\");","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"        String result \u003d testRun.calculatePace();","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"        String expected \u003d\"7:47/km\";","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(result, expected);","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"        WorkoutList.clearWorkoutsAndRun();","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"rouvinerh":74}},{"path":"src/test/java/workouts/WorkoutListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import utility.Constant;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"class WorkoutListTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"    void setUp() {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"    @AfterEach","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"    void tearDown() {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"        WorkoutList.clearWorkoutsAndRun();","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of adding a new run to the run list.","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"     * Verifies whether the newly added run is correctly reflected in the run and WorkoutList.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    void addRun_normalInput_expectAppend()  {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"            Run inputRun \u003d new Run(\"40:10\", \"10.3\", \"15/03/2024\");","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"            WorkoutList.addRun(inputRun);","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"            ArrayList\u003cWorkout\u003e runList \u003d WorkoutList.getWorkouts(Constant.RUN);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"            ArrayList\u003cWorkout\u003e workoutList \u003d WorkoutList.getWorkouts(Constant.ALL);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"            Workout expectedRun \u003d runList.get(runList.size() - 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"            Workout expectedWorkout \u003d workoutList.get(runList.size() - 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(inputRun, expectedRun);","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(inputRun, expectedWorkout);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.OutOfBounds e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"            fail(\"Should not throw an exception\");","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.InvalidInput e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"            fail(\"Should not throw an exception.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of getting the workout list with {@code RUN} , {@code ALL}","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"     * Verifies whether the method is able to correct retrieve the list of workouts.","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"    void getWorkouts_properInput_expectRetrievalRun() {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"            ArrayList\u003cRun\u003e inputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"            inputList.add(new Run(\"40:10\", \"10.3\", \"15/03/2024\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"            inputList.add(new Run(\"30:10\", \"20.3\", \"30/03/2023\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"            ArrayList\u003cWorkout\u003e runList \u003d WorkoutList.getWorkouts(Constant.RUN);","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"            for(int i \u003d 0; i \u003c inputList.size(); i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"                Run expected \u003d inputList.get(i);","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"                Run actual \u003d (Run) runList.get(i);","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"                assertEquals(expected, actual);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.OutOfBounds | CustomExceptions.InvalidInput e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"            fail(\"Should not throw an exception.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of getting the workout list with {@code RUN} , {@code ALL}","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"     * Verifies whether the method is able to correct retrieve the list of workouts.","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"    void getWorkouts_improperFilters_throwInvalidInput() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"        ArrayList\u003cWorkout\u003e inputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"        inputList.add(new Run(\"40:10\", \"10.3\", \"15/03/2024\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"        inputList.add(new Run(\"30:10\", \"20.3\", \"30/03/2023\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"            ArrayList\u003cWorkout\u003e runList \u003d WorkoutList.getWorkouts(\"invalidFilter\");","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of getting an empty workout list","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"     * Expected behaviour is to raise {@code OutOfBounds} exception.","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"    void getWorkouts_emptyList_throwOutOfBoundsForRun() {","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.OutOfBounds.class, () -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"JustinSoh"},"content":"            WorkoutList.getWorkouts(Constant.RUN);","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of getting an empty run list","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"     * Expected behaviour is to raise {@code OutOfBounds} exception.","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"    void getWorkouts_emptyList_throwOutOfBoundsForAll() {","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.OutOfBounds.class, () -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"JustinSoh"},"content":"            WorkoutList.getWorkouts(Constant.ALL);","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of getting the latest run from the run list.","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"     * Expected behavior is for {@code actual} to equal to the {@code secondRun}","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"    void getLatestRun_properList_correctRetrieval() {","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"            new Run(\"20:10\", \"10.3\", \"15/03/2024\");","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"            Run secondRun \u003d new Run(\"20:10\", \"10.3\", \"15/03/2024\");","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"            Run actual \u003d WorkoutList.getLatestRun();","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(secondRun, actual);","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"rouvinerh"},"content":"        } catch (CustomExceptions.OutOfBounds | CustomExceptions.InvalidInput e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"            fail(\"Should not throw an exception\");","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"JustinSoh"},"content":"     * Test the behaviour when you try to get the latest run from an empty list.","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"     * Expected behaviour is to raise {@code OutOfBounds} exception.","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"JustinSoh"},"content":"    void getLatestRun_emptyList_throwOutOfBound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"JustinSoh"},"content":"        // Call the method or code that should throw the exception","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.OutOfBounds.class, WorkoutList::getLatestRun);","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"JustinSoh":138,"rouvinerh":4}},{"path":"src/test/java/workouts/WorkoutTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"class WorkoutTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"rouvinerh":5}}]
