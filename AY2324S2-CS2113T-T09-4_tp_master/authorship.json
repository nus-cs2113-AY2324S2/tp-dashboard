[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"    mainClass.set(\"seedu.pulsepilot.PulsePilot\")","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"    archiveBaseName.set(\"pulsepilot\")","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JustinSoh":1,"rouvinerh":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |    Name    |             Github Profile             | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"--------|:----------:|:--------------------------------------:|:---------:","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Justin Soh | [Github](https://github.com/JustinSoh) | [Portfolio](https://justinsoh.github.io/)","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Rouvin Erh | [Github](https://github.com/rouvinerh) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alfaatih | [Github](https://github.com/L5-Z) | [Portfolio](https://l5-z.github.io)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"j013n3"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Jolene  | [Github](https://github.com/j013n3) | [Portfolio](docs/team/j013n3.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ying Jia | [Github](https://github.com/syj02) | [Portfolio](docs/team/syj02.md)","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"j013n3":1,"JustinSoh":2,"rouvinerh":1,"L5-Z":1,"syj02":1,"-":3}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"# PulsePilot","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"rouvinerh":1,"-":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"PulsePilot is a **desktop app for tracking health-related information, optimised for users via a Command Line Interface (CLI)**. If one can type fast, you can key in and track health-related information faster than traditional GUI applications installed on your phone or computer.","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"* [Notes About Command Format](#notes-about-command-format)","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"* [Commands](#commands)","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"  * [Workout: Run](#workout-run)","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"  * [Workout: Gym](#workout-gym)","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    * [Adding Gym Stations](#adding-gym-stations)","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"  * [Health: BMI](#health-bmi)","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"  * [Health: Period](#health-period)","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"  * [History](#history)","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"  * [Latest](#latest)","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"  * [Help](#help)","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"  * [Exit](#exit)","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"* [Logging](#logging)","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"* [Saving Data](#saving-data)","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"* [Frequently Asked Questions (FAQ)](#faq)","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"1. Ensure that you have the latest Java 11.","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"2. Download the latest `pulsepilot.jar`.","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"3. Copy the file to the folder you want to use as the home folder for PulsePilot.","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"4. Open a command terminal (either cmd.exe or bash), cd to the folder with `pulsepilot.jar` in it, and use `java -jar pulsepilot.jar` to run the application.","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"5. The welcome message for PulsePilot should be printed to the screen.","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"6. Type commands in the command line and press Enter to execute it. Using `help` and pressing Enter will print the help message.","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"The bot will prompt you for your name before starting. ","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":" _              _","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"|_)    |  _  _ |_) o  |  _ _|_","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"|  |_| | _\u003e (/_|   |  | (_) |_","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"Engaging orbital thrusters...","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"PulsePilot on standby","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"What is your name, voyager?","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"Jason","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"Welcome aboard, Captain Jason","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"Tips: Enter \u0027help\u0027 to view the pilot manual!","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"Initiating FTL jump sequence...","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"FTL jump completed.","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"Terminal primed. Command inputs are now accepted...","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"## Notes About Command Format","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"* Parameters in `UPPER_CASE` are the parameters to be **supplied by the user**.","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"* Parameters in square brackets are optional.","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"  * `[/d:DATE]` means that the `DATE` parameter is **optional**.","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"## Commands","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"### Workout: Run","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"Adds a new Run workout to track. ","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"Format: `new /e:run /d:DISTANCE /t:TIME [/date:DATE]`","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"* All parameters must be provided in correct order as shown above.","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"* `DISTANCE` is a **2 decimal point positive number** (i.e. `15.24`) representing the distance ran.","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"* `TIME` is in `[HH]:MM:SS` format (i.e. `25:30`). The `HH` representing hours is **optional**.","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"* `DATE` is in `DD-MM-YYYY` format (i.e. `19-03-2024`).","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"Examples: `new /e:run /d:5.24 /t:25:23 /date:19-03-2024`","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"new /e:run /d:5.24 /t:25:23 /date:19-03-2024","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"Successfully added a new run session","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"Type\tTime\t\tDistance\tPace\t\tDate","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"run \t25:23\t\t5.24\t\t4:51/km\t\t2024-03-19","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"### Workout: Gym","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"Adds a new gym session to track. ","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"rouvinerh"},"content":"Format: `new /e:gym /n:NUMBER_OF_STATIONS`","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"* All parameters must be provided in correct order as shown above.","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"* `NUMBER_OF_STATIONS` is a **positive integer**  representing the number of stations for one Gym session.","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"Examples: `new /e:gym /n:2`","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"#### Adding Gym Stations","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"rouvinerh"},"content":"Upon entry of the `new /e:gym` command, the bot will prompt for further details for each station done:","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"rouvinerh"},"content":"Format: `STATION_NAME /s:SET /r:REPS /w:WEIGHT`","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"rouvinerh"},"content":"* All parameters must be provided in correct order as shown above.","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"rouvinerh"},"content":"* `STATION_NAME` is a **string**  representing the name of the gym station.","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"rouvinerh"},"content":"* `SET` is a **positive integer**  representing the number of sets done for one station.","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"rouvinerh"},"content":"* `REPS` is a **positive integer**  representing the number of repetitions done for one station.","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"rouvinerh"},"content":"* `WEIGHT` is a **positive integer**  representing the weight used for one station.","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"rouvinerh"},"content":"Examples: `Bench Press /s:4 /r:10 /w:75`","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"rouvinerh"},"content":"new /e:gym /n:2","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"rouvinerh"},"content":"Please enter the details of station 1. (Format: [name of exercise:string] /s:[sets:number] /r:[reps:number] /w:[weights:number])","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"rouvinerh"},"content":"Bench Press /s:4 /r:10 /w:5","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"rouvinerh"},"content":"Please enter the details of station 2. (Format: [name of exercise:string] /s:[sets:number] /r:[reps:number] /w:[weights:number])","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"rouvinerh"},"content":"Squat /s:4 /r:5 /w:100","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"rouvinerh"},"content":"Successfully added a new gym session","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"rouvinerh"},"content":"Bench Press: 4 sets of 10 reps at 5 KG","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"rouvinerh"},"content":"Squat: 4 sets of 5 reps at 100 KG","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"rouvinerh"},"content":"### Health: BMI","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"j013n3"},"content":"Calculates user\u0027s Body Mass Index (BMI).","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"rouvinerh"},"content":"Format: `health /h:bmi /height:HEIGHT /weight:WEIGHT /date:DATE`","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"j013n3"},"content":"* All parameters must be provided in correct order as shown above.","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"rouvinerh"},"content":"* `HEIGHT` is a **2 decimal point number in metres** (i.e. `1.71`) representing the user\u0027s height.","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"rouvinerh"},"content":"* `WEIGHT` is a **2 decimal point number in kilograms** (i.e. `60.50`) representing the user’s weight.","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"j013n3"},"content":"* `DATE` is in `DD-MM-YYYY` format (i.e. `19-03-2024`).","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"j013n3"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"rouvinerh"},"content":"* `health /h:bmi /height:1.70 /weight:75.42 /date:19-03-2024`","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"j013n3"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"rouvinerh"},"content":"health /h:bmi /height:1.70 /weight:75.42 /date:19-03-2024","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"rouvinerh"},"content":"Added: bmi | 1.70 | 75.42 | 19-03-2024","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"j013n3"},"content":"2024-03-19","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"rouvinerh"},"content":"Your BMI is 26.1","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"rouvinerh"},"content":"You\u0027re overweight.","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"j013n3"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"rouvinerh"},"content":"### Health: Period","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":159,"author":{"gitId":"j013n3"},"content":"Tracks the start and end of user\u0027s menstrual cycle.","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"rouvinerh"},"content":"Format: `health /h:period /start:START_DATE /end:END_DATE`","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"j013n3"},"content":"* All parameters must be provided in correct order as shown above.","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"rouvinerh"},"content":"* `START_DATE` is `DD-MM-YYYY` format (i.e. `19-03-2024`) representing the start of a cycle.","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"rouvinerh"},"content":"* `END_DATE` is a `DD-MM-YYYY` format (i.e. `19-03-2024`) representing the end of a cycle.","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"j013n3"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"rouvinerh"},"content":"* `health /h:period /start:09-03-2022 /end:16-03-2022`","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"rouvinerh"},"content":"health /h:period /start:09-03-2022 /end:16-03-2022","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"rouvinerh"},"content":"Added: period | 09-03-2022 | 16-03-2022","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"rouvinerh"},"content":"Period Start: 2022-03-09 Period End: 2022-03-16","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"rouvinerh"},"content":"Period Length: 8 days","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"j013n3"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"rouvinerh"},"content":"### History","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"rouvinerh"},"content":"Prints all tracked instances of `run`, `gym`, `bmi` or `period`.","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"rouvinerh"},"content":"Format: `history /view:TYPE`","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"rouvinerh"},"content":"* `TYPE` is either `run`, `gym`, `bmi` or `period`.","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"rouvinerh"},"content":"Examples:","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"rouvinerh"},"content":"* `history /view:run`","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"rouvinerh"},"content":"history /view:run","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"rouvinerh"},"content":"Index\t\tType\tTime\t\tDistance\tPace\t\tDate","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"rouvinerh"},"content":"1.\t\trun \t25:00\t\t5.00\t\t5:00/km\t\t2024-03-17","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"rouvinerh"},"content":"2.\t\trun \t25:23\t\t5.24\t\t4:51/km\t\t2024-03-18","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"rouvinerh"},"content":"3.\t\trun \t25:23\t\t5.24\t\t4:51/km\t\t2024-03-19","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"j013n3"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"rouvinerh"},"content":"### Latest","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"rouvinerh"},"content":"Prints the latest instance of `run`, `gym`, `bmi` or `period`.","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"rouvinerh"},"content":"Format: `latest /view:TYPE`","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"rouvinerh"},"content":"* `TYPE` is either `run`, `gym`, `bmi` or `period`.","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"rouvinerh"},"content":"Examples:","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"rouvinerh"},"content":"* `latest /view:run`","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"rouvinerh"},"content":"latest /view:period","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"rouvinerh"},"content":"Period Start: 2022-03-09 Period End: 2022-03-16","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"rouvinerh"},"content":"Period Length: 8 days","lastModifiedDate":"2024-03-20"},{"lineNumber":221,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"rouvinerh"},"content":"### Help","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"rouvinerh"},"content":"Prints the `help` message. ","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"rouvinerh"},"content":"Format: `help`","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"rouvinerh"},"content":"Expected output:","lastModifiedDate":"2024-03-20"},{"lineNumber":231,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"rouvinerh"},"content":"help","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"rouvinerh"},"content":"Commands List:","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":237,"author":{"gitId":"rouvinerh"},"content":"new /e:run /d:DISTANCE /t:TIME [/date:DATE] - Add a new run","lastModifiedDate":"2024-03-20"},{"lineNumber":238,"author":{"gitId":"rouvinerh"},"content":"new /e:gym /n:NUMBER_OF_STATIONS [/date:DATE] - Add a new gym workout","lastModifiedDate":"2024-03-20"},{"lineNumber":239,"author":{"gitId":"rouvinerh"},"content":"health /h:bmi /height:HEIGHT /weight:WEIGHT /date:DATE - Add new BMI data","lastModifiedDate":"2024-03-20"},{"lineNumber":240,"author":{"gitId":"rouvinerh"},"content":"health /h:period /start:START_DATE /end:END_DATE - Add new period data","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"rouvinerh"},"content":"history /view:[run/gym/bmi/period] - Show history of runs/gyms/bmi records/periods tracked","lastModifiedDate":"2024-03-20"},{"lineNumber":242,"author":{"gitId":"rouvinerh"},"content":"latest /view:[run/gym/bmi/period] - Show history of runs/gyms/bmi records/periods tracked","lastModifiedDate":"2024-03-20"},{"lineNumber":243,"author":{"gitId":"rouvinerh"},"content":"help - Show this help message","lastModifiedDate":"2024-03-20"},{"lineNumber":244,"author":{"gitId":"rouvinerh"},"content":"exit - Exit the program","lastModifiedDate":"2024-03-20"},{"lineNumber":245,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":247,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":248,"author":{"gitId":"rouvinerh"},"content":"### Exit","lastModifiedDate":"2024-03-20"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"rouvinerh"},"content":"Exits the bot gracefully.","lastModifiedDate":"2024-03-20"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":252,"author":{"gitId":"rouvinerh"},"content":"Format: `exit`","lastModifiedDate":"2024-03-20"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":254,"author":{"gitId":"rouvinerh"},"content":"Expected Output:","lastModifiedDate":"2024-03-20"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":256,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":257,"author":{"gitId":"rouvinerh"},"content":"exit","lastModifiedDate":"2024-03-20"},{"lineNumber":258,"author":{"gitId":"rouvinerh"},"content":"Initiating PulsePilot landing sequence...","lastModifiedDate":"2024-03-20"},{"lineNumber":259,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":260,"author":{"gitId":"rouvinerh"},"content":"PulsePilot successful touchdown","lastModifiedDate":"2024-03-20"},{"lineNumber":261,"author":{"gitId":"rouvinerh"},"content":"See you soon, Captain!","lastModifiedDate":"2024-03-20"},{"lineNumber":262,"author":{"gitId":"rouvinerh"},"content":"____________________________________________________________","lastModifiedDate":"2024-03-20"},{"lineNumber":263,"author":{"gitId":"rouvinerh"},"content":"```","lastModifiedDate":"2024-03-20"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":265,"author":{"gitId":"rouvinerh"},"content":"## Logging","lastModifiedDate":"2024-03-20"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":267,"author":{"gitId":"rouvinerh"},"content":"The latest logs are written to `pulsepilot_log.txt` once the bot exits. Each time the bot is run, the current `pulsepilot_log.txt` file is overwritten with the most recent logs. The logs record both info messages and any error messages.","lastModifiedDate":"2024-03-20"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":269,"author":{"gitId":"rouvinerh"},"content":"## Saving Data","lastModifiedDate":"2024-03-20"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":271,"author":{"gitId":"rouvinerh"},"content":"As of now, the bot does not write or read from any file. This feature will be implemented in v2.0. ","lastModifiedDate":"2024-03-20"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":273,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":275,"author":{"gitId":"rouvinerh"},"content":"**1.** How do I transfer my data to another computer?","lastModifiedDate":"2024-03-16"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":277,"author":{"gitId":"rouvinerh"},"content":"As of now, it is not possible to do so. This feature will be implemented in `v2.0`. ","lastModifiedDate":"2024-03-20"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":279,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":281,"author":{"gitId":"rouvinerh"},"content":"| Action       | Format, Examples                                                                                                                     |","lastModifiedDate":"2024-03-16"},{"lineNumber":282,"author":{"gitId":"rouvinerh"},"content":"|--------------|--------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-20"},{"lineNumber":283,"author":{"gitId":"rouvinerh"},"content":"| Print help   | `help`                                                                                                                               |","lastModifiedDate":"2024-03-20"},{"lineNumber":284,"author":{"gitId":"rouvinerh"},"content":"| Add new run  | `new /e:run /d:DISTANCE /t:TIME [/date:DATE]`\u003cbr/\u003eExample: `new /e:run /d:5.24 /t:25:23 /date:19-03-2024`                            |","lastModifiedDate":"2024-03-20"},{"lineNumber":285,"author":{"gitId":"rouvinerh"},"content":"| Add gym      | `new /e:gym /n:NUMBER_OF_STATIONS`\u003cbr/\u003eExample:`new /e:gym /n:4`                                                                     |","lastModifiedDate":"2024-03-20"},{"lineNumber":286,"author":{"gitId":"rouvinerh"},"content":"| Track BMI    | `health /h:bmi /height:HEIGHT /weight:WEIGHT /date:DATE` \u003cbr/\u003eExample:   `health /h:bmi /height:1.70 /weight:75.42 /date:19-03-2024` |","lastModifiedDate":"2024-03-20"},{"lineNumber":287,"author":{"gitId":"rouvinerh"},"content":"| Track Period | `health /h:period /start:START_DATE /end:END_DATE` \u003cbr/\u003eExample:   `health /h:period /start:09-03-2022 /end:16-03-2022`              |","lastModifiedDate":"2024-03-20"},{"lineNumber":288,"author":{"gitId":"rouvinerh"},"content":"| View history | `history /view:TYPE` \u003cbr/\u003eExample:   `history /view:run`                                                                             |","lastModifiedDate":"2024-03-20"},{"lineNumber":289,"author":{"gitId":"rouvinerh"},"content":"| View latest  | `latest /view:TYPE` \u003cbr/\u003eExample:   `latest /view:bmi`                                                                               |","lastModifiedDate":"2024-03-20"},{"lineNumber":290,"author":{"gitId":"rouvinerh"},"content":"| Exit bot     | `exit`                                                                                                                               |","lastModifiedDate":"2024-03-20"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"j013n3":20,"rouvinerh":238,"-":33}},{"path":"src/main/java/health/Bmi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"j013n3"},"content":"package health;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import utility.Parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"j013n3"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"j013n3"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"j013n3"},"content":" * The Bmi class extends the Health class and provides functionality to calculate","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"j013n3"},"content":" * and categorise the Body Mass Index based on user\u0027s height and weight.","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"j013n3"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"public class Bmi extends Health {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"     * The height of the user in meters.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"    protected double height;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"     * The weight of the user in kilograms.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"    protected double weight;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"j013n3"},"content":"     * The Bmi of the user.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"    protected double bmiValue;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     * The BMI category.","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"    protected String bmiCategory;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"    protected LocalDate date;","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"j013n3"},"content":"     * Constructor for Bmi object.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"j013n3"},"content":"     * @param height A string representing the user\u0027s height.","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"j013n3"},"content":"     * @param weight A string representing the user\u0027s weight.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"j013n3"},"content":"     * @throws AssertionError If height or weight values are not positive.","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"j013n3"},"content":"    public Bmi(String height, String weight, String date) {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"        this.height \u003d Double.parseDouble(height);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"        this.weight \u003d Double.parseDouble(weight);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"j013n3"},"content":"        assert this.height \u003e 0 \u0026\u0026 this.weight \u003e 0 : \"Height and weight must be positive\";","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"        this.date \u003d Parser.parseDate(date);","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"        this.bmiValue \u003d calculateBmiValue();","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"        this.bmiCategory \u003d getBmiCategory(bmiValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"j013n3"},"content":"     * Split user input into Bmi command, height, weight and date.","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"j013n3"},"content":"     * @param input A user-provided string.","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"j013n3"},"content":"     * @return An array of strings containing the extracted Bmi parameters.","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"j013n3"},"content":"     * @throws CustomExceptions.InvalidInput If the user input is invalid or blank.","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"    public static String[] getBmi(String input) throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"        String[] results \u003d new String[UiConstant.BMI_PARAMETERS];","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"        if (!input.contains(UiConstant.HEALTH_FLAG)","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"                || !input.contains(UiConstant.HEIGHT_FLAG)","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"                || !input.contains(UiConstant.WEIGHT_FLAG)","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"                || !input.contains(UiConstant.DATE_FLAG)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.MISSING_PARAMETERS);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"        int indexH \u003d input.indexOf(UiConstant.HEALTH_FLAG);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"        int indexHeight \u003d input.indexOf(UiConstant.HEIGHT_FLAG);","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"        int indexWeight \u003d input.indexOf(UiConstant.WEIGHT_FLAG);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"        int indexDate \u003d input.indexOf(UiConstant.DATE_FLAG);","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"        String command \u003d input.substring(indexH + UiConstant.BMI_H_OFFSET, indexHeight).trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"        String heightSubstring \u003d input.substring(indexHeight + UiConstant.BMI_HEIGHT_OFFSET, indexWeight).trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"        String weightSubstring \u003d input.substring(indexWeight + UiConstant.BMI_WEIGHT_OFFSET, indexDate).trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"        String dateSubstring \u003d input.substring(indexDate + UiConstant.DATE_OFFSET).trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"syj02"},"content":"        if (command.isEmpty() || heightSubstring.isEmpty() || weightSubstring.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.INSUFFICIENT_PARAMETERS_FOR_BMI);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"syj02"},"content":"        results[0] \u003d command;","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"syj02"},"content":"        results[1] \u003d heightSubstring;","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"syj02"},"content":"        results[2] \u003d weightSubstring;","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"j013n3"},"content":"        results[3] \u003d dateSubstring;","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"syj02"},"content":"        return results;","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"j013n3"},"content":"     * Calculates Bmi based on height and weight.","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"j013n3"},"content":"     * @return The calculated Bmi value.","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"j013n3"},"content":"     * @throws AssertionError If calculated value is not positive.","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"syj02"},"content":"    public double calculateBmiValue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"        double bmi \u003d Math.round((weight / (Math.pow(height, UiConstant.POWER_OF_TWO))) * UiConstant.ROUNDING_FACTOR)","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"                / UiConstant.ROUNDING_FACTOR;","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"j013n3"},"content":"        assert bmi \u003e 0: \"BMI value must be positive\";","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"j013n3"},"content":"        return bmi;","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"j013n3"},"content":"     * Prints the Bmi category based on the calculated Bmi value.","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"j013n3"},"content":"     * @param bmiValue The Bmi value to categorize.","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"j013n3"},"content":"     * @return A string presenting the Bmi category.","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"j013n3"},"content":"     * @throws AssertionError If calculated value is not positive.","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"syj02"},"content":"    public static String getBmiCategory(double bmiValue) {","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"j013n3"},"content":"        assert bmiValue \u003e 0: \"BMI value must be positive\";","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"        if (bmiValue \u003c UiConstant.UNDERWEIGHT_BMI_THRESHOLD) {","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"JustinSoh"},"content":"            return UiConstant.UNDERWEIGHT_MESSAGE;","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"        } else if (bmiValue \u003c UiConstant.NORMAL_BMI_THRESHOLD) {","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"            return UiConstant.NORMAL_WEIGHT_MESSAGE;","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"        } else if (bmiValue \u003c UiConstant.OVERWEIGHT_BMI_THRESHOLD) {","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"            return UiConstant.OVERWEIGHT_MESSAGE;","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"        } else if (bmiValue \u003c UiConstant.OBESE_BMI_THRESHOLD) {","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"            return UiConstant.OBESE_MESSAGE;","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"j013n3"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"            return UiConstant.SEVERELY_OBESE_MESSAGE;","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"j013n3"},"content":"     * Returns a string containing calculated Bmi value and its corresponding category.","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"j013n3"},"content":"     * @return A string of Bmi object.","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"syj02"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"syj02"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"j013n3"},"content":"        return this.date","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"JustinSoh"},"content":"                + UiConstant.BMI_MESSAGE_PREFIX","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"j013n3"},"content":"                + this.calculateBmiValue()","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"rouvinerh"},"content":"                + getBmiCategory(bmiValue);","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"j013n3"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"j013n3":72,"JustinSoh":28,"rouvinerh":7,"syj02":38}},{"path":"src/main/java/health/Health.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"j013n3"},"content":"package health;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":" * Represents a Health object to track user\u0027s health information.","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"j013n3"},"content":"public class Health {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"j013n3"},"content":"     * Check the type of health operation requested based on user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"j013n3"},"content":"     * @param userInput A user-provided string, containing health type and its parameters.","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"j013n3"},"content":"     * @return A health type constant.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"j013n3"},"content":"     * @throws CustomExceptions.InvalidInput If the user input is invalid or blank.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"j013n3"},"content":"     * @throws CustomExceptions.InsufficientInput If the user input is insufficient.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"j013n3"},"content":"     * @throws AssertionError If user input or health type is null or","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"j013n3"},"content":"     *                        if the number of parameters is not equivalent to 4.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"    public static String checkTypeOfHealth(String userInput) throws","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"            CustomExceptions.InvalidInput,","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"            CustomExceptions.InsufficientInput {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"        String[] userInputs \u003d userInput.split(UiConstant.SPLIT_BY_SLASH);","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"j013n3"},"content":"        assert userInputs.length \u003e 0 : \"Number of userInputs parts should be greater than 0\";","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"        String healthType \u003d userInputs[UiConstant.HEALTH_TYPE_INDEX].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"        if (healthType.isBlank()){","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.BLANK_INPUT_FOR_HEALTH);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"        healthType \u003d healthType.toLowerCase();","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"        boolean isBmi \u003d healthType.equals(UiConstant.BMI_INPUT);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"        boolean isPeriod \u003d healthType.equals(UiConstant.PERIOD_INPUT);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"        if(!isBmi \u0026\u0026 !isPeriod){","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.INVALID_INPUT_FOR_HEALTH);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"        if(isBmi \u0026\u0026 userInputs.length \u003c UiConstant.BMI_PARAMETERS){","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InsufficientInput(UiConstant.INSUFFICIENT_PARAMETERS_FOR_BMI);","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"        if(isPeriod \u0026\u0026 userInputs.length \u003c UiConstant.BMI_PARAMETERS){","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InsufficientInput(UiConstant.INSUFFICIENT_PARAMETERS_FOR_PERIOD);","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"j013n3"},"content":"        assert userInputs.length \u003d\u003d 5 : \"Array of userInputs should have 5 elements\";","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"        if (isBmi){","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"            return UiConstant.BMI;","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"            return UiConstant.PERIOD;","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"j013n3"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"j013n3":30,"JustinSoh":13,"rouvinerh":3,"syj02":14}},{"path":"src/main/java/health/HealthList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"package health;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"j013n3"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":" * Represents the list of BMI objects stored.","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"j013n3"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"public class HealthList extends ArrayList\u003cHealth\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"    private static final ArrayList\u003cBmi\u003e bmis \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"    private static final ArrayList\u003cPeriod\u003e periods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"j013n3"},"content":"     * Adds a Bmi to the list of Bmis whenever addBmi is called.","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"j013n3"},"content":"     * @param bmi Bmi object.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"j013n3"},"content":"     * @throws AssertionError If Bmi object is null.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"    public static void addBmi(Bmi bmi) {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"j013n3"},"content":"        assert bmi !\u003d null : \"Bmi object cannot be null\";","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"        bmis.add(bmi);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"j013n3"},"content":"     * Prints the most recently added Bmi object from bmis list.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"j013n3"},"content":"     * @throws AssertionError If bmis list is empty.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"    public static void showCurrentBmi() {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"j013n3"},"content":"        assert !bmis.isEmpty() : \"BMI List is empty\";","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"        int currentIndex \u003d bmis.size();","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"        System.out.println(bmis.get(currentIndex - 1));","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     * Prints all the BMI entries recorded.","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"    public static void showBmiHistory() {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"        assert !bmis.isEmpty() : \"BMI List is empty\";","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"        for (Bmi bmi : bmis) {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"            System.out.println(bmi);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"     * Adds a period to the ArrayList of periods.","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"     * @param period Period object to be added","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"    public static void addPeriod(Period period) {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"        periods.add(period);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"     * Prints the latest period object added.","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"    public static void showLatestPeriod() {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"        assert !periods.isEmpty() : \"Period List is empty\";","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"        int currentIndex \u003d periods.size();","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"        System.out.println(periods.get(currentIndex - 1));","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"     * Prints all Period entries tracked.","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"j013n3"},"content":"    public static void showPeriodHistory() {","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"        assert !periods.isEmpty() : \"Period List is empty\";","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"j013n3"},"content":"        for (Period period : periods) {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"j013n3"},"content":"            System.out.println(period);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"j013n3"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"     * Clears the Bmis and Periods array lists.","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"L5-Z"},"content":"    public static void clearBmisAndPeriods() {","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"L5-Z"},"content":"        periods.clear();","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"L5-Z"},"content":"        bmis.clear();","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"j013n3":21,"rouvinerh":22,"L5-Z":7,"syj02":31}},{"path":"src/main/java/health/Period.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"package health;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"import utility.Parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"syj02"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":" * Represents a Period object to track user\u0027s menstrual cycle.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"public class Period extends Health {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"    protected long length;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"j013n3"},"content":"     * Constructs a Period object with the given start and end dates in string format.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"j013n3"},"content":"     * @param stringStartDate A string representing the start date of the period","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"j013n3"},"content":"     * @param stringEndDate   A string representing the end date of the period","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"    public Period(String stringStartDate, String stringEndDate) {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"        this.startDate \u003d Parser.parseDate(stringStartDate);","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"        this.endDate \u003d Parser.parseDate(stringEndDate);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"        this.length \u003d calculatePeriodLength();","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"syj02"},"content":"        return startDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"j013n3"},"content":"     * Extracts the period information from the user input string.","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"j013n3"},"content":"     * @param input A string consisting of period information","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"j013n3"},"content":"     * @return An array of strings containing the appropriate health command, start date, and end date","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"j013n3"},"content":"     * @throws CustomExceptions.InvalidInput if the input string does not contain the required parameters","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"    public static String[] getPeriod(String input) throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"        String[] results \u003d new String[UiConstant.PERIOD_CYCLE_PARAMETERS];","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"        if (!input.contains(UiConstant.HEALTH_FLAG)","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"                | !input.contains(UiConstant.START_FLAG)","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"                || !input.contains(UiConstant.END_FLAG)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.MISSING_PARAMETERS);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"        int indexH \u003d input.indexOf(UiConstant.HEALTH_FLAG);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"        int indexStart \u003d input.indexOf(UiConstant.START_FLAG);","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"        int indexEnd \u003d input.indexOf(UiConstant.END_FLAG);","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"        String command \u003d input.substring(indexH + UiConstant.PERIOD_CYCLE_H_OFFSET, indexStart).trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"        String startSubstring \u003d input.substring(indexStart + UiConstant.PERIOD_CYCLE_START_OFFSET, indexEnd).trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"        String endSubstring \u003d input.substring(indexEnd + UiConstant.PERIOD_CYCLE_END_OFFSET).trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"        if (command.isEmpty() || startSubstring.isEmpty() || endSubstring.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.MISSING_PARAMETERS);","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"        results[0] \u003d command;","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"        results[1] \u003d startSubstring;","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"        results[2] \u003d endSubstring;","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"syj02"},"content":"        return results;","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"j013n3"},"content":"     * Calculates the length of the period in days.","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"j013n3"},"content":"     * @return The length of the period.","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"syj02"},"content":"    public long calculatePeriodLength() {","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"syj02"},"content":"        // Add 1 to include both start and end dates","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"        return ChronoUnit.DAYS.between(startDate,endDate) + 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the string representation of a Period object.","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"     * @return A formatted string representing a Period object.","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"syj02"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"syj02"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"syj02"},"content":"        return \"Period Start: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"syj02"},"content":"                + this.getStartDate()","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"syj02"},"content":"                + \" Period End: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"syj02"},"content":"                + this.endDate","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"syj02"},"content":"                + \"Period Length: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"syj02"},"content":"                + this.length","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"syj02"},"content":"                + \" days\";","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"j013n3":18,"JustinSoh":13,"rouvinerh":9,"syj02":55}},{"path":"src/main/java/seedu/pulsepilot/PulsePilot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package seedu.pulsepilot;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"import static ui.Handler.initialiseBot;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"import static ui.Handler.processInput;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"import static ui.Handler.terminateBot;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"public class PulsePilot {","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"     * Main entry-point for PulsePilot.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"        initialiseBot();","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"        processInput();","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"        terminateBot();","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rouvinerh":3,"L5-Z":8,"-":5}},{"path":"src/main/java/storage/LogFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":" * Represents a Logfile object used to write information and error logs for PulsePilot.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"public class LogFile {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"    protected static FileHandler logFileHandler \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"    private static LogFile instance \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"    private static final Logger logger \u003d Logger.getLogger(LogFile.class.getName());","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"     * Private constructor to prevent instantiation from outside the class.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"    private LogFile() {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"        initializeLogFile();","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     * Returns a singular instance of the LogFile class.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"     * If the instance is null, it creates a new instance.","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"     * @return An instance of the LogFile class.","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"    public static LogFile getInstance() {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"            instance \u003d new LogFile();","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"        return instance;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     * Initialises the log file to be used. Creates the log file if needed, then sets formatters.","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     * Parent handlers are set to false to prevent printing of logs to terminal.","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"    public static void initializeLogFile() {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"            if (logFileHandler \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"                logFileHandler \u003d new FileHandler(UiConstant.LOG_FILE_PATH);","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"                logFileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"                logger.addHandler(logFileHandler);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"                logger.setUseParentHandlers(false);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"            throw new RuntimeException(\"Error setting up log file\", e);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"        assert(logFileHandler !\u003d null);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"     * Writes information or warning logs to the log file.","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"     * @param input   String representing the user\u0027s input.","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"     * @param isError Boolean variable to determine if log is an error.","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"    public static void writeLog(String input, boolean isError) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"        if (isError) {","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"            logger.log(Level.WARNING, \"Error: \" + input);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"            logger.log(Level.INFO, input);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"JustinSoh":2,"rouvinerh":51,"L5-Z":16}},{"path":"src/main/java/ui/Handler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"package ui;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"j013n3"},"content":"import health.Bmi;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"j013n3"},"content":"import health.Health;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"import health.HealthList;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"import health.Period;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"import utility.Command;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"import utility.WorkoutConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"import workouts.Gym;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"import workouts.Run;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"import storage.LogFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":" * Represents user input parsing and handling","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":" * before providing feedback to the user.","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"public class Handler {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"    public static Scanner in;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"    static LogFile logFile \u003d LogFile.getInstance();","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"     * Processes user input and filters for valid command words from enum {@code Command},","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"     * then creates the relevant object based on details entered.","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"     * @throws IllegalArgumentException If an error occurs during command processing.","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"    public static void processInput() {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"        while (in.hasNextLine()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"            String instruction \u003d userInput.toUpperCase().split(\" \")[0];","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"            LogFile.writeLog(\"User Input: \" + userInput, false);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"            try {","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"                Command command \u003d Command.valueOf(instruction);","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"                switch (command) {","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"                case EXIT:","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"                    System.out.println(UiConstant.EXIT_MESSAGE);","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"                    return;","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"                case NEW:","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"                    handleExercise(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"                case HEALTH:","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"                    handleHealth(userInput);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"                case HISTORY:","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"L5-Z"},"content":"                    handleHistory(userInput);","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"                case LATEST:","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"                    handleLatest(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"                case HELP:","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"L5-Z"},"content":"                    Output.printHelp();","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"L5-Z"},"content":"                    break;","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"L5-Z"},"content":"                default:","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"L5-Z"},"content":"                    break; // valueOf results in immediate exception for non-match with enum Command","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"L5-Z"},"content":"                }","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"L5-Z"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"                Output.printException(e, UiConstant.INVALID_COMMAND);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"L5-Z"},"content":"            }","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"L5-Z"},"content":"     * Extracts a substring from the given input string based on the provided delimiter.","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"L5-Z"},"content":"     * @param input     The input string from which to extract the substring.","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"L5-Z"},"content":"     * @param delimiter The delimiter to search for in the input string.","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"L5-Z"},"content":"     * @return The extracted substring, or an empty string if the delimiter is not found.","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"L5-Z"},"content":"    public static String extractSubstringFromSpecificIndex(String input, String delimiter) {","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"L5-Z"},"content":"        int index \u003d input.indexOf(delimiter);","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"L5-Z"},"content":"        if (index \u003d\u003d -1 || index \u003d\u003d input.length() - delimiter.length()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"L5-Z"},"content":"            return \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"L5-Z"},"content":"        int startIndex \u003d index + delimiter.length();","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"L5-Z"},"content":"        int endIndex \u003d input.indexOf(\"/\", startIndex);","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"L5-Z"},"content":"        if (endIndex \u003d\u003d -1) {","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"L5-Z"},"content":"            endIndex \u003d input.length();","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"L5-Z"},"content":"        return input.substring(startIndex, endIndex).trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"     * Constructs either a new Run or Gym object based on the user input.","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"L5-Z"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"JustinSoh"},"content":"    public static void handleExercise(String userInput) {","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"            String typeOfExercise \u003d checkTypeOfExercise(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"            if (typeOfExercise.equals(UiConstant.RUN)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"L5-Z"},"content":"                String[] runDetails \u003d Run.getRun(userInput);","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"                if (runDetails[0].isEmpty() || runDetails[1].isEmpty() || runDetails[2].isEmpty()","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"                        || runDetails[3].isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"                    throw new CustomExceptions.InvalidInput(UiConstant.UNSPECIFIED_PARAMETER);","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"L5-Z"},"content":"                }","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"rouvinerh"},"content":"                Run newRun \u003d new Run(runDetails[2], runDetails[1], runDetails[3]);","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"rouvinerh"},"content":"                Output.printAddRun(newRun);","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"            } else if (typeOfExercise.equals(UiConstant.GYM)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"                int numberOfStations \u003d getNumberOfGymStations(userInput);","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"                Gym gym \u003d new Gym();","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"                getGymStation(numberOfStations, gym);","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"syj02"},"content":"        } catch (CustomExceptions.InvalidInput | CustomExceptions.InsufficientInput e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"rouvinerh"},"content":"            Output.printException(e, e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"     * Handle history command.","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"     * Expected command: `history /e:[all\\run\\gym]`","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"     * Show history of all exercises, run or gym.","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"L5-Z"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"JustinSoh"},"content":"    public static void handleHistory(String userInput) {","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"JustinSoh"},"content":"        String [] inputs \u003d userInput.split(UiConstant.SPLIT_BY_SLASH);","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"JustinSoh"},"content":"        String filter \u003d inputs[1].split(UiConstant.SPLIT_BY_COLON)[1];","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"        Output.printHistory(filter);","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"j013n3"},"content":"     * Handles user input related to health data. Parses the user input to determine","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"j013n3"},"content":"     * the type of health data and processes it accordingly.","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"j013n3"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"j013n3"},"content":"     * @param userInput A string containing health data information of user.","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"L5-Z"},"content":"    public static void handleHealth(String userInput) {","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"rouvinerh"},"content":"        Output.printLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"syj02"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"syj02"},"content":"            String typeOfHealth \u003d Health.checkTypeOfHealth(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"JustinSoh"},"content":"            if (typeOfHealth.equals(UiConstant.BMI)){","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"syj02"},"content":"                String[] bmiDetails \u003d Bmi.getBmi(userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"j013n3"},"content":"                if (bmiDetails[0].isEmpty()","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"j013n3"},"content":"                        || bmiDetails[1].isEmpty()","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"j013n3"},"content":"                        || bmiDetails[2].isEmpty()","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"j013n3"},"content":"                        || bmiDetails[3].isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"JustinSoh"},"content":"                    throw new CustomExceptions.InvalidInput(UiConstant.MISSING_PARAMETERS);","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"j013n3"},"content":"                }","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"j013n3"},"content":"                Bmi newBmi \u003d new Bmi(bmiDetails[1], bmiDetails[2], bmiDetails[3]);","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"syj02"},"content":"                HealthList.addBmi(newBmi);","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"JustinSoh"},"content":"                System.out.println(UiConstant.BMI_ADDED_MESSAGE_PREFIX","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"j013n3"},"content":"                        + bmiDetails[1]","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"JustinSoh"},"content":"                        + UiConstant.LINE","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"j013n3"},"content":"                        + bmiDetails[2]","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"JustinSoh"},"content":"                        + UiConstant.LINE","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"j013n3"},"content":"                        + bmiDetails[3]);","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"syj02"},"content":"                System.out.println(newBmi);","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"JustinSoh"},"content":"            } else if (typeOfHealth.equals(UiConstant.PERIOD)){","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"syj02"},"content":"                String[] periodDetails \u003d Period.getPeriod(userInput);","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"syj02"},"content":"                if (periodDetails[0].isEmpty() || periodDetails[1].isEmpty() || periodDetails[2].isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"JustinSoh"},"content":"                    throw new CustomExceptions.InvalidInput(UiConstant.MISSING_PARAMETERS);","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"syj02"},"content":"                }","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"syj02"},"content":"                Period newPeriod \u003d new Period(periodDetails[1], periodDetails[2]);","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"syj02"},"content":"                HealthList.addPeriod(newPeriod);","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"JustinSoh"},"content":"                System.out.println(UiConstant.PERIOD_ADDED_MESSAGE_PREFIX","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"j013n3"},"content":"                        + periodDetails[1]","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"JustinSoh"},"content":"                        + UiConstant.LINE","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"j013n3"},"content":"                        + periodDetails[2]);","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"syj02"},"content":"                System.out.println(newPeriod);","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"j013n3"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"syj02"},"content":"        } catch (CustomExceptions.InvalidInput | CustomExceptions.InsufficientInput e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"L5-Z"},"content":"            Output.printException(e, e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"syj02"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"rouvinerh"},"content":"        Output.printLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the number of gym stations in one Gym object from user input.","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"JustinSoh"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"JustinSoh"},"content":"     * @throws CustomExceptions.InsufficientInput If the user input is insufficient.","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"JustinSoh"},"content":"     * @throws CustomExceptions.InvalidInput      If the user input is invalid or blank.","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"JustinSoh"},"content":"    public static int getNumberOfGymStations(String input) throws CustomExceptions.InsufficientInput,","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"JustinSoh"},"content":"            CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"JustinSoh"},"content":"        String numberOfStationString \u003d extractSubstringFromSpecificIndex(input, WorkoutConstant.STATION_DELIMITER);","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"JustinSoh"},"content":"        assert Integer.parseInt(numberOfStationString) \u003e 0 : UiConstant.REQUIRES_POSITIVE_MESSAGE;","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"JustinSoh"},"content":"        return Integer.parseInt(numberOfStationString);","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the gym station details and adds a GymStation object to Gym.","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"rouvinerh"},"content":"     * @param numberOfStations The number of stations in one gym session.","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"rouvinerh"},"content":"     * @param gym The Gym object.","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"JustinSoh"},"content":"    private static void getGymStation(int numberOfStations, Gym gym) {","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"JustinSoh"},"content":"        try{","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"JustinSoh"},"content":"            for (int i \u003d 0; i \u003c numberOfStations; i++) {","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"JustinSoh"},"content":"                Output.printGymStationPrompt(i + 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"JustinSoh"},"content":"                String userInput \u003d in.nextLine();","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"JustinSoh"},"content":"                String[] inputs \u003d userInput.split(UiConstant.SPLIT_BY_SLASH);","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"JustinSoh"},"content":"                String[] validatedInputs \u003d Gym.checkGymStationInput(inputs);","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"JustinSoh"},"content":"                Gym.addGymStationInput(validatedInputs, gym);","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"JustinSoh"},"content":"            Output.printAddGym(gym);","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.InsufficientInput | CustomExceptions.InvalidInput e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"L5-Z"},"content":"            Output.printException(e, e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":218,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"rouvinerh"},"content":"     * Prints the latest run, gym, BMI entry or Period tracked.","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":221,"author":{"gitId":"rouvinerh"},"content":"     * @param userInput String representing user input.","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"rouvinerh"},"content":"    public static void handleLatest(String userInput){","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"JustinSoh"},"content":"        String [] inputs \u003d userInput.split(UiConstant.SPLIT_BY_SLASH);","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"JustinSoh"},"content":"        String filter \u003d inputs[1].split(UiConstant.SPLIT_BY_COLON)[1];","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"rouvinerh"},"content":"        Output.printLatest(filter);","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":229,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":230,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":231,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":232,"author":{"gitId":"L5-Z"},"content":"     * Checks the type of exercise based on the user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":233,"author":{"gitId":"L5-Z"},"content":"     * Usage: to use this method whenever the user enters a new exercise.","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"L5-Z"},"content":"     * Handles all the checks for input validity and sufficiency.","lastModifiedDate":"2024-03-19"},{"lineNumber":235,"author":{"gitId":"L5-Z"},"content":"     * Can assume input is valid and sufficient if no exceptions are thrown.","lastModifiedDate":"2024-03-19"},{"lineNumber":236,"author":{"gitId":"L5-Z"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-03-19"},{"lineNumber":237,"author":{"gitId":"L5-Z"},"content":"     * @return The type of exercise {@code Constant.RUN} or {@code Constant.GYM}.","lastModifiedDate":"2024-03-19"},{"lineNumber":238,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomExceptions.InvalidInput If the user input is invalid or blank.","lastModifiedDate":"2024-03-19"},{"lineNumber":239,"author":{"gitId":"L5-Z"},"content":"     * @throws CustomExceptions.InsufficientInput If the user input is insufficient.","lastModifiedDate":"2024-03-19"},{"lineNumber":240,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":241,"author":{"gitId":"L5-Z"},"content":"    public static String checkTypeOfExercise(String userInput) throws","lastModifiedDate":"2024-03-19"},{"lineNumber":242,"author":{"gitId":"L5-Z"},"content":"            CustomExceptions.InvalidInput,","lastModifiedDate":"2024-03-19"},{"lineNumber":243,"author":{"gitId":"L5-Z"},"content":"            CustomExceptions.InsufficientInput {","lastModifiedDate":"2024-03-19"},{"lineNumber":244,"author":{"gitId":"JustinSoh"},"content":"        String[] userInputs \u003d userInput.split(UiConstant.SPLIT_BY_SLASH);","lastModifiedDate":"2024-03-21"},{"lineNumber":245,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":246,"author":{"gitId":"L5-Z"},"content":"        if (userInputs.length \u003c 2) {","lastModifiedDate":"2024-03-20"},{"lineNumber":247,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.INVALID_INPUT_FOR_EXERCISE);","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":249,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"JustinSoh"},"content":"        String exerciseType \u003d userInputs[UiConstant.EXERCISE_TYPE_INDEX].trim(); // Constant.EXERCISE_TYPE_INDEX \u003d 1","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":252,"author":{"gitId":"L5-Z"},"content":"        if (exerciseType.isBlank()){","lastModifiedDate":"2024-03-19"},{"lineNumber":253,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.BLANK_INPUT_FOR_EXERCISE);","lastModifiedDate":"2024-03-21"},{"lineNumber":254,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":255,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"L5-Z"},"content":"        exerciseType \u003d exerciseType.toLowerCase();","lastModifiedDate":"2024-03-19"},{"lineNumber":257,"author":{"gitId":"JustinSoh"},"content":"        boolean isRun \u003d exerciseType.equals(UiConstant.RUN_INPUT);","lastModifiedDate":"2024-03-21"},{"lineNumber":258,"author":{"gitId":"JustinSoh"},"content":"        boolean isGym \u003d exerciseType.equals(UiConstant.GYM_INPUT);","lastModifiedDate":"2024-03-21"},{"lineNumber":259,"author":{"gitId":"L5-Z"},"content":"        if(!isRun \u0026\u0026 !isGym){","lastModifiedDate":"2024-03-19"},{"lineNumber":260,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.INVALID_INPUT_FOR_EXERCISE);","lastModifiedDate":"2024-03-21"},{"lineNumber":261,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":262,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"L5-Z"},"content":"        if (isRun \u0026\u0026 userInputs.length \u003c 5) {","lastModifiedDate":"2024-03-19"},{"lineNumber":264,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InsufficientInput(UiConstant.INSUFFICIENT_PARAMETERS_FOR_RUN);","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":266,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":267,"author":{"gitId":"L5-Z"},"content":"        if (isGym \u0026\u0026 userInputs.length \u003c 3) {","lastModifiedDate":"2024-03-19"},{"lineNumber":268,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InsufficientInput(UiConstant.INSUFFICIENT_PARAMETERS_FOR_GYM);","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":270,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":271,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":272,"author":{"gitId":"L5-Z"},"content":"        if (isRun){","lastModifiedDate":"2024-03-19"},{"lineNumber":273,"author":{"gitId":"JustinSoh"},"content":"            return UiConstant.RUN;","lastModifiedDate":"2024-03-21"},{"lineNumber":274,"author":{"gitId":"L5-Z"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":275,"author":{"gitId":"JustinSoh"},"content":"            return UiConstant.GYM;","lastModifiedDate":"2024-03-21"},{"lineNumber":276,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":277,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":278,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":279,"author":{"gitId":"L5-Z"},"content":"    public static void userInduction() {","lastModifiedDate":"2024-03-20"},{"lineNumber":280,"author":{"gitId":"L5-Z"},"content":"        String name \u003d in.nextLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":281,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"Welcome aboard, Captain \" + name);","lastModifiedDate":"2024-03-20"},{"lineNumber":282,"author":{"gitId":"L5-Z"},"content":"        LogFile.writeLog(\"Name entered: \" + name, false);","lastModifiedDate":"2024-03-20"},{"lineNumber":283,"author":{"gitId":"L5-Z"},"content":"        Output.printLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":284,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":285,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"Tips: Enter \u0027help\u0027 to view the pilot manual!\");","lastModifiedDate":"2024-03-20"},{"lineNumber":286,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"Initiating FTL jump sequence...\");","lastModifiedDate":"2024-03-20"},{"lineNumber":287,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":288,"author":{"gitId":"L5-Z"},"content":"        // save name to DataFile","lastModifiedDate":"2024-03-20"},{"lineNumber":289,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"FTL jump completed.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":290,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":291,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":292,"author":{"gitId":"rouvinerh"},"content":"    public static void initialiseScanner(){","lastModifiedDate":"2024-03-20"},{"lineNumber":293,"author":{"gitId":"rouvinerh"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-20"},{"lineNumber":294,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":295,"author":{"gitId":"rouvinerh"},"content":"    public static void destroyScanner(){","lastModifiedDate":"2024-03-20"},{"lineNumber":296,"author":{"gitId":"rouvinerh"},"content":"        in.close();","lastModifiedDate":"2024-03-20"},{"lineNumber":297,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":298,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":299,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":300,"author":{"gitId":"L5-Z"},"content":"     * Initializes PulsePilot by printing a welcome message, loading tasks from storage,","lastModifiedDate":"2024-03-18"},{"lineNumber":301,"author":{"gitId":"L5-Z"},"content":"     * and returning the tasks list.","lastModifiedDate":"2024-03-11"},{"lineNumber":302,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":303,"author":{"gitId":"L5-Z"},"content":"    public static void initialiseBot() {","lastModifiedDate":"2024-03-11"},{"lineNumber":304,"author":{"gitId":"L5-Z"},"content":"        Output.printWelcomeBanner();","lastModifiedDate":"2024-03-18"},{"lineNumber":305,"author":{"gitId":"rouvinerh"},"content":"        initialiseScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":306,"author":{"gitId":"L5-Z"},"content":"        LogFile.writeLog(\"Started bot\", false);","lastModifiedDate":"2024-03-18"},{"lineNumber":307,"author":{"gitId":"L5-Z"},"content":"        // Yet to implement : Check for existing save, if not, make a new one","lastModifiedDate":"2024-03-18"},{"lineNumber":308,"author":{"gitId":"L5-Z"},"content":"        // Yet to implement : int status \u003d Storage.load();","lastModifiedDate":"2024-03-18"},{"lineNumber":309,"author":{"gitId":"L5-Z"},"content":"        int status \u003d 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":310,"author":{"gitId":"L5-Z"},"content":"        Output.printGreeting(1);","lastModifiedDate":"2024-03-18"},{"lineNumber":311,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":312,"author":{"gitId":"L5-Z"},"content":"        if (status \u003d\u003d 1) {","lastModifiedDate":"2024-03-20"},{"lineNumber":313,"author":{"gitId":"L5-Z"},"content":"            userInduction();","lastModifiedDate":"2024-03-20"},{"lineNumber":314,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":315,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"Terminal primed. Command inputs are now accepted...\");","lastModifiedDate":"2024-03-20"},{"lineNumber":316,"author":{"gitId":"L5-Z"},"content":"        Output.printLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":317,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":318,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":319,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":320,"author":{"gitId":"L5-Z"},"content":"     * Terminates PulsePilot by saving tasks to storage, printing a goodbye message,","lastModifiedDate":"2024-03-18"},{"lineNumber":321,"author":{"gitId":"L5-Z"},"content":"     * and indicating the filename where tasks are saved.","lastModifiedDate":"2024-03-11"},{"lineNumber":322,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":323,"author":{"gitId":"L5-Z"},"content":"    public static void terminateBot() {","lastModifiedDate":"2024-03-11"},{"lineNumber":324,"author":{"gitId":"L5-Z"},"content":"        // Yet to implement : Storage.saveTasks(tasks);","lastModifiedDate":"2024-03-11"},{"lineNumber":325,"author":{"gitId":"L5-Z"},"content":"        Output.printGoodbyeMessage();","lastModifiedDate":"2024-03-20"},{"lineNumber":326,"author":{"gitId":"L5-Z"},"content":"        // Yet to implement : Reply.printReply(\"Saved tasks as: \" + Constant.FILE_NAME);","lastModifiedDate":"2024-03-11"},{"lineNumber":327,"author":{"gitId":"L5-Z"},"content":"        LogFile.writeLog(\"Bot exited gracefully\", false);","lastModifiedDate":"2024-03-20"},{"lineNumber":328,"author":{"gitId":"rouvinerh"},"content":"        destroyScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":329,"author":{"gitId":"L5-Z"},"content":"        System.exit(0);","lastModifiedDate":"2024-03-11"},{"lineNumber":330,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":331,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"j013n3":21,"JustinSoh":85,"rouvinerh":37,"L5-Z":171,"syj02":17}},{"path":"src/main/java/ui/Output.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"package ui;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import utility.Filters;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import workouts.Gym;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"import workouts.GymStation;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"import workouts.Run;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"import workouts.Workout;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"import workouts.WorkoutList;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"import health.HealthList;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"public class Output {","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"     * Prints a horizontal line.","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"L5-Z"},"content":"    public static void printLine() {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(UiConstant.PARTITION_LINE);","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"     * Prints the help message.","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"    public static void printHelp() {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"Commands List:\");","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"        System.out.println();","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"new /e:run /d:DISTANCE /t:TIME [/date:DATE] - Add a new run\");","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"new /e:gym /n:NUMBER_OF_STATIONS [/date:DATE] - Add a new gym workout\");","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"health /h:bmi /height:HEIGHT /weight:WEIGHT /date:DATE - Add new BMI data\");","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"health /h:period /start:START_DATE /end:END_DATE - Add new period data\");","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"history /view:[run/gym/bmi/period] - \" +","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"                \"Show history of runs/gyms/bmi records/periods tracked\");","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"        System.out.println(\"latest /view:[run/gym/bmi/period] - \" +","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"                \"Show history of runs/gyms/bmi records/periods tracked\");","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"help - Show this help message\");","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"exit - Exit the program\");","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"     * Prints an ASCII Art depicting the word \u0027PulsePilot\u0027.","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"    public static void printArt() {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\" _              _\");","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"|_)    |  _  _ |_) o  |  _ _|_\");","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"|  |_| | _\u003e (/_|   |  | (_) |_\");","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"     * Prints the gym station prompt.","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"     * @param stationNumber Integer representing the current gym station index.","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"    public static void printGymStationPrompt(int stationNumber) {","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"        printLine();","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(\"Please enter the details of station \"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"                + stationNumber","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"                + \". (Format: \" + UiConstant.STATION_GYM_FORMAT + \")\");","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"        printLine();","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"     * Returns the formatted string for printing runs.","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"     * @param index The index of the run.","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"     * @param currentWorkout The current Workout object within the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"     * @return A string","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"    private static String getFormattedRunWithIndex(int index, Workout currentWorkout) {","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"        return String.format(UiConstant.PRINT_RUN_FORMAT_WITH_INDEX, index, currentWorkout);","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"     * Prints the text header when adding a new Run.","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"     * @param newRun The new Run object added.","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"    public static void printAddRun(Run newRun) {","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"        printLine();","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(UiConstant.ADD_RUN);","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(UiConstant.RUN_HEADER);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(newRun);","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"        printLine();","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"     * Prints the text header when adding a new Gym.","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"     * @param gym The new Gym object added.","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"    public static void printAddGym(Gym gym) {","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"        printLine();","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(UiConstant.ADD_GYM);","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"        printGymStats(gym);","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"        printLine();","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"     * Prints all the Run objects added to the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.OutOfBounds If index is out of bounds.","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.InvalidInput If user input is invalid.","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"JustinSoh"},"content":"    private static void printRunHistory() throws CustomExceptions.OutOfBounds, CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"        ArrayList\u003c? extends Workout\u003e workoutList \u003d WorkoutList.getWorkouts(UiConstant.RUN);","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"        System.out.println(UiConstant.RUN_HEADER_WITH_INDEX_FORMAT);","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"        for (int i \u003d 0; i \u003c workoutList.size(); i++) {","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"JustinSoh"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"JustinSoh"},"content":"            Workout currentWorkout \u003d workoutList.get(i);","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"            String output \u003d getFormattedRunWithIndex(index, currentWorkout);","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(output);","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"rouvinerh"},"content":"     * Prints all the stations within a specified Gym object.","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"rouvinerh"},"content":"     * @param gym The Gym object containing the GymStation objects to be printed.","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"    private static void printGymStats(Gym gym) {","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"        ArrayList\u003cGymStation\u003e allStations \u003d gym.getStations();","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"        for (GymStation station: allStations){","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(station);","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"rouvinerh"},"content":"     * Prints all the information for all Gym objects within the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.OutOfBounds If index is out of bounds.","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.InvalidInput If user input is invalid.","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"    private static void printGymHistory() throws CustomExceptions.OutOfBounds, CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"JustinSoh"},"content":"        ArrayList\u003c? extends Workout\u003e workoutList \u003d WorkoutList.getWorkouts(UiConstant.GYM);","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"JustinSoh"},"content":"        for (int i \u003d 0; i \u003c workoutList.size(); i++) {","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"JustinSoh"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"JustinSoh"},"content":"            Gym currentWorkout \u003d (Gym) workoutList.get(i);","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(\"Gym Session \" + index + currentWorkout);","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"JustinSoh"},"content":"            printGymStats(currentWorkout);","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"JustinSoh"},"content":"            if(i !\u003d workoutList.size() - 1){","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"JustinSoh"},"content":"                printLine();","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"rouvinerh"},"content":"     * Prints all Bmi objects recorded.","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.OutOfBounds If there is access to a Bmi object that does not exist.","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.InvalidInput If there is invalid input.","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"rouvinerh"},"content":"    private static void printBmiHistory() throws CustomExceptions.OutOfBounds, CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"rouvinerh"},"content":"        HealthList.showBmiHistory();","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"rouvinerh"},"content":"     * Prints all Period objects recorded.","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.OutOfBounds If there is access to a Period object that does not exist.","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.InvalidInput If there is invalid input.","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"rouvinerh"},"content":"    private static void printPeriodHistory() throws CustomExceptions.OutOfBounds, CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"rouvinerh"},"content":"        HealthList.showPeriodHistory();","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"rouvinerh"},"content":"     * Prints the latest Run recorded.","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"rouvinerh"},"content":"    public static void printLatestRun() {","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"rouvinerh"},"content":"            Workout latestRun \u003d WorkoutList.getLatestRun();","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"rouvinerh"},"content":"            String latestRunString \u003d getFormattedRunWithIndex(WorkoutList.getRunSize(), latestRun);","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(UiConstant.RUN_HEADER_WITH_INDEX_FORMAT);","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(latestRunString);","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"rouvinerh"},"content":"        } catch (CustomExceptions.OutOfBounds e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"rouvinerh"},"content":"     * Prints the latest Gym recorded.","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"rouvinerh"},"content":"    public static void printLatestGym() {","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"rouvinerh"},"content":"            Gym latestGym \u003d WorkoutList.getLatestGym();","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"rouvinerh"},"content":"            int index \u003d WorkoutList.getGymSize();","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(\"Gym Session \" + index + latestGym);","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"rouvinerh"},"content":"            printGymStats(latestGym);","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"rouvinerh"},"content":"        } catch (CustomExceptions.OutOfBounds e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"rouvinerh"},"content":"     * Prints the latest BMI entry recorded.","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"rouvinerh"},"content":"    public static void printLatestBmi() {","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"rouvinerh"},"content":"        HealthList.showCurrentBmi();","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"rouvinerh"},"content":"     * Prints the latest Period entry recorded.","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"rouvinerh"},"content":"    public static void printLatestPeriod() {","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"rouvinerh"},"content":"        HealthList.showLatestPeriod();","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"rouvinerh"},"content":"     * Handler function to print the latest entry of Run, Gym, Period, or BMI objects recorded.","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"rouvinerh"},"content":"     * @param filter String used to determine the latest Run, Gym, Period, or BMI objects is to be printed.","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"rouvinerh"},"content":"    public static void printLatest(String filter) {","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"rouvinerh"},"content":"            printLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(\"Your latest \" + filter + UiConstant.SPLIT_BY_COLON);","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"rouvinerh"},"content":"            Filters parsedFilter \u003d Filters.valueOf(filter.toUpperCase());","lastModifiedDate":"2024-03-20"},{"lineNumber":221,"author":{"gitId":"rouvinerh"},"content":"            switch (parsedFilter) {","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"rouvinerh"},"content":"            case RUN:","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"rouvinerh"},"content":"                printLatestRun();","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"rouvinerh"},"content":"                break;","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"rouvinerh"},"content":"            case GYM:","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"rouvinerh"},"content":"                printLatestGym();","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"rouvinerh"},"content":"                break;","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"rouvinerh"},"content":"            case BMI:","lastModifiedDate":"2024-03-20"},{"lineNumber":231,"author":{"gitId":"rouvinerh"},"content":"                printLatestBmi();","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"rouvinerh"},"content":"                break;","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"rouvinerh"},"content":"            case PERIOD:","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"rouvinerh"},"content":"                printLatestPeriod();","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"rouvinerh"},"content":"                break;","lastModifiedDate":"2024-03-20"},{"lineNumber":237,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":238,"author":{"gitId":"rouvinerh"},"content":"            default:","lastModifiedDate":"2024-03-20"},{"lineNumber":239,"author":{"gitId":"JustinSoh"},"content":"                throw new CustomExceptions.InvalidInput(UiConstant.INVALID_FILTER);","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"rouvinerh"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"rouvinerh"},"content":"        } catch (CustomExceptions.InvalidInput e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":242,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":243,"author":{"gitId":"rouvinerh"},"content":"        } finally {","lastModifiedDate":"2024-03-20"},{"lineNumber":244,"author":{"gitId":"rouvinerh"},"content":"            printLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":245,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":247,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":248,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":249,"author":{"gitId":"rouvinerh"},"content":"     * Handler function to print all entries of Run, Gym, Period, or BMI objects recorded.","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":251,"author":{"gitId":"rouvinerh"},"content":"     * @param filter String used to determine if all Run, Gym, Period, or BMI objects are to be printed.","lastModifiedDate":"2024-03-20"},{"lineNumber":252,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":253,"author":{"gitId":"JustinSoh"},"content":"    public static void printHistory(String filter) {","lastModifiedDate":"2024-03-19"},{"lineNumber":254,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":255,"author":{"gitId":"JustinSoh"},"content":"            printLine();","lastModifiedDate":"2024-03-19"},{"lineNumber":256,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(\"Your \" + filter + \" history\" + UiConstant.SPLIT_BY_COLON);","lastModifiedDate":"2024-03-21"},{"lineNumber":257,"author":{"gitId":"JustinSoh"},"content":"            Filters parsedFilter \u003d Filters.valueOf(filter.toUpperCase());","lastModifiedDate":"2024-03-19"},{"lineNumber":258,"author":{"gitId":"JustinSoh"},"content":"            switch (parsedFilter) {","lastModifiedDate":"2024-03-19"},{"lineNumber":259,"author":{"gitId":"JustinSoh"},"content":"            case RUN:","lastModifiedDate":"2024-03-19"},{"lineNumber":260,"author":{"gitId":"JustinSoh"},"content":"                printRunHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":261,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-03-19"},{"lineNumber":262,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":263,"author":{"gitId":"JustinSoh"},"content":"            case GYM:","lastModifiedDate":"2024-03-19"},{"lineNumber":264,"author":{"gitId":"JustinSoh"},"content":"                printGymHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":265,"author":{"gitId":"JustinSoh"},"content":"                break;","lastModifiedDate":"2024-03-19"},{"lineNumber":266,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":267,"author":{"gitId":"rouvinerh"},"content":"            case BMI:","lastModifiedDate":"2024-03-20"},{"lineNumber":268,"author":{"gitId":"rouvinerh"},"content":"                printBmiHistory();","lastModifiedDate":"2024-03-20"},{"lineNumber":269,"author":{"gitId":"rouvinerh"},"content":"                break;","lastModifiedDate":"2024-03-20"},{"lineNumber":270,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":271,"author":{"gitId":"rouvinerh"},"content":"            case PERIOD:","lastModifiedDate":"2024-03-20"},{"lineNumber":272,"author":{"gitId":"rouvinerh"},"content":"                printPeriodHistory();","lastModifiedDate":"2024-03-20"},{"lineNumber":273,"author":{"gitId":"rouvinerh"},"content":"                break;","lastModifiedDate":"2024-03-20"},{"lineNumber":274,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":275,"author":{"gitId":"JustinSoh"},"content":"            default:","lastModifiedDate":"2024-03-19"},{"lineNumber":276,"author":{"gitId":"JustinSoh"},"content":"                throw new CustomExceptions.InvalidInput(UiConstant.INVALID_FILTER);","lastModifiedDate":"2024-03-21"},{"lineNumber":277,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":278,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.OutOfBounds | CustomExceptions.InvalidInput e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":279,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-13"},{"lineNumber":280,"author":{"gitId":"JustinSoh"},"content":"        } finally {","lastModifiedDate":"2024-03-14"},{"lineNumber":281,"author":{"gitId":"JustinSoh"},"content":"            printLine();","lastModifiedDate":"2024-03-12"},{"lineNumber":282,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":283,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":284,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":285,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":286,"author":{"gitId":"rouvinerh"},"content":"     * Prints a specified message and the exception error message.","lastModifiedDate":"2024-03-20"},{"lineNumber":287,"author":{"gitId":"rouvinerh"},"content":"     * @param e Represents the Exception caught.","lastModifiedDate":"2024-03-20"},{"lineNumber":288,"author":{"gitId":"rouvinerh"},"content":"     * @param message The custom message to be printed.","lastModifiedDate":"2024-03-20"},{"lineNumber":289,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":290,"author":{"gitId":"L5-Z"},"content":"    public static void printException(Exception e, String message) {","lastModifiedDate":"2024-03-19"},{"lineNumber":291,"author":{"gitId":"L5-Z"},"content":"        System.err.println(\"Exception Caught!\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":292,"author":{"gitId":"L5-Z"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":293,"author":{"gitId":"L5-Z"},"content":"                message +","lastModifiedDate":"2024-03-20"},{"lineNumber":294,"author":{"gitId":"L5-Z"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":295,"author":{"gitId":"L5-Z"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":296,"author":{"gitId":"L5-Z"},"content":"                e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":297,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-19"},{"lineNumber":298,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":299,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":300,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":301,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":302,"author":{"gitId":"rouvinerh"},"content":"     * Prints the welcome banner for PulsePilot.","lastModifiedDate":"2024-03-20"},{"lineNumber":303,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":304,"author":{"gitId":"L5-Z"},"content":"    public static void printWelcomeBanner() {","lastModifiedDate":"2024-03-18"},{"lineNumber":305,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":306,"author":{"gitId":"L5-Z"},"content":"        printArt();","lastModifiedDate":"2024-03-18"},{"lineNumber":307,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"Engaging orbital thrusters...\");","lastModifiedDate":"2024-03-18"},{"lineNumber":308,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"PulsePilot on standby\");","lastModifiedDate":"2024-03-18"},{"lineNumber":309,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":310,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":311,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":312,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":313,"author":{"gitId":"rouvinerh"},"content":"     * Checks whether storage file is present, and prints corresponding message.","lastModifiedDate":"2024-03-20"},{"lineNumber":314,"author":{"gitId":"rouvinerh"},"content":"     * @param status Integer representing whether the storage file has been loaded. If set to 0, file is present. Else,","lastModifiedDate":"2024-03-20"},{"lineNumber":315,"author":{"gitId":"rouvinerh"},"content":"     *                file is not present.","lastModifiedDate":"2024-03-20"},{"lineNumber":316,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":317,"author":{"gitId":"L5-Z"},"content":"    public static void printGreeting(int status) {","lastModifiedDate":"2024-03-18"},{"lineNumber":318,"author":{"gitId":"L5-Z"},"content":"        if (status \u003d\u003d 0) {","lastModifiedDate":"2024-03-18"},{"lineNumber":319,"author":{"gitId":"L5-Z"},"content":"            System.out.println(\"Welcome back, Captain\");","lastModifiedDate":"2024-03-20"},{"lineNumber":320,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(UiConstant.SUCCESSFUL_LOAD);","lastModifiedDate":"2024-03-21"},{"lineNumber":321,"author":{"gitId":"L5-Z"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":322,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(UiConstant.MISSING_FILE);","lastModifiedDate":"2024-03-21"},{"lineNumber":323,"author":{"gitId":"L5-Z"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":324,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":325,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":326,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":327,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":328,"author":{"gitId":"rouvinerh"},"content":"     * Prints the goodbye message for PulsePilot.","lastModifiedDate":"2024-03-20"},{"lineNumber":329,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":330,"author":{"gitId":"L5-Z"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2024-03-20"},{"lineNumber":331,"author":{"gitId":"rouvinerh"},"content":"        printLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":332,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"PulsePilot successful touchdown\");","lastModifiedDate":"2024-03-20"},{"lineNumber":333,"author":{"gitId":"L5-Z"},"content":"        System.out.println(\"See you soon, Captain!\");","lastModifiedDate":"2024-03-20"},{"lineNumber":334,"author":{"gitId":"L5-Z"},"content":"        printLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":335,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":336,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"JustinSoh":97,"rouvinerh":174,"L5-Z":65}},{"path":"src/main/java/utility/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"package utility;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":" * Enum representing the commands for PulsePilot","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":"public enum Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"    NEW,","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"    HISTORY,","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"    LATEST,","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"    HEALTH,","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"L5-Z"},"content":"    HELP,","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"    EXIT,","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"JustinSoh":2,"rouvinerh":3,"L5-Z":9}},{"path":"src/main/java/utility/CustomExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package utility;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import storage.LogFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":" * Represents a custom exception class designed for PulsePilot to handle errors during command processing.","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"L5-Z"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"public class CustomExceptions extends Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"     * Prints the error for an OutOfBounds error, and logs it in the log file as an error.","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"    public static class OutOfBounds extends Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"        public OutOfBounds(String message) {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"            super(\"\\u001b[31mError: \" + message + \"\\u001b[0m\");","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"            LogFile.writeLog(message, true);","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     * Prints the error for an InvalidInput error, and logs it in the log file as an error.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"    public static class InvalidInput extends Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"        public InvalidInput(String message) {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"            super(\"\\u001b[31mError: \" + message + \"\\u001b[0m\");","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"            LogFile.writeLog(message, true);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     * Prints the error for an FileWriteError error, and logs it in the log file as an error.","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"    public static class FileWriteError extends Exception{","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"        public FileWriteError(String message) {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"            super(\"\\u001b[31mError: \" + message + \"\\u001b[0m\");","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"            LogFile.writeLog(message, true);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     * Prints the error for an FileCreateError error, and logs it in the log file as an error.","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"    public static class FileCreateError extends Exception{","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"        public FileCreateError(String message) {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"            super(\"\\u001b[31mError: \" + message + \"\\u001b[0m\");","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"            LogFile.writeLog(message, true);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     * Prints the error for an InsufficientInput error, and logs it in the log file as an error.","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"    public static class InsufficientInput extends Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"        public InsufficientInput(String message) {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"            super(\"\\u001b[31mError: \" + message + \"\\u001b[0m\");","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"            LogFile.writeLog(message, true);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"JustinSoh":22,"rouvinerh":33,"L5-Z":3}},{"path":"src/main/java/utility/ErrorConstant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package utility;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"public class ErrorConstant {","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"JustinSoh":4}},{"path":"src/main/java/utility/Filters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package utility;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":" * Enum representing the filters used for Workouts.","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"public enum Filters {","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"    ALL,","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"    RUN,","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    GYM,","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    PERIOD,","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"    BMI","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"JustinSoh":6,"rouvinerh":6}},{"path":"src/main/java/utility/HealthConstant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package utility;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"public class HealthConstant {","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"JustinSoh":4}},{"path":"src/main/java/utility/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package utility;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":" * Represents the parser used for PulsePilot","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"public class Parser {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"     * Parses and converts String date to a LocalDate variable.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"     * @param dateTime String representing the date.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     * @return LocalDate variable representing the date.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    public static LocalDate parseDate(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"        LocalDate formattedDate \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"            formattedDate \u003d LocalDate.parse(dateTime, formatter);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"            System.err.println(\"Error parsing date: \" + e.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"        return formattedDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"rouvinerh":29}},{"path":"src/main/java/utility/UiConstant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"L5-Z"},"content":"package utility;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":" * Constants class representing all constants used for PulsePilot.","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"public class UiConstant {","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"    // Formatted Replies","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    public static final Integer MAX_RUNTIME_ARRAY_LENGTH \u003d 3;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    public static final Integer MIN_RUNTIME_ARRAY_LENGTH \u003d 2;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"    public static final Integer EXERCISE_TYPE_INDEX \u003d 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"    public static final Integer LENGTH_OF_GYM_STATION_INPUTS \u003d 4;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"    public static final Integer INDEX_OF_STATION_NAME \u003d 0;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"    public static final Integer INDEX_OF_STATION_SETS \u003d 1;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"    public static final Integer INDEX_OF_STATION_REPS \u003d 2;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    public static final Integer INDEX_OF_STATION_WEIGHTS \u003d 3;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"L5-Z"},"content":"    public static final String PARTITION_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"    public static final String ADD_RUN \u003d \"Successfully added a new run session\";","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    public static final String ADD_GYM \u003d \"Successfully added a new gym session\";","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"    // Constant for Workout","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"    public static final String RUN \u003d \"run\";","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"    public static final String GYM \u003d \"gym\";","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"    public static final String ALL \u003d \"all\";","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"    public static final String RUN_INPUT \u003d \"e:run\";","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    public static final String GYM_INPUT \u003d \"e:gym\";","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"    // Special Characters","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"    public static final String SPLIT_BY_SLASH \u003d \"/\";","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"    public static final String SPLIT_BY_COLON \u003d \":\";","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"    public static final String SPLIT_BY_WHITESPACE \u003d \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"    public static final String RUN_FORMAT \u003d \"%s \\t%s\\t\\t%s\\t\\t%s\\t\\t%s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"    public static final String PRINT_RUN_FORMAT_WITH_INDEX \u003d \"%d.\\t\\t\\t%s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"    public static final String RUN_HEADER_WITH_INDEX_FORMAT \u003d \"Index\\t\\tType\\tTime\\t\\tDistance\\tPace\\t\\tDate\";","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"    public static final String GYM_STATION_HEADER_WITH_INDEX_FORMAT \u003d \"Index\\t\\t\\tExercise Name\\t\\tSets\\tRepetition\" +","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"            \"\\t\\tWeights\";","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"    public static final String GYM_STATION_FORMAT \u003d \"%s: \";","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"    public static final String GYM_SET_FORMAT \u003d \"%d reps at %d KG\";","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"    public static final String INDIVIDUAL_GYM_STATION_FORMAT \u003d \"%d sets of %s\";","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"    public static final int NUMBER_OF_RUN_PARAMETERS \u003d 4;","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"    public static final String RUN_HEADER \u003d \"Type\\tTime\\t\\tDistance\\tPace\\t\\tDate\";","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"    // Constant for Error","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"    public static final String INVALID_FILTER \u003d \"Invalid filter! Filter is only \u0027run\u0027, \u0027gym\u0027, \u0027bmi\u0027 or \u0027period\u0027\";","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"    public static final String NO_RUNS_FOUND \u003d \"No runs found! You need to add a run first!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"    public static final String NO_GYMS_FOUND \u003d \"No gyms found! You need to add a gym first!\";","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"    public static final String NO_HISTORY_FOUND \u003d \"No history found!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"    public static final String BLANK_INPUT_FOR_EXERCISE \u003d \"Type of exercise cannot be empty. \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"            \"Please input either /e:run or /e:gym\";","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"    public static final String STATION_GYM_FORMAT \u003d \"[name of exercise:string] /s:[sets:number] /r:[reps:number] \" +","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"            \"/w:[weights:number]\";","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"    public static final String BLANK_INPUT_FOR_GYM_STATION \u003d \"Fields cannot be empty\" +","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"            \"Please input \" + STATION_GYM_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"    public static final String INVALID_INPUT_FOR_EXERCISE \u003d \"Invalid input for exercise type! \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"            \"Please input either /e:run or /e:gym\";","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"    public static final String INVALID_RUN_TIME \u003d \"Invalid run time!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"    public static final String INVALID_GYM_INPUT \u003d \"Invalid gym parameters!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"    public static final String INVALID_GYM_STATION_INDEX \u003d \"Invalid gym station index!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"    public static final String NUMERIC_INPUT_REQUIRED_GYM_STATION \u003d \"Numeric input required for sets, reps and weights!\"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"            + \"Please input \" + STATION_GYM_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"    public static final String INSUFFICIENT_PARAMETERS_FOR_RUN \u003d \"Insufficient parameters for run! \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"            \"Example input: new /e:run /d:DISTANCE /t:TIME [/date:DATE]\";","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"    public static final String INSUFFICIENT_PARAMETERS_FOR_GYM \u003d \"Insufficient parameters for gym! \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"            \"Example input: new /e:gym /n:\u003cnumber of exercise\u003e\";","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"    public static final String INSUFFICIENT_PARAMETERS_FOR_GYM_STATION \u003d \"Insufficient parameters for Gym Stations! \" +","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"            \"Please input [name of exercise] /s:[sets] /r:[reps] /w:[weights]\";","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"    public static final String REQUIRES_POSITIVE_MESSAGE \u003d \"Requires a positive integer!\";","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"    public static final int NUM_SECONDS_IN_MINUTE \u003d 60;","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"    public static final int NUM_SECONDS_IN_HOUR \u003d 3600;","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"    // Health Constants","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"syj02"},"content":"    public static final Integer HEALTH_TYPE_INDEX \u003d 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"syj02"},"content":"    public static final String BMI_INPUT \u003d \"h:bmi\";","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"syj02"},"content":"    public static final String PERIOD_INPUT \u003d \"h:period\";","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"syj02"},"content":"    public static final String BMI \u003d \"bmi\";","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"syj02"},"content":"    public static final String PERIOD \u003d \"period\";","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"L5-Z"},"content":"    public static final Integer BMI_PARAMETERS \u003d 4;","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"j013n3"},"content":"    public static final String HEALTH_FLAG \u003d \"/h\";","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"j013n3"},"content":"    public static final String HEIGHT_FLAG \u003d \"/height\";","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"j013n3"},"content":"    public static final String WEIGHT_FLAG \u003d \"/weight\";","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"j013n3"},"content":"    public static final String DATE_FLAG \u003d \"/date\";","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"j013n3"},"content":"    public static final String START_FLAG \u003d \"/start\";","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"j013n3"},"content":"    public static final String END_FLAG \u003d \"/end\";","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"j013n3"},"content":"    public static final Integer BMI_H_OFFSET \u003d 3;","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"syj02"},"content":"    public static final Integer BMI_HEIGHT_OFFSET \u003d 8;","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"syj02"},"content":"    public static final Integer BMI_WEIGHT_OFFSET \u003d 8;","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"j013n3"},"content":"    public static final Integer DATE_OFFSET \u003d 6;","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"L5-Z"},"content":"    public static final Integer PERIOD_CYCLE_PARAMETERS \u003d 3;","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"L5-Z"},"content":"    public static final Integer PERIOD_CYCLE_H_OFFSET \u003d 3;","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"L5-Z"},"content":"    public static final Integer PERIOD_CYCLE_START_OFFSET \u003d 7;","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"L5-Z"},"content":"    public static final Integer PERIOD_CYCLE_END_OFFSET \u003d 5;","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"j013n3"},"content":"    public static final double UNDERWEIGHT_BMI_THRESHOLD \u003d 18.5;","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"j013n3"},"content":"    public static final double NORMAL_BMI_THRESHOLD \u003d 24.9;","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"j013n3"},"content":"    public static final double OVERWEIGHT_BMI_THRESHOLD \u003d 29.9;","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"j013n3"},"content":"    public static final double OBESE_BMI_THRESHOLD \u003d 39.9;","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"j013n3"},"content":"    public static final double POWER_OF_TWO \u003d 2.0;","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"j013n3"},"content":"    public static final double ROUNDING_FACTOR \u003d 100.0;","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"syj02"},"content":"    public static final String UNDERWEIGHT_MESSAGE \u003d \"You\u0027re underweight.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"syj02"},"content":"    public static final String NORMAL_WEIGHT_MESSAGE \u003d \"Great! You\u0027re within normal range.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"syj02"},"content":"    public static final String OVERWEIGHT_MESSAGE \u003d \"You\u0027re overweight.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"syj02"},"content":"    public static final String OBESE_MESSAGE \u003d \"You\u0027re obese.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"syj02"},"content":"    public static final String SEVERELY_OBESE_MESSAGE \u003d \"You\u0027re severely obese.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"syj02"},"content":"    public static final String BLANK_INPUT_FOR_HEALTH \u003d \"Type of health cannot be empty. \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"syj02"},"content":"            \"Please input either /h:bmi or /h:period\";","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"j013n3"},"content":"    public static final String INVALID_INPUT_FOR_HEALTH \u003d \"Invalid input for health type! \" +","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"j013n3"},"content":"            \"Please input either /h:bmi or /h:period\";","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"syj02"},"content":"    public static final String INSUFFICIENT_PARAMETERS_FOR_BMI \u003d \"Insufficient parameters for bmi! \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"syj02"},"content":"            \"Example input: /h:bmi /height:height /weight:weight\";","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"syj02"},"content":"    public static final String INSUFFICIENT_PARAMETERS_FOR_PERIOD \u003d \"Insufficient parameters for period! \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"syj02"},"content":"            \"Example input: /h:period /start:startDate /end:endDate\";","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"syj02"},"content":"    public static final String MISSING_PARAMETERS \u003d \"Missing parameter(s)\";","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"j013n3"},"content":"    public static final String BMI_MESSAGE_PREFIX \u003d \"Your BMI is \";","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"j013n3"},"content":"    public static final String BMI_ADDED_MESSAGE_PREFIX \u003d \"Added: bmi | \";","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"j013n3"},"content":"    public static final String PERIOD_ADDED_MESSAGE_PREFIX \u003d \"Added: period | \";","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"j013n3"},"content":"    public static final String LINE \u003d \" | \";","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"L5-Z"},"content":"  ","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"L5-Z"},"content":"    // Input Errors","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"L5-Z"},"content":"    public static final String INVALID_COMMAND \u003d \"Invalid command. Enter \u0027help\u0027 to view available commands.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"L5-Z"},"content":"    public static final String UNSPECIFIED_PARAMETER \u003d \"Parameter(s) unspecified.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"L5-Z"},"content":"    public static final String INVALID_PARAMETER \u003d \"Parameter(s) invalid or out of bounds\";","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"L5-Z"},"content":"    public static final String NO_DATE_SPECIFIED \u003d \"NA\";","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"L5-Z"},"content":"    // Storage Replies","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"L5-Z"},"content":"    public static final String SAVE_ERROR \u003d \"File save failed.\\nWrite error occurred:\\n\";","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"L5-Z"},"content":"    public static final String MISSING_FILE \u003d \"What is your name, voyager?\";","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"L5-Z"},"content":"    public static final String LOAD_ERROR \u003d \"File read error:\\n\" + \"Error at \";","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"L5-Z"},"content":"    public static final String CORRUPT_ERROR \u003d \"\\nFile is corrupted. Ceasing any further data imports.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"L5-Z"},"content":"    public static final String SUCCESSFUL_LOAD \u003d \"Captain\u0027s data found. Orbit has been synchronised.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"rouvinerh"},"content":"    public static final String LOG_FILE_PATH \u003d\"./pulsepilot_log.txt\";","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"L5-Z"},"content":"    // getRun Constants","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"L5-Z"},"content":"    public static final int SUBSTRING_COMMAND \u003d 0;","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"L5-Z"},"content":"    public static final int SUBSTRING_DISTANCE \u003d 1;","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"L5-Z"},"content":"    public static final int SUBSTRING_TIME \u003d 2;","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"L5-Z"},"content":"    public static final int SUBSTRING_DATE \u003d 3;","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"L5-Z"},"content":"    // PulsePilot UI replies","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"L5-Z"},"content":"    public static final String EXIT_MESSAGE \u003d \"Initiating PulsePilot landing sequence...\";","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"L5-Z"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"j013n3":22,"JustinSoh":69,"rouvinerh":15,"L5-Z":36,"syj02":21}},{"path":"src/main/java/utility/WorkoutConstant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package utility;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"public class WorkoutConstant {","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"    public static final String STATION_DELIMITER \u003d \"/n:\";","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"JustinSoh":5}},{"path":"src/main/java/workouts/Gym.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import utility.Parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":" * Represents a Gym object that contains an ArrayList of GymStation objects.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"public class Gym extends Workout{","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    protected LocalDate date \u003d null;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"    protected ArrayList\u003cGymStation\u003e stations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"     * Constructor that adds a Gym object to WorkoutList.","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"    public Gym() {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"        WorkoutList.addGym(this);","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     * Overloaded constructor that adds a Gym object to WorkoutList, and also takes the optional date parameter.","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     * @param stringDate String representing the date parameter specified.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"    public Gym(String stringDate) {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"        this.date \u003d Parser.parseDate(stringDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"        WorkoutList.addGym(this);","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"     * Adds station to an ArrayList of GymStation object.","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     * @param name Name of the gym station.","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     * @param weight Weight used for the station.","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     * @param numberOfSet Number of sets done.","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     * @param repetitions Number of repetitions done.","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.InvalidInput If there is invalid input in any parameter.","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"    public void addStation(String name, int weight, int numberOfSet,","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"                           int repetitions) throws CustomExceptions.InvalidInput{","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"            GymStation newStation \u003d new GymStation(name, weight, repetitions, numberOfSet);","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"            stations.add(newStation);","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.INVALID_GYM_INPUT);","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"     * Get specific station as part of Gym object based on workout.","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"     * @return The desired GymStation object.","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"    public ArrayList\u003cGymStation\u003e getStations(){","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"        return stations;","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"    public GymStation getStationByIndex(int index) throws CustomExceptions.OutOfBounds{","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"        if (index \u003e\u003d stations.size() || index \u003c 0) {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.OutOfBounds(UiConstant.INVALID_GYM_STATION_INDEX);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"        return stations.get(index);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"     * Adds new gym station using validated parameters.","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"     * @param validatedInputs Array representing validated GymStation parameters.","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"     * @param gym Gym object to add the GymStation to.","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"     * @throws CustomExceptions.InsufficientInput If there is not enough parameters specified.","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"     * @throws CustomExceptions.InvalidInput If there is invalid input.","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"    public static void addGymStationInput(String[] validatedInputs, Gym gym) throws","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"            CustomExceptions.InsufficientInput,","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"            CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"        String exerciseName \u003d validatedInputs[UiConstant.INDEX_OF_STATION_NAME];","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"        int weights \u003d Integer.parseInt(validatedInputs[UiConstant.INDEX_OF_STATION_WEIGHTS]);","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"        int numberOfSets \u003d Integer.parseInt(validatedInputs[UiConstant.INDEX_OF_STATION_SETS]);","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"        int repetition \u003d Integer.parseInt(validatedInputs[UiConstant.INDEX_OF_STATION_REPS]);","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"JustinSoh"},"content":"        gym.addStation(exerciseName, weights, numberOfSets, repetition);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"     * Checks parameters from user input for adding a new GymStation.","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"     * @param inputs List of strings representing user input.","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"     * @return Array of strings representing the parameters required for a new GymStation.","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"     * @throws CustomExceptions.InsufficientInput If there is not enough parameters specified.","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"     * @throws CustomExceptions.InvalidInput If there is invalid input.","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"    public static String[] checkGymStationInput(String[] inputs) throws","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"            CustomExceptions.InsufficientInput,","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"            CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"        String exerciseName \u003d inputs[UiConstant.INDEX_OF_STATION_NAME].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"JustinSoh"},"content":"        String sets \u003d inputs[UiConstant.INDEX_OF_STATION_SETS].split(UiConstant.SPLIT_BY_COLON)[1].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"JustinSoh"},"content":"        String reps \u003d inputs[UiConstant.INDEX_OF_STATION_REPS].split(UiConstant.SPLIT_BY_COLON)[1].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"JustinSoh"},"content":"        String weights \u003d inputs[UiConstant.INDEX_OF_STATION_WEIGHTS].split(UiConstant.SPLIT_BY_COLON)[1].trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"JustinSoh"},"content":"        if (exerciseName.isBlank() || sets.isBlank() || reps.isBlank() || weights.isBlank()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.BLANK_INPUT_FOR_GYM_STATION);","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"            int setInt \u003d Integer.parseInt(sets);","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"            int repInt \u003d Integer.parseInt(reps);","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"JustinSoh"},"content":"            int weightInt \u003d Integer.parseInt(weights);","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"JustinSoh"},"content":"            assert setInt \u003e 0 : UiConstant.REQUIRES_POSITIVE_MESSAGE;","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"            assert repInt \u003e 0 : UiConstant.REQUIRES_POSITIVE_MESSAGE;","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"            assert weightInt \u003e 0 : UiConstant.REQUIRES_POSITIVE_MESSAGE;","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.NUMERIC_INPUT_REQUIRED_GYM_STATION);","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"        return new String[]{exerciseName, sets, reps, weights};","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the string representation of a Gym object.","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"rouvinerh"},"content":"     * @return A formatted string representing the Gym object, inclusive of the date and gym stations done.","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"rouvinerh"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"rouvinerh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"JustinSoh"},"content":"        String printedDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"JustinSoh"},"content":"        if (date !\u003d null){","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"            printedDate \u003d date.toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"JustinSoh"},"content":"            return String.format(\"(%s)\", printedDate);","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"        } else{","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"JustinSoh"},"content":"            return \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"JustinSoh":72,"rouvinerh":67}},{"path":"src/main/java/workouts/GymSet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":" * Represents a GymSet object.","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"public class GymSet {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    int weight;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    int repetitions;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new GymSet object using the weight and reps for 1 set of a gym station.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     * @param weight The weight done for the set.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"     * @param repetitions The number of reps done for the set.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    public GymSet(int weight, int repetitions){","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"        this.repetitions \u003d repetitions;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves a string representation of a GymSet object.","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"     * @return A formatted string representing a GymSet, inclusive of the number of repetitions and weight done.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"        return String.format(UiConstant.GYM_SET_FORMAT, this.repetitions, this.weight);","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"JustinSoh":7,"rouvinerh":26}},{"path":"src/main/java/workouts/GymStation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":" * Represents a GymStation object.","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"public class GymStation {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    protected String stationName;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"    protected ArrayList\u003cGymSet\u003e sets \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    protected int numberOfSets;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new GymStation object that contains the name, weight, number of repetitions and number of sets done","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"     * in one station.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"     * @param name String name of the station","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"     * @param weight Weight used.","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     * @param repetition Number of reps done.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     * @param numberOfSets Number of sets done.","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    public GymStation(String name, int weight, int repetition , int numberOfSets) {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"        this.stationName \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"        this.numberOfSets \u003d numberOfSets;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"        processSets(weight, repetition);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     * Function which adds a GymSet object to GymStation.","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"     * @param weight The weight done for the set.","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"     * @param repetition The number of repetitions done for the set.","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"    public void processSets(int weight, int repetition){","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"        for (int i \u003d 0; i \u003c numberOfSets; i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"            GymSet newSet \u003d new GymSet(weight, repetition);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"            sets.add(newSet);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the station name for the GymStation object.","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"     * @return String representing the name for the station.","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"    public String getStationName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"        return stationName;","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves an ArrayList of gym sets for the GymStation object.","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"     * @return The ArrayList of GymSet objects.","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"    public  ArrayList\u003cGymSet\u003e getSets() {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"        return sets;","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves a specific GymSet using an index.","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"     * @param index Index of the desired GymSet.","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"     * @return Desired GymSet object.","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"    public GymSet getSpecificSet(int index) {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"        return sets.get(index);","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the number sets within the GymStation.","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"     * @return The number of sets done.","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"    public int getNumberOfSets() {","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"        return numberOfSets;","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the string representation of a GymStation object.","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"rouvinerh"},"content":"     * @return A formatted string representing a GymStation object.","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"        return String.format(UiConstant.GYM_STATION_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"                this.getStationName()) + String.format(UiConstant.INDIVIDUAL_GYM_STATION_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"                this.getNumberOfSets(),","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"                this.getSpecificSet(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"JustinSoh":12,"rouvinerh":80}},{"path":"src/main/java/workouts/Run.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"import ui.Handler;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import utility.Parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":" * Represents a Run object.","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"public class Run extends Workout{","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"    protected Integer[] times;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    protected double distance;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"    protected LocalDate date \u003d null;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    protected String pace;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"    protected boolean isHourPresent;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     * Constructs a new Run object with the time and distance from user input.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     * @param stringTime The time taken for the run.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"     * @param stringDistance The distance of the run.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.InvalidInput If there is invalid input.","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    public Run(String stringTime, String stringDistance) throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"        times \u003d parseTime(stringTime);","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"        distance \u003d Double.parseDouble(stringDistance);","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"        pace \u003d calculatePace();","lastModifiedDate":"2024-03-10"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"        WorkoutList.addRun(this);","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"     * Overloaded constructor that takes in time, distance and the optional date parameter from user input.","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     * @param stringTime The time taken for the run.","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     * @param stringDistance The distance of the run.","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     * @param stringDate The date of the run.","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.InvalidInput If there is invalid input.","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"rouvinerh"},"content":"    public Run(String stringTime, String stringDistance, String stringDate) throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"        times \u003d parseTime(stringTime);","lastModifiedDate":"2024-03-10"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"        distance \u003d Double.parseDouble(stringDistance);","lastModifiedDate":"2024-03-10"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"        date \u003d Parser.parseDate(stringDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"        pace \u003d calculatePace();","lastModifiedDate":"2024-03-10"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"        WorkoutList.addRun(this);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":49,"author":{"gitId":"L5-Z"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"     * Parses a string containing run information, extracts the command, distance and end time before returning","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"     * an array of strings containing the information.","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"L5-Z"},"content":"     * @param input A string containing the Run information in the format \"new /e:run /d:DISTANCE /t:TIME [/date:DATE]\".","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"L5-Z"},"content":"     * @return An array of strings containing the extracted command, distance, time taken and date(if given).","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"L5-Z"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"L5-Z"},"content":"    public static String[] getRun(String input) throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"        String[] results \u003d new String[UiConstant.NUMBER_OF_RUN_PARAMETERS];","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"L5-Z"},"content":"        if (!input.contains(\"/e:\") || !input.contains(\"/d:\") || !input.contains(\"/t:\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.UNSPECIFIED_PARAMETER);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"        // Command","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"        results[UiConstant.SUBSTRING_COMMAND] \u003d Handler.extractSubstringFromSpecificIndex(input, \"/e:\");","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"        // Distance","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"        results[UiConstant.SUBSTRING_DISTANCE] \u003d Handler.extractSubstringFromSpecificIndex(input, \"/d:\");","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"        // Time","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"        results[UiConstant.SUBSTRING_TIME] \u003d Handler.extractSubstringFromSpecificIndex(input, \"/t:\");","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"        // Date","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"        results[UiConstant.SUBSTRING_DATE] \u003d Handler.extractSubstringFromSpecificIndex(input, \"/date:\");","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"        assert !results[UiConstant.SUBSTRING_COMMAND].isEmpty() : \"Command should not be empty\";","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"        assert !results[UiConstant.SUBSTRING_DISTANCE].isEmpty() : \"Distance should not be empty\";","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"        assert results[UiConstant.SUBSTRING_DISTANCE].matches(\"\\\\d+(\\\\.\\\\d+)?\") :","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"                \"Distance should be a valid numeric \" + \"value (assuming KM)\";","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"        assert !results[UiConstant.SUBSTRING_TIME].isEmpty() : \"Time should not be empty\";","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"        assert results[UiConstant.SUBSTRING_TIME].matches(\"\\\\d{2}:\\\\d{2}:\\\\d{2}\") : \"Time should be \" +","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"                \"in the format \" + \"HH:MM:SS\";","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"L5-Z"},"content":"        return results;","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"     * Returns string format of time taken for run.","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"     * @return Formatted string of the time for the run.","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"    public String getTimes()  {","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"        if (isHourPresent) {","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"            return times[0] + \":\" + times[1] + \":\" + times[2];","lastModifiedDate":"2024-03-10"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"        } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"rouvinerh"},"content":"            return times[0] + \":\" + times[1];","lastModifiedDate":"2024-03-10"},{"lineNumber":94,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves run distance.","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"     * @return Run distance.","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"rouvinerh"},"content":"    public double getDistance() {","lastModifiedDate":"2024-03-10"},{"lineNumber":103,"author":{"gitId":"rouvinerh"},"content":"        return distance;","lastModifiedDate":"2024-03-10"},{"lineNumber":104,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":105,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":106,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves run pace.","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"rouvinerh"},"content":"     * @return Run pace.","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"rouvinerh"},"content":"    public String getPace() {","lastModifiedDate":"2024-03-10"},{"lineNumber":112,"author":{"gitId":"rouvinerh"},"content":"        return pace;","lastModifiedDate":"2024-03-10"},{"lineNumber":113,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":114,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":115,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"rouvinerh"},"content":"     * Method parses the time format in either hh:mm:ss or mm:ss.","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"rouvinerh"},"content":"     * Sets {@code isHourPresent} variable to true if hours have been specified.","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"     * Otherwise, set to false.","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"rouvinerh"},"content":"     * @param inputTime String variable representing time taken in either hh:mm:ss or mm:ss format","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"rouvinerh"},"content":"     * @return A list of integers representing the hours (if present), minutes and seconds.","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"rouvinerh"},"content":"    public Integer[] parseTime(String inputTime) throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"rouvinerh"},"content":"        String[] stringTimeParts \u003d inputTime.split(\":\");","lastModifiedDate":"2024-03-10"},{"lineNumber":125,"author":{"gitId":"rouvinerh"},"content":"        int inputLength \u003d stringTimeParts.length;","lastModifiedDate":"2024-03-10"},{"lineNumber":126,"author":{"gitId":"rouvinerh"},"content":"        Integer[] integerTimes \u003d new Integer[inputLength];","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"        if (inputLength \u003d\u003d UiConstant.MAX_RUNTIME_ARRAY_LENGTH) {","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"rouvinerh"},"content":"            this.isHourPresent \u003d true;","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"rouvinerh"},"content":"            integerTimes[0] \u003d Integer.parseInt(stringTimeParts[0]);","lastModifiedDate":"2024-03-10"},{"lineNumber":131,"author":{"gitId":"rouvinerh"},"content":"            integerTimes[1] \u003d Integer.parseInt(stringTimeParts[1]);","lastModifiedDate":"2024-03-10"},{"lineNumber":132,"author":{"gitId":"rouvinerh"},"content":"            integerTimes[2] \u003d Integer.parseInt(stringTimeParts[2]);","lastModifiedDate":"2024-03-10"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"        } else if (inputLength \u003d\u003d UiConstant.MIN_RUNTIME_ARRAY_LENGTH) {","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"rouvinerh"},"content":"            this.isHourPresent \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"rouvinerh"},"content":"            integerTimes[0] \u003d Integer.parseInt(stringTimeParts[0]);","lastModifiedDate":"2024-03-10"},{"lineNumber":136,"author":{"gitId":"rouvinerh"},"content":"            integerTimes[1] \u003d Integer.parseInt(stringTimeParts[1]);","lastModifiedDate":"2024-03-10"},{"lineNumber":137,"author":{"gitId":"rouvinerh"},"content":"        } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":138,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.INVALID_RUN_TIME);","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":140,"author":{"gitId":"rouvinerh"},"content":"        return integerTimes;","lastModifiedDate":"2024-03-10"},{"lineNumber":141,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":142,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":143,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"rouvinerh"},"content":"     * Method checks if hour has been specified, then returns total seconds.","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"rouvinerh"},"content":"     * @return The total number of seconds in the run.","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"rouvinerh"},"content":"    public int calculateTotalSeconds() {","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"rouvinerh"},"content":"        int totalSeconds;","lastModifiedDate":"2024-03-10"},{"lineNumber":150,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":151,"author":{"gitId":"rouvinerh"},"content":"        if (this.isHourPresent) {","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"JustinSoh"},"content":"            totalSeconds \u003d this.times[0] * UiConstant.NUM_SECONDS_IN_HOUR","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"JustinSoh"},"content":"                    + this.times[1] * UiConstant.NUM_SECONDS_IN_MINUTE","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"rouvinerh"},"content":"                    + this.times[2];","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"rouvinerh"},"content":"        } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"rouvinerh"},"content":"            totalSeconds \u003d this.times[0] * 60 + this.times[1];","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":158,"author":{"gitId":"rouvinerh"},"content":"        return totalSeconds;","lastModifiedDate":"2024-03-10"},{"lineNumber":159,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":160,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":161,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"rouvinerh"},"content":"     * Method calculates the pace of the run, and formats it into M:SS/km.","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"rouvinerh"},"content":"     * @return Formatted string the pace of the run.","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"rouvinerh"},"content":"    public String calculatePace() {","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"rouvinerh"},"content":"        int totalSeconds \u003d calculateTotalSeconds();","lastModifiedDate":"2024-03-10"},{"lineNumber":168,"author":{"gitId":"JustinSoh"},"content":"        double paceInDecimal \u003d ((double) totalSeconds / this.distance) / UiConstant.NUM_SECONDS_IN_MINUTE;","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":170,"author":{"gitId":"rouvinerh"},"content":"        int minutes \u003d (int) paceInDecimal;","lastModifiedDate":"2024-03-10"},{"lineNumber":171,"author":{"gitId":"rouvinerh"},"content":"        double remainingSeconds \u003d paceInDecimal - minutes;","lastModifiedDate":"2024-03-10"},{"lineNumber":172,"author":{"gitId":"JustinSoh"},"content":"        int seconds \u003d (int) Math.round(remainingSeconds * UiConstant.NUM_SECONDS_IN_MINUTE);","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"rouvinerh"},"content":"        return String.format(\"%d:%02d/km\", minutes, seconds);","lastModifiedDate":"2024-03-10"},{"lineNumber":174,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":175,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the string representation of a Run object.","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"rouvinerh"},"content":"     * @return A formatted string representing a Run object.","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":182,"author":{"gitId":"JustinSoh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"JustinSoh"},"content":"        String printedDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"JustinSoh"},"content":"        if (date !\u003d null){","lastModifiedDate":"2024-03-12"},{"lineNumber":185,"author":{"gitId":"JustinSoh"},"content":"            printedDate \u003d date.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"rouvinerh"},"content":"        } else{","lastModifiedDate":"2024-03-12"},{"lineNumber":187,"author":{"gitId":"JustinSoh"},"content":"            printedDate \u003d UiConstant.NO_DATE_SPECIFIED;","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":189,"author":{"gitId":"JustinSoh"},"content":"        return String.format(UiConstant.RUN_FORMAT, UiConstant.RUN, getTimes(), getDistance(), getPace(), printedDate);","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":191,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"JustinSoh":44,"rouvinerh":129,"L5-Z":18}},{"path":"src/main/java/workouts/Workout.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import utility.Parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":" * Represents a Workout object for PulsePilot.","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"public abstract class Workout {","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"    protected LocalDate date \u003d null;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"     * Overloaded constructor that uses the optional date parameter from user input.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"     * @param stringDate String representing the date of the workout.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    public Workout(String stringDate) {","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"        this.date \u003d Parser.parseDate(stringDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"     * Constructor that builds a new Workout object.","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"    public Workout() {","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"     * Returns the date of the workout.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"     * @return LocalDate variable representing the date of the workout.","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"        return date;","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"     * Retrieves the string representation of a Workout object.","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     * @return A formatted string representing a Workout object.","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"    public String toString(){","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"        return getDate().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"JustinSoh":7,"rouvinerh":37}},{"path":"src/main/java/workouts/WorkoutList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":" * Represents the WorkoutList object.","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"public class WorkoutList extends ArrayList\u003cWorkout\u003e {","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"    private static final ArrayList\u003cWorkout\u003e workouts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"    private static final ArrayList\u003cRun\u003e runs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"    private static final ArrayList\u003cGym\u003e gyms \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"     * Adds a workout to the list of workouts.","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     * @param workout Workout object to be added.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"    private static void addWorkout(Workout workout) {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"        workouts.add(workout);","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"     * Adds a run to the list of runs and workouts.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"     * @param run Run object to be added.","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"    public static void addRun(Run run) {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"        runs.add(run);","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"        addWorkout(run);","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"     * Adds a gym to the list of gyms and workouts.","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"     * @param gym Gym object to be added.","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"    public static void addGym(Gym gym) {","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"        gyms.add(gym);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"        addWorkout(gym);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"     * Returns a list of workouts based on the filter.","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     * @param filter can be \"all\", \"run\" or \"gym\".","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     *               \"all\" returns all workouts.","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"     *               \"run\" returns only runs.","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"     *               \"gym\" returns only gym workouts.","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"     * @return ArrayList of workouts.","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"    public static ArrayList\u003c? extends Workout\u003e getWorkouts(String filter)","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"            throws CustomExceptions.OutOfBounds,","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"            CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"        filter \u003d filter.toLowerCase();","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"        if(!filter.equals(UiConstant.ALL) \u0026\u0026 !filter.equals(UiConstant.RUN) \u0026\u0026 !filter.equals(UiConstant.GYM)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.InvalidInput(UiConstant.INVALID_FILTER);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"        if(filter.equals(UiConstant.RUN) \u0026\u0026 runs.isEmpty()){","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.OutOfBounds(UiConstant.NO_RUNS_FOUND);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"        if(filter.equals(UiConstant.ALL) \u0026\u0026 workouts.isEmpty()){","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.OutOfBounds(UiConstant.NO_HISTORY_FOUND);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"        if(filter.equals(UiConstant.GYM) \u0026\u0026 gyms.isEmpty()){","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.OutOfBounds(UiConstant.NO_GYMS_FOUND);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"        if(filter.equals(UiConstant.RUN)){","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"            return runs;","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"        } else if (filter.equals(UiConstant.GYM)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"            return gyms;","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"        } else {","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"            return workouts;","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"     * Returns latest run.","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"     * @return The latest Run object added.","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.OutOfBounds If no runs are found in the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"    public static Run getLatestRun() throws CustomExceptions.OutOfBounds {","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"        if (runs.isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.OutOfBounds(UiConstant.NO_RUNS_FOUND);","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"rouvinerh"},"content":"        return runs.get(runs.size() - 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"    public static Gym getLatestGym() throws CustomExceptions.OutOfBounds {","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"        if (gyms.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"            throw new CustomExceptions.OutOfBounds(UiConstant.NO_GYMS_FOUND);","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"        return gyms.get(gyms.size() - 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"rouvinerh"},"content":"     * Returns the number of runs in the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"rouvinerh"},"content":"     * @return The number of runs.","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"    public static int getRunSize() {","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"rouvinerh"},"content":"        return runs.size();","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"rouvinerh"},"content":"     * Returns the number of gyms in the list.","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"rouvinerh"},"content":"     * @return The number of gyms.","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"rouvinerh"},"content":"    public static int getGymSize() {","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"rouvinerh"},"content":"        return gyms.size();","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"rouvinerh"},"content":"     * Clears the workouts, runs and gyms ArrayLists.","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"    public static void clearWorkoutsAndRun() {","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"        workouts.clear();","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"        runs.clear();","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"rouvinerh"},"content":"        gyms.clear();","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"JustinSoh":70,"rouvinerh":59}},{"path":"src/test/java/health/BmiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"package health;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"j013n3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"j013n3"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"j013n3"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"j013n3"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"class BmiTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"    void setUpStreams() {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"syj02"},"content":"    @AfterEach","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"syj02"},"content":"    void restoreStreams() {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"syj02"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"j013n3"},"content":"     * Tests the behaviour of toString in Bmi class.","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"j013n3"},"content":"    void toString_heightWeight_printsCorrectBMIAndCategory() {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"j013n3"},"content":"        Bmi bmi \u003d new Bmi(\"1.75\", \"70.0\", \"19-03-2024\");","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"j013n3"},"content":"        String expected \u003d \"2024-03-19\"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"j013n3"},"content":"                + \"Your BMI is 22.86\"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"                + \"Great! You\u0027re within normal range.\"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"        System.out.println(bmi);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"j013n3"},"content":"     * Tests the behaviour of a BMI within underweight range being passed into printsCorrectCategory.","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"    void printBMICategory_underweight_printsCorrectCategory() {","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"syj02"},"content":"        String expected \u003d \"You\u0027re underweight.\" + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"syj02"},"content":"        System.out.println(Bmi.getBmiCategory(17.5));","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"j013n3"},"content":"     * Tests the behaviour of a BMI within normal range being passed into printsCorrectCategory.","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"    void printBMICategory_normal_printsCorrectCategory() {","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"        String expected \u003d \"Great! You\u0027re within normal range.\" + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"        System.out.println(Bmi.getBmiCategory(22.0));","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"j013n3"},"content":"     * Tests the behaviour of a BMI within overweight range being passed into printsCorrectCategory.","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"j013n3"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"j013n3"},"content":"    void printBMICategory_overweight_printsCorrectCategory() {","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"j013n3"},"content":"        String expected \u003d \"You\u0027re overweight.\" + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"syj02"},"content":"        System.out.println(Bmi.getBmiCategory(27.0));","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"j013n3"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"j013n3"},"content":"     * Tests the behaviour of a BMI within obese range being passed into printsCorrectCategory.","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"j013n3"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"j013n3"},"content":"    void printBMICategory_obese_printsCorrectCategory() {","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"j013n3"},"content":"        String expected \u003d \"You\u0027re obese.\" + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"syj02"},"content":"        System.out.println(Bmi.getBmiCategory(32.0));","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"j013n3"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"j013n3"},"content":"     * Tests the behaviour of a BMI within severely obese range being passed into printsCorrectCategory.","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"j013n3"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"j013n3"},"content":"    void printBMICategory_severelyObese_printsCorrectCategory() {","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"j013n3"},"content":"        String expected \u003d \"You\u0027re severely obese.\" + System.lineSeparator();","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"syj02"},"content":"        System.out.println(Bmi.getBmiCategory(40.0));","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"j013n3"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"j013n3"},"content":"     * Tests the behaviour of showCurrentBmi.","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"syj02"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"j013n3"},"content":"    void showCurrentBmi_bmiObject_printsCorrectCurrentBmi() {","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"j013n3"},"content":"        Bmi bmi \u003d new Bmi(\"1.75\", \"70.00\", \"19-03-2024\");","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"syj02"},"content":"        HealthList.addBmi(bmi);","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"j013n3"},"content":"        String expected \u003d \"2024-03-19\"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"j013n3"},"content":"                + \"Your BMI is 22.86\"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"syj02"},"content":"                + \"Great! You\u0027re within normal range.\"","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator();","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"syj02"},"content":"        HealthList.showCurrentBmi();","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"syj02"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"j013n3"},"content":"     * Tests the behaviour of a valid health command being passed into checkTypeOfHealth.","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"j013n3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"j013n3"},"content":"    void checkTypeOfHealth_returnCorrectHealthType() throws","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"j013n3"},"content":"            CustomExceptions.InvalidInput,","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"j013n3"},"content":"            CustomExceptions.InsufficientInput{","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"j013n3"},"content":"        String userInput \u003d \"/h:bmi /height:1.71 /weight:60.50 /date:19-03-2024\";","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"        String expected \u003d UiConstant.BMI;","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"j013n3"},"content":"        String result \u003d Health.checkTypeOfHealth(userInput);","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"j013n3"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"j013n3"},"content":"     * Tests the behaviour of an invalid health command being passed into checkTypeOfHealth.","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"j013n3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"j013n3"},"content":"    void checkTypeOfHealth_throwsInvalidInputExceptions() {","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"j013n3"},"content":"        String userInput \u003d \"/h:run /height:1.71 /weight:60.50 /date:19-03-2024\";","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"j013n3"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e Bmi.checkTypeOfHealth(userInput));","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"j013n3"},"content":"     * Tests the behaviour of a correctly formatted user input being passed into getBmi.","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"j013n3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"j013n3"},"content":"    void getBmi_correctInput_returnsCorrectBmiValues() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"j013n3"},"content":"        String input \u003d \"/h:bmi /height:1.71 /weight:60.50 /date:19-03-2024\";","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"j013n3"},"content":"        String[] expected \u003d {\"bmi\", \"1.71\", \"60.50\", \"19-03-2024\"};","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"j013n3"},"content":"        String[] result \u003d Bmi.getBmi(input);","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"j013n3"},"content":"        assertArrayEquals(expected, result);","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"j013n3"},"content":"     * Test the behaviour of a string with missing parameter being passed in for getBmi.","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"j013n3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"j013n3"},"content":"    void getBmi_wrongInput_throwsInvalidInputExceptions() {","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"j013n3"},"content":"        String input \u003d \"/h:bmi /height:1.71 /date:19-03-2024\";","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"j013n3"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e Bmi.getBmi(input));","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"j013n3"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"j013n3"},"content":"     * Test the behaviour of printing Bmi history.","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"j013n3"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"j013n3"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"j013n3"},"content":"    void showBmiHistory_bmiObject_printsCorrectBmiHistory() {","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"j013n3"},"content":"        Bmi firstBmi \u003d new Bmi(\"1.75\", \"80.0\", \"20-03-2024\");","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"j013n3"},"content":"        Bmi secondBmi \u003d new Bmi(\"1.80\", \"74.0\", \"21-03-2024\");","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"syj02"},"content":"        HealthList.addBmi(firstBmi);","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"syj02"},"content":"        HealthList.addBmi(secondBmi);","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"j013n3"},"content":"        String expected \u003d \"2024-03-19\"","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"j013n3"},"content":"                + \"Your BMI is 22.86\"","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"syj02"},"content":"                + \"Great! You\u0027re within normal range.\"","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"j013n3"},"content":"                + \"2024-03-20\"","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"j013n3"},"content":"                + \"Your BMI is 26.12\"","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"j013n3"},"content":"                + \"You\u0027re overweight.\"","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"j013n3"},"content":"                + \"2024-03-21\"","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"j013n3"},"content":"                + \"Your BMI is 22.84\"","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"syj02"},"content":"                + \"Great! You\u0027re within normal range.\"","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator();","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"syj02"},"content":"        HealthList.showBmiHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"syj02"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"j013n3":116,"JustinSoh":2,"syj02":73}},{"path":"src/test/java/health/PeriodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syj02"},"content":"package health;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"syj02"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"syj02"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"syj02"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"j013n3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"syj02"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"syj02"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"syj02"},"content":"class PeriodTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"syj02"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"syj02"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"syj02"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"syj02"},"content":"    void setUpStreams() {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"syj02"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"syj02"},"content":"    @AfterEach","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"syj02"},"content":"    void restoreStreams() {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"syj02"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of toString in Period class.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"syj02"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"syj02"},"content":"    void calculatePeriodLength_printsCorrectPeriod() {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"        Period period \u003d new Period(\"09-03-2022\", \"16-03-2022\");","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"syj02"},"content":"        String expected \u003d \"Period Start: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"syj02"},"content":"                + period.getStartDate()","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"syj02"},"content":"                + \" Period End: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"syj02"},"content":"                + period.endDate","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"syj02"},"content":"                + \"Period Length: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"syj02"},"content":"                + period.length","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"syj02"},"content":"                + \" days\"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator();","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"syj02"},"content":"        System.out.println(period);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"syj02"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the showLatestPeriod function and whether it prints","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"     * the last Period object added.","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"syj02"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"syj02"},"content":"    void showLatestPeriod_printCorrectPeriod() {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"syj02"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"        Period firstPeriod \u003d new Period(\"09-02-2023\", \"16-02-2023\");","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"        Period secondPeriod \u003d new Period(\"09-03-2023\", \"16-03-2023\");","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"syj02"},"content":"        HealthList.addPeriod(firstPeriod);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"syj02"},"content":"        HealthList.addPeriod(secondPeriod);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"syj02"},"content":"        String expected \u003d \"Period Start: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"syj02"},"content":"                + secondPeriod.getStartDate()","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"syj02"},"content":"                + \" Period End: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"syj02"},"content":"                + secondPeriod.endDate","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"syj02"},"content":"                + \"Period Length: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"syj02"},"content":"                + secondPeriod.length","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"syj02"},"content":"                + \" days\"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"syj02"},"content":"                + System.lineSeparator();","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"syj02"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"syj02"},"content":"        HealthList.showLatestPeriod();","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"syj02"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"syj02"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the showPeriodHistory function and whether it prints","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"     * all Period objects added.","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"j013n3"},"content":"    void showPeriodHistory_printCorrectPeriodHistory() {","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"j013n3"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"        Period firstPeriod \u003d new Period(\"10-04-2024\", \"16-04-2024\");","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"        Period secondPeriod \u003d new Period(\"09-05-2024\", \"16-05-2024\");","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"j013n3"},"content":"        HealthList.addPeriod(firstPeriod);","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"j013n3"},"content":"        HealthList.addPeriod(secondPeriod);","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"j013n3"},"content":"        String expected \u003d \"Period Start: 2023-02-09 Period End: 2023-02-16\"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"j013n3"},"content":"                + \"Period Length: 8 days\"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"j013n3"},"content":"                + \"Period Start: 2023-03-09 Period End: 2023-03-16\"","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"j013n3"},"content":"                + \"Period Length: 8 days\"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"j013n3"},"content":"                + \"Period Start: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"j013n3"},"content":"                + firstPeriod.getStartDate()","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"j013n3"},"content":"                + \" Period End: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"j013n3"},"content":"                + firstPeriod.endDate","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"j013n3"},"content":"                + \"Period Length: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"j013n3"},"content":"                + firstPeriod.length","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"j013n3"},"content":"                + \" days\"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"j013n3"},"content":"                + \"Period Start: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"j013n3"},"content":"                + secondPeriod.getStartDate()","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"j013n3"},"content":"                + \" Period End: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"j013n3"},"content":"                + secondPeriod.endDate","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"j013n3"},"content":"                + \"Period Length: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"j013n3"},"content":"                + secondPeriod.length","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"j013n3"},"content":"                + \" days\"","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"j013n3"},"content":"                + System.lineSeparator();","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"j013n3"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"j013n3"},"content":"        HealthList.showPeriodHistory();","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"j013n3"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"j013n3"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"syj02"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"j013n3":38,"rouvinerh":17,"syj02":61}},{"path":"src/test/java/seedu/pulsepilot/PulsePilotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package seedu.pulsepilot;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"class PulsePilotTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"rouvinerh":2,"-":10}},{"path":"src/test/java/storage/LogFileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"class LogFileTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"L5-Z"},"content":"    static LogFile logTest \u003d LogFile.getInstance();","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the getInstance function in the LogFile class, and whether","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"     * it returns a non-null instance.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"    void initializeLogFile_noInput_logFileHandlerNotNull() {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"        assertNotNull(LogFile.logFileHandler);","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"rouvinerh":17,"L5-Z":1}},{"path":"src/test/java/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raajamani"},"content":"package storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"raajamani"},"content":"public class StorageTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"raajamani"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"raajamani"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"raajamani"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"raajamani":5}},{"path":"src/test/java/ui/HandlerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package ui;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"import health.HealthList;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"L5-Z"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"L5-Z"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"L5-Z"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"import workouts.WorkoutList;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"L5-Z"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"L5-Z"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"L5-Z"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"L5-Z"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"L5-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"class HandlerTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"L5-Z"},"content":"    private final ByteArrayInputStream inContent \u003d new ByteArrayInputStream(\"\".getBytes());","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"L5-Z"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"L5-Z"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"L5-Z"},"content":"    private final InputStream originalIn \u003d System.in;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"L5-Z"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"L5-Z"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"L5-Z"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"L5-Z"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"L5-Z"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"L5-Z"},"content":"        System.setIn(inContent);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"L5-Z"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"L5-Z"},"content":"    @AfterEach","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"L5-Z"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"L5-Z"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"L5-Z"},"content":"        System.setIn(originalIn);","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"L5-Z"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"L5-Z"},"content":"        WorkoutList.clearWorkoutsAndRun();","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"L5-Z"},"content":"        HealthList.clearBmisAndPeriods();","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"     * Tests the processInput function\u0027s behaviour to the EXIT command.","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"L5-Z"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"L5-Z"},"content":"    void processInput_exitCommand_terminatesProgram() {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"L5-Z"},"content":"        String input \u003d \"EXIT\";","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"L5-Z"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"        Handler.initialiseScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"L5-Z"},"content":"        Handler.processInput();","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"L5-Z"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"L5-Z"},"content":"        assertTrue(output.contains(\"Initiating PulsePilot landing sequence...\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"        Handler.destroyScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"     * Tests the processInput function\u0027s behaviour to the NEW command to add a Run","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"     * object.","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"L5-Z"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"L5-Z"},"content":"    void processInput_newCommand_addRunExercise() {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"L5-Z"},"content":"        String input \u003d \"NEW /e:run /d:10.3 /t:00:40:10 /date:15-03-2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"L5-Z"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"        Handler.initialiseScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"L5-Z"},"content":"        Handler.processInput();","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"L5-Z"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"L5-Z"},"content":"        assertTrue(output.contains(\"Successfully added a new run session\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"        Handler.destroyScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"     * Tests the processInput function\u0027s behaviour to the HEALTH command to add","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"     * a BMI object.","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"L5-Z"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"L5-Z"},"content":"    void processInput_healthCommand_addBMIHealthData() {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"L5-Z"},"content":"        String input \u003d \"HEALTH /h:bmi /height:1.70 /weight:65 /date:15-03-2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"L5-Z"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"        Handler.initialiseScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"L5-Z"},"content":"        Handler.processInput();","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"L5-Z"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"L5-Z"},"content":"        assertTrue(output.contains(\"Added: bmi | 1.70 | 65 | 15-03-2024\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"        Handler.destroyScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"     * Tests the processInput function\u0027s behaviour to the HISTORY command to print","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"     * all run objects.","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"L5-Z"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"L5-Z"},"content":"    void processInput_historyCommand_printsHistoryRun() {","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"L5-Z"},"content":"        String inputRun \u003d \"NEW /e:run /d:10.3 /t:00:40:10 /date:15-03-2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"L5-Z"},"content":"        System.setIn(new ByteArrayInputStream(inputRun.getBytes()));","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"L5-Z"},"content":"        String inputHistory \u003d \"HISTORY /view:run\";","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"L5-Z"},"content":"        System.setIn(new ByteArrayInputStream(inputHistory.getBytes()));","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"rouvinerh"},"content":"        Handler.initialiseScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"L5-Z"},"content":"        Handler.processInput();","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"L5-Z"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"L5-Z"},"content":"        assertTrue(output.contains(\"history:\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"rouvinerh"},"content":"        Handler.destroyScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"rouvinerh"},"content":"     * Tests the processInput function\u0027s behaviour to the LATEST command to print","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"rouvinerh"},"content":"     * the latest run object.","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"L5-Z"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"L5-Z"},"content":"    void processInput_latestCommand_printsLatestRun() {","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"L5-Z"},"content":"        String inputRun \u003d \"NEW /e:run /d:10.3 /t:00:40:10 /date:15-03-2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"L5-Z"},"content":"        System.setIn(new ByteArrayInputStream(inputRun.getBytes()));","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"L5-Z"},"content":"        String inputLatest \u003d \"LATEST /view:run\";","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"L5-Z"},"content":"        System.setIn(new ByteArrayInputStream(inputLatest.getBytes()));","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"rouvinerh"},"content":"        Handler.initialiseScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"L5-Z"},"content":"        Handler.processInput();","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"L5-Z"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"L5-Z"},"content":"        assertTrue(output.contains(\"Your latest run:\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"rouvinerh"},"content":"        Handler.destroyScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"rouvinerh"},"content":"     * Tests the processInput function\u0027s behaviour to the HELP command to print","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"rouvinerh"},"content":"     * the help message.","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"L5-Z"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"L5-Z"},"content":"    void processInput_helpCommand_printsHelp() {","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"L5-Z"},"content":"        String input \u003d \"HELP\";","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"L5-Z"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"rouvinerh"},"content":"        Handler.initialiseScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"L5-Z"},"content":"        Handler.processInput();","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"L5-Z"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"L5-Z"},"content":"        assertTrue(output.contains(\"Commands List\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"rouvinerh"},"content":"        Handler.destroyScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"rouvinerh"},"content":"     * Tests the processInput function\u0027s behaviour to an invalid command, which prints","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"rouvinerh"},"content":"     * an error.","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"L5-Z"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"L5-Z"},"content":"    void processInput_invalidCommand_printsInvalidCommandException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"L5-Z"},"content":"        String input \u003d \"INVALID\";","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"L5-Z"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"rouvinerh"},"content":"        Handler.initialiseScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"L5-Z"},"content":"        Handler.processInput();","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"L5-Z"},"content":"        String expected \u003d \"Exception Caught!\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"L5-Z"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"L5-Z"},"content":"                \"Invalid command. Enter \u0027help\u0027 to view available commands.\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"L5-Z"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"L5-Z"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"L5-Z"},"content":"                \"No enum constant utility.Command.INVALID\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"L5-Z"},"content":"                System.lineSeparator();","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"L5-Z"},"content":"        assertEquals(expected, errContent.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"rouvinerh"},"content":"        Handler.destroyScanner();","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"JustinSoh"},"content":"     * Test the behavior of the checkTypeOfExercise method when the user input is valid.","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"JustinSoh"},"content":"     * Expected behavior is to return {@code Constant.RUN} or {@code Constant.GYM}","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"JustinSoh"},"content":"     * Does not expect EXCEPTION to be thrown.","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"JustinSoh"},"content":"    void checkTypeOfExercise_correctUserInput_expectRunOrGym() {","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"L5-Z"},"content":"            String input1 \u003d \"new /e:run /d:10.3 /t:00:40:10 /date:15-03-2024\";","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"JustinSoh"},"content":"            String expected1 \u003d UiConstant.RUN;","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"JustinSoh"},"content":"            String result1 \u003d Handler.checkTypeOfExercise(input1);","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result1, expected1);","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"JustinSoh"},"content":"            String input2 \u003d \"new /e:gym /n:4\";","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"JustinSoh"},"content":"            String expected2 \u003d UiConstant.GYM;","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"JustinSoh"},"content":"            String result2 \u003d Handler.checkTypeOfExercise(input2);","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result2, expected2);","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"JustinSoh"},"content":"            // with capital letter","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"L5-Z"},"content":"            String input3 \u003d \"NEW /E:run /D:10.3 /T:00:40:10 /Date:15-03-2024\";","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"JustinSoh"},"content":"            String expected3 \u003d UiConstant.RUN;","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"JustinSoh"},"content":"            String result3 \u003d Handler.checkTypeOfExercise(input3);","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result3, expected3);","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"JustinSoh"},"content":"            String input4 \u003d \"NEW /E:gym /N:4\";","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"JustinSoh"},"content":"            String expected4 \u003d UiConstant.GYM;","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"JustinSoh"},"content":"            String result4 \u003d Handler.checkTypeOfExercise(input4);","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result4, expected4);","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"L5-Z"},"content":"            // exercises in capital letter","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"L5-Z"},"content":"            String input5 \u003d \"NEW /E:RUN /D:10.3 /T:00:40:10 /Date:15-03-2024\";","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"JustinSoh"},"content":"            String expected5 \u003d UiConstant.RUN;","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"JustinSoh"},"content":"            String result5 \u003d Handler.checkTypeOfExercise(input5);","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result5, expected5);","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"JustinSoh"},"content":"            String input6 \u003d \"NEW /E:GYM /N:4\";","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"JustinSoh"},"content":"            String expected6 \u003d UiConstant.GYM;","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"JustinSoh"},"content":"            String result6 \u003d Handler.checkTypeOfExercise(input6);","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(result6, expected6);","lastModifiedDate":"2024-03-18"},{"lineNumber":209,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.InvalidInput | CustomExceptions.InsufficientInput e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"JustinSoh"},"content":"            fail(e.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"JustinSoh"},"content":"     * Test the behavior of the checkTypeOfExercise method when the user input has invalid parameters.","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"JustinSoh"},"content":"     * Expected behavior is to raise {@code InvalidInput} exception.","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"JustinSoh"},"content":"     * Does not test for insufficient parameters.","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"JustinSoh"},"content":"     * Refer to {@code checkTypeOfExercise_insufficientUserInput_throwInsufficientInput()} for that.","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"JustinSoh"},"content":"    void checkTypeOfExercise_invalidUserInput_throwInvalidInput() {","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"JustinSoh"},"content":"        // with invalid exercise type","lastModifiedDate":"2024-03-18"},{"lineNumber":226,"author":{"gitId":"JustinSoh"},"content":"        String input1 \u003d \"new /e\";","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input1);","lastModifiedDate":"2024-03-18"},{"lineNumber":229,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":231,"author":{"gitId":"JustinSoh"},"content":"        // with invalid exercise type","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"rouvinerh"},"content":"        String input2 \u003d \"new /e:wrong /d:10.3 /t:00:40:10 /date:15/03/2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":234,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input2);","lastModifiedDate":"2024-03-18"},{"lineNumber":235,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":236,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":237,"author":{"gitId":"JustinSoh"},"content":"        // with invalid exercise type","lastModifiedDate":"2024-03-18"},{"lineNumber":238,"author":{"gitId":"rouvinerh"},"content":"        String input3 \u003d \"new /e:gymm /d:10.3 /t:00:40:10 /date:15/03/2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":239,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":240,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input3);","lastModifiedDate":"2024-03-18"},{"lineNumber":241,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":242,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"JustinSoh"},"content":"        // with invalid format","lastModifiedDate":"2024-03-18"},{"lineNumber":244,"author":{"gitId":"rouvinerh"},"content":"        String input4 \u003d \"new /e-gymm /d-10.3 /t:00:40:10 /date:15/03/2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":245,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":246,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input4);","lastModifiedDate":"2024-03-18"},{"lineNumber":247,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":248,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":249,"author":{"gitId":"L5-Z"},"content":"        // with wrong slash","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"rouvinerh"},"content":"        String input5 \u003d \"new \\\\e:run \\\\d:30:10 \\\\t:00:20:10 \\\\date:15/03/2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":251,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":252,"author":{"gitId":"JustinSoh"},"content":"            Handler.checkTypeOfExercise(input5);","lastModifiedDate":"2024-03-18"},{"lineNumber":253,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-18"},{"lineNumber":254,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":255,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":256,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":257,"author":{"gitId":"JustinSoh"},"content":"     * Test the behavior of the checkTypeOfExercise method when the user input has insufficient parameters.","lastModifiedDate":"2024-03-18"},{"lineNumber":258,"author":{"gitId":"JustinSoh"},"content":"     * Expected behavior is to raise {@code InsufficientInput} exception.","lastModifiedDate":"2024-03-18"},{"lineNumber":259,"author":{"gitId":"JustinSoh"},"content":"     * Does not test for invalid values.","lastModifiedDate":"2024-03-18"},{"lineNumber":260,"author":{"gitId":"JustinSoh"},"content":"     * Refer to {@code checkTypeOfExercise_invalidUserInput_throwInvalidInput()} for that.","lastModifiedDate":"2024-03-18"},{"lineNumber":261,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":262,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":263,"author":{"gitId":"JustinSoh"},"content":"    void checkTypeOfExercise_insufficientUserInput_throwInsufficientInput() {","lastModifiedDate":"2024-03-18"},{"lineNumber":264,"author":{"gitId":"JustinSoh"},"content":"        // without distance, time, and date","lastModifiedDate":"2024-03-18"},{"lineNumber":265,"author":{"gitId":"JustinSoh"},"content":"        String input2 \u003d \"new /e:run\";","lastModifiedDate":"2024-03-18"},{"lineNumber":266,"author":{"gitId":"rouvinerh"},"content":"        assertThrows(CustomExceptions.InsufficientInput.class, () -\u003e Handler.checkTypeOfExercise(input2));","lastModifiedDate":"2024-03-20"},{"lineNumber":267,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":268,"author":{"gitId":"JustinSoh"},"content":"        // without time and date","lastModifiedDate":"2024-03-18"},{"lineNumber":269,"author":{"gitId":"JustinSoh"},"content":"        String input3 \u003d \"new /e:run /d:10.3\";","lastModifiedDate":"2024-03-18"},{"lineNumber":270,"author":{"gitId":"rouvinerh"},"content":"        assertThrows(CustomExceptions.InsufficientInput.class, () -\u003e Handler.checkTypeOfExercise(input3));","lastModifiedDate":"2024-03-20"},{"lineNumber":271,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":272,"author":{"gitId":"JustinSoh"},"content":"        // without the date","lastModifiedDate":"2024-03-18"},{"lineNumber":273,"author":{"gitId":"JustinSoh"},"content":"        String input4 \u003d \"new /e:run /d:30:10 /t:00:20:10\";","lastModifiedDate":"2024-03-18"},{"lineNumber":274,"author":{"gitId":"rouvinerh"},"content":"        assertThrows(CustomExceptions.InsufficientInput.class, () -\u003e Handler.checkTypeOfExercise(input4));","lastModifiedDate":"2024-03-20"},{"lineNumber":275,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":276,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"JustinSoh":106,"rouvinerh":49,"L5-Z":121}},{"path":"src/test/java/ui/OutputTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package ui;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"L5-Z"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"import workouts.Gym;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"import workouts.Run;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"import workouts.WorkoutList;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"import health.Bmi;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"import health.Period;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"import health.HealthList;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"class OutputTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"    private static final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"    private static final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"    private static final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"    private static final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"    @BeforeAll","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    public static void setUpStreams() {","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"L5-Z"},"content":"    @AfterEach","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"L5-Z"},"content":"    public void cleanup() {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"        WorkoutList.clearWorkoutsAndRun();","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"        HealthList.clearBmisAndPeriods();","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"        outContent.reset();","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"    @AfterAll","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"    public static void restoreStreams() {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the printHistory function for Run objects.","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.InvalidInput If there are invalid parameters specified.","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"    void printHistory_runsOnly_expectAllRunsPrinted() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"        new Run(\"40:10\", \"10.3\", \"15-03-2024\");","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"        new Run(\"01:59:10\", \"15.3\");","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"        String expected \u003d UiConstant.PARTITION_LINE +","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"L5-Z"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"L5-Z"},"content":"                \"Your run history:\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"                \"Index\\t\\tType\\tTime\\t\\tDistance\\tPace\\t\\tDate\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"                \"1.\\t\\t\\trun \\t40:10\\t\\t10.3\\t\\t3:54/km\\t\\t2024-03-15\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"                \"2.\\t\\t\\trun \\t1:59:10\\t\\t15.3\\t\\t7:47/km\\t\\tNA\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"                UiConstant.PARTITION_LINE +","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator();","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"        Output.printHistory(UiConstant.RUN);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the printHistory function when an invalid filter is used.","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"    void printHistory_invalidHistoryFilter_throwError() {","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"        String input \u003d \"invalidFilter\";","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Output.printHistory(input));","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the printLatestRun function after a Run object is added.","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.InvalidInput If there are invalid parameters specified.","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"    void printLatestRun_oneRun_expectOneRunPrinted() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"        new Run(\"40:10\", \"10.3\");","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"        String expected \u003d \"Index\\t\\tType\\tTime\\t\\tDistance\\tPace\\t\\tDate\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"rouvinerh"},"content":"                \"1.\\t\\t\\trun \\t40:10\\t\\t10.3\\t\\t3:54/km\\t\\tNA\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator();","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"        Output.printLatestRun();","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the printLatestRun function when no Runs are added.","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"    void printLatestRun_noRun_expectNoRunMessage() {","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"        String expected \u003d \"\\u001B[31mError: \" + UiConstant.NO_RUNS_FOUND + \"\\u001B[0m\" +","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator();","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"        Output.printLatestRun();","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the printLatestGym function when two Gyms are added.","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"rouvinerh"},"content":"    void printLatestGym_twoGyms_expectOneGymPrinted() {","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"rouvinerh"},"content":"        try{","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"rouvinerh"},"content":"            Gym gym1 \u003d new Gym();","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"rouvinerh"},"content":"            gym1.addStation(\"Bench Press\", 4, 10, 50);","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"rouvinerh"},"content":"            gym1.addStation(\"Shoulder Press\", 20, 4, 10);","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"rouvinerh"},"content":"            Gym gym2 \u003d new Gym();","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"rouvinerh"},"content":"            gym2.addStation(\"Squat Press\", 4, 10, 50);","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"rouvinerh"},"content":"            gym2.addStation(\"Lat Press\", 20, 4, 10);","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"rouvinerh"},"content":"            String expected \u003d \"Gym Session 2\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.GYM_STATION_FORMAT, \"Squat Press\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.INDIVIDUAL_GYM_STATION_FORMAT, 10, \"50 reps at 4 KG\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.GYM_STATION_FORMAT, \"Lat Press\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.INDIVIDUAL_GYM_STATION_FORMAT, 4, \"10 reps at 20 KG\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator();","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"rouvinerh"},"content":"            Output.printLatestGym();","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"rouvinerh"},"content":"            assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"rouvinerh"},"content":"        }  catch (CustomExceptions.InvalidInput e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"rouvinerh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the printLatestGym function when no Gyms are added.","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"rouvinerh"},"content":"    void printLatestGym_noGym_expectNoGymMessage() {","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"JustinSoh"},"content":"        String expected \u003d \"\\u001B[31mError: \" + UiConstant.NO_GYMS_FOUND + \"\\u001B[0m\" +","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator();","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"rouvinerh"},"content":"        Output.printLatestGym();","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"rouvinerh"},"content":"        cleanup();","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the printLatestBmi function when two Bmi objects are added.","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"rouvinerh"},"content":"    @Test void printLatestBmi_twoBmis_expectOneBmiPrinted() {","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"rouvinerh"},"content":"        Bmi firstBmi \u003d new Bmi(\"1.75\", \"70.0\", \"18-03-2024\");","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"rouvinerh"},"content":"        Bmi secondBmi \u003d new Bmi(\"1.55\", \"55.0\", \"20-03-2024\");","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"rouvinerh"},"content":"        HealthList.addBmi(firstBmi);","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"rouvinerh"},"content":"        HealthList.addBmi(secondBmi);","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"rouvinerh"},"content":"        Output.printLatestBmi();","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"rouvinerh"},"content":"        String expected \u003d \"2024-03-20\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator()+","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"rouvinerh"},"content":"                \"Your BMI is 22.89\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"rouvinerh"},"content":"                \"Great! You\u0027re within normal range.\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator();","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the printLatestBmi function when no Bmi objects are added.","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"rouvinerh"},"content":"    void printLatestBmi_noBmi_expectAssertionError() {","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"rouvinerh"},"content":"        assertThrows(AssertionError.class, Output::printLatestBmi);","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the printLatestBmi function when two Period objects are added.","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"rouvinerh"},"content":"    void printLatestPeriod_twoPeriods_expectOneBmiPrinted() {","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"rouvinerh"},"content":"        Period firstPeriod \u003d new Period(\"09-02-2023\", \"16-02-2023\");","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"rouvinerh"},"content":"        Period secondPeriod \u003d new Period(\"09-03-2023\", \"16-03-2023\");","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"rouvinerh"},"content":"        HealthList.addPeriod(firstPeriod);","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"rouvinerh"},"content":"        HealthList.addPeriod(secondPeriod);","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"rouvinerh"},"content":"        Output.printLatestPeriod();","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"rouvinerh"},"content":"        String expected \u003d \"Period Start: 2023-03-09 Period End: 2023-03-16\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"rouvinerh"},"content":"                \"Period Length: 8 days\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"rouvinerh"},"content":"                System.lineSeparator();","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the printLatestBmi function when no Period objects are added.","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"rouvinerh"},"content":"    void printLatestPeriod_noPeriod_expectAssertionError() {","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"rouvinerh"},"content":"        assertThrows(AssertionError.class, Output::printLatestPeriod);","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the printGymHistory function, which should print both Gyms","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"rouvinerh"},"content":"     * added.","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"JustinSoh"},"content":"    void printGymHistory_correctInput_expectPrintGymHistory(){","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"JustinSoh"},"content":"        try{","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"JustinSoh"},"content":"            Gym gym1 \u003d new Gym();","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"JustinSoh"},"content":"            gym1.addStation(\"Bench Press\", 4, 10, 50);","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"JustinSoh"},"content":"            gym1.addStation(\"Shoulder Press\", 20, 4, 10);","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":218,"author":{"gitId":"JustinSoh"},"content":"            Gym gym2 \u003d new Gym();","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"JustinSoh"},"content":"            gym2.addStation(\"Squat Press\", 4, 10, 50);","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"JustinSoh"},"content":"            gym2.addStation(\"Lat Press\", 20, 4, 10);","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":222,"author":{"gitId":"JustinSoh"},"content":"            String expected \u003d UiConstant.PARTITION_LINE +","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"L5-Z"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"L5-Z"},"content":"                    \"Your gym history:\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"rouvinerh"},"content":"                    \"Gym Session 1\"+","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.GYM_STATION_FORMAT, \"Bench Press\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.INDIVIDUAL_GYM_STATION_FORMAT, 10, \"50 reps at 4 KG\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":231,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.GYM_STATION_FORMAT, \"Shoulder Press\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.INDIVIDUAL_GYM_STATION_FORMAT, 4, \"10 reps at 20 KG\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"JustinSoh"},"content":"                    UiConstant.PARTITION_LINE +","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"rouvinerh"},"content":"                    \"Gym Session 2\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":237,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":238,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.GYM_STATION_FORMAT, \"Squat Press\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.INDIVIDUAL_GYM_STATION_FORMAT, 10, \"50 reps at 4 KG\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator()+","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.GYM_STATION_FORMAT, \"Lat Press\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":242,"author":{"gitId":"JustinSoh"},"content":"                    String.format(UiConstant.INDIVIDUAL_GYM_STATION_FORMAT, 4, \"10 reps at 20 KG\") +","lastModifiedDate":"2024-03-21"},{"lineNumber":243,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator() +","lastModifiedDate":"2024-03-20"},{"lineNumber":244,"author":{"gitId":"JustinSoh"},"content":"                    UiConstant.PARTITION_LINE +","lastModifiedDate":"2024-03-21"},{"lineNumber":245,"author":{"gitId":"rouvinerh"},"content":"                    System.lineSeparator();","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"JustinSoh"},"content":"            Output.printHistory(UiConstant.GYM);","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(expected, outContent.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":248,"author":{"gitId":"JustinSoh"},"content":"        }  catch (CustomExceptions.InvalidInput e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":249,"author":{"gitId":"JustinSoh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-19"},{"lineNumber":250,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":251,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":252,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"JustinSoh":86,"rouvinerh":159,"L5-Z":7}},{"path":"src/test/java/utility/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package utility;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"class ParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the parseDate function with a correctly formatted string.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"    void parseDate_correctDateInput_returnDate() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"        LocalDate result \u003d Parser.parseDate(\"08-03-2024\");","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"        LocalDate expected \u003d LocalDate.of(2024, 3, 8);","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the parseDate function with an incorrectly formatted string.","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"rouvinerh"},"content":"    void parseDate_incorrectDateInput_throwException () {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"        System.setErr(new PrintStream(outputStream));","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"        String invalidDate \u003d \"2024-03-08\";","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"        Parser.parseDate(invalidDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"        String errorMessage \u003d outputStream.toString().trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"        assertTrue(errorMessage.contains(\"Error parsing date\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"        System.setErr(System.err);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"rouvinerh":37}},{"path":"src/test/java/workouts/RunTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"rouvinerh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"rouvinerh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"L5-Z"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"rouvinerh"},"content":"class RunTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"rouvinerh"},"content":"    @AfterEach","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"rouvinerh"},"content":"    void cleanup() {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"rouvinerh"},"content":"        WorkoutList.clearWorkoutsAndRun();","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of parsing a time string with hours into an integer array.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"rouvinerh"},"content":"    void parseTime_correctInputWithHours_returnListOfTimes() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"rouvinerh"},"content":"        String testTime \u003d \"01:59:10\";","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"rouvinerh"},"content":"        Run runTest \u003d new Run(testTime, \"15.3\");","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"rouvinerh"},"content":"        Integer[] result \u003d runTest.parseTime(testTime);","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"rouvinerh"},"content":"        Integer[] expected \u003d {1, 59, 10};","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"        for (int i \u003d 0; i \u003c UiConstant.MAX_RUNTIME_ARRAY_LENGTH; i++) {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"            assertEquals(result[i], expected[i]);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of parsing a time string without hours into an integer array.","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"rouvinerh"},"content":"    void parseTime_correctInputWithOutHours_returnListOfTimes() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"rouvinerh"},"content":"        String testTime \u003d \"50:52\";","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"rouvinerh"},"content":"        Run runTest \u003d new Run(testTime, \"15.3\");","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"rouvinerh"},"content":"        Integer[] result \u003d runTest.parseTime(\"50:52\");","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"rouvinerh"},"content":"        Integer[] expected \u003d {50, 52};","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"        for (int i \u003d 0; i \u003c UiConstant.MIN_RUNTIME_ARRAY_LENGTH; i++) {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"rouvinerh"},"content":"            assertEquals(result[i], expected[i]);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"rouvinerh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"rouvinerh"},"content":"     * Test the behaviour of an incorrect time string being passed in for the run.","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"rouvinerh"},"content":"    void parseTime_wrongInput_throwInvalidInputForRun() {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"rouvinerh"},"content":"        String testTime \u003d \"50\";","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"rouvinerh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e new Run(testTime, \"15.3\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of calculating the total seconds taken for the run.","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"rouvinerh"},"content":"    void calculateSeconds_correctInput_returnTotalSeconds() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"rouvinerh"},"content":"        Run testRun \u003d new Run(\"01:05:42\", \"10.3\");","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"rouvinerh"},"content":"        int result \u003d testRun.calculateTotalSeconds();","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"rouvinerh"},"content":"        int expected \u003d 3942;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(result, expected);","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of calculating and returning a string representing the pace for the run.","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"rouvinerh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"rouvinerh"},"content":"    void calculatePace_correctInput_returnPace() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"rouvinerh"},"content":"        Run testRun \u003d new Run(\"1:20:10\", \"10.3\");","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"rouvinerh"},"content":"        String result \u003d testRun.calculatePace();","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"rouvinerh"},"content":"        String expected \u003d\"7:47/km\";","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"rouvinerh"},"content":"        assertEquals(result, expected);","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"rouvinerh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the getRun function when a valid Run object has been added.","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"rouvinerh"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"rouvinerh"},"content":"     * @throws CustomExceptions.InvalidInput If there are invalid parameters.","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"L5-Z"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"L5-Z"},"content":"    void getRun_validInput_expectCorrectParsing() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"L5-Z"},"content":"        String input \u003d \"new /e:run /d:10.3 /t:00:40:10 /date:15-03-2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"L5-Z"},"content":"        String[] result \u003d Run.getRun(input);","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"L5-Z"},"content":"        assertArrayEquals(new String[]{\"run\", \"10.3\", \"00:40:10\", \"15-03-2024\"}, result);","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"L5-Z"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"rouvinerh"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"rouvinerh"},"content":"     * Tests the behaviour of the getRun function when a Run object is added with missing","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"rouvinerh"},"content":"     * parameters.","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"rouvinerh"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"L5-Z"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"L5-Z"},"content":"    void getRun_missingParameter_expectException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"rouvinerh"},"content":"        String input \u003d \"new /e:run /d:10.3\";","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"L5-Z"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e Run.getRun(input));","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"L5-Z"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"JustinSoh":3,"rouvinerh":82,"L5-Z":13}},{"path":"src/test/java/workouts/WorkoutListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinSoh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"JustinSoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"JustinSoh"},"content":"import utility.UiConstant;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"JustinSoh"},"content":"import utility.CustomExceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"JustinSoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"JustinSoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"JustinSoh"},"content":"class WorkoutListTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"JustinSoh"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"JustinSoh"},"content":"    void setUp() {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"JustinSoh"},"content":"    @AfterEach","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"rouvinerh"},"content":"    void cleanup() {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"JustinSoh"},"content":"        WorkoutList.clearWorkoutsAndRun();","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of adding a new run to the run list.","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"rouvinerh"},"content":"     * Verifies whether the newly added run is correctly reflected in the run and WorkoutList.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"JustinSoh"},"content":"    void addRun_normalInput_expectAppend()  {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"JustinSoh"},"content":"            Run inputRun \u003d new Run(\"40:10\", \"10.3\", \"15/03/2024\");","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"rouvinerh"},"content":"            WorkoutList.addRun(inputRun);","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"JustinSoh"},"content":"            ArrayList\u003c? extends Workout\u003e runList \u003d WorkoutList.getWorkouts(UiConstant.RUN);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"JustinSoh"},"content":"            ArrayList\u003c? extends Workout\u003e workoutList \u003d WorkoutList.getWorkouts(UiConstant.ALL);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"JustinSoh"},"content":"            Workout expectedRun \u003d runList.get(runList.size() - 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"JustinSoh"},"content":"            Workout expectedWorkout \u003d workoutList.get(runList.size() - 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(inputRun, expectedRun);","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(inputRun, expectedWorkout);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.OutOfBounds e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"JustinSoh"},"content":"            fail(\"Should not throw an exception\");","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.InvalidInput e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"JustinSoh"},"content":"            fail(\"Should not throw an exception.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of getting the workout list with {@code RUN} , {@code ALL}","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"JustinSoh"},"content":"     * Verifies whether the method is able to correct retrieve the list of workouts.","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"JustinSoh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"JustinSoh"},"content":"    void getWorkouts_properInput_expectRetrievalRun() {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"JustinSoh"},"content":"            ArrayList\u003cRun\u003e inputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"JustinSoh"},"content":"            inputList.add(new Run(\"40:10\", \"10.3\", \"15/03/2024\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"JustinSoh"},"content":"            inputList.add(new Run(\"30:10\", \"20.3\", \"30/03/2023\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"JustinSoh"},"content":"            ArrayList\u003c? extends Workout\u003e runList \u003d WorkoutList.getWorkouts(UiConstant.RUN);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"JustinSoh"},"content":"            for(int i \u003d 0; i \u003c inputList.size(); i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"JustinSoh"},"content":"                Run expected \u003d inputList.get(i);","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"JustinSoh"},"content":"                Run actual \u003d (Run) runList.get(i);","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"JustinSoh"},"content":"                assertEquals(expected, actual);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"JustinSoh"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"JustinSoh"},"content":"        } catch (CustomExceptions.OutOfBounds | CustomExceptions.InvalidInput e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"JustinSoh"},"content":"            fail(\"Should not throw an exception.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of getting the workout list with {@code RUN} , {@code ALL}","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"JustinSoh"},"content":"     * Verifies whether the method is able to correct retrieve the list of workouts.","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"rouvinerh"},"content":"    void getWorkouts_improperFilters_throwInvalidInput() throws CustomExceptions.InvalidInput {","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"JustinSoh"},"content":"        ArrayList\u003cWorkout\u003e inputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"JustinSoh"},"content":"        inputList.add(new Run(\"40:10\", \"10.3\", \"15/03/2024\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"JustinSoh"},"content":"        inputList.add(new Run(\"30:10\", \"20.3\", \"30/03/2023\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.InvalidInput.class, () -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"JustinSoh"},"content":"            ArrayList\u003c? extends Workout\u003e runList \u003d WorkoutList.getWorkouts(\"invalidFilter\");","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"JustinSoh"},"content":"        });","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of getting an empty workout list","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"JustinSoh"},"content":"     * Expected behaviour is to raise {@code OutOfBounds} exception.","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"JustinSoh"},"content":"    void getWorkouts_emptyList_throwOutOfBoundsForRun() {","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.OutOfBounds.class, () -\u003e WorkoutList.getWorkouts(UiConstant.RUN));","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of getting an empty run list","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"JustinSoh"},"content":"     * Expected behaviour is to raise {@code OutOfBounds} exception.","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"JustinSoh"},"content":"    void getWorkouts_emptyList_throwOutOfBoundsForAll() {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.OutOfBounds.class, () -\u003e WorkoutList.getWorkouts(UiConstant.ALL));","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"JustinSoh"},"content":"     * Tests the behavior of getting the latest run from the run list.","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"JustinSoh"},"content":"     * Expected behavior is for {@code actual} to equal to the {@code secondRun}","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"JustinSoh"},"content":"    void getLatestRun_properList_correctRetrieval() {","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"JustinSoh"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"JustinSoh"},"content":"            new Run(\"20:10\", \"10.3\", \"15/03/2024\");","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"JustinSoh"},"content":"            Run secondRun \u003d new Run(\"20:10\", \"10.3\", \"15/03/2024\");","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"JustinSoh"},"content":"            Run actual \u003d WorkoutList.getLatestRun();","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"JustinSoh"},"content":"            assertEquals(secondRun, actual);","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"rouvinerh"},"content":"        } catch (CustomExceptions.OutOfBounds | CustomExceptions.InvalidInput e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"JustinSoh"},"content":"            fail(\"Should not throw an exception\");","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"JustinSoh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"JustinSoh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"JustinSoh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"JustinSoh"},"content":"     * Test the behaviour when you try to get the latest run from an empty list.","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"JustinSoh"},"content":"     * Expected behaviour is to raise {@code OutOfBounds} exception.","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"JustinSoh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"JustinSoh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"JustinSoh"},"content":"    void getLatestRun_emptyList_throwOutOfBound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"JustinSoh"},"content":"        // Call the method or code that should throw the exception","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"JustinSoh"},"content":"        assertThrows(CustomExceptions.OutOfBounds.class, WorkoutList::getLatestRun);","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"JustinSoh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"JustinSoh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"JustinSoh":133,"rouvinerh":5}},{"path":"src/test/java/workouts/WorkoutTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rouvinerh"},"content":"package workouts;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"rouvinerh"},"content":"class WorkoutTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"rouvinerh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"rouvinerh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"rouvinerh":5}}]
