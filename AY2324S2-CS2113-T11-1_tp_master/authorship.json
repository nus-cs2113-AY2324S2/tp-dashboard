[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"    mainClass.set(\"Main\")","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"    archiveBaseName.set(\"Wellness360\")","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"OKW32":2,"-":44}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/basic.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        IMPORT CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        An import statement is redundant if:","lastModifiedDate":"2022-04-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2022-04-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2022-04-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2022-04-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for unused import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        An import statement is unused if:","lastModifiedDate":"2022-04-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          It\u0027s not referenced in the file.","lastModifiedDate":"2022-04-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        NAMING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                     value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        LENGTH and CODING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2022-04-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2022-04-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            the same line. e.g., the following example is fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              } else","lastModifiedDate":"2022-04-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            \u003c!-- This next example is not fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"              }","lastModifiedDate":"2022-04-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"              else","lastModifiedDate":"2022-04-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            if (true) return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            if (true) { return 1; } // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            else if {","lastModifiedDate":"2022-04-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"              return 1; // else if should always be multi line","lastModifiedDate":"2022-04-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-04-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (true)","lastModifiedDate":"2022-04-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"              return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2022-04-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2022-04-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2022-04-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2022-04-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2022-04-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                      value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        ORDER CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2022-04-29"},{"lineNumber":208,"author":{"gitId":"JingHaoooo"},"content":"             @author, @version, @param, @return, @throws, @exceptions, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2022-04-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"          2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          3. Constructors","lastModifiedDate":"2022-04-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          4. Methods","lastModifiedDate":"2022-04-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2022-04-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                 8.4.3.  The prescribed order is:","lastModifiedDate":"2022-04-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                 public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2022-04-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                 synchronized, native, strictfp","lastModifiedDate":"2022-04-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"              --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        WHITESPACE CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        JAVADOC CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"JingHaoooo":1,"-":286}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |      Name      | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"--------|:--------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"![](https://media.licdn.com/dms/image/D5603AQHkV-k6X1OrwQ/profile-displayphoto-shrink_800_800/0/1706546079560?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dVDt-L7UCUhnFvCu_JsGbKvcP_C6_H84GbD-9pn3_kmA) | Ari Lim Ee Lik | [Github](https://github.com/genexus85) | [Portfolio](https://www.linkedin.com/in/ari-lim/)","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"![](https://media.licdn.com/dms/image/D5603AQFuRLdtBPRF8w/profile-displayphoto-shrink_800_800/0/1695963119816?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dbtdWBxTXo9eNexJwXHUDuklszbhbh948neJym3ReKjg) | Damien Wee | [Github](https://github.com/damiwee) | [Portfolio](https://www.linkedin.com/in/damien-wee-jl/)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"![](https://avatars.githubusercontent.com/u/110613918?v\u003d4) | Davian Kho Yong Quan | [Github](https://github.com/Daviancold) | [Portfolio](https://daviancold.netlify.app)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"![](https://media.licdn.com/dms/image/D5603AQFdPfbYvCPsKg/profile-displayphoto-shrink_200_200/0/1707484393431?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dwTkp-P9RPsxZt6f-r-tZzLGDxIpgqxlG0u1kHG4VIX4) | Lim Jing Hao | [Github](https://github.com/JingHaoooo) | [Portfolio](https://www.linkedin.com/in/jing-hao-lim-684326290/)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"![](https://media.licdn.com/dms/image/D5603AQG6kNYQZZB8Yw/profile-displayphoto-shrink_400_400/0/1695541754470?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dyABBk4FeDSfAyuSrM--nT9p-c2br34pKdqKomHPOwZ0) | Ong Kan Wu | [Github](https://github.com/OKW32) | [Portfolio](https://www.linkedin.com/in/ong-kan-wu-4a869726a/)","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"JingHaoooo":1,"OKW32":2,"genexus85":2,"Daviancold":1,"-":3}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"# Wellness360","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"genexus85":1,"-":7}},{"path":"src/main/java/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import parser.Parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"public class Main {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"        SleepTracker sleepTracker \u003d new SleepTracker();","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"        ReflectionManager reflection \u003d new ReflectionManager();","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"        HabitTracker habitTracker \u003d new HabitTracker();","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"            Ui.promptUserInput();","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"            //execute user command if it is valid else throw exception","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"            //save tasks to file after each command","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"            try {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"                Command userCommand \u003d Parser.determineCommand(sleepTracker, reflection, habitTracker, userInput);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"                userCommand.execute();","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"                isExit \u003d userCommand.isExit();","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"            } catch (Wellness360Exception e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"                Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":10,"genexus85":3,"damiwee":2,"Daviancold":23}},{"path":"src/main/java/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"public interface Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"    void execute() throws Wellness360Exception;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"    boolean isExit();","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"genexus85":6,"damiwee":3}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"    public ExitCommand(String commandArgs) throws Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"        if (!commandArgs.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"            throw new Wellness360Exception(\"Unknown command\");","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"        return;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"        return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":24}},{"path":"src/main/java/commands/habitcommands/AddHabitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.Habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"public class AddHabitCommand implements Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"    private Habit newHabit;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    public AddHabitCommand(HabitTracker habitTracker, String habitCommandArgs) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"        if (habitCommandArgs.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Habit Description cannot be left empty.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"        this.newHabit \u003d new Habit(habitCommandArgs.trim());","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"        habitTracker.addHabit(newHabit);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":28}},{"path":"src/main/java/commands/habitcommands/ListHabitsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"public class ListHabitsCommand implements Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"    public ListHabitsCommand(HabitTracker habitTracker) {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    public void execute() {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"        habitTracker.listHabits();","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":20}},{"path":"src/main/java/commands/habitcommands/UpdateHabitCountCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"public class UpdateHabitCountCommand implements Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"    private String habitID;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"    private String updatedCount;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    public UpdateHabitCountCommand(HabitTracker habitTracker, String habitCommandArgs) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"        String[] parts \u003d habitCommandArgs.trim().split(\"/id | /by\");","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"        if (!(parts.length \u003d\u003d 3)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Incorrect update command formatting\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"                    \"Use Format: habit update /id \u003chabit_ID\u003e /by \u003cincrement_count\u003e\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"                    \"Note: for \u003cincrement_count\u003e, use \u0027+1\u0027 to increase by 1, \u0027-1\u0027 to decrease by 1\");","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"        this.habitID \u003d parts[1].trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"        this.updatedCount \u003d parts[2].trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        habitTracker.updateHabitCount(habitID, updatedCount);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":35}},{"path":"src/main/java/commands/reflectcommands/GetReflectionQuestionsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"public class GetReflectionQuestionsCommand implements Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    public GetReflectionQuestionsCommand(ReflectionManager reflection) {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"        this.reflection \u003d reflection;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    public void execute() {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        reflection.printFiveRandomQuestions();","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":22}},{"path":"src/main/java/commands/sleepcommands/AddSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import sleep.SleepCycle;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"public class AddSleepCommand implements Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"    SleepTracker sleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"    SleepCycle sleepCycleToAdd;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    public AddSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"        if (sleepCommandArgs.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"                + \"sleep add \u003choursSlept\u003e /date \u003cdate\u003e\");","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d sleepCommandArgs.trim().split(\"/date\");","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"        this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"        int hourSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"            hourSlept \u003d Integer.parseInt(userCommand[0].trim());","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid number of hours slept\");","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"        this.sleepCycleToAdd \u003d new SleepCycle(hourSlept, userCommand[1]);","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"        sleepTracker.addSleepCycle(sleepCycleToAdd);","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":36}},{"path":"src/main/java/commands/sleepcommands/ListSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"public class ListSleepCommand implements Command  {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"    SleepTracker sleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"    public ListSleepCommand(SleepTracker sleepTracker) {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"        this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"        sleepTracker.listSleepCycles();","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":20}},{"path":"src/main/java/exceptions/FitnessException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class FitnessException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public FitnessException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/FocusException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class FocusException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public FocusException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/HabitException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class HabitException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public HabitException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/ReflectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class ReflectException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public ReflectException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/SleepException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class SleepException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public SleepException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/Wellness360Exception.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class Wellness360Exception extends Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public Wellness360Exception(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"        super(\"Error: \" + message);","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":6,"genexus85":1}},{"path":"src/main/java/habit/Habit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"public class Habit {","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"    protected String description;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"    protected int habitCount;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"    public Habit(String description) {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"        this.habitCount \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"    public int updateCount(String updatedCount) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"        int changeInCount \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"            changeInCount \u003d Integer.parseInt(updatedCount);","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"            if (habitCount + changeInCount \u003c 0) {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"                throw new HabitException(\"You cannot decrement a habit count to below zero\");","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"            habitCount +\u003d changeInCount;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please enter a valid count\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"                    \"Use: \u0027+1\u0027 to increase count, \u0027-1\u0027 to decrease count \");","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        return changeInCount;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"        return description + \" [count: \" + habitCount + \"]\";","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":34}},{"path":"src/main/java/habit/HabitTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"import static ui.Ui.printMessageWithoutSepNewLine;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"public class HabitTracker {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    private static ArrayList\u003cHabit\u003e habitList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"    public HabitTracker() {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"    public void addHabit (Habit newHabit) {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"        habitList.add(newHabit);","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"        String addHabitMessage \u003d \"Great! You have added a new habit:\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"        addHabitMessage +\u003d \"  \u0027\" + newHabit.description + \"\u0027 was successfully added!\";","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(addHabitMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"    public void listHabits() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        String listHabitsMessage \u003d \"Here is the list of all your habits!\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        if (habitList.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"            listHabitsMessage +\u003d \"  \u003cyou currently have no habits, add one now!\u003e\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"        for (int i \u003d 0; i \u003c habitList.size(); i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"            Habit habit \u003d habitList.get(i);","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"            listHabitsMessage +\u003d \"  \" + (i + 1) + \". \" + habit + \"\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        printMessageWithoutSepNewLine(listHabitsMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"    public static boolean isValidHabitID(int taskNumber) {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"        return taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d habitList.size();","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"    public void updateHabitCount(String habitIDString, String updatedCount) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"        int habitID;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"            habitID \u003d Integer.parseInt(habitIDString);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"            if (!isValidHabitID(habitID)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"                throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"        Habit habit \u003d habitList.get(habitID - 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"        int changeInCount \u003d habit.updateCount(updatedCount);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"        String updateHabitCountMessage \u003d \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"        if (changeInCount \u003e 0) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"genexus85"},"content":"            updateHabitCountMessage +\u003d \"Good Job! You have completed your habit!\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"genexus85"},"content":"        updateHabitCountMessage +\u003d \"The count for your habit has been updated:\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"genexus85"},"content":"        updateHabitCountMessage +\u003d \"  \" + habitID + \". \" + habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(updateHabitCountMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":62}},{"path":"src/main/java/parser/HabitCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.AddHabitCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.ListHabitsCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.UpdateHabitCountCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"public class HabitCommandParser {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"    public static Command determineHabitCommand(HabitTracker habitTracker, String commandArgs) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"        String userHabitCommand \u003d userCommand[0].trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"        String habitCommandArgs \u003d userCommand.length \u003d\u003d 2 ? userCommand[1].trim() : \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"        switch(userHabitCommand) {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"        case \"add\":","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"            return new AddHabitCommand(habitTracker, habitCommandArgs);","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"        case \"list\":","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"            return new ListHabitsCommand(habitTracker);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"        case \"update\":","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"            return new UpdateHabitCountCommand(habitTracker, habitCommandArgs);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"        default:","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Unknown command\");","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":28}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import commands.ExitCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"import static parser.HabitCommandParser.determineHabitCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import static parser.ReflectionCommandParser.determineReflectionCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"import static parser.SleepCommandParser.determineSleepCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"public class Parser {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    public static Command determineCommand(SleepTracker sleepTracker,","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"                                           ReflectionManager reflection,","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"                                           HabitTracker habitTracker,","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"                                           String userInput)","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"            throws Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"        String[] userWords \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"        String userCommandSection \u003d userWords[0];","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"        String commandArgs \u003d userWords.length \u003d\u003d 2 ? userWords[1] : \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        switch (userCommandSection) {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        case \"reflect\":","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"            return determineReflectionCommand(reflection, commandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"        case \"habit\":","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"            return determineHabitCommand(habitTracker, commandArgs);","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"        case \"sleep\":","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"            return determineSleepCommand(sleepTracker, commandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        case \"fitness\":","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"        case \"focus\":","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"        case \"exit\":","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"            return new ExitCommand(commandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"            throw new Wellness360Exception(\"Unknown Wellness360 command\");","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":7,"genexus85":25,"damiwee":10}},{"path":"src/main/java/parser/ReflectionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import commands.reflectcommands.GetReflectionQuestionsCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"public class ReflectionCommandParser {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    public static Command determineReflectionCommand(ReflectionManager reflection, String commandArgs)","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"        String userReflectionCommand \u003d userCommand[0];","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        String reflectionCommandArgs \u003d userCommand.length \u003d\u003d 2 ? userCommand[1] : \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"        switch(userReflectionCommand) {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"        case \"get\":","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"            return new GetReflectionQuestionsCommand(reflection);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Unknown reflect command\");","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":24}},{"path":"src/main/java/parser/SleepCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.AddSleepCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.ListSleepCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"public class SleepCommandParser {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"    public static Command determineSleepCommand(SleepTracker sleepTracker, String commandArgs)","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"            throws SleepException {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"        String userSleepCommand \u003d userCommand[0];","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"        String sleepCommandArgs \u003d userCommand.length \u003d\u003d 2 ? userCommand[1] : \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"        switch(userSleepCommand) {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"        case \"add\":","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"            return new AddSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"        case \"list\":","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"            return new ListSleepCommand(sleepTracker);","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"            throw new SleepException(\"Unknown sleep command\");","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":25,"damiwee":1}},{"path":"src/main/java/reflection/ReflectionManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"public class ReflectionManager {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    private ArrayList\u003cReflectionQuestion\u003e fiveRandomQuestions;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"    private ReflectionQuestionBank questionBank;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    public ReflectionManager() {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"        this.questionBank \u003d new ReflectionQuestionBank();","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    public void printFiveRandomQuestions() {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"            fiveRandomQuestions \u003d questionBank.getFiveRandomQuestions();","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"            Ui.printList(fiveRandomQuestions);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"        } catch (ReflectException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"    public ReflectionQuestionBank getQuestionBank() {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        return questionBank;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":31}},{"path":"src/main/java/reflection/ReflectionQuestion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"public class ReflectionQuestion {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"    private String question;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"    public ReflectionQuestion(String question) {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"        this.question \u003d question;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"        return question;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":14}},{"path":"src/main/java/reflection/ReflectionQuestionBank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"public class ReflectionQuestionBank {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    private ArrayList\u003cReflectionQuestion\u003e reflectionQuestionList;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"    private String[] questions \u003d {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"        \"What have been the most significant lessons you\u0027ve learned about yourself in the past year?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"        \"How have your values evolved over time, and why?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"        \"What habits or behaviors do you want to cultivate or change to become a better version of yourself?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a recent failure or setback. What did you learn from it, and how will you apply those lessons \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"                \"moving forward?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"        \"In what areas do you feel you\u0027ve made the most progress recently, and what contributed to that progress?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"        \"What are your biggest strengths, and how can you leverage them more effectively in your daily life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"        \"Describe a moment when you stepped outside of your comfort zone. What did you discover about yourself?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"        \"How do you define success, and how has that definition evolved over time?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"        \"What activities or hobbies bring you the most joy and fulfillment, and how can you incorporate more of them \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"                \"into your life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you received constructive criticism. How did you react, and what did you learn from \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"                \"the experience?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        \"Who are the people in your life who bring you the most happiness and support? How do you nurture \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"                \"those relationships?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        \"Have there been any conflicts or misunderstandings in your relationships recently? How have you worked \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"                \"to resolve them?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you felt truly understood by someone. What made that connection so meaningful?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"        \"How do you prioritize spending time with loved ones amidst your busy schedule?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        \"What qualities do you admire most in your closest friends or family members, and why?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"        \"Are there any relationships in your life that feel strained or unfulfilling? How can you address \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"                \"those challenges?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        \"Reflect on your communication style. In what ways do you excel, and where do you see room for improvement?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        \"Describe a memorable shared experience with someone you care about. What made it special?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        \"How do you express gratitude toward the people who enrich your life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you forgave someone or were forgiven. What did you learn from that experience?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"        \"What motivates you to excel in your career, beyond financial rewards?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a recent professional success. What factors contributed to your achievement?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"        \"In what ways do you seek to grow and develop within your current role or industry?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        \"How do you balance pursuing your career ambitions with maintaining a healthy work-life balance?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you faced a significant challenge at work. How did you overcome it?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"        \"What steps are you taking to advance your skills and knowledge in your field?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"        \"Describe a mentor or role model who has had a profound impact on your career journey. \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"                \"What lessons have you learned from them?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"        \"How do you navigate workplace conflicts or disagreements with colleagues or superiors?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"        \"Reflect on your career goals. Are they still aligned with your passions and values, or have they evolved?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"        \"What do you consider to be your greatest professional achievement so far, and why?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"        \"How do you prioritize self-care and well-being in your daily life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a recent creative project or activity that brought you joy. What inspired you to pursue it?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"        \"In what ways do you express yourself creatively, whether through art, writing, music, or other mediums?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"        \"Describe a time when you felt in a state of flow, completely absorbed in a creative endeavor.\",","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"        \"How do you overcome creative blocks or periods of stagnation?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a piece of art, literature, or music that has deeply resonated with you. \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"                \"What emotions or insights did it evoke?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"        \"What role does creativity play in your life, and how do you nurture it?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"        \"How do you make time for creative pursuits amidst your other responsibilities and commitments?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you took a creative risk. What did you learn from the experience?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"        \"Describe a recent moment when you felt inspired by something or someone in your environment.\",","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"        \"How do you celebrate your unique talents and creative voice?\"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"    };","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"    public ReflectionQuestionBank() {","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"        this.reflectionQuestionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"        setUpReflectionBank();","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"    private void setUpReflectionBank() {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"        for(String question : questions) {","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"            ReflectionQuestion reflectionQuestion \u003d new ReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"            addReflectionQuestion(reflectionQuestion);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion(ReflectionQuestion question) {","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"damiwee"},"content":"        if (!question.toString().isBlank()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"            reflectionQuestionList.add(question);","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"damiwee"},"content":"    public ArrayList\u003cReflectionQuestion\u003e getFiveRandomQuestions() throws ReflectException {","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"damiwee"},"content":"            ArrayList\u003cReflectionQuestion\u003e randomQuestions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"damiwee"},"content":"            // Create a copy of the original list","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"damiwee"},"content":"            ArrayList\u003cReflectionQuestion\u003e copyList \u003d new ArrayList\u003c\u003e(reflectionQuestionList);","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"damiwee"},"content":"            // Shuffle the copy list","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"damiwee"},"content":"            Collections.shuffle(copyList);","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"damiwee"},"content":"            // Select the first five questions from the shuffled copy list and","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"damiwee"},"content":"            // add them to the result list","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"damiwee"},"content":"            for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"damiwee"},"content":"                randomQuestions.add(copyList.get(i));","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"damiwee"},"content":"            return randomQuestions;","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"damiwee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Question bank is empty\");","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"damiwee"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"damiwee"},"content":"        return reflectionQuestionList.size();","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"damiwee"},"content":"    public ArrayList\u003cReflectionQuestion\u003e getQuestionsList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"damiwee"},"content":"        return reflectionQuestionList;","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":110}},{"path":"src/main/java/sleep/SleepCycle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"public class SleepCycle {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"    private double hoursSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"    private String dateOfSleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"    public SleepCycle(double hours, String date) {","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"        this.hoursSlept \u003d hours;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"        this.dateOfSleep \u003d date;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"    public double getHoursSlept() {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"        return hoursSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    public String getDateOfSleep() {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"        return dateOfSleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"        return this.dateOfSleep  + \": \" + this.hoursSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":24}},{"path":"src/main/java/sleep/SleepCycleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"public class SleepCycleList {","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"    private ArrayList\u003cSleepCycle\u003e sleepCycleList;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"    private double totalHrsSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    private int numberOfCycles;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"    public SleepCycleList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"        this.sleepCycleList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"        this.totalHrsSlept \u003d 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"        this.numberOfCycles \u003d 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"    public void addSleepCycle(SleepCycle sleepCycle) {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.add(sleepCycle);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"        totalHrsSlept +\u003d sleepCycle.getHoursSlept();","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"        numberOfCycles +\u003d 1;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(\"---SleepCycle for \" + sleepCycle.getDateOfSleep() + \" has been added ---\");","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"    public void listSleepCycles() {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"        String sleepListMessage \u003d \"Total hrs slept: \" + totalHrsSlept + System.lineSeparator();","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c numberOfCycles - 1; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"            sleepListMessage +\u003d (i + 1) + \". \" + sleepCycleList.get(i) + System.lineSeparator();","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"        sleepListMessage +\u003d numberOfCycles + \". \" + sleepCycleList.get(numberOfCycles - 1);","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(sleepListMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"    public int getNumberOfCycles() {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        return numberOfCycles;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"    public double getTotalHrsSlept() {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"        return totalHrsSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":42}},{"path":"src/main/java/sleep/SleepTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"public class SleepTracker {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"    SleepCycleList sleepCycleList;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"    public SleepTracker() {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"        this.sleepCycleList \u003d new SleepCycleList();","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"    public void listSleepCycles() {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.listSleepCycles();","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    public void addSleepCycle(SleepCycle sleepCycleToAdd) {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(sleepCycleToAdd);","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":18}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package storage;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import java.io.File;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"public abstract class Storage {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    public static ArrayList\u003cString\u003e loadDataFromFile(String filePath) {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"        try (Scanner scanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"                String nextLineOfData \u003d scanner.nextLine();","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"                data.add(nextLineOfData);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"            createFolder(filePath);","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        return data;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    public static void createFolder(String filePath) {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"            f.createNewFile();","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    public static \u003cT\u003e void saveTasksToFile(String filePath, ArrayList\u003cT\u003e data) {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"            for (T item : data) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"                fw.write(item.toString() + System.lineSeparator());","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"            fw.close();","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":54}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":" * Ui class handles user interface related functionalities","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":" * such as displaying messages,prompting user input, and","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":" * printing separators.","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"public class Ui {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    private static final String BOT_NAME \u003d \"Wellness360\";","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"    private static final String SEP \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"     * Greets the user upon starting the application.","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"     * Displays a welcome message including the chatbot\u0027s name.","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    public static void greetUser() {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"        System.out.println(SEP + \"\\nHello! I\u0027m \" + BOT_NAME);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"        System.out.println(\"What can I do for you?\\n\" + SEP);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"     * Prints the prompt for user input.","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"    public static void promptUserInput() {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"        System.out.print(\"You:\");","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"     * Says goodbye to the user upon exiting the application.","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"     * Displays a farewell message.","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\" + SEP);","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"     * Prints a message followed by a separator and a new line.","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"     * @param message the message to be printed","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"    public static void printMessageWithSepNewLine(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"        System.out.println(SEP + \"\\n\" +message + \"\\n\" + SEP);","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"    public static void printMessageWithoutSepNewLine(String message) {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"        System.out.println(SEP + \"\\n\" + message + SEP);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"    public static void printList(ArrayList list) {","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"        System.out.println(SEP);","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c list.size(); i ++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"            System.out.println((i + 1) + \". \" + list.get(i).toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"        System.out.println(SEP);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":53,"genexus85":4,"damiwee":2}},{"path":"src/test/java/reflect/ReflectQuestionBankTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"package reflect;","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionQuestion;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionQuestionBank;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"public class ReflectQuestionBankTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    private ReflectionQuestionBank reflectionQuestionBank;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"        reflectionQuestionBank \u003d new ReflectionQuestionBank();","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion_addQuestion_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"What is reflection?\");","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        reflectionQuestionBank.addReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        assertEquals(42, reflectionQuestionBank.getTaskListSize());","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion_addBlankQuestion_skipOverBlankQuestion() {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        reflectionQuestionBank.addReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        assertEquals(41, reflectionQuestionBank.getTaskListSize());","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    public void getFiveRandomQuestions_getFiveQuestions_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion[] questions \u003d {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 1\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 2\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 3\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 4\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 5\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 6\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 7\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 8\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 9\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 10\")","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"        };","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"        ArrayList\u003cReflectionQuestion\u003e expectedQuestions \u003d new ArrayList\u003c\u003e(Arrays.asList(questions));","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"        for (ReflectionQuestion question : expectedQuestions) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"            reflectionQuestionBank.addReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"            ArrayList\u003cReflectionQuestion\u003e randomQuestions \u003d reflectionQuestionBank.getFiveRandomQuestions();","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"            // Assert that there are exactly 5 questions returned","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"            assertEquals(5, randomQuestions.size());","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"            // Assert that all questions returned are from the expected set","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"damiwee"},"content":"            for (ReflectionQuestion question : randomQuestions) {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"                assertNotNull(expectedQuestions.contains(question));","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"        } catch (ReflectException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"            fail(\"Question list is empty: \" + e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"damiwee"},"content":"    public void testGetTaskListSize() {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"        assertEquals(41, reflectionQuestionBank.getTaskListSize());","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"damiwee":78}},{"path":"src/test/java/sleep/SleepCycleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"public class SleepCycleListTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"    private SleepCycleList sleepCycleList;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"        sleepCycleList \u003d new SleepCycleList();","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    public void addSleepCycle_addCycle_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"        SleepCycle cycle \u003d new SleepCycle(2, \"25/01/22\");","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(cycle);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"        assertEquals(1, sleepCycleList.getNumberOfCycles());","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"    public void addTwoSleepCycle_getTotalHoursSlept_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        SleepCycle cycle \u003d new SleepCycle(2, \"25/01/22\");","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(cycle);","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"        cycle \u003d new SleepCycle(3, \"26/01/22\");","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(cycle);","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        assertEquals(5, sleepCycleList.getTotalHrsSlept());","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":32}}]
