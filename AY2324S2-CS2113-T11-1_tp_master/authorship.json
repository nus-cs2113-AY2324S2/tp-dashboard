[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"    mainClass.set(\"Main\")","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"    archiveBaseName.set(\"Wellness360\")","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"tasks.withType(JavaExec) {","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":4,"OKW32":2,"-":44}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/basic.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        IMPORT CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        An import statement is redundant if:","lastModifiedDate":"2022-04-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2022-04-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2022-04-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2022-04-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for unused import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        An import statement is unused if:","lastModifiedDate":"2022-04-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          It\u0027s not referenced in the file.","lastModifiedDate":"2022-04-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        NAMING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                     value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        LENGTH and CODING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2022-04-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2022-04-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            the same line. e.g., the following example is fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              } else","lastModifiedDate":"2022-04-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            \u003c!-- This next example is not fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"              }","lastModifiedDate":"2022-04-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"              else","lastModifiedDate":"2022-04-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            if (true) return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            if (true) { return 1; } // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            else if {","lastModifiedDate":"2022-04-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"              return 1; // else if should always be multi line","lastModifiedDate":"2022-04-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-04-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (true)","lastModifiedDate":"2022-04-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"              return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2022-04-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2022-04-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2022-04-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2022-04-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2022-04-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                      value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        ORDER CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2022-04-29"},{"lineNumber":208,"author":{"gitId":"JingHaoooo"},"content":"             @author, @version, @param, @return, @throws, @exceptions, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2022-04-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"          2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          3. Constructors","lastModifiedDate":"2022-04-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          4. Methods","lastModifiedDate":"2022-04-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2022-04-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                 8.4.3.  The prescribed order is:","lastModifiedDate":"2022-04-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                 public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2022-04-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                 synchronized, native, strictfp","lastModifiedDate":"2022-04-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"              --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        WHITESPACE CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        JAVADOC CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"JingHaoooo":1,"-":286}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |      Name      | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"--------|:--------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"![](https://media.licdn.com/dms/image/D5603AQHkV-k6X1OrwQ/profile-displayphoto-shrink_800_800/0/1706546079560?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dVDt-L7UCUhnFvCu_JsGbKvcP_C6_H84GbD-9pn3_kmA) | Ari Lim Ee Lik | [Github](https://github.com/genexus85) | [Portfolio](https://www.linkedin.com/in/ari-lim/)","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"![](https://media.licdn.com/dms/image/D5603AQFuRLdtBPRF8w/profile-displayphoto-shrink_800_800/0/1695963119816?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dbtdWBxTXo9eNexJwXHUDuklszbhbh948neJym3ReKjg) | Damien Wee | [Github](https://github.com/damiwee) | [Portfolio](https://www.linkedin.com/in/damien-wee-jl/)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"![](https://avatars.githubusercontent.com/u/110613918?v\u003d4) | Davian Kho Yong Quan | [Github](https://github.com/Daviancold) | [Portfolio](https://daviancold.netlify.app)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"![](https://media.licdn.com/dms/image/D5603AQFdPfbYvCPsKg/profile-displayphoto-shrink_200_200/0/1707484393431?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dwTkp-P9RPsxZt6f-r-tZzLGDxIpgqxlG0u1kHG4VIX4) | Lim Jing Hao | [Github](https://github.com/JingHaoooo) | [Portfolio](https://www.linkedin.com/in/jing-hao-lim-684326290/)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"![](https://media.licdn.com/dms/image/D5603AQG6kNYQZZB8Yw/profile-displayphoto-shrink_400_400/0/1695541754470?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dyABBk4FeDSfAyuSrM--nT9p-c2br34pKdqKomHPOwZ0) | Ong Kan Wu | [Github](https://github.com/OKW32) | [Portfolio](https://www.linkedin.com/in/ong-kan-wu-4a869726a/)","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"JingHaoooo":1,"OKW32":2,"genexus85":2,"Daviancold":1,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"# Wellness360 Developer Guide","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"## Table of Contents","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"- [Wellness360 Developer Guide](#wellness360-developer-guide)","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"- [Table of contents](#table-of-contents)","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"- [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"  - [Setting up the project in your computer](#setting-up-the-project-in-your-computer)","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"  - [Before writing code](#before-writing-code)","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"- [Design \u0026 implementation]()","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"  - [Architecture]()","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"  - [Ui component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"  - [Command parser component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"  - [Storage component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"  - [Reflection component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"  - [Habit tracker component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"  - [Sleep tracker component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"  - [Focus timer component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"  - [Fitness tracker component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"Reference to AB-3 Developer Guide","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"* [Source URL](https://se-education.org/addressbook-level3/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"* Used as template to structure this DeveloperGuide","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"Reference to AB-3 diagrams code","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"* [Source URL](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams)","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"* Used as reference to understand PlantUML syntax","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"## Setting up, getting started","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"### Setting up the project in your computer","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"Fork this repo, and clone it on your local machine.","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"You are recommended to use Intellij IDEA:","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"1. Configure the JDK: Follow the guide [[se-edu/guides] IDEA: Configuring the JDK](https://se-education.org/guides/tutorials/intellijJdk.html) to ensure Intellij is configured to use JDK 11.","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"2. Import the project as a Gradle project: Follow the guide [[se-edu/guides] IDEA: Importing a Gradle project](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"3. Verify the setup:","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"    * Run the main class in IntelliJ and try a few commands.","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"    * Run the tests to ensure they all pass.","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"### Before writing code","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"1. Configure the coding style: [[se-edu/guides] IDEA: Configuring the code style](https://se-education.org/guides/tutorials/intellijCodeStyle.html)","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"2. Set up CI: This project comes with a GitHub Actions config files (in .github/workflows folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the master branch or to any PR. No set up required.","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"3. Read the developer guide to understand the design.","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"damiwee":44,"-":36}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"# Wellness360","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"genexus85":1,"-":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"# Wellness360 User Guide","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"Wellness360 is a wellness app. It is meant for stressed Engineering Students who prefer CLI over GUI and want to keep track of their overall wellbeing. Our app offers comprehensive tracking and management tools, providing personalized support to alleviate stress and enhance overall well-being. It can help you take control of your mental and physical health effortlessly, so you can focus on your studies with peace of mind.","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"## Table of Contents","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"- [Wellness360 User Guide](#wellness360-user-guide)","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    - [Starting Wellness360](#quick-start)","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"    - [Features](#features)","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    - [Command Format](#features)","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    - [Usage](#usage)","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"        - Reflection Manager","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"          - [`reflect get` - Get reflection questions](#get-reflection-questions-reflect-get)","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"          - [`reflect save` - Save favourite reflection question](#save-favourite-reflection-question-reflect-save)","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"          - [`reflect unsave` - Unsave favourite reflection question](#unsave-favourite-reflection-question-reflect-unsave)","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"          - [`reflect list` - View favourite reflection questions](#view-favourite-reflection-questions-reflect-list)","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"          - [`reflect help` - View reflection help menu](#view-reflection-help-menu-reflect-help)","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"        - Habit Tracker","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"          - [`habit add` - Add a new habit](#add-a-new-habit-habit-add)","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"          - [`habit list` - List out all habits](#list-out-all-habits-habit-list)","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"          - [`habit update` - Update habit count after completing a habit](#update-habit-count-after-completing-a-habit-habit-update)","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"        - Sleep Tracker","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"          - [`sleep add` - Add a new sleep cycle](#add-a-new-sleep-cycle-sleep-add)","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"          - [`sleep list` - List out all sleep cycles](#list-out-all-sleep-cycles-sleep-list)","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"        - Focus Timer","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"          - [`focus start` - Start a new focus timer](#start-a-new-focus-timer-focus-start)","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"          - [`focus stop` - Stop the current focus timer](#stop-the-current-focus-timer-focus-stop)","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"## Quick Start","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"2. Down the latest version of `Wellness360` from [here](http://link.to/duke).","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"3. To start `Wellness360` Using the `jar` file, go to the containing folder for Wellness360. ","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"Then, on your terminal of choice, run:","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"-$ java -jar tp.jar","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"Wellness360 comes with many features for you to manage your well-being using CLI. The 5 main features are Habit ","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"Tracker, Sleep Tracker, Self Reflection, Focus Timer, and Fitness Motivation.","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"## Command Format","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"A command has the general structure:","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"\u003cfeature\u003e \u003ccommand\u003e \u003c/arg1\u003e \u003cparam1\u003e \u003c/arg2\u003e \u003cparam2\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"- Arguments and parameters are not compulsory for all commands. Refer to respective feature commands for specifics.  ","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"- Feature, command and arguments are case-sensitive. It is compulsory to use lower case.","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"- Parameters are not case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"## Usage","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"### Get reflection questions: `reflect get`","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"Allows user to generate a set of 5 random unique reflection questions from ","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"a question bank for users to view and reflect on. The questions come ","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"from 5 main categories: personal growth and development, relationships ","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"and social connections, career and professional development, health ","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"and well-being and lastly creativity and personal expression. ","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"The questions are meant to be randomized for users to think about ","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"various aspects of their lives. It is not guaranteed to get a ","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"question from each category. One or more questions may come from the ","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"same category.  ","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"Format: ","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"reflect get","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"* The `reflect` and `get` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"reflect get","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"damiwee"},"content":"Expected outcome:  ","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"damiwee"},"content":"Note that the questions are randomized.","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"damiwee"},"content":"1. How do you overcome creative blocks or periods of stagnation?","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"damiwee"},"content":"2. Reflect on a recent professional success. What factors contributed to your achievement?","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"damiwee"},"content":"3. What are your biggest strengths, and how can you leverage them more effectively in your daily life?","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"damiwee"},"content":"4. How do you prioritize self-care and well-being in your daily life?","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"damiwee"},"content":"5. Reflect on a time when you took a creative risk. What did you learn from the experience?","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"damiwee"},"content":"### Save favourite reflection question: `reflect save`","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"damiwee"},"content":"Allows user to save reflection question to favourites after viewing generated questions. This allows the user ","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"damiwee"},"content":"to review the question another time. The favourites list is stored in memory as a text file. ","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"damiwee"},"content":"New users will have an empty favourites list file on load, but existing users can load back favourite questions from","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"damiwee"},"content":"past sessions.","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"damiwee"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"damiwee"},"content":"reflect save [QUESTION_ID]","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"damiwee"},"content":"* The `reflect` and `save` keywords are case-sensitive. Use lower casing for these 2 keywords.","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"damiwee"},"content":"* Questions that can be saved correspond to the most recent list of generated questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"damiwee"},"content":"* Users need to generate questions before attempting to save it to favourites.","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"damiwee"},"content":"* `QUESTION_ID` only accepts integers between 1 and 5 inclusive.","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"damiwee"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"damiwee"},"content":"reflect save 1","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"damiwee"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"damiwee"},"content":"Got it. Added reflection question to favourites:","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"damiwee"},"content":"How do you overcome creative blocks or periods of stagnation?","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"damiwee"},"content":"### Unsave favourite reflection question: `reflect unsave`","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"damiwee"},"content":"Allows user to unsave reflection question from favourites list if the question is no longer relevant to the user. The favourites list is stored in memory as a text file.","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"damiwee"},"content":"New users will have an empty favourites list file on load, but existing users can load back favourite questions from","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"damiwee"},"content":"past sessions.","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"damiwee"},"content":"Format:","lastModifiedDate":"2024-03-23"},{"lineNumber":126,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"damiwee"},"content":"reflect unsave [QUESTION_ID]","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"damiwee"},"content":"* The `reflect` and `unsave` keywords are case-sensitive. Use lower casing for these 2 keywords.","lastModifiedDate":"2024-03-23"},{"lineNumber":131,"author":{"gitId":"damiwee"},"content":"* Questions that can be unsaved correspond to the reflection questions favourites list.","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":133,"author":{"gitId":"damiwee"},"content":"Example of usage:","lastModifiedDate":"2024-03-23"},{"lineNumber":134,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":135,"author":{"gitId":"damiwee"},"content":"reflect unsave 1","lastModifiedDate":"2024-03-23"},{"lineNumber":136,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"damiwee"},"content":"Expected outcome:","lastModifiedDate":"2024-03-23"},{"lineNumber":138,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"damiwee"},"content":"Got it. Unsaved reflection question from favourites:","lastModifiedDate":"2024-03-23"},{"lineNumber":141,"author":{"gitId":"damiwee"},"content":"How do you overcome creative blocks or periods of stagnation?","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-23"},{"lineNumber":143,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":145,"author":{"gitId":"damiwee"},"content":"### View favourite reflection questions: `reflect list`","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"damiwee"},"content":"Allow the user to view favourite reflection questions that have been saved.","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"damiwee"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"damiwee"},"content":"reflect list","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"damiwee"},"content":"* The `reflect` and `list` keywords are case-sensitive. Use lower casing for these 2 keywords.  ","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"damiwee"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"damiwee"},"content":"reflect list","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"damiwee"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"damiwee"},"content":"Favourites list:","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"damiwee"},"content":"1. How do you overcome creative blocks or periods of stagnation?","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"damiwee"},"content":"2. How do you prioritize self-care and well-being in your daily life?","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"damiwee"},"content":"3. Reflect on a time when you took a creative risk. What did you learn from the experience?","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"damiwee"},"content":"### View reflection help menu: `reflect help`","lastModifiedDate":"2024-03-23"},{"lineNumber":171,"author":{"gitId":"damiwee"},"content":"Allows new users to check what commands are available for reflection feature and their formats.","lastModifiedDate":"2024-03-23"},{"lineNumber":172,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":173,"author":{"gitId":"damiwee"},"content":"Format:","lastModifiedDate":"2024-03-23"},{"lineNumber":174,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":175,"author":{"gitId":"damiwee"},"content":"reflect help","lastModifiedDate":"2024-03-23"},{"lineNumber":176,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":177,"author":{"gitId":"damiwee"},"content":"* The `reflect` and `help` keywords are case-sensitive. Use lower casing for these 2 keywords.","lastModifiedDate":"2024-03-23"},{"lineNumber":178,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":179,"author":{"gitId":"damiwee"},"content":"Example of usage:","lastModifiedDate":"2024-03-23"},{"lineNumber":180,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":181,"author":{"gitId":"damiwee"},"content":"reflect help","lastModifiedDate":"2024-03-23"},{"lineNumber":182,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":183,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":184,"author":{"gitId":"damiwee"},"content":"Expected outcome:","lastModifiedDate":"2024-03-23"},{"lineNumber":185,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":186,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-23"},{"lineNumber":187,"author":{"gitId":"damiwee"},"content":"Commands for reflection feature:","lastModifiedDate":"2024-03-23"},{"lineNumber":188,"author":{"gitId":"damiwee"},"content":"1. reflect get: Get 5 random reflection questions","lastModifiedDate":"2024-03-23"},{"lineNumber":189,"author":{"gitId":"damiwee"},"content":"2. reflect save \u003creflection_id\u003e: Save reflection question by id to favourites list","lastModifiedDate":"2024-03-23"},{"lineNumber":190,"author":{"gitId":"damiwee"},"content":"3. reflect unsave \u003creflection_id\u003e: Unsave reflection question by id from favourites list","lastModifiedDate":"2024-03-23"},{"lineNumber":191,"author":{"gitId":"damiwee"},"content":"4. reflect list: Retrieve questions from favourites list","lastModifiedDate":"2024-03-23"},{"lineNumber":192,"author":{"gitId":"damiwee"},"content":"5. reflect help: Get help menu for reflect commands","lastModifiedDate":"2024-03-23"},{"lineNumber":193,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-23"},{"lineNumber":194,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":195,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":196,"author":{"gitId":"genexus85"},"content":"### Add a new habit: `habit add`","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"genexus85"},"content":"Allow the user to add new habits into the habit tracker.","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"genexus85"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"genexus85"},"content":"habit add [HABIT_DESCRIPTION]","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"genexus85"},"content":"* The `habit` and `add` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"genexus85"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"genexus85"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":209,"author":{"gitId":"genexus85"},"content":"habit add vacuum and mop the floor","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"genexus85"},"content":"Great! You have added a new habit:","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"genexus85"},"content":"  \u0027vacuum and mop the floor\u0027 was successfully added!","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"genexus85"},"content":"### List out all habits: `habit list`","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"genexus85"},"content":"Prints a list of all the habits that the user has added into the habit tracker.","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"genexus85"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"genexus85"},"content":"habit list","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":226,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"genexus85"},"content":"* The `habit` and `list` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"genexus85"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":229,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"genexus85"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":231,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"genexus85"},"content":"habit list","lastModifiedDate":"2024-03-18"},{"lineNumber":233,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":234,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":235,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":236,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":237,"author":{"gitId":"genexus85"},"content":"Here is the list of all your habits!","lastModifiedDate":"2024-03-18"},{"lineNumber":238,"author":{"gitId":"genexus85"},"content":"  1. vacuum and mop the floor [count: 2]","lastModifiedDate":"2024-03-18"},{"lineNumber":239,"author":{"gitId":"genexus85"},"content":"  2. complete leetcode daily question [count: 3]","lastModifiedDate":"2024-03-18"},{"lineNumber":240,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":241,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":242,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"genexus85"},"content":"### Update habit count after completing a habit: `habit update`","lastModifiedDate":"2024-03-18"},{"lineNumber":244,"author":{"gitId":"genexus85"},"content":"Allow the user to update the number of times they have completed a habit. The user will be able to increase the ","lastModifiedDate":"2024-03-18"},{"lineNumber":245,"author":{"gitId":"genexus85"},"content":"count after they have completed the habit during the day. If the user has accidentally increased the count, ","lastModifiedDate":"2024-03-18"},{"lineNumber":246,"author":{"gitId":"genexus85"},"content":"they can decrease the count too.","lastModifiedDate":"2024-03-18"},{"lineNumber":247,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":248,"author":{"gitId":"genexus85"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":249,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":250,"author":{"gitId":"genexus85"},"content":"habit update /id [HABIT_ID] /by [INCREMENT_COUNT]","lastModifiedDate":"2024-03-18"},{"lineNumber":251,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":252,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":253,"author":{"gitId":"genexus85"},"content":"* The `habit`, `list`, `id` and `by` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":254,"author":{"gitId":"genexus85"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":255,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":256,"author":{"gitId":"genexus85"},"content":"Example of usage (increasing count):","lastModifiedDate":"2024-03-18"},{"lineNumber":257,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":258,"author":{"gitId":"genexus85"},"content":"habit update /id 2 /by +1","lastModifiedDate":"2024-03-18"},{"lineNumber":259,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":260,"author":{"gitId":"genexus85"},"content":"* For increasing count, you can omit the positive sign `+` in front, and just type the command as `/by 1`","lastModifiedDate":"2024-03-18"},{"lineNumber":261,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":262,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":263,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":264,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":265,"author":{"gitId":"genexus85"},"content":"Good Job! You have completed your habit!","lastModifiedDate":"2024-03-18"},{"lineNumber":266,"author":{"gitId":"genexus85"},"content":"The count for your habit has been updated:","lastModifiedDate":"2024-03-18"},{"lineNumber":267,"author":{"gitId":"genexus85"},"content":"  2. complete leetcode daily question [count: 4]","lastModifiedDate":"2024-03-18"},{"lineNumber":268,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":269,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":270,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":271,"author":{"gitId":"genexus85"},"content":"Example of usage (decreasing count):","lastModifiedDate":"2024-03-18"},{"lineNumber":272,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":273,"author":{"gitId":"genexus85"},"content":"habit update /id 2 /by -2","lastModifiedDate":"2024-03-18"},{"lineNumber":274,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":275,"author":{"gitId":"genexus85"},"content":"* For decreasing count, you must include a negative sign `-` in front of the count.","lastModifiedDate":"2024-03-18"},{"lineNumber":276,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":277,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":278,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":279,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":280,"author":{"gitId":"genexus85"},"content":"The count for your habit has been updated:","lastModifiedDate":"2024-03-18"},{"lineNumber":281,"author":{"gitId":"genexus85"},"content":"  2. complete leetcode daily question [count: 2]","lastModifiedDate":"2024-03-18"},{"lineNumber":282,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":283,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":284,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":285,"author":{"gitId":"OKW32"},"content":"### Add a new sleep cycle: `sleep add`","lastModifiedDate":"2024-03-18"},{"lineNumber":286,"author":{"gitId":"OKW32"},"content":"Allow the user to add new sleep Cycles into the sleep tracker.","lastModifiedDate":"2024-03-18"},{"lineNumber":287,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":288,"author":{"gitId":"OKW32"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":289,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":290,"author":{"gitId":"OKW32"},"content":"sleep add [HOURS_SLEPT] /date [DATE_SLEPT]","lastModifiedDate":"2024-03-18"},{"lineNumber":291,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":292,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":293,"author":{"gitId":"OKW32"},"content":"* The `sleep`, `/date` and `add` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":294,"author":{"gitId":"OKW32"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":295,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":296,"author":{"gitId":"OKW32"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":297,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":298,"author":{"gitId":"OKW32"},"content":"sleep add 7 /date 18/03/24","lastModifiedDate":"2024-03-18"},{"lineNumber":299,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":300,"author":{"gitId":"OKW32"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":301,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":302,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":303,"author":{"gitId":"OKW32"},"content":"--- SleepCycle for 18/03/24 has been added ---","lastModifiedDate":"2024-03-18"},{"lineNumber":304,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":305,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":306,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":307,"author":{"gitId":"OKW32"},"content":"### List out all sleep cycles: `sleep list`","lastModifiedDate":"2024-03-18"},{"lineNumber":308,"author":{"gitId":"OKW32"},"content":"Prints a list of all the sleep cycles that the user has added into the sleep tracker.","lastModifiedDate":"2024-03-18"},{"lineNumber":309,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":310,"author":{"gitId":"OKW32"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":311,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":312,"author":{"gitId":"OKW32"},"content":"sleep list","lastModifiedDate":"2024-03-18"},{"lineNumber":313,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":314,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":315,"author":{"gitId":"OKW32"},"content":"* The `sleep` and `list` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":316,"author":{"gitId":"OKW32"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":317,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":318,"author":{"gitId":"OKW32"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":319,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":320,"author":{"gitId":"OKW32"},"content":"sleep list","lastModifiedDate":"2024-03-18"},{"lineNumber":321,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":322,"author":{"gitId":"OKW32"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":323,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":324,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":325,"author":{"gitId":"OKW32"},"content":"Total hrs slept: 15.0","lastModifiedDate":"2024-03-18"},{"lineNumber":326,"author":{"gitId":"OKW32"},"content":"1. 27/01/12: 7.0","lastModifiedDate":"2024-03-18"},{"lineNumber":327,"author":{"gitId":"OKW32"},"content":"2. 30/01/12: 8.0","lastModifiedDate":"2024-03-18"},{"lineNumber":328,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":329,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":330,"author":{"gitId":"JingHaoooo"},"content":"### Start a new focus timer: `focus start`","lastModifiedDate":"2024-03-18"},{"lineNumber":331,"author":{"gitId":"JingHaoooo"},"content":"Allow the user to start a new focus timer session. The user will be able","lastModifiedDate":"2024-03-18"},{"lineNumber":332,"author":{"gitId":"JingHaoooo"},"content":"to start the timer whenever they want and the application will keep track of the time. ","lastModifiedDate":"2024-03-18"},{"lineNumber":333,"author":{"gitId":"JingHaoooo"},"content":"In addition, only 1 timer will run at a time, thus multiple uses of `focus start` is not allowed.","lastModifiedDate":"2024-03-18"},{"lineNumber":334,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":335,"author":{"gitId":"JingHaoooo"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":336,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":337,"author":{"gitId":"JingHaoooo"},"content":"focus start","lastModifiedDate":"2024-03-18"},{"lineNumber":338,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":339,"author":{"gitId":"JingHaoooo"},"content":"* The `focus` and `start` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":340,"author":{"gitId":"JingHaoooo"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":341,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":342,"author":{"gitId":"JingHaoooo"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":343,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":344,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":345,"author":{"gitId":"JingHaoooo"},"content":"Your session has started. Time to grind!","lastModifiedDate":"2024-03-18"},{"lineNumber":346,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":347,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":348,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":349,"author":{"gitId":"JingHaoooo"},"content":"### Stop the current focus timer: `focus stop`","lastModifiedDate":"2024-03-18"},{"lineNumber":350,"author":{"gitId":"JingHaoooo"},"content":"Allow users to stop a timer that is currently running. The users will be able to see the total","lastModifiedDate":"2024-03-18"},{"lineNumber":351,"author":{"gitId":"JingHaoooo"},"content":"time elapsed upon a successful stop.","lastModifiedDate":"2024-03-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":353,"author":{"gitId":"JingHaoooo"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":354,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":355,"author":{"gitId":"JingHaoooo"},"content":"focus stop","lastModifiedDate":"2024-03-18"},{"lineNumber":356,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":357,"author":{"gitId":"JingHaoooo"},"content":"* The `focus` and `stop` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":358,"author":{"gitId":"JingHaoooo"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":360,"author":{"gitId":"JingHaoooo"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":361,"author":{"gitId":"JingHaoooo"},"content":"* Depending on the total time spent, the output may differ.","lastModifiedDate":"2024-03-18"},{"lineNumber":362,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":363,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":364,"author":{"gitId":"JingHaoooo"},"content":"Your focus session has ended.","lastModifiedDate":"2024-03-18"},{"lineNumber":365,"author":{"gitId":"JingHaoooo"},"content":" Time spent: X hours, X minutes, XX seconds","lastModifiedDate":"2024-03-18"},{"lineNumber":366,"author":{"gitId":"JingHaoooo"},"content":"To start a new session, use ‘focustimer start’ ","lastModifiedDate":"2024-03-18"},{"lineNumber":367,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":368,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":372,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":374,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":376,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":378,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":380,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"JingHaoooo":40,"OKW32":49,"genexus85":94,"damiwee":166,"-":31}},{"path":"src/main/java/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import parser.Parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"public class Main {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"        SleepTracker sleepTracker \u003d new SleepTracker();","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"        ReflectionManager reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"        HabitTracker habitTracker \u003d new HabitTracker();","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"        FocusTimer focusTimer \u003d new FocusTimer();","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"        FitnessMotivator fitnessMotivator \u003d new FitnessMotivator();","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        Ui.greetUser();","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"            Ui.promptUserInput();","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"            //execute user command if it is valid else throw exception","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"            //save tasks to file after each command","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"            try {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"                Command userCommand \u003d Parser.determineCommand(sleepTracker, reflectionManager,","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"                        habitTracker, focusTimer, fitnessMotivator, userInput);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"                userCommand.execute();","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"                isExit \u003d userCommand.isExit();","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"            } catch (Wellness360Exception e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"                Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"        Ui.sayGoodbye();","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":2,"OKW32":10,"genexus85":2,"damiwee":7,"Daviancold":26}},{"path":"src/main/java/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"public interface Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"    void execute() throws Wellness360Exception;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"    boolean isExit();","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"genexus85":6,"damiwee":3}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"    public ExitCommand(String commandArgs) throws Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"        if (!commandArgs.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"            throw new Wellness360Exception(\"Unknown command\");","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"        return;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"        return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":24}},{"path":"src/main/java/commands/fitnesscommands/GetExercisesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package commands.fitnesscommands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"public class GetExercisesCommand implements Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"    private FitnessMotivator fitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"    public GetExercisesCommand (FitnessMotivator fitnessMotivator) {","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"        this.fitnessMotivator \u003d fitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"    public void execute() throws Wellness360Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"        fitnessMotivator.getExercises();","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"        return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Daviancold":24}},{"path":"src/main/java/commands/focuscommands/CheckTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"public class CheckTimeCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"    FocusTimer focustimer;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"    public CheckTimeCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"        this.focustimer \u003d timer;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"        if(!focustimer.getStartStatus()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Timer have not started. Please use focus start.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        focustimer.checkTime();","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"JingHaoooo":26}},{"path":"src/main/java/commands/focuscommands/SetPauseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"public class SetPauseCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer focusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"    public SetPauseCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    public boolean timerStartedAndNotPaused() {","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"        return (focusTimer.getPausedStatus() || !focusTimer.getStartStatus());","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"        if (timerStartedAndNotPaused()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Timer is already paused or Timer hasn\u0027t started.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setPauseTiming();","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":30}},{"path":"src/main/java/commands/focuscommands/SetResumeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"public class SetResumeCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer focusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"    public SetResumeCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    public boolean timerStartedAndPaused() {","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"        return (focusTimer.getStartStatus() \u0026\u0026 focusTimer.getPausedStatus());","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        if (!timerStartedAndPaused()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Timer is already resumed or Timer hasn\u0027t started..\");","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setResumeTiming();","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":29}},{"path":"src/main/java/commands/focuscommands/SetTimingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"public class SetTimingCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"    private FocusTimer focusTimer;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    private int desiredDuration;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    public SetTimingCommand(FocusTimer timer, String userInput) throws FocusException {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"        String[] parts \u003d userInput.trim().split(\"\\\\s\", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"            this.desiredDuration \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"            String invalidIndex \u003d \"Invalid duration\";","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(invalidIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setDuration(desiredDuration);","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"JingHaoooo":33}},{"path":"src/main/java/commands/focuscommands/StartTimerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to start the timer for focus timer object.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"public class StartTimerCommand implements Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer focusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a StartTimerCommand with the concerned focus timer.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     * @param timer FocusTimer object to be started.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    public StartTimerCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command bye setting the start timing of the timer.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * @throws FocusException If the status of focus timer is already running.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        if (focusTimer.getStartStatus()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Error! Clock has already started.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setStartTiming();","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit message.","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"JingHaoooo":44}},{"path":"src/main/java/commands/focuscommands/StopTimerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to stop the timer for focus timer object.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"public class StopTimerCommand implements Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer focusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a StopTimerCommand with the concerned focus timer.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     * @param timer FocusTimer object to be stopped.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"    public StopTimerCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command bye setting the stop timing of the timer.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     * @throws FocusException If the status of focus timer is not currently running.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"        if (!focusTimer.getStartStatus()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Error! Clock is not running...\");","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setStopTiming();","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit message.","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"JingHaoooo":41}},{"path":"src/main/java/commands/focuscommands/SwitchTimerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"public class SwitchTimerCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer focusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    public SwitchTimerCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"        if (focusTimer.getStartStatus()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Unable to change as timer is running\");","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.switchTimer();","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":27}},{"path":"src/main/java/commands/habitcommands/AddHabitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.Habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":" * A command implementation for adding new habits.","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"public class AddHabitCommand implements Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    private Habit newHabit;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"     * Constructs a AddHabitCommand object with user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"     * @param habitTracker The HabitTracker instance to be used for storing the habits.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"     * @param habitCommandArgs User input for the add habit command.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any formatting issues.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    public AddHabitCommand(HabitTracker habitTracker, String habitCommandArgs) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"        if (habitCommandArgs.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Habit Description cannot be left empty.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        this.newHabit \u003d new Habit(habitCommandArgs.trim());","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"     * Execute the command to add a new habit into the habit tracker.","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any formatting issues","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"        habitTracker.addHabit(newHabit);","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":45}},{"path":"src/main/java/commands/habitcommands/DeleteHabitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"public class DeleteHabitCommand implements Command{","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"    private int habitID;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    public DeleteHabitCommand(HabitTracker habitTracker, String habitCommandArgs)","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"            throws HabitException {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"        if (habitCommandArgs.isEmpty()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"                    \"Use Format: habit delete \u003chabit_ID\u003e\");","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"            this.habitID \u003d Integer.parseInt(habitCommandArgs.trim());","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"        habitTracker.deleteHabit(habitID);","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"genexus85":38}},{"path":"src/main/java/commands/habitcommands/ListHabitsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"public class ListHabitsCommand implements Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"     * Constructs a ListHabitsCommand object.","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"     * @param habitTracker The HabitTracker instance to be used for storing the habits.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"    public ListHabitsCommand(HabitTracker habitTracker) {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"     * Execute the command to list out all the habits in the habit tracker.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    public void execute() {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"        habitTracker.listHabits();","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":30}},{"path":"src/main/java/commands/habitcommands/SetPriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"public class SetPriorityCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"    private String priority;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"    private int habitID;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    public SetPriorityCommand(HabitTracker habitTracker, String habitCommandArgs) throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"        String[] parts \u003d habitCommandArgs.trim().split(\"/id | /priority\");","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"        if (!(parts.length \u003d\u003d 3)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Incorrect set priority command formatting\\n\" +","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"                    \"Use Format: habit set /id \u003chabit_ID\u003e /priority \u003cpriority_level\u003e\\n\" +","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"                    \"Note: for \u003cpriority_level\u003e, there are 3 levels --\u003e low, med, high\");","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"            this.habitID \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        String priorityLevel \u003d parts[2].trim().toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"        if (!priorityLevel.equals(\"high\") \u0026\u0026 !priorityLevel.equals(\"med\") \u0026\u0026 !priorityLevel.equals(\"low\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Invalid priority level!\");","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        this.priority \u003d priorityLevel;","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"        habitTracker.setPriorityLevel(habitID, priority);","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"genexus85":46}},{"path":"src/main/java/commands/habitcommands/SortHabitsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"public class SortHabitsCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"    public SortHabitsCommand(HabitTracker habitTracker) {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"        habitTracker.sortHabits();","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"genexus85":24}},{"path":"src/main/java/commands/habitcommands/UpdateHabitCountCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"public class UpdateHabitCountCommand implements Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"    private int habitID;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"    private String updatedCount;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"     * Constructs a UpdateHabitCountCommand object with user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"     * @param habitTracker The HabitTracker instance to be used for storing the habits.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"     * @param habitCommandArgs User input for the update habit count command.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any formatting issues.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"    public UpdateHabitCountCommand(HabitTracker habitTracker, String habitCommandArgs) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"        String[] parts \u003d habitCommandArgs.trim().split(\"/id | /by\");","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"        if (!(parts.length \u003d\u003d 3)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Incorrect update command formatting\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"                    \"Use Format: habit update /id \u003chabit_ID\u003e /by \u003cincrement_count\u003e\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"                    \"Note: for \u003cincrement_count\u003e, use \u0027+1\u0027 to increase by 1, \u0027-1\u0027 to decrease by 1\");","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"            this.habitID \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"        this.updatedCount \u003d parts[2].trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"     * Execute the command to update the habit count of a habit.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"        habitTracker.updateHabitCount(habitID, updatedCount);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":53}},{"path":"src/main/java/commands/reflectcommands/GetReflectionQuestionsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":" * A command implementation for retrieving reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"public class GetReflectionQuestionsCommand implements Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"     * Constructs a GetReflectionQuestionsCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager The ReflectionManager instance to be used for retrieving questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * @param reflectionCommandArgs The string representing the reflection command arguments.","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the command arguments is not empty.","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    public GetReflectionQuestionsCommand(ReflectionManager reflectionManager, String reflectionCommandArgs)","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        if (!reflectionCommandArgs.isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Additional parameters for \u0027reflect get\u0027 command are not allowed.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        this.reflectionManager \u003d reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"     * Executes the command to retrieve and print five random reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"    public void execute() {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        reflectionManager.printFiveRandomQuestions();","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"     * Determines if this command represents an exit action.","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":47}},{"path":"src/main/java/commands/reflectcommands/ListFavouriteReflectionsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" * A command implementation for listing favorite reflection items.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"public class ListFavouriteReflectionsCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"     * Constructs a ListFavouritesCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager The ReflectionManager instance to be used for listing favorite items.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * @param reflectionCommandArgs The string representing the reflection command arguments.","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the command arguments is not empty.","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    public ListFavouriteReflectionsCommand(ReflectionManager reflectionManager, String reflectionCommandArgs)","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        if (!reflectionCommandArgs.isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Additional parameters for \u0027reflect list\u0027 command are not allowed.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        this.reflectionManager \u003d reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"     * Executes the command to print the list of favorite reflection items.","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"    public void execute() {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        reflectionManager.printFavourites();","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"     * Determines if this command represents an exit action.","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"        return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"damiwee":48}},{"path":"src/main/java/commands/reflectcommands/ReflectionHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":" * Represents a command to display the help menu for reflection commands.","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"public class ReflectionHelpCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"     * Constructs a ReflectionHelpCommand with the provided ReflectionManager.","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager The ReflectionManager to be used.","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"     * @param reflectionCommandArgs The string representing the reflection command arguments.","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the command arguments is not empty.","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    public ReflectionHelpCommand(ReflectionManager reflectionManager, String reflectionCommandArgs)","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"        if (!reflectionCommandArgs.isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Additional parameters for \u0027reflect help\u0027 command are not allowed.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        this.reflectionManager \u003d reflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"     * Executes the command to print the help menu.","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"    public void execute() {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        reflectionManager.printHelpMenu();","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"     * @return false, as this command is not an exit command.","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"damiwee":47}},{"path":"src/main/java/commands/reflectcommands/SaveToFavouritesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":" * A command implementation for saving a reflection item to favorites.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"public class SaveToFavouritesCommand implements Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private int reflectionId;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"     * Constructs a SaveToFavouritesCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager     The ReflectionManager instance to be used for saving the reflection item.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * @param reflectionCommandArgs The ID of the reflection item to be saved.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the provided reflection ID is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    public SaveToFavouritesCommand(ReflectionManager reflectionManager, String reflectionCommandArgs)","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        this.reflectionManager \u003d reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"            reflectionId \u003d Integer.parseInt(reflectionCommandArgs);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Key in valid favourite reflection ID, between 1 and 5\");","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"     * Executes the command to save the reflection item to favorites.","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if an error occurs during the saving process.","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    public void execute() throws ReflectException {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"        reflectionManager.saveReflectionQuestion(reflectionId);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"     * Determines if this command represents an exit action.","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"        return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"damiwee":51}},{"path":"src/main/java/commands/reflectcommands/UnsaveFromFavouritesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" * A command implementation for unsaving a reflection item from favorites.","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"public class UnsaveFromFavouritesCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    private int reflectionId;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"     * Constructs a UnsaveFromFavouritesCommand.","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager     The ReflectionManager instance to be used for saving the reflection item.","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * @param reflectionCommandArgs The ID of the reflection item to be saved.","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the provided reflection ID is invalid.","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    public UnsaveFromFavouritesCommand(ReflectionManager reflectionManager, String reflectionCommandArgs)","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        this.reflectionManager \u003d reflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"            reflectionId \u003d Integer.parseInt(reflectionCommandArgs);","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Key in valid favourite reflection ID. Only numbers are allowed.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"     * Executes the command to save the reflection item to favorites.","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if an error occurs during the saving process.","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    public void execute() throws ReflectException {","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        reflectionManager.unsaveReflectionQuestion(reflectionId);","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"     * Determines if this command represents an exit action.","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"damiwee":52}},{"path":"src/main/java/commands/sleepcommands/AddSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import sleep.SleepCycle;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":" * Represents a command to add sleep cycles.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"public class AddSleepCommand implements Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    private SleepTracker sleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    private SleepCycle sleepCycleToAdd;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     * Constructs a new AddSleepCommand object with user input.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"     * @param sleepCommandArgs User input for the add sleep cycles command.","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"    public AddSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d sleepCommandArgs.trim().split(\"/date\", 2);","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"        if (userCommand.length !\u003d 2) {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"                    + \"sleep add \u003choursSlept\u003e /date \u003cdate\u003e\");","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"        if (userCommand[1].isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty date\");","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        if (userCommand[0].isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty number of hours slept\");","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"        this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"        double hourSlept;","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"        LocalDate dateSlept;","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"            hourSlept \u003d Double.parseDouble(userCommand[0].trim());","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid number of hours slept\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"                + \"E.g: 7.5\");","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"            dateSlept \u003d DateFormat.convertStringToDate(userCommand[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"                + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"OKW32"},"content":"        assert !sleepCommandArgs.isEmpty() : \"Sleep cycle should not be added\";","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"        sleepCycleToAdd \u003d new SleepCycle(hourSlept, dateSlept);","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"    public void execute() throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"        sleepTracker.addSleepCycle(sleepCycleToAdd);","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":64,"genexus85":1}},{"path":"src/main/java/commands/sleepcommands/DeleteSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import sleep.DeleteMode;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":" * Represents a command to delete sleep cycles.","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"public class DeleteSleepCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    private static final String ERROR_MESSAGE \u003d \"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"            + \"sleep delete /date \u003cdate\u003e\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"            + \"OR\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"            + \"sleep delete /before \u003cdate\u003e\" +System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"            + \"OR\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"            + \"sleep delete /from \u003cdate\u003e /to \u003cdate\u003e\";","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    private SleepTracker sleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"    private LocalDate startDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"    private DeleteMode deleteMode;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"     * Constructs a new DeleteSleepCommand object with user input.","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the delete sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"    public DeleteSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        if (sleepCommandArgs.isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(ERROR_MESSAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"        this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"        if (sleepCommandArgs.contains(\"/date\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"            deleteSleep(sleepCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"        } else if (sleepCommandArgs.contains(\"/before\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"            deleteSleepBefore(sleepCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"            deleteSleepBetween(sleepCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"     * Further parse user input when user wants to delete with deleteMode \u003d FIND.","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the delete sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"    private void deleteSleep(String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"        deleteMode \u003d DeleteMode.FIND;","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d sleepCommandArgs.trim().split(\"/date\", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"        if (userCommand.length !\u003d 2 || !userCommand[0].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(ERROR_MESSAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"        if (userCommand[1].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"OKW32"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"OKW32"},"content":"            date \u003d DateFormat.convertStringToDate(userCommand[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep cycle to delete\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"OKW32"},"content":"                    + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"OKW32"},"content":"        startDate \u003d date;","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"OKW32"},"content":"        endDate \u003d date;","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"OKW32"},"content":"     * Further parse user input when user wants to delete with deleteMode \u003d BEFORE.","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the delete sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"OKW32"},"content":"    private void deleteSleepBefore(String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"OKW32"},"content":"        deleteMode \u003d DeleteMode.BEFORE;","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d sleepCommandArgs.trim().split(\"/before\", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"OKW32"},"content":"        if (userCommand.length !\u003d 2 || !userCommand[0].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(ERROR_MESSAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"OKW32"},"content":"        if (userCommand[1].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"OKW32"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"OKW32"},"content":"            date \u003d DateFormat.convertStringToDate(userCommand[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep cycle to delete\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"OKW32"},"content":"                    + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"OKW32"},"content":"        startDate \u003d date;","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"OKW32"},"content":"        endDate \u003d date;","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"OKW32"},"content":"     * Further parse user input when user wants to delete with deleteMode \u003d BETWEEN.","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the delete sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"OKW32"},"content":"    private void deleteSleepBetween(String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"OKW32"},"content":"        deleteMode \u003d DeleteMode.BETWEEN;","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"OKW32"},"content":"        String[] userCommandStart \u003d sleepCommandArgs.trim().split(\"/from\", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"OKW32"},"content":"        String[] userCommandEnd \u003d userCommandStart[1].trim().split(\"/to\", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"OKW32"},"content":"        if (!userCommandStart[0].isBlank() || userCommandStart.length !\u003d 2 || userCommandEnd.length !\u003d 2) {","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(ERROR_MESSAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"OKW32"},"content":"        if (userCommandEnd[0].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty start date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"OKW32"},"content":"        if (userCommandEnd[1].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty end date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"OKW32"},"content":"            startDate \u003d DateFormat.convertStringToDate(userCommandEnd[0].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"OKW32"},"content":"            endDate \u003d DateFormat.convertStringToDate(userCommandEnd[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"OKW32"},"content":"                    + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"OKW32"},"content":"        if (endDate.isBefore(startDate)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Start date must be before end date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"OKW32"},"content":"    public void execute() throws SleepException{","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"OKW32"},"content":"        switch(deleteMode) {","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"OKW32"},"content":"        case FIND:","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"OKW32"},"content":"            sleepTracker.deleteSleepCycle(startDate);","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"OKW32"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"OKW32"},"content":"        case BEFORE:","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"OKW32"},"content":"            sleepTracker.deleteSleepCyclesBefore(endDate);","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"OKW32"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"OKW32"},"content":"        case BETWEEN:","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"OKW32"},"content":"            sleepTracker.deleteSleepCyclesBetween(startDate, endDate);","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"OKW32"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"OKW32"},"content":"        default:","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Error in detection of deletion mode\");","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"OKW32":151}},{"path":"src/main/java/commands/sleepcommands/GetSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":" * Represents a command to get sleep cycles.","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"public class GetSleepCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    private SleepTracker sleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    private LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"     * Constructs a new GetSleepCommand object with user input.","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the get sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"    public GetSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"        if (sleepCommandArgs.isEmpty()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"                    + \"sleep get \u003cdate\u003e\");","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"            this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"            this.date \u003d DateFormat.convertStringToDate(sleepCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep cycle to get\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"                    + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"        sleepTracker.getSleepCycle(date);","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"OKW32":47}},{"path":"src/main/java/commands/sleepcommands/ListSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":" * Represents a command to list sleep cycles.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"public class ListSleepCommand implements Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    private SleepTracker sleepTracker;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"     * Constructs a new ListSleepCommand object with user input.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the list sleep cycles command.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    public ListSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"        if (!sleepCommandArgs.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"                    + \"sleep list\");","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"        assert sleepCommandArgs.isEmpty() : \"Sleep cycle should not be listed\";","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"        sleepTracker.listSleepCycles();","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":38}},{"path":"src/main/java/commands/sleepcommands/UpdateSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":" * Represents a command to update sleep cycles.","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"public class UpdateSleepCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    private SleepTracker sleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    private LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    private double hours;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     * Constructs a new UpdateSleepCommand object with user input.","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the update sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"    public UpdateSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d sleepCommandArgs.trim().split(\"/new\", 2);","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"        if (userCommand.length !\u003d 2) {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"                    + \"sleep update \u003cdate\u003e /new \u003chours\u003e\");","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"        if (userCommand[0].isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty date\");","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        if (userCommand[1].isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty number of hours to update to\");","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"            this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"            date \u003d DateFormat.convertStringToDate(userCommand[0].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"            hours \u003d Double.parseDouble(userCommand[1].trim());","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep cycle to be updated\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"                    + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid number of hours to update to\");","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"OKW32"},"content":"        sleepTracker.updateSleepCycle(date, hours);","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"OKW32":59}},{"path":"src/main/java/date/DateFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package date;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":" * Represents a class to convert string to date and vice versa.","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":" * Ensures that only one type of format for date is to be used.","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"public class DateFormat {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    private static final DateTimeFormatter FORMAT \u003d  DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"    public static LocalDate convertStringToDate(String s) {","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"        return LocalDate.parse(s , FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"    public static String convertDateToString(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"        return date.format(FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"OKW32":20}},{"path":"src/main/java/exceptions/FitnessException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class FitnessException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public FitnessException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/FocusException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class FocusException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public FocusException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/HabitException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class HabitException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public HabitException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/ReflectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class ReflectException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public ReflectException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/SleepException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class SleepException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public SleepException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/Wellness360Exception.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class Wellness360Exception extends Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public Wellness360Exception(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"        super(\"ERROR MSG: \" + message);","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":6,"genexus85":1}},{"path":"src/main/java/fitness/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"public class Exercise {","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"    private String exerciseName;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"    private String exerciseType;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"    private String sets;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"    private String reps;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    public Exercise(String exerciseName, String exerciseType, String sets, String reps) {","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"        this.exerciseType \u003d exerciseType;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"        this.reps \u003d reps;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"    public String getType() {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"        return exerciseType;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"        return exerciseType + \": \" + exerciseName + \", \" + sets + \" sets \u0026 \" + reps + \" reps\";","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Daviancold":25}},{"path":"src/main/java/fitness/ExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"public class ExerciseList {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"    private ArrayList\u003cExercise\u003e allExercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    private final String[] originalListForArms \u003d {","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"        \"Cable Triceps Push down,Arms,3,8\", \"Barbell Curls,Arms,3,8\", \"Preacher Curls,Arms,3,8\",","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"        \"Skullcrushers,Arms,3,8\", \"Lateral Raises,Arms,3,8\"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    };","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    private final String[] originalListForChest \u003d {","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"        \"Bench Press,Chest,3,8\", \"Incline Bench Press,Chest,3,8\", \"Diamond Push-up,Chest,3,15\",","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"        \"Cable Flies,Chest,3,8\", \"Wide Arm Push-up,Chest,3,15\"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"    };","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    private final String[] originalListForAbs \u003d {","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"        \"Sit-ups,Abs,3,20\", \"Russian Twists,Abs,3,20\", \"Crunches,Abs,5,20\",","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"        \"Flutter Kicks,Abs,4,20\", \"Weighted Sit-Ups,Abs,3,20\"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"    };","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"    private final String[] originalListForBack \u003d {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"        \"Pull Ups,Back,3,6\", \"Lateral Rows,Back,3,8\", \"Deadlift,Back,3,5\",","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"        \"Weighted Pull Ups,Back,3,6\", \"Cable Rows,Back,3,8\"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"    };","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"    private final String[] originalListForLegs \u003d {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"        \"Weighted Squats,Legs,3,10\", \"Leg Press,Legs,3,8\", \"Leg Curl,Legs,3,8\",","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"        \"Leg Extensions,Legs,3,10\", \"Calf Raises,Legs,3,10\"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"    };","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"    public ExerciseList() {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"        if (!Storage.isFileCreated(FitnessMotivator.FILE_PATH)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"            initialiseData();","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"            Storage.saveTasksToFile(FitnessMotivator.FILE_PATH, allExercises);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"            parseData(Storage.loadDataFromFile(FitnessMotivator.FILE_PATH));","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"    private void initialiseData() {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"        for (String s : originalListForArms) {","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"            String[] exerciseDetails \u003d s.split(\",\");","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"            assert exerciseDetails.length \u003d\u003d 4;","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"            Exercise exercise \u003d new Exercise(exerciseDetails[0], exerciseDetails[1],","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"                exerciseDetails[2], exerciseDetails[3]);","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"            allExercises.add(exercise);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"        for (String s : originalListForChest) {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"            String[] exerciseDetails \u003d s.split(\",\");","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"            assert exerciseDetails.length \u003d\u003d 4;","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"            Exercise exercise \u003d new Exercise(exerciseDetails[0], exerciseDetails[1],","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"                    exerciseDetails[2], exerciseDetails[3]);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"            allExercises.add(exercise);","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"        for (String s : originalListForAbs) {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"            String[] exerciseDetails \u003d s.split(\",\");","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"            assert exerciseDetails.length \u003d\u003d 4;","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"            Exercise exercise \u003d new Exercise(exerciseDetails[0], exerciseDetails[1],","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"                    exerciseDetails[2], exerciseDetails[3]);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"            allExercises.add(exercise);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"        for (String s : originalListForBack) {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"            String[] exerciseDetails \u003d s.split(\",\");","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"            assert exerciseDetails.length \u003d\u003d 4;","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"            Exercise exercise \u003d new Exercise(exerciseDetails[0], exerciseDetails[1],","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"                    exerciseDetails[2], exerciseDetails[3]);","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"            allExercises.add(exercise);","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"        for (String s : originalListForLegs) {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"            String[] exerciseDetails \u003d s.split(\",\");","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"            assert exerciseDetails.length \u003d\u003d 4;","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"            Exercise exercise \u003d new Exercise(exerciseDetails[0], exerciseDetails[1],","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"                    exerciseDetails[2], exerciseDetails[3]);","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"Daviancold"},"content":"            allExercises.add(exercise);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"Daviancold"},"content":"    private void parseData (ArrayList\u003cString\u003e data) {","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"Daviancold"},"content":"        for (String s: data) {","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"Daviancold"},"content":"            String[] parts \u003d s.split(\": |, | sets \u0026 | reps\");","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"Daviancold"},"content":"            if (parts.length \u003d\u003d 4) {","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Daviancold"},"content":"                String exerciseName \u003d parts[0];","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"Daviancold"},"content":"                String exerciseType \u003d parts[1];","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"Daviancold"},"content":"                String sets \u003d parts[2];","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"Daviancold"},"content":"                String reps \u003d parts[3];","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"Daviancold"},"content":"                allExercises.add(new Exercise(exerciseType, exerciseName, sets, reps));","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Daviancold"},"content":"    public void add(Exercise exercise) {","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"Daviancold"},"content":"        allExercises.add(exercise);","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"Daviancold"},"content":"    public Exercise get(String type, int index) {","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"Daviancold"},"content":"        ArrayList\u003cExercise\u003e typeExercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Daviancold"},"content":"        for (Exercise e : allExercises) {","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"Daviancold"},"content":"            assert e !\u003d null;","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"Daviancold"},"content":"            if (e.getType().equals(type)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"Daviancold"},"content":"                typeExercises.add(e);","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"Daviancold"},"content":"        return typeExercises.get(index);","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"Daviancold"},"content":"    public int size(String type) {","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"Daviancold"},"content":"        int x \u003d 0;","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"Daviancold"},"content":"        for (Exercise e : allExercises) {","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"Daviancold"},"content":"            if (e.getType().equals(type)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"Daviancold"},"content":"                x++;","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"Daviancold"},"content":"        return x;","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"Daviancold"},"content":"    public void saveExercises() {","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"Daviancold"},"content":"        Storage.saveTasksToFile(FitnessMotivator.FILE_PATH, allExercises);","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Daviancold":119}},{"path":"src/main/java/fitness/FitnessMotivator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import java.util.Random;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"public class FitnessMotivator {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"    public static ExerciseList allExercises \u003d new ExerciseList();","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"    public static final String FILE_PATH \u003d \"./data/exerciselist.txt\";","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    public FitnessMotivator() {}","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    public String getExercises() {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"        int randomInt1 \u003d random.nextInt(allExercises.size(\"Arms\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"        int randomInt2 \u003d random.nextInt(allExercises.size(\"Chest\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"        int randomInt3 \u003d random.nextInt(allExercises.size(\"Abs\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"        int randomInt4 \u003d random.nextInt(allExercises.size(\"Back\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"        int randomInt5 \u003d random.nextInt(allExercises.size(\"Legs\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"        Exercise exercise1 \u003d allExercises.get(\"Arms\", randomInt1);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"        Exercise exercise2 \u003d allExercises.get(\"Chest\", randomInt2);","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"        Exercise exercise3 \u003d allExercises.get(\"Abs\", randomInt3);","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"        Exercise exercise4 \u003d allExercises.get(\"Back\", randomInt4);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"        Exercise exercise5 \u003d allExercises.get(\"Legs\", randomInt5);","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"        String message \u003d \"These are some of the exercises you can do!\\n\\n\" +","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"                \"1. \" + exercise1 + \"\\n\" + \"2. \" + exercise2 + \"\\n\" + \"3. \" + exercise3 + \"\\n\" +","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"                \"4. \" + exercise4 + \"\\n\" + \"5. \" + exercise5 + \"\\n\";","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"        Ui.printMessageWithSepNewLine(message);","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"        return message;","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Daviancold":36}},{"path":"src/main/java/focus/CountdownTimer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package focus;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import java.util.Timer;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import java.util.TimerTask;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import java.util.concurrent.atomic.AtomicBoolean;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"public class CountdownTimer {","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"    private static final int DEFAULT_SECONDS \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    private static final int DEFAULT_MINUTES \u003d 1;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    private static final int ONE_SECOND \u003d 1000;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    private static final int MAX_SECONDS \u003d 59;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    private static final int TIME_DELAY \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"    private static final int STOP_TIME \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    private static final int START_WARNING \u003d 5;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"    private static final String ASSERTION_TIMER_NOT_RUNNING \u003d \"Timer should not be running\";","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    private static final String ASSERTION_INVALID_STOP \u003d \"Timer should be running.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"    private int minutes;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    private int seconds;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    private int inputMinutes;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    private AtomicBoolean isStarted;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    private AtomicBoolean isRunning;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    private Timer stopwatch;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"    private TimerTask timerTask;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    public CountdownTimer() {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"        this.minutes \u003d DEFAULT_MINUTES;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        this.seconds \u003d DEFAULT_SECONDS;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        this.inputMinutes \u003d DEFAULT_MINUTES;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        this.isRunning \u003d new AtomicBoolean(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        this.isStarted \u003d new AtomicBoolean(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    private void decreaseMinutes() {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"        this.minutes--;","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"    private void decreaseSeconds() {","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        this.seconds--;","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    public void start() {","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"        stopwatch \u003d new Timer();","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"        isStarted.set(true);","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"        timerTask \u003d new TimerTask() {","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"            @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"            public void run() {","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"                if (!isRunning.get()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"                    return;","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"                if (minutes \u003d\u003d STOP_TIME \u0026\u0026 seconds \u003d\u003d START_WARNING) {","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"                    System.out.println();","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"                if (minutes \u003d\u003d STOP_TIME \u0026\u0026 seconds \u003c\u003d START_WARNING \u0026\u0026 seconds !\u003d STOP_TIME) {","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"                    Ui.printMessageWithSepNewLine(seconds + \" seconds left\");","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"                if (minutes \u003d\u003d STOP_TIME \u0026\u0026 seconds \u003d\u003d STOP_TIME) {","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"                    Ui.printMessageWithSepNewLine(\"Count down timer completed!\");","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"                    setStop();","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"                    Ui.promptUserInput();","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"                } else if (seconds \u003d\u003d STOP_TIME) {","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"                    decreaseMinutes();","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"                    seconds \u003d MAX_SECONDS;","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"                } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"                    decreaseSeconds();","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"        };","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"JingHaoooo"},"content":"        stopwatch.scheduleAtFixedRate(timerTask, TIME_DELAY, ONE_SECOND);","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"JingHaoooo"},"content":"    public void setStart() {","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"JingHaoooo"},"content":"        assert !isRunning.get() : ASSERTION_TIMER_NOT_RUNNING;","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"JingHaoooo"},"content":"        isRunning.set(true);","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"JingHaoooo"},"content":"        minutes \u003d inputMinutes;","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"JingHaoooo"},"content":"        seconds \u003d DEFAULT_SECONDS;","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"JingHaoooo"},"content":"        start();","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Countdown timer started! \\n\"","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"JingHaoooo"},"content":"                + \"Duration set: \" + minutes + \" minute(s) \" + seconds + \" second(s)\");","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"JingHaoooo"},"content":"    public void setStop() {","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"JingHaoooo"},"content":"        assert stopwatch !\u003d null : ASSERTION_INVALID_STOP;","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"JingHaoooo"},"content":"        isRunning.set(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"JingHaoooo"},"content":"        isStarted.set(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"JingHaoooo"},"content":"        stopwatch.cancel();","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"JingHaoooo"},"content":"        stopwatch.purge();","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"JingHaoooo"},"content":"    public void setPause() {","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"JingHaoooo"},"content":"        isRunning.set(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Timer paused. \\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"JingHaoooo"},"content":"                \"Remaining time: \" + minutes + \" minutes \" + seconds + \" seconds\");","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"JingHaoooo"},"content":"    public void setResume() {","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"JingHaoooo"},"content":"        isRunning.set(true);","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Countdown timer resumed.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getRunningStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"JingHaoooo"},"content":"        return isStarted.get();","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getPausedStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"JingHaoooo"},"content":"        return isRunning.get();","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"JingHaoooo"},"content":"    public void setTimer(int userInput) {","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"JingHaoooo"},"content":"        if (userInput \u003c 1) {","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"JingHaoooo"},"content":"            Ui.printMessageWithSepNewLine(\"Duration cannot be less than 1.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"JingHaoooo"},"content":"            inputMinutes \u003d userInput;","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"JingHaoooo"},"content":"            Ui.printMessageWithSepNewLine(\"Countdown duration has been set to \" + userInput + \" minute(s)\");","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"JingHaoooo"},"content":"    public void checkTime() {","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Remaining time: \\n\" +","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"JingHaoooo"},"content":"                minutes + \" minutes \" + seconds + \" seconds left.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":123}},{"path":"src/main/java/focus/CountupTimer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package focus;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import java.time.Duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"public class CountupTimer {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    private static final int MINUTES_DIVISION \u003d 60;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"    private static final int SECONDS_DIVISION \u003d 60;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    public LocalDateTime startTiming;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    public LocalDateTime stopTiming;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    public LocalDateTime currentTime;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isStarted \u003d false;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"    private boolean isPaused \u003d false;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    private long totalHours \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"    private long totalMinutes \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    private long totalSeconds \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"     * Store the current time when the user calls the function as the start timing for the timer.","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    public void setStartTiming() {","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"        assert !isStarted : \"Timer should not have started\";","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        this.startTiming \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"        isStarted \u003d true;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Your session has started. Time to grind!\");","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"        this.totalHours \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        this.totalMinutes \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        this.totalSeconds \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     * Store the current time when the user calls the function as the stop timing for the timer.","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"    public void setStopTiming() {","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"        assert isStarted : \"Timer should have started\";","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        if(!isPaused) {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"            stopTiming \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        isStarted \u003d false;","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        isPaused \u003d false;","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"        totalTimeSpent();","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"    public void setPause() {","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"        currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"        Duration timeElapsed \u003d Duration.between(startTiming, currentTime);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"        stopTiming \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"        isPaused \u003d true;","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"        totalHours +\u003d timeElapsed.toHours();","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"        totalMinutes +\u003d timeElapsed.toMinutes() % MINUTES_DIVISION;","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"        totalSeconds +\u003d timeElapsed.toSeconds() % MINUTES_DIVISION;","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Count up timer paused.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"    public void setResume() {","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"        this.startTiming \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"        isPaused \u003d false;","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Count up timer resumed\");","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getPauseStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"        return isPaused;","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"     * Retrieves the current status of the clock","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"JingHaoooo"},"content":"     * @return The status of the focus timer","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getStartedStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"JingHaoooo"},"content":"        return isStarted;","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"JingHaoooo"},"content":"     * Calculates the total time elapsed between the start timing and stop timing, and prints out","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"JingHaoooo"},"content":"     * the total time elapsed using Ui class.","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"JingHaoooo"},"content":"    public void totalTimeSpent() {","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"JingHaoooo"},"content":"        if (!isPaused) {","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"JingHaoooo"},"content":"            Duration timeElapsed \u003d Duration.between(startTiming, stopTiming);","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"JingHaoooo"},"content":"            totalHours +\u003d timeElapsed.toHours();","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"JingHaoooo"},"content":"            totalMinutes +\u003d timeElapsed.toMinutes() % MINUTES_DIVISION;","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"JingHaoooo"},"content":"            totalSeconds +\u003d timeElapsed.toSeconds() % SECONDS_DIVISION;","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Your focus session has ended.\\n\" + \"Total time spent: \" +","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"JingHaoooo"},"content":"                totalHours + \" hours, \" + totalMinutes + \" minutes, \" + totalSeconds + \" seconds\" + \"\\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"JingHaoooo"},"content":"                \"To start a new session, use ‘focus start’ \");","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"JingHaoooo"},"content":"    public void checkTime() {","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"JingHaoooo"},"content":"        if(!isPaused) {","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"JingHaoooo"},"content":"            currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"JingHaoooo"},"content":"        Duration timeElapsed \u003d Duration.between(startTiming, currentTime);","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"JingHaoooo"},"content":"        startTiming \u003d currentTime;","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"JingHaoooo"},"content":"        totalHours +\u003d timeElapsed.toHours();","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"JingHaoooo"},"content":"        totalMinutes +\u003d timeElapsed.toMinutes() % MINUTES_DIVISION;","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"JingHaoooo"},"content":"        totalSeconds +\u003d timeElapsed.toSeconds() % SECONDS_DIVISION;","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Total time elapsed: \\n\" +","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"JingHaoooo"},"content":"                totalHours + \" hours, \" + totalMinutes + \" minutes, \" + totalSeconds + \" seconds\");","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":104}},{"path":"src/main/java/focus/FocusTimer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package focus;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":" * Represents the focus timer for wellness360","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"public class FocusTimer {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    CountupTimer countupTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"    CountdownTimer countdownTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    private boolean timerMode \u003d false; // false for count-up, true for countdown","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer() {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"        this.countupTimer \u003d new CountupTimer();","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"        this.countdownTimer \u003d new CountdownTimer();","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    public void setStartTiming() {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"            countdownTimer.setStart();","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"            countupTimer.setStartTiming();","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    public void setStopTiming() {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"            countdownTimer.setStop();","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"            Ui.printMessageWithSepNewLine(\"Countdown timer stopped.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"            countupTimer.setStopTiming();","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getStartStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"            return countdownTimer.getRunningStatus();","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"            return countupTimer.getStartedStatus();","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    public void switchTimer() {","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"        this.timerMode \u003d !timerMode;","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"            Ui.printMessageWithSepNewLine(\"Switched to Count down timer\");","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"            Ui.printMessageWithSepNewLine(\"Switched to Count up timer\");","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"    public void setPauseTiming() {","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"            countdownTimer.setPause();","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"            countupTimer.setPause();","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getPausedStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"            return !countdownTimer.getPausedStatus();","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"            return countupTimer.getPauseStatus();","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"    public void setResumeTiming() {","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"JingHaoooo"},"content":"            countdownTimer.setResume();","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"JingHaoooo"},"content":"            countupTimer.setResume();","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"JingHaoooo"},"content":"    public void setDuration(int commandArgs) {","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"JingHaoooo"},"content":"        countdownTimer.setTimer(commandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"JingHaoooo"},"content":"    public void checkTime() {","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"JingHaoooo"},"content":"            countdownTimer.checkTime();","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"JingHaoooo"},"content":"            countupTimer.checkTime();","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"JingHaoooo":87}},{"path":"src/main/java/habit/Habit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":" * Represents a Habit.","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"public class Habit {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"    private String description;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"    private int habitCount;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    private Priority priority;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"     * Constructs a habit object with the habit description.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"     * @param description The habit description to be added.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"    public Habit(String description) {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"        this.habitCount \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"        this.priority \u003d Priority.LOW;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"    public Habit(String description, int habitCount, Priority priority) {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        this.habitCount \u003d habitCount;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"        return description;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"    public int getHabitCount() {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"        return habitCount;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"    public Priority getPriority() {","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"        return priority;","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"     * Updates the habit count of a habit.","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"     * @param updatedCount The count to be added to the existing habit count.","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"     * @return An integer type of the change in count to be added.","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If the user tries to decrease a habit count to below zero, or use a non-numerical number.","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"    public int updateCount(String updatedCount) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"        int changeInCount \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"            changeInCount \u003d Integer.parseInt(updatedCount);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"            if (habitCount + changeInCount \u003c 0) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"genexus85"},"content":"                throw new HabitException(\"You cannot decrement a habit count to below zero\");","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"genexus85"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"genexus85"},"content":"            habitCount +\u003d changeInCount;","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"genexus85"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please enter a valid count\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"genexus85"},"content":"                    \"Use: \u0027+1\u0027 to increase count, \u0027-1\u0027 to decrease count \");","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"genexus85"},"content":"        return changeInCount;","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"genexus85"},"content":"    public void setPriority (String priority) {","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"genexus85"},"content":"        switch (priority) {","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"genexus85"},"content":"        case \"low\":","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"genexus85"},"content":"            this.priority \u003d Priority.LOW;","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"genexus85"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"genexus85"},"content":"        case \"med\":","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"genexus85"},"content":"            this.priority \u003d Priority.MED;","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"genexus85"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"genexus85"},"content":"        case \"high\":","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"genexus85"},"content":"            this.priority \u003d Priority.HIGH;","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"genexus85"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"genexus85"},"content":"        default:","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"genexus85"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"genexus85"},"content":"        return \" [\" + priority + \"] \" + description + \" [count: \" + habitCount + \"]\";","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":86}},{"path":"src/main/java/habit/HabitTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"import static storage.habit.HabitTrackerStorage.loadHabitListFromFile;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"import static storage.habit.HabitTrackerStorage.saveHabitListToFile;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"import static ui.Ui.printMessageWithoutSepNewLine;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":" * Represents the habit tracker which stores all habits.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"public class HabitTracker {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"    private static ArrayList\u003cHabit\u003e habitList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"    public HabitTracker() {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"            habitList \u003d loadHabitListFromFile();","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"        } catch (HabitException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"     * Adds a new habit into habitList.","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"     * @param newHabit The habit to be added.","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"    public void addHabit (Habit newHabit) {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"        assert habitList !\u003d null : \"habitList should not be null\";","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"        habitList.add(newHabit);","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"        String addHabitMessage \u003d \"Great! You have added a new habit:\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"        addHabitMessage +\u003d \"  \u0027\" + newHabit.getDescription() + \"\u0027 was successfully added!\";","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(addHabitMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"     * List out all habits in habitList.","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"    public void listHabits() {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"        String listHabitsMessage \u003d \"Here is the list of all your habits!\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"        if (habitList.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"            listHabitsMessage +\u003d \"  \u003cyou currently have no habits, add one now!\u003e\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"        for (int i \u003d 0; i \u003c habitList.size(); i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"            Habit habit \u003d habitList.get(i);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"            listHabitsMessage +\u003d \"  \" + (i + 1) + \".\" + habit + \"\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"genexus85"},"content":"        printMessageWithoutSepNewLine(listHabitsMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"genexus85"},"content":"    public static boolean isValidHabitID(int habitID) {","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"genexus85"},"content":"        return habitID \u003e 0 \u0026\u0026 habitID \u003c\u003d habitList.size();","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"genexus85"},"content":"     * Update the habit count for a habit.","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"genexus85"},"content":"     * @param habitID The habitID to be updated.","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"genexus85"},"content":"     * @param updatedCount The count to be added to the existing habit count.","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If an invalid habit ID is provided.","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"genexus85"},"content":"    public void updateHabitCount(int habitID, String updatedCount) throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"genexus85"},"content":"        if (!isValidHabitID(habitID)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"genexus85"},"content":"        Habit habit \u003d habitList.get(habitID - 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"genexus85"},"content":"        int changeInCount \u003d habit.updateCount(updatedCount);","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"genexus85"},"content":"        String updateHabitCountMessage \u003d \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"genexus85"},"content":"        if (changeInCount \u003e 0) {","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"genexus85"},"content":"            updateHabitCountMessage +\u003d \"Good Job! You have completed your habit!\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"genexus85"},"content":"        updateHabitCountMessage +\u003d \"The count for your habit has been updated:\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"genexus85"},"content":"        updateHabitCountMessage +\u003d \"  \" + habitID + \". \" + habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(updateHabitCountMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"genexus85"},"content":"    public static int getNumberOfHabits() {","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"genexus85"},"content":"        return habitList.size();","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"genexus85"},"content":"    public void deleteHabit(int habitID) throws HabitException {","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"genexus85"},"content":"        if (!isValidHabitID(habitID)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"genexus85"},"content":"        String deleteHabitMessage \u003d \"Got it! I\u0027ve removed this habit:\\n\";","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"genexus85"},"content":"        deleteHabitMessage +\u003d \"  \" + habitList.get(habitID - 1) + \"\\n\";","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"genexus85"},"content":"        habitList.remove(habitID - 1);","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"genexus85"},"content":"        deleteHabitMessage +\u003d \"Now you have \" + habitList.size() + \" habits left in the list.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(deleteHabitMessage);","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"genexus85"},"content":"    public void setPriorityLevel(int habitID, String priority) throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"genexus85"},"content":"        if (!isValidHabitID(habitID)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"genexus85"},"content":"        Habit habit \u003d habitList.get(habitID - 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"genexus85"},"content":"        habit.setPriority(priority);","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"genexus85"},"content":"        String setPriorityLevelMessage \u003d \"\";","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"genexus85"},"content":"        setPriorityLevelMessage +\u003d \"The priority for your habit has been updated:\\n\";","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"genexus85"},"content":"        setPriorityLevelMessage +\u003d \"  \" + habitID + \". \" + habit;","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(setPriorityLevelMessage);","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"genexus85"},"content":"    public void sortHabits() throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"genexus85"},"content":"            // Define a custom comparator to sort habits based on their priority","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"genexus85"},"content":"            Comparator\u003cHabit\u003e habitComparator \u003d Comparator.comparing(habit -\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"genexus85"},"content":"                switch (habit.getPriority()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"genexus85"},"content":"                case HIGH:","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"genexus85"},"content":"                    return 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"genexus85"},"content":"                case MED:","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"genexus85"},"content":"                    return 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"genexus85"},"content":"                case LOW:","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"genexus85"},"content":"                    return 2;","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"genexus85"},"content":"                default:","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"genexus85"},"content":"                    return 3; // Handles any unexpected case","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"genexus85"},"content":"                }","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"genexus85"},"content":"            });","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"genexus85"},"content":"            // Sort the habitList using the custom comparator","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"genexus85"},"content":"            Collections.sort(habitList, habitComparator);","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"genexus85"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(e.getMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(\"Habits have been sorted according to priority.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"genexus85"},"content":"    public void clearHabits() {","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"genexus85"},"content":"        habitList.clear();","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":155}},{"path":"src/main/java/habit/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package habit;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"public enum Priority {","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"    HIGH,","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"    MED,","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"    LOW","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"genexus85":7}},{"path":"src/main/java/parser/FitnessCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import commands.fitnesscommands.GetExercisesCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import exceptions.FitnessException;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"public class FitnessCommandParser {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    public static Command determineFitnessCommand(FitnessMotivator fitnessMotivator, String commandArgs)","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"            throws FitnessException {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"        String userFitnessCommand \u003d userCommand[0].trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"        String fitnessCommandArgs \u003d userCommand.length \u003d\u003d 2 ? userCommand[1].trim() : \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"        switch(userFitnessCommand) {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"        case \"get\":","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"            return new GetExercisesCommand(fitnessMotivator);","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"        default:","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"            throw new FitnessException(\"Unknown command\");","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"damiwee":3,"Daviancold":21}},{"path":"src/main/java/parser/FocusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.SetResumeCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.StartTimerCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.StopTimerCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.SwitchTimerCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.SetPauseCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.CheckTimeCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.SetTimingCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":" * FocusCommandParser class determines the type of command based on the user\u0027s input and","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":" * maps it to the corresponding command.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"public class FocusCommandParser {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"     * Determines the command based on user input and returns the corresponding command object.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     * @param focusTimer  The focus timer object for wellness360.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     * @param commandArgs The command arguments from user\u0027s input.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * @return Type of command to be executed.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     * @throws FocusException If the type of command is not part of the list of commands.","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    public static Command determineFocusCommand(FocusTimer focusTimer, String commandArgs) throws FocusException {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        String userFocusTimerCommand \u003d userCommand[0];","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        String focusTimerCommandArgs \u003d userCommand.length \u003d\u003d 2 ? userCommand[1] : \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"        switch (userFocusTimerCommand) {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"        case \"start\":","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"            return new StartTimerCommand(focusTimer);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"        case \"stop\":","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"            return new StopTimerCommand(focusTimer);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        case \"switch\":","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"            return new SwitchTimerCommand(focusTimer);","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        case \"pause\":","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"            return new SetPauseCommand(focusTimer);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        case \"resume\":","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"            return new SetResumeCommand(focusTimer);","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"        case \"check\":","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"            return new CheckTimeCommand(focusTimer);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"        case \"set\":","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"            return new SetTimingCommand(focusTimer, focusTimerCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"        default:","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Unknown Focus Timer command\");","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"JingHaoooo":52}},{"path":"src/main/java/parser/HabitCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.AddHabitCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.DeleteHabitCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.ListHabitsCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.SetPriorityCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.SortHabitsCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.UpdateHabitCountCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":" * Represents the input parser of Habit Tracker.","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":" * Parses user input into Habit Tracker commands.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":" * Generates the respective Command objects to be executed, based on the parsed command keyword.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"public class HabitCommandParser {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"     * Parses user input into command and details, and creates the corresponding habit command objects.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"     * @param habitTracker The HabitTracker instance to be used for storing the habits.","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"     * @param commandArgs User input for the habit tracker command.","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"     * @return Command object to be executed.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If the user input is not part of the command list.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"    public static Command determineHabitCommand(HabitTracker habitTracker, String commandArgs) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        String userHabitCommand \u003d userCommand[0].trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"        String habitCommandArgs \u003d userCommand.length \u003d\u003d 2 ? userCommand[1].trim() : \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"        switch(userHabitCommand) {","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        case \"add\":","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"            return new AddHabitCommand(habitTracker, habitCommandArgs);","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"        case \"list\":","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"            return new ListHabitsCommand(habitTracker);","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"        case \"update\":","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"            return new UpdateHabitCountCommand(habitTracker, habitCommandArgs);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"            return new DeleteHabitCommand(habitTracker, habitCommandArgs);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"        case \"set\":","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"            return new SetPriorityCommand(habitTracker, habitCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"        case \"sort\":","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"            return new SortHabitsCommand(habitTracker);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"        default:","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Unknown command\");","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":50}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import commands.ExitCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"import static parser.FitnessCommandParser.determineFitnessCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"import static parser.HabitCommandParser.determineHabitCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"import static parser.ReflectionCommandParser.determineReflectionCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"import static parser.SleepCommandParser.determineSleepCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"import static parser.FocusCommandParser.determineFocusCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"public class Parser {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    public static Command determineCommand(SleepTracker sleepTracker,","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"                                           ReflectionManager reflection,","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"                                           HabitTracker habitTracker,","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"                                           FocusTimer focusTimer,","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"                                           FitnessMotivator fitnessMotivator,","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"                                           String userInput)","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"            throws Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        String[] userWords \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        String userCommandSection \u003d userWords[0];","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"        String commandArgs \u003d userWords.length \u003d\u003d 2 ? userWords[1] : \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"        switch (userCommandSection) {","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        case \"reflect\":","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"            return determineReflectionCommand(reflection, commandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"        case \"habit\":","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"            return determineHabitCommand(habitTracker, commandArgs);","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"        case \"sleep\":","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"            return determineSleepCommand(sleepTracker, commandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"        case \"fitness\":","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"            return determineFitnessCommand(fitnessMotivator, commandArgs);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"        case \"focus\":","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"            return determineFocusCommand(focusTimer, commandArgs);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"        case \"exit\":","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"            return new ExitCommand(commandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"            throw new Wellness360Exception(\"Unknown Wellness360 command\");","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":3,"OKW32":7,"genexus85":25,"damiwee":9,"Daviancold":6}},{"path":"src/main/java/parser/ReflectionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import commands.reflectcommands.ReflectionHelpCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import commands.reflectcommands.ListFavouriteReflectionsCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import commands.reflectcommands.GetReflectionQuestionsCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import commands.reflectcommands.UnsaveFromFavouritesCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import commands.reflectcommands.SaveToFavouritesCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":" * A parser for handling reflection-related commands.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"public class ReflectionCommandParser {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * Determines the appropriate reflection command based on user input.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager The ReflectionManager instance to be used for executing commands.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"     * @param commandArgs       The string containing the user command and its arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"     * @return The Command object corresponding to the user\u0027s reflection command.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if an error occurs during command parsing or execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"    public static Command determineReflectionCommand(ReflectionManager reflectionManager, String commandArgs)","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"        String userReflectionCommand \u003d userCommand[0];","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"        String reflectionCommandArgs \u003d userCommand.length \u003d\u003d 2 ? userCommand[1] : \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        switch(userReflectionCommand) {","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        case \"get\":","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"            return new GetReflectionQuestionsCommand(reflectionManager, reflectionCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        case \"save\":","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"            return new SaveToFavouritesCommand(reflectionManager, reflectionCommandArgs);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"        case \"unsave\":","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"            return new UnsaveFromFavouritesCommand(reflectionManager, reflectionCommandArgs);","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        case \"list\":","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"            return new ListFavouriteReflectionsCommand(reflectionManager, reflectionCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"        case \"help\":","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"            return new ReflectionHelpCommand(reflectionManager, reflectionCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Unknown reflect command\");","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":48}},{"path":"src/main/java/parser/SleepCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.AddSleepCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.DeleteSleepCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.GetSleepCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.ListSleepCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.UpdateSleepCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":" * Represents the input parser of Sleep Tracker.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":" * Parses user input into Sleep Tracker commands and details of the command.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":" * Generates the respective Command objects based on the parsed command keyword.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"public class SleepCommandParser {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     * Parses user input into command and details, and creates the corresponding Command object.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"     * @param commandArgs User input for the sleep tracker command.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"     * @return Command object to be executed.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException If the user input is not part of the command list.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"    public static Command determineSleepCommand(SleepTracker sleepTracker, String commandArgs)","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"            throws SleepException {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"        String userSleepCommand \u003d userCommand[0];","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"        String sleepCommandArgs \u003d userCommand.length \u003d\u003d 2 ? userCommand[1] : \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        switch(userSleepCommand) {","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        case \"add\":","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            return new AddSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        case \"list\":","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"            return new ListSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"        case \"get\":","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"            return new GetSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"        case \"update\":","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"            return new UpdateSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"            return new DeleteSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"            throw new SleepException(\"Unknown sleep command\");","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":47,"damiwee":1}},{"path":"src/main/java/reflection/FavoriteReflectionsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":" * Represents a list of favorite reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"public class FavoriteReflectionsList extends ReflectionList {","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"     * Constructs a FavoriteReflectionsList with an empty list of favorites.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    public FavoriteReflectionsList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"        super();","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * Retrieves a favorite reflection question by its index in the list.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     * @param favouritesId The index of the favorite reflection question to retrieve.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"     * @return The reflection question at the specified index.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    public ReflectionQuestion get(int favouritesId) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        return reflectionList.get(favouritesId);","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"damiwee":26}},{"path":"src/main/java/reflection/ReflectionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":" * Represents a list of reflection questions.","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"public class ReflectionList {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    protected ArrayList\u003cReflectionQuestion\u003e reflectionList;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"     * Constructs a ReflectionList with an empty list of reflections.","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    public ReflectionList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        this.reflectionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * Adds a reflection question to the list.","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"     * @param reflectionQuestion The reflection question to be added.","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion(ReflectionQuestion reflectionQuestion) {","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        if (!reflectionQuestion.toString().isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"            reflectionList.add(reflectionQuestion);","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"     * Removes a reflection question from the list.","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"     * @param reflectionQuestion The reflection question to be removed.","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"    public void removeReflectionQuestion(ReflectionQuestion reflectionQuestion) {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        if (!reflectionQuestion.toString().isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"            reflectionList.remove(reflectionQuestion);","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"     * Retrieves the size of the reflection list.","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"     * @return The size of the reflection list.","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"    public int getSize() {","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"        return reflectionList.size();","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"     * Retrieves the list of reflection questions.","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"     * @return The list of reflection questions.","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"    public ArrayList\u003cReflectionQuestion\u003e getReflectionList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"        return reflectionList;","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"damiwee":59}},{"path":"src/main/java/reflection/ReflectionManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":" * Manages reflection-related operations.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"public class ReflectionManager {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    private static final String[] HELP_MENU_INSTRUCTIONS \u003d {","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        \"reflect get: Get 5 random reflection questions\",","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"        \"reflect save \u003creflection_id\u003e: Save reflection question by id to favourites list\",","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"        \"reflect unsave \u003creflection_id\u003e: Unsave reflection question by id from favourites list\",","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"        \"reflect list: Retrieve questions from favourites list\",","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"        \"reflect help: Get help menu for reflect commands\"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    };","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    private static final String FAVOURITE_QUESTIONS_FILE_PATH \u003d \"data/favourites.txt\";","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    private ArrayList\u003cReflectionQuestion\u003e fiveRandomQuestions;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    private ReflectionQuestionBank questionBank;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    private FavoriteReflectionsList favoriteReflectionsList;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"     * Constructs a ReflectionManager and initializes question bank and favorite reflections list.","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    public ReflectionManager() {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        this.questionBank \u003d new ReflectionQuestionBank();","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"        this.favoriteReflectionsList \u003d new FavoriteReflectionsList();","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        ArrayList\u003cString\u003e favouritesList \u003d Storage.loadDataFromFile(FAVOURITE_QUESTIONS_FILE_PATH);","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        for (String fav : favouritesList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"            ReflectionQuestion reflectionQuestion \u003d new ReflectionQuestion(fav);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"            this.favoriteReflectionsList.addReflectionQuestion(reflectionQuestion);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"     * Prints five random reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"    public void printFiveRandomQuestions() {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"            fiveRandomQuestions \u003d questionBank.getFiveRandomQuestions();","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"            Ui.printList(fiveRandomQuestions, \"Generated Questions:\");","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"        } catch (ReflectException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"     * Saves a reflection question to favorites.","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"     * @param reflectionId The ID of the reflection question to save.","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if an error occurs during saving.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"    public void saveReflectionQuestion(int reflectionId) throws ReflectException {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"            ReflectionQuestion questionToSave \u003d fiveRandomQuestions.get(reflectionId - 1);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"            favoriteReflectionsList.addReflectionQuestion(questionToSave);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"            Storage.saveTasksToFile(FAVOURITE_QUESTIONS_FILE_PATH, favoriteReflectionsList.getReflectionList());","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(\"Got it. Added reflection question to favourites:\\n\" + questionToSave);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Key in valid favourite reflection ID, between 1 and 5\");","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"No questions generated yet. Generate questions using \u0027reflect get\u0027 \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"                    \"command first.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"     * Unsaves a reflection question from favorites.","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"damiwee"},"content":"     * @param reflectionId The ID of the reflection question to be unsaved.","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if an error occurs during saving.","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"damiwee"},"content":"    public void unsaveReflectionQuestion(int reflectionId) throws ReflectException {","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"damiwee"},"content":"            ReflectionQuestion questionToUnsave \u003d favoriteReflectionsList.get(reflectionId - 1);","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"damiwee"},"content":"            favoriteReflectionsList.removeReflectionQuestion(questionToUnsave);","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"damiwee"},"content":"            Storage.saveTasksToFile(FAVOURITE_QUESTIONS_FILE_PATH, favoriteReflectionsList.getReflectionList());","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(\"Got it. Unsaved reflection question from favourites:\\n\" + questionToUnsave);","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"damiwee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Key in valid favourite reflection ID, key in \u0027reflect list\u0027 command to \" +","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"damiwee"},"content":"                    \"view range of questions in your favourites list. \");","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"damiwee"},"content":"     * Prints the list of favorite reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"damiwee"},"content":"    public void printFavourites() {","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"damiwee"},"content":"        if(favoriteReflectionsList.getReflectionList().isEmpty()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(\"No reflection questions saved to favourites\");","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"damiwee"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"damiwee"},"content":"            Ui.printList(favoriteReflectionsList.getReflectionList(), \"Favourites list:\");","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"damiwee"},"content":"     * Prints the help menu for reflection commands.","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"damiwee"},"content":"    public void printHelpMenu() {","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"damiwee"},"content":"        ArrayList\u003cString\u003e helpMenuInstructionsList \u003d new ArrayList\u003c\u003e(Arrays.asList(HELP_MENU_INSTRUCTIONS));","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"damiwee"},"content":"        assert helpMenuInstructionsList.size() \u003d\u003d 5 : \"Help menu should have 5 instructions\";","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"damiwee"},"content":"        Ui.printList(helpMenuInstructionsList, \"Commands for reflection feature:\");","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":120}},{"path":"src/main/java/reflection/ReflectionQuestion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":" * Represents a reflection question.","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"public class ReflectionQuestion {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"    private String question;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"     * Constructs a ReflectionQuestion with the given question text.","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"     * @param question The text of the reflection question.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    public ReflectionQuestion(String question) {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        this.question \u003d question;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * Retrieves the text of the reflection question.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"     * @return The text of the reflection question.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        return question;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":27}},{"path":"src/main/java/reflection/ReflectionQuestionBank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" * Represents a bank of reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"public class ReflectionQuestionBank extends ReflectionList{","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private static final String[] REFLECTION_QUESTIONS \u003d {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"        \"What have been the most significant lessons you\u0027ve learned about yourself in the past year?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"        \"How have your values evolved over time, and why?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        \"What habits or behaviors do you want to cultivate or change to become a better version of yourself?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a recent failure or setback. What did you learn from it, and how will you apply those lessons \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"                \"moving forward?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"        \"In what areas do you feel you\u0027ve made the most progress recently, and what contributed to that progress?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"        \"What are your biggest strengths, and how can you leverage them more effectively in your daily life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"        \"Describe a moment when you stepped outside of your comfort zone. What did you discover about yourself?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"        \"How do you define success, and how has that definition evolved over time?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"        \"What activities or hobbies bring you the most joy and fulfillment, and how can you incorporate more of them \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"                \"into your life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you received constructive criticism. How did you react, and what did you learn from \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"                \"the experience?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        \"Who are the people in your life who bring you the most happiness and support? How do you nurture \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"                \"those relationships?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        \"Have there been any conflicts or misunderstandings in your relationships recently? How have you worked \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"                \"to resolve them?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you felt truly understood by someone. What made that connection so meaningful?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"        \"How do you prioritize spending time with loved ones amidst your busy schedule?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"        \"What qualities do you admire most in your closest friends or family members, and why?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        \"Are there any relationships in your life that feel strained or unfulfilling? How can you address \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"                \"those challenges?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        \"Reflect on your communication style. In what ways do you excel, and where do you see room for improvement?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        \"Describe a memorable shared experience with someone you care about. What made it special?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"        \"How do you express gratitude toward the people who enrich your life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you forgave someone or were forgiven. What did you learn from that experience?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"        \"What motivates you to excel in your career, beyond financial rewards?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a recent professional success. What factors contributed to your achievement?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"        \"In what ways do you seek to grow and develop within your current role or industry?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"        \"How do you balance pursuing your career ambitions with maintaining a healthy work-life balance?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you faced a significant challenge at work. How did you overcome it?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"        \"What steps are you taking to advance your skills and knowledge in your field?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"        \"Describe a mentor or role model who has had a profound impact on your career journey. \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"                \"What lessons have you learned from them?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"        \"How do you navigate workplace conflicts or disagreements with colleagues or superiors?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"        \"Reflect on your career goals. Are they still aligned with your passions and values, or have they evolved?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"        \"What do you consider to be your greatest professional achievement so far, and why?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"        \"How do you prioritize self-care and well-being in your daily life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a recent creative project or activity that brought you joy. What inspired you to pursue it?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"        \"In what ways do you express yourself creatively, whether through art, writing, music, or other mediums?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"        \"Describe a time when you felt in a state of flow, completely absorbed in a creative endeavor.\",","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"        \"How do you overcome creative blocks or periods of stagnation?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a piece of art, literature, or music that has deeply resonated with you. \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"                \"What emotions or insights did it evoke?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"        \"What role does creativity play in your life, and how do you nurture it?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"        \"How do you make time for creative pursuits amidst your other responsibilities and commitments?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you took a creative risk. What did you learn from the experience?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"        \"Describe a recent moment when you felt inspired by something or someone in your environment.\",","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"        \"How do you celebrate your unique talents and creative voice?\"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"    };","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"     * Constructs a ReflectionQuestionBank and initializes the list of reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"    public ReflectionQuestionBank() {","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"        super();","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"        setUpReflectionBank();","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"     * Initializes the reflection question bank with predefined questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"damiwee"},"content":"    private void setUpReflectionBank() {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"        for(String question : REFLECTION_QUESTIONS) {","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"            ReflectionQuestion reflectionQuestion \u003d new ReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"            addReflectionQuestion(reflectionQuestion);","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"damiwee"},"content":"        assert !reflectionList.isEmpty() : \"Reflection question bank should not be empty\";","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"damiwee"},"content":"     * Retrieves five random reflection questions from the bank.","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"damiwee"},"content":"     * @return An ArrayList containing five random reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the bank is empty.","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"damiwee"},"content":"    public ArrayList\u003cReflectionQuestion\u003e getFiveRandomQuestions() throws ReflectException {","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"damiwee"},"content":"            ArrayList\u003cReflectionQuestion\u003e randomQuestions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"damiwee"},"content":"            // Create a copy of the original list","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"damiwee"},"content":"            ArrayList\u003cReflectionQuestion\u003e copyList \u003d new ArrayList\u003c\u003e(reflectionList);","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"damiwee"},"content":"            // Shuffle the copy list","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"damiwee"},"content":"            Collections.shuffle(copyList);","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"damiwee"},"content":"            // Select the first five questions from the shuffled copy list and","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"damiwee"},"content":"            // add them to the result list","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"damiwee"},"content":"            for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"damiwee"},"content":"                randomQuestions.add(copyList.get(i));","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"damiwee"},"content":"            assert randomQuestions.size() \u003d\u003d 5 : \"random questions list size should be 5\";","lastModifiedDate":"2024-03-22"},{"lineNumber":107,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"damiwee"},"content":"            return randomQuestions;","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"damiwee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Question bank is empty\");","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":113}},{"path":"src/main/java/sleep/DeleteMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"public enum DeleteMode {","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"    FIND, BEFORE, BETWEEN","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"OKW32":5}},{"path":"src/main/java/sleep/SleepCycle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"public class SleepCycle implements Comparable\u003cSleepCycle\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"    private double hoursSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"    private LocalDate dateOfSleep;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    public SleepCycle(double hours, LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"        this.hoursSlept \u003d hours;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"        this.dateOfSleep \u003d date;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    public double getHoursSlept() {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"        return hoursSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    public LocalDate getDateOfSleep() {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"        return dateOfSleep;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"    public void setHoursOfSleep(double newHours) {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"        hoursSlept \u003d newHours;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"    public int compareTo(SleepCycle sleepCycle) {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"        LocalDate compareDate \u003d sleepCycle.dateOfSleep;","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        if (compareDate.isEqual(this.dateOfSleep)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"            return 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        } else if (compareDate.isAfter(this.dateOfSleep)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"            return -1;","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            return 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"        return DateFormat.convertDateToString(this.getDateOfSleep()) + \": \" + this.hoursSlept;","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":43}},{"path":"src/main/java/sleep/SleepCycleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":" * Represents the lists of sleep cycles","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"public class SleepCycleList {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    private ArrayList\u003cSleepCycle\u003e sleepCycleList;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    private double totalHrsSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    private int numberOfCycles;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     * Constructs a new SleepCycleList object with an empty list.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    public SleepCycleList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"        this.sleepCycleList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"        this.totalHrsSlept \u003d 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"        this.numberOfCycles \u003d 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"     * Adds a new sleep cycle into sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"     * @param sleepCycle sleep cycle to be added","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"    public void addSleepCycle(SleepCycle sleepCycle) {","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.add(sleepCycle);","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        totalHrsSlept +\u003d sleepCycle.getHoursSlept();","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        numberOfCycles +\u003d 1;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(\"--- SleepCycle for \"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"                + DateFormat.convertDateToString(sleepCycle.getDateOfSleep())","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"                + \" has been added ---\");","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"        Collections.sort(sleepCycleList);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"     * Deletes a new sleep cycle in sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"     * @param date date of sleep cycle to be deleted","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCycle(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c numberOfCycles; i++) {","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"            SleepCycle currSleepCycle \u003d sleepCycleList.get(i);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"            if (date.isEqual(currSleepCycle.getDateOfSleep())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"                totalHrsSlept -\u003d currSleepCycle.getHoursSlept();","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"                sleepCycleList.remove(i);","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"                numberOfCycles--;","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"OKW32"},"content":"                Ui.printMessageWithSepNewLine(\"Sleep cycle for \" + DateFormat.convertDateToString(date)","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"                        + \" has been removed from list\");","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"                return;","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(\"No entry for sleep cycle on \" + DateFormat.convertDateToString(date));","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"OKW32"},"content":"     * Deletes a new sleep cycle in sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"OKW32"},"content":"     * @param date date at which sleep cycles logged before this date are to be deleted","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCyclesBefore(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"OKW32"},"content":"        int numberOfDeletion \u003d 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"OKW32"},"content":"        while (numberOfCycles \u003e 0 \u0026\u0026 sleepCycleList.get(0).getDateOfSleep().isBefore(date)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"OKW32"},"content":"            totalHrsSlept -\u003d sleepCycleList.get(0).getHoursSlept();","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"OKW32"},"content":"            sleepCycleList.remove(0);","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"OKW32"},"content":"            numberOfCycles--;","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"OKW32"},"content":"            numberOfDeletion++;","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(\"A total of \" + numberOfDeletion + \" sleep cycles have been deleted\");","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"OKW32"},"content":"     * Deletes a new sleep cycle in sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"OKW32"},"content":"     * @param startDate lower bound of date of sleep cycles to be deleted","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"OKW32"},"content":"     * @param endDate upper bound of date of sleep cycles to be deleted","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCyclesBetween(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"OKW32"},"content":"        int startId \u003d 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"OKW32"},"content":"        int numberOfDeletion \u003d 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"OKW32"},"content":"        while (startId \u003c numberOfCycles) {","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"OKW32"},"content":"            SleepCycle currSleepCycle \u003d sleepCycleList.get(startId);","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"OKW32"},"content":"            if (startDate.isBefore(currSleepCycle.getDateOfSleep())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"OKW32"},"content":"                startId++;","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"OKW32"},"content":"            } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"OKW32"},"content":"                break;","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"OKW32"},"content":"        while (startId \u003c numberOfCycles) {","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"OKW32"},"content":"            SleepCycle currSleepCycle \u003d sleepCycleList.get(startId);","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"OKW32"},"content":"            if (!currSleepCycle.getDateOfSleep().isAfter(endDate)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"OKW32"},"content":"                sleepCycleList.remove(startId);","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"OKW32"},"content":"                numberOfDeletion++;","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"OKW32"},"content":"                numberOfCycles--;","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"OKW32"},"content":"            } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"OKW32"},"content":"                break;","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(\"A total of \" + numberOfDeletion + \" sleep cycles have been deleted\");","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"OKW32"},"content":"     * List out all sleep cycles in sleepCycleList","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"OKW32"},"content":"    public void listSleepCycles() {","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"OKW32"},"content":"        String sleepListMessage \u003d \"Total hrs slept: \" + totalHrsSlept + System.lineSeparator();","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c numberOfCycles - 1; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"OKW32"},"content":"            sleepListMessage +\u003d (i + 1) + \". \" + sleepCycleList.get(i) + System.lineSeparator();","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"OKW32"},"content":"        if (numberOfCycles \u003e 0) {","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"OKW32"},"content":"            sleepListMessage +\u003d numberOfCycles + \". \" + sleepCycleList.get(numberOfCycles - 1);","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"OKW32"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"OKW32"},"content":"            sleepListMessage +\u003d \"No sleep cycle has been added\";","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(sleepListMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"OKW32"},"content":"     * Prints out number of hours of a date\u0027s sleep cycle in sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"OKW32"},"content":"     * @param date date of sleep cycle to be found","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"OKW32"},"content":"     * @param isPrint true if user wants to print out message, false otherwise","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"OKW32"},"content":"    public int getSleepCycle(LocalDate date, boolean isPrint) {","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c numberOfCycles; i++) {","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"OKW32"},"content":"            SleepCycle currSleep \u003d sleepCycleList.get(i);","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"OKW32"},"content":"            if (currSleep.getDateOfSleep().isEqual(date)){","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"OKW32"},"content":"                if (isPrint) {","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"OKW32"},"content":"                    Ui.printMessageWithSepNewLine(\"Hours slept on \" + DateFormat.convertDateToString(date)","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"OKW32"},"content":"                            + \": \" + currSleep.getHoursSlept());","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"OKW32"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":133,"author":{"gitId":"OKW32"},"content":"                return i;","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":135,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"OKW32"},"content":"        if (isPrint) {","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"OKW32"},"content":"            Ui.printMessageWithSepNewLine(\"No entry found for the date.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":138,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"OKW32"},"content":"        return -1;","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"OKW32"},"content":"     * Updates a  sleep cycle in sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"OKW32"},"content":"     * @param date date of sleep cycle to be updated","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"OKW32"},"content":"     * @param newHours updated hours of sleep cycle","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"OKW32"},"content":"    public void updateSleepCycle(LocalDate date, double newHours) {","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c numberOfCycles; i++) {","lastModifiedDate":"2024-03-23"},{"lineNumber":149,"author":{"gitId":"OKW32"},"content":"            SleepCycle currSleep \u003d sleepCycleList.get(i);","lastModifiedDate":"2024-03-23"},{"lineNumber":150,"author":{"gitId":"OKW32"},"content":"            if (currSleep.getDateOfSleep().isEqual(date)){","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"OKW32"},"content":"                double oldHours \u003d currSleep.getHoursSlept();","lastModifiedDate":"2024-03-23"},{"lineNumber":152,"author":{"gitId":"OKW32"},"content":"                currSleep.setHoursOfSleep(newHours);","lastModifiedDate":"2024-03-23"},{"lineNumber":153,"author":{"gitId":"OKW32"},"content":"                totalHrsSlept \u003d totalHrsSlept - oldHours + newHours;","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"OKW32"},"content":"                Ui.printMessageWithSepNewLine(\"Hours of sleep for \" + DateFormat.convertDateToString(date) +","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"OKW32"},"content":"                        \" has been updated from \" + oldHours + \" to \" + newHours);","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"OKW32"},"content":"                return;","lastModifiedDate":"2024-03-23"},{"lineNumber":157,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":158,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":159,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(\"No entry found for the date.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":160,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":161,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":162,"author":{"gitId":"OKW32"},"content":"    public int getNumberOfCycles() {","lastModifiedDate":"2024-03-16"},{"lineNumber":163,"author":{"gitId":"OKW32"},"content":"        return numberOfCycles;","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"OKW32"},"content":"    public double getTotalHrsSlept() {","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"OKW32"},"content":"        return totalHrsSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":169}},{"path":"src/main/java/sleep/SleepTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":" * Represents the interface for SleepTracker","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":" * The sleepCycleList contains all the tasks managed by Wellness360.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"public class SleepTracker {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"    SleepCycleList sleepCycleList;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    public SleepTracker() {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"        this.sleepCycleList \u003d new SleepCycleList();","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    public void listSleepCycles() {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.listSleepCycles();","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"    public void addSleepCycle(SleepCycle sleepCycleToAdd) throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"        if (sleepCycleList.getSleepCycle(sleepCycleToAdd.getDateOfSleep(), false) \u003e\u003d 0) {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"There is already an existing sleep cycle for the date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(sleepCycleToAdd);","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"    public void updateSleepCycle(LocalDate date, double newHours) {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.updateSleepCycle(date, newHours);","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"    public void getSleepCycle(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.getSleepCycle(date, true);","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCycle(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.deleteSleepCycle(date);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCyclesBefore(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.deleteSleepCyclesBefore(date);","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCyclesBetween(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.deleteSleepCyclesBetween(startDate, endDate);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":48}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package storage;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import java.io.File;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"public abstract class Storage {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    public static ArrayList\u003cString\u003e loadDataFromFile(String filePath) {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"        try (Scanner scanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"                String nextLineOfData \u003d scanner.nextLine();","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"                data.add(nextLineOfData);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"            createFolder(filePath);","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        return data;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    public static void createFolder(String filePath) {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"            f.createNewFile();","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    public static \u003cT\u003e void saveTasksToFile(String filePath, ArrayList\u003cT\u003e data) {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"            for (T item : data) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"                fw.write(item.toString() + System.lineSeparator());","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"            fw.close();","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"    public static boolean isFileCreated (String filePath) {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"        return f.exists() \u0026\u0026 !f.isDirectory();","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":54,"Daviancold":5}},{"path":"src/main/java/storage/habit/HabitTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package storage.habit;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import habit.Habit;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.Priority;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"public class HabitTrackerStorage {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"    private static final String HABIT_FILE_PATH \u003d \"data/habits.txt\";","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    public static void saveHabitListToFile(ArrayList\u003cHabit\u003e habitList) {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"        for (Habit habit : habitList) {","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"            data.add(habit.getDescription() + \", \" + habit.getHabitCount()","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"                    + \", \" + habit.getPriority());","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"        Storage.saveTasksToFile(HABIT_FILE_PATH, data);","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    public static ArrayList\u003cHabit\u003e loadHabitListFromFile() throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"        ArrayList\u003cHabit\u003e habitList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        ArrayList\u003cString\u003e data \u003d Storage.loadDataFromFile(HABIT_FILE_PATH);","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        for (String line : data) {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"            String[] parts \u003d line.split(\", \");","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"                throw new HabitException(\"Error in loading habit tracker data from local storage\");","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"            String description \u003d parts[0];","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"            int habitCount \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"            Priority priority \u003d Priority.valueOf(parts[2]);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"            Habit habit \u003d new Habit(description, habitCount, priority);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"            habitList.add(habit);","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"        return habitList;","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"genexus85":45}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":" * Ui class handles user interface related functionalities","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":" * such as displaying messages,prompting user input, and","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":" * printing separators.","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"public class Ui {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    private static final String BOT_NAME \u003d \"Wellness360\";","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private static final String SEP \u003d \"_______________________________________________________\" +","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"            \"_________________________________________________________\";","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"            \"__        __   _ _                     _____  __    ___  \\n\" +","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"            \"\\\\ \\\\      / /__| | |_ __   ___  ___ ___|___ / / /_  / _ \\\\ \\n\" +","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"            \" \\\\ \\\\ /\\\\ / / _ \\\\ | | \u0027_ \\\\ / _ \\\\/ __/ __| |_ \\\\| \u0027_ \\\\| | | |\\n\" +","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"            \"  \\\\ V  V /  __/ | | | | |  __/\\\\__ \\\\__ \\\\___) | (_) | |_| |\\n\" +","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"            \"   \\\\_/\\\\_/ \\\\___|_|_|_| |_|\\\\___||___/___/____/ \\\\___/ \\\\___/\\n\";","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"     * Greets the user upon starting the application.","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"    public static void greetUser() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        System.out.println(\"Welcome to Wellness360!\\n\" + SEP);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"     * Prints the prompt for user input.","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"    public static void promptUserInput() {","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        System.out.print(\"You:\");","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"     * Says goodbye to the user upon exiting the application.","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"     * Displays a farewell message.","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        Ui.printMessageWithSepNewLine(\"Goodbye! See you again!\");","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"     * Prints a message followed by a separator and a new line.","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"     * @param message the message to be printed","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"    public static void printMessageWithSepNewLine(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"        System.out.println(SEP + \"\\n\" +message + \"\\n\" + SEP);","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"    public static void printMessageWithoutSepNewLine(String message) {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"        System.out.println(SEP + \"\\n\" + message + SEP);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"    public static void printList(ArrayList list, String message) {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"        System.out.println(SEP);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c list.size(); i ++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"OKW32"},"content":"            System.out.println((i + 1) + \". \" + list.get(i).toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"        System.out.println(SEP);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":47,"genexus85":4,"damiwee":15}},{"path":"src/test/java/fitness/FitnessMotivatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"public class FitnessMotivatorTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    private FitnessMotivator fitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"        fitnessMotivator \u003d new FitnessMotivator();","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    public void printExercises_getExercises_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"        String output \u003d fitnessMotivator.getExercises();","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"Arms\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"Chest\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"Abs\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"Back\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"Legs\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"sets\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"reps\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Daviancold":28}},{"path":"src/test/java/focus/FocusTimerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package focus;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"public class FocusTimerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    private FocusTimer focusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer \u003d new FocusTimer();","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"    public void setStartTimer_startTimer_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setStartTiming();","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(true,focusTimer.getStartStatus());","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    public void setStopTimer_stopTimer_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setStartTiming();","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setStopTiming();","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(false, focusTimer.getStartStatus());","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"JingHaoooo":28}},{"path":"src/test/java/habit/HabitTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package habit;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"public class HabitTrackerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"        habitTracker \u003d new HabitTracker();","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"    @AfterEach","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"    public void tearDown() {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"        habitTracker.clearHabits();","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"    public void addHabit_addTwoHabits_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"        Habit habitOne \u003d new Habit(\"Complete my homework\");","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"        Habit habitTwo \u003d new Habit(\"Brush my teeth\");","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        habitTracker.addHabit(habitOne);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        habitTracker.addHabit(habitTwo);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        assertEquals(2, HabitTracker.getNumberOfHabits());","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"    public void updateHabitCount_habitCountTwo_success() throws HabitException {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"        Habit habitOne \u003d new Habit(\"Complete my homework\");","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        habitTracker.addHabit(habitOne);","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"        habitTracker.updateHabitCount(1, \"2\");","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"        assertEquals(2, habitOne.getHabitCount());","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"genexus85":38}},{"path":"src/test/java/reflect/FavoriteReflectionsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflect;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.FavoriteReflectionsList;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionQuestion;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"public class FavoriteReflectionsListTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    private FavoriteReflectionsList favoriteReflectionList;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList \u003d new FavoriteReflectionsList();","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion_addQuestion_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"What is reflection?\");","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList.addReflectionQuestion(question);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        assertEquals(1, favoriteReflectionList.getReflectionList().size());","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        assertTrue(favoriteReflectionList.getReflectionList().contains(question));","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion_addBlankQuestion_skipOverBlankQuestion() {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList.addReflectionQuestion(question);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        assertEquals(0, favoriteReflectionList.getReflectionList().size());","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        assertFalse(favoriteReflectionList.getReflectionList().contains(question));","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    public void removeReflectionQuestion_removeQuestion_success() {","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"What is reflection?\");","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList.addReflectionQuestion(question);","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList.removeReflectionQuestion(question);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"        assertEquals(0, favoriteReflectionList.getReflectionList().size());","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"        assertFalse(favoriteReflectionList.getReflectionList().contains(question));","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"    public void get_getQuestionById_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"What is reflection?\");","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList.addReflectionQuestion(question);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion retrievedQuestion \u003d favoriteReflectionList.get(0);","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"        assertEquals(question, retrievedQuestion);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"damiwee":54}},{"path":"src/test/java/reflect/ReflectQuestionBankTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"package reflect;","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionQuestion;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionQuestionBank;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"public class ReflectQuestionBankTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    private ReflectionQuestionBank reflectionQuestionBank;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"        reflectionQuestionBank \u003d new ReflectionQuestionBank();","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion_addQuestion_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"What is reflection?\");","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        reflectionQuestionBank.addReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        assertEquals(42, reflectionQuestionBank.getSize());","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion_addBlankQuestion_skipOverBlankQuestion() {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        reflectionQuestionBank.addReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        assertEquals(41, reflectionQuestionBank.getSize());","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    public void getFiveRandomQuestions_getFiveQuestions_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion[] questions \u003d {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 1\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 2\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 3\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 4\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 5\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 6\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 7\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 8\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 9\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 10\")","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"        };","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"        ArrayList\u003cReflectionQuestion\u003e expectedQuestions \u003d new ArrayList\u003c\u003e(Arrays.asList(questions));","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"        for (ReflectionQuestion question : expectedQuestions) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"            reflectionQuestionBank.addReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"            ArrayList\u003cReflectionQuestion\u003e randomQuestions \u003d reflectionQuestionBank.getFiveRandomQuestions();","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"            // Assert that there are exactly 5 questions returned","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"            assertEquals(5, randomQuestions.size());","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"            // Assert that all questions returned are from the expected set","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"damiwee"},"content":"            for (ReflectionQuestion question : randomQuestions) {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"                assertNotNull(expectedQuestions.contains(question));","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"        } catch (ReflectException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"            fail(\"Question list is empty: \" + e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"damiwee"},"content":"    public void testGetTaskListSize() {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"        assertEquals(41, reflectionQuestionBank.getSize());","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"damiwee":78}},{"path":"src/test/java/sleep/SleepCycleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"public class SleepCycleListTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"    private SleepCycleList sleepCycleList;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"        sleepCycleList \u003d new SleepCycleList();","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    public void addSleepCycle_addCycle_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"        date \u003d LocalDate.parse(\"25/01/2022\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\") );","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"        SleepCycle cycle \u003d new SleepCycle(2, date);","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(cycle);","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        assertEquals(1, sleepCycleList.getNumberOfCycles());","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"    public void addTwoSleepCycle_getTotalHoursSlept_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"        LocalDate date1;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        LocalDate date2;","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        date1 \u003d LocalDate.parse(\"25/01/2022\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        date2 \u003d LocalDate.parse(\"26/01/2022\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"        SleepCycle cycle \u003d new SleepCycle(2, date1);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(cycle);","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"        cycle \u003d new SleepCycle(3, date2);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(cycle);","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"        assertEquals(5, sleepCycleList.getTotalHrsSlept());","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":41}}]
