[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"    mainClass.set(\"Main\")","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"    archiveBaseName.set(\"Wellness360\")","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"tasks.withType(JavaExec) {","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":4,"OKW32":2,"-":44}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/basic.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        IMPORT CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        An import statement is redundant if:","lastModifiedDate":"2022-04-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2022-04-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2022-04-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2022-04-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for unused import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        An import statement is unused if:","lastModifiedDate":"2022-04-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          It\u0027s not referenced in the file.","lastModifiedDate":"2022-04-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        NAMING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                     value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        LENGTH and CODING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2022-04-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2022-04-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            the same line. e.g., the following example is fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              } else","lastModifiedDate":"2022-04-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            \u003c!-- This next example is not fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"              }","lastModifiedDate":"2022-04-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"              else","lastModifiedDate":"2022-04-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            if (true) return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            if (true) { return 1; } // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            else if {","lastModifiedDate":"2022-04-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"              return 1; // else if should always be multi line","lastModifiedDate":"2022-04-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-04-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (true)","lastModifiedDate":"2022-04-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"              return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2022-04-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2022-04-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2022-04-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2022-04-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2022-04-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                      value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        ORDER CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2022-04-29"},{"lineNumber":208,"author":{"gitId":"JingHaoooo"},"content":"             @author, @version, @param, @return, @throws, @exceptions, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2022-04-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"          2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          3. Constructors","lastModifiedDate":"2022-04-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          4. Methods","lastModifiedDate":"2022-04-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2022-04-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                 8.4.3.  The prescribed order is:","lastModifiedDate":"2022-04-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                 public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2022-04-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                 synchronized, native, strictfp","lastModifiedDate":"2022-04-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"              --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        WHITESPACE CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        JAVADOC CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"JingHaoooo":1,"-":286}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |      Name      | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"--------|:--------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"![](https://media.licdn.com/dms/image/D5603AQHkV-k6X1OrwQ/profile-displayphoto-shrink_800_800/0/1706546079560?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dVDt-L7UCUhnFvCu_JsGbKvcP_C6_H84GbD-9pn3_kmA) | Ari Lim Ee Lik | [Github](https://github.com/genexus85) | [Portfolio](https://www.linkedin.com/in/ari-lim/)","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"![](https://media.licdn.com/dms/image/D5603AQFuRLdtBPRF8w/profile-displayphoto-shrink_800_800/0/1695963119816?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dbtdWBxTXo9eNexJwXHUDuklszbhbh948neJym3ReKjg) | Damien Wee | [Github](https://github.com/damiwee) | [Portfolio](https://www.linkedin.com/in/damien-wee-jl/)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"![](https://avatars.githubusercontent.com/u/110613918?v\u003d4) | Davian Kho Yong Quan | [Github](https://github.com/Daviancold) | [Portfolio](https://daviancold.netlify.app)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"![](https://media.licdn.com/dms/image/D5603AQFdPfbYvCPsKg/profile-displayphoto-shrink_200_200/0/1707484393431?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dwTkp-P9RPsxZt6f-r-tZzLGDxIpgqxlG0u1kHG4VIX4) | Lim Jing Hao | [Github](https://github.com/JingHaoooo) | [Portfolio](https://www.linkedin.com/in/jing-hao-lim-684326290/)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"![](https://media.licdn.com/dms/image/D5603AQG6kNYQZZB8Yw/profile-displayphoto-shrink_400_400/0/1695541754470?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dyABBk4FeDSfAyuSrM--nT9p-c2br34pKdqKomHPOwZ0) | Ong Kan Wu | [Github](https://github.com/OKW32) | [Portfolio](https://www.linkedin.com/in/ong-kan-wu-4a869726a/)","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"JingHaoooo":1,"OKW32":2,"genexus85":2,"Daviancold":1,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"# Wellness360 Developer Guide","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"## Table of Contents","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"- [Wellness360 Developer Guide](#wellness360-developer-guide)","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"- [Table of contents](#table-of-contents)","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"- [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"  - [Setting up the project in your computer](#setting-up-the-project-in-your-computer)","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"  - [Before writing code](#before-writing-code)","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"- [Design \u0026 implementation]()","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"  - [Architecture]()","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"  - [Ui component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"  - [Command parser component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"  - [Storage component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"  - [Reflection component](#reflection-component)","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    - [Description](#description)","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    - [Design Considerations](#design-considerations)","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"      - [User Design Considerations](#user-design-considerations)","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"      - [Developer Design Considerations](#developer-design-considerations)","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    - [Implementation](#implementation)","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"      - [Class Diagram](#class-diagram)","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"      - [Sequence Diagram](#sequence-diagram)","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"  - [Habit tracker component]()","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    - [Description](#description-1)","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"    - [Design Considerations](#design-considerations-1)","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        - [User Design Considerations](#design-considerations-1)","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        - [Developer Design Considerations](#design-considerations-1)","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"    - [Implementation](#implementation-1)","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        - [Class Diagram](#class-diagram-1)","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"        - [Sequence Diagram](#sequence-diagram-1)","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"  - [Sleep tracker component](#sleep-tracker-component)","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"    - [Description](#description-2)","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"    - [Design Considerations](#design-considerations-2)","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"      - [User Design Considerations](#user-design-considerations-2)","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"      - [Developer Design Considerations](#developer-design-considerations-1)","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"    - [Implementation](#implementation-2)","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"      - [Class Diagram](#class-diagram-2)","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"      - [Sequence Diagram](#sequence-diagram-2)","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"  - [Focus timer component](#focus-timer-component)","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"    - [Design Considerations](#design-considerations-3)","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"    - [Implementation](#implementation-3)","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"      - [Focus Class Diagram](#focus-class-diagram)","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"      - [Focus State Transition Diagram](#focus-state-transition-diagram)","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"      - [Focus Sequence Diagram](#focus-sequence-diagram)","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"  - [Fitness tracker component](#fitness-motivator-component)","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"    - [Description](#description-3)","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"    - [Design Considerations](#design-considerations-4)","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"        - [User Design Considerations](#user-design-considerations-4)","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"        - [Developer Design Considerations](#developer-design-considerations-4)","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"    - [Implementation](#implementation-4)","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"        - [Class Diagram](#class-diagram-3)","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"        - [Sequence Diagram](#sequence-diagram-3)","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"Reference to AB-3 Developer Guide","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"* [Source URL](https://se-education.org/addressbook-level3/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"* Used as template to structure this DeveloperGuide","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"Reference to AB-3 diagrams code","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"* [Source URL](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams)","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"* Used as reference to understand PlantUML syntax","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"## Setting up, getting started","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"damiwee"},"content":"### Setting up the project in your computer","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"Fork this repo, and clone it on your local machine.","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"You are recommended to use Intellij IDEA:","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"1. Configure the JDK: Follow the guide [[se-edu/guides] IDEA: Configuring the JDK](https://se-education.org/guides/tutorials/intellijJdk.html) to ensure Intellij is configured to use JDK 11.","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"2. Import the project as a Gradle project: Follow the guide [[se-edu/guides] IDEA: Importing a Gradle project](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"3. Verify the setup:","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"    * Run the main class in IntelliJ and try a few commands.","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"damiwee"},"content":"    * Run the tests to ensure they all pass.","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"### Before writing code","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"1. Configure the coding style: [[se-edu/guides] IDEA: Configuring the code style](https://se-education.org/guides/tutorials/intellijCodeStyle.html)","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"damiwee"},"content":"2. Set up CI: This project comes with a GitHub Actions config files (in .github/workflows folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the master branch or to any PR. No set up required.","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"damiwee"},"content":"3. Read the developer guide to understand the design.","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"damiwee"},"content":"### Architecture","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"Daviancold"},"content":"### UI component","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Daviancold"},"content":"#### Description","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"Daviancold"},"content":"`Ui` component is in charge of reading in user input and printing output. \u003c/br\u003e \u003c/br\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Daviancold"},"content":"The `Ui` class is created to standardise the output formatting of messages to be printed across all features. These formatting include the printing of messages and lists, reducing code repetition.","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Daviancold"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"Daviancold"},"content":"- #### User Design Considerations","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Daviancold"},"content":"  - Users are able to understand what is going on with relative ease, when they use the Wellness360 chat bot.","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Daviancold"},"content":"  - Standardised output creates a cohesive look and an overall more immersive experience for the user.","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Daviancold"},"content":"- #### Developer Design Considerations","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Daviancold"},"content":"  - Static Attributes: All methods are static, allowing their usage anywhere within the codebase.","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"Daviancold"},"content":"  - SRP: Classes adhere to the Single Responsibility Principle. For example, the `Ui` class is solely responsible for managing printing-related operations.","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Daviancold"},"content":"  - Readability and Maintainability: Descriptive naming, comments, and documentation for clarity. Since printing is a highly used task, it prevents highly-repetitive code as well.","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"Daviancold"},"content":"#### Implementation","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"Daviancold"},"content":"#### Class Diagram","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"Daviancold"},"content":"\u003c!-- Insert Class Diagram here --\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"damiwee"},"content":"### Command parser component","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"damiwee"},"content":"### Storage component","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"damiwee"},"content":"### Reflection component","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"damiwee"},"content":"#### Description","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"damiwee"},"content":"The Reflection component provides users with random reflections questions to reflect on about their personal lives and goals. ","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"damiwee"},"content":"This component aims to contribute to the goal of improving user\u0027s wellness.","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"damiwee"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"damiwee"},"content":"* ##### User Design Considerations","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"damiwee"},"content":"  * The sets of 5 questions are randomly generated each time. They are randomised to allow users to reflect on different areas. ","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"damiwee"},"content":"  * Users can save questions they liked into their favourites list for future review.","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"damiwee"},"content":"  * Users can also delete questions from their favourites list if the question is no longer relevant to them.","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"damiwee"},"content":"  * Help menu is available for new users to guide them on how to use the reflection feature.","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"damiwee"},"content":"  * Error messages with guidance messages will be printed to console if command input by user is invalid.","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"damiwee"},"content":"* #### Developer Design Considerations","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"damiwee"},"content":"  * Modularity: Organized into packages for separation of concerns. Each package contains related classes, such as ReflectionManager and ReflectionList in the reflection package, and ReflectionCommandParser in the parser package.","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"damiwee"},"content":"  * Abstraction: Use of abstract classes and interfaces for flexibility and extensibility. Abstract classes (ReflectionList) provide a common structure and behavior for subclasses (FavoriteReflectionsList, ReflectionQuestionBank), promoting code reuse and ensuring consistent functionality across different implementations.","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"damiwee"},"content":"  * Encapsulation: Private access modifiers and encapsulated methods ensure data integrity. Methods like addReflectionQuestion() and removeReflectionQuestion() in ReflectionList encapsulate the manipulation of the reflection list, ensuring data integrity and promoting a clear interface for interacting with the list.","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"damiwee"},"content":"  * Exception Handling: Graceful error handling with meaningful messages.","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"damiwee"},"content":"  * Command Design Pattern: Encapsulation of actions as objects for decoupling.","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"damiwee"},"content":"  * Dependency Injection: Dependencies injected via constructors for loose coupling.","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"damiwee"},"content":"  * SRP: Classes adhere to the Single Responsibility Principle. For example, the ReflectionManager class is responsible for managing reflection-related operations, while the ReflectionCommandParser class handles parsing and determining reflection commands.","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"damiwee"},"content":"  * Readability and Maintainability: Descriptive naming, comments, and documentation for clarity.","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"damiwee"},"content":"#### Implementation","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"damiwee"},"content":"##### Class Diagram","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"damiwee"},"content":"![ReflectionClassDiagram.png](diagrams/reflection/ReflectionClassDiagram.png)","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"damiwee"},"content":"  * `ReflectionManager` class","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"damiwee"},"content":"    * Overview","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"damiwee"},"content":"      * The `ReflectionManager` class oversees reflection-related operations, managing reflection questions and favorites. ","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"damiwee"},"content":"    * Attributes:","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"damiwee"},"content":"      * `HELP_MENU_INSTRUCTIONS`: Array containing instructions for the help menu. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"damiwee"},"content":"      * `FAVOURITE_QUESTIONS_FILE_PATH`: Path to the file storing favorite reflection questions. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"damiwee"},"content":"      * `fiveRandomQuestions`: ArrayList holding five random reflection questions. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"damiwee"},"content":"      * `questionBank`: Instance of `ReflectionQuestionBank` managing reflection questions.","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"damiwee"},"content":"      * `favoriteReflectionsList`: Instance of `FavoriteReflectionsList` managing favorite reflection questions.","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"damiwee"},"content":"    * Methods:","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"damiwee"},"content":"      * `printFiveRandomQuestions()`: Prints five random reflection questions.","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"damiwee"},"content":"      * `saveReflectionQuestion(int reflectionId)`: Saves a reflection question to favorites based on ID.","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"damiwee"},"content":"      * `unsaveReflectionQuestion(int reflectionId)`: Removes a reflection question from favorites based on ID.","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"damiwee"},"content":"      * `printFavourites()`: Prints the list of favorite reflection questions.","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"damiwee"},"content":"      * `printHelpMenu()`: Prints the help menu with available reflection commands.","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"damiwee"},"content":"    * Dependencies:","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"damiwee"},"content":"      * Storage: Utilized for data storage operations.","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"damiwee"},"content":"      * Ui: Utilized for user interface interactions.","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"damiwee"},"content":"    * UML notes:","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"damiwee"},"content":"      * `ReflectionManager` contains exactly one `ReflectionQuestionBank` class and one `FavoriteReflectionsList` class.","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"damiwee"},"content":"      * It relies on `Storage` class for file operations and `Ui` class for user interactions.","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"damiwee"},"content":"  ","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"damiwee"},"content":"  * `ReflectionQuestion` class","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"damiwee"},"content":"    * Overview:","lastModifiedDate":"2024-03-24"},{"lineNumber":160,"author":{"gitId":"damiwee"},"content":"      * This class represents a reflection question","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"damiwee"},"content":"    * Attributes:","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"damiwee"},"content":"      * `question`: Private attribute holding the text of the reflection question.","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"damiwee"},"content":"    * Methods:","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"damiwee"},"content":"      * `toString()`: Overriden method that retrieves the text of the reflection question.","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"damiwee"},"content":"    * UML notes:","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"damiwee"},"content":"      * `ReflectionList` and `FavoriteReflectionsList` may contain 0 or more `ReflectionQuestion` instances.","lastModifiedDate":"2024-03-24"},{"lineNumber":167,"author":{"gitId":"damiwee"},"content":"      * `ReflectionQuestionBank` contains exactly 41 of `ReflectionQuestion` instances.","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"damiwee"},"content":"      * When a `ReflectionList`/ `FavoriteReflectionsList`/ `ReflectionQuestionBank` object is destroyed, its associated `ReflectionQuestion` instances are also destroyed, reflecting a \"whole-part\" relationship.","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"damiwee"},"content":"  ","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"damiwee"},"content":"  * `ReflectionList` class","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"damiwee"},"content":"    * Overview:","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"damiwee"},"content":"      * The `ReflectionList` class serves as an abstract representation of a list of reflection questions within the Reflection Management System. It provides basic operations for managing reflection questions, such as adding, removing, and retrieving questions from the list.","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"damiwee"},"content":"    * Attributes:","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"damiwee"},"content":"      * `reflectionList`: Protected attribute representing the list of reflection questions. It is an ArrayList of ReflectionQuestion objects.","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"damiwee"},"content":"    * Methods:","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"damiwee"},"content":"      * `addReflectionQuestion(ReflectionQuestion reflectionQuestion)`: Adds a reflection question to the list. ","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"damiwee"},"content":"      * `removeReflectionQuestion(ReflectionQuestion reflectionQuestion)`: Removes a reflection question from the list.","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"damiwee"},"content":"      * `getSize()`: Retrieves the size of the reflection list. ","lastModifiedDate":"2024-03-24"},{"lineNumber":179,"author":{"gitId":"damiwee"},"content":"      * `getReflectionList()`: Retrieves the list of reflection questions.","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"damiwee"},"content":"    * UML notes:","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"damiwee"},"content":"      * `FavoriteReflectionsList` inherits from `ReflectionList`","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"damiwee"},"content":"      * `ReflectionQuestionBank` inherits from `ReflectionList`","lastModifiedDate":"2024-03-24"},{"lineNumber":183,"author":{"gitId":"damiwee"},"content":"      * `ReflectionList` may contain 0 or more instances of `ReflectionQuestion`. The association is of type composition.","lastModifiedDate":"2024-03-24"},{"lineNumber":184,"author":{"gitId":"damiwee"},"content":"  ","lastModifiedDate":"2024-03-24"},{"lineNumber":185,"author":{"gitId":"damiwee"},"content":"  * `FavoriteReflectionsList` class","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"damiwee"},"content":"    * Overview:","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"damiwee"},"content":"      * The `FavoriteReflectionsList` class extends the `ReflectionList` class and represents a specialized list of favorite reflection questions within the Reflection Management System. It inherits functionality from `ReflectionList`.","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"damiwee"},"content":"    * Attributes:","lastModifiedDate":"2024-03-24"},{"lineNumber":189,"author":{"gitId":"damiwee"},"content":"      * Inherits from the superclass `ReflectionList`.","lastModifiedDate":"2024-03-24"},{"lineNumber":190,"author":{"gitId":"damiwee"},"content":"    * Methods:","lastModifiedDate":"2024-03-24"},{"lineNumber":191,"author":{"gitId":"damiwee"},"content":"      * `get(int favouritesId)`: Retrieves a favorite reflection question by its index in the list.","lastModifiedDate":"2024-03-24"},{"lineNumber":192,"author":{"gitId":"damiwee"},"content":"    * Dependencies:","lastModifiedDate":"2024-03-24"},{"lineNumber":193,"author":{"gitId":"damiwee"},"content":"      * Inherits functionality from the `ReflectionList` class.","lastModifiedDate":"2024-03-24"},{"lineNumber":194,"author":{"gitId":"damiwee"},"content":"    * UML notes:","lastModifiedDate":"2024-03-24"},{"lineNumber":195,"author":{"gitId":"damiwee"},"content":"      * `FavoriteReflectionsList` inherits from `ReflectionList`.","lastModifiedDate":"2024-03-24"},{"lineNumber":196,"author":{"gitId":"damiwee"},"content":"      * `ReflectionManager` contains a single instance of `FavoriteReflectionsList`.","lastModifiedDate":"2024-03-24"},{"lineNumber":197,"author":{"gitId":"damiwee"},"content":"      * `FavoriteReflectionsList` may contain 0 or more instances of `ReflectionQuestion`.","lastModifiedDate":"2024-03-24"},{"lineNumber":198,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":199,"author":{"gitId":"damiwee"},"content":"  * `ReflectionQuestionBank` class","lastModifiedDate":"2024-03-24"},{"lineNumber":200,"author":{"gitId":"damiwee"},"content":"    * Overview:","lastModifiedDate":"2024-03-24"},{"lineNumber":201,"author":{"gitId":"damiwee"},"content":"      * The `ReflectionQuestionBank` class represents a bank of reflection questions within the Reflection Management System. It extends the ReflectionList class to inherit basic list management functionalities and provides additional methods for initializing the bank with predefined questions and retrieving random sets of questions.","lastModifiedDate":"2024-03-24"},{"lineNumber":202,"author":{"gitId":"damiwee"},"content":"    * Attributes:","lastModifiedDate":"2024-03-24"},{"lineNumber":203,"author":{"gitId":"damiwee"},"content":"      * Inherits from the superclass `ReflectionList`. ","lastModifiedDate":"2024-03-24"},{"lineNumber":204,"author":{"gitId":"damiwee"},"content":"      * `REFLECTION_QUESTIONS`: Static array containing predefined reflection questions that used for setup of question bank.","lastModifiedDate":"2024-03-24"},{"lineNumber":205,"author":{"gitId":"damiwee"},"content":"    * Methods:","lastModifiedDate":"2024-03-24"},{"lineNumber":206,"author":{"gitId":"damiwee"},"content":"      * `setUpReflectionBank()`: Initializes the reflection question bank with predefined questions. ","lastModifiedDate":"2024-03-24"},{"lineNumber":207,"author":{"gitId":"damiwee"},"content":"      * `getFiveRandomQuestions()`: Retrieves five random reflection questions from the bank.","lastModifiedDate":"2024-03-24"},{"lineNumber":208,"author":{"gitId":"damiwee"},"content":"    * Dependencies:","lastModifiedDate":"2024-03-24"},{"lineNumber":209,"author":{"gitId":"damiwee"},"content":"      * Inherits functionality from the `ReflectionList` class.","lastModifiedDate":"2024-03-24"},{"lineNumber":210,"author":{"gitId":"damiwee"},"content":"    * UML notes:","lastModifiedDate":"2024-03-24"},{"lineNumber":211,"author":{"gitId":"damiwee"},"content":"      * `ReflectionManager` contains a single instance of `ReflectionQuestionBank`","lastModifiedDate":"2024-03-24"},{"lineNumber":212,"author":{"gitId":"damiwee"},"content":"      * `ReflectionQuestionBank` inherits from `ReflectionList`","lastModifiedDate":"2024-03-24"},{"lineNumber":213,"author":{"gitId":"damiwee"},"content":"      * `ReflectionQuestionBank` contains 41 instances of `ReflectionQuestion`","lastModifiedDate":"2024-03-24"},{"lineNumber":214,"author":{"gitId":"damiwee"},"content":"  ","lastModifiedDate":"2024-03-24"},{"lineNumber":215,"author":{"gitId":"damiwee"},"content":"  * `ReflectionCommandParser`","lastModifiedDate":"2024-03-24"},{"lineNumber":216,"author":{"gitId":"damiwee"},"content":"    * Overview: Parses reflection-related commands and create different reflection command objects based on user input.","lastModifiedDate":"2024-03-24"},{"lineNumber":217,"author":{"gitId":"damiwee"},"content":"    * Method: `determineReflectionCommand(ReflectionManager reflectionManager, String commandArgs)`","lastModifiedDate":"2024-03-24"},{"lineNumber":218,"author":{"gitId":"damiwee"},"content":"  ","lastModifiedDate":"2024-03-24"},{"lineNumber":219,"author":{"gitId":"damiwee"},"content":"  * Reflection command classes","lastModifiedDate":"2024-03-24"},{"lineNumber":220,"author":{"gitId":"damiwee"},"content":"    * `GetReflectionQuestionsCommand`: Retrieve random reflection questions.","lastModifiedDate":"2024-03-24"},{"lineNumber":221,"author":{"gitId":"damiwee"},"content":"      * Command format: `reflect get`","lastModifiedDate":"2024-03-24"},{"lineNumber":222,"author":{"gitId":"damiwee"},"content":"    * `ListFavouriteReflectionsCommand`: List favorite reflection items.","lastModifiedDate":"2024-03-24"},{"lineNumber":223,"author":{"gitId":"damiwee"},"content":"      * Command format: `reflect list`","lastModifiedDate":"2024-03-24"},{"lineNumber":224,"author":{"gitId":"damiwee"},"content":"    * `ReflectionHelpCommand`: Display help menu for reflection commands.","lastModifiedDate":"2024-03-24"},{"lineNumber":225,"author":{"gitId":"damiwee"},"content":"      * Command format: `reflect help`","lastModifiedDate":"2024-03-24"},{"lineNumber":226,"author":{"gitId":"damiwee"},"content":"    * `SaveToFavouritesCommand`: Save a reflection item to favorites.","lastModifiedDate":"2024-03-24"},{"lineNumber":227,"author":{"gitId":"damiwee"},"content":"      * Command format: `reflect save \u003creflection_id\u003e`","lastModifiedDate":"2024-03-24"},{"lineNumber":228,"author":{"gitId":"damiwee"},"content":"    * `UnsaveFromFavouritesCommand`: Unsave a reflection item from favorites.","lastModifiedDate":"2024-03-24"},{"lineNumber":229,"author":{"gitId":"damiwee"},"content":"      * Command format:`reflect unsave \u003creflection_id\u003e`","lastModifiedDate":"2024-03-24"},{"lineNumber":230,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":231,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":232,"author":{"gitId":"damiwee"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-03-24"},{"lineNumber":233,"author":{"gitId":"damiwee"},"content":"![ReflectionSequenceDiagram.png](diagrams/reflection/ReflectionSequenceDiagram.png)","lastModifiedDate":"2024-03-24"},{"lineNumber":234,"author":{"gitId":"damiwee"},"content":"* Note that `PlaceholderReflectionCommand` can refer to any of the reflection commands as mentioned above, as all of them follow the same call pattern.","lastModifiedDate":"2024-03-24"},{"lineNumber":235,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":236,"author":{"gitId":"Daviancold"},"content":"When `Main` starts, `scanner` and `ReflectionManager` objects are created. Upon receiving user input, the input will first be","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"damiwee"},"content":"determined if it is a command related to the reflection feature. If it is, it will be further parsed by `ReflectionCommandParser` to determine","lastModifiedDate":"2024-03-24"},{"lineNumber":238,"author":{"gitId":"damiwee"},"content":"the command. The corresponding reflection command object is then created and is returned to `Main`, where `execute` will then be called","lastModifiedDate":"2024-03-24"},{"lineNumber":239,"author":{"gitId":"damiwee"},"content":"and the corresponding method in `ReflectionManager` is invoked.","lastModifiedDate":"2024-03-24"},{"lineNumber":240,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":241,"author":{"gitId":"damiwee"},"content":"### Habit tracker component","lastModifiedDate":"2024-03-24"},{"lineNumber":242,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":243,"author":{"gitId":"genexus85"},"content":"#### Description","lastModifiedDate":"2024-03-26"},{"lineNumber":244,"author":{"gitId":"genexus85"},"content":"The habit tracker component aims to provide user with a tool to track and cultivate good habits.","lastModifiedDate":"2024-03-26"},{"lineNumber":245,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":246,"author":{"gitId":"genexus85"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-26"},{"lineNumber":247,"author":{"gitId":"genexus85"},"content":"* ##### User Design Considerations","lastModifiedDate":"2024-03-26"},{"lineNumber":248,"author":{"gitId":"genexus85"},"content":"    * User can add new habits in the habit tracker that they wish to cultivate.","lastModifiedDate":"2024-03-27"},{"lineNumber":249,"author":{"gitId":"genexus85"},"content":"    * User can increase the count of a habit after they completed the habit for the day, allowing them to keep track of the total number of times they completed the habit.","lastModifiedDate":"2024-03-27"},{"lineNumber":250,"author":{"gitId":"genexus85"},"content":"    * User can also delete the habit if they no longer want to cultivate that habit.","lastModifiedDate":"2024-03-27"},{"lineNumber":251,"author":{"gitId":"genexus85"},"content":"    * User are able to set the priority of the habits (HIGH, MED, LOW), to prioritise their time on more important habits.","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"genexus85"},"content":"    * User can also sort the habits according to their priority for better visualization.","lastModifiedDate":"2024-03-26"},{"lineNumber":253,"author":{"gitId":"genexus85"},"content":"    * A help menu is also provided for users to guide them on how to use the habit tracker.","lastModifiedDate":"2024-03-26"},{"lineNumber":254,"author":{"gitId":"genexus85"},"content":"    * Error messages with guidance messages will be printed to console if command input by user is invalid.","lastModifiedDate":"2024-03-26"},{"lineNumber":255,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":256,"author":{"gitId":"genexus85"},"content":"* #### Developer Design Considerations","lastModifiedDate":"2024-03-26"},{"lineNumber":257,"author":{"gitId":"genexus85"},"content":"    * Modularity: Encapsulate related functionalities within classes to promote re-usability and maintainability.","lastModifiedDate":"2024-03-26"},{"lineNumber":258,"author":{"gitId":"genexus85"},"content":"    * Exception Handling: Use of custom exceptions to differentiate between various types of errors, and to handle them appropriately with error messages","lastModifiedDate":"2024-03-26"},{"lineNumber":259,"author":{"gitId":"genexus85"},"content":"    * Data Encapsulation: Control the access to a class\u0027s internal attributes, accessible only through getters and setters","lastModifiedDate":"2024-03-26"},{"lineNumber":260,"author":{"gitId":"genexus85"},"content":"    * Interface Segregation: Segregation of command interface to represent different command types for specific use cases.","lastModifiedDate":"2024-03-26"},{"lineNumber":261,"author":{"gitId":"genexus85"},"content":"    * Readability and Maintainability: Descriptive naming, robust documentation for code clarity.","lastModifiedDate":"2024-03-26"},{"lineNumber":262,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":263,"author":{"gitId":"genexus85"},"content":"#### Implementation","lastModifiedDate":"2024-03-26"},{"lineNumber":264,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":265,"author":{"gitId":"genexus85"},"content":"##### Class Diagram","lastModifiedDate":"2024-03-26"},{"lineNumber":266,"author":{"gitId":"genexus85"},"content":"![HabitClassDiagram.png](diagrams/habit/HabitClassDiagram.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":267,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":268,"author":{"gitId":"genexus85"},"content":"* `HabitTracker` class","lastModifiedDate":"2024-03-26"},{"lineNumber":269,"author":{"gitId":"genexus85"},"content":"    * Overview","lastModifiedDate":"2024-03-26"},{"lineNumber":270,"author":{"gitId":"genexus85"},"content":"        * The `HabitTracker` class manages the habit tracker list which contains the habits.","lastModifiedDate":"2024-03-27"},{"lineNumber":271,"author":{"gitId":"genexus85"},"content":"    * Attributes:","lastModifiedDate":"2024-03-26"},{"lineNumber":272,"author":{"gitId":"genexus85"},"content":"        * `habitList`: Private attribute representing the list of habits. It is an ArrayList of Habit objects.","lastModifiedDate":"2024-03-26"},{"lineNumber":273,"author":{"gitId":"genexus85"},"content":"    * Methods:","lastModifiedDate":"2024-03-26"},{"lineNumber":274,"author":{"gitId":"genexus85"},"content":"        * `HabitTracker()`: Constructs a HabitTracker object. ","lastModifiedDate":"2024-03-26"},{"lineNumber":275,"author":{"gitId":"genexus85"},"content":"        * `getNumberOfHabits()`: Returns the number of habits in the habitList.","lastModifiedDate":"2024-03-26"},{"lineNumber":276,"author":{"gitId":"genexus85"},"content":"        * `addHabit(Habit newHabit)`: Adds a new Habit object into the habitList.","lastModifiedDate":"2024-03-26"},{"lineNumber":277,"author":{"gitId":"genexus85"},"content":"        * `listHabits()`: Prints a list of all habits in habitList .","lastModifiedDate":"2024-03-26"},{"lineNumber":278,"author":{"gitId":"genexus85"},"content":"        * `isValidHabitID(int habitID)`: Check if a habit ID is valid by comparing with the size of habitList.","lastModifiedDate":"2024-03-26"},{"lineNumber":279,"author":{"gitId":"genexus85"},"content":"        * `updateHabitCount(int habitID, String updatedCount)`: Update the habit count of a habit.","lastModifiedDate":"2024-03-26"},{"lineNumber":280,"author":{"gitId":"genexus85"},"content":"        * `deleteHabit(int habitID)`: Delete a habit from habitList.","lastModifiedDate":"2024-03-26"},{"lineNumber":281,"author":{"gitId":"genexus85"},"content":"        * `setPriorityLevel(int habitID, String priority)`: Set the priority of a habit.","lastModifiedDate":"2024-03-26"},{"lineNumber":282,"author":{"gitId":"genexus85"},"content":"        * `sortHabits()`: Sort the habits in habitList according to the habits\u0027 priorities.","lastModifiedDate":"2024-03-26"},{"lineNumber":283,"author":{"gitId":"genexus85"},"content":"        * `clearHabitList()`: Delete all habits from habitList.","lastModifiedDate":"2024-03-26"},{"lineNumber":284,"author":{"gitId":"genexus85"},"content":"    * Dependencies:","lastModifiedDate":"2024-03-26"},{"lineNumber":285,"author":{"gitId":"genexus85"},"content":"        * HabitTrackerStorage: Utilized for data storage operations.","lastModifiedDate":"2024-03-26"},{"lineNumber":286,"author":{"gitId":"genexus85"},"content":"        * Ui: Utilized for user interface interactions.","lastModifiedDate":"2024-03-26"},{"lineNumber":287,"author":{"gitId":"genexus85"},"content":"    * UML notes:","lastModifiedDate":"2024-03-26"},{"lineNumber":288,"author":{"gitId":"genexus85"},"content":"        * `HabitTracker` can contain any number of `Habit` class objects.","lastModifiedDate":"2024-03-26"},{"lineNumber":289,"author":{"gitId":"genexus85"},"content":"        * It relies on `HabitTrackerStorage` class for file operations and `Ui` class for user interactions.","lastModifiedDate":"2024-03-26"},{"lineNumber":290,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":291,"author":{"gitId":"genexus85"},"content":"* `Habit` class","lastModifiedDate":"2024-03-26"},{"lineNumber":292,"author":{"gitId":"genexus85"},"content":"    * Overview:","lastModifiedDate":"2024-03-26"},{"lineNumber":293,"author":{"gitId":"genexus85"},"content":"        * This class represents a Habit.","lastModifiedDate":"2024-03-26"},{"lineNumber":294,"author":{"gitId":"genexus85"},"content":"    * Attributes:","lastModifiedDate":"2024-03-26"},{"lineNumber":295,"author":{"gitId":"genexus85"},"content":"        * `description`: Private attribute holding the habit description.","lastModifiedDate":"2024-03-26"},{"lineNumber":296,"author":{"gitId":"genexus85"},"content":"        * `habitCount`: Private attribute holding the total count the user have completed the habit.","lastModifiedDate":"2024-03-26"},{"lineNumber":297,"author":{"gitId":"genexus85"},"content":"        * `priority`: Private attribute representing the priority level of a habit.","lastModifiedDate":"2024-03-26"},{"lineNumber":298,"author":{"gitId":"genexus85"},"content":"    * Methods:","lastModifiedDate":"2024-03-26"},{"lineNumber":299,"author":{"gitId":"genexus85"},"content":"        * `Habit(String description)`: Constructs a habit object.","lastModifiedDate":"2024-03-26"},{"lineNumber":300,"author":{"gitId":"genexus85"},"content":"        * `Habit(String description, int habitCount, Priority priority)`: Constructs a habit object.","lastModifiedDate":"2024-03-26"},{"lineNumber":301,"author":{"gitId":"genexus85"},"content":"        * `getDescription()`: Get the description of the habit.","lastModifiedDate":"2024-03-26"},{"lineNumber":302,"author":{"gitId":"genexus85"},"content":"        * `getHabitCount()`: Get the habit count of the habit.","lastModifiedDate":"2024-03-26"},{"lineNumber":303,"author":{"gitId":"genexus85"},"content":"        * `getPriority()`: Get the priority of the habit.","lastModifiedDate":"2024-03-26"},{"lineNumber":304,"author":{"gitId":"genexus85"},"content":"        * `toString()`: Method that formats the attributes of the habit for printing.","lastModifiedDate":"2024-03-26"},{"lineNumber":305,"author":{"gitId":"genexus85"},"content":"    * UML notes:","lastModifiedDate":"2024-03-26"},{"lineNumber":306,"author":{"gitId":"genexus85"},"content":"        * `HabitTracker` can contain any number of `Habit` instances.","lastModifiedDate":"2024-03-28"},{"lineNumber":307,"author":{"gitId":"genexus85"},"content":"        * When a `HabitTracker` object is destroyed, its associated `Habit` instances are also destroyed, showcasing a composition relationship.","lastModifiedDate":"2024-03-26"},{"lineNumber":308,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":309,"author":{"gitId":"genexus85"},"content":"* `HabitCommandParser`","lastModifiedDate":"2024-03-26"},{"lineNumber":310,"author":{"gitId":"genexus85"},"content":"    * Overview: Parses habit-tracker commands and create different habit command objects based on user input.","lastModifiedDate":"2024-03-26"},{"lineNumber":311,"author":{"gitId":"genexus85"},"content":"    * Method: `determineHabitCommand(HabitTracker habitTracker, String commandArgs)`","lastModifiedDate":"2024-03-26"},{"lineNumber":312,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":313,"author":{"gitId":"genexus85"},"content":"* Habit command classes","lastModifiedDate":"2024-03-26"},{"lineNumber":314,"author":{"gitId":"genexus85"},"content":"    * `AddHabitCommand`: Add a new habit to the habit-tracker.","lastModifiedDate":"2024-03-26"},{"lineNumber":315,"author":{"gitId":"genexus85"},"content":"        * Command format: `habit add \u003chabit_description\u003e`","lastModifiedDate":"2024-03-26"},{"lineNumber":316,"author":{"gitId":"genexus85"},"content":"    * `DeleteHabitCommand`: Delete a habit from the habit-tracker.","lastModifiedDate":"2024-03-26"},{"lineNumber":317,"author":{"gitId":"genexus85"},"content":"        * Command format: `habit delete /id \u003chabit_ID\u003e`","lastModifiedDate":"2024-03-26"},{"lineNumber":318,"author":{"gitId":"genexus85"},"content":"    * `ListHabitsCommand`: Prints a list of all existing habits.","lastModifiedDate":"2024-03-26"},{"lineNumber":319,"author":{"gitId":"genexus85"},"content":"        * Command format: `habit list`","lastModifiedDate":"2024-03-26"},{"lineNumber":320,"author":{"gitId":"genexus85"},"content":"    * `UpdateHabitCountCommand`: Increase habit count after completing a habit.","lastModifiedDate":"2024-03-26"},{"lineNumber":321,"author":{"gitId":"genexus85"},"content":"        * Command format: `habit update /id \u003chabit_ID\u003e /by \u003cincrement_count\u003e`","lastModifiedDate":"2024-03-26"},{"lineNumber":322,"author":{"gitId":"genexus85"},"content":"    * `SetPriorityCommand`: Set priority level of habit","lastModifiedDate":"2024-03-26"},{"lineNumber":323,"author":{"gitId":"genexus85"},"content":"        * Command format: `habit set /id \u003chabit_ID\u003e /priority \u003cpriority_level\u003e`","lastModifiedDate":"2024-03-26"},{"lineNumber":324,"author":{"gitId":"genexus85"},"content":"    * `SortHabitsCommand`: Sort habit list according to priority level.","lastModifiedDate":"2024-03-26"},{"lineNumber":325,"author":{"gitId":"genexus85"},"content":"        * Command format: `habit sort`","lastModifiedDate":"2024-03-26"},{"lineNumber":326,"author":{"gitId":"genexus85"},"content":"    * `HabitHelpCommand`: Display a help menu of the habit-tracker commands","lastModifiedDate":"2024-03-26"},{"lineNumber":327,"author":{"gitId":"genexus85"},"content":"        * Command format: `habit help`","lastModifiedDate":"2024-03-26"},{"lineNumber":328,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":329,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":330,"author":{"gitId":"genexus85"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-03-26"},{"lineNumber":331,"author":{"gitId":"genexus85"},"content":"![HabitSequenceDiagram.png](diagrams/habit/HabitSequenceDiagram.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":332,"author":{"gitId":"genexus85"},"content":"* Note that `PlaceholderHabitCommand` can refer to any of the habit commands. ","lastModifiedDate":"2024-03-28"},{"lineNumber":333,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":334,"author":{"gitId":"Daviancold"},"content":"When `Main` starts, `scanner` and `HabitTracker` objects are created. Upon receiving user input, the input will first be","lastModifiedDate":"2024-03-28"},{"lineNumber":335,"author":{"gitId":"genexus85"},"content":"determined if it is a command related to the habit tracker feature. If it is, it will be further parsed by `HabitCommandParser` to determine","lastModifiedDate":"2024-03-26"},{"lineNumber":336,"author":{"gitId":"genexus85"},"content":"the command. The corresponding habit command object is then created and is returned to `Main`, where `execute` will then be called","lastModifiedDate":"2024-03-26"},{"lineNumber":337,"author":{"gitId":"genexus85"},"content":"and the corresponding method in `HabitTracker` is invoked.","lastModifiedDate":"2024-03-26"},{"lineNumber":338,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":339,"author":{"gitId":"damiwee"},"content":"### Sleep tracker component","lastModifiedDate":"2024-03-24"},{"lineNumber":340,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":341,"author":{"gitId":"OKW32"},"content":"#### Description","lastModifiedDate":"2024-03-27"},{"lineNumber":342,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":343,"author":{"gitId":"OKW32"},"content":"The Sleep tracker component allow users to keep track of the number of hours they have slept, so that users will know","lastModifiedDate":"2024-03-27"},{"lineNumber":344,"author":{"gitId":"OKW32"},"content":"when their lacking sleep or getting more sleep hours as the day progresses. With information on the user\u0027s sleep cycle,","lastModifiedDate":"2024-03-27"},{"lineNumber":345,"author":{"gitId":"OKW32"},"content":"one will be able to understand what is their optimal sleep cycle. With this users can have better sleep, improving","lastModifiedDate":"2024-03-27"},{"lineNumber":346,"author":{"gitId":"OKW32"},"content":"user\u0027s wellness.","lastModifiedDate":"2024-03-27"},{"lineNumber":347,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":348,"author":{"gitId":"OKW32"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-27"},{"lineNumber":349,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":350,"author":{"gitId":"OKW32"},"content":"* ##### User Design Considerations","lastModifiedDate":"2024-03-27"},{"lineNumber":351,"author":{"gitId":"OKW32"},"content":"    * Users can add hours slept on a specific date","lastModifiedDate":"2024-03-27"},{"lineNumber":352,"author":{"gitId":"OKW32"},"content":"    * Users can update hours slept on a specific date in case of mistakes in adding of sleep hours","lastModifiedDate":"2024-03-27"},{"lineNumber":353,"author":{"gitId":"OKW32"},"content":"    * Users can list out all sleep hours tracked or get number of hours slept on a specific date","lastModifiedDate":"2024-03-27"},{"lineNumber":354,"author":{"gitId":"OKW32"},"content":"    * Users can delete sleep cycles with deletion methods of:","lastModifiedDate":"2024-03-27"},{"lineNumber":355,"author":{"gitId":"OKW32"},"content":"        * Deleting a sleep cycle that is of a certain date","lastModifiedDate":"2024-03-27"},{"lineNumber":356,"author":{"gitId":"OKW32"},"content":"        * Deleting sleep cycles before a certain date","lastModifiedDate":"2024-03-27"},{"lineNumber":357,"author":{"gitId":"OKW32"},"content":"        * Deleting sleep cycles between certain dates","lastModifiedDate":"2024-03-27"},{"lineNumber":358,"author":{"gitId":"OKW32"},"content":"    * Error messages with guidance messages will be printed to console if command input by user is invalid.","lastModifiedDate":"2024-03-27"},{"lineNumber":359,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":360,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":361,"author":{"gitId":"OKW32"},"content":"* ##### Developer Design Considerations","lastModifiedDate":"2024-03-27"},{"lineNumber":362,"author":{"gitId":"OKW32"},"content":"    * SRP: Ease of scalability is achieved as classes adhere to the Single Responsibility Principle. For example, ","lastModifiedDate":"2024-03-27"},{"lineNumber":363,"author":{"gitId":"OKW32"},"content":"    the SleepTracker class is responsible for managing sleep tracker related commands, SleepCommandParser class handles","lastModifiedDate":"2024-03-27"},{"lineNumber":364,"author":{"gitId":"OKW32"},"content":"    parsing and determining which sleep command is being called and SleepCycleList is responsible for storing sleep ","lastModifiedDate":"2024-03-27"},{"lineNumber":365,"author":{"gitId":"OKW32"},"content":"    cycles and methods that can be called to edit it\u0027s content.","lastModifiedDate":"2024-03-27"},{"lineNumber":366,"author":{"gitId":"OKW32"},"content":"    * Readability and Maintainability: Descriptive naming, use of Enumerations and JavaDoc for clarity. ","lastModifiedDate":"2024-03-27"},{"lineNumber":367,"author":{"gitId":"OKW32"},"content":"    For example, use of enumerations for deleteMode.","lastModifiedDate":"2024-03-27"},{"lineNumber":368,"author":{"gitId":"OKW32"},"content":"    * Encapsulation: Private access modifiers and encapsulated methods ensure data integrity. Methods like addSleepCycle","lastModifiedDate":"2024-03-27"},{"lineNumber":369,"author":{"gitId":"OKW32"},"content":"    and deleteSleepCycle in SleepCycleList encapsulate the manipulation of the reflection list, ensuring data integrity","lastModifiedDate":"2024-03-27"},{"lineNumber":370,"author":{"gitId":"OKW32"},"content":"    and promoting a clear interface for interacting with the list.","lastModifiedDate":"2024-03-27"},{"lineNumber":371,"author":{"gitId":"OKW32"},"content":"    * Exception Handling: Extensive coverage of exceptions in sleepCommand classes to ensure all errors are handled ","lastModifiedDate":"2024-03-27"},{"lineNumber":372,"author":{"gitId":"OKW32"},"content":"    properly","lastModifiedDate":"2024-03-27"},{"lineNumber":373,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":374,"author":{"gitId":"OKW32"},"content":"#### Implementation","lastModifiedDate":"2024-03-27"},{"lineNumber":375,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":376,"author":{"gitId":"OKW32"},"content":"##### Class Diagram","lastModifiedDate":"2024-03-27"},{"lineNumber":377,"author":{"gitId":"OKW32"},"content":"![SleepDiagram.png](diagrams/sleep/SleepDiagram.png)","lastModifiedDate":"2024-03-27"},{"lineNumber":378,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":379,"author":{"gitId":"OKW32"},"content":"* `SleepTracker` class","lastModifiedDate":"2024-03-27"},{"lineNumber":380,"author":{"gitId":"OKW32"},"content":"  * Overview","lastModifiedDate":"2024-03-27"},{"lineNumber":381,"author":{"gitId":"OKW32"},"content":"    * The `SleepTracker` class oversees sleep-related operations, managing sleep cycles.","lastModifiedDate":"2024-03-27"},{"lineNumber":382,"author":{"gitId":"OKW32"},"content":"  * Attributes:","lastModifiedDate":"2024-03-27"},{"lineNumber":383,"author":{"gitId":"OKW32"},"content":"    * `sleepCycleList`: Instance of `SleepCycleList` managing sleep cycles.","lastModifiedDate":"2024-03-27"},{"lineNumber":384,"author":{"gitId":"OKW32"},"content":"  * Methods:","lastModifiedDate":"2024-03-27"},{"lineNumber":385,"author":{"gitId":"OKW32"},"content":"    * `listSleepCycles()`: List out all sleep cycles.","lastModifiedDate":"2024-03-27"},{"lineNumber":386,"author":{"gitId":"OKW32"},"content":"    * `addSleepCycle(SleepCycle sleepCycleToAdd)`: Add sleep cycle.","lastModifiedDate":"2024-03-27"},{"lineNumber":387,"author":{"gitId":"OKW32"},"content":"    * `updateSleepCycle(LocalDate date, double newHours)`: Change hours slept for specific date.","lastModifiedDate":"2024-03-27"},{"lineNumber":388,"author":{"gitId":"OKW32"},"content":"    * `getSleepCycle(LocalDate date)`: Get number of hours slept for specific date.","lastModifiedDate":"2024-03-27"},{"lineNumber":389,"author":{"gitId":"OKW32"},"content":"    * `deleteSleepCycle(LocalDate date)`: Delete sleep cycle for specific date.","lastModifiedDate":"2024-03-27"},{"lineNumber":390,"author":{"gitId":"OKW32"},"content":"    * `deleteSleepCyclesBefore(LocalDate date)`: Delete sleep cycle before specific date.","lastModifiedDate":"2024-03-27"},{"lineNumber":391,"author":{"gitId":"OKW32"},"content":"    * `deleteSleepCyclesBetween(LocalDate startDate, LocalDate endDate)`: Delete sleep cycles between 2 dates.","lastModifiedDate":"2024-03-27"},{"lineNumber":392,"author":{"gitId":"OKW32"},"content":"    * `saveSleepCycles()`: Save sleep cycle list into a text file.","lastModifiedDate":"2024-03-27"},{"lineNumber":393,"author":{"gitId":"OKW32"},"content":"  * Dependencies:","lastModifiedDate":"2024-03-27"},{"lineNumber":394,"author":{"gitId":"OKW32"},"content":"    * `SleepTrackerStorage`: Utilized for sleep cycle data storage operations","lastModifiedDate":"2024-03-27"},{"lineNumber":395,"author":{"gitId":"OKW32"},"content":"  * UML Notes:","lastModifiedDate":"2024-03-27"},{"lineNumber":396,"author":{"gitId":"OKW32"},"content":"    * `SleepTracker` contains only 1 `SleepCycleList`","lastModifiedDate":"2024-03-27"},{"lineNumber":397,"author":{"gitId":"OKW32"},"content":"    * It relies on `SleepTrackerStorage` class for file operations","lastModifiedDate":"2024-03-27"},{"lineNumber":398,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":399,"author":{"gitId":"OKW32"},"content":"* `SleepCycle` class","lastModifiedDate":"2024-03-27"},{"lineNumber":400,"author":{"gitId":"OKW32"},"content":"  * Overview:","lastModifiedDate":"2024-03-27"},{"lineNumber":401,"author":{"gitId":"OKW32"},"content":"    * This class represents a sleep cycle","lastModifiedDate":"2024-03-27"},{"lineNumber":402,"author":{"gitId":"OKW32"},"content":"  * Attributes:","lastModifiedDate":"2024-03-27"},{"lineNumber":403,"author":{"gitId":"OKW32"},"content":"    * `hoursSlept`: Number of hours slept","lastModifiedDate":"2024-03-27"},{"lineNumber":404,"author":{"gitId":"OKW32"},"content":"    * `dateOfSleep`: Date that user slept on","lastModifiedDate":"2024-03-27"},{"lineNumber":405,"author":{"gitId":"OKW32"},"content":"  * Methods:","lastModifiedDate":"2024-03-27"},{"lineNumber":406,"author":{"gitId":"OKW32"},"content":"    * getHoursSlept(): Get Hours slept for this sleep cycle.","lastModifiedDate":"2024-03-27"},{"lineNumber":407,"author":{"gitId":"OKW32"},"content":"    * getDateOfSleep(): Get date slept for this sleep cycle.","lastModifiedDate":"2024-03-27"},{"lineNumber":408,"author":{"gitId":"OKW32"},"content":"    * setHoursOfSleep(double newHours): Set Hours slept for this sleep cycle to a new duration.","lastModifiedDate":"2024-03-27"},{"lineNumber":409,"author":{"gitId":"OKW32"},"content":"    * compareTo(SleepCycle: SleepCycle): Comparison between sleep cycles.","lastModifiedDate":"2024-03-27"},{"lineNumber":410,"author":{"gitId":"OKW32"},"content":"    * toString(): String format for what needs to be printed out for a sleep cycle.","lastModifiedDate":"2024-03-27"},{"lineNumber":411,"author":{"gitId":"OKW32"},"content":"  * `SleepCycleList` may contain 0 or more instances of `SleepCycle`.","lastModifiedDate":"2024-03-27"},{"lineNumber":412,"author":{"gitId":"OKW32"},"content":"  * UML Notes:","lastModifiedDate":"2024-03-27"},{"lineNumber":413,"author":{"gitId":"OKW32"},"content":"    * When a `SleepCycleList` object is destroyed, its associated `SleepCycle` instances are also destroyed,","lastModifiedDate":"2024-03-27"},{"lineNumber":414,"author":{"gitId":"OKW32"},"content":"    reflecting a \"whole part\" relationship.","lastModifiedDate":"2024-03-27"},{"lineNumber":415,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":416,"author":{"gitId":"OKW32"},"content":"* `SleepCycleList` class","lastModifiedDate":"2024-03-27"},{"lineNumber":417,"author":{"gitId":"OKW32"},"content":"  * Overview","lastModifiedDate":"2024-03-27"},{"lineNumber":418,"author":{"gitId":"OKW32"},"content":"    * The `SleepCycleList` class contains all sleep cycles added by the user.","lastModifiedDate":"2024-03-27"},{"lineNumber":419,"author":{"gitId":"OKW32"},"content":"  * Attributes:","lastModifiedDate":"2024-03-27"},{"lineNumber":420,"author":{"gitId":"OKW32"},"content":"    * `totalHrsSlept`: Accumulated number of hours slept from all sleep cycles. ","lastModifiedDate":"2024-03-27"},{"lineNumber":421,"author":{"gitId":"OKW32"},"content":"    * `numberOfCycles`: Number of sleep cycles in sleepCycleList.","lastModifiedDate":"2024-03-27"},{"lineNumber":422,"author":{"gitId":"OKW32"},"content":"  * Methods:","lastModifiedDate":"2024-03-27"},{"lineNumber":423,"author":{"gitId":"OKW32"},"content":"    * `listSleepCycles()`: List out all sleep cycles.","lastModifiedDate":"2024-03-27"},{"lineNumber":424,"author":{"gitId":"OKW32"},"content":"    * `addSleepCycle(SleepCycle sleepCycleToAdd)`: Add sleep cycle.","lastModifiedDate":"2024-03-27"},{"lineNumber":425,"author":{"gitId":"OKW32"},"content":"    * `updateSleepCycle(LocalDate date, double newHours)`: Change hours slept for specific date.","lastModifiedDate":"2024-03-27"},{"lineNumber":426,"author":{"gitId":"OKW32"},"content":"    * `getSleepCycle(LocalDate date)`: Get number of hours slept for specific date.","lastModifiedDate":"2024-03-27"},{"lineNumber":427,"author":{"gitId":"OKW32"},"content":"    * `deleteSleepCycle(LocalDate date)`: Delete sleep cycle for specific date.","lastModifiedDate":"2024-03-27"},{"lineNumber":428,"author":{"gitId":"OKW32"},"content":"    * `deleteSleepCyclesBefore(LocalDate date)`: Delete sleep cycle before specific date.","lastModifiedDate":"2024-03-27"},{"lineNumber":429,"author":{"gitId":"OKW32"},"content":"    * `deleteSleepCyclesBetween(LocalDate startDate, LocalDate endDate)`: Delete sleep cycles between 2 dates.","lastModifiedDate":"2024-03-27"},{"lineNumber":430,"author":{"gitId":"OKW32"},"content":"    * `getNumberOfCycles()`: Get number of sleep cycles in sleepCycleList.","lastModifiedDate":"2024-03-27"},{"lineNumber":431,"author":{"gitId":"OKW32"},"content":"    * `getTotalHrsSlept()`: Get total number of hours slept.","lastModifiedDate":"2024-03-27"},{"lineNumber":432,"author":{"gitId":"OKW32"},"content":"    * `getSleepCycleList`: Get list of sleep cycles.","lastModifiedDate":"2024-03-27"},{"lineNumber":433,"author":{"gitId":"OKW32"},"content":"  * Dependencies:","lastModifiedDate":"2024-03-27"},{"lineNumber":434,"author":{"gitId":"OKW32"},"content":"    * Ui: Utilized for user interface interactions","lastModifiedDate":"2024-03-27"},{"lineNumber":435,"author":{"gitId":"OKW32"},"content":"  * UML Notes:","lastModifiedDate":"2024-03-27"},{"lineNumber":436,"author":{"gitId":"OKW32"},"content":"    * `SleepTracker` contains a single instance of `SleepCycleList`.","lastModifiedDate":"2024-03-27"},{"lineNumber":437,"author":{"gitId":"OKW32"},"content":"    * `SleepCycleList` may contain 0 or more instances of `SleepCycle`. ","lastModifiedDate":"2024-03-27"},{"lineNumber":438,"author":{"gitId":"OKW32"},"content":"    * It relies on `Ui` class for user interaction.","lastModifiedDate":"2024-03-27"},{"lineNumber":439,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":440,"author":{"gitId":"OKW32"},"content":"* `SleepCommandParser` class","lastModifiedDate":"2024-03-27"},{"lineNumber":441,"author":{"gitId":"OKW32"},"content":"  * Overview: ","lastModifiedDate":"2024-03-27"},{"lineNumber":442,"author":{"gitId":"OKW32"},"content":"    * Parses sleep-related commands and create different sleep command objects based on user input.","lastModifiedDate":"2024-03-27"},{"lineNumber":443,"author":{"gitId":"OKW32"},"content":"  * Method:","lastModifiedDate":"2024-03-27"},{"lineNumber":444,"author":{"gitId":"OKW32"},"content":"    * determineSleepCommand(SleepTracker sleepTracker, String commandArgs)","lastModifiedDate":"2024-03-27"},{"lineNumber":445,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":446,"author":{"gitId":"OKW32"},"content":"* Sleep command classes","lastModifiedDate":"2024-03-27"},{"lineNumber":447,"author":{"gitId":"OKW32"},"content":"    * `AddSleep Command`: Add a sleep cycle.","lastModifiedDate":"2024-03-27"},{"lineNumber":448,"author":{"gitId":"OKW32"},"content":"        * Command format: `sleep add`","lastModifiedDate":"2024-03-27"},{"lineNumber":449,"author":{"gitId":"OKW32"},"content":"    * `DeleteSleepCommand`: Delete sleep cycles.","lastModifiedDate":"2024-03-27"},{"lineNumber":450,"author":{"gitId":"OKW32"},"content":"        * Delete sleep cycle matching date command format: `sleep delete /date \u003cdate\u003e`","lastModifiedDate":"2024-03-27"},{"lineNumber":451,"author":{"gitId":"OKW32"},"content":"        * Delete sleep cycle before date command format: `sleep delete /before \u003cdate\u003e`","lastModifiedDate":"2024-03-27"},{"lineNumber":452,"author":{"gitId":"OKW32"},"content":"        * Delete sleep cycles between 2 dates command format: `sleep delete /from \u003cstart_date /to \u003cend_date\u003e`","lastModifiedDate":"2024-03-27"},{"lineNumber":453,"author":{"gitId":"OKW32"},"content":"    * `GetSleepCommand`: Get number of hours slept on a specific date.","lastModifiedDate":"2024-03-27"},{"lineNumber":454,"author":{"gitId":"OKW32"},"content":"        * Command format: `sleep get \u003cdate\u003e`","lastModifiedDate":"2024-03-27"},{"lineNumber":455,"author":{"gitId":"OKW32"},"content":"    * `ListSleepcommand`: Get information on all the sleep.","lastModifiedDate":"2024-03-27"},{"lineNumber":456,"author":{"gitId":"OKW32"},"content":"        * Command format: `sleep list`","lastModifiedDate":"2024-03-27"},{"lineNumber":457,"author":{"gitId":"OKW32"},"content":"    * `SaveSleepCommand`: Save current sleep cycles added/deleted/updated into a text file.","lastModifiedDate":"2024-03-27"},{"lineNumber":458,"author":{"gitId":"OKW32"},"content":"        * Command format:`sleep save`","lastModifiedDate":"2024-03-27"},{"lineNumber":459,"author":{"gitId":"OKW32"},"content":"    * `UpdateSleepCommand`: Change number of hours slept on a specific date.","lastModifiedDate":"2024-03-27"},{"lineNumber":460,"author":{"gitId":"OKW32"},"content":"        * Command format: `sleep update \u003cdate\u003e /new \u003cnew_hours\u003e`","lastModifiedDate":"2024-03-27"},{"lineNumber":461,"author":{"gitId":"OKW32"},"content":"    ","lastModifiedDate":"2024-03-27"},{"lineNumber":462,"author":{"gitId":"OKW32"},"content":"##### Sequence Diagram","lastModifiedDate":"2024-03-27"},{"lineNumber":463,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":464,"author":{"gitId":"OKW32"},"content":"![SleepSequenceDiagram.png](diagrams/sleep/SleepSequenceDiagram.png)","lastModifiedDate":"2024-03-27"},{"lineNumber":465,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":466,"author":{"gitId":"OKW32"},"content":"* Note that PlaceholderReflectionCommand can refer to any of the reflection commands as mentioned above, ","lastModifiedDate":"2024-03-27"},{"lineNumber":467,"author":{"gitId":"OKW32"},"content":"as all of them follow the same call pattern.","lastModifiedDate":"2024-03-27"},{"lineNumber":468,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":469,"author":{"gitId":"OKW32"},"content":"When main starts, scanner and SleepTracker objects are created. Upon receiving user input, the input will first ","lastModifiedDate":"2024-03-27"},{"lineNumber":470,"author":{"gitId":"OKW32"},"content":"be determined if it is a command related to the sleep tracker feature. If it is, it will be further parsed by ","lastModifiedDate":"2024-03-27"},{"lineNumber":471,"author":{"gitId":"OKW32"},"content":"SleepTrackerParser to determine the command. The corresponding sleep command object is then created and is ","lastModifiedDate":"2024-03-27"},{"lineNumber":472,"author":{"gitId":"OKW32"},"content":"returned to Main, where execute will then be called and the corresponding method in SleepTracker is invoked.","lastModifiedDate":"2024-03-27"},{"lineNumber":473,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":474,"author":{"gitId":"damiwee"},"content":"### Focus timer component","lastModifiedDate":"2024-03-24"},{"lineNumber":475,"author":{"gitId":"JingHaoooo"},"content":"The focus timer component provides users with a countdown timer and a count up timer, which enables the user to set a ","lastModifiedDate":"2024-03-25"},{"lineNumber":476,"author":{"gitId":"JingHaoooo"},"content":"goal to focus entirely on their work. This component aims to allow users to keep track of their time, improving their","lastModifiedDate":"2024-03-25"},{"lineNumber":477,"author":{"gitId":"JingHaoooo"},"content":"productivity and well-being.","lastModifiedDate":"2024-03-25"},{"lineNumber":478,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":479,"author":{"gitId":"JingHaoooo"},"content":"### Design Considerations","lastModifiedDate":"2024-03-25"},{"lineNumber":480,"author":{"gitId":"JingHaoooo"},"content":"* #### User Design Considerations","lastModifiedDate":"2024-03-25"},{"lineNumber":481,"author":{"gitId":"JingHaoooo"},"content":"  * Users will be able to choose between a count up timer and a countdown timer.","lastModifiedDate":"2024-03-25"},{"lineNumber":482,"author":{"gitId":"JingHaoooo"},"content":"  * Users can start, pause, resume, stop the timer at any point in time.","lastModifiedDate":"2024-03-25"},{"lineNumber":483,"author":{"gitId":"JingHaoooo"},"content":"  * Users will also be able to navigate to other functions while running the timer concurrently.","lastModifiedDate":"2024-03-25"},{"lineNumber":484,"author":{"gitId":"JingHaoooo"},"content":"  * Error messages will inform users the current status of the timer and reason the error appeared.","lastModifiedDate":"2024-03-25"},{"lineNumber":485,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":486,"author":{"gitId":"JingHaoooo"},"content":"* #### Developer Design Considerations","lastModifiedDate":"2024-03-25"},{"lineNumber":487,"author":{"gitId":"JingHaoooo"},"content":"  * The `Focus Timer` component is a wrapper class for both `CountupTimer` and `CountdownTimer`, which contains ","lastModifiedDate":"2024-03-25"},{"lineNumber":488,"author":{"gitId":"JingHaoooo"},"content":"utility logic to identify state and manage the different timers.","lastModifiedDate":"2024-03-25"},{"lineNumber":489,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":490,"author":{"gitId":"JingHaoooo"},"content":"#### Implementation","lastModifiedDate":"2024-03-25"},{"lineNumber":491,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":492,"author":{"gitId":"JingHaoooo"},"content":"#### Focus Class Diagram","lastModifiedDate":"2024-03-25"},{"lineNumber":493,"author":{"gitId":"Daviancold"},"content":"![FocusClassDiagram.png](diagrams/focus/FocusClassDiagram.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":494,"author":{"gitId":"JingHaoooo"},"content":"* `FocusTimer` object","lastModifiedDate":"2024-03-25"},{"lineNumber":495,"author":{"gitId":"JingHaoooo"},"content":"  * Overview:","lastModifiedDate":"2024-03-25"},{"lineNumber":496,"author":{"gitId":"JingHaoooo"},"content":"    * The `FocusTimer` class is a facade class that sits between the component internals and users of the component ","lastModifiedDate":"2024-03-25"},{"lineNumber":497,"author":{"gitId":"JingHaoooo"},"content":"    such that all access to the component like countdown timer and count up timer happens through the Facade class.","lastModifiedDate":"2024-03-25"},{"lineNumber":498,"author":{"gitId":"JingHaoooo"},"content":"  * Attributes:","lastModifiedDate":"2024-03-25"},{"lineNumber":499,"author":{"gitId":"JingHaoooo"},"content":"    * `countupTimer`: Count up timer object.","lastModifiedDate":"2024-03-25"},{"lineNumber":500,"author":{"gitId":"JingHaoooo"},"content":"    * `countdownTimer`: Count down timer object.","lastModifiedDate":"2024-03-25"},{"lineNumber":501,"author":{"gitId":"JingHaoooo"},"content":"    * `timerMode`: Indicates the timer mode to be operating.","lastModifiedDate":"2024-03-25"},{"lineNumber":502,"author":{"gitId":"JingHaoooo"},"content":"  * Methods:","lastModifiedDate":"2024-03-25"},{"lineNumber":503,"author":{"gitId":"JingHaoooo"},"content":"    * `getStartTiming()`: Gets the current running state of the timer.","lastModifiedDate":"2024-03-25"},{"lineNumber":504,"author":{"gitId":"JingHaoooo"},"content":"    * `switchTimer()`: Changes the timer mode between count up and count down timer.","lastModifiedDate":"2024-03-25"},{"lineNumber":505,"author":{"gitId":"JingHaoooo"},"content":"    * `getPausedStatus()`: Gets the current pause status of the timer.","lastModifiedDate":"2024-03-25"},{"lineNumber":506,"author":{"gitId":"JingHaoooo"},"content":"    * `setStartTiming()`: Start the timer.","lastModifiedDate":"2024-03-25"},{"lineNumber":507,"author":{"gitId":"JingHaoooo"},"content":"    * `setStopTiming()`: Stop the timer.","lastModifiedDate":"2024-03-25"},{"lineNumber":508,"author":{"gitId":"JingHaoooo"},"content":"    * `setPauseTiming()`: Pause the timer.","lastModifiedDate":"2024-03-25"},{"lineNumber":509,"author":{"gitId":"JingHaoooo"},"content":"    * `setResumeTiming()`: Resume the timer.","lastModifiedDate":"2024-03-25"},{"lineNumber":510,"author":{"gitId":"JingHaoooo"},"content":"    * `checkTime`: Get the total time elapsed or time remaining in the timer.","lastModifiedDate":"2024-03-25"},{"lineNumber":511,"author":{"gitId":"JingHaoooo"},"content":"    * `setDuration`: Change countdown timer duration.","lastModifiedDate":"2024-03-25"},{"lineNumber":512,"author":{"gitId":"JingHaoooo"},"content":"    ","lastModifiedDate":"2024-03-25"},{"lineNumber":513,"author":{"gitId":"JingHaoooo"},"content":"* `CountupTimer` and `CountdownTimer` object","lastModifiedDate":"2024-03-25"},{"lineNumber":514,"author":{"gitId":"JingHaoooo"},"content":"  * Dependencies:","lastModifiedDate":"2024-03-25"},{"lineNumber":515,"author":{"gitId":"JingHaoooo"},"content":"    * `Ui` object: Utilized for user interface interactions.","lastModifiedDate":"2024-03-25"},{"lineNumber":516,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":517,"author":{"gitId":"JingHaoooo"},"content":"#### Focus State transition Diagram","lastModifiedDate":"2024-03-25"},{"lineNumber":518,"author":{"gitId":"JingHaoooo"},"content":"There are many commands for the focus timer feature. However, some commands logically cannot be executed in cetain ","lastModifiedDate":"2024-03-25"},{"lineNumber":519,"author":{"gitId":"JingHaoooo"},"content":"states. For example, the command `focus pause` cannot be used if the timer hasn\u0027t started. Another example would be ","lastModifiedDate":"2024-03-25"},{"lineNumber":520,"author":{"gitId":"JingHaoooo"},"content":"the `focus switch` command to switch between the timer could not be used if the current timer mode is running. To aid ","lastModifiedDate":"2024-03-25"},{"lineNumber":521,"author":{"gitId":"JingHaoooo"},"content":"the understanding of the logic, we will use state transition diagram.","lastModifiedDate":"2024-03-25"},{"lineNumber":522,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":523,"author":{"gitId":"Daviancold"},"content":"![FocusStateDiagram.png](diagrams/focus/FocusStateDiagram.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":524,"author":{"gitId":"JingHaoooo"},"content":"* The black circle in the diagram represents the starting point of focus timer. ","lastModifiedDate":"2024-03-25"},{"lineNumber":525,"author":{"gitId":"JingHaoooo"},"content":"* The labels of the arrows represents the commands.","lastModifiedDate":"2024-03-25"},{"lineNumber":526,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":527,"author":{"gitId":"JingHaoooo"},"content":"#### Focus Sequence Diagram","lastModifiedDate":"2024-03-25"},{"lineNumber":528,"author":{"gitId":"Daviancold"},"content":"![FocusSequenceDiagram.png](diagrams/focus/FocusSequenceDiagram.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":529,"author":{"gitId":"Daviancold"},"content":"* Note that `PlaceholderFocusCommand` can refer to any of the focus commands as mentioned above, since all of them ","lastModifiedDate":"2024-03-28"},{"lineNumber":530,"author":{"gitId":"JingHaoooo"},"content":"follows the same call pattern.","lastModifiedDate":"2024-03-25"},{"lineNumber":531,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":532,"author":{"gitId":"Daviancold"},"content":"When `Main` starts, `scanner` and `FocusTimer` objects are created. Upon receiving user input, the input will first be","lastModifiedDate":"2024-03-28"},{"lineNumber":533,"author":{"gitId":"JingHaoooo"},"content":"determined if it is a command related to the focus timer feature. ","lastModifiedDate":"2024-03-25"},{"lineNumber":534,"author":{"gitId":"JingHaoooo"},"content":"If it is, it will be further parsed by `FocusCommandParser` to determine the command. ","lastModifiedDate":"2024-03-25"},{"lineNumber":535,"author":{"gitId":"JingHaoooo"},"content":"The corresponding focus command object is then created and is returned to `Main`, where `execute` will then be called ","lastModifiedDate":"2024-03-25"},{"lineNumber":536,"author":{"gitId":"JingHaoooo"},"content":"and the corresponding method in `FocusTimer` is invoked.","lastModifiedDate":"2024-03-25"},{"lineNumber":537,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":538,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":539,"author":{"gitId":"Daviancold"},"content":"### Fitness Motivator component","lastModifiedDate":"2024-03-28"},{"lineNumber":540,"author":{"gitId":"Daviancold"},"content":"#### Description","lastModifiedDate":"2024-03-28"},{"lineNumber":541,"author":{"gitId":"Daviancold"},"content":"The Fitness Motivator provides users with a list of exercises, and give these users the ability to add and track their","lastModifiedDate":"2024-03-28"},{"lineNumber":542,"author":{"gitId":"Daviancold"},"content":"fitness goals. This component aims to contribute to the goal of improving the user\u0027s wellness, mainly their physical","lastModifiedDate":"2024-03-28"},{"lineNumber":543,"author":{"gitId":"Daviancold"},"content":"well-being.","lastModifiedDate":"2024-03-28"},{"lineNumber":544,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":545,"author":{"gitId":"Daviancold"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-28"},{"lineNumber":546,"author":{"gitId":"Daviancold"},"content":"- #### User Design Considerations","lastModifiedDate":"2024-03-28"},{"lineNumber":547,"author":{"gitId":"Daviancold"},"content":"    - Users are able to generate a list of 5 different exercises that target 5 different parts of the body: The arms, chest, abs, back and legs. The list is randomly generated each time, to allow for the mixing of exercises.","lastModifiedDate":"2024-03-28"},{"lineNumber":548,"author":{"gitId":"Daviancold"},"content":"    - Users can also choose to generate exercises that generate a single part of the body, should they choose to target that part of the body for exercise.","lastModifiedDate":"2024-03-28"},{"lineNumber":549,"author":{"gitId":"Daviancold"},"content":"    - Users are given the freedom of adding, editing and deleting exercises to the list, to increase the number of different exercises that can be done.","lastModifiedDate":"2024-03-28"},{"lineNumber":550,"author":{"gitId":"Daviancold"},"content":"    - What good are exercises if there is no way of keeping track of progress? The goal tracker does this by generating 5 exercises for the user to do that day. It then allows the user to mark the exercise as done or not done, along with a progress bar for the user to track their progress.","lastModifiedDate":"2024-03-28"},{"lineNumber":551,"author":{"gitId":"Daviancold"},"content":"    - Error messages helps guide the user with usage of the fitness tracker, to ensure ease of usage.","lastModifiedDate":"2024-03-28"},{"lineNumber":552,"author":{"gitId":"Daviancold"},"content":"- #### Developer Design Considerations","lastModifiedDate":"2024-03-28"},{"lineNumber":553,"author":{"gitId":"Daviancold"},"content":"    - _Modularity_: All related classes are grouped together into packages. Command parsers are placed in the parser package, with individual command execution further placed into the fitnesscommands package. The execution of fitness logic are all grouped into the fitness package.","lastModifiedDate":"2024-03-28"},{"lineNumber":554,"author":{"gitId":"Daviancold"},"content":"    - _Abstraction_: The command interface is used to specify methods to be implemented in every single exercise command, creating a pre-written template and behaviour for all command classes.","lastModifiedDate":"2024-03-28"},{"lineNumber":555,"author":{"gitId":"Daviancold"},"content":"    - _Encapsulation_: The usage of private attributes and the use of helper methods help ensure data integrity. Get methods in the Exercise class and ExerciseList class ensure that the data is manipulated in the way that was intended by the developer and thus protecting the data.","lastModifiedDate":"2024-03-28"},{"lineNumber":556,"author":{"gitId":"Daviancold"},"content":"    - _Exception Handling_: Exception Handling prevents the code from reaching an unknown or unpredictable state, which could break the program.","lastModifiedDate":"2024-03-28"},{"lineNumber":557,"author":{"gitId":"Daviancold"},"content":"    - _Design Pattern_: To Be Continued","lastModifiedDate":"2024-03-28"},{"lineNumber":558,"author":{"gitId":"Daviancold"},"content":"    - _Code Readability_: Proper coding convention, Java Docs and comments were added for clarity so that other developers can more easily review our code.","lastModifiedDate":"2024-03-28"},{"lineNumber":559,"author":{"gitId":"Daviancold"},"content":"\u003c!-- Modularity, Inheritance, Encapsulation, Exception Handling, Design Pattern, readability, etc --\u003e ","lastModifiedDate":"2024-03-28"},{"lineNumber":560,"author":{"gitId":"Daviancold"},"content":"#### Implementation","lastModifiedDate":"2024-03-28"},{"lineNumber":561,"author":{"gitId":"Daviancold"},"content":"#### Class Diagram","lastModifiedDate":"2024-03-28"},{"lineNumber":562,"author":{"gitId":"Daviancold"},"content":"\u003c!-- Insert image and description of each class, with its overview, attributes,","lastModifiedDate":"2024-03-28"},{"lineNumber":563,"author":{"gitId":"Daviancold"},"content":"methods, dependencies and UML Notes --\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":564,"author":{"gitId":"Daviancold"},"content":"![FitnessClassDiagram](./diagrams/fitness/FitnessClassDiagram.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":565,"author":{"gitId":"Daviancold"},"content":"- `FitnessMotivator` Class","lastModifiedDate":"2024-03-28"},{"lineNumber":566,"author":{"gitId":"Daviancold"},"content":"  - Overview","lastModifiedDate":"2024-03-28"},{"lineNumber":567,"author":{"gitId":"Daviancold"},"content":"    - The `FitnessMotivator` class manages fitness related operations.","lastModifiedDate":"2024-03-28"},{"lineNumber":568,"author":{"gitId":"Daviancold"},"content":"  - Attributes:","lastModifiedDate":"2024-03-28"},{"lineNumber":569,"author":{"gitId":"Daviancold"},"content":"    - `DATA_FILE_PATH`: A string that represents the path to the save file for the fitness motivator (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":570,"author":{"gitId":"Daviancold"},"content":"    - `GOALS_FILE_PATH`: A string that represents the path to the save file for the fitness motivator (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":571,"author":{"gitId":"Daviancold"},"content":"    - `REQUIRED_NUM_OF_PARAMETERS`: The number of parameters needed for the `add` command. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-28"},{"lineNumber":572,"author":{"gitId":"Daviancold"},"content":"    - `allExercise`: An instance of `ExerciseList`.","lastModifiedDate":"2024-03-28"},{"lineNumber":573,"author":{"gitId":"Daviancold"},"content":"    - `dailyGoals`: An instance of `ExerciseGoalList`.","lastModifiedDate":"2024-03-31"},{"lineNumber":574,"author":{"gitId":"Daviancold"},"content":"  - Methods:","lastModifiedDate":"2024-03-28"},{"lineNumber":575,"author":{"gitId":"Daviancold"},"content":"    - `fiveRandomExercises()`: Generates five random integers within the index of each `ExerciseType`, then returns an array of exercises, where each exercise belongs to a different `ExerciseType`.","lastModifiedDate":"2024-03-31"},{"lineNumber":576,"author":{"gitId":"Daviancold"},"content":"    - `getExercises()`: Uses `fiveRandomExercises()`, then prints the exercises generated.","lastModifiedDate":"2024-03-31"},{"lineNumber":577,"author":{"gitId":"Daviancold"},"content":"    - `getTypeExercises(ExerciseType type)`: Prints all the exercises belonging to the queried `ExerciseType`.","lastModifiedDate":"2024-03-28"},{"lineNumber":578,"author":{"gitId":"Daviancold"},"content":"    - `addExercises(String[] commandArgs)`: Add the user-specified exercise into `allExercises`.","lastModifiedDate":"2024-03-28"},{"lineNumber":579,"author":{"gitId":"Daviancold"},"content":"    - `deleteExercises(String[] commandArgs)`: Delete the user-specified exercise by using its `ExerciseType` and index to remove it from the list.","lastModifiedDate":"2024-03-31"},{"lineNumber":580,"author":{"gitId":"Daviancold"},"content":"    - `newGoals()`: Uses `fiveRandomExercises()`, then converts them to `ExerciseGoal` objects and adds them to the dailyGoals list.","lastModifiedDate":"2024-03-31"},{"lineNumber":581,"author":{"gitId":"Daviancold"},"content":"    - `goalStatus()`: If the list of goals is not empty, it prints out all the currently set `ExerciseGoal` and its status, otherwise it shows a message that says there are no goals.","lastModifiedDate":"2024-03-31"},{"lineNumber":582,"author":{"gitId":"Daviancold"},"content":"    - `toggleGoal(int index)`: Toggles the status of the user-specified `ExerciseGoal` based on its index.","lastModifiedDate":"2024-03-31"},{"lineNumber":583,"author":{"gitId":"Daviancold"},"content":"    - `printHelp()`: Prints out a list of commands and briefly describes what each command does.","lastModifiedDate":"2024-03-31"},{"lineNumber":584,"author":{"gitId":"Daviancold"},"content":"  - Dependencies:","lastModifiedDate":"2024-03-28"},{"lineNumber":585,"author":{"gitId":"Daviancold"},"content":"    - Ui: Utilised for user interface interactions.","lastModifiedDate":"2024-03-28"},{"lineNumber":586,"author":{"gitId":"Daviancold"},"content":"    - Enum ExerciseType: Utilised to allow only specified types of exercises.","lastModifiedDate":"2024-03-28"},{"lineNumber":587,"author":{"gitId":"Daviancold"},"content":"    - UiMessageConstants: A class with static string constants, where each string stores a different message for printing.","lastModifiedDate":"2024-03-31"},{"lineNumber":588,"author":{"gitId":"Daviancold"},"content":"  - UML Notes:","lastModifiedDate":"2024-03-28"},{"lineNumber":589,"author":{"gitId":"Daviancold"},"content":"    - `FitnessMotivator` class only contains one `ExerciseList`, and one `ExerciseGoalList`.","lastModifiedDate":"2024-03-31"},{"lineNumber":590,"author":{"gitId":"Daviancold"},"content":"- `ExerciseList` Class","lastModifiedDate":"2024-03-28"},{"lineNumber":591,"author":{"gitId":"Daviancold"},"content":"  - Overview:","lastModifiedDate":"2024-03-28"},{"lineNumber":592,"author":{"gitId":"Daviancold"},"content":"    - The `ExerciseList` class directly manipulates the list of `Exercises`, and provides methods to do so.","lastModifiedDate":"2024-03-28"},{"lineNumber":593,"author":{"gitId":"Daviancold"},"content":"  - Attributes:","lastModifiedDate":"2024-03-28"},{"lineNumber":594,"author":{"gitId":"Daviancold"},"content":"    - `allExercises`: A private instance of an `ArrayList` of `Exercises`.","lastModifiedDate":"2024-03-28"},{"lineNumber":595,"author":{"gitId":"Daviancold"},"content":"  - Methods:","lastModifiedDate":"2024-03-28"},{"lineNumber":596,"author":{"gitId":"Daviancold"},"content":"    - `ExerciseList()`: A public constructor method, it checks if a local save file exists. If it does not, it creates a new file and initialises it with data, otherwise it will simply load the file.","lastModifiedDate":"2024-03-28"},{"lineNumber":597,"author":{"gitId":"Daviancold"},"content":"    - `initialiseSingleList(String[] list, ExerciseType type)`: A private helper method used to read an array of strings and convert it into exercises to be added into the list. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-28"},{"lineNumber":598,"author":{"gitId":"Daviancold"},"content":"    - `initialiseData()`: A private helper method used to initialise all 5 list by calling `initialiseSingleList` five times. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-28"},{"lineNumber":599,"author":{"gitId":"Daviancold"},"content":"    - `parseData(ArrayList\u003cString\u003e data)`: A private helper method used to further process the `ArrayList` of strings read by the Storage class. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-28"},{"lineNumber":600,"author":{"gitId":"Daviancold"},"content":"    - `add(Exercise exercise)`: A public helper method used to add an `Exercise` object into `allExercises`.","lastModifiedDate":"2024-03-28"},{"lineNumber":601,"author":{"gitId":"Daviancold"},"content":"    - `get(ExerciseType type, int index)`: A public helper method used to query for an `Exercise` Object that matches the n-th `Exercise` with the matching `ExerciseType`, where n \u003d index.","lastModifiedDate":"2024-03-31"},{"lineNumber":602,"author":{"gitId":"Daviancold"},"content":"    - `getType(ExerciseType type)`: A public helper method used to query for all of the `Exercise` objects that match the `ExerciseType`.","lastModifiedDate":"2024-03-28"},{"lineNumber":603,"author":{"gitId":"Daviancold"},"content":"    - `size(ExerciseType type)`: A public helper method that returns the total number of `Exercise` objects that match the `ExerciseType`.","lastModifiedDate":"2024-03-28"},{"lineNumber":604,"author":{"gitId":"Daviancold"},"content":"    - `newExercise(String[] parameters)`: A public helper method that creates an `Exercise` Object from an array of strings.","lastModifiedDate":"2024-03-28"},{"lineNumber":605,"author":{"gitId":"Daviancold"},"content":"    - `findExercise(ExerciseType type, String nameQuery)`: A public helper method that searches for an `Exercise` object within `allExercises` using `ExerciseType` and a string which represents the name being searched.","lastModifiedDate":"2024-03-28"},{"lineNumber":606,"author":{"gitId":"Daviancold"},"content":"    - `remove(Exercise exercise)`: A public helper method that removes a specified `Exercise` Object from `ExerciseList`.","lastModifiedDate":"2024-03-31"},{"lineNumber":607,"author":{"gitId":"Daviancold"},"content":"  - Dependencies:","lastModifiedDate":"2024-03-28"},{"lineNumber":608,"author":{"gitId":"Daviancold"},"content":"      - Storage: Utilised for persistent memory storage.","lastModifiedDate":"2024-03-28"},{"lineNumber":609,"author":{"gitId":"Daviancold"},"content":"      - Enum ExerciseType: Utilised to allow only specified types of exercises.","lastModifiedDate":"2024-03-28"},{"lineNumber":610,"author":{"gitId":"Daviancold"},"content":"      - ExerciseBank: Utilised for storage of initialisation data.","lastModifiedDate":"2024-03-31"},{"lineNumber":611,"author":{"gitId":"Daviancold"},"content":"  - UML Notes:","lastModifiedDate":"2024-03-28"},{"lineNumber":612,"author":{"gitId":"Daviancold"},"content":"    - `ExerciseList` contains at least 25 instances of `Exercise`.","lastModifiedDate":"2024-03-28"},{"lineNumber":613,"author":{"gitId":"Daviancold"},"content":"    - When `FitnessMotivator` is destroyed, the `ExerciseList` instance is destroyed, reflecting a \"whole-part\" relationship.","lastModifiedDate":"2024-03-28"},{"lineNumber":614,"author":{"gitId":"Daviancold"},"content":"    - `ExerciseList` is a parent class to `ExerciseGoalList`.","lastModifiedDate":"2024-03-31"},{"lineNumber":615,"author":{"gitId":"Daviancold"},"content":"- `Exercise` Class","lastModifiedDate":"2024-03-28"},{"lineNumber":616,"author":{"gitId":"Daviancold"},"content":"  - Overview:","lastModifiedDate":"2024-03-28"},{"lineNumber":617,"author":{"gitId":"Daviancold"},"content":"    - The `Exercise` class stores the basic data of each exercise, such as its name, its type and the number of sets and reps to do.","lastModifiedDate":"2024-03-28"},{"lineNumber":618,"author":{"gitId":"Daviancold"},"content":"  - Attributes:","lastModifiedDate":"2024-03-28"},{"lineNumber":619,"author":{"gitId":"Daviancold"},"content":"    - `exerciseName`: A private string storing the name of the exercise.","lastModifiedDate":"2024-03-28"},{"lineNumber":620,"author":{"gitId":"Daviancold"},"content":"    - `exerciseType`: A private `ExerciseType` object storing one of five types of exercises.","lastModifiedDate":"2024-03-28"},{"lineNumber":621,"author":{"gitId":"Daviancold"},"content":"    - `sets`: A private string storing the number of sets to be done.","lastModifiedDate":"2024-03-28"},{"lineNumber":622,"author":{"gitId":"Daviancold"},"content":"    - `reps`: A private string storing the number of reps to be done.","lastModifiedDate":"2024-03-28"},{"lineNumber":623,"author":{"gitId":"Daviancold"},"content":"  - Methods:","lastModifiedDate":"2024-03-28"},{"lineNumber":624,"author":{"gitId":"Daviancold"},"content":"    - `getType()`: A public helper method to obtain the `ExerciseType` of the exercise. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-28"},{"lineNumber":625,"author":{"gitId":"Daviancold"},"content":"    - `getExerciseName()`: A public helper method to obtain the name of the exercise. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-28"},{"lineNumber":626,"author":{"gitId":"Daviancold"},"content":"    - `getSets()`: A public helper method to get the number of sets to be done per exercise. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-28"},{"lineNumber":627,"author":{"gitId":"Daviancold"},"content":"    - `getReps()`: A public helper method to get the number of reps to be done per exercise. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-28"},{"lineNumber":628,"author":{"gitId":"Daviancold"},"content":"    - `toString()`: An overriden public method used to specify the string format of the `Exercise` object.","lastModifiedDate":"2024-03-28"},{"lineNumber":629,"author":{"gitId":"Daviancold"},"content":"  - Dependencies:","lastModifiedDate":"2024-03-28"},{"lineNumber":630,"author":{"gitId":"Daviancold"},"content":"    - Enum ExerciseType: Utilised to allow only specified types of exercises.","lastModifiedDate":"2024-03-28"},{"lineNumber":631,"author":{"gitId":"Daviancold"},"content":"  - UML Notes:","lastModifiedDate":"2024-03-28"},{"lineNumber":632,"author":{"gitId":"Daviancold"},"content":"    - `ExerciseList` contains at least 25 instances of `Exercise`.","lastModifiedDate":"2024-03-28"},{"lineNumber":633,"author":{"gitId":"Daviancold"},"content":"    - When `ExerciseList` or `FitnessMotivator` is destroyed, the `Exercise` instances are destroyed as well, reflecting a \"whole-part\" relationship.","lastModifiedDate":"2024-03-28"},{"lineNumber":634,"author":{"gitId":"Daviancold"},"content":"    - `Exercise` is the parent class of `ExerciseGoal`.","lastModifiedDate":"2024-03-31"},{"lineNumber":635,"author":{"gitId":"Daviancold"},"content":"- `ExerciseBank` Class","lastModifiedDate":"2024-03-31"},{"lineNumber":636,"author":{"gitId":"Daviancold"},"content":"    - Overview: ","lastModifiedDate":"2024-03-31"},{"lineNumber":637,"author":{"gitId":"Daviancold"},"content":"      - The `ExerciseBank` class stores a collection of static string constants for initialisation.","lastModifiedDate":"2024-03-31"},{"lineNumber":638,"author":{"gitId":"Daviancold"},"content":"    - Attributes:","lastModifiedDate":"2024-03-31"},{"lineNumber":639,"author":{"gitId":"Daviancold"},"content":"      - `INIT_ARM_EXERCISES` : A public static array of `String` storing arm exercises, along with the exercise name, sets and reps to be done. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":640,"author":{"gitId":"Daviancold"},"content":"      - `INIT_CHEST_EXERCISES`: A public static array of `String` storing chest exercises, along with the exercise name, sets and reps to be done. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":641,"author":{"gitId":"Daviancold"},"content":"      - `INIT_ABS_EXERCISES`: A public static array of `String` storing abs exercises, along with the exercise name, sets and reps to be done. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":642,"author":{"gitId":"Daviancold"},"content":"      - `INIT_BACK_EXERCISES`: A public static array of `String` storing back exercises, along with the exercise name, sets and reps to be done. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":643,"author":{"gitId":"Daviancold"},"content":"      - `INIT_LEGS_EXERCISES`: A public static array of `String` storing leg exercises, along with the exercise name, sets and reps to be done. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":644,"author":{"gitId":"Daviancold"},"content":"    - UML Notes:","lastModifiedDate":"2024-03-31"},{"lineNumber":645,"author":{"gitId":"Daviancold"},"content":"      - Used exclusively by `ExerciseList`.","lastModifiedDate":"2024-03-31"},{"lineNumber":646,"author":{"gitId":"Daviancold"},"content":"- `ExerciseGoalList` Class","lastModifiedDate":"2024-03-31"},{"lineNumber":647,"author":{"gitId":"Daviancold"},"content":"  - Overview: ","lastModifiedDate":"2024-03-31"},{"lineNumber":648,"author":{"gitId":"Daviancold"},"content":"    - The `ExerciseGoalList` class inherits from the class `ExerciseList`, but storing `ExerciseGoal` objects instead of `Exercise` objects. It also implements additional methods.","lastModifiedDate":"2024-03-31"},{"lineNumber":649,"author":{"gitId":"Daviancold"},"content":"  - Attributes:","lastModifiedDate":"2024-03-31"},{"lineNumber":650,"author":{"gitId":"Daviancold"},"content":"    - `NUMBER_OF_GOALS`: A private static constant integer value representing the maximum number of goals in the `ExerciseGoalList`.","lastModifiedDate":"2024-03-31"},{"lineNumber":651,"author":{"gitId":"Daviancold"},"content":"    - `goals`: A private `ArrayList` of `ExerciseGoal` objects.","lastModifiedDate":"2024-03-31"},{"lineNumber":652,"author":{"gitId":"Daviancold"},"content":"  - Methods:","lastModifiedDate":"2024-03-31"},{"lineNumber":653,"author":{"gitId":"Daviancold"},"content":"    - `parseData(ArrayList\u003cString\u003e data)`: A private helper method used to further process the `ArrayList` of strings read by the Storage class. In this class, the data is initialised into `ExerciseGoal` Objects instead of `Exercise` Objects. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":654,"author":{"gitId":"Daviancold"},"content":"    - `isEmpty()`: A public helper method used to check if the `ExerciseGoalList` is empty.","lastModifiedDate":"2024-03-31"},{"lineNumber":655,"author":{"gitId":"Daviancold"},"content":"    - `clear()`: A public helper method used to reset the `ExerciseGoalList` by deleting all `ExerciseGoal` objects within.","lastModifiedDate":"2024-03-31"},{"lineNumber":656,"author":{"gitId":"Daviancold"},"content":"    - `findExercise(int index)`: A public helper method used to find an `ExerciseGoal` based on its index.","lastModifiedDate":"2024-03-31"},{"lineNumber":657,"author":{"gitId":"Daviancold"},"content":"    - `saveGoals()`: A public helper method used to save the current list to a local storage.","lastModifiedDate":"2024-03-31"},{"lineNumber":658,"author":{"gitId":"Daviancold"},"content":"    - `newExercise(String[] parameters)`: An overriden public method from the parent class, it is used to create a new `ExerciseGoal` object, with its `isDone` attribute initialised to `false`.","lastModifiedDate":"2024-03-31"},{"lineNumber":659,"author":{"gitId":"Daviancold"},"content":"    - `add(Exercise exercise, boolean isDone)`: A public method overloaded from the parent class, it adds a pre-existing `Exercise`, converts it with a declared `isDone` parameter, before adding it into the list and saving locally.","lastModifiedDate":"2024-03-31"},{"lineNumber":660,"author":{"gitId":"Daviancold"},"content":"    - `toString()`: An overriden public method used to specify the string format of the `ExerciseGoalList` object. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":661,"author":{"gitId":"Daviancold"},"content":"  - Dependencies:","lastModifiedDate":"2024-03-31"},{"lineNumber":662,"author":{"gitId":"Daviancold"},"content":"    - Storage: Utilised for persistent memory storage.","lastModifiedDate":"2024-03-31"},{"lineNumber":663,"author":{"gitId":"Daviancold"},"content":"    - Enum ExerciseType: Utilised to allow only specified types of exercises.","lastModifiedDate":"2024-03-31"},{"lineNumber":664,"author":{"gitId":"Daviancold"},"content":"  - UML Notes:","lastModifiedDate":"2024-03-31"},{"lineNumber":665,"author":{"gitId":"Daviancold"},"content":"  - `ExerciseGoalList` is the child class of `ExerciseList`.","lastModifiedDate":"2024-03-31"},{"lineNumber":666,"author":{"gitId":"Daviancold"},"content":"  - When `ExercisegoalList` or `FitnessMotivator` is destroyed, the `ExerciseGoal` instances are destroyed as well, reflecting a \"whole-part\" relationship.","lastModifiedDate":"2024-03-31"},{"lineNumber":667,"author":{"gitId":"Daviancold"},"content":"  - `ExerciseGoalList` contains either 5 or 0 instances of `Exercise`.","lastModifiedDate":"2024-03-31"},{"lineNumber":668,"author":{"gitId":"Daviancold"},"content":"- `ExerciseGoal` Class","lastModifiedDate":"2024-03-31"},{"lineNumber":669,"author":{"gitId":"Daviancold"},"content":"  - Overview: ","lastModifiedDate":"2024-03-31"},{"lineNumber":670,"author":{"gitId":"Daviancold"},"content":"    - The `ExerciseGoal` class inherits from the class `Exercise`, but adds an attribute to store the completion status of the exercise goal. ","lastModifiedDate":"2024-03-31"},{"lineNumber":671,"author":{"gitId":"Daviancold"},"content":"  - Attributes:","lastModifiedDate":"2024-03-31"},{"lineNumber":672,"author":{"gitId":"Daviancold"},"content":"    - All attributes of the `Exercise` class.","lastModifiedDate":"2024-03-31"},{"lineNumber":673,"author":{"gitId":"Daviancold"},"content":"    - `isDone`: A private boolean storing the completion state of the `ExerciseGoal` object.","lastModifiedDate":"2024-03-31"},{"lineNumber":674,"author":{"gitId":"Daviancold"},"content":"  - Methods:","lastModifiedDate":"2024-03-31"},{"lineNumber":675,"author":{"gitId":"Daviancold"},"content":"    - `toggle()`: A public helper method used to toggle the state of the `ExerciseGoal` object.","lastModifiedDate":"2024-03-31"},{"lineNumber":676,"author":{"gitId":"Daviancold"},"content":"    - `toString()`: An overriden public method used to specify the string format of the `ExerciseGoal` object.","lastModifiedDate":"2024-03-31"},{"lineNumber":677,"author":{"gitId":"Daviancold"},"content":"  - Dependencies:","lastModifiedDate":"2024-03-31"},{"lineNumber":678,"author":{"gitId":"Daviancold"},"content":"    - Enum ExerciseType: Utilised to allow only specified types of exercises.","lastModifiedDate":"2024-03-31"},{"lineNumber":679,"author":{"gitId":"Daviancold"},"content":"  - UML Notes:","lastModifiedDate":"2024-03-31"},{"lineNumber":680,"author":{"gitId":"Daviancold"},"content":"    - `ExerciseGoal` is the child class of `Exercise`.","lastModifiedDate":"2024-03-31"},{"lineNumber":681,"author":{"gitId":"Daviancold"},"content":"    - `ExerciseGoalList` contains either 5 or 0 instances of `Exercise`.","lastModifiedDate":"2024-03-31"},{"lineNumber":682,"author":{"gitId":"Daviancold"},"content":"    - When `ExercisegoalList` or `FitnessMotivator` is destroyed, the `ExerciseGoal` instances are destroyed as well, reflecting a \"whole-part\" relationship.","lastModifiedDate":"2024-03-31"},{"lineNumber":683,"author":{"gitId":"Daviancold"},"content":"- `UiMessageConstants` Class","lastModifiedDate":"2024-03-31"},{"lineNumber":684,"author":{"gitId":"Daviancold"},"content":"  - Overview:","lastModifiedDate":"2024-03-31"},{"lineNumber":685,"author":{"gitId":"Daviancold"},"content":"    - The `UiMessageConstants` class stores all constant `String` variables used in the various printing methods in `FitnessMotivator`.","lastModifiedDate":"2024-03-31"},{"lineNumber":686,"author":{"gitId":"Daviancold"},"content":"  - Attributes:","lastModifiedDate":"2024-03-31"},{"lineNumber":687,"author":{"gitId":"Daviancold"},"content":"    - `NEW_GOAL_MESSAGE`: A public static `String` constant storing the new goal command message. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":688,"author":{"gitId":"Daviancold"},"content":"    - `EMPTY_GOAL_MESSAGE`: A public static `String` constant storing the empty goal message. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":689,"author":{"gitId":"Daviancold"},"content":"    - `GOAL_MESSAGE`: A public static `String` constant storing the goal command message. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":690,"author":{"gitId":"Daviancold"},"content":"    - `GOAL_STATUS_MESSAGE`: A public static `String` constant storing the goal status message. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":691,"author":{"gitId":"Daviancold"},"content":"    - `HELP_MESSAGE`: A public static `String` constant storing the help message. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":692,"author":{"gitId":"Daviancold"},"content":"    - `ADD_EXERCISE_MESSAGE`: A public static `String` constant storing the add exercise message. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":693,"author":{"gitId":"Daviancold"},"content":"    - `DELETE_EXERCISE_MESSAGE`: A public static `String` constant storing the delete exercise message. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":694,"author":{"gitId":"Daviancold"},"content":"    - `HELP_MENU_INSTRUCTIONS`: A public static `String` constant storing all possible commands and a brief description of each command. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":695,"author":{"gitId":"Daviancold"},"content":"  - UML Notes:","lastModifiedDate":"2024-03-31"},{"lineNumber":696,"author":{"gitId":"Daviancold"},"content":"    - Used exclusively by `FitnessMotivator`.","lastModifiedDate":"2024-03-31"},{"lineNumber":697,"author":{"gitId":"Daviancold"},"content":"- `ExerciseType` Enumeration","lastModifiedDate":"2024-03-31"},{"lineNumber":698,"author":{"gitId":"Daviancold"},"content":"  - Overview:","lastModifiedDate":"2024-03-31"},{"lineNumber":699,"author":{"gitId":"Daviancold"},"content":"    - The `ExerciseType` enumeration restricts the number of different types of exercises to five parts of the body, for easier sorting and management of all exercises.","lastModifiedDate":"2024-03-31"},{"lineNumber":700,"author":{"gitId":"Daviancold"},"content":"  - Attributes:","lastModifiedDate":"2024-03-31"},{"lineNumber":701,"author":{"gitId":"Daviancold"},"content":"    - `ARMS`: Exercises that work the Arms","lastModifiedDate":"2024-03-31"},{"lineNumber":702,"author":{"gitId":"Daviancold"},"content":"    - `CHEST`: Exercises that work the Chest","lastModifiedDate":"2024-03-31"},{"lineNumber":703,"author":{"gitId":"Daviancold"},"content":"    - `ABS`: Exercises that work the Abs","lastModifiedDate":"2024-03-31"},{"lineNumber":704,"author":{"gitId":"Daviancold"},"content":"    - `BACK`: Exercises that work the Back","lastModifiedDate":"2024-03-31"},{"lineNumber":705,"author":{"gitId":"Daviancold"},"content":"    - `LEGS`: Exercises that work the Legs","lastModifiedDate":"2024-03-31"},{"lineNumber":706,"author":{"gitId":"Daviancold"},"content":"  - Methods:","lastModifiedDate":"2024-03-31"},{"lineNumber":707,"author":{"gitId":"Daviancold"},"content":"    - `toString()`: An overriden public method used to specify the string format of the `ExerciseType` Enumeration. (Omitted from Class Diagram)","lastModifiedDate":"2024-03-31"},{"lineNumber":708,"author":{"gitId":"Daviancold"},"content":"  - Dependencies:","lastModifiedDate":"2024-03-31"},{"lineNumber":709,"author":{"gitId":"Daviancold"},"content":"    - Does not require any dependencies.","lastModifiedDate":"2024-03-31"},{"lineNumber":710,"author":{"gitId":"Daviancold"},"content":"  - UML Notes:","lastModifiedDate":"2024-03-31"},{"lineNumber":711,"author":{"gitId":"Daviancold"},"content":"    - It is used everywhere, as every feature in the FitnessMotivator uses/parses `Exercise` objects, which will always use `ExerciseGoal` objects.","lastModifiedDate":"2024-03-31"},{"lineNumber":712,"author":{"gitId":"Daviancold"},"content":"- Fitness command classes","lastModifiedDate":"2024-03-28"},{"lineNumber":713,"author":{"gitId":"Daviancold"},"content":"  - `GetExercisesCommand`:","lastModifiedDate":"2024-03-28"},{"lineNumber":714,"author":{"gitId":"Daviancold"},"content":"    - Without parameters, the command retrieves 5 random exercises from each `ExerciseType` and prints it.","lastModifiedDate":"2024-03-28"},{"lineNumber":715,"author":{"gitId":"Daviancold"},"content":"      - Command format: `fitness get`","lastModifiedDate":"2024-03-28"},{"lineNumber":716,"author":{"gitId":"Daviancold"},"content":"    - With parameters, the command retrieves all the exercises from the specified `ExerciseType` and prints it.","lastModifiedDate":"2024-03-28"},{"lineNumber":717,"author":{"gitId":"Daviancold"},"content":"      - Command format: `fitness get arms`","lastModifiedDate":"2024-03-28"},{"lineNumber":718,"author":{"gitId":"Daviancold"},"content":"  - `AddExerciseCommand`: Add a user specified exercise into the list.","lastModifiedDate":"2024-03-28"},{"lineNumber":719,"author":{"gitId":"Daviancold"},"content":"    - CommandFormat: `fitness add \u003cExerciseType\u003e, \u003cExerciseName\u003e, \u003cNumber_Of_Sets\u003e, \u003cNumber_Of_Reps\u003e`","lastModifiedDate":"2024-03-28"},{"lineNumber":720,"author":{"gitId":"Daviancold"},"content":"  - `DeleteExerciseCommand`: Deletes a user specified `Exercise` from the list. ","lastModifiedDate":"2024-03-31"},{"lineNumber":721,"author":{"gitId":"Daviancold"},"content":"    - CommandFormat: `fitness delete \u003cExerciseType\u003e \u003cIndex\u003e`","lastModifiedDate":"2024-03-31"},{"lineNumber":722,"author":{"gitId":"Daviancold"},"content":"  - `GoalExerciseCommand`:","lastModifiedDate":"2024-03-31"},{"lineNumber":723,"author":{"gitId":"Daviancold"},"content":"    - Without parameters, the command tries to retrieve the status of the list of `ExerciseGoal`.","lastModifiedDate":"2024-03-31"},{"lineNumber":724,"author":{"gitId":"Daviancold"},"content":"      - Command format: `fitness goal`","lastModifiedDate":"2024-03-31"},{"lineNumber":725,"author":{"gitId":"Daviancold"},"content":"    - With parameters, there are only 2 possible parameters.","lastModifiedDate":"2024-03-31"},{"lineNumber":726,"author":{"gitId":"Daviancold"},"content":"      - This command creates or overwrites the existing goals with new goals.","lastModifiedDate":"2024-03-31"},{"lineNumber":727,"author":{"gitId":"Daviancold"},"content":"        - Command format: `fitness goal new`","lastModifiedDate":"2024-03-31"},{"lineNumber":728,"author":{"gitId":"Daviancold"},"content":"      - This command marks/unmarks the `ExerciseGoal` as completed or uncompleted.","lastModifiedDate":"2024-03-31"},{"lineNumber":729,"author":{"gitId":"Daviancold"},"content":"        - Command format: `fitness goal \u003cindex\u003e`","lastModifiedDate":"2024-03-31"},{"lineNumber":730,"author":{"gitId":"Daviancold"},"content":"  - `HelpExerciseCommand`: Prints a list of executable commands for Fitness Motivator","lastModifiedDate":"2024-03-31"},{"lineNumber":731,"author":{"gitId":"Daviancold"},"content":"    - Command format: `fitness help`","lastModifiedDate":"2024-03-31"},{"lineNumber":732,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":733,"author":{"gitId":"Daviancold"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-03-28"},{"lineNumber":734,"author":{"gitId":"Daviancold"},"content":"\u003c!-- Insert image and description of the image --\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":735,"author":{"gitId":"Daviancold"},"content":"![FitnessSequenceDiagram](./diagrams/fitness/FitnessSequenceDiagram.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":736,"author":{"gitId":"Daviancold"},"content":"- Note that `PlaceholderFitnessCommand` can refer to any of the fitness commands mentioned above, as all of them follow the same call pattern.","lastModifiedDate":"2024-03-28"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":738,"author":{"gitId":"Daviancold"},"content":"When `Main` starts, `scanner` and `FitnessMotivator` objects are created. Upon receiving user input, the input will first be determined if it is a command related to the habit tracker feature. if it is, it will be further parsed by `FitnessCommandParser` to determine the command. The corresponding fitness command object is then created and is returend to `Main`, where `execute()` will then be called and the corresponding method in `FitnessMotivator` is invoked.","lastModifiedDate":"2024-03-28"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":740,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":741,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":743,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":745,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":747,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":749,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":751,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":752,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":753,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":754,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":756,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":758,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":760,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":762,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":764,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":766,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"JingHaoooo":62,"OKW32":143,"genexus85":102,"damiwee":194,"Daviancold":230,"-":35}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"# Wellness360","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"genexus85":1,"-":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"# Wellness360 User Guide","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"Wellness360 is a wellness app. It is meant for stressed Engineering Students who prefer CLI over GUI and want to keep track of their overall wellbeing. Our app offers comprehensive tracking and management tools, providing personalized support to alleviate stress and enhance overall well-being. It can help you take control of your mental and physical health effortlessly, so you can focus on your studies with peace of mind.","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"## Table of Contents","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"- [Wellness360 User Guide](#wellness360-user-guide)","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    - [Starting Wellness360](#quick-start)","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"    - [Features](#features)","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    - [Command Format](#features)","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    - [Usage](#usage)","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"        - Reflection Manager","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"          - [`reflect get` - Get reflection questions](#get-reflection-questions-reflect-get)","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"          - [`reflect save` - Save favourite reflection question](#save-favourite-reflection-question-reflect-save)","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"          - [`reflect unsave` - Unsave favourite reflection question](#unsave-favourite-reflection-question-reflect-unsave)","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"          - [`reflect list` - View favourite reflection questions](#view-favourite-reflection-questions-reflect-list)","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"          - [`reflect help` - View reflection help menu](#view-reflection-help-menu-reflect-help)","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"        - Habit Tracker","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"          - [`habit add` - Add a new habit](#add-a-new-habit-habit-add)","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"          - [`habit list` - List out all habits](#list-out-all-habits-habit-list)","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"          - [`habit update` - Update habit count after completing a habit](#update-habit-count-after-completing-a-habit-habit-update)","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"          - [`habit delete` - Delete a habit](#delete-a-habit-habit-delete)","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"          - [`habit set` - Set priority of habit](#set-priority-of-habit-habit-set)","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"          - [`habit sort` - Sort habit tracker list](#sort-habit-tracker-list-habit-sort)","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"          - [`habit help` - View habit tracker help menu](#view-habit-tracker-help-menu-habit-help)","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"        - Sleep Tracker","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"          - [`sleep add` - Add a new sleep cycle](#add-a-new-sleep-cycle-sleep-add)","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"          - [`sleep list` - List out all sleep cycles](#list-out-all-sleep-cycles-sleep-list)","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"          - [`sleep get` - Get hours slept on specific date](#get-hours-slept-on-specific-date-sleep-get)","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"          - [`sleep update` - Update hours slept on specific date](#update-hours-slept-on-specific-date)","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"          - [`sleep delete` - Delete sleep cycles](#delete-sleep-cycles-sleep-delete)","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"            - [Delete Sleep Cycle of a specific date](#delete-sleep-cycle-of-a-specific-date)","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"            - [Delete Sleep Cycles before a specific date](#delete-sleep-cycles-before-a-specific-date)","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            - [Delete Sleep Cycles within a range of dates](#delete-sleep-cycles-within-a-range-of-dates)","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"          - [`sleep save` - Save sleep cycles](#save-sleep-cycles-sleep-save)","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"        - Focus Timer","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"          - [`focus switch` - Switch focus timer mode](#switch-focus-timer-mode-focus-switch)","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"          - [`focus start` - Start a new focus timer](#start-a-new-focus-timer-focus-start)","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"          - [`focus stop` - Stop the current focus timer](#stop-the-current-focus-timer-focus-stop)","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"          - [`focus pause` - Pause the current focus timer](#pause-the-current-focus-timer-focus-pause)","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"          - [`focus resume` - Resume the current focus timer](#resume-the-current-focus-timer-focus-resume)","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"          - [`focus check` - Check time for focus timer](#check-time-for-focus-timer-focus-check)","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"          - [`focus set` - Set focus time duration](#set-focus-timer-duration-focus-set)","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"      - Fitness Motivator","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"          - [`fitness get` - Get a pre-loaded list of different exercises](#get-a-list-of-exercises-fitness-get)","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"          - [`fitness add` - Add new exercises into the list](#add-exercises-to-the-list-fitness-add)","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"          - [`fitness delete` - Delete exercises from the list](#delete-exercises-from-the-list-fitness-delete)","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"          - [`fitness goal` - Set exercise goals for the day](#set-exercise-goals-for-the-day-fitness-goal)","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"          - [`fitness help` - View Fitness Motivator help menu](#view-fitness-motivator-help-menu-fitness-help)","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"## Quick Start","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"2. Down the latest version of `Wellness360` from [here](http://link.to/duke).","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"3. To start `Wellness360` Using the `jar` file, go to the containing folder for Wellness360. ","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"Then, on your terminal of choice, run:","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"-$ java -jar tp.jar","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"Wellness360 comes with many features for you to manage your well-being using CLI. The 5 main features are Habit ","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"Tracker, Sleep Tracker, Self Reflection, Focus Timer, and Fitness Motivation.","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"## Command Format","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"A command has the general structure:","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"\u003cfeature\u003e \u003ccommand\u003e \u003c/arg1\u003e \u003cparam1\u003e \u003c/arg2\u003e \u003cparam2\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"- Arguments and parameters are not compulsory for all commands. Refer to respective feature commands for specifics.  ","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"- Feature, command and arguments are case-sensitive. It is compulsory to use lower case.","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"- Parameters are not case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"## Usage","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"### Get reflection questions: `reflect get`","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"damiwee"},"content":"Allows user to generate a set of 5 random unique reflection questions from ","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"damiwee"},"content":"a question bank for users to view and reflect on. The questions come ","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"damiwee"},"content":"from 5 main categories: personal growth and development, relationships ","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"damiwee"},"content":"and social connections, career and professional development, health ","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"damiwee"},"content":"and well-being and lastly creativity and personal expression. ","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"damiwee"},"content":"The questions are meant to be randomized for users to think about ","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"damiwee"},"content":"various aspects of their lives. It is not guaranteed to get a ","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"damiwee"},"content":"question from each category. One or more questions may come from the ","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"damiwee"},"content":"same category.  ","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"damiwee"},"content":"Format: ","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"damiwee"},"content":"reflect get","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"damiwee"},"content":"* The `reflect` and `get` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"damiwee"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2020-05-24"},{"lineNumber":98,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"damiwee"},"content":"reflect get","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"damiwee"},"content":"Expected outcome:  ","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"damiwee"},"content":"Note that the questions are randomized.","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"damiwee"},"content":"1. How do you overcome creative blocks or periods of stagnation?","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"damiwee"},"content":"2. Reflect on a recent professional success. What factors contributed to your achievement?","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"damiwee"},"content":"3. What are your biggest strengths, and how can you leverage them more effectively in your daily life?","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"damiwee"},"content":"4. How do you prioritize self-care and well-being in your daily life?","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"damiwee"},"content":"5. Reflect on a time when you took a creative risk. What did you learn from the experience?","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"damiwee"},"content":"### Save favourite reflection question: `reflect save`","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"damiwee"},"content":"Allows user to save reflection question to favourites after viewing generated questions. This allows the user ","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"damiwee"},"content":"to review the question another time. The favourites list is stored in memory as a text file. ","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"damiwee"},"content":"New users will have an empty favourites list file on load, but existing users can load back favourite questions from","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"damiwee"},"content":"past sessions.","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"damiwee"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"damiwee"},"content":"reflect save [QUESTION_ID]","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"damiwee"},"content":"* The `reflect` and `save` keywords are case-sensitive. Use lower casing for these 2 keywords.","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"damiwee"},"content":"* Questions that can be saved correspond to the most recent list of generated questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"damiwee"},"content":"* Users need to generate questions before attempting to save it to favourites.","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"damiwee"},"content":"* `QUESTION_ID` only accepts integers between 1 and 5 inclusive.","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"damiwee"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"damiwee"},"content":"reflect save 1","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"damiwee"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"damiwee"},"content":"Got it. Added reflection question to favourites:","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"damiwee"},"content":"How do you overcome creative blocks or periods of stagnation?","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"damiwee"},"content":"### Unsave favourite reflection question: `reflect unsave`","lastModifiedDate":"2024-03-23"},{"lineNumber":143,"author":{"gitId":"damiwee"},"content":"Allows user to unsave reflection question from favourites list if the question is no longer relevant to the user. The favourites list is stored in memory as a text file.","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"damiwee"},"content":"New users will have an empty favourites list file on load, but existing users can load back favourite questions from","lastModifiedDate":"2024-03-23"},{"lineNumber":145,"author":{"gitId":"damiwee"},"content":"past sessions.","lastModifiedDate":"2024-03-23"},{"lineNumber":146,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":147,"author":{"gitId":"damiwee"},"content":"Format:","lastModifiedDate":"2024-03-23"},{"lineNumber":148,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":149,"author":{"gitId":"damiwee"},"content":"reflect unsave [QUESTION_ID]","lastModifiedDate":"2024-03-23"},{"lineNumber":150,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":151,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":152,"author":{"gitId":"damiwee"},"content":"* The `reflect` and `unsave` keywords are case-sensitive. Use lower casing for these 2 keywords.","lastModifiedDate":"2024-03-23"},{"lineNumber":153,"author":{"gitId":"damiwee"},"content":"* Questions that can be unsaved correspond to the reflection questions favourites list.","lastModifiedDate":"2024-03-23"},{"lineNumber":154,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":155,"author":{"gitId":"damiwee"},"content":"Example of usage:","lastModifiedDate":"2024-03-23"},{"lineNumber":156,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":157,"author":{"gitId":"damiwee"},"content":"reflect unsave 1","lastModifiedDate":"2024-03-23"},{"lineNumber":158,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":159,"author":{"gitId":"damiwee"},"content":"Expected outcome:","lastModifiedDate":"2024-03-23"},{"lineNumber":160,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":161,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-23"},{"lineNumber":162,"author":{"gitId":"damiwee"},"content":"Got it. Unsaved reflection question from favourites:","lastModifiedDate":"2024-03-23"},{"lineNumber":163,"author":{"gitId":"damiwee"},"content":"How do you overcome creative blocks or periods of stagnation?","lastModifiedDate":"2024-03-23"},{"lineNumber":164,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-23"},{"lineNumber":165,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":166,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":167,"author":{"gitId":"damiwee"},"content":"### View favourite reflection questions: `reflect list`","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"damiwee"},"content":"Allow the user to view favourite reflection questions that have been saved.","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"damiwee"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"damiwee"},"content":"reflect list","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"damiwee"},"content":"* The `reflect` and `list` keywords are case-sensitive. Use lower casing for these 2 keywords.  ","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"damiwee"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"damiwee"},"content":"reflect list","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"damiwee"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"damiwee"},"content":"Favourites list:","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"damiwee"},"content":"1. How do you overcome creative blocks or periods of stagnation?","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"damiwee"},"content":"2. How do you prioritize self-care and well-being in your daily life?","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"damiwee"},"content":"3. Reflect on a time when you took a creative risk. What did you learn from the experience?","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":192,"author":{"gitId":"damiwee"},"content":"### View reflection help menu: `reflect help`","lastModifiedDate":"2024-03-23"},{"lineNumber":193,"author":{"gitId":"damiwee"},"content":"Allows new users to check what commands are available for reflection feature and their formats.","lastModifiedDate":"2024-03-23"},{"lineNumber":194,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":195,"author":{"gitId":"damiwee"},"content":"Format:","lastModifiedDate":"2024-03-23"},{"lineNumber":196,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":197,"author":{"gitId":"damiwee"},"content":"reflect help","lastModifiedDate":"2024-03-23"},{"lineNumber":198,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":199,"author":{"gitId":"damiwee"},"content":"* The `reflect` and `help` keywords are case-sensitive. Use lower casing for these 2 keywords.","lastModifiedDate":"2024-03-23"},{"lineNumber":200,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":201,"author":{"gitId":"damiwee"},"content":"Example of usage:","lastModifiedDate":"2024-03-23"},{"lineNumber":202,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":203,"author":{"gitId":"damiwee"},"content":"reflect help","lastModifiedDate":"2024-03-23"},{"lineNumber":204,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":205,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":206,"author":{"gitId":"damiwee"},"content":"Expected outcome:","lastModifiedDate":"2024-03-23"},{"lineNumber":207,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":208,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-23"},{"lineNumber":209,"author":{"gitId":"damiwee"},"content":"Commands for reflection feature:","lastModifiedDate":"2024-03-23"},{"lineNumber":210,"author":{"gitId":"damiwee"},"content":"1. reflect get: Get 5 random reflection questions","lastModifiedDate":"2024-03-23"},{"lineNumber":211,"author":{"gitId":"damiwee"},"content":"2. reflect save \u003creflection_id\u003e: Save reflection question by id to favourites list","lastModifiedDate":"2024-03-23"},{"lineNumber":212,"author":{"gitId":"damiwee"},"content":"3. reflect unsave \u003creflection_id\u003e: Unsave reflection question by id from favourites list","lastModifiedDate":"2024-03-23"},{"lineNumber":213,"author":{"gitId":"damiwee"},"content":"4. reflect list: Retrieve questions from favourites list","lastModifiedDate":"2024-03-23"},{"lineNumber":214,"author":{"gitId":"damiwee"},"content":"5. reflect help: Get help menu for reflect commands","lastModifiedDate":"2024-03-23"},{"lineNumber":215,"author":{"gitId":"damiwee"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-23"},{"lineNumber":216,"author":{"gitId":"damiwee"},"content":"```","lastModifiedDate":"2024-03-23"},{"lineNumber":217,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":218,"author":{"gitId":"genexus85"},"content":"### Add a new habit: `habit add`","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"genexus85"},"content":"Allow the user to add new habits into the habit tracker.","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"genexus85"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"genexus85"},"content":"habit add [HABIT_DESCRIPTION]","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":226,"author":{"gitId":"genexus85"},"content":"* The `habit` and `add` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"genexus85"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":229,"author":{"gitId":"genexus85"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":231,"author":{"gitId":"genexus85"},"content":"habit add vacuum and mop the floor","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":233,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":234,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":235,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":236,"author":{"gitId":"genexus85"},"content":"Great! You have added a new habit:","lastModifiedDate":"2024-03-18"},{"lineNumber":237,"author":{"gitId":"genexus85"},"content":"  \u0027vacuum and mop the floor\u0027 was successfully added!","lastModifiedDate":"2024-03-18"},{"lineNumber":238,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":239,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":240,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":241,"author":{"gitId":"genexus85"},"content":"### List out all habits: `habit list`","lastModifiedDate":"2024-03-18"},{"lineNumber":242,"author":{"gitId":"genexus85"},"content":"Prints a list of all the habits that the user has added into the habit tracker.","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":244,"author":{"gitId":"genexus85"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":245,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":246,"author":{"gitId":"genexus85"},"content":"habit list","lastModifiedDate":"2024-03-18"},{"lineNumber":247,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":248,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":249,"author":{"gitId":"genexus85"},"content":"* The `habit` and `list` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":250,"author":{"gitId":"genexus85"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":251,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":252,"author":{"gitId":"genexus85"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":253,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":254,"author":{"gitId":"genexus85"},"content":"habit list","lastModifiedDate":"2024-03-18"},{"lineNumber":255,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":256,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":257,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":258,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":259,"author":{"gitId":"genexus85"},"content":"Here is the list of all your habits!","lastModifiedDate":"2024-03-18"},{"lineNumber":260,"author":{"gitId":"genexus85"},"content":"  1. [LOW] vacuum and mop the floor [count: 2]","lastModifiedDate":"2024-03-25"},{"lineNumber":261,"author":{"gitId":"genexus85"},"content":"  2. [LOW] complete leetcode daily question [count: 3]","lastModifiedDate":"2024-03-25"},{"lineNumber":262,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":263,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":264,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":265,"author":{"gitId":"genexus85"},"content":"### Update habit count after completing a habit: `habit update`","lastModifiedDate":"2024-03-18"},{"lineNumber":266,"author":{"gitId":"genexus85"},"content":"Allow the user to update the number of times they have completed a habit. The user will be able to increase the ","lastModifiedDate":"2024-03-18"},{"lineNumber":267,"author":{"gitId":"genexus85"},"content":"count after they have completed the habit during the day. If the user has accidentally increased the count, ","lastModifiedDate":"2024-03-18"},{"lineNumber":268,"author":{"gitId":"genexus85"},"content":"they can decrease the count too.","lastModifiedDate":"2024-03-18"},{"lineNumber":269,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":270,"author":{"gitId":"genexus85"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":271,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":272,"author":{"gitId":"genexus85"},"content":"habit update /id [HABIT_ID] /by [INCREMENT_COUNT]","lastModifiedDate":"2024-03-18"},{"lineNumber":273,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":274,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":275,"author":{"gitId":"genexus85"},"content":"* The `habit`, `list`, `id` and `by` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":276,"author":{"gitId":"genexus85"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":277,"author":{"gitId":"genexus85"},"content":"* `HABIT_ID` and `INCREMENT_COUNT` have to be numerical.","lastModifiedDate":"2024-03-25"},{"lineNumber":278,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":279,"author":{"gitId":"genexus85"},"content":"Example of usage (increasing count):","lastModifiedDate":"2024-03-18"},{"lineNumber":280,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":281,"author":{"gitId":"genexus85"},"content":"habit update /id 2 /by +1","lastModifiedDate":"2024-03-18"},{"lineNumber":282,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":283,"author":{"gitId":"genexus85"},"content":"* For increasing count, you can omit the positive sign `+` in front, and just type the command as `/by 1`","lastModifiedDate":"2024-03-18"},{"lineNumber":284,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":285,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":286,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":287,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":288,"author":{"gitId":"genexus85"},"content":"Good Job! You have completed your habit!","lastModifiedDate":"2024-03-18"},{"lineNumber":289,"author":{"gitId":"genexus85"},"content":"The count for your habit has been updated:","lastModifiedDate":"2024-03-18"},{"lineNumber":290,"author":{"gitId":"genexus85"},"content":"  2. [LOW] complete leetcode daily question [count: 4]","lastModifiedDate":"2024-03-25"},{"lineNumber":291,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":292,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":293,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":294,"author":{"gitId":"genexus85"},"content":"Example of usage (decreasing count):","lastModifiedDate":"2024-03-18"},{"lineNumber":295,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":296,"author":{"gitId":"genexus85"},"content":"habit update /id 2 /by -2","lastModifiedDate":"2024-03-18"},{"lineNumber":297,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":298,"author":{"gitId":"genexus85"},"content":"* For decreasing count, you must include a negative sign `-` in front of the count.","lastModifiedDate":"2024-03-18"},{"lineNumber":299,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":300,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":301,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":302,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":303,"author":{"gitId":"genexus85"},"content":"The count for your habit has been updated:","lastModifiedDate":"2024-03-18"},{"lineNumber":304,"author":{"gitId":"genexus85"},"content":"  2. [LOW] complete leetcode daily question [count: 2]","lastModifiedDate":"2024-03-25"},{"lineNumber":305,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":306,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":307,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":308,"author":{"gitId":"genexus85"},"content":"### Delete a habit: `habit delete`","lastModifiedDate":"2024-03-25"},{"lineNumber":309,"author":{"gitId":"genexus85"},"content":"Delete a habit from the habit tracker.","lastModifiedDate":"2024-03-25"},{"lineNumber":310,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":311,"author":{"gitId":"genexus85"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":312,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":313,"author":{"gitId":"genexus85"},"content":"habit delete /id \u003cHABIT_ID\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":314,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":315,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":316,"author":{"gitId":"genexus85"},"content":"* The `habit` and `delete` are case-sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":317,"author":{"gitId":"genexus85"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-25"},{"lineNumber":318,"author":{"gitId":"genexus85"},"content":"* `HABIT_ID` have to be numerical.","lastModifiedDate":"2024-03-25"},{"lineNumber":319,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":320,"author":{"gitId":"genexus85"},"content":"Example of usage:","lastModifiedDate":"2024-03-25"},{"lineNumber":321,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":322,"author":{"gitId":"genexus85"},"content":"habit delete /id 1","lastModifiedDate":"2024-03-25"},{"lineNumber":323,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":324,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-25"},{"lineNumber":325,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":326,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":327,"author":{"gitId":"genexus85"},"content":"Got it! I\u0027ve removed this habit:","lastModifiedDate":"2024-03-25"},{"lineNumber":328,"author":{"gitId":"genexus85"},"content":"   [LOW] vacuum and mop the floor [count: 2]","lastModifiedDate":"2024-03-25"},{"lineNumber":329,"author":{"gitId":"genexus85"},"content":"Now you have 1 habit left in the list.","lastModifiedDate":"2024-03-25"},{"lineNumber":330,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":331,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":332,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":333,"author":{"gitId":"genexus85"},"content":"### Set priority of habit: `habit set`","lastModifiedDate":"2024-03-25"},{"lineNumber":334,"author":{"gitId":"genexus85"},"content":"Set the priority of a habit (`HIGH`, `MED`, `LOW`). Priority of habits are initialised at LOW by default.","lastModifiedDate":"2024-03-25"},{"lineNumber":335,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":336,"author":{"gitId":"genexus85"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":337,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":338,"author":{"gitId":"genexus85"},"content":"habit set /id \u003cHABIT_ID\u003e /priority \u003cPRIORITY_LEVEL\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":339,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":340,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":341,"author":{"gitId":"genexus85"},"content":"* The `habit` and `set` are case-sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":342,"author":{"gitId":"genexus85"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-25"},{"lineNumber":343,"author":{"gitId":"genexus85"},"content":"* `HABIT_ID` have to be numerical.","lastModifiedDate":"2024-03-25"},{"lineNumber":344,"author":{"gitId":"genexus85"},"content":"* For `PRIORITY_LEVEL`, user can set as `HIGH`, `MED` OR `LOW` (not case-sensitive).","lastModifiedDate":"2024-03-25"},{"lineNumber":345,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":346,"author":{"gitId":"genexus85"},"content":"Example of usage:","lastModifiedDate":"2024-03-25"},{"lineNumber":347,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":348,"author":{"gitId":"genexus85"},"content":"habit set /id 1 /priority HIGH","lastModifiedDate":"2024-03-25"},{"lineNumber":349,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":350,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-25"},{"lineNumber":351,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":352,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":353,"author":{"gitId":"genexus85"},"content":"The priority for your habit has been updated:","lastModifiedDate":"2024-03-25"},{"lineNumber":354,"author":{"gitId":"genexus85"},"content":"  1. [HIGH] complete leetcode daily question [count: 4]","lastModifiedDate":"2024-03-25"},{"lineNumber":355,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":356,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":357,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":358,"author":{"gitId":"genexus85"},"content":"### Sort habit tracker list: `habit sort`","lastModifiedDate":"2024-03-25"},{"lineNumber":359,"author":{"gitId":"genexus85"},"content":"Sort the habits in the habit tracker list according to the habits\u0027 priority. ","lastModifiedDate":"2024-03-25"},{"lineNumber":360,"author":{"gitId":"genexus85"},"content":"Habits with higher priority will be placed higher than those with lower priority.","lastModifiedDate":"2024-03-25"},{"lineNumber":361,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":362,"author":{"gitId":"genexus85"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":363,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":364,"author":{"gitId":"genexus85"},"content":"habit sort","lastModifiedDate":"2024-03-25"},{"lineNumber":365,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":366,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":367,"author":{"gitId":"genexus85"},"content":"* The `habit` and `sort` are case-sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":368,"author":{"gitId":"genexus85"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-25"},{"lineNumber":369,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":370,"author":{"gitId":"genexus85"},"content":"Example of usage:","lastModifiedDate":"2024-03-25"},{"lineNumber":371,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":372,"author":{"gitId":"genexus85"},"content":"habit sort","lastModifiedDate":"2024-03-25"},{"lineNumber":373,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":374,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-25"},{"lineNumber":375,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":376,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":377,"author":{"gitId":"genexus85"},"content":"Habits have been sorted according to priority.","lastModifiedDate":"2024-03-25"},{"lineNumber":378,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":379,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":380,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":381,"author":{"gitId":"genexus85"},"content":"### View habit tracker help menu: `habit help`","lastModifiedDate":"2024-03-25"},{"lineNumber":382,"author":{"gitId":"genexus85"},"content":"Allows new users to check what commands are available for habit tracker feature and their formats.","lastModifiedDate":"2024-03-25"},{"lineNumber":383,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":384,"author":{"gitId":"genexus85"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":385,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":386,"author":{"gitId":"genexus85"},"content":"habit help","lastModifiedDate":"2024-03-25"},{"lineNumber":387,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":388,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":389,"author":{"gitId":"genexus85"},"content":"* The `habit` and `help` are case-sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":390,"author":{"gitId":"genexus85"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-25"},{"lineNumber":391,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":392,"author":{"gitId":"genexus85"},"content":"Example of usage:","lastModifiedDate":"2024-03-25"},{"lineNumber":393,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":394,"author":{"gitId":"genexus85"},"content":"habit help","lastModifiedDate":"2024-03-25"},{"lineNumber":395,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":396,"author":{"gitId":"genexus85"},"content":"Expected outcome:","lastModifiedDate":"2024-03-25"},{"lineNumber":397,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":398,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":399,"author":{"gitId":"genexus85"},"content":"Commands for habit tracker feature:","lastModifiedDate":"2024-03-25"},{"lineNumber":400,"author":{"gitId":"genexus85"},"content":"1. habit add \u003chabit_description\u003e: Add a new habit","lastModifiedDate":"2024-03-25"},{"lineNumber":401,"author":{"gitId":"genexus85"},"content":"2. habit list: List out all existing habits","lastModifiedDate":"2024-03-25"},{"lineNumber":402,"author":{"gitId":"genexus85"},"content":"3. habit update /id \u003chabit_ID\u003e /by \u003cincrement_count\u003e: Increase habit count after completing a habit","lastModifiedDate":"2024-03-25"},{"lineNumber":403,"author":{"gitId":"genexus85"},"content":"4. habit delete /id \u003chabit_ID\u003e: Delete a habit","lastModifiedDate":"2024-03-25"},{"lineNumber":404,"author":{"gitId":"genexus85"},"content":"5. habit set /id \u003chabit_ID\u003e /priority \u003cpriority_level\u003e: Set priority level for habits (HIGH, MED, LOW)","lastModifiedDate":"2024-03-25"},{"lineNumber":405,"author":{"gitId":"genexus85"},"content":"6. habit sort: Sort habit list according to priority level","lastModifiedDate":"2024-03-25"},{"lineNumber":406,"author":{"gitId":"genexus85"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":407,"author":{"gitId":"genexus85"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":408,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":409,"author":{"gitId":"OKW32"},"content":"### Add a new sleep cycle: `sleep add`","lastModifiedDate":"2024-03-18"},{"lineNumber":410,"author":{"gitId":"OKW32"},"content":"Allow the user to add new sleep Cycles into the sleep tracker.","lastModifiedDate":"2024-03-18"},{"lineNumber":411,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":412,"author":{"gitId":"OKW32"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":413,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":414,"author":{"gitId":"OKW32"},"content":"sleep add [HOURS_SLEPT] /date [DATE_SLEPT]","lastModifiedDate":"2024-03-18"},{"lineNumber":415,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":416,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":417,"author":{"gitId":"OKW32"},"content":"* The `sleep`, `/date` and `add` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":418,"author":{"gitId":"OKW32"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":419,"author":{"gitId":"OKW32"},"content":"* `DATE_SLEPT` must be of format dd/MM/yyyy","lastModifiedDate":"2024-03-25"},{"lineNumber":420,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":421,"author":{"gitId":"OKW32"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":422,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":423,"author":{"gitId":"OKW32"},"content":"sleep add 7 /date 18/03/2024","lastModifiedDate":"2024-03-25"},{"lineNumber":424,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":425,"author":{"gitId":"OKW32"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":426,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":427,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":428,"author":{"gitId":"OKW32"},"content":"--- SleepCycle for 18/03/2024 has been added ---","lastModifiedDate":"2024-03-25"},{"lineNumber":429,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":430,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":431,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":432,"author":{"gitId":"OKW32"},"content":"### List out all sleep cycles: `sleep list`","lastModifiedDate":"2024-03-18"},{"lineNumber":433,"author":{"gitId":"OKW32"},"content":"Prints a list of all the sleep cycles that the user has added into the sleep tracker.","lastModifiedDate":"2024-03-18"},{"lineNumber":434,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":435,"author":{"gitId":"OKW32"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":436,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":437,"author":{"gitId":"OKW32"},"content":"sleep list","lastModifiedDate":"2024-03-18"},{"lineNumber":438,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":439,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":440,"author":{"gitId":"OKW32"},"content":"* The `sleep` and `list` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":441,"author":{"gitId":"OKW32"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":442,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":443,"author":{"gitId":"OKW32"},"content":"Example of usage:","lastModifiedDate":"2024-03-18"},{"lineNumber":444,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":445,"author":{"gitId":"OKW32"},"content":"sleep list","lastModifiedDate":"2024-03-18"},{"lineNumber":446,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":447,"author":{"gitId":"OKW32"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":448,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":449,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":450,"author":{"gitId":"OKW32"},"content":"Total hrs slept: 15.0","lastModifiedDate":"2024-03-18"},{"lineNumber":451,"author":{"gitId":"OKW32"},"content":"1. 27/01/2012: 7.0","lastModifiedDate":"2024-03-25"},{"lineNumber":452,"author":{"gitId":"OKW32"},"content":"2. 30/01/2012: 8.0","lastModifiedDate":"2024-03-25"},{"lineNumber":453,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":454,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-18"},{"lineNumber":455,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":456,"author":{"gitId":"OKW32"},"content":"### Get hours slept on specific date: `sleep get`","lastModifiedDate":"2024-03-25"},{"lineNumber":457,"author":{"gitId":"OKW32"},"content":"Prints number of hours slept on specific date.","lastModifiedDate":"2024-03-25"},{"lineNumber":458,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":459,"author":{"gitId":"OKW32"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":460,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":461,"author":{"gitId":"OKW32"},"content":"sleep get [DATE_OF_SLEEP]","lastModifiedDate":"2024-03-25"},{"lineNumber":462,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":463,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":464,"author":{"gitId":"OKW32"},"content":"* The `sleep` and `get` are case-sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":465,"author":{"gitId":"OKW32"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-25"},{"lineNumber":466,"author":{"gitId":"OKW32"},"content":"* `DATE_OF_SLEEP` must be of format dd/MM/yyyy","lastModifiedDate":"2024-03-25"},{"lineNumber":467,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":468,"author":{"gitId":"OKW32"},"content":"Example of usage:","lastModifiedDate":"2024-03-25"},{"lineNumber":469,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":470,"author":{"gitId":"OKW32"},"content":"sleep get 27/01/2012","lastModifiedDate":"2024-03-25"},{"lineNumber":471,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":472,"author":{"gitId":"OKW32"},"content":"Expected outcome:","lastModifiedDate":"2024-03-25"},{"lineNumber":473,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":474,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":475,"author":{"gitId":"OKW32"},"content":"Hours slept on 27/01/2012: 7.0","lastModifiedDate":"2024-03-25"},{"lineNumber":476,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":477,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":478,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":479,"author":{"gitId":"OKW32"},"content":"### Update hours slept on specific date: `sleep update`","lastModifiedDate":"2024-03-25"},{"lineNumber":480,"author":{"gitId":"OKW32"},"content":"Updates number of hours slept on specfic date.","lastModifiedDate":"2024-03-25"},{"lineNumber":481,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":482,"author":{"gitId":"OKW32"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":483,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":484,"author":{"gitId":"OKW32"},"content":"sleep update [DATE_OF_SLEEP] /new [HOURS_OF_SLEEP]","lastModifiedDate":"2024-03-25"},{"lineNumber":485,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":486,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":487,"author":{"gitId":"OKW32"},"content":"* The `sleep`, `update` and `/new` are case-sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":488,"author":{"gitId":"OKW32"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-25"},{"lineNumber":489,"author":{"gitId":"OKW32"},"content":"* `DATE_OF_SLEEP` must be of format dd/MM/yyyy","lastModifiedDate":"2024-03-25"},{"lineNumber":490,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":491,"author":{"gitId":"OKW32"},"content":"Example of usage:","lastModifiedDate":"2024-03-25"},{"lineNumber":492,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":493,"author":{"gitId":"OKW32"},"content":"sleep update 27/01/2012 /new 9","lastModifiedDate":"2024-03-25"},{"lineNumber":494,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":495,"author":{"gitId":"OKW32"},"content":"Expected outcome:","lastModifiedDate":"2024-03-25"},{"lineNumber":496,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":497,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":498,"author":{"gitId":"OKW32"},"content":"Hours of sleep for 27/01/2012 has been updated from 7.0 to 9.0","lastModifiedDate":"2024-03-25"},{"lineNumber":499,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":500,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":501,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":502,"author":{"gitId":"OKW32"},"content":"### Delete sleep cycles: `sleep delete`","lastModifiedDate":"2024-03-25"},{"lineNumber":503,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":504,"author":{"gitId":"OKW32"},"content":"#### Delete Sleep Cycle of a specific date:","lastModifiedDate":"2024-03-25"},{"lineNumber":505,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":506,"author":{"gitId":"OKW32"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":507,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":508,"author":{"gitId":"OKW32"},"content":"sleep delete /date [DATE_OF_SLEEP]","lastModifiedDate":"2024-03-25"},{"lineNumber":509,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":510,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":511,"author":{"gitId":"OKW32"},"content":"* The `sleep`, `delete` and `/date` are case-sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":512,"author":{"gitId":"OKW32"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-25"},{"lineNumber":513,"author":{"gitId":"OKW32"},"content":"* `DATE_OF_SLEEP` must be of format dd/MM/yyyy","lastModifiedDate":"2024-03-25"},{"lineNumber":514,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":515,"author":{"gitId":"OKW32"},"content":"Example of usage:","lastModifiedDate":"2024-03-25"},{"lineNumber":516,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":517,"author":{"gitId":"OKW32"},"content":"sleep delete /date 27/01/2012","lastModifiedDate":"2024-03-25"},{"lineNumber":518,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":519,"author":{"gitId":"OKW32"},"content":"Expected outcome:","lastModifiedDate":"2024-03-25"},{"lineNumber":520,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":521,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":522,"author":{"gitId":"OKW32"},"content":"Sleep cycle for 27/01/2012 has been removed from list","lastModifiedDate":"2024-03-25"},{"lineNumber":523,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":524,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":525,"author":{"gitId":"OKW32"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":526,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":527,"author":{"gitId":"OKW32"},"content":"#### Delete Sleep Cycles before a specific date:","lastModifiedDate":"2024-03-25"},{"lineNumber":528,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":529,"author":{"gitId":"OKW32"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":530,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":531,"author":{"gitId":"OKW32"},"content":"sleep delete /before [DATE_OF_SLEEP]","lastModifiedDate":"2024-03-25"},{"lineNumber":532,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":533,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":534,"author":{"gitId":"OKW32"},"content":"* The `sleep`, `delete` and `/before` are case-sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":535,"author":{"gitId":"OKW32"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-25"},{"lineNumber":536,"author":{"gitId":"OKW32"},"content":"* `DATE_OF_SLEEP` must be of format dd/MM/yyyy","lastModifiedDate":"2024-03-25"},{"lineNumber":537,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":538,"author":{"gitId":"OKW32"},"content":"Example of usage:","lastModifiedDate":"2024-03-25"},{"lineNumber":539,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":540,"author":{"gitId":"OKW32"},"content":"sleep delete /date 27/01/2012","lastModifiedDate":"2024-03-25"},{"lineNumber":541,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":542,"author":{"gitId":"OKW32"},"content":"Expected outcome:","lastModifiedDate":"2024-03-25"},{"lineNumber":543,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":544,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":545,"author":{"gitId":"OKW32"},"content":"A total of 2 sleep cycles have been deleted","lastModifiedDate":"2024-03-25"},{"lineNumber":546,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":547,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":548,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":549,"author":{"gitId":"OKW32"},"content":"#### Delete Sleep Cycles within a range of dates:","lastModifiedDate":"2024-03-25"},{"lineNumber":550,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":551,"author":{"gitId":"OKW32"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":552,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":553,"author":{"gitId":"OKW32"},"content":"sleep delete /from [START_DATE] /to [END_DATE]","lastModifiedDate":"2024-03-25"},{"lineNumber":554,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":555,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":556,"author":{"gitId":"OKW32"},"content":"* The `sleep`, `delete`, `/from` and `/to` are case-sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":557,"author":{"gitId":"OKW32"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-25"},{"lineNumber":558,"author":{"gitId":"OKW32"},"content":"* `START_DATE` and `END_DATE` must be of format dd/MM/yyyy","lastModifiedDate":"2024-03-25"},{"lineNumber":559,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":560,"author":{"gitId":"OKW32"},"content":"Example of usage:","lastModifiedDate":"2024-03-25"},{"lineNumber":561,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":562,"author":{"gitId":"OKW32"},"content":"sleep delete /from 27/01/2012 /to 27/02/2012","lastModifiedDate":"2024-03-25"},{"lineNumber":563,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":564,"author":{"gitId":"OKW32"},"content":"Expected outcome:","lastModifiedDate":"2024-03-25"},{"lineNumber":565,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":566,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":567,"author":{"gitId":"OKW32"},"content":"A total of 5 sleep cycles have been deleted","lastModifiedDate":"2024-03-25"},{"lineNumber":568,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":569,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":570,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":571,"author":{"gitId":"OKW32"},"content":"### Save sleep cycles: `sleep save`","lastModifiedDate":"2024-03-25"},{"lineNumber":572,"author":{"gitId":"OKW32"},"content":"Allow user to save sleep cycles in a text file located in `FILE_PATH: data/sleep.txt`","lastModifiedDate":"2024-03-25"},{"lineNumber":573,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":574,"author":{"gitId":"OKW32"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":575,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":576,"author":{"gitId":"OKW32"},"content":"sleep save","lastModifiedDate":"2024-03-25"},{"lineNumber":577,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":578,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":579,"author":{"gitId":"OKW32"},"content":"* The `sleep` and `save` are case-sensitive.","lastModifiedDate":"2024-03-25"},{"lineNumber":580,"author":{"gitId":"OKW32"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-25"},{"lineNumber":581,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":582,"author":{"gitId":"OKW32"},"content":"Example of usage:","lastModifiedDate":"2024-03-25"},{"lineNumber":583,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":584,"author":{"gitId":"OKW32"},"content":"sleep save","lastModifiedDate":"2024-03-25"},{"lineNumber":585,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":586,"author":{"gitId":"OKW32"},"content":"Expected outcome:","lastModifiedDate":"2024-03-25"},{"lineNumber":587,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":588,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":589,"author":{"gitId":"OKW32"},"content":"Saved list to storage file","lastModifiedDate":"2024-03-25"},{"lineNumber":590,"author":{"gitId":"OKW32"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":591,"author":{"gitId":"OKW32"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":592,"author":{"gitId":"OKW32"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":593,"author":{"gitId":"JingHaoooo"},"content":"### Switch focus timer mode: `focus switch`","lastModifiedDate":"2024-03-24"},{"lineNumber":594,"author":{"gitId":"JingHaoooo"},"content":"Focus timer offers 2 kind of timer for the user. Using `focus switch` command allows user to choose","lastModifiedDate":"2024-03-24"},{"lineNumber":595,"author":{"gitId":"JingHaoooo"},"content":"between count up timer and count down timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":596,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":597,"author":{"gitId":"JingHaoooo"},"content":"Format:","lastModifiedDate":"2024-03-24"},{"lineNumber":598,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":599,"author":{"gitId":"JingHaoooo"},"content":"focus switch","lastModifiedDate":"2024-03-24"},{"lineNumber":600,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":601,"author":{"gitId":"JingHaoooo"},"content":"* The `focus` and `switch` are case-sensitive.","lastModifiedDate":"2024-03-24"},{"lineNumber":602,"author":{"gitId":"JingHaoooo"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-24"},{"lineNumber":603,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":604,"author":{"gitId":"JingHaoooo"},"content":"Expected outcome:","lastModifiedDate":"2024-03-24"},{"lineNumber":605,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":606,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":607,"author":{"gitId":"JingHaoooo"},"content":"Switched to Count down timer","lastModifiedDate":"2024-03-24"},{"lineNumber":608,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":609,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":610,"author":{"gitId":"JingHaoooo"},"content":"* Outcome depends on the current timer mode.","lastModifiedDate":"2024-03-24"},{"lineNumber":611,"author":{"gitId":"JingHaoooo"},"content":"* `focus switch` will be disable if a timer is currently running.","lastModifiedDate":"2024-03-24"},{"lineNumber":612,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":613,"author":{"gitId":"JingHaoooo"},"content":"### Start a new focus timer: `focus start`","lastModifiedDate":"2024-03-18"},{"lineNumber":614,"author":{"gitId":"JingHaoooo"},"content":"Allow the user to start a new focus timer session. The user will be able","lastModifiedDate":"2024-03-18"},{"lineNumber":615,"author":{"gitId":"JingHaoooo"},"content":"to start the timer whenever they want and the application will keep track of the time.","lastModifiedDate":"2024-03-18"},{"lineNumber":616,"author":{"gitId":"JingHaoooo"},"content":"In addition, only 1 timer will run at a time, thus multiple uses of `focus start` is not allowed.","lastModifiedDate":"2024-03-18"},{"lineNumber":617,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":618,"author":{"gitId":"JingHaoooo"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":619,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":620,"author":{"gitId":"JingHaoooo"},"content":"focus start","lastModifiedDate":"2024-03-18"},{"lineNumber":621,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":622,"author":{"gitId":"JingHaoooo"},"content":"* The `focus` and `start` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":623,"author":{"gitId":"JingHaoooo"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":624,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":625,"author":{"gitId":"JingHaoooo"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":626,"author":{"gitId":"JingHaoooo"},"content":"* Count up timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":627,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":628,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":629,"author":{"gitId":"JingHaoooo"},"content":"Your session has started. Time to grind!","lastModifiedDate":"2024-03-18"},{"lineNumber":630,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":631,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":632,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":633,"author":{"gitId":"JingHaoooo"},"content":"* Count down timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":634,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":635,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":636,"author":{"gitId":"JingHaoooo"},"content":"Countdown timer started! ","lastModifiedDate":"2024-03-24"},{"lineNumber":637,"author":{"gitId":"JingHaoooo"},"content":"Duration set: 1 minute(s) 0 second(s)","lastModifiedDate":"2024-03-24"},{"lineNumber":638,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":639,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":640,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":641,"author":{"gitId":"JingHaoooo"},"content":"### Stop the current focus timer: `focus stop`","lastModifiedDate":"2024-03-18"},{"lineNumber":642,"author":{"gitId":"JingHaoooo"},"content":"\u003e [!NOTE]","lastModifiedDate":"2024-03-24"},{"lineNumber":643,"author":{"gitId":"JingHaoooo"},"content":"\u003e Countdown timer will automatically stop when the duration expires.","lastModifiedDate":"2024-03-24"},{"lineNumber":644,"author":{"gitId":"JingHaoooo"},"content":"\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":645,"author":{"gitId":"JingHaoooo"},"content":"Allow users to stop a timer that is currently running. The users will be able to see the total","lastModifiedDate":"2024-03-18"},{"lineNumber":646,"author":{"gitId":"JingHaoooo"},"content":"time elapsed upon a successful stop.","lastModifiedDate":"2024-03-18"},{"lineNumber":647,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":648,"author":{"gitId":"JingHaoooo"},"content":"Format:","lastModifiedDate":"2024-03-18"},{"lineNumber":649,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":650,"author":{"gitId":"JingHaoooo"},"content":"focus stop","lastModifiedDate":"2024-03-18"},{"lineNumber":651,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":652,"author":{"gitId":"JingHaoooo"},"content":"* The `focus` and `stop` are case-sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":653,"author":{"gitId":"JingHaoooo"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-18"},{"lineNumber":654,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":655,"author":{"gitId":"JingHaoooo"},"content":"Expected outcome:","lastModifiedDate":"2024-03-18"},{"lineNumber":656,"author":{"gitId":"JingHaoooo"},"content":"* Count up timer","lastModifiedDate":"2024-03-24"},{"lineNumber":657,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":658,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":659,"author":{"gitId":"JingHaoooo"},"content":"Your focus session has ended.","lastModifiedDate":"2024-03-18"},{"lineNumber":660,"author":{"gitId":"JingHaoooo"},"content":" Time spent: X hours, X minutes, XX seconds","lastModifiedDate":"2024-03-18"},{"lineNumber":661,"author":{"gitId":"JingHaoooo"},"content":"To start a new session, use ‘focustimer start’ ","lastModifiedDate":"2024-03-18"},{"lineNumber":662,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-18"},{"lineNumber":663,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-18"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":665,"author":{"gitId":"JingHaoooo"},"content":"* Count down timer","lastModifiedDate":"2024-03-24"},{"lineNumber":666,"author":{"gitId":"JingHaoooo"},"content":"* Timer will automatically stop if the duration expires. However, users will still be able to stop it manually","lastModifiedDate":"2024-03-24"},{"lineNumber":667,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":668,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":669,"author":{"gitId":"JingHaoooo"},"content":"5 seconds left","lastModifiedDate":"2024-03-24"},{"lineNumber":670,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":671,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":672,"author":{"gitId":"JingHaoooo"},"content":"4 seconds left","lastModifiedDate":"2024-03-24"},{"lineNumber":673,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":674,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":675,"author":{"gitId":"JingHaoooo"},"content":"3 seconds left","lastModifiedDate":"2024-03-24"},{"lineNumber":676,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":677,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":678,"author":{"gitId":"JingHaoooo"},"content":"2 seconds left","lastModifiedDate":"2024-03-24"},{"lineNumber":679,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":680,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":681,"author":{"gitId":"JingHaoooo"},"content":"1 seconds left","lastModifiedDate":"2024-03-24"},{"lineNumber":682,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":683,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":684,"author":{"gitId":"JingHaoooo"},"content":"Count down timer completed!","lastModifiedDate":"2024-03-24"},{"lineNumber":685,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":686,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":687,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":688,"author":{"gitId":"JingHaoooo"},"content":"### Pause the current focus timer: `focus pause`","lastModifiedDate":"2024-03-24"},{"lineNumber":689,"author":{"gitId":"JingHaoooo"},"content":"Allow users to pause the timer momentarily while the timer is running.","lastModifiedDate":"2024-03-24"},{"lineNumber":690,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":691,"author":{"gitId":"JingHaoooo"},"content":"Format:","lastModifiedDate":"2024-03-24"},{"lineNumber":692,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":693,"author":{"gitId":"JingHaoooo"},"content":"focus pause","lastModifiedDate":"2024-03-24"},{"lineNumber":694,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":695,"author":{"gitId":"JingHaoooo"},"content":"* The `focus` and `pause` are case-sensitive.","lastModifiedDate":"2024-03-24"},{"lineNumber":696,"author":{"gitId":"JingHaoooo"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-24"},{"lineNumber":697,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":698,"author":{"gitId":"JingHaoooo"},"content":"Expected outcome:","lastModifiedDate":"2024-03-24"},{"lineNumber":699,"author":{"gitId":"JingHaoooo"},"content":"* Count up timer","lastModifiedDate":"2024-03-24"},{"lineNumber":700,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":701,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":702,"author":{"gitId":"JingHaoooo"},"content":"Count up timer paused.","lastModifiedDate":"2024-03-24"},{"lineNumber":703,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":704,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":705,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":706,"author":{"gitId":"JingHaoooo"},"content":"* Count down timer","lastModifiedDate":"2024-03-24"},{"lineNumber":707,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":708,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":709,"author":{"gitId":"JingHaoooo"},"content":"Timer paused. ","lastModifiedDate":"2024-03-24"},{"lineNumber":710,"author":{"gitId":"JingHaoooo"},"content":"Remaining time: 0 minutes 56 seconds","lastModifiedDate":"2024-03-24"},{"lineNumber":711,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":712,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":713,"author":{"gitId":"JingHaoooo"},"content":"### Resume the current focus timer: `focus resume`","lastModifiedDate":"2024-03-24"},{"lineNumber":714,"author":{"gitId":"JingHaoooo"},"content":"Allow users to resume the paused timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":715,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":716,"author":{"gitId":"JingHaoooo"},"content":"Format:","lastModifiedDate":"2024-03-24"},{"lineNumber":717,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":718,"author":{"gitId":"JingHaoooo"},"content":"focus resume","lastModifiedDate":"2024-03-24"},{"lineNumber":719,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":720,"author":{"gitId":"JingHaoooo"},"content":"* The `focus` and `resume` are case-sensitive.","lastModifiedDate":"2024-03-24"},{"lineNumber":721,"author":{"gitId":"JingHaoooo"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-24"},{"lineNumber":722,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":723,"author":{"gitId":"JingHaoooo"},"content":"Expected outcome:","lastModifiedDate":"2024-03-24"},{"lineNumber":724,"author":{"gitId":"JingHaoooo"},"content":"* Count up timer","lastModifiedDate":"2024-03-24"},{"lineNumber":725,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":726,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":727,"author":{"gitId":"JingHaoooo"},"content":"Count up timer resumed","lastModifiedDate":"2024-03-24"},{"lineNumber":728,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":729,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":730,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":731,"author":{"gitId":"JingHaoooo"},"content":"* Count down timer","lastModifiedDate":"2024-03-24"},{"lineNumber":732,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":733,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":734,"author":{"gitId":"JingHaoooo"},"content":"Countdown timer resumed.","lastModifiedDate":"2024-03-24"},{"lineNumber":735,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":736,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":737,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":738,"author":{"gitId":"JingHaoooo"},"content":"### Check time for focus timer: `focus check`","lastModifiedDate":"2024-03-24"},{"lineNumber":739,"author":{"gitId":"JingHaoooo"},"content":"Allow users to check the total time elapsed or total time remaining, depending on the mode of the timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":740,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":741,"author":{"gitId":"JingHaoooo"},"content":"Format:","lastModifiedDate":"2024-03-24"},{"lineNumber":742,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":743,"author":{"gitId":"JingHaoooo"},"content":"focus check","lastModifiedDate":"2024-03-24"},{"lineNumber":744,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":745,"author":{"gitId":"JingHaoooo"},"content":"* The `focus` and `check` are case-sensitive.","lastModifiedDate":"2024-03-24"},{"lineNumber":746,"author":{"gitId":"JingHaoooo"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-24"},{"lineNumber":747,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":748,"author":{"gitId":"JingHaoooo"},"content":"Expected outcome:","lastModifiedDate":"2024-03-24"},{"lineNumber":749,"author":{"gitId":"JingHaoooo"},"content":"* Count up timer","lastModifiedDate":"2024-03-24"},{"lineNumber":750,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":751,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":752,"author":{"gitId":"JingHaoooo"},"content":"Total time elapsed: ","lastModifiedDate":"2024-03-24"},{"lineNumber":753,"author":{"gitId":"JingHaoooo"},"content":"0 hours, 0 minutes, 8 seconds","lastModifiedDate":"2024-03-24"},{"lineNumber":754,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":755,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":756,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":757,"author":{"gitId":"JingHaoooo"},"content":"* Count down timer","lastModifiedDate":"2024-03-24"},{"lineNumber":758,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":759,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":760,"author":{"gitId":"JingHaoooo"},"content":"Remaining time: ","lastModifiedDate":"2024-03-24"},{"lineNumber":761,"author":{"gitId":"JingHaoooo"},"content":"0 minutes 54 seconds left.","lastModifiedDate":"2024-03-24"},{"lineNumber":762,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":763,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":764,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":765,"author":{"gitId":"JingHaoooo"},"content":"### Set focus timer duration: `focus set`","lastModifiedDate":"2024-03-24"},{"lineNumber":766,"author":{"gitId":"JingHaoooo"},"content":"\u003e Using `focus set` command only affects count down timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":767,"author":{"gitId":"JingHaoooo"},"content":"\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":768,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":769,"author":{"gitId":"JingHaoooo"},"content":"Allow users to set the desired countdown timer duration for the session.","lastModifiedDate":"2024-03-24"},{"lineNumber":770,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":771,"author":{"gitId":"JingHaoooo"},"content":"Format:","lastModifiedDate":"2024-03-24"},{"lineNumber":772,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":773,"author":{"gitId":"JingHaoooo"},"content":"focus set [minutes]","lastModifiedDate":"2024-03-24"},{"lineNumber":774,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":775,"author":{"gitId":"JingHaoooo"},"content":"* The `focus` and `set` are case-sensitive.","lastModifiedDate":"2024-03-24"},{"lineNumber":776,"author":{"gitId":"JingHaoooo"},"content":"* Use lower casing for this command.","lastModifiedDate":"2024-03-24"},{"lineNumber":777,"author":{"gitId":"JingHaoooo"},"content":"* Input `minutes` must be in numerical form and can be more than 60.","lastModifiedDate":"2024-03-24"},{"lineNumber":778,"author":{"gitId":"JingHaoooo"},"content":"* Example: *120 minutes implies 2 hours*","lastModifiedDate":"2024-03-24"},{"lineNumber":779,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":780,"author":{"gitId":"JingHaoooo"},"content":"Example of usage:","lastModifiedDate":"2024-03-24"},{"lineNumber":781,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":782,"author":{"gitId":"JingHaoooo"},"content":"focus set 10","lastModifiedDate":"2024-03-24"},{"lineNumber":783,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":784,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":785,"author":{"gitId":"JingHaoooo"},"content":"Expected outcome:","lastModifiedDate":"2024-03-24"},{"lineNumber":786,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":787,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":788,"author":{"gitId":"JingHaoooo"},"content":"Countdown duration has been set to 10 minute(s)","lastModifiedDate":"2024-03-24"},{"lineNumber":789,"author":{"gitId":"JingHaoooo"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":790,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":791,"author":{"gitId":"JingHaoooo"},"content":"~~~","lastModifiedDate":"2024-03-24"},{"lineNumber":792,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":793,"author":{"gitId":"Daviancold"},"content":"### Get a list of exercises: `fitness get`","lastModifiedDate":"2024-03-24"},{"lineNumber":794,"author":{"gitId":"Daviancold"},"content":"Prints a list of exercises. If no parameters are specified, 5 different exercises from 5 different types of exercises ","lastModifiedDate":"2024-03-26"},{"lineNumber":795,"author":{"gitId":"Daviancold"},"content":"targeting different body parts. If the exercise type is specified, only exercises matching that type will be shown.","lastModifiedDate":"2024-03-26"},{"lineNumber":796,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":797,"author":{"gitId":"Daviancold"},"content":"Format:","lastModifiedDate":"2024-03-24"},{"lineNumber":798,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-24"},{"lineNumber":799,"author":{"gitId":"Daviancold"},"content":"fitness get [EXERCISE_TYPE]","lastModifiedDate":"2024-03-26"},{"lineNumber":800,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-24"},{"lineNumber":801,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":802,"author":{"gitId":"Daviancold"},"content":"* The `fitness` and `get` are case-sensitive. Use lower casing.","lastModifiedDate":"2024-03-26"},{"lineNumber":803,"author":{"gitId":"Daviancold"},"content":"* Running the command with no parameters will generate different exercises with each repeated command, but there should be one exercise from","lastModifiedDate":"2024-03-26"},{"lineNumber":804,"author":{"gitId":"Daviancold"},"content":"  each type","lastModifiedDate":"2024-03-24"},{"lineNumber":805,"author":{"gitId":"Daviancold"},"content":"* The `[EXERCISE_TYPE]` parameter is optional, and only supports the following types:","lastModifiedDate":"2024-03-26"},{"lineNumber":806,"author":{"gitId":"Daviancold"},"content":"  * Arms, Chest, Abs, Back, Legs (Not Case Sensitive)","lastModifiedDate":"2024-03-26"},{"lineNumber":807,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":808,"author":{"gitId":"Daviancold"},"content":"Example of usage (getting exercises of a certain type):","lastModifiedDate":"2024-03-30"},{"lineNumber":809,"author":{"gitId":"Daviancold"},"content":"~~~","lastModifiedDate":"2024-03-26"},{"lineNumber":810,"author":{"gitId":"Daviancold"},"content":"fitness get","lastModifiedDate":"2024-03-26"},{"lineNumber":811,"author":{"gitId":"Daviancold"},"content":"~~~","lastModifiedDate":"2024-03-26"},{"lineNumber":812,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":813,"author":{"gitId":"Daviancold"},"content":"Expected outcome:","lastModifiedDate":"2024-03-24"},{"lineNumber":814,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-24"},{"lineNumber":815,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":816,"author":{"gitId":"Daviancold"},"content":"These are some of the exercises you can do! LETS GET STRONK MY G","lastModifiedDate":"2024-03-26"},{"lineNumber":817,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":818,"author":{"gitId":"Daviancold"},"content":"1. Arms: Skullcrushers, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-26"},{"lineNumber":819,"author":{"gitId":"Daviancold"},"content":"2. Chest: Cable Flies, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-26"},{"lineNumber":820,"author":{"gitId":"Daviancold"},"content":"3. Abs: Crunches, 5 sets \u0026 20 reps","lastModifiedDate":"2024-03-24"},{"lineNumber":821,"author":{"gitId":"Daviancold"},"content":"4. Back: Lateral Rows, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-26"},{"lineNumber":822,"author":{"gitId":"Daviancold"},"content":"5. Legs: Leg Press, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-24"},{"lineNumber":823,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":824,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-24"},{"lineNumber":825,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-24"},{"lineNumber":826,"author":{"gitId":"Daviancold"},"content":"Example of usage:","lastModifiedDate":"2024-03-26"},{"lineNumber":827,"author":{"gitId":"Daviancold"},"content":"~~~","lastModifiedDate":"2024-03-26"},{"lineNumber":828,"author":{"gitId":"Daviancold"},"content":"fitness get arms","lastModifiedDate":"2024-03-26"},{"lineNumber":829,"author":{"gitId":"Daviancold"},"content":"~~~","lastModifiedDate":"2024-03-26"},{"lineNumber":830,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":831,"author":{"gitId":"Daviancold"},"content":"Expected outcome:","lastModifiedDate":"2024-03-26"},{"lineNumber":832,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-26"},{"lineNumber":833,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-26"},{"lineNumber":834,"author":{"gitId":"Daviancold"},"content":"Here are the Arms exercises as requested!","lastModifiedDate":"2024-03-26"},{"lineNumber":835,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":836,"author":{"gitId":"Daviancold"},"content":"1. Arms: Cable Triceps Push down, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-26"},{"lineNumber":837,"author":{"gitId":"Daviancold"},"content":"2. Arms: Barbell Curls, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-26"},{"lineNumber":838,"author":{"gitId":"Daviancold"},"content":"3. Arms: Preacher Curls, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-26"},{"lineNumber":839,"author":{"gitId":"Daviancold"},"content":"4. Arms: Skullcrushers, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-26"},{"lineNumber":840,"author":{"gitId":"Daviancold"},"content":"5. Arms: Lateral Raises, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-26"},{"lineNumber":841,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-26"},{"lineNumber":842,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":843,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-26"},{"lineNumber":844,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":846,"author":{"gitId":"Daviancold"},"content":"### Add exercises to the list: `fitness add`","lastModifiedDate":"2024-03-25"},{"lineNumber":847,"author":{"gitId":"Daviancold"},"content":"Allows the user to add their own exercises to the list of exercises.","lastModifiedDate":"2024-03-30"},{"lineNumber":848,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":849,"author":{"gitId":"Daviancold"},"content":"Format:","lastModifiedDate":"2024-03-25"},{"lineNumber":850,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":851,"author":{"gitId":"Daviancold"},"content":"fitness add [EXERCISE_TYPE], [EXERCISE_NAME], [NUMBER_OF_SETS], [NUMBER_OF_REPS]","lastModifiedDate":"2024-03-25"},{"lineNumber":852,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":853,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":854,"author":{"gitId":"Daviancold"},"content":"* The `fitness` and `add` are case-sensitive.","lastModifiedDate":"2024-03-30"},{"lineNumber":855,"author":{"gitId":"Daviancold"},"content":"* Use of comma between each parameter is required.","lastModifiedDate":"2024-03-30"},{"lineNumber":856,"author":{"gitId":"Daviancold"},"content":"* The `[EXERCISE_TYPE]` parameter only supports the following types:","lastModifiedDate":"2024-03-26"},{"lineNumber":857,"author":{"gitId":"Daviancold"},"content":"  * Arms, Chest, Abs, Back, Legs (Not Case Sensitive)","lastModifiedDate":"2024-03-26"},{"lineNumber":858,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":859,"author":{"gitId":"Daviancold"},"content":"Example of usage:","lastModifiedDate":"2024-03-30"},{"lineNumber":860,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":861,"author":{"gitId":"Daviancold"},"content":"fitness add Arms, Tricep Dips, 8, 10","lastModifiedDate":"2024-03-25"},{"lineNumber":862,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":863,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":864,"author":{"gitId":"Daviancold"},"content":"Expected outcome:","lastModifiedDate":"2024-03-25"},{"lineNumber":865,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":866,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":867,"author":{"gitId":"Daviancold"},"content":"I have added the following exercise into our list!","lastModifiedDate":"2024-03-25"},{"lineNumber":868,"author":{"gitId":"Daviancold"},"content":"Arms: Tricep Dips, 8 sets \u0026 10 reps","lastModifiedDate":"2024-03-25"},{"lineNumber":869,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-25"},{"lineNumber":870,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-25"},{"lineNumber":871,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":872,"author":{"gitId":"Daviancold"},"content":"### Delete exercises from the list: `fitness delete`","lastModifiedDate":"2024-03-30"},{"lineNumber":873,"author":{"gitId":"Daviancold"},"content":"Allows the user to delete exercises from the list of exercises.","lastModifiedDate":"2024-03-30"},{"lineNumber":874,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":875,"author":{"gitId":"Daviancold"},"content":"Format:","lastModifiedDate":"2024-03-30"},{"lineNumber":876,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":877,"author":{"gitId":"Daviancold"},"content":"fitness delete [EXERCISE_TYPE] [INDEX]","lastModifiedDate":"2024-03-30"},{"lineNumber":878,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":879,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":880,"author":{"gitId":"Daviancold"},"content":"* The `fitness` and `delete` are case-sensitive.","lastModifiedDate":"2024-03-30"},{"lineNumber":881,"author":{"gitId":"Daviancold"},"content":"* The `[EXERCISE_TYPE]` parameter only supports the following types:","lastModifiedDate":"2024-03-30"},{"lineNumber":882,"author":{"gitId":"Daviancold"},"content":"    * Arms, Chest, Abs, Back, Legs (Not Case Sensitive)","lastModifiedDate":"2024-03-30"},{"lineNumber":883,"author":{"gitId":"Daviancold"},"content":"* Use the `fitness get [EXERCISE_TYPE]` command to find out the indexes of the respective exercises","lastModifiedDate":"2024-03-30"},{"lineNumber":884,"author":{"gitId":"Daviancold"},"content":"* The printed list of exercises reflects the list of exercises left that are of the same type as the exercise deleted.","lastModifiedDate":"2024-03-30"},{"lineNumber":885,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":886,"author":{"gitId":"Daviancold"},"content":"Example of usage:","lastModifiedDate":"2024-03-30"},{"lineNumber":887,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":888,"author":{"gitId":"Daviancold"},"content":"fitness delete arms 6","lastModifiedDate":"2024-03-30"},{"lineNumber":889,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":890,"author":{"gitId":"Daviancold"},"content":"Expected Outcome:","lastModifiedDate":"2024-03-30"},{"lineNumber":891,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":892,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":893,"author":{"gitId":"Daviancold"},"content":" I have deleted the exercise. Here are the exercises left in the list!","lastModifiedDate":"2024-03-30"},{"lineNumber":894,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":895,"author":{"gitId":"Daviancold"},"content":"1. Arms: Cable Triceps Push down, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":896,"author":{"gitId":"Daviancold"},"content":"2. Arms: Barbell Curls, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":897,"author":{"gitId":"Daviancold"},"content":"3. Arms: Preacher Curls, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":898,"author":{"gitId":"Daviancold"},"content":"4. Arms: Skullcrushers, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":899,"author":{"gitId":"Daviancold"},"content":"5. Arms: Lateral Raises, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":900,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":901,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":902,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":903,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":904,"author":{"gitId":"Daviancold"},"content":"### Set exercise goals for the day: `fitness goal`","lastModifiedDate":"2024-03-30"},{"lineNumber":905,"author":{"gitId":"Daviancold"},"content":"Allows the user to create, track and mark a list of exercise goals.","lastModifiedDate":"2024-03-30"},{"lineNumber":906,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":907,"author":{"gitId":"Daviancold"},"content":"Formats:","lastModifiedDate":"2024-03-30"},{"lineNumber":908,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":909,"author":{"gitId":"Daviancold"},"content":"fitness goal","lastModifiedDate":"2024-03-30"},{"lineNumber":910,"author":{"gitId":"Daviancold"},"content":"fitness goal new","lastModifiedDate":"2024-03-30"},{"lineNumber":911,"author":{"gitId":"Daviancold"},"content":"fitness goal [INDEX]","lastModifiedDate":"2024-03-30"},{"lineNumber":912,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":913,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":914,"author":{"gitId":"Daviancold"},"content":"* The `fitness` and `goal` are case-sensitive.","lastModifiedDate":"2024-03-30"},{"lineNumber":915,"author":{"gitId":"Daviancold"},"content":"* Running the command with no parameters will generate different exercises goals with each repeated command.","lastModifiedDate":"2024-03-30"},{"lineNumber":916,"author":{"gitId":"Daviancold"},"content":"* Use the `fitness goal` command to find out the indexes of the respective exercises goals.","lastModifiedDate":"2024-03-30"},{"lineNumber":917,"author":{"gitId":"Daviancold"},"content":"* Use the `fitness goal new` command to get a new randomised list of five exercise goals.","lastModifiedDate":"2024-03-30"},{"lineNumber":918,"author":{"gitId":"Daviancold"},"content":"* Running `fitness goal new` will always override any previously set goals.","lastModifiedDate":"2024-03-30"},{"lineNumber":919,"author":{"gitId":"Daviancold"},"content":"* Use the `fitness goal [INDEX]` command to mark/unmark a specific goal. ","lastModifiedDate":"2024-03-30"},{"lineNumber":920,"author":{"gitId":"Daviancold"},"content":"* Only `new` and `[INDEX]` are accepted as parameters, where `[INDEX]` is an integer value. The parameters are optional as well.","lastModifiedDate":"2024-03-30"},{"lineNumber":921,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":922,"author":{"gitId":"Daviancold"},"content":"Example of usage :","lastModifiedDate":"2024-03-30"},{"lineNumber":923,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":924,"author":{"gitId":"Daviancold"},"content":"fitness goal","lastModifiedDate":"2024-03-30"},{"lineNumber":925,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":926,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":927,"author":{"gitId":"Daviancold"},"content":"Expected outcome (If there are no current goals):","lastModifiedDate":"2024-03-30"},{"lineNumber":928,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":929,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":930,"author":{"gitId":"Daviancold"},"content":"There are no goals set :(","lastModifiedDate":"2024-03-30"},{"lineNumber":931,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":932,"author":{"gitId":"Daviancold"},"content":"You can set one by doing \u0027goal new\u0027!","lastModifiedDate":"2024-03-30"},{"lineNumber":933,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":934,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":935,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":936,"author":{"gitId":"Daviancold"},"content":"Expected outcome (If there are goals already set):","lastModifiedDate":"2024-03-30"},{"lineNumber":937,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":938,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":939,"author":{"gitId":"Daviancold"},"content":"Lets get working on today\u0027s exercises!","lastModifiedDate":"2024-03-30"},{"lineNumber":940,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":941,"author":{"gitId":"Daviancold"},"content":"1. [ ] Arms: Skullcrushers, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":942,"author":{"gitId":"Daviancold"},"content":"2. [ ] Chest: Wide Arm Push-up, 3 sets \u0026 15 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":943,"author":{"gitId":"Daviancold"},"content":"3. [ ] Abs: Weighted Sit-Ups, 3 sets \u0026 20 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":944,"author":{"gitId":"Daviancold"},"content":"4. [ ] Back: Weighted Pull Ups, 3 sets \u0026 6 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":945,"author":{"gitId":"Daviancold"},"content":"5. [ ] Legs: Calf Raises, 3 sets \u0026 10 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":946,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":947,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":948,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":949,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":950,"author":{"gitId":"Daviancold"},"content":"Example of usage :","lastModifiedDate":"2024-03-30"},{"lineNumber":951,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":952,"author":{"gitId":"Daviancold"},"content":"fitness goal new","lastModifiedDate":"2024-03-30"},{"lineNumber":953,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":954,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":955,"author":{"gitId":"Daviancold"},"content":"Expected outcome:","lastModifiedDate":"2024-03-30"},{"lineNumber":956,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":957,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":958,"author":{"gitId":"Daviancold"},"content":"Lets get working on today\u0027s exercises!","lastModifiedDate":"2024-03-30"},{"lineNumber":959,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":960,"author":{"gitId":"Daviancold"},"content":"1. [ ] Arms: Skullcrushers, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":961,"author":{"gitId":"Daviancold"},"content":"2. [ ] Chest: Wide Arm Push-up, 3 sets \u0026 15 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":962,"author":{"gitId":"Daviancold"},"content":"3. [ ] Abs: Weighted Sit-Ups, 3 sets \u0026 20 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":963,"author":{"gitId":"Daviancold"},"content":"4. [ ] Back: Weighted Pull Ups, 3 sets \u0026 6 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":964,"author":{"gitId":"Daviancold"},"content":"5. [ ] Legs: Calf Raises, 3 sets \u0026 10 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":965,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":966,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":967,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":968,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":969,"author":{"gitId":"Daviancold"},"content":"Example of usage:","lastModifiedDate":"2024-03-30"},{"lineNumber":970,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":971,"author":{"gitId":"Daviancold"},"content":"fitness goal 3","lastModifiedDate":"2024-03-30"},{"lineNumber":972,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":973,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":974,"author":{"gitId":"Daviancold"},"content":"Expected outcome:","lastModifiedDate":"2024-03-30"},{"lineNumber":975,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":976,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":977,"author":{"gitId":"Daviancold"},"content":"I see there are changes. I hope you are making progress...","lastModifiedDate":"2024-03-30"},{"lineNumber":978,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":979,"author":{"gitId":"Daviancold"},"content":"1. [ ] Arms: Skullcrushers, 3 sets \u0026 8 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":980,"author":{"gitId":"Daviancold"},"content":"2. [ ] Chest: Wide Arm Push-up, 3 sets \u0026 15 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":981,"author":{"gitId":"Daviancold"},"content":"3. [X] Abs: Weighted Sit-Ups, 3 sets \u0026 20 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":982,"author":{"gitId":"Daviancold"},"content":"4. [ ] Back: Weighted Pull Ups, 3 sets \u0026 6 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":983,"author":{"gitId":"Daviancold"},"content":"5. [ ] Legs: Calf Raises, 3 sets \u0026 10 reps","lastModifiedDate":"2024-03-30"},{"lineNumber":984,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":985,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":986,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":987,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":988,"author":{"gitId":"Daviancold"},"content":"### View Fitness Motivator help menu: `fitness help`","lastModifiedDate":"2024-03-30"},{"lineNumber":989,"author":{"gitId":"Daviancold"},"content":"Allows the user to see a list of available commands that can be executed under the FitnessMotivator.","lastModifiedDate":"2024-03-30"},{"lineNumber":990,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":991,"author":{"gitId":"Daviancold"},"content":"Format:","lastModifiedDate":"2024-03-30"},{"lineNumber":992,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":993,"author":{"gitId":"Daviancold"},"content":"fitness help","lastModifiedDate":"2024-03-30"},{"lineNumber":994,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":995,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":996,"author":{"gitId":"Daviancold"},"content":"* The `fitness` and `help` are case-sensitive.","lastModifiedDate":"2024-03-30"},{"lineNumber":997,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":998,"author":{"gitId":"Daviancold"},"content":"Example of usage:","lastModifiedDate":"2024-03-30"},{"lineNumber":999,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":1000,"author":{"gitId":"Daviancold"},"content":"fitness help","lastModifiedDate":"2024-03-30"},{"lineNumber":1001,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":1002,"author":{"gitId":"Daviancold"},"content":"Expected Outcome:","lastModifiedDate":"2024-03-30"},{"lineNumber":1003,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":1004,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":1005,"author":{"gitId":"Daviancold"},"content":"Here is a list of possible commands you can use with the Fitness Motivator!","lastModifiedDate":"2024-03-30"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":1007,"author":{"gitId":"Daviancold"},"content":"1. fitness get: Get 5 random reflection questions","lastModifiedDate":"2024-03-30"},{"lineNumber":1008,"author":{"gitId":"Daviancold"},"content":"2. fitness get \u003cexercise_type\u003e: Get a full list of exercises belonging to the exercise type","lastModifiedDate":"2024-03-30"},{"lineNumber":1009,"author":{"gitId":"Daviancold"},"content":"3. fitness add \u003cexercise_type\u003e, \u003cexercise_name\u003e, \u003csets\u003e, \u003creps\u003e: add an exercise to the list of exercises","lastModifiedDate":"2024-03-30"},{"lineNumber":1010,"author":{"gitId":"Daviancold"},"content":"4. fitness delete \u003cexercise_type\u003e \u003cindex\u003e: Delete the exercise from the list of exercise.The index is based on the index when you run \u0027fitness get \u003cexercise_type\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":1011,"author":{"gitId":"Daviancold"},"content":"5. fitness goal: Retrieves the status of all current goals, if it exists","lastModifiedDate":"2024-03-30"},{"lineNumber":1012,"author":{"gitId":"Daviancold"},"content":"6. fitness goal new: Overwrites current goals with new set of goals if it exists, otherwise creates a brand new set of goals","lastModifiedDate":"2024-03-30"},{"lineNumber":1013,"author":{"gitId":"Daviancold"},"content":"7. fitness goal \u003cindex\u003e: Toggle the status of the goal","lastModifiedDate":"2024-03-30"},{"lineNumber":1014,"author":{"gitId":"Daviancold"},"content":"8. fitness help: Get help menu for reflect commands","lastModifiedDate":"2024-03-30"},{"lineNumber":1015,"author":{"gitId":"Daviancold"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2024-03-30"},{"lineNumber":1016,"author":{"gitId":"Daviancold"},"content":"```","lastModifiedDate":"2024-03-30"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"JingHaoooo":206,"OKW32":195,"genexus85":200,"damiwee":166,"Daviancold":228,"-":33}},{"path":"docs/diagrams/fitness/FitnessClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"package parser {","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"    class FitnessCommandParser {","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"        {Static} determineFitnessCommand(fitnessMotivator: FitnessMotivator, commandArgs: String): Command","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    class Parser {","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"package commands {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    interface \"\u003c\u003cinterface\u003e\u003e\\nCommand\" as Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"        + execute(): void","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"        + isExit(): boolean","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"    class GetExerciseCommand implements Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"    class DeleteExerciseCommand implements Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"    class GoalExerciseCommand implements Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"    class HelpExerciseCommand implements Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"    class AddExerciseCommand implements Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"package fitness {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"    package exercise {","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"        class ExerciseList {","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"            - allExercises: ArrayList\u003cExercise\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"            + ExerciseList()","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"            + add(exercise: Exercise): void","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"            + get(type: ExerciseType, index: int): Exercise","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"            + getType(type: ExerciseType): ArrayList\u003cExercise\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"            + size(type: ExerciseType): int","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"            + newExercise(parameters: String[]): Exercise","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"            + findExercise(type: ExerciseType, nameQuery: String): Exercise","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"            + remove(exercise: Exercise): void","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"        class Exercise {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"            - ExerciseName: String","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"            - exerciseType: ExerciseType","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"            - sets: String","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"            - reps: String","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"            + toString(): String","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"        class ExerciseBank {","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"    package goals {","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"        class ExerciseGoal {","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"            - isDone: boolean","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"            + toggle(): void","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"            + toString(): String","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"        class ExerciseGoalList {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"            - goals: ArrayList\u003cExerciseGoal\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"            + isEmpty(): void","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"Daviancold"},"content":"            + clear(): void","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"Daviancold"},"content":"            + findExercise(index: int): ExerciseGoal","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"Daviancold"},"content":"            + saveGoals(): void","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"Daviancold"},"content":"            + newExercise(parameters: String[]): ExerciseGoal","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"Daviancold"},"content":"            + add(exercise: Exercise, isDone: boolean): void","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"Daviancold"},"content":"    class FitnessMotivator {","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"Daviancold"},"content":"        + allExercises: ExerciseList","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"Daviancold"},"content":"        + dailyGoals : ExerciseGoalList","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"Daviancold"},"content":"        - fiveRandomExercise(): Exercise[]","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"Daviancold"},"content":"        + getExercises(): String","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"Daviancold"},"content":"        + addExercises(commandArgs: String[]): void","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"Daviancold"},"content":"        + getTypeExercises(type: ExerciseType): void","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"Daviancold"},"content":"        + deleteExercise(commandArgs: String[]): void","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"Daviancold"},"content":"        + newGoal(): void","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"Daviancold"},"content":"        + goalStatus(): void","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"Daviancold"},"content":"        + toggleStatus(index: int): void","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"Daviancold"},"content":"        + printHelp(): void","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"Daviancold"},"content":"    class UiMessageConstants {","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"Daviancold"},"content":"enum ExerciseType {","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"Daviancold"},"content":"            ARMS","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"Daviancold"},"content":"            CHEST","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"Daviancold"},"content":"            ABS","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"Daviancold"},"content":"            BACK","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"Daviancold"},"content":"            LEGS","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"Daviancold"},"content":"class Storage {","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"Daviancold"},"content":"class Ui {","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"Daviancold"},"content":"Parser ..\u003e FitnessCommandParser : uses \u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"Daviancold"},"content":"FitnessCommandParser ..\u003e GetExerciseCommand : creates \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"Daviancold"},"content":"FitnessCommandParser ..\u003e DeleteExerciseCommand : creates \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"Daviancold"},"content":"FitnessCommandParser ..\u003e GoalExerciseCommand : creates \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"Daviancold"},"content":"FitnessCommandParser ..\u003e HelpExerciseCommand : creates \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"Daviancold"},"content":"FitnessCommandParser ..\u003e AddExerciseCommand : creates \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"Daviancold"},"content":"AddExerciseCommand --\u003e FitnessMotivator : uses \u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"Daviancold"},"content":"AddExerciseCommand ..\u003e ExerciseType : uses \u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"Daviancold"},"content":"GetExerciseCommand --\u003e FitnessMotivator : uses \u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"Daviancold"},"content":"DeleteExerciseCommand --\u003e FitnessMotivator : uses \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"Daviancold"},"content":"GoalExerciseCommand --\u003e FitnessMotivator : uses \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"Daviancold"},"content":"HelpExerciseCommand --\u003e FitnessMotivator : uses \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"Daviancold"},"content":"FitnessMotivator *--\u003e \"1\" ExerciseList : contains \u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"Daviancold"},"content":"FitnessMotivator *--\u003e \"1\" ExerciseGoalList : contains \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"Daviancold"},"content":"ExerciseGoal --|\u003e Exercise : extends \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"Daviancold"},"content":"ExerciseGoalList --|\u003e ExerciseList : extends \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"Daviancold"},"content":"FitnessMotivator ..\u003e UiMessageConstants : uses \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"Daviancold"},"content":"ExerciseList ..\u003e ExerciseBank : uses \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"Daviancold"},"content":"ExerciseList *--\u003e \"25..*\" Exercise : contains \u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"Daviancold"},"content":"ExerciseGoalList *--\u003e \"0..5\" ExerciseGoal : contains \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"Daviancold"},"content":"ExerciseList ..\u003e ExerciseType : uses \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"Daviancold"},"content":"ExerciseGoalList ..\u003e ExerciseType : uses \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"Daviancold"},"content":"ExerciseGoal ..\u003e ExerciseType : uses \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"Daviancold"},"content":"FitnessMotivator ..\u003e ExerciseType : uses \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"Daviancold"},"content":"Exercise ..\u003e ExerciseType : uses \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"Daviancold"},"content":"ExerciseList ..\u003e Storage : uses \u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"Daviancold"},"content":"ExerciseGoalList ..\u003e Storage : uses \u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"Daviancold"},"content":"FitnessMotivator ..\u003e Ui : uses \u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"Daviancold"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"Daviancold":150}},{"path":"docs/diagrams/fitness/FitnessSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"autonumber","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"participant Main","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"participant Scanner","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"participant FitnessMotivator","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"participant Parser","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"participant FitnessCommandParser","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"participant PlaceholderFitnessCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"activate Main","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"create Scanner","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"Main -\u003e Scanner","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"activate Scanner","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"create FitnessMotivator","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"Main -\u003e FitnessMotivator","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"activate FitnessMotivator","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"loop until isExit","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"    Main -\u003e Scanner: nextLine()","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"    Scanner --\u003e Main: userInput","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"    Main -\u003e Parser: userInput","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"    alt userInput is FitnessCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"        Parser -\u003e FitnessCommandParser: determineFitnessCommand()","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"        alt command is PlaceholderFitnessCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"            create PlaceholderFitnessCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"            FitnessCommandParser -\u003e PlaceholderFitnessCommand: command, params","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"            activate PlaceholderFitnessCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"            PlaceholderFitnessCommand --\u003e FitnessCommandParser: command object","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"            FitnessCommandParser --\u003e Parser: command object","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"            Parser --\u003e Main: command object","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"            Main -\u003e PlaceholderFitnessCommand: execute()","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"            PlaceholderFitnessCommand -\u003e FitnessMotivator: execute()","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"            destroy PlaceholderFitnessCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"        end","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"    end","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"end","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"Daviancold":43}},{"path":"docs/diagrams/focus/FocusClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"hide circle","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"interface \"\u003c\u003cinterface\u003e\u003e\\nCommand\" as Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"execute()","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"isExit()","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"class PlaceholderFocusCommand implements Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"note top of PlaceholderFocusCommand: PlaceholderFocusCommand \u003d StartTimerCommand,\\n StopTimer command, etc","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"class FocusCommandParser {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"class Parser {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"class Ui {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"class FocusTimer {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    - countupTimer: CountupTimer","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    - countdownTimer : CountdownTimer","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"    - timerMode: boolean","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    + getStartStatus() : boolean","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    + switchTimer() : boolean","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    + getPausedStatus() : boolean","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"    + setStartTiming()","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"    + setStopTiming()","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"    + setPauseTiming()","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    + setResumeTiming()","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"    + checkTime()","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    + setDuration()","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"class CountupTimer {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"    - startTiming: LocalDateTime","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    - stoptiming: LocalDateTime","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"    - currentTime: LocalDateTime","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    - isStarted: boolean","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"    - isPaused: boolean","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"class CountdownTimer {","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"    - minutes: int","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"    - seconds: int","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"    - inputMinutes: int","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"    - isStarted: AtomicBoolean","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"    - isRunning: AtomicBoolean","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"    - stopwatch: Timer","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"    - timerTask: TimerTask","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"FocusCommandParser .\u003e PlaceholderFocusCommand: creates \u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"PlaceholderFocusCommand -\u003e\"1\" FocusTimer : controls \u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"CountupTimer \"1\"\u003c-* FocusTimer : manages \u003c","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"FocusTimer *--\u003e\"1\" CountdownTimer : manages \u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"Ui \u003c. CountupTimer : uses \u003c ","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"CountdownTimer .\u003e Ui : uses \u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"Parser ..\u003e FocusCommandParser : creates \u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"JingHaoooo":69}},{"path":"docs/diagrams/focus/FocusSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"autonumber","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"participant \":Main\" as Main","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"participant \":Scanner\" as Scanner","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"participant \":FocusTimer\" as FocusTimer","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"participant \":FocusCommandParser\" as FocusCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"participant \":PlaceholderFocusCommand\" as PlaceholderFocusCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"activate Main","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"create Scanner","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"Main -\u003e Scanner","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"activate Scanner","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"create FocusTimer","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"Main -\u003e FocusTimer","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"activate FocusTimer","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"loop until isExit","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    Main -\u003e Scanner : nextLine()","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    Main \u003c-- Scanner : userInput","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"    Main -\u003e Parser : userInput","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    alt userInput is FocusCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"        Parser -\u003e FocusCommandParser : DetermineFocusCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"        alt command is PlaceholderFocusCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"            create PlaceholderFocusCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"            FocusCommandParser -\u003e PlaceholderFocusCommand : focusCommand()","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"            activate PlaceholderFocusCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"            PlaceholderFocusCommand --\u003e FocusCommandParser : command object","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"            FocusCommandParser --\u003e Parser  : command object","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"            Parser --\u003e Main : command object","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"            Main -\u003e PlaceholderFocusCommand : execute()","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"            PlaceholderFocusCommand --\u003e FocusTimer : execute()","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"            destroy PlaceholderFocusCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        end","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"    end","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"end","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"JingHaoooo":42}},{"path":"docs/diagrams/focus/FocusStateDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"hide empty description","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"[*] --\u003e StateReady","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"StateReady --\u003e StateReady: switch timer","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"StateReady --\u003e StateTimerRunning: start","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"StateTimerRunning -up-\u003e StateReady: stop","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"StateTimerRunning -up-\u003e StatePaused: pause","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"StatePaused --\u003e StateTimerRunning: resume","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"StatePaused --\u003e StateReady: stop","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"StatePaused --\u003e StatePaused: check","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"StateTimerRunning --\u003e StateTimerRunning: check","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"JingHaoooo":17}},{"path":"docs/diagrams/habit/HabitSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"@startuml","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"autonumber","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"participant Main","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"participant Scanner","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"participant HabitTracker","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"participant Parser","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"participant HabitCommandParser","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"participant PlaceholderHabitCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"activate Main","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"create Scanner","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"Main -\u003e Scanner","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"activate Scanner","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"create HabitTracker","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"Main -\u003e HabitTracker","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"activate HabitTracker","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"loop until isExit","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    Main -\u003e Scanner: nextLine()","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"    Scanner --\u003e Main: userInput","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"    Main -\u003e Parser: userInput","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"    alt userInput is HabitCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        Parser -\u003e HabitCommandParser: determineHabitCommand()","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"        alt command is PlaceholderHabitCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"            create PlaceholderHabitCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"            HabitCommandParser -\u003e PlaceholderHabitCommand: command, params","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"            activate PlaceholderHabitCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"            PlaceholderHabitCommand --\u003e HabitCommandParser: command object","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"            HabitCommandParser --\u003e Parser: command object","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"            Parser --\u003e Main: command object","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"            Main -\u003e PlaceholderHabitCommand: execute()","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"            PlaceholderHabitCommand -\u003e HabitTracker: execute()","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"            destroy PlaceholderHabitCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"        end","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"    end","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"end","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"@enduml","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"genexus85":45}},{"path":"docs/diagrams/habit/HabitTracker.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"@startuml","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"package parser {","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"    class HabitCommandParser {","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"    class Parser {","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"package command {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"    interface \"\u003c\u003cinterface\u003e\u003e\\nCommand\" as Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"               + execute(): void","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"               + isExit(): boolean","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"    class AddHabitCommand implements Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"    class DeleteHabitCommand implements Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"    class ListHabitsCommand implements Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"    class SetPriorityCommand implements Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"    class SortHabitsCommand implements Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"    class UpdateHabitCountCommand implements Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"    class HabitHelpCommand implements Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"Package habit {","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"    class HabitTracker {","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"        - habitList: ArrayList\u003chabit\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"        + HabitTracker()","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"        + getNumberOfHabits(): int","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"        + addHabit(newHabit: Habit): void","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"        + listHabits(): void","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"        + isValidHabitID(habitID: int): boolean","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"        + updateHabitCount(habitID: int, updatedCount: String): void","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"        + deleteHabit(habitID: int): void","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"        + setPriorityLevel(habitID: int, priority String): void","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"        + sortHabits(): void","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"        + clearHabitList(): void","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"genexus85"},"content":"    class Habit {","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"genexus85"},"content":"        - description: String","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"genexus85"},"content":"        - habitCount: int","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"genexus85"},"content":"        - priority: Priority","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"genexus85"},"content":"        + Habit(description: String)","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"genexus85"},"content":"        + Habit(description: String, habitCount: int, priority: Priority)","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"genexus85"},"content":"        + getDescription(): String","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"genexus85"},"content":"        + getHabitCount(): int","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"genexus85"},"content":"        + getPriority(): Priority","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"genexus85"},"content":"        + updateCount(updatedCount: String): int","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"genexus85"},"content":"        + setPriority(priority: String): void","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"genexus85"},"content":"    enum Priority {","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"genexus85"},"content":"      HIGH","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"genexus85"},"content":"      MED","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"genexus85"},"content":"      LOW","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"genexus85"},"content":"Package storage {","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"genexus85"},"content":"    class Storage {","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"genexus85"},"content":"    class HabitTrackerStorage {","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"genexus85"},"content":"        + saveHabitListToFile(habitList: ArrayList\u003cHabit\u003e): void","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"genexus85"},"content":"        + loadHabitListFromFile(): ArrayList\u003cHabit\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"genexus85"},"content":"class Ui {","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"genexus85"},"content":"HabitTracker *-- \"*\" Habit : contains","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"genexus85"},"content":"Habit *-- \"1\" Priority : contains","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"genexus85"},"content":"HabitTracker --\u003e HabitTrackerStorage : uses \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"genexus85"},"content":"HabitTrackerStorage --\u003e Storage : uses \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"genexus85"},"content":"HabitTracker --\u003e Ui : uses \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"genexus85"},"content":"Parser ..\u003e HabitCommandParser : creates \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"genexus85"},"content":"HabitCommandParser .DOWN.\u003e AddHabitCommand : creates \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"genexus85"},"content":"HabitCommandParser .DOWN.\u003e DeleteHabitCommand : creates \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"genexus85"},"content":"HabitCommandParser .DOWN.\u003e ListHabitsCommand : creates \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"genexus85"},"content":"HabitCommandParser .DOWN.\u003e SetPriorityCommand : creates \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"genexus85"},"content":"HabitCommandParser .DOWN.\u003e SortHabitsCommand : creates \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"genexus85"},"content":"HabitCommandParser .DOWN.\u003e UpdateHabitCountCommand : creates \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"genexus85"},"content":"HabitCommandParser .DOWN.\u003e HabitHelpCommand : creates \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"genexus85"},"content":"AddHabitCommand --\u003e HabitTracker : uses \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"genexus85"},"content":"DeleteHabitCommand --\u003e HabitTracker : uses \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"genexus85"},"content":"ListHabitsCommand --\u003e HabitTracker : uses \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"genexus85"},"content":"SetPriorityCommand --\u003e HabitTracker : uses \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"genexus85"},"content":"SortHabitsCommand --\u003e HabitTracker : uses \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"genexus85"},"content":"UpdateHabitCountCommand --\u003e HabitTracker : uses \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"genexus85"},"content":"@enduml","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"genexus85":118}},{"path":"docs/diagrams/reflection/Reflection.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"@startuml","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"package parser {","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"    class ReflectionCommandParser {","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    class Parser {","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"package command {","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    interface \"\u003c\u003cinterface\u003e\u003e\\nCommand\" as Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"            + execute(): void","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"            + isExit(): boolean","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"    class GetReflectionQuestionsCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    class ListFavouriteReflectionsCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"    class ReflectionHelpCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"    class SaveToFavouritesCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"    class UnsaveFromFavouritesCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"package reflection {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"    abstract class \"{abstract}\\nReflectionList\" as ReflectionList {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        - reflectionList: ArrayList\u003cReflectionQuestion\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"        + ReflectionList()","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"        + addReflectionQuestion(reflectionQuestion: ReflectionQuestion): void","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        + removeReflectionQuestion(reflectionQuestion: ReflectionQuestion): void","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"        + getSize(): int","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"        + getReflectionList(): ArrayList\u003cReflectionQuestion\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"    class FavoriteReflectionsList {","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"        + FavoriteReflectionsList()","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"        + get(favouritesId: int): ReflectionQuestion","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"    class ReflectionQuestionBank {","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"        - setUpReflectionBank(): void","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"        + ReflectionQuestionBank()","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"        + getFiveRandomQuestions(): ArrayList\u003cReflectionQuestion\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"    class ReflectionQuestion {","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"        - question: String","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"        + ReflectionQuestion(question: String)","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"        + toString(): String","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"    class ReflectionManager {","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"        + ReflectionManager()","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"        + printFiveRandomQuestions(): void","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"damiwee"},"content":"        + saveReflectionQuestion(reflectionId: int): void","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"        + unsaveReflectionQuestion(reflectionId: int): void","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"        + printFavourites(): void","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"        + printHelpMenu(): void","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"class Storage {","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"class Ui {","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"damiwee"},"content":"ReflectionList *-- \"*\" ReflectionQuestion : contains","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"damiwee"},"content":"FavoriteReflectionsList --|\u003e ReflectionList","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"damiwee"},"content":"ReflectionQuestionBank --|\u003e ReflectionList","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"damiwee"},"content":"ReflectionQuestionBank *-- \"41\" ReflectionQuestion : contains \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"damiwee"},"content":"FavoriteReflectionsList *-- \"*\" ReflectionQuestion : contains \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"damiwee"},"content":"ReflectionManager --\u003e Storage : uses \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"damiwee"},"content":"ReflectionManager --\u003e Ui : uses \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"damiwee"},"content":"ReflectionManager *--\u003e \"1\" FavoriteReflectionsList : contains \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"damiwee"},"content":"ReflectionManager *--\u003e \"1\" ReflectionQuestionBank : contains \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"damiwee"},"content":"Parser ..\u003e ReflectionCommandParser : creates \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"damiwee"},"content":"ReflectionCommandParser .DOWN.\u003e GetReflectionQuestionsCommand : creates \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"damiwee"},"content":"ReflectionCommandParser .DOWN.\u003e ListFavouriteReflectionsCommand : creates \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"damiwee"},"content":"ReflectionCommandParser .DOWN.\u003e ReflectionHelpCommand : creates \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"damiwee"},"content":"ReflectionCommandParser .DOWN.\u003e SaveToFavouritesCommand : creates \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"damiwee"},"content":"ReflectionCommandParser .DOWN.\u003e UnsaveFromFavouritesCommand : creates \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"damiwee"},"content":"GetReflectionQuestionsCommand --\u003e ReflectionManager : uses \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"damiwee"},"content":"ListFavouriteReflectionsCommand --\u003e ReflectionManager : uses \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"damiwee"},"content":"ReflectionHelpCommand --\u003e ReflectionManager : uses \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"damiwee"},"content":"SaveToFavouritesCommand --\u003e ReflectionManager : uses \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"damiwee"},"content":"UnsaveFromFavouritesCommand --\u003e ReflectionManager : uses \u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"damiwee"},"content":"@enduml","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"damiwee":107}},{"path":"docs/diagrams/reflection/ReflectionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"@startuml","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"autonumber","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"participant Main","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"participant Scanner","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"participant ReflectionManager","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"participant Parser","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"participant ReflectionCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"participant PlaceholderReflectionCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"activate Main","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"create Scanner","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"Main -\u003e Scanner","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"activate Scanner","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"create ReflectionManager","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"Main -\u003e ReflectionManager","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"activate ReflectionManager","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"loop until isExit","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"    Main -\u003e Scanner: nextLine()","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"    Scanner --\u003e Main: userInput","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"    Main -\u003e Parser: userInput","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"    alt userInput is ReflectionCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"        Parser -\u003e ReflectionCommandParser: determineReflectionCommand()","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        alt command is PlaceholderReflectionCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"            create PlaceholderReflectionCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"            ReflectionCommandParser -\u003e PlaceholderReflectionCommand: command, params","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"            activate PlaceholderReflectionCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"            PlaceholderReflectionCommand --\u003e ReflectionCommandParser: command object","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"            ReflectionCommandParser --\u003e Parser: command object","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"            Parser --\u003e Main: command object","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"            Main -\u003e PlaceholderReflectionCommand: execute()","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"            PlaceholderReflectionCommand -\u003e ReflectionManager: execute()","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"            destroy PlaceholderReflectionCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        end","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"    end","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"end","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"@enduml","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"@enduml","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"damiwee":46}},{"path":"docs/diagrams/sleep/Sleep.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"package parser {","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"    class SleepCommandParser {","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"    class Parser {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"package command {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    interface \"\u003c\u003cinterface\u003e\u003e\\nCommand\" as Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"                + execute(): void","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"                + isExit(): boolean","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    class AddSleepCommand implements Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"    class DeleteSleepCommand implements Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"        - startDate: LocalDate","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"        - endDate: LocalDate","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"        - deleteSleepBefore(sleepCommandArgs: String)","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"        - deleteSleepBefore(sleepCommandArgs: String)","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"        - deleteSleepBetween(sleepCommandArgs: String)","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"    class GetSleepCommand implements Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        -  date: LocalDate","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"    class ListSleepCommand implements Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"    class SaveSleepCommand implements Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"    class UpdateSleepCommand implements Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"        - date: LocalDate","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"        - hours: double","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"package sleep {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"    interface \"\u003c\u003cinterface\u003e\u003e\\nComparable\" as Comparable {","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"OKW32"},"content":"    class SleepCycle implements Comparable{","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"        - hoursSlept: double","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"        - dateOfSleep: LocalDate","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"        + getHoursSlept(): double","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"        + getDateOfSleep(): LocalDate","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"        + setHoursOfSleep(newHours: double)","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"        + compareTo(sleepCycle: SleepCycle)","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"OKW32"},"content":"        +toString(): String","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"OKW32"},"content":"    class SleepCycleList {","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"OKW32"},"content":"        - totalHrsSlept: double","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"OKW32"},"content":"        - numberOfCycles: int","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"OKW32"},"content":"        +addSleepCycle(sleepCycle: SleepCycle, isPrint: boolean)","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"OKW32"},"content":"        +deleteSleepCycle(date: LocalDate)","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"OKW32"},"content":"        +deleteSleepCyclesBefore(date: LocalDate)","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"OKW32"},"content":"        +deleteSleepCyclesBetween(startDate: LocalDate, endDate: LocalDate)","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"OKW32"},"content":"        +listSleepCycles()","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"OKW32"},"content":"        +getSleepCycle(date: LocalDate, isPrint: boolean): int","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"OKW32"},"content":"        +updateSleepCycle(date: LocalDate, newHours: double)","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"OKW32"},"content":"        +getNumberOfCycles(): int","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"OKW32"},"content":"        +getTotalHrsSlept(): double","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"OKW32"},"content":"        +getSleepCycleList(): ArrayList\u003cSleepCycle\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"OKW32"},"content":"    class SleepTracker {","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"OKW32"},"content":"        +listSleepCycles()","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"OKW32"},"content":"        +addSleepCycle(sleepCycleToAdd: SleepCycle)","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"OKW32"},"content":"        +updateSleepCycle(date: LocalDate, newHours: double)","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"OKW32"},"content":"        +getSleepCycle(date: LocalDate)","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"OKW32"},"content":"        +deleteSleepCycle(date: LocalDate)","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"OKW32"},"content":"        +deleteSleepCyclesBefore(date: LocalDate)","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"OKW32"},"content":"        +deleteSleepCyclesBetween(startDate:LocalDate, endDate:LocalDate)","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"OKW32"},"content":"        +saveSleepCycles()","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"OKW32"},"content":"class SleepTrackerStorage {","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"OKW32"},"content":"class Ui {","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"OKW32"},"content":"Parser ..\u003e SleepCommandParser: creates \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"OKW32"},"content":"SleepCommandParser .DOWN.\u003e AddSleepCommand : creates \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"OKW32"},"content":"SleepCommandParser .DOWN.\u003e DeleteSleepCommand : creates \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"OKW32"},"content":"SleepCommandParser .DOWN.\u003e ListSleepCommand : creates \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"OKW32"},"content":"SleepCommandParser .DOWN.\u003e SaveSleepCommand : creates \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"OKW32"},"content":"SleepCommandParser .DOWN.\u003e UpdateSleepCommand : creates \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"OKW32"},"content":"SleepCommandParser .DOWN.\u003e GetSleepCommand : creates \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"OKW32"},"content":"AddSleepCommand --\u003e SleepTracker : uses \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"OKW32"},"content":"DeleteSleepCommand --\u003e SleepTracker : uses \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"OKW32"},"content":"DeleteSleepCommand ..\u003e \"deleteMode  1\" DeleteMode","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"OKW32"},"content":"GetSleepCommand --\u003e SleepTracker : uses \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"OKW32"},"content":"ListSleepCommand --\u003e SleepTracker : uses \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"OKW32"},"content":"SaveSleepCommand --\u003e SleepTracker : uses \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"OKW32"},"content":"UpdateSleepCommand --\u003e SleepTracker : uses \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"OKW32"},"content":"SleepCycleList --\u003e Ui : uses \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"OKW32"},"content":"SleepTracker *--\u003e \"1\" SleepCycleList: contains \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"OKW32"},"content":"SleepTracker --\u003e SleepTrackerStorage : uses \u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"OKW32"},"content":"SleepCycleList *-- \"*\" SleepCycle : contains","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"OKW32"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"OKW32":123}},{"path":"docs/diagrams/sleep/SleepSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"autonumber","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"participant Main","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"participant Scanner","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"participant SleepTracker","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"participant Parser","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"participant SleepCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"participant PlaceholderSleepCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"activate Main","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"create Scanner","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"Main -\u003e Scanner","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"activate Scanner","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"create SleepTracker","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"Main -\u003e SleepTracker","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"activate SleepTracker","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"loop until isExit","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"    Main -\u003e Scanner: nextLine()","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"    Scanner --\u003e Main: userInput","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    Main -\u003e Parser: userInput","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"    alt userInput is SleepCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"        Parser -\u003e SleepCommandParser: determineSleepCommand()","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        alt command is PlaceholderSleepCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"            create PlaceholderSleepCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"            SleepCommandParser -\u003e PlaceholderSleepCommand: command, params","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"            activate PlaceholderSleepCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"            PlaceholderSleepCommand --\u003e SleepCommandParser: command object","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            SleepCommandParser --\u003e Parser: command object","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"            Parser --\u003e Main: command object","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"            Main -\u003e PlaceholderSleepCommand: execute()","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"            PlaceholderSleepCommand -\u003e SleepTracker: execute()","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"            destroy PlaceholderSleepCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"        end","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"    end","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"end","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"@enduml","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"OKW32":46}},{"path":"src/main/java/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import parser.Parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"public class Main {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"        SleepTracker sleepTracker \u003d new SleepTracker();","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"        ReflectionManager reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"        HabitTracker habitTracker \u003d new HabitTracker();","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"        FocusTimer focusTimer \u003d new FocusTimer();","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"        FitnessMotivator fitnessMotivator \u003d new FitnessMotivator();","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        Ui.greetUser();","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"            Ui.promptUserInput();","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"            //execute user command if it is valid else throw exception","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"            //save tasks to file after each command","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"            try {","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"                Command userCommand \u003d Parser.determineCommand(sleepTracker, reflectionManager,","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"                        habitTracker, focusTimer, fitnessMotivator, userInput);","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"                userCommand.execute();","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"                isExit \u003d userCommand.isExit();","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"            } catch (Wellness360Exception e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"                Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"        Ui.sayGoodbye();","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":2,"OKW32":10,"genexus85":2,"damiwee":7,"Daviancold":27}},{"path":"src/main/java/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"public interface Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"    void execute() throws Wellness360Exception;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"    boolean isExit();","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"genexus85":6,"damiwee":3}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"    public ExitCommand(String commandArgs) throws Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"        if (!commandArgs.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"            throw new Wellness360Exception(\"Unknown command\");","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"        return;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"        return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":24}},{"path":"src/main/java/commands/fitnesscommands/AddExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package commands.fitnesscommands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import commands.Command;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import exceptions.FitnessException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import fitness.ExerciseType;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.ErrorMessageConstants.ILLEGAL_TYPE_ERROR_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.ErrorMessageConstants.INCORRECT_INTEGER_ERROR_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.ErrorMessageConstants.INSUFFICIENT_ADD_PARAMS_ERROR_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"import static fitness.FitnessMotivator.REQUIRED_NUM_OF_PARAMETERS;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"public class AddExerciseCommand implements Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    private FitnessMotivator fitnessMotivator;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"    private String[] commandArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    public AddExerciseCommand(FitnessMotivator fitnessMotivator, String commandArgs)","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"            throws FitnessException {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"        this.fitnessMotivator \u003d fitnessMotivator;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"        this.commandArgs \u003d checkCommandArgs(commandArgs);","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"     * Validates the command argument given for the fitness add command.","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"     * @param commandArgs A string of arguments","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"     * @return A split array of strings of size 4 if there are no issues found with the string","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"     *         input","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"     * @throws FitnessException Thrown when improper command arguments are found","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"    private String[] checkCommandArgs(String commandArgs) throws FitnessException {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"        String[] tempCommandArgs \u003d commandArgs.split(\",\", 4);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"        // Handles insufficient parameters entered","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"        if (tempCommandArgs.length !\u003d REQUIRED_NUM_OF_PARAMETERS) {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"            throw new FitnessException(INSUFFICIENT_ADD_PARAMS_ERROR_MESSAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"        // String Cleaning","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"        tempCommandArgs[0] \u003d tempCommandArgs[0].trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"        tempCommandArgs[1] \u003d tempCommandArgs[1].trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"        tempCommandArgs[2] \u003d tempCommandArgs[2].trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"        tempCommandArgs[3] \u003d tempCommandArgs[3].trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"        // Handles the case where non-integer values are entered in parameters that should only","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"        // be integers","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"        if (!tempCommandArgs[2].matches(\"\\\\d+\") ||","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"                !tempCommandArgs[3].matches(\"\\\\d+\")) {","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"            throw new FitnessException(INCORRECT_INTEGER_ERROR_MESSAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"        // Checks that the entered type belongs to one of the ExerciseType Enum","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"            String exerciseTypeString \u003d tempCommandArgs[0].toUpperCase().trim();","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"            ExerciseType.valueOf(exerciseTypeString);","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"            throw new FitnessException(ILLEGAL_TYPE_ERROR_MESSAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"        return tempCommandArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"    public void execute() throws FitnessException {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"        fitnessMotivator.addExercises(commandArgs);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"        return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Daviancold":73}},{"path":"src/main/java/commands/fitnesscommands/DeleteExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package commands.fitnesscommands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import commands.Command;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import exceptions.FitnessException;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import fitness.ExerciseType;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.ErrorMessageConstants.INSUFFICIENT_DELETE_PARAMS_ERROR_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.ErrorMessageConstants.INCORRECT_INTEGER_ERROR_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.ErrorMessageConstants.INDEX_OUT_OF_BOUNDS_ERROR_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"public class DeleteExerciseCommand implements Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    public static final int REQUIRED_DELETE_PARAMS \u003d 2;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    private FitnessMotivator fitnessMotivator;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"    private String[] commandArgs;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    public DeleteExerciseCommand(FitnessMotivator fitnessMotivator, String commandArgs)","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"            throws FitnessException {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"        this.fitnessMotivator \u003d fitnessMotivator;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"        this.commandArgs \u003d checkCommandArgs(commandArgs);","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"     * Validates the command argument given for the fitness delete command.","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"     * @param commandArgs A string of arguments","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"     * @return A split array of strings of size 2 if there are no issues found with the string","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"     *         input","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"     * @throws FitnessException Thrown when improper command arguments are found","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"    private String[] checkCommandArgs(String commandArgs) throws FitnessException {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"        String[] tempCommandArgs \u003d commandArgs.split(\" \", 2);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"        // Handles insufficient parameters entered","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"        if (tempCommandArgs.length !\u003d REQUIRED_DELETE_PARAMS) {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"            throw new FitnessException(INSUFFICIENT_DELETE_PARAMS_ERROR_MESSAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"        // String Cleaning","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"        tempCommandArgs[0] \u003d tempCommandArgs[0].trim().toUpperCase();","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"        tempCommandArgs[1] \u003d tempCommandArgs[1].trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"        ExerciseType type \u003d ExerciseType.valueOf(tempCommandArgs[0]);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"        int maxIndex \u003d fitnessMotivator.allExercises.size(type);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"        // Handles the case where non-integer values are entered in parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"        if (!tempCommandArgs[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"            throw new FitnessException(INCORRECT_INTEGER_ERROR_MESSAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"        // Handles the case where the integer entered is out of bounds","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"        if (Integer.parseInt(tempCommandArgs[1]) \u003e maxIndex) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"            throw new FitnessException(INDEX_OUT_OF_BOUNDS_ERROR_MESSAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"        return tempCommandArgs;","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"    public void execute() throws FitnessException {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"        fitnessMotivator.deleteExercise(commandArgs);","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"        return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Daviancold":70}},{"path":"src/main/java/commands/fitnesscommands/ErrorMessageConstants.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package commands.fitnesscommands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":" * Class that stores static constants of error messages","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":" * */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"public class ErrorMessageConstants {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"    public static final String INSUFFICIENT_ADD_PARAMS_ERROR_MESSAGE \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"            \"Forgetting something? Key in the correct parameters please!\" +","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"            System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"            \"Example: fitness add \u003cexercise_type\u003e, \u003cexercise_name\u003e, \u003csets\u003e, \u003creps\u003e\";","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"    public static final String INSUFFICIENT_DELETE_PARAMS_ERROR_MESSAGE \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"            \"Forgetting something? Key in the correct parameters please!\" +","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"            System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"            \"Example: fitness delete \u003ctype\u003e, \u003cindex\u003e\";","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"    public static final String INDEX_OUT_OF_BOUNDS_ERROR_MESSAGE \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"            \"Please enter an index within bounds!\" + System.lineSeparator() +","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"            \"You can do \u0027fitness get \u003ctype\u003e to see the indexes of the exercises!\";","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"    public static final String ILLEGAL_TYPE_ERROR_MESSAGE \u003d \"Hmm...Invalid type of exercise...\" +","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"            System.lineSeparator() + \"Only the following exercise types are allowed: \" +","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"            \"Arms, Chest, Abs, Back and Legs!\";","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"    public static final String INCORRECT_INTEGER_ERROR_MESSAGE \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"            \"Did you enter your Sets and Reps correctly? :(\";","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"    public static final String ILLEGAL_GOAL_PARAMS_ERROR_MESSAGE \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"            \"Are you trying to create a new goal? You can try \u0027goal new\u0027!\" +","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"            System.lineSeparator() +","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"            \"You can also do \u0027goal \u003cindex\u003e\u0027 to mark and unmark exercises!\";","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Daviancold":32}},{"path":"src/main/java/commands/fitnesscommands/GetExercisesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package commands.fitnesscommands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import exceptions.FitnessException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import fitness.ExerciseType;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.ErrorMessageConstants.ILLEGAL_TYPE_ERROR_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"public class GetExercisesCommand implements Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"    private FitnessMotivator fitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    private ExerciseType exerciseType;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    public GetExercisesCommand (FitnessMotivator fitnessMotivator, String commandArgs)","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"            throws FitnessException {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"        this.fitnessMotivator \u003d fitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"        exerciseType \u003d checkCommandArgs(commandArgs);","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"     * Validates the command argument given for the fitness get command. In this command, the","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"     * argument is optional.","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"     * @param commandArgs An argument string","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"     * @return null if there is no argument provided, otherwise returns an Object of type","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"     *         ExerciseType for further processing","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"     * @throws FitnessException Thrown when improper command arguments are found","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"    private ExerciseType checkCommandArgs(String commandArgs) throws FitnessException {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"        String exerciseTypeString \u003d commandArgs.toUpperCase().trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"        // Checks if the arguments entered is empty","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"        if (exerciseTypeString.isEmpty() || exerciseTypeString.isBlank()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"            return null;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"        // Checks that the entered type belongs to one of the ExerciseType Enum. If it is, return","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"        // the type, else throws an error","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"            return ExerciseType.valueOf(exerciseTypeString);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"            throw new FitnessException(ILLEGAL_TYPE_ERROR_MESSAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"    public void execute() throws FitnessException {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"        if (exerciseType \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"            fitnessMotivator.getExercises();","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"            fitnessMotivator.getTypeExercises(exerciseType);","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"        return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Daviancold":62}},{"path":"src/main/java/commands/fitnesscommands/GoalExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package commands.fitnesscommands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import commands.Command;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import exceptions.FitnessException;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.ErrorMessageConstants.ILLEGAL_GOAL_PARAMS_ERROR_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"public class GoalExerciseCommand implements Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"    private FitnessMotivator fitnessMotivator;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"    private String commandArgs;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    public GoalExerciseCommand(FitnessMotivator fitnessMotivator, String commandArgs) {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"        this.fitnessMotivator \u003d fitnessMotivator;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"        this.commandArgs \u003d commandArgs;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"     * Validates the command argument given for the fitness goal command. In this command, the","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"     * argument is optional.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"     * @param commandArgs An argument string","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"     * @return null if there is no argument provided, otherwise returns a String for","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"     *         further processing","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"     * @throws FitnessException Thrown when improper command arguments are found","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"    private String checkCommandArgs(String commandArgs) throws FitnessException {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"        if (commandArgs.isBlank() || commandArgs.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"            return null;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"        commandArgs \u003d commandArgs.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"        if (commandArgs.equalsIgnoreCase(\"new\")) {","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"            return \"new\";","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"        if (commandArgs.matches(\"^[1-5]$\")) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"            return commandArgs;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"        throw new FitnessException(ILLEGAL_GOAL_PARAMS_ERROR_MESSAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"    public void execute() throws FitnessException {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"        String parsedCommand \u003d checkCommandArgs(commandArgs);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"        if (parsedCommand \u003d\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"            // \u0027fitness goal\u0027 command","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"            fitnessMotivator.goalStatus();","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"            if (parsedCommand.contentEquals(\"new\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"                // \u0027fitness goal new\u0027 command","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"                fitnessMotivator.newGoals();","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"            if (parsedCommand.matches(\"^[1-5]$\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"                // \u0027fitness goal \u003cindex\u003e\u0027 command","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"                int exerciseIndex \u003d Integer.parseInt(parsedCommand);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"                fitnessMotivator.toggleGoal(exerciseIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"        return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"Daviancold":67}},{"path":"src/main/java/commands/fitnesscommands/HelpExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package commands.fitnesscommands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import commands.Command;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import exceptions.FitnessException;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"public class HelpExerciseCommand implements Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"    private FitnessMotivator fitnessMotivator;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"    public HelpExerciseCommand (FitnessMotivator fitnessMotivator) {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"        this.fitnessMotivator \u003d fitnessMotivator;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"    public void execute() throws FitnessException {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"        fitnessMotivator.printHelp();","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"        return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Daviancold":24}},{"path":"src/main/java/commands/focuscommands/CheckTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to check the current time for focus timer object.","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"public class CheckTimeCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    FocusTimer focustimer;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a StopTimerCommand with the concerned focus timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     * @param timer FocusTimer object to be stopped.","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    public CheckTimeCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        this.focustimer \u003d timer;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by checking the current timing of the timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * @throws FocusException If the status of focus timer is not currently running.","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        if(!focustimer.getStartStatus()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Timer have not started. Please use focus start.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        focustimer.checkTime();","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit message.","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"JingHaoooo":44}},{"path":"src/main/java/commands/focuscommands/SetPauseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to pause the current timer for focus timer object.","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"public class SetPauseCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer focusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a StopTimerCommand with the concerned focus timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     * @param timer FocusTimer object to be stopped.","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    public SetPauseCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     * Checks whether the timer is currently running or is currently being paused.","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * @return true if timer is currently paused or hasn\u0027t started. False otherwise.","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    public boolean timerNotStartedOrPaused() {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"        return (focusTimer.getPausedStatus() || !focusTimer.getStartStatus());","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by pausing the timing of the timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     * @throws FocusException If the status of focus timer is not currently running or is in paused state.","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        if (timerNotStartedOrPaused()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Timer is already paused or Timer hasn\u0027t started.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setPauseTiming();","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit message.","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":53}},{"path":"src/main/java/commands/focuscommands/SetResumeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to resume the current timer for focus timer object.","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"public class SetResumeCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer focusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a StopTimerCommand with the concerned focus timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     * @param timer FocusTimer object to be stopped.","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    public SetResumeCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     * Checks whether the timer is currently running or is currently being paused.","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * @return true if timer has been started and is currently in the paused state.","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    public boolean timerStartedAndPaused() {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"        return (focusTimer.getStartStatus() \u0026\u0026 focusTimer.getPausedStatus());","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by resuming the timing of the timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     * @throws FocusException If the status of focus timer is not currently running or is not in paused state.","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"        if (!timerStartedAndPaused()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Timer is already resumed or Timer hasn\u0027t started..\");","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setResumeTiming();","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit message.","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":52}},{"path":"src/main/java/commands/focuscommands/SetTimingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to set duration for focus timer object countdown timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"public class SetTimingCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    private FocusTimer focusTimer;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    private int desiredDuration;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a SetTimingCommand with the concerned focus timer and input timing.","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     * @throws FocusException If the input duration is invalid","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"    public SetTimingCommand(FocusTimer timer, String userInput) throws FocusException {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"        String[] parts \u003d userInput.trim().split(\"\\\\s\", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"            this.desiredDuration \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"            String invalidIndex \u003d \"Invalid duration\";","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(invalidIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by resuming the timing of the timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() {","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setDuration(desiredDuration);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit message.","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"JingHaoooo":50}},{"path":"src/main/java/commands/focuscommands/StartTimerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to start the timer for focus timer object.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"public class StartTimerCommand implements Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer focusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a StartTimerCommand with the concerned focus timer.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     * @param timer FocusTimer object to be started.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    public StartTimerCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by setting the start timing of the timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * @throws FocusException If the status of focus timer is already running.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        if (focusTimer.getStartStatus()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Error! Clock has already started.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setStartTiming();","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit message.","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"JingHaoooo":44}},{"path":"src/main/java/commands/focuscommands/StopTimerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to stop the timer for focus timer object.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"public class StopTimerCommand implements Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer focusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a StopTimerCommand with the concerned focus timer.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     * @param timer FocusTimer object to be stopped.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    public StopTimerCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by setting the stop timing of the timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * @throws FocusException If the status of focus timer is not currently running.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        if (!focusTimer.getStartStatus()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Error! Clock is not running...\");","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setStopTiming();","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit message.","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"JingHaoooo":44}},{"path":"src/main/java/commands/focuscommands/SwitchTimerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package commands.focuscommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":" * Represents the command to switch between count up timer and count down timer of focus timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"public class SwitchTimerCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer focusTimer;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a StopTimerCommand with the concerned focus timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"     * @param timer FocusTimer object to be stopped.","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"    public SwitchTimerCommand(FocusTimer timer) {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"        this.focusTimer \u003d timer;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     * Executes the command by switching the mode of the timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     * @throws FocusException If the status of focus timer is not currently running.","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    public void execute() throws FocusException {","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        if (focusTimer.getStartStatus()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Unable to change as timer is running\");","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.switchTimer();","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"     * Determines whether the command is an exit message.","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"     * @return Returns false since this is not an exit command.","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":45}},{"path":"src/main/java/commands/habitcommands/AddHabitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.Habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":" * Represents a command to add new habits.","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"public class AddHabitCommand implements Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    private Habit newHabit;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"     * Constructs a AddHabitCommand object with user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"     * @param habitTracker The HabitTracker instance to be used for storing the habits.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"     * @param habitCommandArgs User input for the add habit command.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any formatting issues.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    public AddHabitCommand(HabitTracker habitTracker, String habitCommandArgs) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"        if (habitCommandArgs.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Habit Description cannot be left empty.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        this.newHabit \u003d new Habit(habitCommandArgs.trim());","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"     * Execute the command to add a new habit into the habit tracker.","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any formatting issues.","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"        habitTracker.addHabit(newHabit);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":47}},{"path":"src/main/java/commands/habitcommands/DeleteHabitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":" * Represents a command to add new habits.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"public class DeleteHabitCommand implements Command{","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    private static final int REQUIRED_PARAMETERS \u003d 2;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"    private int habitID;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"     * Constructs a DeleteHabitCommand object with user input.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"     * @param habitTracker The HabitTracker instance to be used for storing the habits.","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"     * @param habitCommandArgs User input for the delete habit command.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any formatting issues.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"    public DeleteHabitCommand(HabitTracker habitTracker, String habitCommandArgs) throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        String[] parts \u003d habitCommandArgs.trim().split(\"\\\\s+\");","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        if (parts.length !\u003d REQUIRED_PARAMETERS) {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a habit ID.\\n\" +","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"                    \"Use Format: habit delete \u003chabit_ID\u003e\");","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"            this.habitID \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"     * Execute the command to delete a habit from the habit tracker.","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any formatting issues.","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"        habitTracker.deleteHabit(habitID);","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"genexus85":55}},{"path":"src/main/java/commands/habitcommands/HabitHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":" * Represents a command to display the habit tracker help menu","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"public class HabitHelpCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    private static final String[] HELP_MENU_INSTRUCTIONS \u003d {","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"        \"habit add \u003chabit_description\u003e: Add a new habit\",","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"        \"habit list: List out all existing habits\",","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"        \"habit update /id \u003chabit_ID\u003e /by \u003cincrement_count\u003e: Increase habit count after completing a habit\",","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"        \"habit delete /id \u003chabit_ID\u003e: Delete a habit\",","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"        \"habit set /id \u003chabit_ID\u003e /priority \u003cpriority_level\u003e: Set priority level for habits (HIGH, MED, LOW)\",","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"        \"habit sort: Sort habit list according to priority level\",","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"    };","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"     * Execute the command to display the habit tracker help menu","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"    public void execute() {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        ArrayList\u003cString\u003e helpMenuInstructionsList \u003d new ArrayList\u003c\u003e(Arrays.asList(HELP_MENU_INSTRUCTIONS));","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        assert helpMenuInstructionsList.size() \u003d\u003d 6 : \"Help menu should have 6 instructions\";","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"        Ui.printList(helpMenuInstructionsList, \"Commands for habit tracker feature:\");","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"genexus85":36}},{"path":"src/main/java/commands/habitcommands/ListHabitsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":" * Represents a command to display a list of all habits","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"public class ListHabitsCommand implements Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"     * Constructs a ListHabitsCommand object.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"     * @param habitTracker The HabitTracker instance to be used for storing the habits.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"    public ListHabitsCommand(HabitTracker habitTracker) {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"     * Execute the command to list out all the habits in the habit tracker.","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"    public void execute() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        habitTracker.listHabits();","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":33}},{"path":"src/main/java/commands/habitcommands/SetPriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":" * Represents a command to set the priority of a habit.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"public class SetPriorityCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"    private static final int REQUIRED_PARAMETERS \u003d 3;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    private String priority;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"    private int habitID;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"     * Constructs a SetPriorityCommand object with user input","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"     * @param habitTracker The HabitTracker instance to be used for storing the habits.","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"     * @param habitCommandArgs User input for the set priority command.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any formatting issues, or if there is an","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"     *                        invalid habit ID or priority level","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    public SetPriorityCommand(HabitTracker habitTracker, String habitCommandArgs) throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        String[] parts \u003d habitCommandArgs.trim().split(\"/id | /priority\");","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        if (!(parts.length \u003d\u003d REQUIRED_PARAMETERS)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Incorrect set priority command formatting\\n\" +","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"                    \"Use Format: habit set /id \u003chabit_ID\u003e /priority \u003cpriority_level\u003e\\n\" +","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"                    \"Note: for \u003cpriority_level\u003e, there are 3 levels --\u003e low, med, high\");","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"            this.habitID \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"        String priorityLevel \u003d parts[2].trim().toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"        if (!priorityLevel.equals(\"high\") \u0026\u0026 !priorityLevel.equals(\"med\") \u0026\u0026 !priorityLevel.equals(\"low\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Invalid priority level!\");","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"        this.priority \u003d priorityLevel;","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"     * Execute the command to set priority of a habit.","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any formatting issues.","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"genexus85"},"content":"        habitTracker.setPriorityLevel(habitID, priority);","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"genexus85":63}},{"path":"src/main/java/commands/habitcommands/SortHabitsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":" * Represents a command to sort the habits according to their priority.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"public class SortHabitsCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"     * Constructs a SortHabitsCommand object.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"     * @param habitTracker The HabitTracker instance to be used for storing the habits.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"    public SortHabitsCommand(HabitTracker habitTracker) {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"     * Execute the command to sort the habits according to their priority.","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any formatting issues.","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        habitTracker.sortHabits();","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"genexus85":37}},{"path":"src/main/java/commands/habitcommands/UpdateHabitCountCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package commands.habitcommands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":" * Represents a command to update a habit count.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"public class UpdateHabitCountCommand implements Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"    private static final int REQUIRED_PARAMETERS \u003d 3;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    private int habitID;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"    private String updatedCount;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"     * Constructs a UpdateHabitCountCommand object with user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"     * @param habitTracker The HabitTracker instance to be used for storing the habits.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"     * @param habitCommandArgs User input for the update habit count command.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any formatting issues.","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"    public UpdateHabitCountCommand(HabitTracker habitTracker, String habitCommandArgs) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"        this.habitTracker \u003d habitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        String[] parts \u003d habitCommandArgs.trim().split(\"/id | /by\");","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        if (parts.length !\u003d REQUIRED_PARAMETERS) {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Incorrect update command formatting\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"                    \"Use Format: habit update /id \u003chabit_ID\u003e /by \u003cincrement_count\u003e\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"                    \"Note: for \u003cincrement_count\u003e, use \u0027+1\u0027 to increase by 1, \u0027-1\u0027 to decrease by 1\");","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"            this.habitID \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"        this.updatedCount \u003d parts[2].trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"     * Execute the command to update the habit count of a habit.","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"    public void execute() throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"        habitTracker.updateHabitCount(habitID, updatedCount);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":57}},{"path":"src/main/java/commands/reflectcommands/GetReflectionQuestionsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":" * A command implementation for retrieving reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"public class GetReflectionQuestionsCommand implements Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"     * Constructs a GetReflectionQuestionsCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager The ReflectionManager instance to be used for retrieving questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * @param reflectionCommandArgs The string representing the reflection command arguments.","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the command arguments is not empty.","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    public GetReflectionQuestionsCommand(ReflectionManager reflectionManager, String reflectionCommandArgs)","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        if (!reflectionCommandArgs.isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Additional parameters for \u0027reflect get\u0027 command are not allowed.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        this.reflectionManager \u003d reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"     * Executes the command to retrieve and print five random reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"    public void execute() {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        reflectionManager.printFiveRandomQuestions();","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"     * Determines if this command represents an exit action.","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":47}},{"path":"src/main/java/commands/reflectcommands/ListFavouriteReflectionsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" * A command implementation for listing favorite reflection items.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"public class ListFavouriteReflectionsCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"     * Constructs a ListFavouritesCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager The ReflectionManager instance to be used for listing favorite items.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * @param reflectionCommandArgs The string representing the reflection command arguments.","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the command arguments is not empty.","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    public ListFavouriteReflectionsCommand(ReflectionManager reflectionManager, String reflectionCommandArgs)","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        if (!reflectionCommandArgs.isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Additional parameters for \u0027reflect list\u0027 command are not allowed.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        this.reflectionManager \u003d reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"     * Executes the command to print the list of favorite reflection items.","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"    public void execute() {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        reflectionManager.printFavourites();","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"     * Determines if this command represents an exit action.","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"        return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"damiwee":48}},{"path":"src/main/java/commands/reflectcommands/ReflectionHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":" * Represents a command to display the help menu for reflection commands.","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"public class ReflectionHelpCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"     * Constructs a ReflectionHelpCommand with the provided ReflectionManager.","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager The ReflectionManager to be used.","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"     * @param reflectionCommandArgs The string representing the reflection command arguments.","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the command arguments is not empty.","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    public ReflectionHelpCommand(ReflectionManager reflectionManager, String reflectionCommandArgs)","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"        if (!reflectionCommandArgs.isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Additional parameters for \u0027reflect help\u0027 command are not allowed.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        this.reflectionManager \u003d reflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"     * Executes the command to print the help menu.","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"    public void execute() {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        reflectionManager.printHelpMenu();","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"     * @return false, as this command is not an exit command.","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"damiwee":47}},{"path":"src/main/java/commands/reflectcommands/SaveToFavouritesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":" * A command implementation for saving a reflection item to favorites.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"public class SaveToFavouritesCommand implements Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private int reflectionId;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"     * Constructs a SaveToFavouritesCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager     The ReflectionManager instance to be used for saving the reflection item.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * @param reflectionCommandArgs The ID of the reflection item to be saved.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the provided reflection ID is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    public SaveToFavouritesCommand(ReflectionManager reflectionManager, String reflectionCommandArgs)","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        this.reflectionManager \u003d reflectionManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"            reflectionId \u003d Integer.parseInt(reflectionCommandArgs);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Key in valid favourite reflection ID, between 1 and 5\");","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"     * Executes the command to save the reflection item to favorites.","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if an error occurs during the saving process.","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    public void execute() throws ReflectException {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"        reflectionManager.saveReflectionQuestion(reflectionId);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"     * Determines if this command represents an exit action.","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"        return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"damiwee":51}},{"path":"src/main/java/commands/reflectcommands/UnsaveFromFavouritesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" * A command implementation for unsaving a reflection item from favorites.","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"public class UnsaveFromFavouritesCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    private int reflectionId;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"     * Constructs a UnsaveFromFavouritesCommand.","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager     The ReflectionManager instance to be used for saving the reflection item.","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * @param reflectionCommandArgs The ID of the reflection item to be saved.","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the provided reflection ID is invalid.","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    public UnsaveFromFavouritesCommand(ReflectionManager reflectionManager, String reflectionCommandArgs)","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        this.reflectionManager \u003d reflectionManager;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"            reflectionId \u003d Integer.parseInt(reflectionCommandArgs);","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Key in valid favourite reflection ID. Only numbers are allowed.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"     * Executes the command to save the reflection item to favorites.","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if an error occurs during the saving process.","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    public void execute() throws ReflectException {","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        reflectionManager.unsaveReflectionQuestion(reflectionId);","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"     * Determines if this command represents an exit action.","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"     * @return Always returns false, as this command is not an exit command.","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"damiwee":52}},{"path":"src/main/java/commands/sleepcommands/AddSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import sleep.SleepCycle;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":" * Represents a command to add sleep cycles.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"public class AddSleepCommand implements Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    private SleepTracker sleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    private SleepCycle sleepCycleToAdd;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     * Constructs a new AddSleepCommand object with user input.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"     * @param sleepCommandArgs User input for the add sleep cycles command.","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"    public AddSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d sleepCommandArgs.trim().split(\"/date\", 2);","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"        if (userCommand.length !\u003d 2) {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"                    + \"sleep add \u003choursSlept\u003e /date \u003cdate\u003e\");","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"        if (userCommand[1].isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty date\");","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        if (userCommand[0].isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty number of hours slept\");","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"        this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"        double hourSlept;","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"        LocalDate dateSlept;","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"            hourSlept \u003d Double.parseDouble(userCommand[0].trim());","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid number of hours slept\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"                + \"E.g: 7.5\");","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"            dateSlept \u003d DateFormat.convertStringToDate(userCommand[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"                + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"OKW32"},"content":"        assert !sleepCommandArgs.isEmpty() : \"Sleep cycle should not be added\";","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"        sleepCycleToAdd \u003d new SleepCycle(hourSlept, dateSlept);","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"    public void execute() throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"        sleepTracker.addSleepCycle(sleepCycleToAdd);","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":64,"genexus85":1}},{"path":"src/main/java/commands/sleepcommands/DeleteSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import sleep.DeleteMode;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":" * Represents a command to delete sleep cycles.","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"public class DeleteSleepCommand implements Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    private static final String ERROR_MESSAGE \u003d \"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"            + \"sleep delete /date \u003cdate\u003e\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"            + \"OR\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"            + \"sleep delete /before \u003cdate\u003e\" +System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"            + \"OR\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"            + \"sleep delete /from \u003cdate\u003e /to \u003cdate\u003e\";","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    private SleepTracker sleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"    private LocalDate startDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"    private DeleteMode deleteMode;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"     * Constructs a new DeleteSleepCommand object with user input.","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the delete sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"    public DeleteSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        if (sleepCommandArgs.isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(ERROR_MESSAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"        this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"        if (sleepCommandArgs.contains(\"/date\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"            deleteSleep(sleepCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"        } else if (sleepCommandArgs.contains(\"/before\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"            deleteSleepBefore(sleepCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"            deleteSleepBetween(sleepCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"     * Further parse user input when user wants to delete with deleteMode \u003d FIND.","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the delete sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"    private void deleteSleep(String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"        deleteMode \u003d DeleteMode.FIND;","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d sleepCommandArgs.trim().split(\"/date\", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"        if (userCommand.length !\u003d 2 || !userCommand[0].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(ERROR_MESSAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"        if (userCommand[1].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"OKW32"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"OKW32"},"content":"            date \u003d DateFormat.convertStringToDate(userCommand[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep cycle to delete\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"OKW32"},"content":"                    + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"OKW32"},"content":"        startDate \u003d date;","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"OKW32"},"content":"        endDate \u003d date;","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"OKW32"},"content":"     * Further parse user input when user wants to delete with deleteMode \u003d BEFORE.","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the delete sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"OKW32"},"content":"    private void deleteSleepBefore(String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"OKW32"},"content":"        deleteMode \u003d DeleteMode.BEFORE;","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d sleepCommandArgs.trim().split(\"/before\", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"OKW32"},"content":"        if (userCommand.length !\u003d 2 || !userCommand[0].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(ERROR_MESSAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"OKW32"},"content":"        if (userCommand[1].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"OKW32"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"OKW32"},"content":"            date \u003d DateFormat.convertStringToDate(userCommand[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep cycle to delete\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"OKW32"},"content":"                    + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"OKW32"},"content":"        startDate \u003d date;","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"OKW32"},"content":"        endDate \u003d date;","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"OKW32"},"content":"     * Further parse user input when user wants to delete with deleteMode \u003d BETWEEN.","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the delete sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"OKW32"},"content":"    private void deleteSleepBetween(String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"OKW32"},"content":"        deleteMode \u003d DeleteMode.BETWEEN;","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"OKW32"},"content":"        String[] userCommandStart \u003d sleepCommandArgs.trim().split(\"/from\", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"OKW32"},"content":"        String[] userCommandEnd \u003d userCommandStart[1].trim().split(\"/to\", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"OKW32"},"content":"        if (!userCommandStart[0].isBlank() || userCommandStart.length !\u003d 2 || userCommandEnd.length !\u003d 2) {","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(ERROR_MESSAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"OKW32"},"content":"        if (userCommandEnd[0].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty start date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"OKW32"},"content":"        if (userCommandEnd[1].isBlank()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty end date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"OKW32"},"content":"            startDate \u003d DateFormat.convertStringToDate(userCommandEnd[0].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"OKW32"},"content":"            endDate \u003d DateFormat.convertStringToDate(userCommandEnd[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"OKW32"},"content":"                    + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"OKW32"},"content":"        if (endDate.isBefore(startDate)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Start date must be before end date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"OKW32"},"content":"    public void execute() throws SleepException{","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"OKW32"},"content":"        switch(deleteMode) {","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"OKW32"},"content":"        case FIND:","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"OKW32"},"content":"            sleepTracker.deleteSleepCycle(startDate);","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"OKW32"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"OKW32"},"content":"        case BEFORE:","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"OKW32"},"content":"            sleepTracker.deleteSleepCyclesBefore(endDate);","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"OKW32"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"OKW32"},"content":"        case BETWEEN:","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"OKW32"},"content":"            sleepTracker.deleteSleepCyclesBetween(startDate, endDate);","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"OKW32"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"OKW32"},"content":"        default:","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Error in detection of deletion mode\");","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"OKW32":151}},{"path":"src/main/java/commands/sleepcommands/GetSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":" * Represents a command to get sleep cycles.","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"public class GetSleepCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    private SleepTracker sleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    private LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"     * Constructs a new GetSleepCommand object with user input.","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the get sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"    public GetSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"        if (sleepCommandArgs.isEmpty()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"                    + \"sleep get \u003cdate\u003e\");","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"            this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"            this.date \u003d DateFormat.convertStringToDate(sleepCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep cycle to get\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"                    + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"        sleepTracker.getSleepCycle(date);","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"OKW32":47}},{"path":"src/main/java/commands/sleepcommands/ListSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":" * Represents a command to list sleep cycles.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"public class ListSleepCommand implements Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    private SleepTracker sleepTracker;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"     * Constructs a new ListSleepCommand object with user input.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the list sleep cycles command.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    public ListSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"        if (!sleepCommandArgs.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"                    + \"sleep list\");","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"        assert sleepCommandArgs.isEmpty() : \"Sleep cycle should not be listed\";","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"        sleepTracker.listSleepCycles();","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":38}},{"path":"src/main/java/commands/sleepcommands/SaveSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":" * Represents a command to save sleep cycles.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"public class SaveSleepCommand implements Command{","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    private SleepTracker sleepTracker;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"     * Constructs a new SaveSleepCommand object with user input.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the save sleep cycles command.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    public SaveSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"        if (!sleepCommandArgs.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"                    + \"sleep save\");","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"        assert sleepCommandArgs.isEmpty() : \"Sleep cycle should not be saved\";","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"        sleepTracker.saveSleepCycles();","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"OKW32":38}},{"path":"src/main/java/commands/sleepcommands/UpdateSleepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package commands.sleepcommands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":" * Represents a command to update sleep cycles.","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"public class UpdateSleepCommand implements Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    private SleepTracker sleepTracker;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    private LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    private double hours;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     * Constructs a new UpdateSleepCommand object with user input.","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"     * @param sleepCommandArgs User input for the update sleep cycles command.","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException if there is any formatting issues.","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"    public UpdateSleepCommand(SleepTracker sleepTracker, String sleepCommandArgs) throws SleepException {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d sleepCommandArgs.trim().split(\"/new\", 2);","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"        if (userCommand.length !\u003d 2) {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Please use proper format: \" + System.lineSeparator()","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"                    + \"sleep update \u003cdate\u003e /new \u003chours\u003e\");","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"        if (userCommand[0].isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty date\");","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        if (userCommand[1].isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in non-empty number of hours to update to\");","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"            this.sleepTracker \u003d sleepTracker;","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"            date \u003d DateFormat.convertStringToDate(userCommand[0].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"            hours \u003d Double.parseDouble(userCommand[1].trim());","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid date of sleep cycle to be updated\" + System.lineSeparator()","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"                    + \"E.g: 22/12/2023\");","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"Key in valid number of hours to update to\");","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"    public void execute() {","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"OKW32"},"content":"        sleepTracker.updateSleepCycle(date, hours);","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"OKW32":59}},{"path":"src/main/java/date/DateFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package date;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":" * Represents a class to convert string to date and vice versa.","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":" * Ensures that only one type of format for date is to be used.","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"public class DateFormat {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    private static final DateTimeFormatter FORMAT \u003d  DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"    public static LocalDate convertStringToDate(String s) {","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"        return LocalDate.parse(s , FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"    public static String convertDateToString(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"        return date.format(FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"OKW32":20}},{"path":"src/main/java/exceptions/FitnessException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class FitnessException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public FitnessException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/FocusException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class FocusException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public FocusException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/HabitException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class HabitException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public HabitException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/ReflectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class ReflectException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public ReflectException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/SleepException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class SleepException extends Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public SleepException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":7}},{"path":"src/main/java/exceptions/Wellness360Exception.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package exceptions;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"public class Wellness360Exception extends Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"    public Wellness360Exception(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"        super(\"ERROR MSG: \" + message);","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":6,"genexus85":1}},{"path":"src/main/java/fitness/ExerciseType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":" * Enumeration Class used for exercise type, to prevent incorrect types from being used","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":" * */","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"public enum ExerciseType {","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"    ARMS,","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"    CHEST,","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"    ABS,","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    BACK,","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"    LEGS;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"        String string \u003d super.toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"        return string.substring(0, 1).toUpperCase() + string.substring(1).toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Daviancold":18}},{"path":"src/main/java/fitness/FitnessMotivator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import fitness.exercise.Exercise;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import fitness.exercise.ExerciseList;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import fitness.goals.ExerciseGoalList;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"import java.util.Random;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.DeleteExerciseCommand.REQUIRED_DELETE_PARAMS;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"import static fitness.UiMessageConstants.ADD_EXERCISE_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"import static fitness.UiMessageConstants.EMPTY_GOAL_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"import static fitness.UiMessageConstants.GOAL_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"import static fitness.UiMessageConstants.NEW_GOAL_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"import static fitness.UiMessageConstants.GOAL_STATUS_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"import static fitness.UiMessageConstants.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"import static fitness.UiMessageConstants.DELETE_EXERCISE_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"import static fitness.UiMessageConstants.HELP_MENU_INSTRUCTIONS;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":" * Contains methods that execute given the respective commands","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":" * */","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"public class FitnessMotivator {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"    public static final String DATA_FILE_PATH \u003d \"./data/exerciselist.txt\";","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"    public static final String GOALS_FILE_PATH \u003d \"./data/exercisegoallist.txt\";","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"    // Required Number of parameters for the fitness add command","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"    public static final int REQUIRED_NUM_OF_PARAMETERS \u003d 4;","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"    public ExerciseList allExercises \u003d new ExerciseList();","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"    public ExerciseGoalList dailyGoals \u003d new ExerciseGoalList();","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"    public FitnessMotivator() {}","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"    private Exercise[] fiveRandomExercises() {","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"        int randomInt1 \u003d random.nextInt(allExercises.size(ExerciseType.ARMS));","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"        int randomInt2 \u003d random.nextInt(allExercises.size(ExerciseType.CHEST));","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"        int randomInt3 \u003d random.nextInt(allExercises.size(ExerciseType.ABS));","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"        int randomInt4 \u003d random.nextInt(allExercises.size(ExerciseType.BACK));","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"        int randomInt5 \u003d random.nextInt(allExercises.size(ExerciseType.LEGS));","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"        Exercise exercise1 \u003d allExercises.get(ExerciseType.ARMS, randomInt1);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"        Exercise exercise2 \u003d allExercises.get(ExerciseType.CHEST, randomInt2);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"        Exercise exercise3 \u003d allExercises.get(ExerciseType.ABS, randomInt3);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"        Exercise exercise4 \u003d allExercises.get(ExerciseType.BACK, randomInt4);","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"        Exercise exercise5 \u003d allExercises.get(ExerciseType.LEGS, randomInt5);","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"        return new Exercise[]{exercise1, exercise2, exercise3, exercise4, exercise5};","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"     * Gets one randomised exercise per type, then prints it to the UI.","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"     * @return A string that lists 5 exercises of different type","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"    public String getExercises() {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"        Exercise[] exercises \u003d fiveRandomExercises();","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"        String message \u003d \"These are some of the exercises you can do! \" +","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"                \"LETS GET STRONK MY G\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"                \"1. \" + exercises[0] + System.lineSeparator() +","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"                \"2. \" + exercises[1] + System.lineSeparator() +","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"                \"3. \" + exercises[2] + System.lineSeparator() +","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"                \"4. \" + exercises[3] + System.lineSeparator() +","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"                \"5. \" + exercises[4] + System.lineSeparator();","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"        Ui.printMessageWithSepNewLine(message);","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"        return message;","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Daviancold"},"content":"     * Add user created exercise into the existing list","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"Daviancold"},"content":"     * @param commandArgs A list of Strings that contain parameters for the Exercise object","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Daviancold"},"content":"    public void addExercises(String[] commandArgs) {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Daviancold"},"content":"        assert commandArgs.length \u003d\u003d REQUIRED_NUM_OF_PARAMETERS :","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"Daviancold"},"content":"            \"Something went wrong with parsing fitness add command arguments\";","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Daviancold"},"content":"        Exercise newExercise \u003d allExercises.newExercise(commandArgs);","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Daviancold"},"content":"        allExercises.add(newExercise);","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"Daviancold"},"content":"        Ui.printMessageWithSepNewLine(ADD_EXERCISE_MESSAGE + newExercise);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Daviancold"},"content":"     * Gets all the exercises that belong to the queried type, and prints it to the UI.","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"Daviancold"},"content":"     * @param type An object of type ExerciseType used for query","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Daviancold"},"content":"    public void getTypeExercises(ExerciseType type) {","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"Daviancold"},"content":"        ArrayList\u003cExercise\u003e exercisesByType \u003d allExercises.getType(type);","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Daviancold"},"content":"        String message \u003d \"Here are the \" + type + \" exercises as requested!\" +","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"Daviancold"},"content":"                System.lineSeparator();","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"Daviancold"},"content":"        Ui.printList(exercisesByType, message);","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"Daviancold"},"content":"     * Delete the exercise specified by the user, and prints the remaining exercises of the same","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"Daviancold"},"content":"     * type to the UI.","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"Daviancold"},"content":"     * @param commandArgs A list of strings that contain the index and ExerciseType to be deleted.","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"Daviancold"},"content":"    public void deleteExercise(String[] commandArgs) {","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"Daviancold"},"content":"        assert commandArgs.length \u003d\u003d REQUIRED_DELETE_PARAMS :","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"Daviancold"},"content":"                \"Something went wrong with parsing fitness delete command arguments\";","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"Daviancold"},"content":"        ExerciseType type \u003d ExerciseType.valueOf(commandArgs[0]);","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"Daviancold"},"content":"        int index \u003d Integer.parseInt(commandArgs[1]);","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"Daviancold"},"content":"        allExercises.remove(allExercises.get(type, index-1));","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"Daviancold"},"content":"        ArrayList\u003cExercise\u003e exercisesByType \u003d allExercises.getType(type);","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"Daviancold"},"content":"        Ui.printList(exercisesByType, DELETE_EXERCISE_MESSAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"Daviancold"},"content":"     * Creates new exercise goals for the user. If goals already exists, it will override the","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"Daviancold"},"content":"     * current goals with a set of new goals, then prints these goals to the Ui. Note that the","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"Daviancold"},"content":"     * goals are 5 random exercises extracted from the list of exercises in the Motivator.","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"Daviancold"},"content":"    public void newGoals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"Daviancold"},"content":"        dailyGoals.clear();","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"Daviancold"},"content":"        Exercise[] exercises \u003d fiveRandomExercises();","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"Daviancold"},"content":"        for (Exercise e: exercises) {","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"Daviancold"},"content":"            dailyGoals.add(e, false);","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"Daviancold"},"content":"        Ui.printMessageWithSepNewLine(NEW_GOAL_MESSAGE + dailyGoals.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"Daviancold"},"content":"     * Retrieves the status of current goals, then prints it to the Ui.","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"Daviancold"},"content":"    public void goalStatus() {","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"Daviancold"},"content":"        if (dailyGoals.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"Daviancold"},"content":"            Ui.printMessageWithSepNewLine(EMPTY_GOAL_MESSAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"Daviancold"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"Daviancold"},"content":"            Ui.printMessageWithSepNewLine(GOAL_MESSAGE + dailyGoals.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"Daviancold"},"content":"     * Gets the goal that the user requested, and toggles the state of the goal. If it is done, it","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"Daviancold"},"content":"     * will be marked as undone, and vice versa. All the goal status is then printed to the Ui.","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"Daviancold"},"content":"    public void toggleGoal(int index) {","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"Daviancold"},"content":"        dailyGoals.findExercise(index - 1).toggle();","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"Daviancold"},"content":"        dailyGoals.saveGoals();","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"Daviancold"},"content":"        Ui.printMessageWithSepNewLine(GOAL_STATUS_MESSAGE + dailyGoals.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"Daviancold"},"content":"     * Prints a set of commands that the user can refer to in order to use the Fitness Motivator.","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"Daviancold"},"content":"    public void printHelp() {","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"Daviancold"},"content":"        ArrayList\u003cString\u003e helpMenuInstructionsList \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"Daviancold"},"content":"                new ArrayList\u003c\u003e(Arrays.asList(HELP_MENU_INSTRUCTIONS));","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"Daviancold"},"content":"        Ui.printList(helpMenuInstructionsList, HELP_MESSAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Daviancold":169}},{"path":"src/main/java/fitness/UiMessageConstants.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":" * Class that stores static constants of FitnessMotivator Ui messages","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":" * */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"public class UiMessageConstants {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"    public static final String NEW_GOAL_MESSAGE \u003d \"Lets get working on today\u0027s exercises!\" +","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"            System.lineSeparator() + System.lineSeparator();","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    public static final String EMPTY_GOAL_MESSAGE \u003d \"There are no goals set :(\" +","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"            System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"            \"You can set one by doing \u0027goal new\u0027!\";","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    public static final String GOAL_MESSAGE \u003d \"Here are your goals for today. \" +","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"            \"Have you started? Don\u0027t be lazy ok?\" + System.lineSeparator() + System.lineSeparator();","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"    public static final String GOAL_STATUS_MESSAGE \u003d \"I see there are changes. \" +","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"            \"I hope you are making progress...\" + System.lineSeparator() + System.lineSeparator();","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"    public static final String HELP_MESSAGE \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"            \"Here is a list of possible commands you can use with the Fitness Motivator!\" +","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"                    System.lineSeparator();","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"    public static final String ADD_EXERCISE_MESSAGE \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"            \"I have added the following exercise into our list!\" + System.lineSeparator();","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"    public static final String DELETE_EXERCISE_MESSAGE \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"            \" I have deleted the exercise. Here are the exercises left in the list!\" +","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"            System.lineSeparator();","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"    public static final String[] HELP_MENU_INSTRUCTIONS \u003d {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"        \"fitness get: Get 5 random reflection questions\",","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"        \"fitness get \u003cexercise_type\u003e: Get a full list of exercises belonging to the exercise type\",","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"        \"fitness add \u003cexercise_type\u003e, \u003cexercise_name\u003e, \u003csets\u003e, \u003creps\u003e: \" +","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"                \"add an exercise to the list of exercises\",","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"        \"fitness delete \u003cexercise_type\u003e \u003cindex\u003e: Delete the exercise from the list of exercise.\" +","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"                \"The index is based on the index when you run \u0027fitness get \u003cexercise_type\u003e\",","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"        \"fitness goal: Retrieves the status of all current goals, if it exists\",","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"        \"fitness goal new: Overwrites current goals with new set of goals if it exists, \" +","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"                \"otherwise creates a brand new set of goals\",","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"        \"fitness goal \u003cindex\u003e: Toggle the status of the goal\",","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"        \"fitness help: Get help menu for reflect commands\"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"    };","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Daviancold":44}},{"path":"src/main/java/fitness/exercise/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness.exercise;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import fitness.ExerciseType;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"public class Exercise {","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"    protected String exerciseName;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"    protected ExerciseType exerciseType;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"    protected String sets;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    protected String reps;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"    public Exercise(String exerciseName, ExerciseType exerciseType, String sets, String reps) {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"        this.exerciseType \u003d exerciseType;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"        this.reps \u003d reps;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"    public ExerciseType getType() {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"        return exerciseType;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"    public String getExerciseName() {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"        return exerciseName;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"    public String getSets() {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"        return sets;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"    public String getReps() {","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"        return reps;","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"        return exerciseType + \": \" + exerciseName + \", \" + sets + \" sets \u0026 \" + reps + \" reps\";","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Daviancold":39}},{"path":"src/main/java/fitness/exercise/ExerciseBank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness.exercise;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":" * Class that stores static String Array constants of exercises for different body types","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":" * */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"public class ExerciseBank {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"    public static final String[] INIT_ARMS_EXERCISES \u003d {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"        \"Cable Triceps Push down,Arms,3,8\", \"Barbell Curls,Arms,3,8\", \"Preacher Curls,Arms,3,8\",","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"        \"Skullcrushers,Arms,3,8\", \"Lateral Raises,Arms,3,8\"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    };","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"    public static final String[] INIT_CHEST_EXERCISES \u003d {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"        \"Bench Press,Chest,3,8\", \"Incline Bench Press,Chest,3,8\", \"Diamond Push-up,Chest,3,15\",","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"        \"Cable Flies,Chest,3,8\", \"Wide Arm Push-up,Chest,3,15\"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    };","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"    public static final String[] INIT_ABS_EXERCISES \u003d {","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"        \"Sit-ups,Abs,3,20\", \"Russian Twists,Abs,3,20\", \"Crunches,Abs,5,20\",","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"        \"Flutter Kicks,Abs,4,20\", \"Weighted Sit-Ups,Abs,3,20\"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    };","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"    public static final String[] INIT_BACK_EXERCISES \u003d {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"        \"Pull Ups,Back,3,6\", \"Lateral Rows,Back,3,8\", \"Deadlift,Back,3,5\",","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"        \"Weighted Pull Ups,Back,3,6\", \"Cable Rows,Back,3,8\"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"    };","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"    public static final String[] INIT_LEGS_EXERCISES \u003d {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"        \"Weighted Squats,Legs,3,10\", \"Leg Press,Legs,3,8\", \"Leg Curl,Legs,3,8\",","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"        \"Leg Extensions,Legs,3,10\", \"Calf Raises,Legs,3,10\"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"    };","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"Daviancold":27}},{"path":"src/main/java/fitness/exercise/ExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness.exercise;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import fitness.ExerciseType;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"import static fitness.FitnessMotivator.REQUIRED_NUM_OF_PARAMETERS;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"import static fitness.exercise.ExerciseBank.INIT_ARMS_EXERCISES;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"import static fitness.exercise.ExerciseBank.INIT_CHEST_EXERCISES;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"import static fitness.exercise.ExerciseBank.INIT_ABS_EXERCISES;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"import static fitness.exercise.ExerciseBank.INIT_BACK_EXERCISES;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"import static fitness.exercise.ExerciseBank.INIT_LEGS_EXERCISES;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":" * Represents the list of exercises and includes methods to manipulate the list of exercises","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":" * */","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"public class ExerciseList {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"    private ArrayList\u003cExercise\u003e allExercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"     * Checks if a save file exists, if it does then load it for use, else create a new data file","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"     * and initialise it with the data above.","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"    public ExerciseList() {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"        if (!Storage.isFileCreated(FitnessMotivator.DATA_FILE_PATH)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"            initialiseData();","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"            Storage.saveTasksToFile(FitnessMotivator.DATA_FILE_PATH, allExercises);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"            parseData(Storage.loadDataFromFile(FitnessMotivator.DATA_FILE_PATH));","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"     * Takes in a pre-saved list of exercises for a single exercise type","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"     * @param list An array of strings that contain information about all exercises under each type","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"    private void initialiseSingleList(String[] list, ExerciseType type) {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"        for (String s : list) {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"            String[] exerciseDetails \u003d s.split(\",\");","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"            assert exerciseDetails.length \u003d\u003d REQUIRED_NUM_OF_PARAMETERS","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"                    : \"Missing Data from Data file!\";","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"            Exercise exercise \u003d new Exercise(exerciseDetails[0], type,","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"                    exerciseDetails[2], exerciseDetails[3]);","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"            allExercises.add(exercise);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"     * Reads all 5 different string arrays from above and adds it into one ArrayList for use","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"    private void initialiseData() {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"        initialiseSingleList(INIT_ARMS_EXERCISES, ExerciseType.ARMS);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"        initialiseSingleList(INIT_CHEST_EXERCISES, ExerciseType.CHEST);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"        initialiseSingleList(INIT_ABS_EXERCISES, ExerciseType.ABS);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"        initialiseSingleList(INIT_BACK_EXERCISES, ExerciseType.BACK);","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"        initialiseSingleList(INIT_LEGS_EXERCISES, ExerciseType.LEGS);","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"     * Further parses data read from storage into usable exercise objects, before adding it into","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"     * the ArrayList.","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"     * @param data An ArrayList of strings, comprising lines read from the data file","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"    private void parseData (ArrayList\u003cString\u003e data) {","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"        for (String s: data) {","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"            String[] parts \u003d s.split(\": |, | sets \u0026 | reps\");","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"            if (parts.length \u003d\u003d REQUIRED_NUM_OF_PARAMETERS) {","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Daviancold"},"content":"                allExercises.add(newExercise(parts));","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Daviancold"},"content":"     * This method adds an exercise object into the full list of exercises. It also sorts the list","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Daviancold"},"content":"     * in order of exercise type before saving it into storage.","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Daviancold"},"content":"     * @param exercise An Exercise object for ExerciseList","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Daviancold"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Daviancold"},"content":"    public void add(Exercise exercise) {","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"Daviancold"},"content":"        allExercises.add(exercise);","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Daviancold"},"content":"        // The comparing method extracts the exercise type from each exercise object and then","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"Daviancold"},"content":"        // compares them based on their type","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Daviancold"},"content":"        Comparator\u003cExercise\u003e comparator \u003d Comparator.comparing(Exercise::getType);","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Daviancold"},"content":"        // The sort method then sorts the list based on the comparator specified before saving","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Daviancold"},"content":"        allExercises.sort(comparator);","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"Daviancold"},"content":"        Storage.saveTasksToFile(FitnessMotivator.DATA_FILE_PATH, allExercises);","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"Daviancold"},"content":"     * This method searches the ArrayList for Exercises that matches the required type, and returns","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"Daviancold"},"content":"     * the n-th item of the queried type, where n is the index.","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"Daviancold"},"content":"     * @param type The ExerciseType Enum to be queried","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"Daviancold"},"content":"     * @param index The n-th instance of all object that matches the queried ExerciseType","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"Daviancold"},"content":"     * @return Returns an Object of type Exercise that matches the type and index queried.","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"Daviancold"},"content":"    public Exercise get(ExerciseType type, int index) {","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"Daviancold"},"content":"        ArrayList\u003cExercise\u003e typeExercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"Daviancold"},"content":"        for (Exercise e : allExercises) {","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"Daviancold"},"content":"            assert e !\u003d null : \"Invalid Exercise Detected\";","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"Daviancold"},"content":"            if (e.getType().equals(type)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"Daviancold"},"content":"                typeExercises.add(e);","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"Daviancold"},"content":"        return typeExercises.get(index);","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"Daviancold"},"content":"     * This method fetches all exercises that have the queried type.","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"Daviancold"},"content":"     * @param type The ExerciseType to be queried in the list of exercises.","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"Daviancold"},"content":"     * @return A list of exercises matching the type queried.","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"Daviancold"},"content":"    public ArrayList\u003cExercise\u003e getType(ExerciseType type) {","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Daviancold"},"content":"        ArrayList\u003cExercise\u003e exercisesByType \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"Daviancold"},"content":"        for (Exercise e : allExercises) {","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"Daviancold"},"content":"            assert e !\u003d null : \"Invalid Exercise Detected\";","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"Daviancold"},"content":"            if (e.getType().equals(type)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"Daviancold"},"content":"                exercisesByType.add(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"Daviancold"},"content":"        return exercisesByType;","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"Daviancold"},"content":"     * Returns the total number of a certain type of exercise","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"Daviancold"},"content":"     * @param type The ExerciseType Enum to be queried","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"Daviancold"},"content":"    public int size(ExerciseType type) {","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"Daviancold"},"content":"        int x \u003d 0;","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"Daviancold"},"content":"        for (Exercise e : allExercises) {","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"Daviancold"},"content":"            if (e.getType().equals(type)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"Daviancold"},"content":"                x++;","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"Daviancold"},"content":"        return x;","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"Daviancold"},"content":"     * Creates a new Exercise Object using an array of strings","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"Daviancold"},"content":"     * @param parameters An array of Strings that provide details for the creation of an Exercise","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"Daviancold"},"content":"     *                   object.","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"Daviancold"},"content":"     *                   Index 0 - Exercise Type","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"Daviancold"},"content":"     *                   Index 1 - Exercise Name","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"Daviancold"},"content":"     *                   Index 2 - Number of Sets","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"Daviancold"},"content":"     *                   Index 3 - Number of Reps","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"Daviancold"},"content":"     * @return returns a new Exercise object","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"Daviancold"},"content":"    public Exercise newExercise(String[] parameters) {","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"Daviancold"},"content":"        assert parameters.length \u003d\u003d REQUIRED_NUM_OF_PARAMETERS","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"Daviancold"},"content":"            : \"Incorrect Parameters for a new Exercise Object\";","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"Daviancold"},"content":"        String type \u003d parameters[0].toUpperCase();","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"Daviancold"},"content":"        ExerciseType exerciseType \u003d ExerciseType.valueOf(type);","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"Daviancold"},"content":"        String exerciseName \u003d parameters[1].trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"Daviancold"},"content":"        String sets \u003d parameters[2].trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"Daviancold"},"content":"        String reps \u003d parameters[3].trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"Daviancold"},"content":"        return new Exercise(exerciseName, exerciseType, sets, reps);","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"Daviancold"},"content":"     * Helper methods for finding exercises in the list. Overloaded with different parameters to","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"Daviancold"},"content":"     * allow for different searching methods. This method uses the exercise name to search.","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"Daviancold"},"content":"     * @param type The ExerciseType Enum to be queried","lastModifiedDate":"2024-03-26"},{"lineNumber":181,"author":{"gitId":"Daviancold"},"content":"     * @param nameQuery the name of the exercise to be queried","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"Daviancold"},"content":"     * @return An object of type Exercise","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"Daviancold"},"content":"    public Exercise findExercise(ExerciseType type, String nameQuery) {","lastModifiedDate":"2024-03-26"},{"lineNumber":186,"author":{"gitId":"Daviancold"},"content":"        ArrayList\u003cExercise\u003e typeExercises \u003d getType(type);","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"Daviancold"},"content":"        for (Exercise e : typeExercises) {","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"Daviancold"},"content":"            if (e.getType().equals(type) \u0026\u0026 e.getExerciseName().contains(nameQuery)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"Daviancold"},"content":"                return e;","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"Daviancold"},"content":"        return null;","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"Daviancold"},"content":"     * Helper method that helps remove an exercise from the list.","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"Daviancold"},"content":"     * @param exercise The exercise object to be deleted.","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"Daviancold"},"content":"    public void remove(Exercise exercise) {","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"Daviancold"},"content":"        allExercises.remove(exercise);","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"Daviancold"},"content":"        Storage.saveTasksToFile(FitnessMotivator.DATA_FILE_PATH, allExercises);","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Daviancold":205}},{"path":"src/main/java/fitness/goals/ExerciseGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness.goals;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import fitness.exercise.Exercise;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import fitness.ExerciseType;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"public class ExerciseGoal extends Exercise {","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"    private boolean isDone;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"    public ExerciseGoal(","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"            String exerciseName,","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"            ExerciseType exerciseType,","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"            String sets,","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"            String reps,","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"            boolean isDone) {","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"        super(exerciseName, exerciseType, sets, reps);","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"    public void toggle() {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"        isDone \u003d !isDone;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"        String status \u003d isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"        return status + exerciseType + \": \" + exerciseName + \", \" +","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"                sets + \" sets \u0026 \" + reps + \" reps\";","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"Daviancold":30}},{"path":"src/main/java/fitness/goals/ExerciseGoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness.goals;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import fitness.exercise.Exercise;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import fitness.exercise.ExerciseList;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import fitness.ExerciseType;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"import static fitness.FitnessMotivator.GOALS_FILE_PATH;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"import static fitness.FitnessMotivator.REQUIRED_NUM_OF_PARAMETERS;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":" * Represents the list of exercises and includes methods to manipulate the list of exercise goals.","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":" * Inherits from the ExerciseList class.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":" * */","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"public class ExerciseGoalList extends ExerciseList {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"    private static final int NUMBER_OF_GOALS \u003d 5;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"    private ArrayList\u003cExerciseGoal\u003e goals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"    public ExerciseGoalList() {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"        if (Storage.isFileCreated(FitnessMotivator.GOALS_FILE_PATH)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"            parseData(Storage.loadDataFromFile(FitnessMotivator.GOALS_FILE_PATH));","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"     * Further parses data read from storage into usable ExerciseGoal objects, before adding it into","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"     * the ArrayList.","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"     * @param data An ArrayList of strings, comprising lines read from the data file","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"    private void parseData (ArrayList\u003cString\u003e data) {","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"        assert data.size() \u003d\u003d NUMBER_OF_GOALS : \"There is something wrong with the data file!\";","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"        for (String s : data) {","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"            String[] parts \u003d s.split(\": |, | sets \u0026 | reps\");","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"            // Checks whether the goal is done or not done","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"            char status \u003d parts[0].charAt(1);","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"            boolean isDone \u003d (status \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"            parts[0] \u003d parts[0].substring(4);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"            if (parts.length \u003d\u003d REQUIRED_NUM_OF_PARAMETERS) {","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"                add(newExercise(parts), isDone);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"     * A helper method that returns whether the goal list is empty","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"        return goals.isEmpty();","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"     * A helper method that deletes everything in the list.","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"    public void clear() {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"        goals.clear();","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"     * Helper methods for finding exercises in the list. Overloaded with different parameters to","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"     * allow for different searching methods.This method uses index to search.","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"     * @param index The n-th exercise of type ExerciseType, where n is the index","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"     * @return An object of type Exercise","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"Daviancold"},"content":"    public ExerciseGoal findExercise(int index) {","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"Daviancold"},"content":"        return goals.get(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"Daviancold"},"content":"     * Helper method that saves the goal data to a local file","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"Daviancold"},"content":"    public void saveGoals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"Daviancold"},"content":"        Storage.saveTasksToFile(GOALS_FILE_PATH, goals);","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"Daviancold"},"content":"     * Over-ridden method from parent class \u0027ExerciseList\u0027, this method returns an \u0027ExerciseGoal\u0027","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"Daviancold"},"content":"     * object instead of an \u0027Exercise\u0027 object. The status of the goal is set not done by default.","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"Daviancold"},"content":"     * @param parameters An array of Strings that provide details for the creation of an Exercise","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"Daviancold"},"content":"     *                   object.","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"Daviancold"},"content":"     *                   Index 0 - Exercise Type","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"Daviancold"},"content":"     *                   Index 1 - Exercise Name","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"Daviancold"},"content":"     *                   Index 2 - Number of Sets","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"Daviancold"},"content":"     *                   Index 3 - Number of Reps","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"Daviancold"},"content":"     * @return returns a new Exercise object","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"Daviancold"},"content":"    public ExerciseGoal newExercise(String[] parameters) {","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"Daviancold"},"content":"        assert parameters.length \u003d\u003d REQUIRED_NUM_OF_PARAMETERS","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"Daviancold"},"content":"                : \"Incorrect Parameters for a new Exercise Object\";","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"Daviancold"},"content":"        String type \u003d parameters[0].toUpperCase();","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"Daviancold"},"content":"        ExerciseType exerciseType \u003d ExerciseType.valueOf(type);","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"Daviancold"},"content":"        String exerciseName \u003d parameters[1].trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"Daviancold"},"content":"        String sets \u003d parameters[2].trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"Daviancold"},"content":"        String reps \u003d parameters[3].trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"Daviancold"},"content":"        return new ExerciseGoal(exerciseName, exerciseType, sets, reps, false);","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"Daviancold"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"Daviancold"},"content":"     * Over-riden method from parent class \u0027ExerciseList\u0027, this method takes in \u0027Exercise\u0027 objects","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"Daviancold"},"content":"     * and converts them into \u0027ExerciseGoal\u0027 objects before adding them into the goals list. The","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"Daviancold"},"content":"     * status of the goal is set not done by default.","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"Daviancold"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"Daviancold"},"content":"     * @param exercise An Exercise object to be converted and added into the list","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"Daviancold"},"content":"     * */","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"Daviancold"},"content":"    public void add(Exercise exercise, boolean isDone) {","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"Daviancold"},"content":"        goals.add(new ExerciseGoal(","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"Daviancold"},"content":"                exercise.getExerciseName(),","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"Daviancold"},"content":"                exercise.getType(),","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"Daviancold"},"content":"                exercise.getSets(),","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"Daviancold"},"content":"                exercise.getReps(),","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"Daviancold"},"content":"                isDone","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"Daviancold"},"content":"        ));","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"Daviancold"},"content":"        Storage.saveTasksToFile(FitnessMotivator.GOALS_FILE_PATH, goals);","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"Daviancold"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"Daviancold"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"Daviancold"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"Daviancold"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_GOALS; i++) {","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"Daviancold"},"content":"            ExerciseGoal goal \u003d goals.get(i);","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"Daviancold"},"content":"            message.append((i + 1))","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"Daviancold"},"content":"                .append(\". \")","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"Daviancold"},"content":"                .append(goal.toString())","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"Daviancold"},"content":"                .append(System.lineSeparator());","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"Daviancold"},"content":"        return message.toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"Daviancold":144}},{"path":"src/main/java/focus/CountdownTimer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package focus;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import java.util.Timer;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import java.util.TimerTask;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import java.util.concurrent.atomic.AtomicBoolean;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":" * Represents the countdown timer for the focus timer function.","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"public class CountdownTimer {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    private static final int DEFAULT_SECONDS \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    private static final int DEFAULT_MINUTES \u003d 1;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"    private static final int ONE_SECOND \u003d 1000;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    private static final int MAX_SECONDS \u003d 59;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"    private static final int TIME_DELAY \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    private static final int STOP_TIME \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"    private static final int START_WARNING \u003d 5;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    private static final String ASSERTION_TIMER_NOT_RUNNING \u003d \"Timer should not be running\";","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    private static final String ASSERTION_INVALID_STOP \u003d \"Timer should be running.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    private int minutes;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    private int seconds;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    private int inputMinutes;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"    private AtomicBoolean isStarted;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"    private AtomicBoolean isRunning;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    private Timer stopwatch;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    private TimerTask timerTask;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a CountdownTimer by initialising the class with default timings.","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    public CountdownTimer() {","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"        this.minutes \u003d DEFAULT_MINUTES;","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"        this.seconds \u003d DEFAULT_SECONDS;","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"        this.inputMinutes \u003d DEFAULT_MINUTES;","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"        this.isRunning \u003d new AtomicBoolean(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        this.isStarted \u003d new AtomicBoolean(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"    private void decreaseMinutes() {","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        this.minutes--;","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"    private void decreaseSeconds() {","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"        this.seconds--;","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"     * Starts the countdown timer by running it in the background thread.","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"    public void start() {","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"        stopwatch \u003d new Timer();","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"        isStarted.set(true);","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"        timerTask \u003d new TimerTask() {","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"            @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"            public void run() {","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"                if (!isRunning.get()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"                    return;","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"                if (minutes \u003d\u003d STOP_TIME \u0026\u0026 seconds \u003d\u003d START_WARNING) {","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"                    System.out.println();","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"                if (minutes \u003d\u003d STOP_TIME \u0026\u0026 seconds \u003c\u003d START_WARNING \u0026\u0026 seconds !\u003d STOP_TIME) {","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"                    Ui.printMessageWithSepNewLine(seconds + \" seconds left\");","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"                if (minutes \u003d\u003d STOP_TIME \u0026\u0026 seconds \u003d\u003d STOP_TIME) {","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"                    Ui.printMessageWithSepNewLine(\"Count down timer completed!\");","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"                    setStop();","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"JingHaoooo"},"content":"                    Ui.promptUserInput();","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"JingHaoooo"},"content":"                } else if (seconds \u003d\u003d STOP_TIME) {","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"JingHaoooo"},"content":"                    decreaseMinutes();","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"JingHaoooo"},"content":"                    seconds \u003d MAX_SECONDS;","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"JingHaoooo"},"content":"                } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"JingHaoooo"},"content":"                    decreaseSeconds();","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"JingHaoooo"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"JingHaoooo"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"JingHaoooo"},"content":"        };","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"JingHaoooo"},"content":"        stopwatch.scheduleAtFixedRate(timerTask, TIME_DELAY, ONE_SECOND);","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"JingHaoooo"},"content":"     * Set the timer to start by initialising the timing to the desired countdown timings.","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"JingHaoooo"},"content":"    public void setStart() {","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"JingHaoooo"},"content":"        assert !isRunning.get() : ASSERTION_TIMER_NOT_RUNNING;","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"JingHaoooo"},"content":"        isRunning.set(true);","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"JingHaoooo"},"content":"        minutes \u003d inputMinutes;","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"JingHaoooo"},"content":"        seconds \u003d DEFAULT_SECONDS;","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"JingHaoooo"},"content":"        start();","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Countdown timer started! \\n\"","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"JingHaoooo"},"content":"                + \"Duration set: \" + minutes + \" minute(s) \" + seconds + \" second(s)\");","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"JingHaoooo"},"content":"     * Set the timer to stop","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"JingHaoooo"},"content":"    public void setStop() {","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"JingHaoooo"},"content":"        assert stopwatch !\u003d null : ASSERTION_INVALID_STOP;","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"JingHaoooo"},"content":"        isRunning.set(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"JingHaoooo"},"content":"        isStarted.set(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"JingHaoooo"},"content":"        stopwatch.cancel();","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"JingHaoooo"},"content":"        stopwatch.purge();","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"JingHaoooo"},"content":"     * Set the timer to pause","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"JingHaoooo"},"content":"    public void setPause() {","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"JingHaoooo"},"content":"        isRunning.set(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Timer paused. \\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"JingHaoooo"},"content":"                \"Remaining time: \" + minutes + \" minutes \" + seconds + \" seconds\");","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"JingHaoooo"},"content":"     * set the timer to resume","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"JingHaoooo"},"content":"    public void setResume() {","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"JingHaoooo"},"content":"        isRunning.set(true);","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Countdown timer resumed.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"JingHaoooo"},"content":"     * Get the current running status of the timer","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"JingHaoooo"},"content":"     * @return true if the timer has started. False otherwise.","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getRunningStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"JingHaoooo"},"content":"        return isStarted.get();","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":131,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"JingHaoooo"},"content":"     * Get the current paused status of the timer","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"JingHaoooo"},"content":"     * @return false if the timer has been paused, true otherwise.","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getPausedStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":138,"author":{"gitId":"JingHaoooo"},"content":"        return isRunning.get();","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"JingHaoooo"},"content":"     * Set the countdown timer duration to the desired duration.","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"JingHaoooo"},"content":"     * @param userInput The number of minutes desired from the user.","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"JingHaoooo"},"content":"    public void setTimer(int userInput) {","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"JingHaoooo"},"content":"        if (userInput \u003c 1) {","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"JingHaoooo"},"content":"            Ui.printMessageWithSepNewLine(\"Duration cannot be less than 1.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"JingHaoooo"},"content":"            inputMinutes \u003d userInput;","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"JingHaoooo"},"content":"            Ui.printMessageWithSepNewLine(\"Countdown duration has been set to \" + userInput + \" minute(s)\");","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"JingHaoooo"},"content":"     * Check the remaining time in the countdown timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"JingHaoooo"},"content":"    public void checkTime() {","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Remaining time: \\n\" +","lastModifiedDate":"2024-03-24"},{"lineNumber":160,"author":{"gitId":"JingHaoooo"},"content":"                minutes + \" minutes \" + seconds + \" seconds left.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":162}},{"path":"src/main/java/focus/CountupTimer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package focus;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import java.time.Duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"public class CountupTimer {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    private static final int MINUTES_DIVISION \u003d 60;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"    private static final int SECONDS_DIVISION \u003d 60;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    private LocalDateTime startTiming;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    private LocalDateTime stopTiming;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    private LocalDateTime currentTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    private boolean isStarted \u003d false;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"    private boolean isPaused \u003d false;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    private long totalHours \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"    private long totalMinutes \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"    private long totalSeconds \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"     * Store the current time when the user calls the function as the start timing for the timer.","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    public void setStartTiming() {","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"        assert !isStarted : \"Timer should not have started\";","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        this.startTiming \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"        isStarted \u003d true;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Your session has started. Time to grind!\");","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"        this.totalHours \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        this.totalMinutes \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        this.totalSeconds \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     * Store the current time when the user calls the function as the stop timing for the timer.","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"    public void setStopTiming() {","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"        assert isStarted : \"Timer should have started\";","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        if(!isPaused) {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"            stopTiming \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        isStarted \u003d false;","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        isPaused \u003d false;","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"        totalTimeSpent();","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"     * Set the timer to pause","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"    public void setPause() {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"        currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"        Duration timeElapsed \u003d Duration.between(startTiming, currentTime);","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"        stopTiming \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"        isPaused \u003d true;","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"        totalHours +\u003d timeElapsed.toHours();","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"        totalMinutes +\u003d timeElapsed.toMinutes() % MINUTES_DIVISION;","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"        totalSeconds +\u003d timeElapsed.toSeconds() % MINUTES_DIVISION;","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Count up timer paused.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"     * Set the timer to resume.","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"    public void setResume() {","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"        this.startTiming \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"        isPaused \u003d false;","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Count up timer resumed\");","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"JingHaoooo"},"content":"     * Get the current paused status of the timer","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"JingHaoooo"},"content":"     * @return true if the timer has been paused, false otherwise.","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getPauseStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"JingHaoooo"},"content":"        return isPaused;","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"JingHaoooo"},"content":"     * Retrieves the current status of the clock","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"JingHaoooo"},"content":"     * @return The status of the focus timer","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getStartedStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"JingHaoooo"},"content":"        return isStarted;","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"JingHaoooo"},"content":"     * Calculates the total time elapsed between the start timing and stop timing, and prints out","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"JingHaoooo"},"content":"     * the total time elapsed using Ui class.","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"JingHaoooo"},"content":"    public void totalTimeSpent() {","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"JingHaoooo"},"content":"        if (!isPaused) {","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"JingHaoooo"},"content":"            Duration timeElapsed \u003d Duration.between(startTiming, stopTiming);","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"JingHaoooo"},"content":"            totalHours +\u003d timeElapsed.toHours();","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"JingHaoooo"},"content":"            totalMinutes +\u003d timeElapsed.toMinutes() % MINUTES_DIVISION;","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"JingHaoooo"},"content":"            totalSeconds +\u003d timeElapsed.toSeconds() % SECONDS_DIVISION;","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Your focus session has ended.\\n\" + \"Total time spent: \" +","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"JingHaoooo"},"content":"                totalHours + \" hours, \" + totalMinutes + \" minutes, \" + totalSeconds + \" seconds\" + \"\\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"JingHaoooo"},"content":"                \"To start a new session, use ‘focus start’ \");","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"JingHaoooo"},"content":"     * Check to total time elapsed from the start to the current time, and prints out the total time elapsed","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"JingHaoooo"},"content":"     * using the Ui class.","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"JingHaoooo"},"content":"    public void checkTime() {","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"JingHaoooo"},"content":"        if(!isPaused) {","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"JingHaoooo"},"content":"            currentTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"JingHaoooo"},"content":"        Duration timeElapsed \u003d Duration.between(startTiming, currentTime);","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"JingHaoooo"},"content":"        startTiming \u003d currentTime;","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"JingHaoooo"},"content":"        totalHours +\u003d timeElapsed.toHours();","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"JingHaoooo"},"content":"        totalMinutes +\u003d timeElapsed.toMinutes() % MINUTES_DIVISION;","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"JingHaoooo"},"content":"        totalSeconds +\u003d timeElapsed.toSeconds() % SECONDS_DIVISION;","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"JingHaoooo"},"content":"        Ui.printMessageWithSepNewLine(\"Total time elapsed: \\n\" +","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"JingHaoooo"},"content":"                totalHours + \" hours, \" + totalMinutes + \" minutes, \" + totalSeconds + \" seconds\");","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"JingHaoooo":119}},{"path":"src/main/java/focus/FocusTimer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package focus;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":" * Represents the focus timer for wellness360.","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"public class FocusTimer {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    private CountupTimer countupTimer;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"    private CountdownTimer countdownTimer;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    private boolean timerMode \u003d false; // false for count-up, true for countdown","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"     * Constructs a FocusTimer class with instances of CountupTimer and CountdownTimer","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    public FocusTimer() {","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"        this.countupTimer \u003d new CountupTimer();","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"        this.countdownTimer \u003d new CountdownTimer();","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"     * Set the start timing for the timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"    public void setStartTiming() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"            countdownTimer.setStart();","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"            countupTimer.setStartTiming();","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"     * Set the stop timing for the timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"    public void setStopTiming() {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"            countdownTimer.setStop();","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"            Ui.printMessageWithSepNewLine(\"Countdown timer stopped.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"            countupTimer.setStopTiming();","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"     * Check whether the timer has started.","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"     * @return true if the timer has started. False otherwise.","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getStartStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"            return countdownTimer.getRunningStatus();","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"JingHaoooo"},"content":"            return countupTimer.getStartedStatus();","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"JingHaoooo"},"content":"     * Switch the timer mode for focus timer between count yp timer and countdown timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"JingHaoooo"},"content":"    public void switchTimer() {","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"JingHaoooo"},"content":"        this.timerMode \u003d !timerMode;","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"JingHaoooo"},"content":"            Ui.printMessageWithSepNewLine(\"Switched to Count down timer\");","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"JingHaoooo"},"content":"            Ui.printMessageWithSepNewLine(\"Switched to Count up timer\");","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"JingHaoooo"},"content":"     * Pause the timer that is currently running.","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"JingHaoooo"},"content":"    public void setPauseTiming() {","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"JingHaoooo"},"content":"            countdownTimer.setPause();","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"JingHaoooo"},"content":"            countupTimer.setPause();","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"JingHaoooo"},"content":"     * Get the pause status of the current timer that is running.","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"JingHaoooo"},"content":"     * @return True if the timer is in the paused state. False otherwise.","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"JingHaoooo"},"content":"    public boolean getPausedStatus() {","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"JingHaoooo"},"content":"            return !countdownTimer.getPausedStatus();","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"JingHaoooo"},"content":"            return countupTimer.getPauseStatus();","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"JingHaoooo"},"content":"     * Resume the timer that is currently running.","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"JingHaoooo"},"content":"    public void setResumeTiming() {","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"JingHaoooo"},"content":"            countdownTimer.setResume();","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"JingHaoooo"},"content":"            countupTimer.setResume();","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"JingHaoooo"},"content":"     * Set the desired duration for the countdown timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"JingHaoooo"},"content":"     * @param commandArgs The desired number of minutes from the user.","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"JingHaoooo"},"content":"    public void setDuration(int commandArgs) {","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"JingHaoooo"},"content":"        countdownTimer.setTimer(commandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"JingHaoooo"},"content":"     * Check the total time elapsed for count up timer or time remaining for countdown timer.","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"JingHaoooo"},"content":"    public void checkTime() {","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"JingHaoooo"},"content":"        if (timerMode) {","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"JingHaoooo"},"content":"            countdownTimer.checkTime();","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"JingHaoooo"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"JingHaoooo"},"content":"            countupTimer.checkTime();","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"JingHaoooo":123}},{"path":"src/main/java/habit/Habit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":" * Represents a Habit.","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"public class Habit {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"    private String description;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"    private int habitCount;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"    private Priority priority;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"     * Constructs a habit object with the habit description.","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"     * @param description The habit description to be added.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"    public Habit(String description) {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"        this.habitCount \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"        this.priority \u003d Priority.LOW;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    public Habit(String description, int habitCount, Priority priority) {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        this.habitCount \u003d habitCount;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"        return description;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"    public int getHabitCount() {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"        return habitCount;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"    public Priority getPriority() {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"        return priority;","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"     * Updates the habit count of a habit.","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"     * @param updatedCount The count to be added to the existing habit count.","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"     * @return An integer type of the change in count to be added.","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If the user tries to decrease a habit count to below zero, or use a non-numerical number.","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"    public int updateCount(String updatedCount) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"        int changeInCount \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"            changeInCount \u003d Integer.parseInt(updatedCount);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"            if (habitCount + changeInCount \u003c 0) {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"                throw new HabitException(\"You cannot decrement a habit count to below zero\");","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"genexus85"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"genexus85"},"content":"            habitCount +\u003d changeInCount;","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"genexus85"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please enter a valid count\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"genexus85"},"content":"                    \"Use: \u0027+1\u0027 to increase count, \u0027-1\u0027 to decrease count \");","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"genexus85"},"content":"        return changeInCount;","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"genexus85"},"content":"     * Sets the priority of a habit.","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"genexus85"},"content":"     * @param priority The priority level of a habit from user input.","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"genexus85"},"content":"    public void setPriority (String priority) {","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"genexus85"},"content":"        switch (priority) {","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"genexus85"},"content":"        case \"low\":","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"genexus85"},"content":"            this.priority \u003d Priority.LOW;","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"genexus85"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"genexus85"},"content":"        case \"med\":","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"genexus85"},"content":"            this.priority \u003d Priority.MED;","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"genexus85"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"genexus85"},"content":"        case \"high\":","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"genexus85"},"content":"            this.priority \u003d Priority.HIGH;","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"genexus85"},"content":"            break;","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"genexus85"},"content":"        default:","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"genexus85"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"genexus85"},"content":"        return \" [\" + priority + \"] \" + description + \" [count: \" + habitCount + \"]\";","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":92}},{"path":"src/main/java/habit/HabitTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"import static storage.habit.HabitTrackerStorage.loadHabitListFromFile;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"import static storage.habit.HabitTrackerStorage.saveHabitListToFile;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"import static ui.Ui.printMessageWithoutNewLine;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":" * Represents the habit tracker which stores all habits.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"public class HabitTracker {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"    private static ArrayList\u003cHabit\u003e habitList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"     * Loads data from local storage and constructs a new HabitTracker object.","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    public HabitTracker() {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"            habitList \u003d loadHabitListFromFile();","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        } catch (HabitException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"    public static int getNumberOfHabits() {","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"        return habitList.size();","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"     * Adds a new habit into habitList.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"     * @param newHabit The habit to be added.","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"    public void addHabit (Habit newHabit) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"        assert habitList !\u003d null : \"habitList should not be null\";","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"        habitList.add(newHabit);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"        String addHabitMessage \u003d \"Great! You have added a new habit:\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"        addHabitMessage +\u003d \"  \u0027\" + newHabit.getDescription() + \"\u0027 was successfully added!\";","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(addHabitMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"     * List out all habits in habitList.","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"    public void listHabits() {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"genexus85"},"content":"        String listHabitsMessage \u003d \"Here is the list of all your habits!\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"genexus85"},"content":"        if (habitList.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"genexus85"},"content":"            listHabitsMessage +\u003d \"  \u003cyou currently have no habits, add one now!\u003e\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"genexus85"},"content":"        for (int i \u003d 0; i \u003c habitList.size(); i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"genexus85"},"content":"            Habit habit \u003d habitList.get(i);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"genexus85"},"content":"            listHabitsMessage +\u003d \"  \" + (i + 1) + \".\" + habit + \"\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"genexus85"},"content":"        printMessageWithoutNewLine(listHabitsMessage);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"genexus85"},"content":"    public static boolean isValidHabitID(int habitID) {","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"genexus85"},"content":"        return habitID \u003e 0 \u0026\u0026 habitID \u003c\u003d habitList.size();","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"genexus85"},"content":"     * Update the habit count for a habit.","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"genexus85"},"content":"     * @param habitID The habit ID to be updated.","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"genexus85"},"content":"     * @param updatedCount The count to be added to the existing habit count.","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If an invalid habit ID is provided.","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"genexus85"},"content":"    public void updateHabitCount(int habitID, String updatedCount) throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"genexus85"},"content":"        if (!isValidHabitID(habitID)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"genexus85"},"content":"        Habit habit \u003d habitList.get(habitID - 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"genexus85"},"content":"        int changeInCount \u003d habit.updateCount(updatedCount);","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"genexus85"},"content":"        String updateHabitCountMessage \u003d \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"genexus85"},"content":"        if (changeInCount \u003e 0) {","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"genexus85"},"content":"            updateHabitCountMessage +\u003d \"Good Job! You have completed your habit!\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"genexus85"},"content":"        updateHabitCountMessage +\u003d \"The count for your habit has been updated:\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"genexus85"},"content":"        updateHabitCountMessage +\u003d \"  \" + habitID + \". \" + habit;","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(updateHabitCountMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"genexus85"},"content":"     * Delete a habit from the habit tracker list.","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"genexus85"},"content":"     * @param habitID The habit ID to be deleted.","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If an invalid habit ID is provided.","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"genexus85"},"content":"    public void deleteHabit(int habitID) throws HabitException {","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"genexus85"},"content":"        if (!isValidHabitID(habitID)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"genexus85"},"content":"        String deleteHabitMessage \u003d \"Got it! I\u0027ve removed this habit:\\n\";","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"genexus85"},"content":"        deleteHabitMessage +\u003d \"  \" + habitList.get(habitID - 1) + \"\\n\";","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"genexus85"},"content":"        habitList.remove(habitID - 1);","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"genexus85"},"content":"        deleteHabitMessage +\u003d \"Now you have \" + habitList.size() + \" habits left in the list.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(deleteHabitMessage);","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"genexus85"},"content":"     * Set the priority level of a habit.","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"genexus85"},"content":"     * @param habitID The habit ID of the habit to be updated with a different priority level.","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"genexus85"},"content":"     * @param priority The priority level that the user wish to set.","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If an invalid habit ID is provided.","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"genexus85"},"content":"    public void setPriorityLevel(int habitID, String priority) throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"genexus85"},"content":"        if (!isValidHabitID(habitID)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Please provide a valid habit ID.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"genexus85"},"content":"        Habit habit \u003d habitList.get(habitID - 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"genexus85"},"content":"        habit.setPriority(priority);","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"genexus85"},"content":"        String setPriorityLevelMessage \u003d \"\";","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"genexus85"},"content":"        setPriorityLevelMessage +\u003d \"The priority for your habit has been updated:\\n\";","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"genexus85"},"content":"        setPriorityLevelMessage +\u003d \"  \" + habitID + \". \" + habit;","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(setPriorityLevelMessage);","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"genexus85"},"content":"     * Sort the habits in the habit tracker list according to their priority from HIGH to LOW","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If there are any exception errors when sorting.","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"genexus85"},"content":"    public void sortHabits() throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"genexus85"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"genexus85"},"content":"            // Define a custom comparator to sort habits based on their priority","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"genexus85"},"content":"            Comparator\u003cHabit\u003e habitComparator \u003d Comparator.comparing(habit -\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"genexus85"},"content":"                switch (habit.getPriority()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"genexus85"},"content":"                case HIGH:","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"genexus85"},"content":"                    return 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"genexus85"},"content":"                case MED:","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"genexus85"},"content":"                    return 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":160,"author":{"gitId":"genexus85"},"content":"                case LOW:","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"genexus85"},"content":"                    return 2;","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"genexus85"},"content":"                default:","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"genexus85"},"content":"                    return 3; // Handles any unexpected case","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"genexus85"},"content":"                }","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"genexus85"},"content":"            });","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":167,"author":{"gitId":"genexus85"},"content":"            // Sort the habitList using the custom comparator","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"genexus85"},"content":"            Collections.sort(habitList, habitComparator);","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"genexus85"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(e.getMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"genexus85"},"content":"        Ui.printMessageWithSepNewLine(\"Habits have been sorted according to priority.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"genexus85"},"content":"    public void clearHabitList() {","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"genexus85"},"content":"        habitList.clear();","lastModifiedDate":"2024-03-24"},{"lineNumber":179,"author":{"gitId":"genexus85"},"content":"        saveHabitListToFile(habitList);","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":181}},{"path":"src/main/java/habit/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package habit;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":" * Enumeration representing priority levels of habits.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"public enum Priority {","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"    HIGH,","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"    MED,","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"    LOW","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"genexus85":10}},{"path":"src/main/java/parser/FitnessCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import commands.fitnesscommands.AddExerciseCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import commands.fitnesscommands.GetExercisesCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import commands.fitnesscommands.GoalExerciseCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"import commands.fitnesscommands.HelpExerciseCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"import commands.fitnesscommands.DeleteExerciseCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"import exceptions.FitnessException;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"public class FitnessCommandParser {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"    private static final int COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"    public static Command determineFitnessCommand(FitnessMotivator fitnessMotivator, String commandArgs)","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"            throws FitnessException {","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"        String userFitnessCommand \u003d userCommand[0].trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"        String fitnessCommandArgs \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"            userCommand.length \u003d\u003d COMMAND_LENGTH ? userCommand[1].trim() : \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"        switch (userFitnessCommand) {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"        case \"get\":","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"            return new GetExercisesCommand(fitnessMotivator, fitnessCommandArgs);","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"        case \"add\":","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"            return new AddExerciseCommand(fitnessMotivator, fitnessCommandArgs);","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"        case \"goal\":","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"            return new GoalExerciseCommand(fitnessMotivator, fitnessCommandArgs);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"        case \"help\":","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"            return new HelpExerciseCommand(fitnessMotivator);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"            return new DeleteExerciseCommand(fitnessMotivator, fitnessCommandArgs);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"        default:","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"            String errorMessage \u003d \"Unknown command. Did you try any of the following commands?\" +","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"                    System.lineSeparator() + \"- \u0027fitness get\u0027\" + System.lineSeparator() +","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"                    \"- \u0027fitness add\u0027\" + System.lineSeparator() +","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"                    \"- \u0027fitness goal\";","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"            throw new FitnessException(errorMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"damiwee":3,"Daviancold":40}},{"path":"src/main/java/parser/FocusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import commands.Command;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.SetResumeCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.StartTimerCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.StopTimerCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.SwitchTimerCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.SetPauseCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.CheckTimeCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"import commands.focuscommands.SetTimingCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"import exceptions.FocusException;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":" * FocusCommandParser class determines the type of command based on the user\u0027s input and","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":" * maps it to the corresponding command.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"public class FocusCommandParser {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"     * Determines the command based on user input and returns the corresponding command object.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"     * @param focusTimer  The focus timer object for wellness360.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"     * @param commandArgs The command arguments from user\u0027s input.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"     * @return Type of command to be executed.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"     * @throws FocusException If the type of command is not part of the list of commands.","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"    public static Command determineFocusCommand(FocusTimer focusTimer, String commandArgs) throws FocusException {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"        String userFocusTimerCommand \u003d userCommand[0];","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        String focusTimerCommandArgs \u003d userCommand.length \u003d\u003d 2 ? userCommand[1] : \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"        switch (userFocusTimerCommand) {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"        case \"start\":","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"            return new StartTimerCommand(focusTimer);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"        case \"stop\":","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"            return new StopTimerCommand(focusTimer);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        case \"switch\":","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"            return new SwitchTimerCommand(focusTimer);","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        case \"pause\":","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"            return new SetPauseCommand(focusTimer);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"        case \"resume\":","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"            return new SetResumeCommand(focusTimer);","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"        case \"check\":","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"JingHaoooo"},"content":"            return new CheckTimeCommand(focusTimer);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"JingHaoooo"},"content":"        case \"set\":","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"JingHaoooo"},"content":"            return new SetTimingCommand(focusTimer, focusTimerCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"JingHaoooo"},"content":"        default:","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"JingHaoooo"},"content":"            throw new FocusException(\"Unknown Focus Timer command\");","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"JingHaoooo"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"JingHaoooo":52}},{"path":"src/main/java/parser/HabitCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import commands.Command;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.AddHabitCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.DeleteHabitCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.HabitHelpCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.ListHabitsCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.SetPriorityCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.SortHabitsCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"import commands.habitcommands.UpdateHabitCountCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":" * Represents the input parser of Habit Tracker.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":" * Parses user input into Habit Tracker commands.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":" * Generates the respective Command objects to be executed, based on the parsed command keyword.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"public class HabitCommandParser {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"    private static final int COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"     * Parses user input into command and details, and creates the corresponding habit command objects.","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"     * @param habitTracker The HabitTracker instance to be used for storing the habits.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"     * @param commandArgs User input for the habit tracker command.","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"     * @return Command object to be executed.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"     * @throws HabitException If the user input is not part of the command list.","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"    public static Command determineHabitCommand(HabitTracker habitTracker, String commandArgs) throws HabitException {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"        String userHabitCommand \u003d userCommand[0].trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        String habitCommandArgs \u003d userCommand.length \u003d\u003d COMMAND_LENGTH ? userCommand[1].trim() : \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"        switch(userHabitCommand) {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"        case \"add\":","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"            return new AddHabitCommand(habitTracker, habitCommandArgs);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"        case \"list\":","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"            return new ListHabitsCommand(habitTracker);","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"        case \"update\":","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"            return new UpdateHabitCountCommand(habitTracker, habitCommandArgs);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"            return new DeleteHabitCommand(habitTracker, habitCommandArgs);","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"        case \"set\":","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"            return new SetPriorityCommand(habitTracker, habitCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"        case \"sort\":","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"genexus85"},"content":"            return new SortHabitsCommand(habitTracker);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"        case \"help\":","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"            return new HabitHelpCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"        default:","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"            throw new HabitException(\"Unknown command\");","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"genexus85":55}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import commands.ExitCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import fitness.FitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import focus.FocusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"import habit.HabitTracker;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"import static parser.FitnessCommandParser.determineFitnessCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"import static parser.HabitCommandParser.determineHabitCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"import static parser.ReflectionCommandParser.determineReflectionCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"import static parser.SleepCommandParser.determineSleepCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"import static parser.FocusCommandParser.determineFocusCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"public class Parser {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"    private static final int COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    public static Command determineCommand(SleepTracker sleepTracker,","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"                                           ReflectionManager reflection,","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"                                           HabitTracker habitTracker,","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"                                           FocusTimer focusTimer,","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"                                           FitnessMotivator fitnessMotivator,","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"                                           String userInput)","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"            throws Wellness360Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"        String[] userWords \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"        String userCommandSection \u003d userWords[0];","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"        String commandArgs \u003d userWords.length \u003d\u003d COMMAND_LENGTH ? userWords[1] : \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        switch (userCommandSection) {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"        case \"reflect\":","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"            return determineReflectionCommand(reflection, commandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"        case \"habit\":","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"            return determineHabitCommand(habitTracker, commandArgs);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"        case \"sleep\":","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"            return determineSleepCommand(sleepTracker, commandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"        case \"fitness\":","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"            return determineFitnessCommand(fitnessMotivator, commandArgs);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"        case \"focus\":","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"            return determineFocusCommand(focusTimer, commandArgs);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"        case \"exit\":","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"            return new ExitCommand(commandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"            throw new Wellness360Exception(\"Unknown Wellness360 command\");","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"JingHaoooo":3,"OKW32":7,"genexus85":26,"damiwee":9,"Daviancold":6}},{"path":"src/main/java/parser/ReflectionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import commands.reflectcommands.ReflectionHelpCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import commands.reflectcommands.ListFavouriteReflectionsCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import commands.reflectcommands.GetReflectionQuestionsCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import commands.reflectcommands.UnsaveFromFavouritesCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import commands.reflectcommands.SaveToFavouritesCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":" * A parser for handling reflection-related commands.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"public class ReflectionCommandParser {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * Determines the appropriate reflection command based on user input.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     * @param reflectionManager The ReflectionManager instance to be used for executing commands.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"     * @param commandArgs       The string containing the user command and its arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"     * @return The Command object corresponding to the user\u0027s reflection command.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if an error occurs during command parsing or execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"    public static Command determineReflectionCommand(ReflectionManager reflectionManager, String commandArgs)","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"            throws ReflectException {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"        String userReflectionCommand \u003d userCommand[0];","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"        String reflectionCommandArgs \u003d userCommand.length \u003d\u003d 2 ? userCommand[1] : \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        switch(userReflectionCommand) {","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        case \"get\":","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"            return new GetReflectionQuestionsCommand(reflectionManager, reflectionCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        case \"save\":","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"            return new SaveToFavouritesCommand(reflectionManager, reflectionCommandArgs);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"        case \"unsave\":","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"            return new UnsaveFromFavouritesCommand(reflectionManager, reflectionCommandArgs);","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        case \"list\":","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"            return new ListFavouriteReflectionsCommand(reflectionManager, reflectionCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"        case \"help\":","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"            return new ReflectionHelpCommand(reflectionManager, reflectionCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Unknown reflect command\");","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":48}},{"path":"src/main/java/parser/SleepCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import commands.Command;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.AddSleepCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.DeleteSleepCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.GetSleepCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.ListSleepCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.SaveSleepCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"import commands.sleepcommands.UpdateSleepCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"import sleep.SleepTracker;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":" * Represents the input parser of Sleep Tracker.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":" * Parses user input into Sleep Tracker commands and details of the command.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":" * Generates the respective Command objects based on the parsed command keyword.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"public class SleepCommandParser {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"     * Parses user input into command and details, and creates the corresponding Command object.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"     * @param sleepTracker Class that contains information and functions to be executed required by Sleep Tracker","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"     * @param commandArgs User input for the sleep tracker command.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"     * @return Command object to be executed.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"     * @throws SleepException If the user input is not part of the command list.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    public static Command determineSleepCommand(SleepTracker sleepTracker, String commandArgs)","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"            throws SleepException {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"        String[] userCommand \u003d commandArgs.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        String userSleepCommand \u003d userCommand[0];","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        String sleepCommandArgs \u003d userCommand.length \u003d\u003d 2 ? userCommand[1] : \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        switch(userSleepCommand) {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"        case \"add\":","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"            return new AddSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"        case \"list\":","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"            return new ListSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"        case \"get\":","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"            return new GetSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"        case \"update\":","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"            return new UpdateSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"            return new DeleteSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"        case \"save\":","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"            return new SaveSleepCommand(sleepTracker, sleepCommandArgs);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"        default:","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"            throw new SleepException(\"Unknown sleep command\");","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":50,"damiwee":1}},{"path":"src/main/java/reflection/FavoriteReflectionsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":" * Represents a list of favorite reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"public class FavoriteReflectionsList extends ReflectionList {","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"     * Constructs a FavoriteReflectionsList with an empty list of favorites.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    public FavoriteReflectionsList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"        super();","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"     * Retrieves a favorite reflection question by its index in the list.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"     * @param favouritesId The index of the favorite reflection question to retrieve.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * @return The reflection question at the specified index.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    public ReflectionQuestion get(int favouritesId) {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"        return reflectionList.get(favouritesId);","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"damiwee":24}},{"path":"src/main/java/reflection/ReflectionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":" * Represents a list of reflection questions.","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"public abstract class ReflectionList {","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    protected ArrayList\u003cReflectionQuestion\u003e reflectionList;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"     * Constructs a ReflectionList with an empty list of reflections.","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    public ReflectionList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        this.reflectionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * Adds a reflection question to the list.","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"     * @param reflectionQuestion The reflection question to be added.","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion(ReflectionQuestion reflectionQuestion) {","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        if (!reflectionQuestion.toString().isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"            reflectionList.add(reflectionQuestion);","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"     * Removes a reflection question from the list.","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"     * @param reflectionQuestion The reflection question to be removed.","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"    public void removeReflectionQuestion(ReflectionQuestion reflectionQuestion) {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        if (!reflectionQuestion.toString().isBlank()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"            reflectionList.remove(reflectionQuestion);","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"     * Retrieves the size of the reflection list.","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"     * @return The size of the reflection list.","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"    public int getSize() {","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"        return reflectionList.size();","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"     * Retrieves the list of reflection questions.","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"     * @return The list of reflection questions.","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"    public ArrayList\u003cReflectionQuestion\u003e getReflectionList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"        return reflectionList;","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"damiwee":59}},{"path":"src/main/java/reflection/ReflectionManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":" * Manages reflection-related operations.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"public class ReflectionManager {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    private static final String[] HELP_MENU_INSTRUCTIONS \u003d {","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        \"reflect get: Get 5 random reflection questions\",","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"        \"reflect save \u003creflection_id\u003e: Save reflection question by id to favourites list\",","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"        \"reflect unsave \u003creflection_id\u003e: Unsave reflection question by id from favourites list\",","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"        \"reflect list: Retrieve questions from favourites list\",","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"        \"reflect help: Get help menu for reflect commands\"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    };","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    private static final String FAVOURITE_QUESTIONS_FILE_PATH \u003d \"data/favourites.txt\";","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    private ArrayList\u003cReflectionQuestion\u003e fiveRandomQuestions;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    private ReflectionQuestionBank questionBank;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    private FavoriteReflectionsList favoriteReflectionsList;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"     * Constructs a ReflectionManager and initializes question bank and favorite reflections list.","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    public ReflectionManager() {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        this.questionBank \u003d new ReflectionQuestionBank();","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"        this.favoriteReflectionsList \u003d new FavoriteReflectionsList();","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        ArrayList\u003cString\u003e favouritesList \u003d Storage.loadDataFromFile(FAVOURITE_QUESTIONS_FILE_PATH);","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        for (String fav : favouritesList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"            ReflectionQuestion reflectionQuestion \u003d new ReflectionQuestion(fav);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"            this.favoriteReflectionsList.addReflectionQuestion(reflectionQuestion);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"     * Prints five random reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"    public void printFiveRandomQuestions() {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"            fiveRandomQuestions \u003d questionBank.getFiveRandomQuestions();","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"            Ui.printList(fiveRandomQuestions, \"Generated Questions:\");","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"        } catch (ReflectException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"     * Saves a reflection question to favorites.","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"     * @param reflectionId The ID of the reflection question to save.","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if an error occurs during saving.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"    public void saveReflectionQuestion(int reflectionId) throws ReflectException {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"            ReflectionQuestion questionToSave \u003d fiveRandomQuestions.get(reflectionId - 1);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"            favoriteReflectionsList.addReflectionQuestion(questionToSave);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"            Storage.saveTasksToFile(FAVOURITE_QUESTIONS_FILE_PATH, favoriteReflectionsList.getReflectionList());","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(\"Got it. Added reflection question to favourites:\\n\" + questionToSave);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Key in valid favourite reflection ID, between 1 and 5\");","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"No questions generated yet. Generate questions using \u0027reflect get\u0027 \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"                    \"command first.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"     * Unsaves a reflection question from favorites.","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"damiwee"},"content":"     * @param reflectionId The ID of the reflection question to be unsaved.","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if an error occurs during saving.","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"damiwee"},"content":"    public void unsaveReflectionQuestion(int reflectionId) throws ReflectException {","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"damiwee"},"content":"            ReflectionQuestion questionToUnsave \u003d favoriteReflectionsList.get(reflectionId - 1);","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"damiwee"},"content":"            favoriteReflectionsList.removeReflectionQuestion(questionToUnsave);","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"damiwee"},"content":"            Storage.saveTasksToFile(FAVOURITE_QUESTIONS_FILE_PATH, favoriteReflectionsList.getReflectionList());","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(\"Got it. Unsaved reflection question from favourites:\\n\" + questionToUnsave);","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"damiwee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Key in valid favourite reflection ID, key in \u0027reflect list\u0027 command to \" +","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"damiwee"},"content":"                    \"view range of questions in your favourites list. \");","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"damiwee"},"content":"     * Prints the list of favorite reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"damiwee"},"content":"    public void printFavourites() {","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"damiwee"},"content":"        if(favoriteReflectionsList.getReflectionList().isEmpty()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(\"No reflection questions saved to favourites\");","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"damiwee"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"damiwee"},"content":"            Ui.printList(favoriteReflectionsList.getReflectionList(), \"Favourites list:\");","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"damiwee"},"content":"     * Prints the help menu for reflection commands.","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"damiwee"},"content":"    public void printHelpMenu() {","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"damiwee"},"content":"        ArrayList\u003cString\u003e helpMenuInstructionsList \u003d new ArrayList\u003c\u003e(Arrays.asList(HELP_MENU_INSTRUCTIONS));","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"damiwee"},"content":"        assert helpMenuInstructionsList.size() \u003d\u003d 5 : \"Help menu should have 5 instructions\";","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"damiwee"},"content":"        Ui.printList(helpMenuInstructionsList, \"Commands for reflection feature:\");","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":120}},{"path":"src/main/java/reflection/ReflectionQuestion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":" * Represents a reflection question.","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"public class ReflectionQuestion {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"    private String question;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"     * Constructs a ReflectionQuestion with the given question text.","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"     * @param question The text of the reflection question.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    public ReflectionQuestion(String question) {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        this.question \u003d question;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"     * Retrieves the text of the reflection question.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"     * @return The text of the reflection question.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        return question;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":27}},{"path":"src/main/java/reflection/ReflectionQuestionBank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflection;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":" * Represents a bank of reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"public class ReflectionQuestionBank extends ReflectionList{","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private static final String[] REFLECTION_QUESTIONS \u003d {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"        \"What have been the most significant lessons you\u0027ve learned about yourself in the past year?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"        \"How have your values evolved over time, and why?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        \"What habits or behaviors do you want to cultivate or change to become a better version of yourself?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a recent failure or setback. What did you learn from it, and how will you apply those lessons \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"                \"moving forward?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"        \"In what areas do you feel you\u0027ve made the most progress recently, and what contributed to that progress?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"        \"What are your biggest strengths, and how can you leverage them more effectively in your daily life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"        \"Describe a moment when you stepped outside of your comfort zone. What did you discover about yourself?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"        \"How do you define success, and how has that definition evolved over time?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"        \"What activities or hobbies bring you the most joy and fulfillment, and how can you incorporate more of them \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"                \"into your life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you received constructive criticism. How did you react, and what did you learn from \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"                \"the experience?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        \"Who are the people in your life who bring you the most happiness and support? How do you nurture \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"                \"those relationships?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        \"Have there been any conflicts or misunderstandings in your relationships recently? How have you worked \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"                \"to resolve them?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you felt truly understood by someone. What made that connection so meaningful?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"        \"How do you prioritize spending time with loved ones amidst your busy schedule?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"        \"What qualities do you admire most in your closest friends or family members, and why?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        \"Are there any relationships in your life that feel strained or unfulfilling? How can you address \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"                \"those challenges?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        \"Reflect on your communication style. In what ways do you excel, and where do you see room for improvement?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        \"Describe a memorable shared experience with someone you care about. What made it special?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"        \"How do you express gratitude toward the people who enrich your life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you forgave someone or were forgiven. What did you learn from that experience?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"        \"What motivates you to excel in your career, beyond financial rewards?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a recent professional success. What factors contributed to your achievement?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"        \"In what ways do you seek to grow and develop within your current role or industry?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"        \"How do you balance pursuing your career ambitions with maintaining a healthy work-life balance?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you faced a significant challenge at work. How did you overcome it?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"        \"What steps are you taking to advance your skills and knowledge in your field?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"        \"Describe a mentor or role model who has had a profound impact on your career journey. \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"                \"What lessons have you learned from them?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"        \"How do you navigate workplace conflicts or disagreements with colleagues or superiors?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"        \"Reflect on your career goals. Are they still aligned with your passions and values, or have they evolved?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"        \"What do you consider to be your greatest professional achievement so far, and why?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"        \"How do you prioritize self-care and well-being in your daily life?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a recent creative project or activity that brought you joy. What inspired you to pursue it?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"        \"In what ways do you express yourself creatively, whether through art, writing, music, or other mediums?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"        \"Describe a time when you felt in a state of flow, completely absorbed in a creative endeavor.\",","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"        \"How do you overcome creative blocks or periods of stagnation?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a piece of art, literature, or music that has deeply resonated with you. \" +","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"                \"What emotions or insights did it evoke?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"        \"What role does creativity play in your life, and how do you nurture it?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"        \"How do you make time for creative pursuits amidst your other responsibilities and commitments?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"        \"Reflect on a time when you took a creative risk. What did you learn from the experience?\",","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"        \"Describe a recent moment when you felt inspired by something or someone in your environment.\",","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"        \"How do you celebrate your unique talents and creative voice?\"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"    };","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"     * Constructs a ReflectionQuestionBank and initializes the list of reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"    public ReflectionQuestionBank() {","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"        super();","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"        setUpReflectionBank();","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"     * Initializes the reflection question bank with predefined questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"damiwee"},"content":"    private void setUpReflectionBank() {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"        for(String question : REFLECTION_QUESTIONS) {","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"            ReflectionQuestion reflectionQuestion \u003d new ReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"            addReflectionQuestion(reflectionQuestion);","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"damiwee"},"content":"        assert !reflectionList.isEmpty() : \"Reflection question bank should not be empty\";","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"damiwee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"damiwee"},"content":"     * Retrieves five random reflection questions from the bank.","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"damiwee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"damiwee"},"content":"     * @return An ArrayList containing five random reflection questions.","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"damiwee"},"content":"     * @throws ReflectException if the bank is empty.","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"damiwee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"damiwee"},"content":"    public ArrayList\u003cReflectionQuestion\u003e getFiveRandomQuestions() throws ReflectException {","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"damiwee"},"content":"            ArrayList\u003cReflectionQuestion\u003e randomQuestions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"damiwee"},"content":"            // Create a copy of the original list","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"damiwee"},"content":"            ArrayList\u003cReflectionQuestion\u003e copyList \u003d new ArrayList\u003c\u003e(reflectionList);","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"damiwee"},"content":"            // Shuffle the copy list","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"damiwee"},"content":"            Collections.shuffle(copyList);","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"damiwee"},"content":"            // Select the first five questions from the shuffled copy list and","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"damiwee"},"content":"            // add them to the result list","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"damiwee"},"content":"            for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"damiwee"},"content":"                randomQuestions.add(copyList.get(i));","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"damiwee"},"content":"            assert randomQuestions.size() \u003d\u003d 5 : \"random questions list size should be 5\";","lastModifiedDate":"2024-03-22"},{"lineNumber":107,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"damiwee"},"content":"            return randomQuestions;","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"damiwee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"damiwee"},"content":"            throw new ReflectException(\"Question bank is empty\");","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":113}},{"path":"src/main/java/sleep/DeleteMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"public enum DeleteMode {","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"    FIND, BEFORE, BETWEEN","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"OKW32":5}},{"path":"src/main/java/sleep/SleepCycle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"public class SleepCycle implements Comparable\u003cSleepCycle\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"    private double hoursSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"    private LocalDate dateOfSleep;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    public SleepCycle(double hours, LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"        this.hoursSlept \u003d hours;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"        this.dateOfSleep \u003d date;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    public double getHoursSlept() {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"        return hoursSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    public LocalDate getDateOfSleep() {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"        return dateOfSleep;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"    public void setHoursOfSleep(double newHours) {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"        hoursSlept \u003d newHours;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"    public int compareTo(SleepCycle sleepCycle) {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"        LocalDate compareDate \u003d sleepCycle.dateOfSleep;","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        if (compareDate.isEqual(this.dateOfSleep)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"            return 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        } else if (compareDate.isAfter(this.dateOfSleep)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"            return -1;","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            return 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"        return DateFormat.convertDateToString(this.getDateOfSleep()) + \": \" + this.hoursSlept;","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":43}},{"path":"src/main/java/sleep/SleepCycleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":" * Represents the lists of sleep cycles","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"public class SleepCycleList {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    private ArrayList\u003cSleepCycle\u003e sleepCycleList;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    private double totalHrsSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    private int numberOfCycles;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"     * Constructs a new SleepCycleList object with an empty list.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    public SleepCycleList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"        this.sleepCycleList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"        this.totalHrsSlept \u003d 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"        this.numberOfCycles \u003d 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"     * Adds a new sleep cycle into sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"     * @param sleepCycle sleep cycle to be added","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"     * @param isPrint true if user wants to print out message, false otherwise","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"    public void addSleepCycle(SleepCycle sleepCycle, boolean isPrint) {","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.add(sleepCycle);","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        totalHrsSlept +\u003d sleepCycle.getHoursSlept();","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"        numberOfCycles +\u003d 1;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        if (isPrint) {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"            Ui.printMessageWithSepNewLine(\"--- SleepCycle for \"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"                    + DateFormat.convertDateToString(sleepCycle.getDateOfSleep())","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"                    + \" has been added ---\");","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"        Collections.sort(sleepCycleList);","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"     * Deletes a new sleep cycle in sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"     * @param date date of sleep cycle to be deleted","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCycle(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c numberOfCycles; i++) {","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"            SleepCycle currSleepCycle \u003d sleepCycleList.get(i);","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"            if (date.isEqual(currSleepCycle.getDateOfSleep())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"OKW32"},"content":"                totalHrsSlept -\u003d currSleepCycle.getHoursSlept();","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"                sleepCycleList.remove(i);","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"                numberOfCycles--;","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"                Ui.printMessageWithSepNewLine(\"Sleep cycle for \" + DateFormat.convertDateToString(date)","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"                        + \" has been removed from list\");","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"                return;","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(\"No entry for sleep cycle on \" + DateFormat.convertDateToString(date));","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"OKW32"},"content":"     * Deletes a new sleep cycle in sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"OKW32"},"content":"     * @param date date at which sleep cycles logged before this date are to be deleted","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCyclesBefore(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"OKW32"},"content":"        int numberOfDeletion \u003d 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"OKW32"},"content":"        while (numberOfCycles \u003e 0 \u0026\u0026 sleepCycleList.get(0).getDateOfSleep().isBefore(date)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"OKW32"},"content":"            totalHrsSlept -\u003d sleepCycleList.get(0).getHoursSlept();","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"OKW32"},"content":"            sleepCycleList.remove(0);","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"OKW32"},"content":"            numberOfCycles--;","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"OKW32"},"content":"            numberOfDeletion++;","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(\"A total of \" + numberOfDeletion + \" sleep cycles have been deleted\");","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"OKW32"},"content":"     * Deletes a new sleep cycle in sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"OKW32"},"content":"     * @param startDate lower bound of date of sleep cycles to be deleted","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"OKW32"},"content":"     * @param endDate upper bound of date of sleep cycles to be deleted","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCyclesBetween(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"OKW32"},"content":"        int startId \u003d 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"OKW32"},"content":"        int numberOfDeletion \u003d 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"OKW32"},"content":"        while (startId \u003c numberOfCycles) {","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"OKW32"},"content":"            SleepCycle currSleepCycle \u003d sleepCycleList.get(startId);","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"OKW32"},"content":"            if (startDate.isBefore(currSleepCycle.getDateOfSleep())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"OKW32"},"content":"                startId++;","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"OKW32"},"content":"            } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"OKW32"},"content":"                break;","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"OKW32"},"content":"        while (startId \u003c numberOfCycles) {","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"OKW32"},"content":"            SleepCycle currSleepCycle \u003d sleepCycleList.get(startId);","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"OKW32"},"content":"            if (!currSleepCycle.getDateOfSleep().isAfter(endDate)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"OKW32"},"content":"                sleepCycleList.remove(startId);","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"OKW32"},"content":"                numberOfDeletion++;","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"OKW32"},"content":"                numberOfCycles--;","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"OKW32"},"content":"            } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"OKW32"},"content":"                break;","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(\"A total of \" + numberOfDeletion + \" sleep cycles have been deleted\");","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"OKW32"},"content":"     * List out all sleep cycles in sleepCycleList","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"OKW32"},"content":"    public void listSleepCycles() {","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"OKW32"},"content":"        String sleepListMessage \u003d \"Total hrs slept: \" + totalHrsSlept + System.lineSeparator();","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c numberOfCycles - 1; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"OKW32"},"content":"            sleepListMessage +\u003d (i + 1) + \". \" + sleepCycleList.get(i) + System.lineSeparator();","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"OKW32"},"content":"        if (numberOfCycles \u003e 0) {","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"OKW32"},"content":"            sleepListMessage +\u003d numberOfCycles + \". \" + sleepCycleList.get(numberOfCycles - 1);","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"OKW32"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"OKW32"},"content":"            sleepListMessage +\u003d \"No sleep cycle has been added\";","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(sleepListMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"OKW32"},"content":"     * Prints out number of hours of a date\u0027s sleep cycle in sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"OKW32"},"content":"     * @param date date of sleep cycle to be found","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"OKW32"},"content":"     * @param isPrint true if user wants to print out message, false otherwise","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"OKW32"},"content":"     * @return id of sleepCycle of the specific date","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"OKW32"},"content":"    public int getSleepCycle(LocalDate date, boolean isPrint) {","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c numberOfCycles; i++) {","lastModifiedDate":"2024-03-23"},{"lineNumber":131,"author":{"gitId":"OKW32"},"content":"            SleepCycle currSleep \u003d sleepCycleList.get(i);","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"OKW32"},"content":"            if (currSleep.getDateOfSleep().isEqual(date)){","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"OKW32"},"content":"                if (isPrint) {","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"OKW32"},"content":"                    Ui.printMessageWithSepNewLine(\"Hours slept on \" + DateFormat.convertDateToString(date)","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"OKW32"},"content":"                            + \": \" + currSleep.getHoursSlept());","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"OKW32"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"OKW32"},"content":"                return i;","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"OKW32"},"content":"        if (isPrint) {","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"OKW32"},"content":"            Ui.printMessageWithSepNewLine(\"No entry found for the date.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":143,"author":{"gitId":"OKW32"},"content":"        return -1;","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":146,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"OKW32"},"content":"     * Updates a  sleep cycle in sleepCycleList.","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"OKW32"},"content":"     * @param date date of sleep cycle to be updated","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"OKW32"},"content":"     * @param newHours updated hours of sleep cycle","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"OKW32"},"content":"    public void updateSleepCycle(LocalDate date, double newHours) {","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c numberOfCycles; i++) {","lastModifiedDate":"2024-03-23"},{"lineNumber":153,"author":{"gitId":"OKW32"},"content":"            SleepCycle currSleep \u003d sleepCycleList.get(i);","lastModifiedDate":"2024-03-23"},{"lineNumber":154,"author":{"gitId":"OKW32"},"content":"            if (currSleep.getDateOfSleep().isEqual(date)){","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"OKW32"},"content":"                double oldHours \u003d currSleep.getHoursSlept();","lastModifiedDate":"2024-03-23"},{"lineNumber":156,"author":{"gitId":"OKW32"},"content":"                currSleep.setHoursOfSleep(newHours);","lastModifiedDate":"2024-03-23"},{"lineNumber":157,"author":{"gitId":"OKW32"},"content":"                totalHrsSlept \u003d totalHrsSlept - oldHours + newHours;","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"OKW32"},"content":"                Ui.printMessageWithSepNewLine(\"Hours of sleep for \" + DateFormat.convertDateToString(date) +","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"OKW32"},"content":"                        \" has been updated from \" + oldHours + \" to \" + newHours);","lastModifiedDate":"2024-03-24"},{"lineNumber":160,"author":{"gitId":"OKW32"},"content":"                return;","lastModifiedDate":"2024-03-23"},{"lineNumber":161,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":162,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":163,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(\"No entry found for the date.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":164,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":165,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":166,"author":{"gitId":"OKW32"},"content":"    public int getNumberOfCycles() {","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"OKW32"},"content":"        return numberOfCycles;","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"OKW32"},"content":"    public double getTotalHrsSlept() {","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"OKW32"},"content":"        return totalHrsSlept;","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"OKW32"},"content":"    public ArrayList\u003cSleepCycle\u003e getSleepCycleList() {","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"OKW32"},"content":"        return this.sleepCycleList;","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":178}},{"path":"src/main/java/sleep/SleepTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import storage.sleep.SleepTrackerStorage;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":" * Represents the interface for SleepTracker","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":" * The sleepCycleList contains all the tasks managed by Wellness360.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"public class SleepTracker {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"    SleepCycleList sleepCycleList;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    public SleepTracker() {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"            this.sleepCycleList \u003d SleepTrackerStorage.loadSleepListFromFile();","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"        } catch (SleepException e){","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"    public void listSleepCycles() {","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.listSleepCycles();","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"    public void addSleepCycle(SleepCycle sleepCycleToAdd) throws SleepException {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        if (sleepCycleList.getSleepCycle(sleepCycleToAdd.getDateOfSleep(), false) \u003e\u003d 0) {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"            throw new SleepException(\"There is already an existing sleep cycle for the date\");","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(sleepCycleToAdd, true);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"    public void updateSleepCycle(LocalDate date, double newHours) {","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.updateSleepCycle(date, newHours);","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"    public void getSleepCycle(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.getSleepCycle(date, true);","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCycle(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.deleteSleepCycle(date);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCyclesBefore(LocalDate date) {","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.deleteSleepCyclesBefore(date);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"OKW32"},"content":"    public void deleteSleepCyclesBetween(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.deleteSleepCyclesBetween(startDate, endDate);","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"    public void saveSleepCycles() {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"        SleepTrackerStorage.saveSleepListToFile(sleepCycleList.getSleepCycleList());","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":59}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package storage;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import java.io.File;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"public class Storage {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    public static ArrayList\u003cString\u003e loadDataFromFile(String filePath) {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"        try (Scanner scanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"                String nextLineOfData \u003d scanner.nextLine();","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"                data.add(nextLineOfData);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"            createFolder(filePath);","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        return data;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    public static void createFolder(String filePath) {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"            f.createNewFile();","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    public static \u003cT\u003e void saveTasksToFile(String filePath, ArrayList\u003cT\u003e data) {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"            for (T item : data) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"                fw.write(item.toString() + System.lineSeparator());","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"            fw.close();","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"            Ui.printMessageWithSepNewLine(e.getMessage());","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"    public static boolean isFileCreated (String filePath) {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"        return f.exists() \u0026\u0026 !f.isDirectory();","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"damiwee":54,"Daviancold":5}},{"path":"src/main/java/storage/habit/HabitTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package storage.habit;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import habit.Habit;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import habit.Priority;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"public class HabitTrackerStorage {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"    private static final String HABIT_FILE_PATH \u003d \"data/habits.txt\";","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    private static final String COMMA_SEPARATION \u003d \", \";","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    private static final int DATA_SIZE \u003d 3;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"    public static void saveHabitListToFile(ArrayList\u003cHabit\u003e habitList) {","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"        for (Habit habit : habitList) {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"            data.add(habit.getDescription() + COMMA_SEPARATION + habit.getHabitCount()","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"                    + COMMA_SEPARATION + habit.getPriority());","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"        Storage.saveTasksToFile(HABIT_FILE_PATH, data);","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"    public static ArrayList\u003cHabit\u003e loadHabitListFromFile() throws HabitException {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        ArrayList\u003cHabit\u003e habitList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        ArrayList\u003cString\u003e data \u003d Storage.loadDataFromFile(HABIT_FILE_PATH);","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"        for (String line : data) {","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"            String[] parts \u003d line.split(\", \");","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"            if (parts.length !\u003d DATA_SIZE) {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"                throw new HabitException(\"Error in loading habit tracker data from local storage\");","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"            String description \u003d parts[0];","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"            int habitCount \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"genexus85"},"content":"            Priority priority \u003d Priority.valueOf(parts[2]);","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"genexus85"},"content":"            Habit habit \u003d new Habit(description, habitCount, priority);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"genexus85"},"content":"            habitList.add(habit);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"genexus85"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"genexus85"},"content":"        return habitList;","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"genexus85":47}},{"path":"src/main/java/storage/sleep/SleepTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package storage.sleep;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import date.DateFormat;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import exceptions.SleepException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import sleep.SleepCycle;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"import sleep.SleepCycleList;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":" * Class to handle storage of data for Sleep Tracker","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"public class SleepTrackerStorage {","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    private static final String SLEEP_FILE_PATH \u003d \"data/sleep.txt\";","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"    private static final String ERROR_MESSAGE \u003d \"Error in loading habit tracker data from local storage\";","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    private static final int HOURS_POS \u003d 0;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    private static final int DATE_POS \u003d 1;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"     * Saves list of sleep cycles added by user into a text file.","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"     * @param sleepList list of sleep cycles added by user to be saved","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    public static void saveSleepListToFile(ArrayList\u003cSleepCycle\u003e sleepList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"        if (!Storage.isFileCreated(SLEEP_FILE_PATH)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"            Storage.createFolder(SLEEP_FILE_PATH);","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        for (SleepCycle sleepCycle : sleepList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"            data.add(sleepCycle.getHoursSlept() + \",\" + DateFormat.convertDateToString(sleepCycle.getDateOfSleep()));","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"        Storage.saveTasksToFile(SLEEP_FILE_PATH, data);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"        Ui.printMessageWithSepNewLine(\"Saved list to storage file\");","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"     * Load list of sleep cycles added by user from a text file.","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"     * @return SleepCycleList list of sleep cycles added by user","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"    public static SleepCycleList loadSleepListFromFile() throws SleepException {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"        if (!Storage.isFileCreated(SLEEP_FILE_PATH)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"            Storage.createFolder(SLEEP_FILE_PATH);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"        ArrayList\u003cString\u003e data \u003d Storage.loadDataFromFile(SLEEP_FILE_PATH);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"OKW32"},"content":"        SleepCycleList sleepCycleList \u003d new SleepCycleList();","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"OKW32"},"content":"        for (String line : data) {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"OKW32"},"content":"            String[] parts \u003d line.split(\",\");","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"OKW32"},"content":"            if (parts.length !\u003d 2) {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"OKW32"},"content":"                throw new SleepException(ERROR_MESSAGE);","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"OKW32"},"content":"            double hour;","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"OKW32"},"content":"            LocalDate date;","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"OKW32"},"content":"            try {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"OKW32"},"content":"                hour \u003d Double.parseDouble(parts[HOURS_POS]);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"OKW32"},"content":"                date \u003d DateFormat.convertStringToDate(parts[DATE_POS]);","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"OKW32"},"content":"            } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"OKW32"},"content":"                throw new SleepException(ERROR_MESSAGE);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"OKW32"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"OKW32"},"content":"            SleepCycle sleepCycle \u003d new SleepCycle(hour, date);","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"OKW32"},"content":"            sleepCycleList.addSleepCycle(sleepCycle, false);","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"OKW32"},"content":"        return sleepCycleList;","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"OKW32":73}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":" * Ui class handles user interface related functionalities","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":" * such as displaying messages,prompting user input, and","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":" * printing separators.","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"public class Ui {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"    private static final String BOT_NAME \u003d \"Wellness360\";","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    private static final String SEP \u003d \"_______________________________________________________\" +","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"            \"_________________________________________________________\";","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"            \"__        __   _ _                     _____  __    ___  \\n\" +","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"            \"\\\\ \\\\      / /__| | |_ __   ___  ___ ___|___ / / /_  / _ \\\\ \\n\" +","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"            \" \\\\ \\\\ /\\\\ / / _ \\\\ | | \u0027_ \\\\ / _ \\\\/ __/ __| |_ \\\\| \u0027_ \\\\| | | |\\n\" +","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"            \"  \\\\ V  V /  __/ | | | | |  __/\\\\__ \\\\__ \\\\___) | (_) | |_| |\\n\" +","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"            \"   \\\\_/\\\\_/ \\\\___|_|_|_| |_|\\\\___||___/___/____/ \\\\___/ \\\\___/\\n\";","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"     * Greets the user upon starting the application.","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"    public static void greetUser() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        System.out.println(\"Welcome to Wellness360!\\n\" + SEP);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"     * Prints the prompt for user input.","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"    public static void promptUserInput() {","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        System.out.print(\"You:\");","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"     * Says goodbye to the user upon exiting the application.","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"     * Displays a farewell message.","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        Ui.printMessageWithSepNewLine(\"Goodbye! See you again!\");","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"OKW32"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"OKW32"},"content":"     * Prints a message followed by a separator and a new line.","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"OKW32"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"OKW32"},"content":"     * @param message the message to be printed","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"OKW32"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"OKW32"},"content":"    public static void printMessageWithSepNewLine(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"OKW32"},"content":"        System.out.println(SEP + \"\\n\" +message + \"\\n\" + SEP);","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"genexus85"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"genexus85"},"content":"     * Prints a message without a new line after, and subsequently followed by a separator.","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"genexus85"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"genexus85"},"content":"     * @param message the message to be printed","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"genexus85"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"genexus85"},"content":"    public static void printMessageWithoutNewLine(String message) {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"genexus85"},"content":"        System.out.println(SEP + \"\\n\" + message + SEP);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"    public static void printList(ArrayList list, String message) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"        System.out.println(SEP);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"OKW32"},"content":"        for (int i \u003d 0; i \u003c list.size(); i ++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"OKW32"},"content":"            System.out.println((i + 1) + \". \" + list.get(i).toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"OKW32"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"        System.out.println(SEP);","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":47,"genexus85":9,"damiwee":15}},{"path":"src/test/java/commands/reflectcommands/GetReflectionQuestionsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"class GetReflectionQuestionsCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"    private GetReflectionQuestionsCommand command;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"    void setUp() throws ReflectException {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"        reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"        command \u003d new GetReflectionQuestionsCommand(reflectionManager, \"\");","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    void constructor_emptyArgs_noExceptionThrown() {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        assertDoesNotThrow(() -\u003e new GetReflectionQuestionsCommand(reflectionManager, \"\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    void constructor_nonEmptyArgs_exceptionThrown() {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        assertThrows(ReflectException.class, () -\u003e new GetReflectionQuestionsCommand(reflectionManager, \"args\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"    void isExit_notExitCommand_returnFalse() {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"damiwee":39}},{"path":"src/test/java/commands/reflectcommands/ListFavouriteReflectionsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"public class ListFavouriteReflectionsCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    private ListFavouriteReflectionsCommand command;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    void setUp() throws ReflectException {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"        reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"        command \u003d new ListFavouriteReflectionsCommand(reflectionManager, \"\");","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    void constructor_emptyArgs_noExceptionThrown() {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        assertDoesNotThrow(() -\u003e new ListFavouriteReflectionsCommand(reflectionManager, \"\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"    void constructor_nonEmptyArgs_exceptionThrown() {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"        assertThrows(ReflectException.class, () -\u003e new ListFavouriteReflectionsCommand(reflectionManager, \"args\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"    void isExit_notExitCommand_returnFalse() {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"damiwee":37}},{"path":"src/test/java/commands/reflectcommands/ReflectionHelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"public class ReflectionHelpCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"    private ReflectionHelpCommand command;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"    void setUp() throws ReflectException {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"        reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"        command \u003d new ReflectionHelpCommand(reflectionManager, \"\");","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    void constructor_emptyArgs_noExceptionThrown() {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"        assertDoesNotThrow(() -\u003e new ReflectionHelpCommand(reflectionManager, \"\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    void constructor_nonEmptyArgs_exceptionThrown() {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        assertThrows(ReflectException.class, () -\u003e new ReflectionHelpCommand(reflectionManager, \"args\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"    void isExit_notExitCommand_returnFalse() {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"damiwee":37}},{"path":"src/test/java/commands/reflectcommands/SaveToFavouritesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"class SaveToFavouritesCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    void constructor_validReflectionId_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        ReflectionManager reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"        assertDoesNotThrow(() -\u003e new SaveToFavouritesCommand(reflectionManager, \"1\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    void constructor_invalidReflectionId_throwReflectException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"        ReflectionManager reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"        assertThrows(ReflectException.class, () -\u003e new SaveToFavouritesCommand(reflectionManager, \"invalidId\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"    void testIsExit() throws ReflectException {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        ReflectionManager reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        SaveToFavouritesCommand saveCommand \u003d new SaveToFavouritesCommand(reflectionManager, \"1\");","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"        assertFalse(saveCommand.isExit());","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"damiwee":31}},{"path":"src/test/java/commands/reflectcommands/UnsaveFromFavouritesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package commands.reflectcommands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"public class UnsaveFromFavouritesCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"    void constructor_validReflectionId_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"        ReflectionManager reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"        assertDoesNotThrow(() -\u003e new UnsaveFromFavouritesCommand(reflectionManager, \"1\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"    void constructor_invalidReflectionId_throwReflectException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"        ReflectionManager reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"        assertThrows(ReflectException.class, () -\u003e new UnsaveFromFavouritesCommand(reflectionManager, \"invalidId\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"    void testIsExit() throws ReflectException {","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        ReflectionManager reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        UnsaveFromFavouritesCommand saveCommand \u003d new UnsaveFromFavouritesCommand(reflectionManager, \"1\");","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        assertFalse(saveCommand.isExit());","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"damiwee":30}},{"path":"src/test/java/fitness/FitnessMotivatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Daviancold"},"content":"package fitness;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Daviancold"},"content":"import commands.fitnesscommands.AddExerciseCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Daviancold"},"content":"import exceptions.FitnessException;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Daviancold"},"content":"import exceptions.Wellness360Exception;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Daviancold"},"content":"import fitness.exercise.Exercise;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Daviancold"},"content":"import fitness.exercise.ExerciseList;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Daviancold"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Daviancold"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Daviancold"},"content":"import java.io.File;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.ErrorMessageConstants.INCORRECT_INTEGER_ERROR_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.ErrorMessageConstants.INSUFFICIENT_ADD_PARAMS_ERROR_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Daviancold"},"content":"import static commands.fitnesscommands.ErrorMessageConstants.ILLEGAL_TYPE_ERROR_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"Daviancold"},"content":"import static fitness.FitnessMotivator.DATA_FILE_PATH;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Daviancold"},"content":"import static fitness.FitnessMotivator.GOALS_FILE_PATH;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Daviancold"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Daviancold"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Daviancold"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Daviancold"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Daviancold"},"content":"import static storage.Storage.isFileCreated;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Daviancold"},"content":"public class FitnessMotivatorTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Daviancold"},"content":"    private FitnessMotivator fitnessMotivator;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Daviancold"},"content":"    private ExerciseList allExercises;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Daviancold"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Daviancold"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Daviancold"},"content":"        File file1 \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Daviancold"},"content":"        File file2 \u003d new File(GOALS_FILE_PATH);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"Daviancold"},"content":"        if (isFileCreated(DATA_FILE_PATH)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"Daviancold"},"content":"            file1.delete();","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Daviancold"},"content":"        if (isFileCreated(GOALS_FILE_PATH)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"Daviancold"},"content":"            file2.delete();","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Daviancold"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Daviancold"},"content":"        this.fitnessMotivator \u003d new FitnessMotivator();","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Daviancold"},"content":"        this.allExercises \u003d fitnessMotivator.allExercises;","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Daviancold"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Daviancold"},"content":"    public void printExercises_getExercises_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Daviancold"},"content":"        String output \u003d fitnessMotivator.getExercises();","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"Arms\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"Chest\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"Abs\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"Back\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"Legs\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"sets\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Daviancold"},"content":"        assertTrue(output.contains(\"reps\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"Daviancold"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"Daviancold"},"content":"    public void addExerciseIntoList_addExercises_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"Daviancold"},"content":"        // Test input for adding exercise","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Daviancold"},"content":"        String[] exerciseDetails \u003d {","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Daviancold"},"content":"            \"Arms\", \"testing\", \"3\", \"10\"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Daviancold"},"content":"        };","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"Daviancold"},"content":"        // Generating results before adding and after adding exercises","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Daviancold"},"content":"        Exercise exercise \u003d new Exercise(","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Daviancold"},"content":"            \"testing\", ExerciseType.ARMS, \"3\", \"10\");","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Daviancold"},"content":"        Exercise searchResultBeforeAdding \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Daviancold"},"content":"            allExercises.findExercise(ExerciseType.ARMS, \"testing\");","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"Daviancold"},"content":"        fitnessMotivator.addExercises(exerciseDetails);","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Daviancold"},"content":"        Exercise searchResultAfterAdding \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Daviancold"},"content":"            allExercises.findExercise(ExerciseType.ARMS, \"testing\");","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Daviancold"},"content":"        // Assertions","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Daviancold"},"content":"        assertNull(searchResultBeforeAdding);","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"Daviancold"},"content":"        assertEquals(exercise.getExerciseName(), searchResultAfterAdding.getExerciseName());","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"Daviancold"},"content":"        assertEquals(exercise.getType(), searchResultAfterAdding.getType());","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"Daviancold"},"content":"        assertEquals(exercise.getSets(), searchResultAfterAdding.getSets());","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"Daviancold"},"content":"        assertEquals(exercise.getReps(), searchResultAfterAdding.getReps());","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"Daviancold"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"Daviancold"},"content":"    public void incorrectParameters_addExercises_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Daviancold"},"content":"        // Checks if the validation of input for add Exercise works","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"Daviancold"},"content":"        Wellness360Exception exceptionOne \u003d assertThrows(FitnessException.class, () -\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"Daviancold"},"content":"                new AddExerciseCommand(fitnessMotivator, \"testing\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"Daviancold"},"content":"        Wellness360Exception exceptionTwo \u003d assertThrows(FitnessException.class, () -\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"Daviancold"},"content":"                new AddExerciseCommand(fitnessMotivator, \"arms, testing, a, b\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"Daviancold"},"content":"        Wellness360Exception exceptionThree \u003d assertThrows(FitnessException.class, () -\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"Daviancold"},"content":"                new AddExerciseCommand(fitnessMotivator, \"testing, testing, 3, 10\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"Daviancold"},"content":"        assertEquals(\"ERROR MSG: \" + INSUFFICIENT_ADD_PARAMS_ERROR_MESSAGE, exceptionOne.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"Daviancold"},"content":"        assertEquals(\"ERROR MSG: \" + INCORRECT_INTEGER_ERROR_MESSAGE, exceptionTwo.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"Daviancold"},"content":"        assertEquals(\"ERROR MSG: \" + ILLEGAL_TYPE_ERROR_MESSAGE, exceptionThree.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"Daviancold"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"Daviancold"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"Daviancold"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Daviancold":95}},{"path":"src/test/java/focus/CountdownTimerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package focus;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"public class CountdownTimerTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    private CountdownTimer countdownTimer;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"        countdownTimer \u003d new CountdownTimer();","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"    public void setStartTimer_startTimer_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"        countdownTimer.setStart();","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(true, countdownTimer.getRunningStatus());","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    public void setStopTimer_stopTimer_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"        countdownTimer.setStart();","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        countdownTimer.setStop();","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(false, countdownTimer.getRunningStatus());","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"    public void setPause_pauseTimer_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        countdownTimer.setStart();","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        countdownTimer.setPause();","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(false, countdownTimer.getPausedStatus());","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"    public void setResume_resumeTimer_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        countdownTimer.setStart();","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"        countdownTimer.setPause();","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        countdownTimer.setResume();","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(true, countdownTimer.getPausedStatus());","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"JingHaoooo":44}},{"path":"src/test/java/focus/CountupTimerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package focus;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"public class CountupTimerTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    private CountupTimer countupTimer;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"        countupTimer \u003d new CountupTimer();","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"    public void setStartTimer_startTimer_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"        countupTimer.setStartTiming();","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(true, countupTimer.getStartedStatus());","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    public void setStopTimer_stopTimer_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"        countupTimer.setStartTiming();","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        countupTimer.setStopTiming();","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(false, countupTimer.getStartedStatus());","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"JingHaoooo"},"content":"    public void setPause_pauseTimer_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"JingHaoooo"},"content":"        countupTimer.setStartTiming();","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"JingHaoooo"},"content":"        countupTimer.setPause();","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(true, countupTimer.getPauseStatus());","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"JingHaoooo"},"content":"    public void setResume_resumeTimer_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"JingHaoooo"},"content":"        countupTimer.setStartTiming();","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"JingHaoooo"},"content":"        countupTimer.setPause();","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"JingHaoooo"},"content":"        countupTimer.setResume();","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(false, countupTimer.getPauseStatus());","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"JingHaoooo":43}},{"path":"src/test/java/focus/FocusTimerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JingHaoooo"},"content":"package focus;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"JingHaoooo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"JingHaoooo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"JingHaoooo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"JingHaoooo"},"content":"public class FocusTimerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"JingHaoooo"},"content":"    private FocusTimer focusTimer;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"JingHaoooo"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"JingHaoooo"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer \u003d new FocusTimer();","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"JingHaoooo"},"content":"    public void setStartTimer_startTimer_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setStartTiming();","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(true,focusTimer.getStartStatus());","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"JingHaoooo"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"JingHaoooo"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"JingHaoooo"},"content":"    public void setStopTimer_stopTimer_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setStartTiming();","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"JingHaoooo"},"content":"        focusTimer.setStopTiming();","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"JingHaoooo"},"content":"        assertEquals(false, focusTimer.getStartStatus());","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"JingHaoooo"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"JingHaoooo"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"JingHaoooo":28}},{"path":"src/test/java/habit/HabitTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"genexus85"},"content":"package habit;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"genexus85"},"content":"import exceptions.HabitException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"genexus85"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"genexus85"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"genexus85"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"genexus85"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"genexus85"},"content":"public class HabitTrackerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"genexus85"},"content":"    private HabitTracker habitTracker;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"genexus85"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"genexus85"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"genexus85"},"content":"        habitTracker \u003d new HabitTracker();","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"genexus85"},"content":"    @AfterEach","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"genexus85"},"content":"    public void tearDown() {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"genexus85"},"content":"        habitTracker.clearHabitList();","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"genexus85"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"genexus85"},"content":"    public void addHabit_addTwoHabits_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"genexus85"},"content":"        Habit habitOne \u003d new Habit(\"Complete my homework\");","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"genexus85"},"content":"        Habit habitTwo \u003d new Habit(\"Brush my teeth\");","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"genexus85"},"content":"        habitTracker.addHabit(habitOne);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"genexus85"},"content":"        habitTracker.addHabit(habitTwo);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"genexus85"},"content":"        assertEquals(2, HabitTracker.getNumberOfHabits());","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"genexus85"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"genexus85"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"genexus85"},"content":"    public void updateHabitCount_habitCountTwo_success() throws HabitException {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"genexus85"},"content":"        Habit habitOne \u003d new Habit(\"Complete my homework\");","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"genexus85"},"content":"        habitTracker.addHabit(habitOne);","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"genexus85"},"content":"        habitTracker.updateHabitCount(1, \"2\");","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"genexus85"},"content":"        assertEquals(2, habitOne.getHabitCount());","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"genexus85"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"genexus85"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"genexus85":38}},{"path":"src/test/java/reflect/FavoriteReflectionsListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflect;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.FavoriteReflectionsList;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionQuestion;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"public class FavoriteReflectionsListTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"    private FavoriteReflectionsList favoriteReflectionList;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList \u003d new FavoriteReflectionsList();","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion_addQuestion_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"What is reflection?\");","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList.addReflectionQuestion(question);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        assertEquals(1, favoriteReflectionList.getReflectionList().size());","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        assertTrue(favoriteReflectionList.getReflectionList().contains(question));","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion_addBlankQuestion_skipOverBlankQuestion() {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"        //Attempt to add blank question","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList.addReflectionQuestion(question);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"        //Empty or blank questions should be ignored","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"        assertEquals(0, favoriteReflectionList.getReflectionList().size());","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"        assertFalse(favoriteReflectionList.getReflectionList().contains(question));","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"    public void removeReflectionQuestion_removeQuestion_success() {","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"What is reflection?\");","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList.addReflectionQuestion(question);","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList.removeReflectionQuestion(question);","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"        assertEquals(0, favoriteReflectionList.getReflectionList().size());","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"        assertFalse(favoriteReflectionList.getReflectionList().contains(question));","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"    public void get_getQuestionById_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"What is reflection?\");","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"        favoriteReflectionList.addReflectionQuestion(question);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion retrievedQuestion \u003d favoriteReflectionList.get(0);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"        assertEquals(question, retrievedQuestion);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"damiwee":60}},{"path":"src/test/java/reflect/ReflectQuestionBankTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"package reflect;","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionQuestion;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionQuestionBank;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"public class ReflectQuestionBankTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    private ReflectionQuestionBank reflectionQuestionBank;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"        reflectionQuestionBank \u003d new ReflectionQuestionBank();","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion_addQuestion_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"What is reflection?\");","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"        reflectionQuestionBank.addReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        assertEquals(42, reflectionQuestionBank.getSize());","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"    public void addReflectionQuestion_addBlankQuestion_skipOverBlankQuestion() {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        //Attempt to add blank question","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion question \u003d new ReflectionQuestion(\"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"        reflectionQuestionBank.addReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"        //Empty or blank questions should be ignored","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"        assertEquals(41, reflectionQuestionBank.getSize());","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"    public void getFiveRandomQuestions_getFiveQuestions_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"        ReflectionQuestion[] questions \u003d {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 1\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 2\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 3\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 4\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 5\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 6\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 7\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 8\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 9\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"            new ReflectionQuestion(\"Question 10\")","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"        };","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"        ArrayList\u003cReflectionQuestion\u003e expectedQuestions \u003d new ArrayList\u003c\u003e(Arrays.asList(questions));","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"        for (ReflectionQuestion question : expectedQuestions) {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"            reflectionQuestionBank.addReflectionQuestion(question);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"            ArrayList\u003cReflectionQuestion\u003e randomQuestions \u003d reflectionQuestionBank.getFiveRandomQuestions();","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"            // Assert that there are exactly 5 questions returned","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"damiwee"},"content":"            assertEquals(5, randomQuestions.size());","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"            // Assert that all questions returned are from the expected set","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"            for (ReflectionQuestion question : randomQuestions) {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"                assertNotNull(expectedQuestions.contains(question));","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"        } catch (ReflectException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"            fail(\"Question list is empty: \" + e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"    public void getSize_getSizeOfQuestionBank_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"damiwee"},"content":"        // Question bank size has 41 questions","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"damiwee"},"content":"        assertEquals(41, reflectionQuestionBank.getSize());","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"damiwee":82}},{"path":"src/test/java/reflect/ReflectionManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"damiwee"},"content":"package reflect;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"damiwee"},"content":"import exceptions.ReflectException;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"damiwee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"damiwee"},"content":"import reflection.ReflectionManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"damiwee"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"damiwee"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"damiwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"damiwee"},"content":"class ReflectionManagerTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"damiwee"},"content":"    private ReflectionManager reflectionManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"damiwee"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"damiwee"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"damiwee"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"damiwee"},"content":"    void setUp() {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"damiwee"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"damiwee"},"content":"        reflectionManager \u003d new ReflectionManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"damiwee"},"content":"    void printFiveRandomQuestions_printAnyFiveQuestions_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"damiwee"},"content":"        reflectionManager.printFiveRandomQuestions();","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"damiwee"},"content":"        // Check that exactly 5 questions, 1 header and 2 separation lines","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"damiwee"},"content":"        // have been printed to console","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"damiwee"},"content":"        String[] lines \u003d outputStreamCaptor.toString().trim().split(\"\\r\\n|\\r|\\n\");","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"damiwee"},"content":"        assertFalse(outputStreamCaptor.toString().trim().isEmpty());","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"damiwee"},"content":"        assertEquals(8, lines.length);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"damiwee"},"content":"    void unsaveReflectionQuestion_unsaveFromNonEmptyFavouritesList_success() throws ReflectException {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"damiwee"},"content":"        //Add question to favourites list and delete it after","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"damiwee"},"content":"        reflectionManager.printFiveRandomQuestions();","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"damiwee"},"content":"        reflectionManager.saveReflectionQuestion(1);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"damiwee"},"content":"        assertDoesNotThrow(() -\u003e reflectionManager.unsaveReflectionQuestion(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"damiwee"},"content":"    void saveReflectionQuestion_saveFavouriteAfterGenerateQuestions_success() throws ReflectException {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"damiwee"},"content":"        //Save question after questions have been generated","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"damiwee"},"content":"        reflectionManager.printFiveRandomQuestions();","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"damiwee"},"content":"        assertDoesNotThrow(() -\u003e reflectionManager.saveReflectionQuestion(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"damiwee"},"content":"    void saveReflectionQuestion_failToSaveWhenNoQuestionsGenerated_throwReflectException() throws ReflectException {","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"damiwee"},"content":"        //Unable to save as question has not been generated yet","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"damiwee"},"content":"        assertThrows(ReflectException.class, () -\u003e reflectionManager.saveReflectionQuestion(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"damiwee"},"content":"    void printHelpMenu_printHelpMenu_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"damiwee"},"content":"        reflectionManager.printHelpMenu();","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"damiwee"},"content":"        // Check that exactly 5 help menu items, 1 header and 2 separation lines","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"damiwee"},"content":"        // have been printed to console","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"damiwee"},"content":"        String[] lines \u003d outputStreamCaptor.toString().trim().split(\"\\r\\n|\\r|\\n\");","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"damiwee"},"content":"        assertFalse(outputStreamCaptor.toString().trim().isEmpty());","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"damiwee"},"content":"        assertEquals(8, lines.length);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"damiwee"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"damiwee"},"content":"    void saveReflectionQuestion_indexOutOfBounds_throwsReflectException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"damiwee"},"content":"        // Users are only allowed to input id numbers between 1 and 5","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"damiwee"},"content":"        // as each list of newly generated questions is size 5","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"damiwee"},"content":"        assertThrows(ReflectException.class, () -\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"damiwee"},"content":"            reflectionManager.saveReflectionQuestion(6);","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"damiwee"},"content":"        });","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"damiwee"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"damiwee"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"damiwee"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"damiwee":78}},{"path":"src/test/java/sleep/SleepCycleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"OKW32"},"content":"package sleep;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"OKW32"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"OKW32"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"OKW32"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"OKW32"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"OKW32"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"OKW32"},"content":"public class SleepCycleListTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"OKW32"},"content":"    private SleepCycleList sleepCycleList;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"OKW32"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"OKW32"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"OKW32"},"content":"        sleepCycleList \u003d new SleepCycleList();","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"OKW32"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"OKW32"},"content":"    public void addSleepCycle_addCycle_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"OKW32"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"OKW32"},"content":"        date \u003d LocalDate.parse(\"25/01/2022\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\") );","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"OKW32"},"content":"        SleepCycle cycle \u003d new SleepCycle(2, date);","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(cycle, false);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"OKW32"},"content":"        assertEquals(1, sleepCycleList.getNumberOfCycles());","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"OKW32"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"OKW32"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"OKW32"},"content":"    public void addTwoSleepCycle_getTotalHoursSlept_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"OKW32"},"content":"        LocalDate date1;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"OKW32"},"content":"        LocalDate date2;","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"OKW32"},"content":"        date1 \u003d LocalDate.parse(\"25/01/2022\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"OKW32"},"content":"        date2 \u003d LocalDate.parse(\"26/01/2022\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"OKW32"},"content":"        SleepCycle cycle \u003d new SleepCycle(2, date1);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(cycle, false);","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"OKW32"},"content":"        cycle \u003d new SleepCycle(3, date2);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"OKW32"},"content":"        sleepCycleList.addSleepCycle(cycle,false);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"OKW32"},"content":"        assertEquals(5, sleepCycleList.getTotalHrsSlept());","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"OKW32"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"OKW32"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"OKW32":41}}]
