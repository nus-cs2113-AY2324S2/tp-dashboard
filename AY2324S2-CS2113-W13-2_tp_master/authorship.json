[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"    implementation group: \u0027org.mnode.ical4j\u0027, name: \u0027ical4j\u0027, version: \u00273.2.17\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"    implementation \u0027ch.qos.logback:logback-classic:1.2.3\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"    mainClass.set(\"seedu.duke.Main\")","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clarencepohh":2,"-":45,"kyhjonathan":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Display |     Name     | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"--------|:------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Aakash Ramaswamy   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Nicholas Tan Yun Yu   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Sivagnanam Maheshwarn   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Jonathan Kuek   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Clarence Poh | [Github](https://github.com/clarencepohh) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Mahesh1772":4,"clarencepohh":2,"NicholasTanYY":1,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"ical4J Library: https://www.ical4j.org/","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"## Architecture","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"The Calendar application is designed with a modular architecture, consisting of the following components:","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"#### Main Components","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"- **UI**: The `UiRenderer` class handles the rendering of the calendar views (week and month) to the console.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"- **Logic**: The `Main` class acts as the central logic component, handling user input and dispatching commands to the appropriate components.","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"- **Data**: The `TaskManager` class manages the tasks and their corresponding dates, providing methods for adding, updating, and deleting tasks.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"- **Storage**: The `Storage` class handles the persistence of tasks by reading from and writing to a file.","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"- **Time**: The `View` class and its subclasses (`WeekView` and `MonthView`) manage the rendering and navigation of the week and month views.","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"# Design \u0026 Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"## UiRenderer Component","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"### API: [UiRenderer.java](https://github.com/AY2324S2-CS2113-W13-2/tp/blob/master/src/main/java/ui/UiRenderer.java)","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"### Overview: \u003cbr\u003e ","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"The UiRenderer component is responsible for rendering the user interface. It is used to display messages, week views as well as month views to the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"### How it works:","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"1. When week view is requested, the UiRenderer component will render the week view.","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"2. This is done by printing the table in ASCII art format, with the days of the week as columns.","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"3. The week view will display the tasks for the week, with the tasks for each day displayed in the respective columns.","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"4. The UiRenderer component will also display the current date at the top of the week view.","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"5. Similarly, when month view is requested, the UiRenderer component will render the month view.","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"### printWeekHeader Method","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"`printWeekHeader` Method","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"The `printWeekHeader` method is responsible for rendering the header section of the week view, including the names of the days and optionally the dates.","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"#### Method signature:","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"public static void printWeekHeader(LocalDate startOfView, DateTimeFormatter dateFormatter, boolean isMonthView)","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"- startOfView: The starting date of the week view.","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"- dateFormatter: Formatter for displaying dates.","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"- isMonthView: A boolean flag indicating if the month view is being rendered.","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"NicholasTanYY"},"content":"- Prints a horizontal divider to delineate the start of the header.","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"NicholasTanYY"},"content":"- Displays the names of the days as column headers.","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"NicholasTanYY"},"content":"- If not in month view, prints the dates for the respective week.","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"NicholasTanYY"},"content":"### printWeekBody Method","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"NicholasTanYY"},"content":"The printWeekBody method displays the body of the week view, showing tasks for each day in their respective columns.","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Signature","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"NicholasTanYY"},"content":"public static void printWeekBody(LocalDate startOfWeek, DateTimeFormatter dateFormatter, TaskManager taskManager)","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"NicholasTanYY"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"NicholasTanYY"},"content":"- startOfWeek: The starting date of the week for which tasks are displayed.","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"NicholasTanYY"},"content":"- dateFormatter: Formatter for displaying dates.","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"NicholasTanYY"},"content":"- taskManager: The TaskManager instance managing tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"NicholasTanYY"},"content":"- Determines the maximum number of tasks in any day of the week to set the row count.","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"NicholasTanYY"},"content":"- Iterates through each day, displaying tasks or placeholders if there are fewer tasks on certain days.","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"NicholasTanYY"},"content":"### Month View Rendering","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"NicholasTanYY"},"content":"The month view utilizes the printWeekHeader method with the isMonthView parameter set to true, limiting the display to only include week headers without individual tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"NicholasTanYY"},"content":"### Displaying Help and User Commands","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"NicholasTanYY"},"content":"`printHelp` Method","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"NicholasTanYY"},"content":"The printHelp method provides users with a list of available commands and their descriptions, aiding in navigation and task management.","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Signature","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"NicholasTanYY"},"content":"public static void printHelp()","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"NicholasTanYY"},"content":"- Prints a structured list of commands and their purposes within the user interface.","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"NicholasTanYY"},"content":"- Highlights key functionalities like navigating views, adding, and updating tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"NicholasTanYY"},"content":"## View Switching","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"The Calendar application supports switching between the week and month views, allowing users to visualize their tasks in different time perspectives. The switching functionality is implemented through the `WeekView` and `MonthView` classes, which extend the `View` abstract class.","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"NicholasTanYY"},"content":"### View Hierarchy","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"The `View` abstract class provides a common interface for rendering and navigating different calendar views. It defines the following abstract methods:","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"- `printView(TaskManager taskManager)`: This method is responsible for rendering the view to the console based on the provided `TaskManager` instance.","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"- `next()`: This method advances the view to the next period (e.g., next week or next month).","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"- `previous()`: This method moves the view to the previous period (e.g., previous week or previous month).","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"The `View` class also has a protected `startOfView` field, which represents the starting date of the current view period, and a `dateFormatter` field for formatting dates.","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"NicholasTanYY"},"content":"### WeekView","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"The `WeekView` class extends the `View` abstract class and provides an implementation for rendering and navigating the week view. It overrides the following methods from the `View` class:","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"- `printView(TaskManager taskManager)`: This method first calculates the end of the week based on the `startOfView` date. It then prints the week header using the `UiRenderer.printWeekHeader` method and the week body using the `UiRenderer.printWeekBody` method.","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"Mahesh1772"},"content":"- `next()`: This method advances the `startOfView` date to the start of the next week by adding one week.","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"Mahesh1772"},"content":"- `previous()`: This method moves the `startOfView` date to the start of the previous week by subtracting one week.","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"Mahesh1772"},"content":"The `WeekView` class also provides the following utility methods:","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"Mahesh1772"},"content":"- `getStartOfWeek()`: Returns the `startOfView` date, which represents the start of the current week.","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"Mahesh1772"},"content":"- `getDateForDay(int dayOfWeek)`: Returns the date for a specific day of the week based on the `startOfView` date. The `dayOfWeek` parameter is expected to be a value between 1 (Monday) and 7 (Sunday).","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"NicholasTanYY"},"content":"### MonthView","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"Mahesh1772"},"content":"The `MonthView` class extends the `View` abstract class and provides an implementation for rendering and navigating the month view. It overrides the following methods from the `View` class:","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"Mahesh1772"},"content":"- `printView(TaskManager taskManager)`: This method first calculates the start of the month and the first day of the month that falls on a Sunday. It then prints the month header using the `UiRenderer.printWeekHeader` method with the `isMonthView` flag set to `true`. The method iterates over the weeks in the month and calls the `printWeek` method for each week.","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"Mahesh1772"},"content":"- `next()`: This method advances the `startOfView` date to the start of the next month.","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"Mahesh1772"},"content":"- `previous()`: This method moves the `startOfView` date to the start of the previous month.","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"Mahesh1772"},"content":"The `MonthView` class also provides the following private methods:","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"Mahesh1772"},"content":"- `printWeek(LocalDate current, TaskManager taskManager)`: This method prints a single week within the month view. It iterates over the days of the week and calls the `printDay` method for each day. It also prints the tasks for the week using the `printTasksForWeek` method.","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"Mahesh1772"},"content":"- `printDay(LocalDate current)`: This method prints the day number for a given date within the month view.","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"Mahesh1772"},"content":"- `getMaxTasksForWeek(LocalDate weekStart, TaskManager taskManager)`: This method calculates the maximum number of tasks for a given week by iterating over the days of the week and finding the maximum number of tasks for any day.","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"Mahesh1772"},"content":"- `printTasksForWeek(LocalDate weekStart, int maxTasks, TaskManager taskManager)`: This method prints the tasks for a given week within the month view. It iterates over the tasks and calls the `printTaskForDay` method for each task.","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"Mahesh1772"},"content":"- `printTaskForDay(List\u003cTask\u003e dayTasks, int taskIndex)`: This method prints a single task for a given day within the month view.","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"NicholasTanYY"},"content":"### View Switching in Main","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"Mahesh1772"},"content":"The `Main` class is responsible for handling user input and dispatching commands to the appropriate components. It manages the switching between the week and month views based on the user\u0027s input.","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"Mahesh1772"},"content":"When the user enters the `month` command, the `Main` class toggles the `inMonthView` flag and calls the `printView` method of the `MonthView` instance, rendering the month view. Similarly, when the user enters the `week` command, the `Main` class sets the `inMonthView` flag to `false` and calls the `printView` method of the `WeekView` instance, rendering the week view.","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"Mahesh1772"},"content":"The following code snippet illustrates the view switching logic in the `Main` class:","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"Mahesh1772"},"content":"while (true) {","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"Mahesh1772"},"content":"    // ... (User input handling)","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"Mahesh1772"},"content":"    switch (command) {","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"Mahesh1772"},"content":"        case \"month\":","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"Mahesh1772"},"content":"            monthView.printView(taskManager);","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"Mahesh1772"},"content":"            inMonthView \u003d !inMonthView; // Toggle month view mode","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"Mahesh1772"},"content":"            printWeek \u003d false;","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"Mahesh1772"},"content":"        case \"week\":","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"Mahesh1772"},"content":"            inMonthView \u003d false;","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"Mahesh1772"},"content":"        // ... (Other command handling)","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"Mahesh1772"},"content":"    if (printWeek) {","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"Mahesh1772"},"content":"        if (!inMonthView) {","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"Mahesh1772"},"content":"            weekView.printView(taskManager);","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"Mahesh1772"},"content":"            monthView.printView(taskManager);","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"Mahesh1772"},"content":"### Logging","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"Mahesh1772"},"content":"The `FileLogger` class sets up a logger that writes log messages to the `logs.log` file in the project directory. The logger is configured to use the `SimpleFormatter` and to write to the file instead of the console.","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"Mahesh1772"},"content":"### Utilities","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"Mahesh1772"},"content":"The `DateUtils` class provides a utility method `getStartOfWeek` that returns the start date of the week for a given date.","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"Mahesh1772"},"content":"### Task Types","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"Mahesh1772"},"content":"The `TaskType` enum defines the different types of tasks supported by the application: `TODO`, `EVENT`, and `DEADLINE`.","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"NicholasTanYY"},"content":"### Error Handling \u003cbr\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"Mahesh1772"},"content":"The application handles various exceptions, such as `TaskManagerException`, `DateTimeParseException`, and `NumberFormatException`. When an exception occurs, an error message is printed to the console, and the application continues to run.","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"clarencepohh"},"content":"## TaskManager Component","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"clarencepohh"},"content":"### Overview: ","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"clarencepohh"},"content":"The TaskManager is responsible for handling the creation, reading, updating and deletion [CRUD] of tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"clarencepohh"},"content":"### How it works:","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"clarencepohh"},"content":"1. When the program starts, a TaskManager instance is created.","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"clarencepohh"},"content":"2. Saved tasks are retrieved by interfacing with the Storage class to create required tasks and save them to this ","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"clarencepohh"},"content":"instance of TaskManager.  ","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"clarencepohh"},"content":"3. When the user requests an operation, the main function parses the input and hands it to TaskManager if it is related","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"clarencepohh"},"content":"4. The TaskManager will handle all requests relating to tasks, using methods detailed in the following sections.","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"clarencepohh"},"content":"   to tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"clarencepohh"},"content":"5. The TaskManager will also create INFO-level logs when making changes to tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"clarencepohh"},"content":"## Retrieving tasks from the TaskManager","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"clarencepohh"},"content":"### getTasksForDate Method","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"clarencepohh"},"content":"The `getTasksForDate` method is responsible for retrieving all tasks on a specified date.","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"clarencepohh"},"content":"This is a helper function that is called whenever tasks relating to a certain date is needed.","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"clarencepohh"},"content":"#### Method signature:","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"clarencepohh"},"content":"```java","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"clarencepohh"},"content":"public List\u003cTask\u003e getTasksForDate(LocalDate date)","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"clarencepohh"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"clarencepohh"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"clarencepohh"},"content":"- date: The date to retrieve tasks for.","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"clarencepohh"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"clarencepohh"},"content":"- Gets the LocalDate requested by the caller.","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"clarencepohh"},"content":"- Returns an ArrayList of Tasks for the specified date. It **is** possible that an empty ArrayList is returned, given","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"clarencepohh"},"content":"that there are no tasks on that specified date.","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":213,"author":{"gitId":"Aak242"},"content":"## Updating a Task","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"Aak242"},"content":"### Overview","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"Aak242"},"content":"Updating a task involves modifying its description or other attributes such as date or time. This guide outlines the process and considerations for updating tasks within the application.","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"Aak242"},"content":"### Update Manager Method","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"Aak242"},"content":"The `updateManager` method facilitates the updating of tasks. It prompts the user for an updated task description and handles tasks of different types (Todo, Event, Deadline) while ensuring the changes are correctly reflected in the application.","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"Aak242"},"content":"#### Method Signature","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"Aak242"},"content":"```java","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"Aak242"},"content":"public void updateManager(Scanner scanner, WeekView weekView, MonthView monthView, boolean inMonthView,","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"Aak242"},"content":"                          TaskManager taskManager, int day, int taskIndex, String newDescription)","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"Aak242"},"content":"        throws TaskManagerException, DateTimeParseException","lastModifiedDate":"2024-03-28"},{"lineNumber":229,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"Aak242"},"content":"### Parameters","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"Aak242"},"content":"- `scanner`: Scanner object for user input.","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"Aak242"},"content":"- `weekView`: Current week being viewed.","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"Aak242"},"content":"- `monthView`: Current month being viewed.","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"Aak242"},"content":"- `inMonthView`: Boolean indicating whether the month is being viewed.","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"Aak242"},"content":"- `taskManager`: TaskManager instance managing tasks.","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"Aak242"},"content":"- `day`: Day of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":239,"author":{"gitId":"Aak242"},"content":"- `taskIndex`: Index of the task to update.","lastModifiedDate":"2024-03-28"},{"lineNumber":240,"author":{"gitId":"Aak242"},"content":"- `newDescription`: Updated description of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":241,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":242,"author":{"gitId":"Aak242"},"content":"### Exceptions","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":244,"author":{"gitId":"Aak242"},"content":"- `TaskManagerException`: Thrown if not in the correct week/month view.","lastModifiedDate":"2024-03-28"},{"lineNumber":245,"author":{"gitId":"Aak242"},"content":"- `DateTimeParseException`: Thrown if there is an error parsing the date.","lastModifiedDate":"2024-03-28"},{"lineNumber":246,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":247,"author":{"gitId":"Aak242"},"content":"### Method Functionality","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":249,"author":{"gitId":"Aak242"},"content":"1. Converts the specified day to a `LocalDate`.","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"Aak242"},"content":"2. Verifies if the date is in the current week/month view.","lastModifiedDate":"2024-03-28"},{"lineNumber":251,"author":{"gitId":"Aak242"},"content":"3. Updates the task description based on its type.","lastModifiedDate":"2024-03-28"},{"lineNumber":252,"author":{"gitId":"Aak242"},"content":"4. Saves the updated tasks to the appropriate file.","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"Aak242"},"content":"5. Provides feedback to the user upon successful update.","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"Aak242"},"content":"### Update Task Method","lastModifiedDate":"2024-03-28"},{"lineNumber":256,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"Aak242"},"content":"The `updateTask` method is responsible for modifying the details of a task based on the user input.","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"Aak242"},"content":"### Method Signature","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"Aak242"},"content":"```java","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"Aak242"},"content":"public static void updateTask(LocalDate date, int taskIndex, String newTaskDescription, Scanner scanner)","lastModifiedDate":"2024-03-28"},{"lineNumber":263,"author":{"gitId":"Aak242"},"content":"        throws IndexOutOfBoundsException","lastModifiedDate":"2024-03-28"},{"lineNumber":264,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":265,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":266,"author":{"gitId":"Aak242"},"content":"### Parameters","lastModifiedDate":"2024-03-28"},{"lineNumber":267,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":268,"author":{"gitId":"Aak242"},"content":"- `date`: Date of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":269,"author":{"gitId":"Aak242"},"content":"- `taskIndex`: Index of the task to update.","lastModifiedDate":"2024-03-28"},{"lineNumber":270,"author":{"gitId":"Aak242"},"content":"- `newTaskDescription`: Updated description of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":271,"author":{"gitId":"Aak242"},"content":"- `scanner`: Scanner object for user input.","lastModifiedDate":"2024-03-28"},{"lineNumber":272,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":273,"author":{"gitId":"Aak242"},"content":"### Exceptions","lastModifiedDate":"2024-03-28"},{"lineNumber":274,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":275,"author":{"gitId":"Aak242"},"content":"- `IndexOutOfBoundsException`: Thrown if the task index is out of bounds.","lastModifiedDate":"2024-03-28"},{"lineNumber":276,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":277,"author":{"gitId":"Aak242"},"content":"### Method Functionality","lastModifiedDate":"2024-03-28"},{"lineNumber":278,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":279,"author":{"gitId":"Aak242"},"content":"1. Retrieves the tasks for the specified date.","lastModifiedDate":"2024-03-28"},{"lineNumber":280,"author":{"gitId":"Aak242"},"content":"2. Validates if the task index is within bounds.","lastModifiedDate":"2024-03-28"},{"lineNumber":281,"author":{"gitId":"Aak242"},"content":"3. Handles different task types (Todo, Event, Deadline).","lastModifiedDate":"2024-03-28"},{"lineNumber":282,"author":{"gitId":"Aak242"},"content":"4. Updates the task description accordingly.","lastModifiedDate":"2024-03-28"},{"lineNumber":283,"author":{"gitId":"Aak242"},"content":"5. Logs the changes if applicable.","lastModifiedDate":"2024-03-28"},{"lineNumber":284,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":285,"author":{"gitId":"Aak242"},"content":"## Adding a Task/Event/Deadline","lastModifiedDate":"2024-03-28"},{"lineNumber":286,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":287,"author":{"gitId":"Aak242"},"content":"### Overview","lastModifiedDate":"2024-03-28"},{"lineNumber":288,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":289,"author":{"gitId":"Aak242"},"content":"The Add Task/Event/Deadline feature enhances the TaskManager application by enabling users to create various types of tasks such as Todo, Event, and Deadline. This section elaborates on the implementation details of this feature, encompassing methods for task creation, user input handling, and task addition management.","lastModifiedDate":"2024-03-28"},{"lineNumber":290,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":291,"author":{"gitId":"Aak242"},"content":"### `addTask` Method","lastModifiedDate":"2024-03-28"},{"lineNumber":292,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":293,"author":{"gitId":"Aak242"},"content":"The `addTask` method orchestrates the creation and addition of a new task to the TaskManager. It accepts parameters including the task date, description, type, and relevant dates/times for events and deadlines. Depending on the task type, it constructs the corresponding task object (Todo, Event, or Deadline) and integrates it into the tasks map.","lastModifiedDate":"2024-03-28"},{"lineNumber":294,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":295,"author":{"gitId":"Aak242"},"content":"#### Method Signature","lastModifiedDate":"2024-03-28"},{"lineNumber":296,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":297,"author":{"gitId":"Aak242"},"content":"```java","lastModifiedDate":"2024-03-28"},{"lineNumber":298,"author":{"gitId":"Aak242"},"content":"public static void addTask(LocalDate date, String taskDescription, TaskType taskType, String[] dates,","lastModifiedDate":"2024-03-28"},{"lineNumber":299,"author":{"gitId":"Aak242"},"content":"                           String[] times) throws TaskManagerException","lastModifiedDate":"2024-03-28"},{"lineNumber":300,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":301,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":302,"author":{"gitId":"Aak242"},"content":"#### Parameters","lastModifiedDate":"2024-03-28"},{"lineNumber":303,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":304,"author":{"gitId":"Aak242"},"content":"- `date`: The date for the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":305,"author":{"gitId":"Aak242"},"content":"- `taskDescription`: The description of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":306,"author":{"gitId":"Aak242"},"content":"- `taskType`: The type of the task (Todo, Event, or Deadline).","lastModifiedDate":"2024-03-28"},{"lineNumber":307,"author":{"gitId":"Aak242"},"content":"- `dates`: An array containing relevant dates for events and deadlines.","lastModifiedDate":"2024-03-28"},{"lineNumber":308,"author":{"gitId":"Aak242"},"content":"- `times`: An array containing relevant times for events and deadlines.","lastModifiedDate":"2024-03-28"},{"lineNumber":309,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":310,"author":{"gitId":"Aak242"},"content":"### `addManager` Method","lastModifiedDate":"2024-03-28"},{"lineNumber":311,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":312,"author":{"gitId":"Aak242"},"content":"The `addManager` method facilitates the management of adding tasks from user input along with the specified date. It prompts users to input task details, validates the input, and delegates the task creation process to the `addTask` method.","lastModifiedDate":"2024-03-28"},{"lineNumber":313,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":314,"author":{"gitId":"Aak242"},"content":"#### Method Signature","lastModifiedDate":"2024-03-28"},{"lineNumber":315,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":316,"author":{"gitId":"Aak242"},"content":"```java","lastModifiedDate":"2024-03-28"},{"lineNumber":317,"author":{"gitId":"Aak242"},"content":"public void addManager(Scanner scanner, WeekView weekView, MonthView monthView, boolean inMonthView, String action,","lastModifiedDate":"2024-03-28"},{"lineNumber":318,"author":{"gitId":"Aak242"},"content":"                       String day, String taskTypeString, String taskDescription)","lastModifiedDate":"2024-03-28"},{"lineNumber":319,"author":{"gitId":"Aak242"},"content":"        throws TaskManagerException, DateTimeParseException","lastModifiedDate":"2024-03-28"},{"lineNumber":320,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":321,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":322,"author":{"gitId":"Aak242"},"content":"#### Parameters","lastModifiedDate":"2024-03-28"},{"lineNumber":323,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":324,"author":{"gitId":"Aak242"},"content":"- `scanner`: Scanner object for user input.","lastModifiedDate":"2024-03-28"},{"lineNumber":325,"author":{"gitId":"Aak242"},"content":"- `weekView`: WeekView object for date validation.","lastModifiedDate":"2024-03-28"},{"lineNumber":326,"author":{"gitId":"Aak242"},"content":"- `monthView`: MonthView object for date validation.","lastModifiedDate":"2024-03-28"},{"lineNumber":327,"author":{"gitId":"Aak242"},"content":"- `inMonthView`: Boolean indicating whether the view is in month view.","lastModifiedDate":"2024-03-28"},{"lineNumber":328,"author":{"gitId":"Aak242"},"content":"- `action`: Action to be performed.","lastModifiedDate":"2024-03-28"},{"lineNumber":329,"author":{"gitId":"Aak242"},"content":"- `day`: Day for the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":330,"author":{"gitId":"Aak242"},"content":"- `taskTypeString`: String representing the task type.","lastModifiedDate":"2024-03-28"},{"lineNumber":331,"author":{"gitId":"Aak242"},"content":"- `taskDescription`: Description of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":332,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":333,"author":{"gitId":"Aak242"},"content":"### Handling User Input","lastModifiedDate":"2024-03-28"},{"lineNumber":334,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":335,"author":{"gitId":"Aak242"},"content":"This segment prompts users to input essential details for task creation, encompassing descriptions, dates, and times for events and deadlines. It utilizes the `Scanner` class to capture and validate user input before initiating task creation.","lastModifiedDate":"2024-03-28"},{"lineNumber":336,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":337,"author":{"gitId":"Aak242"},"content":"### Task Type Switch Statement","lastModifiedDate":"2024-03-28"},{"lineNumber":338,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":339,"author":{"gitId":"Aak242"},"content":"Within the `addTask` method, a switch statement delineates the type of task being created based on the `taskType` parameter. Corresponding actions are executed to create and add the task to the tasks map based on the identified type.","lastModifiedDate":"2024-03-28"},{"lineNumber":340,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":341,"author":{"gitId":"Aak242"},"content":"### Error Handling","lastModifiedDate":"2024-03-28"},{"lineNumber":342,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":343,"author":{"gitId":"Aak242"},"content":"The implementation incorporates error handling mechanisms to effectively manage scenarios involving invalid inputs or unsupported task types. Exceptions such as `TaskManagerException` are employed to convey descriptive error messages, ensuring user guidance and application integrity.","lastModifiedDate":"2024-03-28"},{"lineNumber":344,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":345,"author":{"gitId":"Aak242"},"content":"### Saving Tasks to File","lastModifiedDate":"2024-03-28"},{"lineNumber":346,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":347,"author":{"gitId":"Aak242"},"content":"Upon task creation, the `addTask` method guarantees the preservation of the updated task list to a file (`tasks.txt`) by invoking the `saveTasksToFile` method from the `Storage` class. This serves to persist task data across application sessions.","lastModifiedDate":"2024-03-28"},{"lineNumber":348,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":349,"author":{"gitId":"Aak242"},"content":"### Exceptions","lastModifiedDate":"2024-03-28"},{"lineNumber":350,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":351,"author":{"gitId":"Aak242"},"content":"`IndexOutOfBoundsException`: Thrown if the task index is out of bounds.","lastModifiedDate":"2024-03-28"},{"lineNumber":352,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":353,"author":{"gitId":"Aak242"},"content":"### Method Functionality","lastModifiedDate":"2024-03-28"},{"lineNumber":354,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":355,"author":{"gitId":"Aak242"},"content":"1. Retrieves the tasks for the specified date.","lastModifiedDate":"2024-03-28"},{"lineNumber":356,"author":{"gitId":"Aak242"},"content":"2. Validates if the task index is within bounds.","lastModifiedDate":"2024-03-28"},{"lineNumber":357,"author":{"gitId":"Aak242"},"content":"3. Handles different task types (Todo, Event, Deadline).","lastModifiedDate":"2024-03-28"},{"lineNumber":358,"author":{"gitId":"Aak242"},"content":"4. Updates the task description accordingly.","lastModifiedDate":"2024-03-28"},{"lineNumber":359,"author":{"gitId":"Aak242"},"content":"5. Logs the changes if applicable.","lastModifiedDate":"2024-03-28"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":361,"author":{"gitId":"clarencepohh"},"content":"## Deleting a Task/Event/Deadline","lastModifiedDate":"2024-03-29"},{"lineNumber":362,"author":{"gitId":"clarencepohh"},"content":"### deleteTask Method","lastModifiedDate":"2024-03-29"},{"lineNumber":363,"author":{"gitId":"clarencepohh"},"content":"The `deleteTask` method is responsible for deleting a task specified by the user, on a specified date.","lastModifiedDate":"2024-03-29"},{"lineNumber":364,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":365,"author":{"gitId":"clarencepohh"},"content":"#### Method signature:","lastModifiedDate":"2024-03-29"},{"lineNumber":366,"author":{"gitId":"clarencepohh"},"content":"```java","lastModifiedDate":"2024-03-29"},{"lineNumber":367,"author":{"gitId":"clarencepohh"},"content":"public void deleteTask(LocalDate date, int taskIndex)","lastModifiedDate":"2024-03-29"},{"lineNumber":368,"author":{"gitId":"clarencepohh"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":369,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":370,"author":{"gitId":"clarencepohh"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":371,"author":{"gitId":"clarencepohh"},"content":"- date: The date of the task.","lastModifiedDate":"2024-03-29"},{"lineNumber":372,"author":{"gitId":"clarencepohh"},"content":"- taskIndex: The index of the task to delete.","lastModifiedDate":"2024-03-29"},{"lineNumber":373,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":374,"author":{"gitId":"clarencepohh"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":375,"author":{"gitId":"clarencepohh"},"content":"- Gets the LocalDate requested by the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":376,"author":{"gitId":"clarencepohh"},"content":"- Checks if there is are active tasks on the selected date, and checks if the date is within the period currently shown","lastModifiedDate":"2024-03-29"},{"lineNumber":377,"author":{"gitId":"clarencepohh"},"content":"  on the UI [week or month view].","lastModifiedDate":"2024-03-29"},{"lineNumber":378,"author":{"gitId":"clarencepohh"},"content":"- Deletes the task if the above two checks pass, else highlights to the user through a console-printed error message.","lastModifiedDate":"2024-03-29"},{"lineNumber":379,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":380,"author":{"gitId":"clarencepohh"},"content":"### deleteAllTasksOnDate Method","lastModifiedDate":"2024-03-29"},{"lineNumber":381,"author":{"gitId":"clarencepohh"},"content":"The `deleteAllTasksOnDate` method is responsible for deleting **ALL** tasks on a date specified by the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":382,"author":{"gitId":"clarencepohh"},"content":"\u003e Do note that this method is **NOT** used is normal operation of the application. It is currently only being used in ","lastModifiedDate":"2024-03-29"},{"lineNumber":383,"author":{"gitId":"clarencepohh"},"content":"\u003e testing, for easier delete operations for dummy tasks created on a date. ","lastModifiedDate":"2024-03-29"},{"lineNumber":384,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":385,"author":{"gitId":"clarencepohh"},"content":"#### Method signature:","lastModifiedDate":"2024-03-29"},{"lineNumber":386,"author":{"gitId":"clarencepohh"},"content":"```java","lastModifiedDate":"2024-03-29"},{"lineNumber":387,"author":{"gitId":"clarencepohh"},"content":"public static void deleteAllTasksOnDate (TaskManager taskManager, LocalDate specifiedDate)","lastModifiedDate":"2024-03-29"},{"lineNumber":388,"author":{"gitId":"clarencepohh"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":389,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":390,"author":{"gitId":"clarencepohh"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":391,"author":{"gitId":"clarencepohh"},"content":"- taskManager: The taskManager class in use.","lastModifiedDate":"2024-03-29"},{"lineNumber":392,"author":{"gitId":"clarencepohh"},"content":"- specifiedDate: The date on which all tasks are to be deleted.","lastModifiedDate":"2024-03-29"},{"lineNumber":393,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":394,"author":{"gitId":"clarencepohh"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":395,"author":{"gitId":"clarencepohh"},"content":"- Gets the LocalDate requested by the caller.","lastModifiedDate":"2024-03-29"},{"lineNumber":396,"author":{"gitId":"clarencepohh"},"content":"- Calls the `deleteTask` method on all tasks on the date.","lastModifiedDate":"2024-03-29"},{"lineNumber":397,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":398,"author":{"gitId":"clarencepohh"},"content":"## Interfacing with Storage class","lastModifiedDate":"2024-03-29"},{"lineNumber":399,"author":{"gitId":"clarencepohh"},"content":"### `addTasksFromFile` method","lastModifiedDate":"2024-03-29"},{"lineNumber":400,"author":{"gitId":"clarencepohh"},"content":"The `addTasksFromFile` method is responsible for parsing save data generated by the `Storage` class.","lastModifiedDate":"2024-03-29"},{"lineNumber":401,"author":{"gitId":"clarencepohh"},"content":"\u003e See more details on the `Storage` class below.","lastModifiedDate":"2024-03-29"},{"lineNumber":402,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":403,"author":{"gitId":"clarencepohh"},"content":"#### Method signature:","lastModifiedDate":"2024-03-29"},{"lineNumber":404,"author":{"gitId":"clarencepohh"},"content":"```java","lastModifiedDate":"2024-03-29"},{"lineNumber":405,"author":{"gitId":"clarencepohh"},"content":"public void addTasksFromFile(Map\u003cLocalDate, List\u003cTask\u003e\u003e tasksFromFile) throws TaskManagerException","lastModifiedDate":"2024-03-29"},{"lineNumber":406,"author":{"gitId":"clarencepohh"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":407,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":408,"author":{"gitId":"clarencepohh"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":409,"author":{"gitId":"clarencepohh"},"content":"- tasksFromFile: A map containing tasks read from a file.","lastModifiedDate":"2024-03-29"},{"lineNumber":410,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":411,"author":{"gitId":"clarencepohh"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":412,"author":{"gitId":"clarencepohh"},"content":"- Gets the map that contains all tasks from the save file, generated by `Storage.loadFilesFromFile`.","lastModifiedDate":"2024-03-29"},{"lineNumber":413,"author":{"gitId":"clarencepohh"},"content":"- Attempts to parse each individual task found in the list and add it to the currently-active instance of TaskManager.","lastModifiedDate":"2024-03-29"},{"lineNumber":414,"author":{"gitId":"clarencepohh"},"content":"- Logs any important messages to log file, if any.","lastModifiedDate":"2024-03-29"},{"lineNumber":415,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":416,"author":{"gitId":"clarencepohh"},"content":"## Storage component","lastModifiedDate":"2024-03-29"},{"lineNumber":417,"author":{"gitId":"kyhjonathan"},"content":"**API** : [Storage.java](https://github.com/AY2324S2-CS2113-W13-2/tp/blob/master/src/main/java/storage/Storage.java)","lastModifiedDate":"2024-03-27"},{"lineNumber":418,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":419,"author":{"gitId":"kyhjonathan"},"content":"The \u0027storage\u0027 component:","lastModifiedDate":"2024-03-27"},{"lineNumber":420,"author":{"gitId":"NicholasTanYY"},"content":"* Reads tasks from the formatted `./save/tasks.txt` file and appends to task hashmap.","lastModifiedDate":"2024-03-29"},{"lineNumber":421,"author":{"gitId":"NicholasTanYY"},"content":"* Identifies unique tasks stored in task hashmap, parses and writes to `./save/tasks.txt` file","lastModifiedDate":"2024-03-29"},{"lineNumber":422,"author":{"gitId":"NicholasTanYY"},"content":"* Handles exception if `./save/tasks.txt` is in corrupted format","lastModifiedDate":"2024-03-29"},{"lineNumber":423,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":424,"author":{"gitId":"NicholasTanYY"},"content":"The `saveTasksToFile` method writes the tasks in a HashMap to the file in the following format:","lastModifiedDate":"2024-03-29"},{"lineNumber":425,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":426,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":427,"author":{"gitId":"NicholasTanYY"},"content":"\u003cdate\u003e|\u003ctaskType\u003e|\u003ctaskDescription\u003e|\u003cadditionalData\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":428,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":429,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":430,"author":{"gitId":"NicholasTanYY"},"content":"For example:","lastModifiedDate":"2024-03-29"},{"lineNumber":431,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":432,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":433,"author":{"gitId":"NicholasTanYY"},"content":"2023-06-01|TODO|Buy groceries","lastModifiedDate":"2024-03-29"},{"lineNumber":434,"author":{"gitId":"NicholasTanYY"},"content":"2023-06-02|EVENT|Meeting|2023-06-02|2023-06-03|09:00|11:00","lastModifiedDate":"2024-03-29"},{"lineNumber":435,"author":{"gitId":"NicholasTanYY"},"content":"2023-06-05|DEADLINE|Submit report|2023-06-10|23:59","lastModifiedDate":"2024-03-29"},{"lineNumber":436,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":437,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":438,"author":{"gitId":"NicholasTanYY"},"content":"The `loadTasksFromFile` method reads the tasks from the file and populates the `TaskManager` with the loaded tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":440,"author":{"gitId":"clarencepohh"},"content":"## Exporting .ics File Component","lastModifiedDate":"2024-03-29"},{"lineNumber":441,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":442,"author":{"gitId":"kyhjonathan"},"content":"The \u0027ics\u0027 component:","lastModifiedDate":"2024-03-28"},{"lineNumber":443,"author":{"gitId":"kyhjonathan"},"content":"* Exports the tasks in the task hashmap to a .ics file that can be imported into calendar applications","lastModifiedDate":"2024-03-28"},{"lineNumber":444,"author":{"gitId":"kyhjonathan"},"content":"* Import tasks from external .ics file into the task hashmap","lastModifiedDate":"2024-03-28"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":447,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":448,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":450,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":452,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":454,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":456,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":458,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...             | So that I can ...                                           |","lastModifiedDate":"2020-05-24"},{"lineNumber":459,"author":{"gitId":"clarencepohh"},"content":"|---------|----------|---------------------------|-------------------------------------------------------------|","lastModifiedDate":"2024-03-29"},{"lineNumber":460,"author":{"gitId":"-"},"content":"| v1.0    | new user | see usage instructions    | refer to them when I forget how to use the application      |","lastModifiedDate":"2020-05-24"},{"lineNumber":461,"author":{"gitId":"-"},"content":"| v2.0    | user     | find a to-do item by name | locate a to-do without having to go through the entire list |","lastModifiedDate":"2020-05-24"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":463,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":465,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":467,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":469,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":471,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":473,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"NicholasTanYY":99,"Mahesh1772":91,"clarencepohh":89,"Aak242":147,"-":40,"kyhjonathan":7}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"# CLI-nton","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Mahesh1772":1,"-":7}},{"path":"src/main/java/data/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    protected String byDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"Aak242"},"content":"    protected String byTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"     * Deadlines are also considered as tasks.","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"Aak242"},"content":"     * @param byDate The date of the task\u0027s deadline as a string.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"Aak242"},"content":"    public Deadline(String name, String byDate, String byTime) {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"Aak242"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Aak242"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"     * Getter for by date of Deadline task.","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the by date.","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    public String getByDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"        return byDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Aak242"},"content":"     * Getter for by time of Deadline task.","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Aak242"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Aak242"},"content":"     * @return The String representation of the by time.","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Aak242"},"content":"    public String getByTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Aak242"},"content":"        return byTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"     * Override function of superclass Task.","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"     * @return D which represents a Deadline task.","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType () {","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"        return \"D\";","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for a Deadline task.","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the save format for this task.","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"Aak242"},"content":"        return getTaskType() + \"|\" + getName() + \"|\" + getByDate() + \"|\" + getByTime();","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":48,"Aak242":19}},{"path":"src/main/java/data/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    protected String startDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"    protected String endDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"Aak242"},"content":"    private final String startTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Aak242"},"content":"    private final String endTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     * Events are also considered as tasks.","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"     * @param start The starting time/date of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"     * @param end The ending time/date of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Aak242"},"content":"    public Event(String name, String start, String end, String startTime, String endTime) {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"        this.startDate \u003d start;","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"        this.endDate \u003d end;","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Aak242"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Aak242"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"     * Getter for start date of Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the start date.","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"        return startDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Aak242"},"content":"     * Getter for start time of Event task.","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Aak242"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Aak242"},"content":"     * @return The String representation of the start time.","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Aak242"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Aak242"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Aak242"},"content":"        return startTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Aak242"},"content":"     * Getter for end time of Event task.","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Aak242"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Aak242"},"content":"     * @return The String representation of the end time.","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Aak242"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Aak242"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Aak242"},"content":"        return endTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"     * Getter for end date of Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the end date.","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"        return endDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"     * Override function of superclass Task.","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"     * @return E which represents an Event task.","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"        return \"E\";","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for an Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the save format for this task.","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"Aak242"},"content":"        return getTaskType() + \"|\" + getName() + \"|\" + getStartDate() + \"|\" + getEndDate() + \"|\" + getStartTime() + \"|\"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"Aak242"},"content":"                + getEndTime();","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":65,"Aak242":30}},{"path":"src/main/java/data/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    protected String name;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"    public Task(String name) {","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"     * Returns the name of the task that invokes this function.","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"     * @return Returns the string of the task\u0027s name.","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    public String getName() {","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"        return name;","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"     * Sets the task\u0027s name to the given name.","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name to set the task\u0027s name to.","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"     * Checks if a task is complete and returns true if complete, false if incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"     * @return The boolean value that represents whether a task is completed:","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"        return isCompleted;","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"     * Sets the completeness status of a task.","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"     * @param completed Boolean value to set the task to.","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"    public void setCompleteness(boolean completed) {","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"        isCompleted \u003d completed;","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"     * Checks the completeness status of a task and returns to the","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"     * caller the status icon of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"     * \"X\" for complete, \" \" for incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"     * @return String representation of completeness status icon.","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"        return (isCompleted ? \"X\" : \" \");","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"     * @return ? which represents an unclassified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"        return \"?\";","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"     * Getter for start date for an Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the Event subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"     * Getter for end date for an Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the Event subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"Aak242"},"content":"     * Getter for start time of Event task.","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"Aak242"},"content":"     * It is a dummy function meant for the Event subclass to override.","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"Aak242"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"Aak242"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"Aak242"},"content":"        return \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"Aak242"},"content":"     * Getter for end time of Event task.","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"Aak242"},"content":"     * It is a dummy function meant for the Event subclass to override.","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"Aak242"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"Aak242"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"Aak242"},"content":"        return \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"clarencepohh"},"content":"     * Getter for by date for a Deadline task.","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the Deadline subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":126,"author":{"gitId":"clarencepohh"},"content":"    public String getByDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"Aak242"},"content":"     * Getter for by time for a Deadline task.","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"Aak242"},"content":"     * It is a dummy function meant for the Deadline subclass to override","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"Aak242"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"Aak242"},"content":"    public String getByTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"Aak242"},"content":"        return \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":141,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for a task.","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":143,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":145,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":146,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":147,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":148,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":149,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":119,"Aak242":30}},{"path":"src/main/java/data/TaskManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import time.MonthView;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateHasTasks;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateInCurrentWeek;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateInCurrentMonth;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.DEADLINE;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.EVENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"import static storage.Storage.saveTasksToFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Aak242"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"Aak242"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"Aak242"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Aak242"},"content":" * Manages tasks by providing functionalities to add, delete, and update tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Aak242"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"public class TaskManager {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    private static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"    private static final Map\u003cLocalDate, List\u003cTask\u003e\u003e tasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"     * Adds a task for a specific date.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"Aak242"},"content":"     * @param date The date for the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"     * @param taskType The TaskType of the task to be added.","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"     * @param dates A String array that contains the relevant dates for the task to be added.","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Aak242"},"content":"    public static void addTask(LocalDate date, String taskDescription, TaskType taskType, String[] dates,","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"Aak242"},"content":"                               String[] times)","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"        Task taskToAdd;","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"        switch (taskType) {","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"        case TODO:","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"            taskToAdd \u003d new Todo(taskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"        case EVENT:","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"            String startDate \u003d dates[0];","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"            String endDate \u003d dates[1];","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Aak242"},"content":"            String startTime \u003d times[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Aak242"},"content":"            String endTime \u003d times[1];","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Aak242"},"content":"            taskToAdd \u003d new Event(taskDescription, startDate, endDate, startTime, endTime);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"        case DEADLINE:","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"Aak242"},"content":"            String deadlineDate \u003d dates[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Aak242"},"content":"            String deadlineTime \u003d times[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Aak242"},"content":"            taskToAdd \u003d new Deadline(taskDescription, deadlineDate, deadlineTime);","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"        default:","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"            throw new TaskManagerException(\"Invalid task type given. T for Todo, E for event, D for deadline.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"        tasks.computeIfAbsent(date, k -\u003e new ArrayList\u003c\u003e()).add(taskToAdd);","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"Aak242"},"content":"     * Deletes a task for a specific date and task index.","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"Aak242"},"content":"     * @param date The date of the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Aak242"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"    public void deleteTask(LocalDate date, int taskIndex) {","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"        if (dayTasks !\u003d null \u0026\u0026 taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"            dayTasks.remove(taskIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"            if (dayTasks.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"                tasks.remove(date);","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(\"Task deleted.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(\"The task you are trying to delete does not exist.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"Aak242"},"content":"     * Updates a task for a specific date and task index.","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"Aak242"},"content":"     * @param date              The date of the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"Aak242"},"content":"     * @param taskIndex         The index of the task to update.","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"clarencepohh"},"content":"     * @param newTaskDescription The updated description of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":104,"author":{"gitId":"Aak242"},"content":"     * @throws IndexOutOfBoundsException If the task index is out of bounds.","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"Aak242"},"content":"    public static void updateTask(LocalDate date, int taskIndex, String newTaskDescription, Scanner scanner)","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"clarencepohh"},"content":"            throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"Aak242"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"clarencepohh"},"content":"            List\u003cTask\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":110,"author":{"gitId":"Aak242"},"content":"            boolean dayHasTasks \u003d dayTasks !\u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Aak242"},"content":"            boolean taskIndexExists \u003d taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c Objects.requireNonNull(dayTasks).size();","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Aak242"},"content":"            assert dayHasTasks;","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"Aak242"},"content":"            assert taskIndexExists;","lastModifiedDate":"2024-03-22"},{"lineNumber":114,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":115,"author":{"gitId":"Aak242"},"content":"            String oldDescription \u003d dayTasks.get(taskIndex).getName();","lastModifiedDate":"2024-03-22"},{"lineNumber":116,"author":{"gitId":"Aak242"},"content":"            String currentTaskType \u003d dayTasks.get(taskIndex).getTaskType();","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"Aak242"},"content":"            boolean startDateChanged \u003d false;","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":119,"author":{"gitId":"Aak242"},"content":"            Task task;","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"Aak242"},"content":"            switch (currentTaskType) {","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"Aak242"},"content":"            case \"T\":","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"Aak242"},"content":"                task \u003d new Todo(newTaskDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"Aak242"},"content":"                logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"Aak242"},"content":"                        oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"Aak242"},"content":"                break;","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Aak242"},"content":"            case \"E\":","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"Aak242"},"content":"                Event oldEvent \u003d (Event) dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"Aak242"},"content":"                System.out.println(\"Do you want to update the start and end dates and times? (yes/no)\");","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"Aak242"},"content":"                String eventResponse \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"Aak242"},"content":"                if (eventResponse.equals(\"yes\")) {","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"Aak242"},"content":"                    System.out.println(\"Enter the new start date, end date, start time and end time, \" +","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"Aak242"},"content":"                            \"separated by spaces:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"Aak242"},"content":"                    String[] newDatesAndTimes \u003d scanner.nextLine().trim().split(\" \");","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"Aak242"},"content":"                    String oldStartDate \u003d oldEvent.getStartDate();","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"Aak242"},"content":"                    task \u003d new Event(newTaskDescription, newDatesAndTimes[0], newDatesAndTimes[1], newDatesAndTimes[2],","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"Aak242"},"content":"                            newDatesAndTimes[3]);","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"Aak242"},"content":"                    DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"Aak242"},"content":"                    LocalDate newEventStartDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"Aak242"},"content":"                    try {","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"Aak242"},"content":"                        newEventStartDate \u003d LocalDate.parse(newDatesAndTimes[0], dateFormatter);","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"Aak242"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"Aak242"},"content":"                        throw new DateTimeParseException(\"Invalid date format. Please use the format dd/MM/yyyy.\",","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"Aak242"},"content":"                                newDatesAndTimes[0], 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"Aak242"},"content":"                    }","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"Aak242"},"content":"                    if (!newDatesAndTimes[0].equals(oldStartDate)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"Aak242"},"content":"                        startDateChanged \u003d true;","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"Aak242"},"content":"                        tasks.computeIfAbsent(newEventStartDate, k -\u003e new ArrayList\u003c\u003e()).add(task);","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"Aak242"},"content":"                        tasks.get(LocalDate.parse(oldStartDate, dateFormatter)).remove(taskIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"Aak242"},"content":"                    }","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"Aak242"},"content":"                    logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"Aak242"},"content":"                            oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"Aak242"},"content":"                    logger.log(Level.INFO, \"Updating task start date from \" +","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"Aak242"},"content":"                            oldEvent.getStartDate() + \" to: \" + newDatesAndTimes[0]);","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"Aak242"},"content":"                    logger.log(Level.INFO, \"Updating task end date from \" + oldEvent.getEndDate() + \" to: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"Aak242"},"content":"                            + newDatesAndTimes[1]);","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"Aak242"},"content":"                    logger.log(Level.INFO, \"Updating task start time from \" + oldEvent.getStartTime() + \" to: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"Aak242"},"content":"                            + newDatesAndTimes[2]);","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"Aak242"},"content":"                    logger.log(Level.INFO, \"Updating task end time from \" + oldEvent.getEndTime() + \" to: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"Aak242"},"content":"                            + newDatesAndTimes[3]);","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"Aak242"},"content":"                } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"Aak242"},"content":"                    task \u003d new Event(newTaskDescription, oldEvent.getStartDate(), oldEvent.getEndDate(),","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"Aak242"},"content":"                            oldEvent.getStartTime(), oldEvent.getEndTime());","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"Aak242"},"content":"                    logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"Aak242"},"content":"                            oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"Aak242"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"Aak242"},"content":"                break;","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"Aak242"},"content":"            case \"D\":","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"Aak242"},"content":"                Deadline oldDeadline \u003d (Deadline) dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"Aak242"},"content":"                System.out.println(\"Do you want to update the deadline date and time? (yes/no)\");","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"Aak242"},"content":"                String deadlineResponse \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"Aak242"},"content":"                if (deadlineResponse.equals(\"yes\")) {","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"Aak242"},"content":"                    System.out.println(\"Enter the new deadline date and time, separated by a space:\");","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"Aak242"},"content":"                    String[] newDateAndTime \u003d scanner.nextLine().trim().split(\" \");","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"Aak242"},"content":"                    task \u003d new Deadline(newTaskDescription, newDateAndTime[0], newDateAndTime[1]);","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":182,"author":{"gitId":"clarencepohh"},"content":"                    logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-03-23"},{"lineNumber":183,"author":{"gitId":"clarencepohh"},"content":"                            oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":184,"author":{"gitId":"Aak242"},"content":"                    logger.log(Level.INFO, \"Updating task deadline date from \" + oldDeadline.getByDate() + \" to: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"Aak242"},"content":"                            + newDateAndTime[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"Aak242"},"content":"                    logger.log(Level.INFO, \"Updating task deadline time from \" + oldDeadline.getByTime() + \" to: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"Aak242"},"content":"                            + newDateAndTime[1]);","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"Aak242"},"content":"                } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"Aak242"},"content":"                    task \u003d new Deadline(newTaskDescription, oldDeadline.getByDate(), oldDeadline.getByTime());","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"Aak242"},"content":"                    logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-03-25"},{"lineNumber":192,"author":{"gitId":"Aak242"},"content":"                            oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"Aak242"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"Aak242"},"content":"                break;","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"Aak242"},"content":"            default:","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"Aak242"},"content":"                throw new IllegalArgumentException(\"Invalid task type\");","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"Aak242"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":198,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":199,"author":{"gitId":"Aak242"},"content":"            if (!startDateChanged) {","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"Aak242"},"content":"                dayTasks.set(taskIndex, task);","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"Aak242"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"Aak242"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"Mahesh1772"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of bounds.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":205,"author":{"gitId":"Aak242"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":208,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"Aak242"},"content":"     * Retrieves tasks for a specific date.","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":214,"author":{"gitId":"Aak242"},"content":"     * @param date The date to retrieve tasks for.","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"Aak242"},"content":"     * @return A list of tasks for the given date.","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"clarencepohh"},"content":"    public List\u003cTask\u003e getTasksForDate(LocalDate date) {","lastModifiedDate":"2024-03-22"},{"lineNumber":218,"author":{"gitId":"clarencepohh"},"content":"        return tasks.getOrDefault(date, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-16"},{"lineNumber":219,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":220,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":221,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":222,"author":{"gitId":"Aak242"},"content":"     * Adds a task from user input along with the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":223,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"Aak242"},"content":"     * @param weekView WeekView object to validate the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"Aak242"},"content":"     * @param inMonthView A boolean indicating whether the view is in month view or not.","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"Aak242"},"content":"     * @throws TaskManagerException If there is an error in managing tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":227,"author":{"gitId":"clarencepohh"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-03-23"},{"lineNumber":228,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":229,"author":{"gitId":"Aak242"},"content":"    public void addManager(Scanner scanner, WeekView weekView, MonthView monthView,boolean inMonthView, String action,","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"Mahesh1772"},"content":"                           String day, String taskTypeString, String taskDescription)","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"kyhjonathan"},"content":"            throws TaskManagerException,DateTimeParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":232,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":233,"author":{"gitId":"Mahesh1772"},"content":"        // Convert the day to a LocalDate","lastModifiedDate":"2024-03-24"},{"lineNumber":234,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":235,"author":{"gitId":"Mahesh1772"},"content":"        // Convert the dayString to date range","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"Mahesh1772"},"content":"        String[] dates \u003d new String[2];","lastModifiedDate":"2024-03-25"},{"lineNumber":237,"author":{"gitId":"Mahesh1772"},"content":"        if (day.contains(\"-\")) {","lastModifiedDate":"2024-03-25"},{"lineNumber":238,"author":{"gitId":"Mahesh1772"},"content":"            dates \u003d day.split(\"-\");","lastModifiedDate":"2024-03-25"},{"lineNumber":239,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":240,"author":{"gitId":"Mahesh1772"},"content":"            dates[0] \u003d day;","lastModifiedDate":"2024-03-25"},{"lineNumber":241,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":242,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":243,"author":{"gitId":"Mahesh1772"},"content":"        // Convert dayString to int","lastModifiedDate":"2024-03-25"},{"lineNumber":244,"author":{"gitId":"Mahesh1772"},"content":"        int dayInt \u003d Integer.parseInt(day);","lastModifiedDate":"2024-03-25"},{"lineNumber":245,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":246,"author":{"gitId":"Mahesh1772"},"content":"        // Check if the date is in the current week/month view","lastModifiedDate":"2024-03-24"},{"lineNumber":247,"author":{"gitId":"Mahesh1772"},"content":"        if (inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":248,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d monthView.getStartOfMonth().plusDays(dayInt - 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":249,"author":{"gitId":"Mahesh1772"},"content":"            checkIfDateInCurrentMonth(date);","lastModifiedDate":"2024-03-17"},{"lineNumber":250,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":251,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":252,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d weekView.getStartOfWeek().plusDays(dayInt - 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":253,"author":{"gitId":"clarencepohh"},"content":"            checkIfDateInCurrentWeek(date, weekView);","lastModifiedDate":"2024-03-16"},{"lineNumber":254,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":255,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":256,"author":{"gitId":"Mahesh1772"},"content":"        // Parse the task type","lastModifiedDate":"2024-03-24"},{"lineNumber":257,"author":{"gitId":"Mahesh1772"},"content":"        TaskType taskType \u003d parseTaskType(taskTypeString.toUpperCase());","lastModifiedDate":"2024-03-24"},{"lineNumber":258,"author":{"gitId":"Aak242"},"content":"        String typeName \u003d taskType.equals(TODO) ? \"Todo\" : taskType.equals(DEADLINE) ? \"Deadline\" : \"Event\";","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":260,"author":{"gitId":"clarencepohh"},"content":"        // vvv Below methods should be recreated when console inputs are streamlined","lastModifiedDate":"2024-03-23"},{"lineNumber":261,"author":{"gitId":"Mahesh1772"},"content":"        if (taskType \u003d\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":262,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid task type. Please provide valid task type: \" +","lastModifiedDate":"2024-03-24"},{"lineNumber":263,"author":{"gitId":"Mahesh1772"},"content":"                    \"T for Todo, E for event, D for deadline.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":264,"author":{"gitId":"Aak242"},"content":"        } else if (taskType \u003d\u003d DEADLINE) {","lastModifiedDate":"2024-03-28"},{"lineNumber":265,"author":{"gitId":"Aak242"},"content":"            System.out.println(\"Enter the deadline date and time of this task, separated by a space:\");","lastModifiedDate":"2024-03-25"},{"lineNumber":266,"author":{"gitId":"Aak242"},"content":"            String[] deadlineDateAndTime \u003d scanner.nextLine().trim().split(\" \");","lastModifiedDate":"2024-03-25"},{"lineNumber":267,"author":{"gitId":"Aak242"},"content":"            String[] deadlineDate \u003d new String[]{deadlineDateAndTime[0]};","lastModifiedDate":"2024-03-25"},{"lineNumber":268,"author":{"gitId":"Aak242"},"content":"            String[] deadlineTime \u003d new String[]{deadlineDateAndTime[1]};","lastModifiedDate":"2024-03-25"},{"lineNumber":269,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":270,"author":{"gitId":"Aak242"},"content":"            addTask(date, taskDescription, taskType, deadlineDate, deadlineTime);","lastModifiedDate":"2024-03-25"},{"lineNumber":271,"author":{"gitId":"clarencepohh"},"content":"        } else if (taskType \u003d\u003d EVENT) {","lastModifiedDate":"2024-03-23"},{"lineNumber":272,"author":{"gitId":"Aak242"},"content":"            System.out.println(\"Enter the start date of this task, along with the start time separated by a space:\");","lastModifiedDate":"2024-03-25"},{"lineNumber":273,"author":{"gitId":"Aak242"},"content":"            String[] startDateAndTime \u003d scanner.nextLine().trim().split(\" \");","lastModifiedDate":"2024-03-25"},{"lineNumber":274,"author":{"gitId":"Aak242"},"content":"            String startDate \u003d startDateAndTime[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":275,"author":{"gitId":"Aak242"},"content":"            String startTime \u003d startDateAndTime[1];","lastModifiedDate":"2024-03-25"},{"lineNumber":276,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":277,"author":{"gitId":"Aak242"},"content":"            System.out.println(\"Enter the end date of this task, along with the end time separated by a space:\");","lastModifiedDate":"2024-03-25"},{"lineNumber":278,"author":{"gitId":"Aak242"},"content":"            String[] endDateAndTime \u003d scanner.nextLine().trim().split(\" \");","lastModifiedDate":"2024-03-25"},{"lineNumber":279,"author":{"gitId":"Aak242"},"content":"            String endDate \u003d endDateAndTime[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":280,"author":{"gitId":"Aak242"},"content":"            String endTime \u003d endDateAndTime[1];","lastModifiedDate":"2024-03-25"},{"lineNumber":281,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":282,"author":{"gitId":"clarencepohh"},"content":"            String [] startAndEndDates \u003d new String[]{startDate, endDate};","lastModifiedDate":"2024-03-23"},{"lineNumber":283,"author":{"gitId":"Aak242"},"content":"            String [] startAndEndTimes \u003d new String[]{startTime, endTime};","lastModifiedDate":"2024-03-25"},{"lineNumber":284,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":285,"author":{"gitId":"Aak242"},"content":"            addTask(date, taskDescription, taskType, startAndEndDates, startAndEndTimes);","lastModifiedDate":"2024-03-25"},{"lineNumber":286,"author":{"gitId":"clarencepohh"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":287,"author":{"gitId":"clarencepohh"},"content":"            String[] dummyDates \u003d {null}; // dummy String array to pass into function call","lastModifiedDate":"2024-03-23"},{"lineNumber":288,"author":{"gitId":"Aak242"},"content":"            String[] dummyTimes \u003d {null}; // dummy String array to pass into function call","lastModifiedDate":"2024-03-25"},{"lineNumber":289,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":290,"author":{"gitId":"Aak242"},"content":"            addTask(date, taskDescription, taskType, dummyDates, dummyTimes);","lastModifiedDate":"2024-03-25"},{"lineNumber":291,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":292,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":293,"author":{"gitId":"Mahesh1772"},"content":"        // Save tasks to file","lastModifiedDate":"2024-03-24"},{"lineNumber":294,"author":{"gitId":"Mahesh1772"},"content":"        saveTasksToFile(tasks, Storage.FILE_PATH); // Update tasks.txt file","lastModifiedDate":"2024-03-24"},{"lineNumber":295,"author":{"gitId":"Aak242"},"content":"        System.out.println(typeName + \" added.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":296,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":297,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":298,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":299,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":300,"author":{"gitId":"clarencepohh"},"content":"     * Method that parses the TaskType to be specified based on the user\u0027s input.","lastModifiedDate":"2024-03-23"},{"lineNumber":301,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":302,"author":{"gitId":"clarencepohh"},"content":"     * @param userInput The String containing the user\u0027s cleaned input.","lastModifiedDate":"2024-03-23"},{"lineNumber":303,"author":{"gitId":"clarencepohh"},"content":"     * @return TaskType of the user\u0027s choosing.","lastModifiedDate":"2024-03-23"},{"lineNumber":304,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":305,"author":{"gitId":"clarencepohh"},"content":"    public static TaskType parseTaskType(String userInput) {","lastModifiedDate":"2024-03-23"},{"lineNumber":306,"author":{"gitId":"clarencepohh"},"content":"        TaskType currentTaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":307,"author":{"gitId":"clarencepohh"},"content":"        switch (userInput) {","lastModifiedDate":"2024-03-23"},{"lineNumber":308,"author":{"gitId":"clarencepohh"},"content":"        case \"T\":","lastModifiedDate":"2024-03-23"},{"lineNumber":309,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":310,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":311,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":312,"author":{"gitId":"clarencepohh"},"content":"        case \"D\":","lastModifiedDate":"2024-03-23"},{"lineNumber":313,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d DEADLINE;","lastModifiedDate":"2024-03-23"},{"lineNumber":314,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":315,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":316,"author":{"gitId":"clarencepohh"},"content":"        case \"E\":","lastModifiedDate":"2024-03-23"},{"lineNumber":317,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d EVENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":318,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":319,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":320,"author":{"gitId":"clarencepohh"},"content":"        default:","lastModifiedDate":"2024-03-23"},{"lineNumber":321,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d null;","lastModifiedDate":"2024-03-23"},{"lineNumber":322,"author":{"gitId":"clarencepohh"},"content":"            // intentional fallthrough since addTask method checks for invalid taskType already","lastModifiedDate":"2024-03-23"},{"lineNumber":323,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":324,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":325,"author":{"gitId":"clarencepohh"},"content":"        return currentTaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":326,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":327,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":328,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":329,"author":{"gitId":"clarencepohh"},"content":"     * Prompts user for updated task description.","lastModifiedDate":"2024-03-23"},{"lineNumber":330,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":331,"author":{"gitId":"clarencepohh"},"content":"     * @param scanner User input.","lastModifiedDate":"2024-03-23"},{"lineNumber":332,"author":{"gitId":"clarencepohh"},"content":"     * @param weekView Current week being viewed.","lastModifiedDate":"2024-03-23"},{"lineNumber":333,"author":{"gitId":"clarencepohh"},"content":"     * @param inMonthView Whether month is being viewed.","lastModifiedDate":"2024-03-23"},{"lineNumber":334,"author":{"gitId":"clarencepohh"},"content":"     * @param taskManager The taskManager class being used.","lastModifiedDate":"2024-03-23"},{"lineNumber":335,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException If not in correct week/month view.","lastModifiedDate":"2024-03-23"},{"lineNumber":336,"author":{"gitId":"clarencepohh"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-03-23"},{"lineNumber":337,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":338,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":339,"author":{"gitId":"Mahesh1772"},"content":"    public void updateManager(Scanner scanner, WeekView weekView, MonthView monthView, boolean inMonthView,","lastModifiedDate":"2024-03-25"},{"lineNumber":340,"author":{"gitId":"Mahesh1772"},"content":"                              TaskManager taskManager,int day, int taskIndex, String newDescription)","lastModifiedDate":"2024-03-25"},{"lineNumber":341,"author":{"gitId":"kyhjonathan"},"content":"            throws TaskManagerException, DateTimeParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":342,"author":{"gitId":"Mahesh1772"},"content":"        // Convert the day to a LocalDate","lastModifiedDate":"2024-03-24"},{"lineNumber":343,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":344,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":345,"author":{"gitId":"Mahesh1772"},"content":"        // Check if the date is in the current week/month view","lastModifiedDate":"2024-03-24"},{"lineNumber":346,"author":{"gitId":"kyhjonathan"},"content":"        if (inMonthView) {","lastModifiedDate":"2024-03-19"},{"lineNumber":347,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d monthView.getStartOfMonth().plusDays(day - 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":348,"author":{"gitId":"kyhjonathan"},"content":"            checkIfDateInCurrentMonth(date);","lastModifiedDate":"2024-03-19"},{"lineNumber":349,"author":{"gitId":"kyhjonathan"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":350,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d weekView.getStartOfWeek().plusDays(day - 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":351,"author":{"gitId":"kyhjonathan"},"content":"            checkIfDateInCurrentWeek(date, weekView);","lastModifiedDate":"2024-03-19"},{"lineNumber":352,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":353,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":354,"author":{"gitId":"Aak242"},"content":"        String currentTaskType \u003d taskManager.getTasksForDate(date).get(taskIndex - 1).getTaskType();","lastModifiedDate":"2024-03-28"},{"lineNumber":355,"author":{"gitId":"Aak242"},"content":"        String typeName \u003d currentTaskType.equals(\"T\") ? \"Todo\" : currentTaskType.equals(\"D\") ? \"Deadline\" : \"Event\";","lastModifiedDate":"2024-03-25"},{"lineNumber":356,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":357,"author":{"gitId":"Aak242"},"content":"        updateTask(date, taskIndex - 1, newDescription, scanner);","lastModifiedDate":"2024-03-28"},{"lineNumber":358,"author":{"gitId":"kyhjonathan"},"content":"        saveTasksToFile(tasks,Storage.FILE_PATH); //Update tasks.txt file","lastModifiedDate":"2024-03-19"},{"lineNumber":359,"author":{"gitId":"Aak242"},"content":"        System.out.println(typeName + \" updated.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":360,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":361,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":362,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":363,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":364,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":365,"author":{"gitId":"Aak242"},"content":"     * Adds tasks from a file to the TaskManager.","lastModifiedDate":"2024-03-19"},{"lineNumber":366,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":367,"author":{"gitId":"Aak242"},"content":"     * @param tasksFromFile A map containing tasks read from a file.","lastModifiedDate":"2024-03-19"},{"lineNumber":368,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException If there is an error adding tasks.","lastModifiedDate":"2024-03-23"},{"lineNumber":369,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":370,"author":{"gitId":"clarencepohh"},"content":"    public void addTasksFromFile(Map\u003cLocalDate, List\u003cTask\u003e\u003e tasksFromFile) throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":371,"author":{"gitId":"clarencepohh"},"content":"        for (Map.Entry\u003cLocalDate, List\u003cTask\u003e\u003e entry : tasksFromFile.entrySet()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":372,"author":{"gitId":"kyhjonathan"},"content":"            LocalDate date \u003d entry.getKey();","lastModifiedDate":"2024-03-18"},{"lineNumber":373,"author":{"gitId":"clarencepohh"},"content":"            List\u003cTask\u003e taskList \u003d entry.getValue();","lastModifiedDate":"2024-03-22"},{"lineNumber":374,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":375,"author":{"gitId":"clarencepohh"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-03-22"},{"lineNumber":376,"author":{"gitId":"clarencepohh"},"content":"                String taskDescription \u003d task.getName();","lastModifiedDate":"2024-03-22"},{"lineNumber":377,"author":{"gitId":"clarencepohh"},"content":"                TaskType taskType \u003d parseTaskType(task.getTaskType());","lastModifiedDate":"2024-03-23"},{"lineNumber":378,"author":{"gitId":"clarencepohh"},"content":"                String[] dates \u003d new String[]{null, null};","lastModifiedDate":"2024-03-23"},{"lineNumber":379,"author":{"gitId":"Aak242"},"content":"                String[] times \u003d new String[]{null, null};","lastModifiedDate":"2024-03-25"},{"lineNumber":380,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":381,"author":{"gitId":"clarencepohh"},"content":"                switch (taskType) {","lastModifiedDate":"2024-03-23"},{"lineNumber":382,"author":{"gitId":"clarencepohh"},"content":"                case TODO:","lastModifiedDate":"2024-03-23"},{"lineNumber":383,"author":{"gitId":"clarencepohh"},"content":"                    dates[0] \u003d taskDescription;","lastModifiedDate":"2024-03-23"},{"lineNumber":384,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-03-23"},{"lineNumber":385,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":386,"author":{"gitId":"clarencepohh"},"content":"                case EVENT:","lastModifiedDate":"2024-03-23"},{"lineNumber":387,"author":{"gitId":"clarencepohh"},"content":"                    String startDate \u003d task.getStartDate();","lastModifiedDate":"2024-03-23"},{"lineNumber":388,"author":{"gitId":"clarencepohh"},"content":"                    String endDate \u003d task.getEndDate();","lastModifiedDate":"2024-03-23"},{"lineNumber":389,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":390,"author":{"gitId":"Aak242"},"content":"                    String startTime \u003d task.getStartTime();","lastModifiedDate":"2024-03-25"},{"lineNumber":391,"author":{"gitId":"Aak242"},"content":"                    String endTime \u003d task.getEndTime();","lastModifiedDate":"2024-03-25"},{"lineNumber":392,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":393,"author":{"gitId":"clarencepohh"},"content":"                    dates[0] \u003d startDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":394,"author":{"gitId":"clarencepohh"},"content":"                    dates[1] \u003d endDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":395,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":396,"author":{"gitId":"Aak242"},"content":"                    times[0] \u003d startTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":397,"author":{"gitId":"Aak242"},"content":"                    times[1] \u003d endTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":398,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-03-23"},{"lineNumber":399,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":400,"author":{"gitId":"clarencepohh"},"content":"                case DEADLINE:","lastModifiedDate":"2024-03-23"},{"lineNumber":401,"author":{"gitId":"Aak242"},"content":"                    String deadlineDate \u003d task.getByDate();","lastModifiedDate":"2024-03-25"},{"lineNumber":402,"author":{"gitId":"Aak242"},"content":"                    String deadlineTime \u003d task.getByTime();","lastModifiedDate":"2024-03-25"},{"lineNumber":403,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":404,"author":{"gitId":"Aak242"},"content":"                    dates[0] \u003d deadlineDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":405,"author":{"gitId":"Aak242"},"content":"                    times[0] \u003d deadlineTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":406,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-03-23"},{"lineNumber":407,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":408,"author":{"gitId":"clarencepohh"},"content":"                default:","lastModifiedDate":"2024-03-23"},{"lineNumber":409,"author":{"gitId":"clarencepohh"},"content":"                    logger.log(Level.INFO, \"Task to add was invalid. Task in question: \" + taskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":410,"author":{"gitId":"clarencepohh"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":411,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":412,"author":{"gitId":"Aak242"},"content":"                addTask(date, taskDescription, taskType, dates, times);","lastModifiedDate":"2024-03-25"},{"lineNumber":413,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":414,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":415,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":416,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":417,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":418,"author":{"gitId":"clarencepohh"},"content":"     * Lists task of the input date.","lastModifiedDate":"2024-03-23"},{"lineNumber":419,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":420,"author":{"gitId":"clarencepohh"},"content":"     * @param taskManager Hashmap of tasks.","lastModifiedDate":"2024-03-23"},{"lineNumber":421,"author":{"gitId":"clarencepohh"},"content":"     * @param date Date that\u0027s prompted by user.","lastModifiedDate":"2024-03-23"},{"lineNumber":422,"author":{"gitId":"clarencepohh"},"content":"     * @param message Message to be prompted to the user.","lastModifiedDate":"2024-03-23"},{"lineNumber":423,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException If not in correct week/month view.","lastModifiedDate":"2024-03-23"},{"lineNumber":424,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":425,"author":{"gitId":"clarencepohh"},"content":"    private static void listTasksAtDate(TaskManager taskManager, LocalDate date, String message)","lastModifiedDate":"2024-03-18"},{"lineNumber":426,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-03-18"},{"lineNumber":427,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":428,"author":{"gitId":"clarencepohh"},"content":"        checkIfDateHasTasks(dayTasks);","lastModifiedDate":"2024-03-16"},{"lineNumber":429,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":430,"author":{"gitId":"Aak242"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-17"},{"lineNumber":431,"author":{"gitId":"clarencepohh"},"content":"        for (int i \u003d 0; i \u003c dayTasks.size(); i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":432,"author":{"gitId":"clarencepohh"},"content":"            System.out.println((i + 1) + \". \" + dayTasks.get(i).getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":433,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":434,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":435,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":436,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":437,"author":{"gitId":"clarencepohh"},"content":"     * Prompts user for task description and deletes task from hashmap and tasks.txt file.","lastModifiedDate":"2024-03-23"},{"lineNumber":438,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":439,"author":{"gitId":"clarencepohh"},"content":"     * @param weekView Current week being viewed.","lastModifiedDate":"2024-03-23"},{"lineNumber":440,"author":{"gitId":"clarencepohh"},"content":"     * @param inMonthView Whether month is being viewed.","lastModifiedDate":"2024-03-23"},{"lineNumber":441,"author":{"gitId":"clarencepohh"},"content":"     * @param taskManager The taskManager class being used.","lastModifiedDate":"2024-03-23"},{"lineNumber":442,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException If not in correct week/month view","lastModifiedDate":"2024-03-23"},{"lineNumber":443,"author":{"gitId":"clarencepohh"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-03-23"},{"lineNumber":444,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":445,"author":{"gitId":"Mahesh1772"},"content":"    public static void deleteManager(WeekView weekView,MonthView monthView, boolean inMonthView,","lastModifiedDate":"2024-03-25"},{"lineNumber":446,"author":{"gitId":"Aak242"},"content":"                                     TaskManager taskManager,String day, int taskIndex) throws TaskManagerException,","lastModifiedDate":"2024-03-28"},{"lineNumber":447,"author":{"gitId":"Aak242"},"content":"            DateTimeParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":448,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":449,"author":{"gitId":"Mahesh1772"},"content":"        // Convert the day to a LocalDate","lastModifiedDate":"2024-03-24"},{"lineNumber":450,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-25"},{"lineNumber":451,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":452,"author":{"gitId":"Mahesh1772"},"content":"        int dayInt \u003d Integer.parseInt(day);","lastModifiedDate":"2024-03-25"},{"lineNumber":453,"author":{"gitId":"Mahesh1772"},"content":"        // Check if the date is in the current week/month view","lastModifiedDate":"2024-03-24"},{"lineNumber":454,"author":{"gitId":"kyhjonathan"},"content":"        if (inMonthView) {","lastModifiedDate":"2024-03-19"},{"lineNumber":455,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d monthView.getStartOfMonth().plusDays(dayInt - 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":456,"author":{"gitId":"kyhjonathan"},"content":"            checkIfDateInCurrentMonth(date);","lastModifiedDate":"2024-03-19"},{"lineNumber":457,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":458,"author":{"gitId":"kyhjonathan"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":459,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d weekView.getStartOfWeek().plusDays(dayInt - 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":460,"author":{"gitId":"Aak242"},"content":"            checkIfDateInCurrentWeek(date, weekView);","lastModifiedDate":"2024-03-17"},{"lineNumber":461,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":462,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":463,"author":{"gitId":"Mahesh1772"},"content":"        // Delete the task based on the parsed inputs","lastModifiedDate":"2024-03-24"},{"lineNumber":464,"author":{"gitId":"Mahesh1772"},"content":"        taskManager.deleteTask(date, taskIndex - 1); // Subtract 1 to convert to zero-based index","lastModifiedDate":"2024-03-24"},{"lineNumber":465,"author":{"gitId":"Mahesh1772"},"content":"        //System.out.println(\"Task deleted.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":466,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":467,"author":{"gitId":"Mahesh1772"},"content":"        // Save tasks to file","lastModifiedDate":"2024-03-24"},{"lineNumber":468,"author":{"gitId":"kyhjonathan"},"content":"        saveTasksToFile(tasks, Storage.FILE_PATH); // Update tasks.txt file","lastModifiedDate":"2024-03-19"},{"lineNumber":469,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":470,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":471,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":472,"author":{"gitId":"clarencepohh"},"content":"     * Function to delete all tasks on a specified date.","lastModifiedDate":"2024-03-22"},{"lineNumber":473,"author":{"gitId":"clarencepohh"},"content":"     * Currently only used to complement JUnit testing.","lastModifiedDate":"2024-03-22"},{"lineNumber":474,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":475,"author":{"gitId":"clarencepohh"},"content":"     * @param taskManager The taskManager class in use.","lastModifiedDate":"2024-03-22"},{"lineNumber":476,"author":{"gitId":"clarencepohh"},"content":"     * @param specifiedDate The date on which all tasks are to be deleted.","lastModifiedDate":"2024-03-22"},{"lineNumber":477,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":478,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":479,"author":{"gitId":"clarencepohh"},"content":"    public static void deleteAllTasksOnDate (TaskManager taskManager, LocalDate specifiedDate) {","lastModifiedDate":"2024-03-22"},{"lineNumber":480,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d tasks.get(specifiedDate);","lastModifiedDate":"2024-03-22"},{"lineNumber":481,"author":{"gitId":"clarencepohh"},"content":"        int numOfTasks \u003d dayTasks.size();","lastModifiedDate":"2024-03-22"},{"lineNumber":482,"author":{"gitId":"clarencepohh"},"content":"        for (int i \u003d numOfTasks; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-03-22"},{"lineNumber":483,"author":{"gitId":"clarencepohh"},"content":"            taskManager.deleteTask(specifiedDate, i - 1);","lastModifiedDate":"2024-03-22"},{"lineNumber":484,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":485,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":486,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":487,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":488,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"clarencepohh":192,"Mahesh1772":55,"Aak242":200,"kyhjonathan":41}},{"path":"src/main/java/data/TaskManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"public class TaskManagerException extends Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"    public static final String NOT_CURRENT_WEEK_MESSAGE \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"            \"The date must be within the current week. Please try again.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    public static final String NOT_CURRENT_MONTH_MESSAGE \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"            \"The date must be within the current month. Please try again.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for TaskManagerException class","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"     * Uses constructor from Exception superclass","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"     * @param errorMessage The error message to be printed to the console","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    public TaskManagerException(String errorMessage) {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"        super(errorMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"     * Method that checks if the date is in the current week shown by the calendar.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"     * @param date The date to be checked.","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     * @param weekView The current week view shown by the calendar.","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException if date is not in the current week.","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"    public static void checkIfDateInCurrentWeek(LocalDate date, WeekView weekView) throws TaskManagerException {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfWeek \u003d weekView.getStartOfWeek();","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate endOfWeek \u003d startOfWeek.plusDays(6);","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"        if (date.isBefore(startOfWeek) || date.isAfter(endOfWeek)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(NOT_CURRENT_WEEK_MESSAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"     * Method that checks if the date is in the current month shown by the calendar.","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"     * @param date The date to be checked.","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException if date is not in the current month.","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"    public static void checkIfDateInCurrentMonth(LocalDate date) throws TaskManagerException {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"        int currentMonth \u003d currentDate.getMonthValue();","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"        int currentYear \u003d currentDate.getYear();","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"        int providedMonth \u003d date.getMonthValue();","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"        int providedYear \u003d date.getYear();","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"        if (currentMonth !\u003d providedMonth || currentYear !\u003d providedYear) {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(NOT_CURRENT_MONTH_MESSAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"     * Method that checks if a specified date has existing tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"kyhjonathan"},"content":"     * @param dayTasks The List containing the list of tasks for the specified date.","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException if the specified date has no tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"    public static void checkIfDateHasTasks(List\u003cTask\u003e dayTasks) throws TaskManagerException {","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"        if (dayTasks.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"No tasks to delete on this date.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"clarencepohh":35,"Mahesh1772":38,"kyhjonathan":1}},{"path":"src/main/java/data/TaskType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public enum TaskType {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    TODO,","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"    EVENT,","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"    DEADLINE","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":7}},{"path":"src/main/java/data/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.DateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.component.VEvent;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     * Increments the class-level element totalNumTasks by 1.","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"     * Todos are also considered as tasks.","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"     * Override function of superclass Task.","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"     * @return T which represents a Todo task.","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType () {","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"        return \"T\";","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for a Todo task.","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the save format for this task.","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"        return getTaskType() + \"|\" + getName();","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"    public VEvent todoToVEvent(Todo todo) {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"        java.util.Calendar startDate \u003d new GregorianCalendar();","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.MONTH, java.util.Calendar.APRIL);","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.DAY_OF_MONTH, 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.YEAR, 2023);","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.HOUR_OF_DAY, 9);","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.MINUTE, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.SECOND, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"kyhjonathan"},"content":"        // End Date is on: April 1, 2023, 13:00","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"kyhjonathan"},"content":"        java.util.Calendar endDate \u003d new GregorianCalendar();","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.MONTH, java.util.Calendar.APRIL);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.DAY_OF_MONTH, 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.YEAR, 2023);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.HOUR_OF_DAY, 13);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.MINUTE, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.SECOND, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"kyhjonathan"},"content":"        // Create the event","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"kyhjonathan"},"content":"        DateTime start \u003d new DateTime(startDate.getTime());","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"kyhjonathan"},"content":"        DateTime end \u003d new DateTime(endDate.getTime());","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"kyhjonathan"},"content":"        VEvent meeting \u003d new VEvent(start, end, \"Team Meeting\");","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"kyhjonathan"},"content":"        return meeting;","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":39,"kyhjonathan":31}},{"path":"src/main/java/icshandler/IcsHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package icshandler;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.data.CalendarOutputter;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.Calendar;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.DateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.component.VEvent;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.property.ProdId;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.property.Uid;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.util.RandomUidGenerator;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.util.UidGenerator;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.validate.ValidationException;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.property.Version;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.property.CalScale;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"public class IcsHandler {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"    private static final String filePath \u003d \"./src/main/java/icshandler/icstest.ics\";","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"    public static void generateICS() throws IOException, ValidationException {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"        // Start Date is on: April 1, 2023, 9:00 am","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"        java.util.Calendar startDate \u003d new GregorianCalendar();","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.MONTH, java.util.Calendar.APRIL);","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.DAY_OF_MONTH, 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.YEAR, 2023);","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.HOUR_OF_DAY, 9);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.MINUTE, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"        startDate.set(java.util.Calendar.SECOND, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"        // End Date is on: April 1, 2023, 13:00","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"        java.util.Calendar endDate \u003d new GregorianCalendar();","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.MONTH, java.util.Calendar.APRIL);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.DAY_OF_MONTH, 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.YEAR, 2023);","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.HOUR_OF_DAY, 13);","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.MINUTE, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"        endDate.set(java.util.Calendar.SECOND, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"        // Create the event","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"kyhjonathan"},"content":"        DateTime start \u003d new DateTime(startDate.getTime());","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"        DateTime end \u003d new DateTime(endDate.getTime());","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"        VEvent meeting \u003d new VEvent(start, end, \"Team Meeting\");","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"kyhjonathan"},"content":"        // Generate a UID for the event","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"kyhjonathan"},"content":"        UidGenerator ug \u003d new RandomUidGenerator();","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"kyhjonathan"},"content":"        Uid uid \u003d ug.generateUid();","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"kyhjonathan"},"content":"        meeting.getProperties().add(uid);","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"kyhjonathan"},"content":"        // Add the event and print","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"kyhjonathan"},"content":"        Calendar calendar \u003d new Calendar();","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"kyhjonathan"},"content":"        calendar.getProperties().add(new ProdId(\"CLINTON CALENDAR\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"kyhjonathan"},"content":"        calendar.getProperties().add(Version.VERSION_2_0);","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"kyhjonathan"},"content":"        calendar.getProperties().add(CalScale.GREGORIAN);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"kyhjonathan"},"content":"        calendar.getComponents().add(meeting);","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"kyhjonathan"},"content":"        // Save to an ICS file","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"kyhjonathan"},"content":"        try (FileOutputStream fout \u003d new FileOutputStream(filePath)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"kyhjonathan"},"content":"            CalendarOutputter outputter \u003d new CalendarOutputter();","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"kyhjonathan"},"content":"            outputter.output(calendar, fout);","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"kyhjonathan":65}},{"path":"src/main/java/log/FileLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package log;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"public class FileLogger {","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"    private static final Path LOG_FILE_PATH \u003d Path.of(\"./logs.log\");","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"    public static void setupLogger() {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"            Logger fileLogger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE_PATH.toString(), true);","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"            fileLogger.setUseParentHandlers(false);","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"            fileLogger.addHandler(fileHandler);","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"NicholasTanYY":23}},{"path":"src/main/java/seedu/duke/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.data.ParserException;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"import time.DateUtils;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import time.MonthView;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManagerException;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"import log.FileLogger;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"import static storage.Storage.createNewFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.deleteManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.printHelp;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"public class Main {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"    private static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"    public static void main(String[] args) throws IOException, TaskManagerException, ParserException {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"        FileLogger.setupLogger();","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"        LocalDate startOfWeek \u003d DateUtils.getStartOfWeek(today);","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"        WeekView weekView \u003d new WeekView(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfMonth \u003d today.withDayOfMonth(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"        MonthView monthView \u003d new MonthView(startOfMonth, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"        boolean printWeek \u003d true; // Flag to control printing of the week view","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"        boolean inMonthView \u003d false; // Flag to indicate if we are in month view mode","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"        createNewFile(Storage.FILE_PATH); //Creates directory and tasks.txt file if it does not exist","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"        Map\u003cLocalDate, List\u003cTask\u003e\u003e tasksFromFile \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"                Storage.loadTasksFromFile(Storage.FILE_PATH); //Reads tasks from txt file","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.addTasksFromFile(tasksFromFile); //Loads tasks from txt file","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"        // AvatarUi.printAvatar();            //uncomment when fixed display","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"        // AvatarUi.printWelcomeMessage();    //uncomment when fixed display","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"kyhjonathan"},"content":"        //IcsHandler.generateICS(); //uncomment when developed","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"        while (true) {","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"            if (printWeek) {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"                if (!inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"                    weekView.printView(taskManager);","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"                } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"                    monthView.printView(taskManager);","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"            printWeek \u003d true; // Reset flag for the next iteration","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.println(\"Enter \u0027next\u0027 for next week, \u0027prev\u0027 for previous week, \" +","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"NicholasTanYY"},"content":"                    \"\u0027add\u0027 to add a task, \" +","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"NicholasTanYY"},"content":"                    \"\u0027update\u0027 to edit a task, \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"NicholasTanYY"},"content":"                    \"\u0027delete\u0027 to delete a task, \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"NicholasTanYY"},"content":"                    \"\u0027month\u0027 to display the month view, \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"                    \"or \u0027quit\u0027 to quit:\");","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(\"Enter help to learn commands\");","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"            String input \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"            String command \u003d input.split(\",\")[0];","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"            switch (command) {","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"            case \"next\":","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"                if (inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"                    monthView.next();","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"                } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"                    weekView.next();","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"            case \"prev\":","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"                if (inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"                    monthView.previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"                } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"                    weekView.previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"Aak242"},"content":"            case \"update\":","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"NicholasTanYY"},"content":"                try {","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Mahesh1772"},"content":"                    String[] parts \u003d input.split(\",\\\\s*\");","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"                    if (parts.length \u003c 4) {","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"                        throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"                                \"update, \u003cday\u003e, \u003ctaskIndex\u003e, \u003cnewDescription\u003e\");","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"                    }","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"                    int day \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"                    int taskIndex \u003d Integer.parseInt(parts[2].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"                    String newDescription \u003d parts[3].trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"                    taskManager.updateManager(scanner, weekView, monthView, inMonthView, taskManager, day,","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"                            taskIndex, newDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"                } catch (TaskManagerException | DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"NicholasTanYY"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"NicholasTanYY"},"content":"                }","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"            case \"add\":","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"                try {","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"                    String[] parts \u003d input.split(\",\\\\s*\");","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"                    if (parts.length \u003c 4) {","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"                        throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"                                \"add, \u003cday\u003e, \u003ctaskType\u003e, \u003ctaskDescription\u003e\");","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"                    }","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"                    String action \u003d parts[0];","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"                    //int day \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"                    String day \u003d parts[1].trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"Mahesh1772"},"content":"                    String taskTypeString \u003d parts[2].trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"Mahesh1772"},"content":"                    String taskDescription \u003d parts[3].trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"Aak242"},"content":"                    taskManager.addManager(scanner, weekView,monthView, inMonthView, action, day,","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"Mahesh1772"},"content":"                            taskTypeString, taskDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"Mahesh1772"},"content":"                } catch (TaskManagerException | DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"Mahesh1772"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"clarencepohh"},"content":"            case \"delete\":","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"Mahesh1772"},"content":"                try {","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"Mahesh1772"},"content":"                    String[] parts \u003d input.split(\",\\\\s*\");","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"Mahesh1772"},"content":"                    if (parts.length !\u003d 3) {","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"Mahesh1772"},"content":"                        throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"Mahesh1772"},"content":"                                \"delete, \u003cday\u003e, \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"Mahesh1772"},"content":"                    }","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"Mahesh1772"},"content":"                    String day \u003d parts[1].trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Mahesh1772"},"content":"                    int taskIndex \u003d Integer.parseInt(parts[2].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"Mahesh1772"},"content":"                    deleteManager(weekView, monthView, inMonthView, taskManager, day, taskIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"Mahesh1772"},"content":"                } catch (TaskManagerException | DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"Mahesh1772"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"Mahesh1772"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"Mahesh1772"},"content":"            case \"month\":","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"Mahesh1772"},"content":"                monthView.printView(taskManager);","lastModifiedDate":"2024-03-22"},{"lineNumber":134,"author":{"gitId":"Mahesh1772"},"content":"                inMonthView \u003d !inMonthView; // Toggle month view mode","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"Mahesh1772"},"content":"                printWeek \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"Mahesh1772"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"Mahesh1772"},"content":"            case \"week\":","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"Mahesh1772"},"content":"                inMonthView \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"Mahesh1772"},"content":"            case \"help\":","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"Mahesh1772"},"content":"                printHelp();","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"clarencepohh"},"content":"            case \"quit\":","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"clarencepohh"},"content":"                System.out.println(\"Exiting Calendar...\");","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"clarencepohh"},"content":"                System.exit(0);","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"clarencepohh"},"content":"            default:","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"clarencepohh"},"content":"                System.out.println(\"Invalid input. Please try again.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"clarencepohh":48,"Mahesh1772":77,"NicholasTanYY":16,"Aak242":2,"kyhjonathan":9}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManagerException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import data.TaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.addTask;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.parseTaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.DEADLINE;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.EVENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"public class Storage {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"    public static final Path FILE_PATH \u003d Path.of(\"./save/tasks.txt\");","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Storage\");","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"     * Creates directory and tasks.txt if it does not exist","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"     * @param path File Path of tests.txt file","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"     * @throws IOException If an I/O exception occurs during file handling","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"    public static void createNewFile(Path path) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"        if (!Files.isDirectory(path.getParent())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"            //  System.out.println(\"Directory not found, creating new one\");","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.INFO, \"new directory created\");","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"kyhjonathan"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.INFO, \"new tests.txt file created\");","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"     * Reads tasks in hashmap and writes it in formatted form to tests.txt.","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"     * @param tasks Hashmap of tasks.","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"     * @param path File Path of tests.txt file.","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"    public static void saveTasksToFile(Map\u003cLocalDate, List\u003cTask\u003e\u003e tasks, Path path) {","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"kyhjonathan"},"content":"        try (FileWriter writer \u003d new FileWriter(path.toFile())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"            for (Map.Entry\u003cLocalDate, List\u003cTask\u003e\u003e entry : tasks.entrySet()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"kyhjonathan"},"content":"                assert entry !\u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"kyhjonathan"},"content":"                LocalDate date \u003d entry.getKey();","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"kyhjonathan"},"content":"                assert date !\u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"                List\u003cTask\u003e taskList \u003d entry.getValue();","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"kyhjonathan"},"content":"                assert taskList !\u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"                for (Task task : taskList) {","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"                    String taskSaveFormat \u003d task.getSaveFormat();","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"                    writer.write(date + \"|\" + taskSaveFormat + System.lineSeparator());","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"                    String taskDescription \u003d task.getName();","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"                    logger.log(Level.INFO, \"task added: \" + taskDescription);","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"kyhjonathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"I/O exception occurred during file handling\");","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"     * Loads tasks from test.txt to hashmap.","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"     * @param path File Path of tests.txt file.","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"     * @return tasks hashmap of tasks read from test.txt.","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"    public static Map\u003cLocalDate, List\u003cTask\u003e\u003e loadTasksFromFile(Path path) {","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"        Map\u003cLocalDate, List\u003cTask\u003e\u003e tasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-22"},{"lineNumber":82,"author":{"gitId":"kyhjonathan"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(path.toFile()))) {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"kyhjonathan"},"content":"            String line;","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"kyhjonathan"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"kyhjonathan"},"content":"                if (!checkFileFormat(line)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"kyhjonathan"},"content":"                    throw new StorageFileException();","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"kyhjonathan"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"kyhjonathan"},"content":"                LocalDate date \u003d LocalDate.parse(parts[0]);","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"                TaskType taskType \u003d parseTaskType(parts[1]);","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"                String taskDescription \u003d parts[2];","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"                String[] dates \u003d {null, null};","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"Aak242"},"content":"                String[] times \u003d {null, null};","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"                if (taskType \u003d\u003d DEADLINE) {","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"                    dates[0] \u003d parts[3];","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"Aak242"},"content":"                    times[0] \u003d parts[4];","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"                } else if (taskType \u003d\u003d EVENT) {","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"                    dates[0] \u003d parts[3];","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"                    dates[1] \u003d parts[4];","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"Aak242"},"content":"                    times[0] \u003d parts[5];","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"Aak242"},"content":"                    times[1] \u003d parts[6];","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"clarencepohh"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"Aak242"},"content":"                addTask(date, taskDescription, taskType, dates, times);","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"kyhjonathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"I/O exception occurred during file handling\");","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.WARNING, \"I/O exception occurred\");","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"kyhjonathan"},"content":"        } catch (StorageFileException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"tasks.txt is in wrong format.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.WARNING, \"Wrong tasks.txt format\");","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"clarencepohh"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"clarencepohh"},"content":"            logger.log(Level.WARNING, \"Invalid task type for task.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"kyhjonathan"},"content":"        logger.log(Level.INFO, \"tasks returned\");","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"kyhjonathan"},"content":"        return tasks;","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"kyhjonathan"},"content":"    public static boolean checkFileFormat(String line) {","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"kyhjonathan"},"content":"        String regex \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\|.+\";","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"kyhjonathan"},"content":"        return line.matches(regex);","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"clarencepohh":38,"Aak242":5,"kyhjonathan":80}},{"path":"src/main/java/storage/StorageFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class StorageFileException extends Exception{","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"kyhjonathan":4}},{"path":"src/main/java/time/DateUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package time;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"public class DateUtils {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"    public static LocalDate getStartOfWeek(LocalDate date) {","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"        return date.minusDays(date.getDayOfWeek().getValue() % 7);","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"clarencepohh":1,"kyhjonathan":7}},{"path":"src/main/java/time/MonthView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package time;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import java.time.YearMonth;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"import java.util.List;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.printSeparator;","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.printWeekHeader;","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"public class MonthView extends View {","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    private static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    public MonthView(LocalDate startOfMonth, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"        super(startOfMonth, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"    public void printView(TaskManager taskManager) {","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"        logger.log(Level.INFO, \"Printing calendar in month view\");","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"        assert startOfView !\u003d null : \"Start of Month missing!\";","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"        boolean isMonthView \u003d true;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"        YearMonth yearMonth \u003d YearMonth.from(startOfView);","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate firstOfMonth \u003d startOfView.withDayOfMonth(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate current \u003d firstOfMonth.with(TemporalAdjusters.previousOrSame(java.time.DayOfWeek.SUNDAY));","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"\\nMonth View: \" + yearMonth.getMonth() + \" \" + yearMonth.getYear());","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"        printWeekHeader(startOfView, dateFormatter, isMonthView);","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"        while (current.isBefore(firstOfMonth.plusMonths(1))) {","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"            printWeek(current, taskManager);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"            current \u003d current.plusWeeks(1);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"    private void printWeek(LocalDate current, TaskManager taskManager) {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"            if (current.getMonth().equals(YearMonth.from(startOfView).getMonth())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"                printDay(current);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"            } else {","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"                System.out.print(\"|            \");","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"            current \u003d current.plusDays(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"|\");","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"        printSeparator();","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"        int maxTasks \u003d getMaxTasksForWeek(current.minusDays(7), taskManager);","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"        printTasksForWeek(current.minusDays(7), maxTasks, taskManager);","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"        if (maxTasks \u003e 0) {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"            printSeparator();","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"    private void printDay(LocalDate current) {","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"        DateTimeFormatter dayFormatter \u003d DateTimeFormatter.ofPattern(\"d\");","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"        System.out.printf(\"| %-10s \", dayFormatter.format(current));","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"    private int getMaxTasksForWeek(LocalDate weekStart, TaskManager taskManager) {","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"        int maxTasks \u003d 0;","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"            LocalDate date \u003d weekStart.plusDays(i);","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"            maxTasks \u003d Math.max(maxTasks, taskManager.getTasksForDate(date).size());","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"        return maxTasks;","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"    private void printTasksForWeek(LocalDate weekStart, int maxTasks, TaskManager taskManager) {","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Mahesh1772"},"content":"        for (int taskIndex \u003d 0; taskIndex \u003c maxTasks; taskIndex++) {","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"            for (int dayIndex \u003d 0; dayIndex \u003c 7; dayIndex++) {","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"                LocalDate date \u003d weekStart.plusDays(dayIndex);","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"                List\u003cTask\u003e dayTasks \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"                printTaskForDay(dayTasks, taskIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(\"|\");","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"    private void printTaskForDay(List\u003cTask\u003e dayTasks, int taskIndex) {","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"        if (taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"            Task task \u003d dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"            System.out.printf(\"| %-10.10s \", task.getName());","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"            System.out.print(\"|            \");","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"    public void next() {","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.plusMonths(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"    public void previous() {","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.minusMonths(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getStartOfMonth() {","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"        return startOfView.withDayOfMonth(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"Mahesh1772":109}},{"path":"src/main/java/time/View.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package time;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"public abstract class View {","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"    protected LocalDate startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"    protected final DateTimeFormatter dateFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"    public View(LocalDate startOfView, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"        this.startOfView \u003d startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"        this.dateFormatter \u003d dateFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"    public abstract void printView(TaskManager taskManager);","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    public abstract void next();","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    public abstract void previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getStartOfView() {","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"        return startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"Mahesh1772":25}},{"path":"src/main/java/time/WeekView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"package time;","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import static ui.UiRenderer.printWeekBody;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.printWeekHeader;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"public class WeekView extends View {","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"    public WeekView(LocalDate startOfWeek, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"        super(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    public void printView(TaskManager taskManager) {","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"        assert startOfView !\u003d null : \"Start of Weekday missing!\";","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate endOfWeek \u003d startOfView.plusDays(6);","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"\\nWeek View: \" + dateFormatter.format(startOfView) +","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"                \" - \" + dateFormatter.format(endOfWeek));","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"        printWeekHeader(startOfView, dateFormatter, false);","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"        printWeekBody(startOfView, dateFormatter, taskManager);","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"    public void next() {","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.plusWeeks(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"    public void previous() {","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.minusWeeks(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getStartOfWeek() {","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"        return startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getDateForDay(int dayOfWeek) {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"        // Assuming dayOfWeek is 1 for Monday, 2 for Tuesday, ..., 7 for Sunday","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"        // Adjust the calculation if your week starts on a different day","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"        return startOfView.plusDays(dayOfWeek - 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Mahesh1772":41,"clarencepohh":5,"Aak242":1,"kyhjonathan":1}},{"path":"src/main/java/ui/AvatarUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"public class AvatarUi {","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String AVATAR \u003d ","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"            \"▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓████▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"            \"▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓█████▓▓▓▓▓▓▓▓███▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓███████▓▓▓▓▓▓▓▓▓██████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░░░░░░▒██████▓▓▓▒▒▒▓▓▓▓████▓▓▓███▒░░░░░░░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"            \"▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓████▓▓▓▓▓▓██▓███████▓▓▓▓██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"            \"▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓█████████████████▓▓▓▓▓█▓▓███▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░▓█████▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓███▒░░░░░░░░░░░░░░░░░░▒▒░░▒▒▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░▓████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓████▓░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓████▒░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░████▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓███░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░▓███▓▓▓▓████▒▒▒▓████▓▓▓▓██▓▒░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░▓██▓▒▓█▓▓▓▓▒▓▒▒▓▒▓▓▓▓▓▒▓██▓▒░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░▓▓█▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓██▓▒░░░░░░░░░░░░░░░░░░░▒░░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░▓▓█▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓█▓▒░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓▓▒▒▒▒▒▒▓▒▒▓▒▒▒▒▒▓▓▓▓▒░░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓▓▒▒▒▒▒▓▓▓▓▒▒▒▒▒▓▓▓░░░░░░░░░░░░░░░░░░░░░░░▒░░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓▓▓▒▒▒▒▓▒▒▓▒▒▒▒▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░▒░░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓▓▒▒▒▓▓▓▓▓▓▒▒▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░▒░░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░██▓▓▒▒▒▒▒▒▒▒▒▒▓▓█▓░░░░░░░░░░░░░░░░░░░░░░░░▒░░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░▒█▓▓█▓▓▒▒▒▒▒▒▓▓█▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░▓▓▓▓▓▓▓█▓▓▓▓▓██▓▒▒▓▒▓▒░░░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░░░░▒░░░░░░░░░░░░░░░▒██▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▓██▒░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░░░▒▒▓▒▒▒▒▒░░░░░░░░▒▓████▒▒▒░░░▒▓▓▓▓▒▒▒░░░▒▒▒████▓▒░░░░░░░░░░░░░░░░░▒▒░░▒▒▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░▒▒░░▒▒▓▓▓▓▓▒░░░░░░▒▓▓███████▒▒░░░░░░▒▓▓▒░░░░░▒▒▒███████▓▓▒░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"            \"▒▒▒▒░░░▒▓▓▓▓▒▒░▒▓▓██████████▓█▒▒░░░░▒██████░░░░░▒▒█▓██████████▓▓▓▒▒▒▒▒▒▒▒▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"            \"▓▓▓▓▒▒▒▒▓▓████████████████▓▓▓█▒▒░░░▒▒██████▒▒░░░▒▒█▓▓▓███████████████▓▓▓▓▓▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"            \"▓▓▓▓▒▒▓██████████▓▓▓▓▓██▓▓▓▓▓█░░░░▒░░▒████░░░▒░░░▒█▓▓▓▓▓██▓▓▓▓▓▓███████████▓▓▓▒▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"            \"▓▓▓▓█████████▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓█▒░░░░░░░████░░░░░░░▓█▓▓▓▓▓▓▓▓▓▓█▓▓▓▓▓▓████████▓▓▓▓\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"            \"███▓███▓█▓▓▓▓▓▓▓▓▓▓█▓▓█▓▓▓▓▓▓█▓░░░░░░▓████▒░░░░░░██▓▓▓▓▓██▓▓█▓▓▓▓▓▓▓▓▓▓▓████▒▒▒▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"            \"▒▒▒▒███▓█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██░░░░░░█████▓░░░░░▒██▓▓▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓▓█▓███▓▓▓▓\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"            \"▓▓▓▓████▓█▓▓▓▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓██▓░░░░░██████░░░░░▓██▓▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓▓▓██████▓██\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"            \"████████▓██▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓██▓▒░░░▒██████▒░░░▒▓██▓▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓██▓█████▓▓▓\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"            \"▓▓▓████████████▓▓▓▓▓▓██▓▓▓▓▓▓██▓▓░░░▓██████▒░░░▓▓██▓▓▓▓▓▓███▓▓▓▓▓▓▓███████████▓▓\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"            \"░░░█████████████████▓██████████▓▓▓░░▓██████▓░░▓▓▓███████████████████████████████\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"            \"▒▒▓█████████████████████████████▓▓▒░▓███████░▒█▓▓█████████████████████████████▓▓\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"            \"█▓█████████████████████████████████▒▓███████░▓▓▓████████████▓▓▓▓▓█████████████▒▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"            \"█▒██████████████████████████████████████████▓████████████▓▓▓▓█████████████████▓▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"            \"█▒████████████████████████████████████████████████████████████████████████████▓▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"            \"▓▓█████████████████████████████████████████████████████████████████████████████▒\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"            \"▓▓█████████████████████████████████████████████████████████████████████████████▒\\n\";","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello there, I am CLI-nton, your CLI-based \" + ","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"            \"personal assistant in event management!\";","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printAvatar() {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(AVATAR);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"NicholasTanYY":57}},{"path":"src/main/java/ui/UiRenderer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"public class UiRenderer {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"    private static Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"    private static final String[] WEEK_DAYS \u003d {\"Sunday\", \"Monday\", \"Tuesday\",","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"        \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"};","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"    private static final int SPACE_COUNT \u003d 10;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String SINGLE_HORIZONTAL_DIVIDER \u003d \"+\" + \"-\".repeat(SPACE_COUNT);","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String END_HORIZONTAL_DIVIDER \u003d \"+\";","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String VERTICAL_DIVIDER \u003d \"|\";","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String ENTRY_FORMAT \u003d VERTICAL_DIVIDER + \"%-\" + SPACE_COUNT + \"s\";","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \"%-\" + SPACE_COUNT + \".\" + SPACE_COUNT + \"s\";","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String EMPTY_TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" \".repeat(SPACE_COUNT);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    private static final int numberOfDaysInWeek \u003d 7;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"    private static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"    private static final String ANSI_CYAN \u003d \"\\u001B[36m\"; // Cyan","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"    public static void printWeekHeader(LocalDate startOfView, DateTimeFormatter dateFormatter, boolean isMonthView) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"        printHeaderRow();","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        if (!isMonthView) {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"            printDateRow(dateFormatter ,startOfView);","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printHorizontalDivider() {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.print(SINGLE_HORIZONTAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(END_HORIZONTAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printHeaderRow() {","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"        for (String day : WEEK_DAYS) {","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.printf(ENTRY_FORMAT, day);","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printWeekBody(LocalDate startOfWeek, DateTimeFormatter dateFormatter, TaskManager taskManager) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"NicholasTanYY"},"content":"        int maxTasks \u003d getMaxTasks(startOfWeek, taskManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"NicholasTanYY"},"content":"        assert maxTasks \u003e\u003d 0 : \"maxTasks should be non-negative\";","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"NicholasTanYY"},"content":"        printWeeksTasks(startOfWeek, maxTasks, taskManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printDateRow(DateTimeFormatter dateFormatter, LocalDate date) {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"NicholasTanYY"},"content":"        logger.log(Level.INFO, \"Printing dates for week starting from \" + date);","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"NicholasTanYY"},"content":"        for (int i \u003d 0; i \u003c numberOfDaysInWeek; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"            String formattedDate \u003d dateFormatter.format(date);","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"            System.out.printf(ENTRY_FORMAT, ANSI_CYAN + \"\\033[2m\\033[22m\" + dateFormatter.format(date) + ANSI_RESET);","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"NicholasTanYY"},"content":"            date \u003d date.plusDays(1);","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printWeeksTasks(LocalDate startOfWeek, int maxTasks, TaskManager taskManager) {","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"NicholasTanYY"},"content":"        for (int taskIndex \u003d 0; taskIndex \u003c maxTasks; taskIndex++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"NicholasTanYY"},"content":"            for (int dayIndex \u003d 0; dayIndex \u003c numberOfDaysInWeek; dayIndex++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"NicholasTanYY"},"content":"                LocalDate currentDate \u003d startOfWeek.plusDays(dayIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"                List\u003cTask\u003e dayTasks \u003d taskManager.getTasksForDate(currentDate);","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"NicholasTanYY"},"content":"                printTaskForDay(dayTasks, taskIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"    public static void printTaskForDay(List\u003cTask\u003e dayTasks, int taskIndex) {","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"NicholasTanYY"},"content":"        if (taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"            Task task \u003d dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"            System.out.printf(TASK_DISPLAY_FORMAT, task.getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"NicholasTanYY"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.print(EMPTY_TASK_DISPLAY_FORMAT);","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"NicholasTanYY"},"content":"    public static int getMaxTasks(LocalDate startOfWeek, TaskManager taskManager) {","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"NicholasTanYY"},"content":"        int maxTasks \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"NicholasTanYY"},"content":"        for (int i \u003d 0; i \u003c numberOfDaysInWeek; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"NicholasTanYY"},"content":"            LocalDate currentDate \u003d startOfWeek.plusDays(i);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"NicholasTanYY"},"content":"            int tasksSize \u003d taskManager.getTasksForDate(currentDate).size();","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"NicholasTanYY"},"content":"            if (tasksSize \u003e maxTasks) {","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"NicholasTanYY"},"content":"                maxTasks \u003d tasksSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"NicholasTanYY"},"content":"        return maxTasks;","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"    public static void printSeparator() {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"            System.out.print(\"+------------\");","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"+\");","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"Mahesh1772"},"content":"    public static void printHelp() {","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"Mahesh1772"},"content":"        String horizontalLine \u003d \"+-------------------------------------------------------------------------------+\";","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"Mahesh1772"},"content":"        String emptyLine \u003d \"|                                                                               |\";","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"|                               Available Commands                              |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(emptyLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027next\u0027: Move to the next week or month view.                                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027prev\u0027: Move to the previous week or month view.                            |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027update, \u003cday\u003e, \u003ctaskIndex\u003e, \u003cnewDescription\u003e\u0027: Update a task description.  |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027add, \u003cday\u003e, \u003ctaskType\u003e, \u003ctaskDescription\u003e\u0027: Add a new task.                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027delete, \u003cday\u003e, \u003ctaskIndex\u003e\u0027: Delete a task.                                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027month\u0027: Switch to month view.                                              |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027week\u0027: Switch to week view.                                                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027quit\u0027: Exit the calendar application.                                      |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(emptyLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"NicholasTanYY":86,"clarencepohh":7,"Mahesh1772":40,"Aak242":1}},{"path":"src/test/java/data/TaskManagerExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateInCurrentMonth;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"public class TaskManagerExceptionTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateInCurrentMonth_pastDateGiven_exceptionThrown () {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"            checkIfDateInCurrentMonth(LocalDate.parse(\"1111-11-11\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"        }, \"TaskManagerException was expected\");","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"        Assertions.assertEquals(\"The date must be within the current month. \" + \"Please try again.\",","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateInCurrentMonth_futureDateGiven_exceptionThrown () {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"            checkIfDateInCurrentMonth(LocalDate.parse(\"2222-11-11\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"        }, \"TaskManagerException was expected\");","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"        Assertions.assertEquals(\"The date must be within the current month. \" + \"Please try again.\",","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"clarencepohh":31}},{"path":"src/test/java/data/TaskManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Aak242"},"content":"package data;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Aak242"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Aak242"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Aak242"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Aak242"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Aak242"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Aak242"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Aak242"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Aak242"},"content":"import static data.TaskManager.addTask;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Aak242"},"content":"import static data.TaskManager.updateTask;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.deleteAllTasksOnDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"Aak242"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Aak242"},"content":"class TaskManagerTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Aak242"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Aak242"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Aak242"},"content":"    void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Aak242"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"    @AfterEach","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"    void resetTaskManager() {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"        deleteAllTasksOnDate(taskManager, date);","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"    void addTodo_validInput_addsTask() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Todo\";","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"        Task testTask \u003d new Task(taskDescription);","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Aak242"},"content":"        String[] dummyTestTimes \u003d new String[]{null};","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Aak242"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates,dummyTestTimes);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"        Task addedTask \u003d taskManager.getTasksForDate(date).get(0);","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTask.getName(), addedTask.getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"    void updateTodo_validInput_updatesTask() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"        String initialTaskDescription \u003d \"Initial todo\";","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"        String updatedTaskDescription \u003d \"Updated todo\";","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"Aak242"},"content":"        String[] dummyTestTimes \u003d new String[]{null};","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Aak242"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Aak242"},"content":"        addTask(date, initialTaskDescription, testTaskType, dummyTestDates, dummyTestTimes);","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"Aak242"},"content":"        updateTask(date, 0, updatedTaskDescription, scanner);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(updatedTaskDescription, taskManager.getTasksForDate(date).get(0).getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"    void getTasksForDate_validDate_returnsTasks() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test todo task\";","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"Aak242"},"content":"        String[] dummyTestTimes \u003d new String[]{null};","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Aak242"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates,dummyTestTimes);","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e tasksForDate \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"        Task createdTask \u003d tasksForDate.get(0);","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(createdTask, tasksForDate.get(0));","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"    void addTodoFromFile_validInput_addsTasks() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"        Map\u003cLocalDate, List\u003cTask\u003e\u003e tasksFromFile \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test todo task\";","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"        Task testTodoTask \u003d new Todo(taskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"        tasksFromFile.put(date, List.of(testTodoTask));","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"Aak242"},"content":"        taskManager.addTasksFromFile(tasksFromFile);","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTodoTask.getName() ,taskManager.getTasksForDate(date).get(0).getName());","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"NicholasTanYY":5,"clarencepohh":29,"Aak242":73}},{"path":"src/test/java/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"class StorageTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"    private static final Path TEST_FILE_PATH \u003d Path.of(\"save\", \"test_tasks.txt\");","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"        // Delete the test file before each test","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"        Files.deleteIfExists(TEST_FILE_PATH);","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"    void tearDown() throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"        // Delete the test file after each test","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"        Files.deleteIfExists(TEST_FILE_PATH);","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"kyhjonathan":21}},{"path":"src/test/java/ui/UiRendererTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"import static ui.UiRenderer.printTaskForDay;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"public class UiRendererTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"    public static List\u003cTask\u003e tasks \u003d List.of(new Task(\"task1\"), new Task(\"task2\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"            new Task(\"task3\"), new Task(\"task4\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"    public static List\u003cTask\u003e emptyTaskList \u003d List.of();","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"    private static final int SPACE_COUNT \u003d 10;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String VERTICAL_DIVIDER \u003d \"|\";","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \"%-\" + SPACE_COUNT + \".\" + SPACE_COUNT + \"s\";","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String EMPTY_TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" \".repeat(SPACE_COUNT);","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"    @AfterEach","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"    void printTaskForDay_noTasks_printsNoTasks() {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"        printTaskForDay(emptyTaskList, 0);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(outContent.toString(), EMPTY_TASK_DISPLAY_FORMAT);","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"    void printTaskForDay_hasTask_printsTaskWithFormat() {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"        printTaskForDay(tasks, 0);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(outContent.toString(), String.format(TASK_DISPLAY_FORMAT, tasks.get(0).getName()));","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"NicholasTanYY":43,"clarencepohh":7}},{"path":"src/test/java/ui/WeekViewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import time.MonthView;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"public class WeekViewTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"    private WeekView weekView;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    private MonthView monthView;","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    private TaskManager taskManagerMock;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfWeek \u003d LocalDate.of(2024, 3, 10); // March 10, 2024","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"        weekView \u003d new WeekView(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfMonth \u003d LocalDate.of(2024, 3, 10); // March 10, 2024","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"        monthView \u003d new MonthView(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"        taskManagerMock \u003d new TaskManager(); // You can create a mock TaskManager as needed","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"    public void testNextWeek() {","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d weekView.getStartOfWeek();","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        weekView.next();","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.plusWeeks(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, weekView.getStartOfWeek());","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"    public void testPreviousWeek() {","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d weekView.getStartOfWeek();","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"        weekView.previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.minusWeeks(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, weekView.getStartOfWeek());","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"    public void testNextMonth() {","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d monthView.getStartOfMonth();","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"        monthView.next();","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.plusMonths(1).withDayOfMonth(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, monthView.getStartOfMonth());","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"    public void testPreviousMonth() {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d monthView.getStartOfMonth();","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"        monthView.previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.minusMonths(1).withDayOfMonth(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, monthView.getStartOfMonth());","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Mahesh1772":65}}]
