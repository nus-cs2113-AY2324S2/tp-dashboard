[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"    implementation group: \u0027org.mnode.ical4j\u0027, name: \u0027ical4j\u0027, version: \u00273.2.17\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"    implementation \u0027org.slf4j:slf4j-api:1.7.30\u0027","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"    implementation \u0027ch.qos.logback:logback-classic:1.2.3\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"    mainClass.set(\"seedu.duke.Main\")","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"    archiveFileName \u003d \u0027clinton.jar\u0027","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clarencepohh":3,"-":45,"kyhjonathan":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"|          Name          |                         Github Profile                         |             Portfolio              |","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"|:----------------------:|:--------------------------------------------------------------:|:----------------------------------:|","lastModifiedDate":"2024-04-08"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"|    Aakash Ramaswamy    |     [See Aakash\u0027s Github Here!](https://github.com/Aak242)     |    [Portfolio](team/aak242.md)     |","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"|  Nicholas Tan Yun Yu   | [See Nicholas\u0027 Github Here!](https://github.com/NicholasTanYY) | [Portfolio](team/nicholastanyy.md) |","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"| Sivagnanam Maheshwaran |   [See Mahesh\u0027s Github Here!](https://github.com/Mahesh1772)   |  [Portfolio](team/mahesh1772.md)   |","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"|     Jonathan Kuek      | [See Jonathan\u0027s Github Here!](https://github.com/kyhjonathan)  |  [Portfolio](team/kyhjonathan.md)  |","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"|      Clarence Poh      | [See Clarence\u0027s Github Here!](https://github.com/clarencepohh) | [Portfolio](team/clarencepohh.md)  |","lastModifiedDate":"2024-04-08"}],"authorContributionMap":{"clarencepohh":7,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"* [Architecture](#architecture)","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"    * [Main Components of the architecture](#main-components-of-the-architecture)","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"* [Design \u0026 Implementation](#design--implementation)","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"  * [Data Component](#data-component)","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"  * [UiRenderer Component](#uirenderer-component)","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"  * [View Switching](#view-switching)","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"  * [Utilities](#utilities)","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"  * [TaskManager Component](#taskmanager-component)","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"    * [Retrieving tasks from the TaskManager](#retrieving-tasks-from-the-taskmanager)","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    * [Updating a Task](#updating-a-task)","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"    * [Update Task Method](#update-task-method)","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"    * [Adding Tasks](#adding-tasks)","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"    * [Deleting Tasks](#deleting-tasks)","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"Aak242"},"content":"    * [Managing Free Time](#managing-free-time)","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"    * [Interfacing with Storage class](#interfacing-with-storage-class)","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"  * [Storage component](#storage-component)","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"  * [CommandHandler Component](#commandhandler-component)","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"  * [Exceptions and Logging](#exceptions-and-logging)","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"  * [Exporting .ics File Component (For future development)](#exporting-ics-file-component-for-future-development)","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"* [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"  * [Product scope](#product-scope)","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    * [Target user profile](#target-user-profile)","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    * [Value proposition](#value-proposition)","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"  * [User Stories](#user-stories)","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"  * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"  * [Glossary](#glossary)","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"  * [Instructions for manual testing](#instructions-for-manual-testing)","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"ical4J Library: [https://www.ical4j.org/](https://www.ical4j.org/)","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"## Architecture","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"The ***Architecture diagram*** given below shows the high-level architecture of CLI-nton.","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"The application is designed with a modular architecture, consisting of the following components:","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"![img.png](diagrams/architecture/architeturediagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"#### Main Components of the architecture","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"- **UI**: The `UiRenderer` class handles the rendering of the calendar views (week and month) to the console, and \u0027AvatarUi\u0027 class handles the rendering of the avatar.","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"- **Main**: The `Main` class acts as the central logic component, handling user input and dispatching commands to the appropriate components.","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"kyhjonathan"},"content":"- **Data**: The `TaskManager` class manages the tasks and their corresponding dates, providing methods for adding, updating, and deleting tasks. \u0027Exceptions\u0027 contains the exceptions that are thrown by the application.","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"kyhjonathan"},"content":"- **Storage**: The `Storage` class handles the writing and reading of tasks to and from clintonData.txt file, ensuring persistence of task data across sessions.","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"kyhjonathan"},"content":"- **Time**: The `DateUtils` class provides utility methods for working with dates and times.","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"kyhjonathan"},"content":"- **Logger**: The `FileLogger` class sets up a logger that writes log messages to the `logs.log` file in the project directory.","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"kyhjonathan"},"content":"- **CommandParser**: The `CommandParser` class parses user input commands and extracts relevant information for processing.","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"# Design \u0026 Implementation","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"## Data Component","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"### API: [Data](https://github.com/AY2324S2-CS2113-W13-2/tp/tree/master/src/main/java/data)","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"![Data Class Diagram](images/class/Data.jpg)","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"The \u0027Data\u0027 package consists of all the classes that the commands interact with to perform various functions.","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"Below is a summary of the classes found in the Data package:","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"- The `TaskManager` class is created that contains all local copies of `Task`, creating a many-to-one relationship with `Task`.","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"- `Task` is the superclass of all created tasks, namely: `Todo`, `Deadline`, and `Event`.","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"- When an operation is requested by the user, the `TaskManager` instance calls its own methods to create/read/update/delete the tasks.","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"- `TaskManagerException` extends the Java class `Exception`, and used when there are exceptions to be handled.","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"- `TaskType` is an enumeration used in classifying the types of `Task` created.","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"- `TaskPriorityLevel` is an enumeration used in classifying the priority level of a `Task`.","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"Below is a sequence diagram that illustrates a possible sequence when the user runs CLI-nton:","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"![Data Sequence Diagram](images/sequence/DataSequenceDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"NicholasTanYY"},"content":"## UiRenderer Component","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"NicholasTanYY"},"content":"### API: [UiRenderer.java](https://github.com/AY2324S2-CS2113-W13-2/tp/blob/master/src/main/java/ui/UiRenderer.java)","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"NicholasTanYY"},"content":"![Ui Class Diagram](images/class/Ui.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"NicholasTanYY"},"content":"### Overview: \u003cbr\u003e ","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"NicholasTanYY"},"content":"The UiRenderer component is responsible for rendering the user interface. It is used to display messages, week views as well as month views to the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"NicholasTanYY"},"content":"### How it works:","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"NicholasTanYY"},"content":"1. When week view is requested, the UiRenderer component will render the week view.","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"NicholasTanYY"},"content":"2. This is done by printing the table in ASCII art format, with the days of the week as columns.","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"NicholasTanYY"},"content":"3. The week view will display the tasks for the week, with the tasks for each day displayed in the respective columns.","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"NicholasTanYY"},"content":"4. The month view will display a summary of the tasks for each day in the month, with the dates of the month displayed in a month calendar format.","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"NicholasTanYY"},"content":"### printView Method for Week View","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"NicholasTanYY"},"content":"![Sequence Diagram for printView()](images/sequence/PrintWeekViewSequenceDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"NicholasTanYY"},"content":"### printWeekHeader Method","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"NicholasTanYY"},"content":"`printWeekHeader` Method","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"NicholasTanYY"},"content":"The `printWeekHeader` method is responsible for rendering the header section of the week and month view, including the names of the days and the dates.","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"NicholasTanYY"},"content":"#### Method signature:","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"NicholasTanYY"},"content":"public static void printWeekHeader(LocalDate startOfView, DateTimeFormatter dateFormatter, boolean isMonthView)","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"NicholasTanYY"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"NicholasTanYY"},"content":"- startOfView: The starting date of the week view.","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"NicholasTanYY"},"content":"- dateFormatter: Formatter for displaying dates.","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"NicholasTanYY"},"content":"- isMonthView: A boolean flag indicating if the month view is being rendered.","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"NicholasTanYY"},"content":"- Prints a horizontal divider to delineate the start of the header.","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"NicholasTanYY"},"content":"- Displays the names of the days as column headers.","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"NicholasTanYY"},"content":"- If not in month view, prints the dates for the respective week.","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"NicholasTanYY"},"content":"### printWeekBody Method","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"NicholasTanYY"},"content":"The `printWeekBody` method displays the body of the week view, showing tasks for each day in their respective columns.","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Signature","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"Mahesh1772"},"content":"public static void printWeekBody(LocalDate startOfWeek, TaskManager taskManager)","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"NicholasTanYY"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"NicholasTanYY"},"content":"- startOfWeek: The starting date of the week for which tasks are displayed.","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"NicholasTanYY"},"content":"- dateFormatter: Formatter for displaying dates.","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"NicholasTanYY"},"content":"- taskManager: The TaskManager instance managing tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"NicholasTanYY"},"content":"- Calls `printTasksInWeek`, which prints the tasks for each day in the week.","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"NicholasTanYY"},"content":"### printTasksInWeek Method","lastModifiedDate":"2024-04-15"},{"lineNumber":124,"author":{"gitId":"NicholasTanYY"},"content":"The `printTasksInWeek` method displays the tasks for each day in the week view, wrapping the task descriptions to fit within the column width.","lastModifiedDate":"2024-04-15"},{"lineNumber":125,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Signature","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"NicholasTanYY"},"content":"public static void printTasksInWeek(LocalDate startOfWeek, TaskManager taskManager)","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"NicholasTanYY"},"content":"#### Parameters","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"NicholasTanYY"},"content":"- startOfWeek: The starting date of the week for which tasks are displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"NicholasTanYY"},"content":"- taskManager: The TaskManager instance managing tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"NicholasTanYY"},"content":"- Retrieves the tasks for each day in the week into a map.","lastModifiedDate":"2024-04-15"},{"lineNumber":137,"author":{"gitId":"NicholasTanYY"},"content":"- Wrap the task descriptions to the width of the calendar box.","lastModifiedDate":"2024-04-15"},{"lineNumber":138,"author":{"gitId":"NicholasTanYY"},"content":"- Stores the task descriptions in a map.","lastModifiedDate":"2024-04-15"},{"lineNumber":139,"author":{"gitId":"NicholasTanYY"},"content":"- Prints the task descriptions for each day in the week in the appropriate formatting.","lastModifiedDate":"2024-04-15"},{"lineNumber":140,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"NicholasTanYY"},"content":"### Month View Rendering","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"NicholasTanYY"},"content":"The month view utilizes the printWeekHeader method with the isMonthView parameter set to true, limiting the display to only include week headers without individual tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"Mahesh1772"},"content":"### printMonthView Method","lastModifiedDate":"2024-04-15"},{"lineNumber":145,"author":{"gitId":"Mahesh1772"},"content":"The `printView` method in the `MonthView` is responsible for rendering the month view, displaying the calendar grid and the tasks for each day.","lastModifiedDate":"2024-04-15"},{"lineNumber":146,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":147,"author":{"gitId":"Mahesh1772"},"content":"#### Method Signature","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":149,"author":{"gitId":"Mahesh1772"},"content":"@Override","lastModifiedDate":"2024-04-15"},{"lineNumber":150,"author":{"gitId":"Mahesh1772"},"content":"public void printView(TaskManager taskManager)","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":152,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"Mahesh1772"},"content":"#### Parameters","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"Mahesh1772"},"content":"- `taskManager`: The TaskManager instance containing the tasks to be displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"Mahesh1772"},"content":"#### Method Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":157,"author":{"gitId":"Mahesh1772"},"content":"1. Calculates the `YearMonth` and the first day of the month that falls on a Sunday.","lastModifiedDate":"2024-04-15"},{"lineNumber":158,"author":{"gitId":"Mahesh1772"},"content":"2. Prints the month header using the `printMonthHeader` method.","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"Mahesh1772"},"content":"3. Calls the `printWeekHeader` method from the `UiRenderer` to display the week header.","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"Mahesh1772"},"content":"4. Iterates through the weeks in the month, calling the `printWeek` method for each week.","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"Mahesh1772"},"content":"5. The `printWeek` method calculates the start date of the week, prints the day numbers, and then calls `printTasksForWeek` to display the tasks for that week.","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"Mahesh1772"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-04-15"},{"lineNumber":164,"author":{"gitId":"Mahesh1772"},"content":"![MonthView Sequence Diagram](images/sequence/PrintMonthViewSequenceDiagramWithoutLogger.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"Mahesh1772"},"content":"The sequence diagram above illustrates the interactions between the `m:MonthView`, `u:UiRenderer`, `t:TaskManager`, and `l:Logger` classes during the execution of the `printView` method.","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"NicholasTanYY"},"content":"### printHelp Method","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"NicholasTanYY"},"content":"The printHelp method provides users with a list of available commands and their descriptions, aiding in navigation and task management.","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Signature","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"NicholasTanYY"},"content":"public static void printHelp()","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"NicholasTanYY"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"NicholasTanYY"},"content":"- Prints a structured list of commands and their purposes within the user interface.","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"NicholasTanYY"},"content":"## View Switching","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"Mahesh1772"},"content":"The Calendar application supports switching between the week and month views, allowing users to visualize their tasks in different time perspectives. The switching functionality is implemented through the `WeekView` and `MonthView` classes, which extend the `View` abstract class.","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"NicholasTanYY"},"content":"### View Hierarchy","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"Mahesh1772"},"content":"The `View` abstract class provides a common interface for rendering and navigating different calendar views. It defines the following abstract methods:","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"Mahesh1772"},"content":"- `printView(TaskManager taskManager)`: This method is responsible for rendering the view to the console based on the provided `TaskManager` instance.","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"Mahesh1772"},"content":"- `next()`: This method advances the view to the next period (e.g., next week or next month).","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"Mahesh1772"},"content":"- `previous()`: This method moves the view to the previous period (e.g., previous week or previous month).","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"Mahesh1772"},"content":"- ","lastModifiedDate":"2024-04-14"},{"lineNumber":191,"author":{"gitId":"Mahesh1772"},"content":"![Time.png](images/class/Time.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":192,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"Mahesh1772"},"content":"The `View` class also has a protected `startOfView` field, which represents the starting date of the current view period, and a `dateFormatter` field for formatting dates.","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"NicholasTanYY"},"content":"### WeekView","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"Mahesh1772"},"content":"The `WeekView` class extends the `View` abstract class and provides an implementation for rendering and navigating the week view. It overrides the following methods from the `View` class:","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"Mahesh1772"},"content":"- `printView(TaskManager taskManager)`: This method first calculates the end of the week based on the `startOfView` date. It then prints the week header using the `UiRenderer.printWeekHeader` method and the week body using the `UiRenderer.printWeekBody` method.","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"Mahesh1772"},"content":"- `next()`: This method advances the `startOfView` date to the start of the next week by adding one week.","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"Mahesh1772"},"content":"- `previous()`: This method moves the `startOfView` date to the start of the previous week by subtracting one week.","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"Mahesh1772"},"content":"The `WeekView` class also provides the following utility methods:","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"Mahesh1772"},"content":"- `getStartOfWeek()`: Returns the `startOfView` date, which represents the start of the current week.","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"Mahesh1772"},"content":"- `getDateForDay(int dayOfWeek)`: Returns the date for a specific day of the week based on the `startOfView` date. The `dayOfWeek` parameter is expected to be a value between 1 (Monday) and 7 (Sunday).","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"NicholasTanYY"},"content":"### MonthView","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"Mahesh1772"},"content":"The `MonthView` class extends the `View` abstract class and provides an implementation for rendering and navigating the month view. It overrides the following methods from the `View` class:","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"Mahesh1772"},"content":"- `printView(TaskManager taskManager)`: This method first calculates the start of the month and the first day of the month that falls on a Sunday. It then prints the month header using the `UiRenderer.printWeekHeader` method with the `isMonthView` flag set to `true`. The method iterates over the weeks in the month and calls the `printWeek` method for each week.","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"Mahesh1772"},"content":"- `next()`: This method advances the `startOfView` date to the start of the next month.","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"Mahesh1772"},"content":"- `previous()`: This method moves the `startOfView` date to the start of the previous month.","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"Mahesh1772"},"content":"The `MonthView` class also provides the following private methods:","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"Mahesh1772"},"content":"- `printWeek(LocalDate current, TaskManager taskManager)`: This method prints a single week within the month view. It iterates over the days of the week and calls the `printDay` method for each day. It also prints the tasks for the week using the `printTasksForWeek` method.","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"Mahesh1772"},"content":"- `printDay(LocalDate currentDate, LocalDate startOfMonth)`: This method prints the day number for a given date within the month view.","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"Mahesh1772"},"content":"- `getMaxTasksForWeek(LocalDate weekStart, TaskManager taskManager)`: This method calculates the maximum number of tasks for a given week by iterating over the days of the week and finding the maximum number of tasks for any day.","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"Mahesh1772"},"content":"- `printTasksForWeek(LocalDate weekStart, int maxTasks, TaskManager taskManager)`: This method prints the tasks for a given week within the month view. It iterates over the tasks and calls the `printTaskForDay` method for each task.","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"Mahesh1772"},"content":"- `printTaskForDay(List\u003cTask\u003e dayTasks, int taskIndex)`: This method prints a single task for a given day within the month view.","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"Mahesh1772"},"content":"### View Switching in CommandHandler","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"Mahesh1772"},"content":"The `CommandHandler` class is responsible for handling user input and dispatching commands to the appropriate components. It manages the switching between the week and month views based on the user\u0027s input.","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"Mahesh1772"},"content":"When the user enters the `month` command, the `CommandHandler` class calls the `handleMonthCommand()` method, which toggles the `inMonthView` flag and renders the month view by calling the `printView` method of the `MonthView` instance. Similarly, when the user enters the `week` command, the `CommandHandler` class calls the `handleWeekCommand()` method, which sets the `inMonthView` flag to `false` and renders the week view by calling the `printView` method of the `WeekView` instance.","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"Mahesh1772"},"content":"The following code snippets illustrate the view switching logic in the `CommandHandler` class:","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"Mahesh1772"},"content":"```java","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"Mahesh1772"},"content":"private void handleMonthCommand() {","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"Mahesh1772"},"content":"    inMonthView \u003d true;","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"Mahesh1772"},"content":"This `handleMonthCommand()` method sets the `inMonthView` flag to `true`, indicating that the month view should be displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":239,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":240,"author":{"gitId":"Mahesh1772"},"content":"```java","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"Mahesh1772"},"content":"private void handleWeekCommand() {","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"Mahesh1772"},"content":"    inMonthView \u003d false;","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":244,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":245,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":246,"author":{"gitId":"Mahesh1772"},"content":"This `handleWeekCommand()` method sets the `inMonthView` flag to `false`, indicating that the week view should be displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":247,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"Mahesh1772"},"content":"The `handleCommand()` method in the `CommandHandler` class is responsible for rendering the appropriate view based on the `inMonthView` flag:","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":250,"author":{"gitId":"Mahesh1772"},"content":"```java","lastModifiedDate":"2024-04-15"},{"lineNumber":251,"author":{"gitId":"Mahesh1772"},"content":"public void handleCommand() {","lastModifiedDate":"2024-04-15"},{"lineNumber":252,"author":{"gitId":"Mahesh1772"},"content":"  AvatarUi.printAvatar();","lastModifiedDate":"2024-04-15"},{"lineNumber":253,"author":{"gitId":"Mahesh1772"},"content":"  if (!inMonthView) {","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"Mahesh1772"},"content":"    weekView.printView(taskManager);","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"Mahesh1772"},"content":"  } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":256,"author":{"gitId":"Mahesh1772"},"content":"    monthView.printView(taskManager);","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"Mahesh1772"},"content":"  }","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":259,"author":{"gitId":"Mahesh1772"},"content":"  System.out.println(\"Enter help to learn commands\");","lastModifiedDate":"2024-04-15"},{"lineNumber":260,"author":{"gitId":"Mahesh1772"},"content":"  String input \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-04-15"},{"lineNumber":261,"author":{"gitId":"Mahesh1772"},"content":"  String[] parts \u003d input.split(\",\\\\s*\");","lastModifiedDate":"2024-04-15"},{"lineNumber":262,"author":{"gitId":"Mahesh1772"},"content":"  String command \u003d parts[0];","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":264,"author":{"gitId":"Mahesh1772"},"content":"  switch (command) {","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"Mahesh1772"},"content":"  // ...","lastModifiedDate":"2024-04-15"},{"lineNumber":266,"author":{"gitId":"Mahesh1772"},"content":"  case \"month\":","lastModifiedDate":"2024-04-15"},{"lineNumber":267,"author":{"gitId":"Mahesh1772"},"content":"    handleMonthCommand();","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"Mahesh1772"},"content":"    break;","lastModifiedDate":"2024-04-15"},{"lineNumber":269,"author":{"gitId":"Mahesh1772"},"content":"  case \"week\":","lastModifiedDate":"2024-04-15"},{"lineNumber":270,"author":{"gitId":"Mahesh1772"},"content":"    handleWeekCommand();","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"Mahesh1772"},"content":"    break;","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"Mahesh1772"},"content":"  // ...","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"Mahesh1772"},"content":"  }","lastModifiedDate":"2024-03-28"},{"lineNumber":274,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":275,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":276,"author":{"gitId":"Mahesh1772"},"content":"This method first prints the avatar using `AvatarUi.printAvatar()`, and then checks the value of the `inMonthView` flag to determine whether to call `weekView.printView(taskManager)` or `monthView.printView(taskManager)` to render the appropriate view.","lastModifiedDate":"2024-04-15"},{"lineNumber":277,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":278,"author":{"gitId":"clarencepohh"},"content":"## Utilities","lastModifiedDate":"2024-04-15"},{"lineNumber":279,"author":{"gitId":"Mahesh1772"},"content":"The `DateUtils` class provides a utility method `getStartOfWeek` that returns the start date of the week for a given date.","lastModifiedDate":"2024-03-28"},{"lineNumber":280,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":281,"author":{"gitId":"clarencepohh"},"content":"## TaskManager Component","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"clarencepohh"},"content":"### Overview: ","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"clarencepohh"},"content":"The TaskManager is responsible for handling the creation, reading, updating and deletion [CRUD] of tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"clarencepohh"},"content":"#### How it works:","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"clarencepohh"},"content":"1. When the program starts, a TaskManager instance is created.","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"clarencepohh"},"content":"2. Saved tasks are retrieved by interfacing with the Storage class to create required tasks and save them to this ","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"clarencepohh"},"content":"instance of TaskManager.  ","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"clarencepohh"},"content":"3. When the user requests an operation, the main function parses the input and hands it to TaskManager if it is related","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"clarencepohh"},"content":"4. The TaskManager will handle all requests relating to tasks, using methods detailed in the following sections.","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"clarencepohh"},"content":"5. The TaskManager will also create INFO-level logs when making changes to tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"clarencepohh"},"content":"#### Task Types","lastModifiedDate":"2024-04-15"},{"lineNumber":295,"author":{"gitId":"clarencepohh"},"content":"`TaskManager` supports different task types to be created by the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":296,"author":{"gitId":"clarencepohh"},"content":"The `TaskType` enum defines the different types of tasks supported by the application: `TODO`, `EVENT`, and `DEADLINE`.","lastModifiedDate":"2024-04-15"},{"lineNumber":297,"author":{"gitId":"clarencepohh"},"content":"There is also a `INVALID` type, used for error handling.","lastModifiedDate":"2024-04-15"},{"lineNumber":298,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":299,"author":{"gitId":"clarencepohh"},"content":"### Retrieving tasks from the TaskManager","lastModifiedDate":"2024-04-15"},{"lineNumber":300,"author":{"gitId":"clarencepohh"},"content":"#### getTasksForDate Method","lastModifiedDate":"2024-04-15"},{"lineNumber":301,"author":{"gitId":"clarencepohh"},"content":"The `getTasksForDate` method is responsible for retrieving all tasks on a specified date.","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"clarencepohh"},"content":"This is a helper function that is called whenever tasks relating to a certain date is needed.","lastModifiedDate":"2024-03-29"},{"lineNumber":303,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":304,"author":{"gitId":"clarencepohh"},"content":"#### Method signature:","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":306,"author":{"gitId":"clarencepohh"},"content":"public List\u003cTask\u003e getTasksForDate(LocalDate date)","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"clarencepohh"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":308,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":309,"author":{"gitId":"clarencepohh"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":310,"author":{"gitId":"clarencepohh"},"content":"- date: The date to retrieve tasks for.","lastModifiedDate":"2024-03-29"},{"lineNumber":311,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":312,"author":{"gitId":"clarencepohh"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":313,"author":{"gitId":"clarencepohh"},"content":"- Gets the LocalDate requested by the caller.","lastModifiedDate":"2024-03-29"},{"lineNumber":314,"author":{"gitId":"clarencepohh"},"content":"- Returns an ArrayList of Tasks for the specified date. It **is** possible that an empty ArrayList is returned, given","lastModifiedDate":"2024-03-29"},{"lineNumber":315,"author":{"gitId":"clarencepohh"},"content":"that there are no tasks on that specified date.","lastModifiedDate":"2024-03-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":317,"author":{"gitId":"clarencepohh"},"content":"### Updating a Task","lastModifiedDate":"2024-04-15"},{"lineNumber":318,"author":{"gitId":"clarencepohh"},"content":"#### Overview","lastModifiedDate":"2024-04-15"},{"lineNumber":319,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":320,"author":{"gitId":"Aak242"},"content":"Updating a task involves modifying its description or other attributes such as date or time. This guide outlines the process and considerations for updating tasks within the application.","lastModifiedDate":"2024-03-28"},{"lineNumber":321,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":322,"author":{"gitId":"clarencepohh"},"content":"#### Update Manager Method","lastModifiedDate":"2024-04-15"},{"lineNumber":323,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":324,"author":{"gitId":"Aak242"},"content":"The `updateManager` method facilitates the updating of tasks. It prompts the user for an updated task description and handles tasks of different types (Todo, Event, Deadline) while ensuring the changes are correctly reflected in the application.","lastModifiedDate":"2024-03-28"},{"lineNumber":325,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":326,"author":{"gitId":"Aak242"},"content":"#### Method Signature","lastModifiedDate":"2024-03-28"},{"lineNumber":327,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":328,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":329,"author":{"gitId":"kyhjonathan"},"content":"public void updateManager(Scanner scanner, WeekView weekView, MonthView monthView,","lastModifiedDate":"2024-04-15"},{"lineNumber":330,"author":{"gitId":"kyhjonathan"},"content":"        boolean inMonthView, TaskManager taskManager, int day, int taskIndex, ","lastModifiedDate":"2024-04-15"},{"lineNumber":331,"author":{"gitId":"kyhjonathan"},"content":"        String newDescription)","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"Aak242"},"content":"        throws TaskManagerException, DateTimeParseException","lastModifiedDate":"2024-03-28"},{"lineNumber":333,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":334,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":335,"author":{"gitId":"clarencepohh"},"content":"#### Parameters","lastModifiedDate":"2024-04-15"},{"lineNumber":336,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":337,"author":{"gitId":"Aak242"},"content":"- `scanner`: Scanner object for user input.","lastModifiedDate":"2024-03-28"},{"lineNumber":338,"author":{"gitId":"Aak242"},"content":"- `weekView`: Current week being viewed.","lastModifiedDate":"2024-03-28"},{"lineNumber":339,"author":{"gitId":"Aak242"},"content":"- `monthView`: Current month being viewed.","lastModifiedDate":"2024-03-28"},{"lineNumber":340,"author":{"gitId":"Aak242"},"content":"- `inMonthView`: Boolean indicating whether the month is being viewed.","lastModifiedDate":"2024-03-28"},{"lineNumber":341,"author":{"gitId":"Aak242"},"content":"- `taskManager`: TaskManager instance managing tasks.","lastModifiedDate":"2024-03-28"},{"lineNumber":342,"author":{"gitId":"Aak242"},"content":"- `day`: Day of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":343,"author":{"gitId":"Aak242"},"content":"- `taskIndex`: Index of the task to update.","lastModifiedDate":"2024-03-28"},{"lineNumber":344,"author":{"gitId":"Aak242"},"content":"- `newDescription`: Updated description of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":345,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":346,"author":{"gitId":"clarencepohh"},"content":"#### Exceptions","lastModifiedDate":"2024-04-15"},{"lineNumber":347,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":348,"author":{"gitId":"Aak242"},"content":"- `TaskManagerException`: Thrown if not in the correct week/month view.","lastModifiedDate":"2024-03-28"},{"lineNumber":349,"author":{"gitId":"Aak242"},"content":"- `DateTimeParseException`: Thrown if there is an error parsing the date.","lastModifiedDate":"2024-03-28"},{"lineNumber":350,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":351,"author":{"gitId":"clarencepohh"},"content":"#### Method Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":352,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":353,"author":{"gitId":"Aak242"},"content":"1. Converts the specified day to a `LocalDate`.","lastModifiedDate":"2024-03-28"},{"lineNumber":354,"author":{"gitId":"Aak242"},"content":"2. Verifies if the date is in the current week/month view.","lastModifiedDate":"2024-03-28"},{"lineNumber":355,"author":{"gitId":"Aak242"},"content":"3. Updates the task description based on its type.","lastModifiedDate":"2024-03-28"},{"lineNumber":356,"author":{"gitId":"Aak242"},"content":"4. Saves the updated tasks to the appropriate file.","lastModifiedDate":"2024-03-28"},{"lineNumber":357,"author":{"gitId":"Aak242"},"content":"5. Provides feedback to the user upon successful update.","lastModifiedDate":"2024-03-28"},{"lineNumber":358,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":359,"author":{"gitId":"Aak242"},"content":"### Update Task Method","lastModifiedDate":"2024-03-28"},{"lineNumber":360,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":361,"author":{"gitId":"Aak242"},"content":"The `updateTask` method is responsible for modifying the details of a task based on the user input.","lastModifiedDate":"2024-03-28"},{"lineNumber":362,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":363,"author":{"gitId":"clarencepohh"},"content":"#### Method Signature","lastModifiedDate":"2024-04-15"},{"lineNumber":364,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":365,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":366,"author":{"gitId":"kyhjonathan"},"content":"public static void updateTask(LocalDate date, int taskIndex, ","lastModifiedDate":"2024-04-15"},{"lineNumber":367,"author":{"gitId":"kyhjonathan"},"content":"        String newTaskDescription, Scanner scanner,","lastModifiedDate":"2024-04-15"},{"lineNumber":368,"author":{"gitId":"Mahesh1772"},"content":"        boolean inMonthView, WeekView weekView)","lastModifiedDate":"2024-04-15"},{"lineNumber":369,"author":{"gitId":"Mahesh1772"},"content":"        throws IndexOutOfBoundsException, TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":370,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":371,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":372,"author":{"gitId":"clarencepohh"},"content":"#### Parameters","lastModifiedDate":"2024-04-15"},{"lineNumber":373,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":374,"author":{"gitId":"Aak242"},"content":"- `date`: Date of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":375,"author":{"gitId":"Aak242"},"content":"- `taskIndex`: Index of the task to update.","lastModifiedDate":"2024-03-28"},{"lineNumber":376,"author":{"gitId":"Aak242"},"content":"- `newTaskDescription`: Updated description of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":377,"author":{"gitId":"Aak242"},"content":"- `scanner`: Scanner object for user input.","lastModifiedDate":"2024-03-28"},{"lineNumber":378,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":379,"author":{"gitId":"clarencepohh"},"content":"#### Exceptions","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":381,"author":{"gitId":"Aak242"},"content":"- `IndexOutOfBoundsException`: Thrown if the task index is out of bounds.","lastModifiedDate":"2024-03-28"},{"lineNumber":382,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":383,"author":{"gitId":"clarencepohh"},"content":"#### Method Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":384,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":385,"author":{"gitId":"Aak242"},"content":"1. Retrieves the tasks for the specified date.","lastModifiedDate":"2024-03-28"},{"lineNumber":386,"author":{"gitId":"Aak242"},"content":"2. Validates if the task index is within bounds.","lastModifiedDate":"2024-03-28"},{"lineNumber":387,"author":{"gitId":"Aak242"},"content":"3. Handles different task types (Todo, Event, Deadline).","lastModifiedDate":"2024-03-28"},{"lineNumber":388,"author":{"gitId":"Aak242"},"content":"4. Updates the task description accordingly.","lastModifiedDate":"2024-03-28"},{"lineNumber":389,"author":{"gitId":"Aak242"},"content":"5. Logs the changes if applicable.","lastModifiedDate":"2024-03-28"},{"lineNumber":390,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":391,"author":{"gitId":"clarencepohh"},"content":"### Adding Tasks","lastModifiedDate":"2024-04-15"},{"lineNumber":392,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":393,"author":{"gitId":"clarencepohh"},"content":"#### Overview","lastModifiedDate":"2024-04-15"},{"lineNumber":394,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":395,"author":{"gitId":"clarencepohh"},"content":"The Add Task feature enhances the TaskManager application by enabling users to create various types of tasks such as Todo, Event, and Deadline. This section elaborates on the implementation details of this feature, encompassing methods for task creation, user input handling, and task addition management.","lastModifiedDate":"2024-04-13"},{"lineNumber":396,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":397,"author":{"gitId":"clarencepohh"},"content":"#### `addTask` Method","lastModifiedDate":"2024-04-15"},{"lineNumber":398,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":399,"author":{"gitId":"Aak242"},"content":"The `addTask` method orchestrates the creation and addition of a new task to the TaskManager. It accepts parameters including the task date, description, type, and relevant dates/times for events and deadlines. Depending on the task type, it constructs the corresponding task object (Todo, Event, or Deadline) and integrates it into the tasks map.","lastModifiedDate":"2024-03-28"},{"lineNumber":400,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":401,"author":{"gitId":"Aak242"},"content":"#### Method Signature","lastModifiedDate":"2024-03-28"},{"lineNumber":402,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":403,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":404,"author":{"gitId":"Aak242"},"content":"public static void addTask(LocalDate date, String taskDescription, TaskType taskType, String[] dates, ","lastModifiedDate":"2024-03-28"},{"lineNumber":405,"author":{"gitId":"Aak242"},"content":"        String[] times) throws TaskManagerException","lastModifiedDate":"2024-03-28"},{"lineNumber":406,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":407,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":408,"author":{"gitId":"Aak242"},"content":"#### Parameters","lastModifiedDate":"2024-03-28"},{"lineNumber":409,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":410,"author":{"gitId":"Aak242"},"content":"- `date`: The date for the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":411,"author":{"gitId":"Aak242"},"content":"- `taskDescription`: The description of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":412,"author":{"gitId":"Aak242"},"content":"- `taskType`: The type of the task (Todo, Event, or Deadline).","lastModifiedDate":"2024-03-28"},{"lineNumber":413,"author":{"gitId":"Aak242"},"content":"- `dates`: An array containing relevant dates for events and deadlines.","lastModifiedDate":"2024-03-28"},{"lineNumber":414,"author":{"gitId":"Aak242"},"content":"- `times`: An array containing relevant times for events and deadlines.","lastModifiedDate":"2024-03-28"},{"lineNumber":415,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":416,"author":{"gitId":"clarencepohh"},"content":"#### Exceptions","lastModifiedDate":"2024-04-15"},{"lineNumber":417,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":418,"author":{"gitId":"clarencepohh"},"content":"- `TaskManagerException`: Thrown if there is an error in managing tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":419,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":420,"author":{"gitId":"clarencepohh"},"content":"#### `addManager` Method","lastModifiedDate":"2024-04-15"},{"lineNumber":421,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":422,"author":{"gitId":"Aak242"},"content":"The `addManager` method facilitates the management of adding tasks from user input along with the specified date. It prompts users to input task details, validates the input, and delegates the task creation process to the `addTask` method.","lastModifiedDate":"2024-03-28"},{"lineNumber":423,"author":{"gitId":"kyhjonathan"},"content":"The sequence diagram below illustrates the flow of the `addManager` method:","lastModifiedDate":"2024-04-15"},{"lineNumber":424,"author":{"gitId":"kyhjonathan"},"content":"![img.png](images/sequence/AddManagerSequenceDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":425,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":426,"author":{"gitId":"Aak242"},"content":"#### Method Signature","lastModifiedDate":"2024-03-28"},{"lineNumber":427,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":428,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":429,"author":{"gitId":"kyhjonathan"},"content":"public void addManager(Scanner scanner, WeekView weekView, MonthView monthView, ","lastModifiedDate":"2024-04-15"},{"lineNumber":430,"author":{"gitId":"kyhjonathan"},"content":"        boolean inMonthView, String action,","lastModifiedDate":"2024-04-15"},{"lineNumber":431,"author":{"gitId":"Aak242"},"content":"        String day, String taskTypeString, String taskDescription)","lastModifiedDate":"2024-03-28"},{"lineNumber":432,"author":{"gitId":"Aak242"},"content":"        throws TaskManagerException, DateTimeParseException","lastModifiedDate":"2024-03-28"},{"lineNumber":433,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-03-28"},{"lineNumber":434,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":435,"author":{"gitId":"Aak242"},"content":"#### Parameters","lastModifiedDate":"2024-03-28"},{"lineNumber":436,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":437,"author":{"gitId":"Aak242"},"content":"- `scanner`: Scanner object for user input.","lastModifiedDate":"2024-03-28"},{"lineNumber":438,"author":{"gitId":"Aak242"},"content":"- `weekView`: WeekView object for date validation.","lastModifiedDate":"2024-03-28"},{"lineNumber":439,"author":{"gitId":"Aak242"},"content":"- `monthView`: MonthView object for date validation.","lastModifiedDate":"2024-03-28"},{"lineNumber":440,"author":{"gitId":"Aak242"},"content":"- `inMonthView`: Boolean indicating whether the view is in month view.","lastModifiedDate":"2024-03-28"},{"lineNumber":441,"author":{"gitId":"Aak242"},"content":"- `action`: Action to be performed.","lastModifiedDate":"2024-03-28"},{"lineNumber":442,"author":{"gitId":"Aak242"},"content":"- `day`: Day for the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":443,"author":{"gitId":"Aak242"},"content":"- `taskTypeString`: String representing the task type.","lastModifiedDate":"2024-03-28"},{"lineNumber":444,"author":{"gitId":"Aak242"},"content":"- `taskDescription`: Description of the task.","lastModifiedDate":"2024-03-28"},{"lineNumber":445,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":446,"author":{"gitId":"clarencepohh"},"content":"#### Exceptions","lastModifiedDate":"2024-04-15"},{"lineNumber":447,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":448,"author":{"gitId":"clarencepohh"},"content":"- `TaskManagerException`: Thrown if there is an error in managing tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":449,"author":{"gitId":"clarencepohh"},"content":"- `DateTimeParseException`: Thrown if there is an error parsing the date or time.","lastModifiedDate":"2024-04-15"},{"lineNumber":450,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":451,"author":{"gitId":"clarencepohh"},"content":"#### Handling User Input","lastModifiedDate":"2024-04-15"},{"lineNumber":452,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":453,"author":{"gitId":"Aak242"},"content":"This segment prompts users to input essential details for task creation, encompassing descriptions, dates, and times for events and deadlines. It utilizes the `Scanner` class to capture and validate user input before initiating task creation.","lastModifiedDate":"2024-03-28"},{"lineNumber":454,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":455,"author":{"gitId":"clarencepohh"},"content":"#### Task Type Switch Statement","lastModifiedDate":"2024-04-15"},{"lineNumber":456,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":457,"author":{"gitId":"Aak242"},"content":"Within the `addTask` method, a switch statement delineates the type of task being created based on the `taskType` parameter. Corresponding actions are executed to create and add the task to the tasks map based on the identified type.","lastModifiedDate":"2024-03-28"},{"lineNumber":458,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":459,"author":{"gitId":"clarencepohh"},"content":"#### Error Handling","lastModifiedDate":"2024-04-15"},{"lineNumber":460,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":461,"author":{"gitId":"kyhjonathan"},"content":"The implementation incorporates error handling mechanisms to effectively manage scenarios involving invalid inputs or unsupported task types. ","lastModifiedDate":"2024-04-15"},{"lineNumber":462,"author":{"gitId":"kyhjonathan"},"content":"Below is a list of exceptions and a description of how they are handled:","lastModifiedDate":"2024-04-15"},{"lineNumber":463,"author":{"gitId":"kyhjonathan"},"content":"* `TaskManagerException`: Handles errors that occur during task creation, such as invalid dates or task types.","lastModifiedDate":"2024-04-15"},{"lineNumber":464,"author":{"gitId":"kyhjonathan"},"content":"* `DateTimeParseException`: Manages exceptions related to date and time parsing errors.","lastModifiedDate":"2024-04-15"},{"lineNumber":465,"author":{"gitId":"kyhjonathan"},"content":"* `IndexOutOfBoundsException`: Ensures the task index is within bounds when updating tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":466,"author":{"gitId":"kyhjonathan"},"content":"* `StorageFileException`: Handles issues related to the storage of task data, such as invalid date formats in the task file.","lastModifiedDate":"2024-04-15"},{"lineNumber":467,"author":{"gitId":"kyhjonathan"},"content":"* `MarkTaskException`: Manages exceptions that occur when marking a task as complete.","lastModifiedDate":"2024-04-15"},{"lineNumber":468,"author":{"gitId":"kyhjonathan"},"content":"* `SetPriorityException`: Handles exceptions related to setting the priority of a task.","lastModifiedDate":"2024-04-15"},{"lineNumber":469,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":470,"author":{"gitId":"clarencepohh"},"content":"#### Saving Tasks to File","lastModifiedDate":"2024-04-15"},{"lineNumber":471,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":472,"author":{"gitId":"kyhjonathan"},"content":"Upon task creation, the `addTask` method guarantees the preservation of the updated task list to a file (`clintonData.txt`) by invoking the `saveTasksToFile` method from the `Storage` class. This serves to persist task data across application sessions.","lastModifiedDate":"2024-04-15"},{"lineNumber":473,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":474,"author":{"gitId":"clarencepohh"},"content":"#### Exceptions","lastModifiedDate":"2024-04-15"},{"lineNumber":475,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":476,"author":{"gitId":"Aak242"},"content":"`IndexOutOfBoundsException`: Thrown if the task index is out of bounds.","lastModifiedDate":"2024-03-28"},{"lineNumber":477,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":478,"author":{"gitId":"clarencepohh"},"content":"#### Method Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":479,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":480,"author":{"gitId":"Aak242"},"content":"1. Retrieves the tasks for the specified date.","lastModifiedDate":"2024-03-28"},{"lineNumber":481,"author":{"gitId":"Aak242"},"content":"2. Validates if the task index is within bounds.","lastModifiedDate":"2024-03-28"},{"lineNumber":482,"author":{"gitId":"Aak242"},"content":"3. Handles different task types (Todo, Event, Deadline).","lastModifiedDate":"2024-03-28"},{"lineNumber":483,"author":{"gitId":"Aak242"},"content":"4. Updates the task description accordingly.","lastModifiedDate":"2024-03-28"},{"lineNumber":484,"author":{"gitId":"Aak242"},"content":"5. Logs the changes if applicable.","lastModifiedDate":"2024-03-28"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":486,"author":{"gitId":"kyhjonathan"},"content":"### Deleting Tasks","lastModifiedDate":"2024-04-15"},{"lineNumber":487,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":488,"author":{"gitId":"kyhjonathan"},"content":"#### deleteTask Method","lastModifiedDate":"2024-04-15"},{"lineNumber":489,"author":{"gitId":"clarencepohh"},"content":"The `deleteTask` method is responsible for deleting a task specified by the user, on a specified date.","lastModifiedDate":"2024-03-29"},{"lineNumber":490,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":491,"author":{"gitId":"clarencepohh"},"content":"#### Method signature:","lastModifiedDate":"2024-03-29"},{"lineNumber":492,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":493,"author":{"gitId":"clarencepohh"},"content":"public void deleteTask(LocalDate date, int taskIndex, boolean isMuted)","lastModifiedDate":"2024-04-15"},{"lineNumber":494,"author":{"gitId":"clarencepohh"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":495,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":496,"author":{"gitId":"clarencepohh"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":497,"author":{"gitId":"clarencepohh"},"content":"- date: The date of the task.","lastModifiedDate":"2024-03-29"},{"lineNumber":498,"author":{"gitId":"clarencepohh"},"content":"- taskIndex: The index of the task to delete.","lastModifiedDate":"2024-03-29"},{"lineNumber":499,"author":{"gitId":"clarencepohh"},"content":"- isMuted: Whether system outputs are muted. ","lastModifiedDate":"2024-04-15"},{"lineNumber":500,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":501,"author":{"gitId":"clarencepohh"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":502,"author":{"gitId":"clarencepohh"},"content":"- Gets the LocalDate requested by the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":503,"author":{"gitId":"clarencepohh"},"content":"- Checks if there is are active tasks on the selected date, and checks if the date is within the period currently shown","lastModifiedDate":"2024-03-29"},{"lineNumber":504,"author":{"gitId":"clarencepohh"},"content":"  on the UI [week or month view].","lastModifiedDate":"2024-03-29"},{"lineNumber":505,"author":{"gitId":"clarencepohh"},"content":"- Deletes the task if the above two checks pass, else highlights to the user through a console-printed error message.","lastModifiedDate":"2024-03-29"},{"lineNumber":506,"author":{"gitId":"clarencepohh"},"content":"- If `isMuted` is True, no outputs are printed to the console. Only true when used in testing. ","lastModifiedDate":"2024-04-15"},{"lineNumber":507,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":508,"author":{"gitId":"clarencepohh"},"content":"### deleteAllTasksOnDate Method","lastModifiedDate":"2024-03-29"},{"lineNumber":509,"author":{"gitId":"clarencepohh"},"content":"The `deleteAllTasksOnDate` method is responsible for deleting **ALL** tasks on a date specified by the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":510,"author":{"gitId":"clarencepohh"},"content":"\u003e Do note that this method is **NOT** used is normal operation of the application. It is currently only being used in ","lastModifiedDate":"2024-03-29"},{"lineNumber":511,"author":{"gitId":"clarencepohh"},"content":"\u003e testing, for easier delete operations for dummy tasks created on a date. ","lastModifiedDate":"2024-03-29"},{"lineNumber":512,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":513,"author":{"gitId":"clarencepohh"},"content":"#### Method signature:","lastModifiedDate":"2024-03-29"},{"lineNumber":514,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":515,"author":{"gitId":"kyhjonathan"},"content":"public static void deleteAllTasksOnDate (TaskManager taskManager, ","lastModifiedDate":"2024-04-15"},{"lineNumber":516,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate specifiedDate)","lastModifiedDate":"2024-04-15"},{"lineNumber":517,"author":{"gitId":"clarencepohh"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":518,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":519,"author":{"gitId":"clarencepohh"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":520,"author":{"gitId":"clarencepohh"},"content":"- taskManager: The taskManager class in use.","lastModifiedDate":"2024-03-29"},{"lineNumber":521,"author":{"gitId":"clarencepohh"},"content":"- specifiedDate: The date on which all tasks are to be deleted.","lastModifiedDate":"2024-03-29"},{"lineNumber":522,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":523,"author":{"gitId":"clarencepohh"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":524,"author":{"gitId":"clarencepohh"},"content":"- Gets the LocalDate requested by the caller.","lastModifiedDate":"2024-03-29"},{"lineNumber":525,"author":{"gitId":"clarencepohh"},"content":"- Calls the `deleteTask` method on all tasks on the date.","lastModifiedDate":"2024-03-29"},{"lineNumber":526,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":527,"author":{"gitId":"Aak242"},"content":"\u003ca name\u003d\"managing-free-time\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":528,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":529,"author":{"gitId":"Aak242"},"content":"### Managing Free Time","lastModifiedDate":"2024-04-15"},{"lineNumber":530,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":531,"author":{"gitId":"Aak242"},"content":"\u003ca name\u003d\"free-times-manager-method\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":532,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":533,"author":{"gitId":"Aak242"},"content":"### Free Times Manager Method","lastModifiedDate":"2024-04-15"},{"lineNumber":534,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":535,"author":{"gitId":"Aak242"},"content":"The `freeTimesManager` method facilitates the identification and display of free time slots on a specific date. It is a crucial feature for users to efficiently plan their schedules by identifying available time intervals.","lastModifiedDate":"2024-04-15"},{"lineNumber":536,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":537,"author":{"gitId":"Aak242"},"content":"#### Method Signature","lastModifiedDate":"2024-04-15"},{"lineNumber":538,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":539,"author":{"gitId":"kyhjonathan"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":540,"author":{"gitId":"kyhjonathan"},"content":"public void freeTimesManager(WeekView weekView, MonthView monthView, ","lastModifiedDate":"2024-04-15"},{"lineNumber":541,"author":{"gitId":"kyhjonathan"},"content":"        boolean inMonthView, String day)","lastModifiedDate":"2024-04-15"},{"lineNumber":542,"author":{"gitId":"Aak242"},"content":"        throws TaskManagerException, DateTimeParseException","lastModifiedDate":"2024-04-15"},{"lineNumber":543,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":544,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":545,"author":{"gitId":"Aak242"},"content":"#### Parameters","lastModifiedDate":"2024-04-15"},{"lineNumber":546,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":547,"author":{"gitId":"Aak242"},"content":"- `weekView`: The WeekView object for finding the date.","lastModifiedDate":"2024-04-15"},{"lineNumber":548,"author":{"gitId":"Aak242"},"content":"- `monthView`: The MonthView object for finding the date.","lastModifiedDate":"2024-04-15"},{"lineNumber":549,"author":{"gitId":"Aak242"},"content":"- `inMonthView`: A boolean indicating whether the view is in month view or not.","lastModifiedDate":"2024-04-15"},{"lineNumber":550,"author":{"gitId":"Aak242"},"content":"- `day`: The day of the task to show free times for.","lastModifiedDate":"2024-04-15"},{"lineNumber":551,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":552,"author":{"gitId":"Aak242"},"content":"#### Exceptions","lastModifiedDate":"2024-04-15"},{"lineNumber":553,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":554,"author":{"gitId":"Aak242"},"content":"- `TaskManagerException`: If there is an error in managing tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":555,"author":{"gitId":"Aak242"},"content":"- `DateTimeParseException`: If there is an error parsing the date.","lastModifiedDate":"2024-04-15"},{"lineNumber":556,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":557,"author":{"gitId":"Aak242"},"content":"#### Method Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":558,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":559,"author":{"gitId":"Aak242"},"content":"1. Converts the day parameter to a `LocalDate` object.","lastModifiedDate":"2024-04-15"},{"lineNumber":560,"author":{"gitId":"Aak242"},"content":"2. Retrieves the list of events for the specified date.","lastModifiedDate":"2024-04-15"},{"lineNumber":561,"author":{"gitId":"Aak242"},"content":"3. Calculates the free time slots based on the events for the day.","lastModifiedDate":"2024-04-15"},{"lineNumber":562,"author":{"gitId":"Aak242"},"content":"4. Prints the identified free time slots for the specified date.","lastModifiedDate":"2024-04-15"},{"lineNumber":563,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":564,"author":{"gitId":"Aak242"},"content":"\u003ca name\u003d\"retrieving-free-time-slots\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":565,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":566,"author":{"gitId":"Aak242"},"content":"### Retrieving Free Time Slots","lastModifiedDate":"2024-04-15"},{"lineNumber":567,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":568,"author":{"gitId":"Aak242"},"content":"The `getFreeTimeSlots` method retrieves all free time slots for a specific date based on the events scheduled for that day.","lastModifiedDate":"2024-04-15"},{"lineNumber":569,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":570,"author":{"gitId":"Aak242"},"content":"#### Method Signature","lastModifiedDate":"2024-04-15"},{"lineNumber":571,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":572,"author":{"gitId":"kyhjonathan"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":573,"author":{"gitId":"kyhjonathan"},"content":"public List\u003cString\u003e getFreeTimeSlots(List\u003cTask\u003e events, ","lastModifiedDate":"2024-04-15"},{"lineNumber":574,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate currentDate)","lastModifiedDate":"2024-04-15"},{"lineNumber":575,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":576,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":577,"author":{"gitId":"Aak242"},"content":"#### Parameters","lastModifiedDate":"2024-04-15"},{"lineNumber":578,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":579,"author":{"gitId":"Aak242"},"content":"- `events`: A list of Event tasks for the date.","lastModifiedDate":"2024-04-15"},{"lineNumber":580,"author":{"gitId":"Aak242"},"content":"- `currentDate`: The date to show free times for.","lastModifiedDate":"2024-04-15"},{"lineNumber":581,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":582,"author":{"gitId":"Aak242"},"content":"#### Return Value","lastModifiedDate":"2024-04-15"},{"lineNumber":583,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":584,"author":{"gitId":"Aak242"},"content":"A list of free time slots for the given date.","lastModifiedDate":"2024-04-15"},{"lineNumber":585,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":586,"author":{"gitId":"Aak242"},"content":"#### Method Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":587,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":588,"author":{"gitId":"Aak242"},"content":"1. Initializes the start and end times of the day.","lastModifiedDate":"2024-04-15"},{"lineNumber":589,"author":{"gitId":"Aak242"},"content":"2. Sorts the events by start time and date.","lastModifiedDate":"2024-04-15"},{"lineNumber":590,"author":{"gitId":"Aak242"},"content":"3. Iterates through the events and calculates free time slots between events.","lastModifiedDate":"2024-04-15"},{"lineNumber":591,"author":{"gitId":"Aak242"},"content":"4. Adds the calculated free time slots to the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":592,"author":{"gitId":"Aak242"},"content":"5. Returns the list of free time slots.","lastModifiedDate":"2024-04-15"},{"lineNumber":593,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":594,"author":{"gitId":"Aak242"},"content":"\u003ca name\u003d\"printing-free-time-slots\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":595,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":596,"author":{"gitId":"Aak242"},"content":"### Printing Free Time Slots","lastModifiedDate":"2024-04-15"},{"lineNumber":597,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":598,"author":{"gitId":"Aak242"},"content":"The `printFreeTimeSlots` method prints the identified free time slots for a specific date.","lastModifiedDate":"2024-04-15"},{"lineNumber":599,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":600,"author":{"gitId":"Aak242"},"content":"#### Method Signature","lastModifiedDate":"2024-04-15"},{"lineNumber":601,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":602,"author":{"gitId":"kyhjonathan"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":603,"author":{"gitId":"kyhjonathan"},"content":"public void printFreeTimeSlots(List\u003cString\u003e freeTimeSlots,","lastModifiedDate":"2024-04-15"},{"lineNumber":604,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate startDate)","lastModifiedDate":"2024-04-15"},{"lineNumber":605,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":606,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":607,"author":{"gitId":"Aak242"},"content":"#### Parameters","lastModifiedDate":"2024-04-15"},{"lineNumber":608,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":609,"author":{"gitId":"Aak242"},"content":"- `freeTimeSlots`: A list of free time slots for the date.","lastModifiedDate":"2024-04-15"},{"lineNumber":610,"author":{"gitId":"Aak242"},"content":"- `startDate`: The date to show free times for.","lastModifiedDate":"2024-04-15"},{"lineNumber":611,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":612,"author":{"gitId":"Aak242"},"content":"#### Method Functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":613,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":614,"author":{"gitId":"Aak242"},"content":"1. Prints the date for which free time slots are being displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":615,"author":{"gitId":"Aak242"},"content":"2. Iterates through the list of free time slots and prints each slot.","lastModifiedDate":"2024-04-15"},{"lineNumber":616,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":617,"author":{"gitId":"Aak242"},"content":"By utilizing these methods, users can efficiently identify and utilize their available free time slots, aiding in better time management and scheduling.","lastModifiedDate":"2024-04-15"},{"lineNumber":618,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":619,"author":{"gitId":"clarencepohh"},"content":"### Interfacing with Storage class","lastModifiedDate":"2024-04-15"},{"lineNumber":620,"author":{"gitId":"clarencepohh"},"content":"#### `addTasksFromFile` method","lastModifiedDate":"2024-04-15"},{"lineNumber":621,"author":{"gitId":"clarencepohh"},"content":"The `addTasksFromFile` method is responsible for parsing save data generated by the `Storage` class.","lastModifiedDate":"2024-03-29"},{"lineNumber":622,"author":{"gitId":"clarencepohh"},"content":"\u003e See more details on the `Storage` class below.","lastModifiedDate":"2024-03-29"},{"lineNumber":623,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":624,"author":{"gitId":"clarencepohh"},"content":"#### Method signature:","lastModifiedDate":"2024-03-29"},{"lineNumber":625,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":626,"author":{"gitId":"kyhjonathan"},"content":"public void addTasksFromFile(Map\u003cLocalDate, List\u003cTask\u003e\u003e tasksFromFile) ","lastModifiedDate":"2024-04-15"},{"lineNumber":627,"author":{"gitId":"kyhjonathan"},"content":"        throws TaskManagerException","lastModifiedDate":"2024-04-15"},{"lineNumber":628,"author":{"gitId":"clarencepohh"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":629,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":630,"author":{"gitId":"clarencepohh"},"content":"#### Parameters","lastModifiedDate":"2024-03-29"},{"lineNumber":631,"author":{"gitId":"clarencepohh"},"content":"- tasksFromFile: A map containing tasks read from a file.","lastModifiedDate":"2024-03-29"},{"lineNumber":632,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":633,"author":{"gitId":"clarencepohh"},"content":"#### Exceptions","lastModifiedDate":"2024-04-15"},{"lineNumber":634,"author":{"gitId":"clarencepohh"},"content":"- `TaskManagerException`: Thrown if there is an error adding tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":635,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":636,"author":{"gitId":"clarencepohh"},"content":"#### Method Functionality","lastModifiedDate":"2024-03-29"},{"lineNumber":637,"author":{"gitId":"clarencepohh"},"content":"- Gets the map that contains all tasks from the save file, generated by `Storage.loadFilesFromFile`.","lastModifiedDate":"2024-03-29"},{"lineNumber":638,"author":{"gitId":"clarencepohh"},"content":"- Attempts to parse each individual task found in the list and add it to the currently-active instance of TaskManager.","lastModifiedDate":"2024-03-29"},{"lineNumber":639,"author":{"gitId":"clarencepohh"},"content":"- Logs any important messages to log file, if any.","lastModifiedDate":"2024-03-29"},{"lineNumber":640,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":641,"author":{"gitId":"clarencepohh"},"content":"## Storage component","lastModifiedDate":"2024-03-29"},{"lineNumber":642,"author":{"gitId":"kyhjonathan"},"content":"**API** : [Storage.java](https://github.com/AY2324S2-CS2113-W13-2/tp/blob/master/src/main/java/storage/Storage.java)","lastModifiedDate":"2024-03-27"},{"lineNumber":643,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":644,"author":{"gitId":"kyhjonathan"},"content":"The \u0027storage\u0027 component:","lastModifiedDate":"2024-03-27"},{"lineNumber":645,"author":{"gitId":"kyhjonathan"},"content":"* Creates new file if `./save/clintonData.txt` does not exist.","lastModifiedDate":"2024-04-15"},{"lineNumber":646,"author":{"gitId":"kyhjonathan"},"content":"* Reads tasks from the formatted `./save/clintonData.txt` file and appends to task hashmap.","lastModifiedDate":"2024-04-15"},{"lineNumber":647,"author":{"gitId":"kyhjonathan"},"content":"* Identifies unique tasks stored in task hashmap, parses and writes to `./save/clintonData.txt` file.","lastModifiedDate":"2024-04-15"},{"lineNumber":648,"author":{"gitId":"kyhjonathan"},"content":"* Handles exception if `./save/clintonData.txt` is in corrupted format.","lastModifiedDate":"2024-04-15"},{"lineNumber":649,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":650,"author":{"gitId":"kyhjonathan"},"content":"Below is a UML class diagram of the Storage component:","lastModifiedDate":"2024-04-15"},{"lineNumber":651,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":652,"author":{"gitId":"kyhjonathan"},"content":"![img.png](images/class/StorageClassDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":653,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":654,"author":{"gitId":"NicholasTanYY"},"content":"The `saveTasksToFile` method writes the tasks in a HashMap to the file in the following format:","lastModifiedDate":"2024-03-29"},{"lineNumber":655,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":656,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":657,"author":{"gitId":"kyhjonathan"},"content":"\u003cdate\u003e|\u003ctaskType\u003e|\u003cmarkedStatus\u003e|\u003cpriorityLevel\u003e|\u003ctaskDescription\u003e|\u003ctaskDetails\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":658,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":659,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":660,"author":{"gitId":"NicholasTanYY"},"content":"For example:","lastModifiedDate":"2024-03-29"},{"lineNumber":661,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":662,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":663,"author":{"gitId":"kyhjonathan"},"content":"2024-04-15|D|O|L|task 2|19/04/2024|1400","lastModifiedDate":"2024-04-15"},{"lineNumber":664,"author":{"gitId":"kyhjonathan"},"content":"2024-04-18|E|O|L|event 1|14/04/2024|19/04/2024|1200|1200","lastModifiedDate":"2024-04-15"},{"lineNumber":665,"author":{"gitId":"kyhjonathan"},"content":"2024-04-17|T|O|L|cs2113 deadline","lastModifiedDate":"2024-04-15"},{"lineNumber":666,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":667,"author":{"gitId":"NicholasTanYY"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":668,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":669,"author":{"gitId":"NicholasTanYY"},"content":"The `loadTasksFromFile` method reads the tasks from the file and populates the `TaskManager` with the loaded tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":671,"author":{"gitId":"kyhjonathan"},"content":"Shown below is the sequence diagram for \u0027saveTasksToFile\u0027 and \u0027loadTasksFromFile\u0027 methods:","lastModifiedDate":"2024-04-15"},{"lineNumber":672,"author":{"gitId":"kyhjonathan"},"content":"![img.png](images/sequence/SaveAndLoadSequenceDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":673,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":674,"author":{"gitId":"Mahesh1772"},"content":"## CommandHandler Component","lastModifiedDate":"2024-04-14"},{"lineNumber":675,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":676,"author":{"gitId":"Mahesh1772"},"content":"### API: [CommandHandler.java](https://github.com/AY2324S2-CS2113-W13-2/tp/blob/master/src/main/java/commandparser/CommandHandler.java)","lastModifiedDate":"2024-04-14"},{"lineNumber":677,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":678,"author":{"gitId":"Mahesh1772"},"content":"### Overview:","lastModifiedDate":"2024-04-14"},{"lineNumber":679,"author":{"gitId":"Mahesh1772"},"content":"The `CommandHandler` class is responsible for parsing user input, validating commands, and delegating the appropriate actions to the corresponding components, such as `TaskManager`, `WeekView`, and `MonthView`.","lastModifiedDate":"2024-04-14"},{"lineNumber":680,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":681,"author":{"gitId":"Mahesh1772"},"content":"### How it Works:","lastModifiedDate":"2024-04-14"},{"lineNumber":682,"author":{"gitId":"Mahesh1772"},"content":"1. When the user enters a command, the `handleCommand()` method is called.","lastModifiedDate":"2024-04-14"},{"lineNumber":683,"author":{"gitId":"Mahesh1772"},"content":"2. The method first prints the avatar using the `AvatarUi.printAvatar()` method.","lastModifiedDate":"2024-04-14"},{"lineNumber":684,"author":{"gitId":"Mahesh1772"},"content":"3. It then checks the current view mode (`inMonthView`) and calls the appropriate `printView()` method of `WeekView` or `MonthView` to display the current calendar view.","lastModifiedDate":"2024-04-14"},{"lineNumber":685,"author":{"gitId":"Mahesh1772"},"content":"4. The user\u0027s input is then parsed, and the appropriate command handling method is called, such as `handleNextCommand()`, `handleAddCommand()`, `handleDeleteCommand()`, etc.","lastModifiedDate":"2024-04-14"},{"lineNumber":686,"author":{"gitId":"Mahesh1772"},"content":"5. Each command handling method performs the necessary validations, processes the user input, and delegates the task to the appropriate component(s).","lastModifiedDate":"2024-04-14"},{"lineNumber":687,"author":{"gitId":"Mahesh1772"},"content":"6. The `printHelp()` method is called when the user enters the \"help\" command, displaying a list of available commands.","lastModifiedDate":"2024-04-14"},{"lineNumber":688,"author":{"gitId":"Mahesh1772"},"content":"7. The `handleQuitCommand()` method is called when the user enters the \"quit\" command, which exits the application.","lastModifiedDate":"2024-04-14"},{"lineNumber":689,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":690,"author":{"gitId":"Mahesh1772"},"content":"### `handleCommand()` Method","lastModifiedDate":"2024-04-14"},{"lineNumber":691,"author":{"gitId":"Mahesh1772"},"content":"The `handleCommand()` method is the entry point for processing user commands. It performs the following steps:","lastModifiedDate":"2024-04-14"},{"lineNumber":692,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":693,"author":{"gitId":"Mahesh1772"},"content":"1. Prints the avatar using `AvatarUi.printAvatar()`.","lastModifiedDate":"2024-04-14"},{"lineNumber":694,"author":{"gitId":"Mahesh1772"},"content":"2. Determines the current view mode (`inMonthView`) and calls the appropriate `printView()` method of `WeekView` or `MonthView`.","lastModifiedDate":"2024-04-14"},{"lineNumber":695,"author":{"gitId":"Mahesh1772"},"content":"3. Prompts the user to enter a command and reads the input using the `scanner`.","lastModifiedDate":"2024-04-14"},{"lineNumber":696,"author":{"gitId":"Mahesh1772"},"content":"4. Splits the input into command parts using `,\\s*` as the delimiter.","lastModifiedDate":"2024-04-14"},{"lineNumber":697,"author":{"gitId":"Mahesh1772"},"content":"5. Extracts the command from the first part of the input.","lastModifiedDate":"2024-04-14"},{"lineNumber":698,"author":{"gitId":"Mahesh1772"},"content":"6. Calls the corresponding command handling method based on the command, such as `handleNextCommand()`, `handleAddCommand()`, `handleDeleteCommand()`, etc.","lastModifiedDate":"2024-04-14"},{"lineNumber":699,"author":{"gitId":"Mahesh1772"},"content":"7. If the command is not recognized, it prints an error message.","lastModifiedDate":"2024-04-14"},{"lineNumber":700,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":701,"author":{"gitId":"Mahesh1772"},"content":"### Command Handling Methods","lastModifiedDate":"2024-04-14"},{"lineNumber":702,"author":{"gitId":"Mahesh1772"},"content":"The `CommandHandler` class provides various command handling methods, each responsible for processing a specific type of command. These methods perform the following tasks:","lastModifiedDate":"2024-04-14"},{"lineNumber":703,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":704,"author":{"gitId":"Mahesh1772"},"content":"1. **handleNextCommand()**: Advances the current view to the next week or month, depending on the current view mode.","lastModifiedDate":"2024-04-14"},{"lineNumber":705,"author":{"gitId":"Mahesh1772"},"content":"2. **handlePreviousCommand()**: Moves the current view to the previous week or month, depending on the current view mode.","lastModifiedDate":"2024-04-14"},{"lineNumber":706,"author":{"gitId":"Mahesh1772"},"content":"3. **handleUpdateCommand(String[] parts)**: Validates the update command format, extracts the necessary information (day, task index, new description), and updates the task using the `TaskManager.updateManager()` method.","lastModifiedDate":"2024-04-14"},{"lineNumber":707,"author":{"gitId":"Mahesh1772"},"content":"4. **handleAddCommand(String[] parts)**: Validates the add command format, extracts the necessary information (day, task type, task description), and adds the task using the `TaskManager.addManager()` method.","lastModifiedDate":"2024-04-14"},{"lineNumber":708,"author":{"gitId":"Mahesh1772"},"content":"5. **handleDeleteCommand(String[] parts)**: Validates the delete command format, extracts the necessary information (day, task index), and deletes the task using the `TaskManager.deleteManager()` method.","lastModifiedDate":"2024-04-14"},{"lineNumber":709,"author":{"gitId":"Mahesh1772"},"content":"6. **handleMarkCommand(String[] parts)**: Validates the mark command format, extracts the necessary information (day, task index), and marks the task as completed using the `TaskManager.markManager()` method.","lastModifiedDate":"2024-04-14"},{"lineNumber":710,"author":{"gitId":"Mahesh1772"},"content":"7. **handlePriorityCommand(String[] parts)**: Validates the priority command format, extracts the necessary information (day, task index, priority level), and sets the priority of the task using the `TaskManager.priorityManager()` method.","lastModifiedDate":"2024-04-14"},{"lineNumber":711,"author":{"gitId":"Mahesh1772"},"content":"8. **handleMonthCommand()**: Switches the view to the month view by calling the `monthView.printView(taskManager)` method and toggling the `inMonthView` flag.","lastModifiedDate":"2024-04-14"},{"lineNumber":712,"author":{"gitId":"Mahesh1772"},"content":"9. **handleWeekCommand()**: Switches the view to the week view by setting the `inMonthView` flag to `false`.","lastModifiedDate":"2024-04-14"},{"lineNumber":713,"author":{"gitId":"Mahesh1772"},"content":"10. **printHelp()**: Prints the help message, displaying the available commands and their descriptions.","lastModifiedDate":"2024-04-14"},{"lineNumber":714,"author":{"gitId":"Mahesh1772"},"content":"11. **handleQuitCommand()**: Exits the application.","lastModifiedDate":"2024-04-14"},{"lineNumber":715,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":716,"author":{"gitId":"kyhjonathan"},"content":"Below shows the UML Class Diagram for CommandParser.","lastModifiedDate":"2024-04-15"},{"lineNumber":717,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":718,"author":{"gitId":"Mahesh1772"},"content":"![CommandParser.png](images/class/CommandParser.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":719,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":720,"author":{"gitId":"Mahesh1772"},"content":"The `CommandHandler` class has dependencies on the `TaskManager`, `WeekView`, `MonthView`, and `StringParser` classes.","lastModifiedDate":"2024-04-14"},{"lineNumber":721,"author":{"gitId":"Mahesh1772"},"content":"The `Main` class creates instances of these classes and passes them to the `CommandHandler` constructor.","lastModifiedDate":"2024-04-14"},{"lineNumber":722,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":723,"author":{"gitId":"Aak242"},"content":"## Exceptions and Logging","lastModifiedDate":"2024-04-14"},{"lineNumber":724,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":725,"author":{"gitId":"Aak242"},"content":"### Exceptions","lastModifiedDate":"2024-04-14"},{"lineNumber":726,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":727,"author":{"gitId":"clarencepohh"},"content":"![Exceptions.png](images/class/Exceptions.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":728,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":729,"author":{"gitId":"Aak242"},"content":"The project utilizes centralized exception handling through the `TaskManagerException` class and its subclasses, ","lastModifiedDate":"2024-04-14"},{"lineNumber":730,"author":{"gitId":"Aak242"},"content":"`MarkTaskException` and `SetPriorityException`.","lastModifiedDate":"2024-04-14"},{"lineNumber":731,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":732,"author":{"gitId":"Aak242"},"content":"The `TaskManagerException` class serves as the base exception class, providing common functionality for handling ","lastModifiedDate":"2024-04-14"},{"lineNumber":733,"author":{"gitId":"Aak242"},"content":"exceptions related to the Task Manager. It includes methods to check the validity of dates, times, and task lists, ","lastModifiedDate":"2024-04-14"},{"lineNumber":734,"author":{"gitId":"Aak242"},"content":"and throws appropriate exceptions with corresponding error messages.","lastModifiedDate":"2024-04-14"},{"lineNumber":735,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":736,"author":{"gitId":"Aak242"},"content":"```java","lastModifiedDate":"2024-04-14"},{"lineNumber":737,"author":{"gitId":"Aak242"},"content":"public class TaskManagerException extends Exception {","lastModifiedDate":"2024-04-14"},{"lineNumber":738,"author":{"gitId":"kyhjonathan"},"content":"    public static final String NOT_CURRENT_WEEK_MESSAGE \u003d ","lastModifiedDate":"2024-04-15"},{"lineNumber":739,"author":{"gitId":"kyhjonathan"},"content":"            \"The date must be within the current week. Please try again.\";","lastModifiedDate":"2024-04-15"},{"lineNumber":740,"author":{"gitId":"kyhjonathan"},"content":"    public static final String NOT_CURRENT_MONTH_MESSAGE \u003d ","lastModifiedDate":"2024-04-15"},{"lineNumber":741,"author":{"gitId":"kyhjonathan"},"content":"            \"The date must be within the current month. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":742,"author":{"gitId":"Aak242"},"content":"            \"Please try again.\";","lastModifiedDate":"2024-04-14"},{"lineNumber":743,"author":{"gitId":"Aak242"},"content":"    // Other error message constants","lastModifiedDate":"2024-04-14"},{"lineNumber":744,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":745,"author":{"gitId":"Aak242"},"content":"    public TaskManagerException(String errorMessage) {","lastModifiedDate":"2024-04-14"},{"lineNumber":746,"author":{"gitId":"Aak242"},"content":"        super(errorMessage);","lastModifiedDate":"2024-04-14"},{"lineNumber":747,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":748,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":749,"author":{"gitId":"kyhjonathan"},"content":"    public static void checkIfDateInCurrentWeek(LocalDate date, WeekView weekView) ","lastModifiedDate":"2024-04-15"},{"lineNumber":750,"author":{"gitId":"kyhjonathan"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":751,"author":{"gitId":"Aak242"},"content":"        // Implementation to check if date is in current week","lastModifiedDate":"2024-04-14"},{"lineNumber":752,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":753,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":754,"author":{"gitId":"Aak242"},"content":"    // Other utility methods to check date, time, and task list validity","lastModifiedDate":"2024-04-14"},{"lineNumber":755,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":756,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":757,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":758,"author":{"gitId":"Aak242"},"content":"The `MarkTaskException` and `SetPriorityException` classes inherit from `TaskManagerException` and represent exceptions ","lastModifiedDate":"2024-04-14"},{"lineNumber":759,"author":{"gitId":"Aak242"},"content":"that occur when marking a task or setting the priority of a task, respectively. These classes define specific error ","lastModifiedDate":"2024-04-14"},{"lineNumber":760,"author":{"gitId":"Aak242"},"content":"messages and validation methods tailored to their respective use cases.","lastModifiedDate":"2024-04-14"},{"lineNumber":761,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":762,"author":{"gitId":"Aak242"},"content":"```java","lastModifiedDate":"2024-04-14"},{"lineNumber":763,"author":{"gitId":"Aak242"},"content":"public class MarkTaskException extends TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":764,"author":{"gitId":"kyhjonathan"},"content":"    public static final String TASK_INDEX_OUT_OF_RANGE_FOR_DAY_WITH_TASKS_MESSAGE \u003d ","lastModifiedDate":"2024-04-15"},{"lineNumber":765,"author":{"gitId":"kyhjonathan"},"content":"            \"The task index you attempted to \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":766,"author":{"gitId":"Aak242"},"content":"            \"mark is out of range!\";","lastModifiedDate":"2024-04-14"},{"lineNumber":767,"author":{"gitId":"kyhjonathan"},"content":"    public static final String TASK_INDEX_WITH_NO_TASKS_MESSAGE \u003d ","lastModifiedDate":"2024-04-15"},{"lineNumber":768,"author":{"gitId":"kyhjonathan"},"content":"            \"There are no tasks to mark on this day!\";","lastModifiedDate":"2024-04-15"},{"lineNumber":769,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":770,"author":{"gitId":"Aak242"},"content":"    public MarkTaskException(String errorMessage) {","lastModifiedDate":"2024-04-14"},{"lineNumber":771,"author":{"gitId":"Aak242"},"content":"        super(errorMessage);","lastModifiedDate":"2024-04-14"},{"lineNumber":772,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":773,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":774,"author":{"gitId":"kyhjonathan"},"content":"    public static void checkIfTaskIndexIsValidForMarkingTask(List\u003cTask\u003e dayTasks, ","lastModifiedDate":"2024-04-15"},{"lineNumber":775,"author":{"gitId":"kyhjonathan"},"content":"            int taskIndex) throws MarkTaskException {","lastModifiedDate":"2024-04-15"},{"lineNumber":776,"author":{"gitId":"Aak242"},"content":"        // Implementation to check if task index is valid for marking","lastModifiedDate":"2024-04-14"},{"lineNumber":777,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":778,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":779,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":780,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":781,"author":{"gitId":"Aak242"},"content":"The `StorageFileException` class is another exception class that is used to handle issues related to the storage of ","lastModifiedDate":"2024-04-14"},{"lineNumber":782,"author":{"gitId":"Aak242"},"content":"task data, such as invalid date formats in the task file.","lastModifiedDate":"2024-04-14"},{"lineNumber":783,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":784,"author":{"gitId":"Aak242"},"content":"```java","lastModifiedDate":"2024-04-14"},{"lineNumber":785,"author":{"gitId":"Aak242"},"content":"public class StorageFileException extends Exception {","lastModifiedDate":"2024-04-14"},{"lineNumber":786,"author":{"gitId":"Aak242"},"content":"    public StorageFileException(String errorMessage) {","lastModifiedDate":"2024-04-14"},{"lineNumber":787,"author":{"gitId":"Aak242"},"content":"        super(errorMessage);","lastModifiedDate":"2024-04-14"},{"lineNumber":788,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":789,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":790,"author":{"gitId":"kyhjonathan"},"content":"    public static void checkStorageTextDateFormat(String date) ","lastModifiedDate":"2024-04-15"},{"lineNumber":791,"author":{"gitId":"kyhjonathan"},"content":"            throws StorageFileException {","lastModifiedDate":"2024-04-15"},{"lineNumber":792,"author":{"gitId":"Aak242"},"content":"        // Implementation to check if date format in storage file is valid","lastModifiedDate":"2024-04-14"},{"lineNumber":793,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":794,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":795,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":796,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":797,"author":{"gitId":"Aak242"},"content":"All exceptions thrown in the project are caught and handled appropriately, ensuring a consistent user experience and ","lastModifiedDate":"2024-04-14"},{"lineNumber":798,"author":{"gitId":"Aak242"},"content":"providing meaningful error messages to the user.","lastModifiedDate":"2024-04-14"},{"lineNumber":799,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":800,"author":{"gitId":"Aak242"},"content":"### Logging","lastModifiedDate":"2024-04-14"},{"lineNumber":801,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":802,"author":{"gitId":"Aak242"},"content":"The project also utilizes a centralized logging mechanism through the `FileLogger` class. This class sets up a global ","lastModifiedDate":"2024-04-14"},{"lineNumber":803,"author":{"gitId":"Aak242"},"content":"logger that writes logs to a file located at `./logs.log`.","lastModifiedDate":"2024-04-14"},{"lineNumber":804,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":805,"author":{"gitId":"Aak242"},"content":"```java","lastModifiedDate":"2024-04-14"},{"lineNumber":806,"author":{"gitId":"Aak242"},"content":"public class FileLogger {","lastModifiedDate":"2024-04-14"},{"lineNumber":807,"author":{"gitId":"Aak242"},"content":"    private static final Path LOG_FILE_PATH \u003d Path.of(\"./logs.log\");","lastModifiedDate":"2024-04-14"},{"lineNumber":808,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":809,"author":{"gitId":"Aak242"},"content":"    public static void setupLogger() {","lastModifiedDate":"2024-04-14"},{"lineNumber":810,"author":{"gitId":"Aak242"},"content":"        try {","lastModifiedDate":"2024-04-14"},{"lineNumber":811,"author":{"gitId":"Aak242"},"content":"            Logger fileLogger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-04-14"},{"lineNumber":812,"author":{"gitId":"Aak242"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE_PATH.toString(), true);","lastModifiedDate":"2024-04-14"},{"lineNumber":813,"author":{"gitId":"Aak242"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2024-04-14"},{"lineNumber":814,"author":{"gitId":"Aak242"},"content":"            fileLogger.setUseParentHandlers(false);","lastModifiedDate":"2024-04-14"},{"lineNumber":815,"author":{"gitId":"Aak242"},"content":"            fileLogger.addHandler(fileHandler);","lastModifiedDate":"2024-04-14"},{"lineNumber":816,"author":{"gitId":"Aak242"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":817,"author":{"gitId":"Aak242"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-04-14"},{"lineNumber":818,"author":{"gitId":"Aak242"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":819,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":820,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":821,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":822,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":823,"author":{"gitId":"Aak242"},"content":"The logging is performed using the standard Java `java.util.logging.Logger` API. The `FileLogger` class sets up a ","lastModifiedDate":"2024-04-14"},{"lineNumber":824,"author":{"gitId":"Aak242"},"content":"`FileHandler` to write the logs to the specified file, and a `SimpleFormatter` is used to format the log entries.","lastModifiedDate":"2024-04-14"},{"lineNumber":825,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":826,"author":{"gitId":"Aak242"},"content":"Logging is used throughout the codebase to record relevant events, such as when tasks are added, updated, or deleted, ","lastModifiedDate":"2024-04-14"},{"lineNumber":827,"author":{"gitId":"Aak242"},"content":"and when exceptions are thrown. For example, the `updateEventLogging` method demonstrates how logging is used to record ","lastModifiedDate":"2024-04-14"},{"lineNumber":828,"author":{"gitId":"Aak242"},"content":"changes to an event task\u0027s description, start date, end date, start time, and end time.","lastModifiedDate":"2024-04-14"},{"lineNumber":829,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":830,"author":{"gitId":"Aak242"},"content":"```java","lastModifiedDate":"2024-04-14"},{"lineNumber":831,"author":{"gitId":"Aak242"},"content":"private static void updateEventLogging(String newTaskDescription,","lastModifiedDate":"2024-04-14"},{"lineNumber":832,"author":{"gitId":"kyhjonathan"},"content":"                                       String oldDescription, Event oldEvent, ","lastModifiedDate":"2024-04-15"},{"lineNumber":833,"author":{"gitId":"kyhjonathan"},"content":"                                       String[] newDatesAndTimes) {","lastModifiedDate":"2024-04-15"},{"lineNumber":834,"author":{"gitId":"Aak242"},"content":"    logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":835,"author":{"gitId":"Aak242"},"content":"            oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-04-14"},{"lineNumber":836,"author":{"gitId":"Aak242"},"content":"    logger.log(Level.INFO, \"Updating task start date from \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":837,"author":{"gitId":"Aak242"},"content":"            oldEvent.getStartDate() + \" to: \" + newDatesAndTimes[0]);","lastModifiedDate":"2024-04-14"},{"lineNumber":838,"author":{"gitId":"kyhjonathan"},"content":"    logger.log(Level.INFO, \"Updating task end date from \" + oldEvent.getEndDate()","lastModifiedDate":"2024-04-15"},{"lineNumber":839,"author":{"gitId":"kyhjonathan"},"content":"            + \" to: \" + newDatesAndTimes[1]);","lastModifiedDate":"2024-04-15"},{"lineNumber":840,"author":{"gitId":"kyhjonathan"},"content":"    logger.log(Level.INFO, \"Updating task start time from \" + oldEvent.getStartTime() ","lastModifiedDate":"2024-04-15"},{"lineNumber":841,"author":{"gitId":"kyhjonathan"},"content":"            + \" to: \" + newDatesAndTimes[2]);","lastModifiedDate":"2024-04-15"},{"lineNumber":842,"author":{"gitId":"kyhjonathan"},"content":"    logger.log(Level.INFO, \"Updating task end time from \" + oldEvent.getEndTime()","lastModifiedDate":"2024-04-15"},{"lineNumber":843,"author":{"gitId":"kyhjonathan"},"content":"            + \" to: \" + newDatesAndTimes[3]);","lastModifiedDate":"2024-04-15"},{"lineNumber":844,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":845,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":846,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":847,"author":{"gitId":"Aak242"},"content":"The use of centralized logging allows for easy monitoring and analysis of the application\u0027s behavior, which can be ","lastModifiedDate":"2024-04-14"},{"lineNumber":848,"author":{"gitId":"Aak242"},"content":"helpful during development and for troubleshooting issues in the production environment.","lastModifiedDate":"2024-04-14"},{"lineNumber":849,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":850,"author":{"gitId":"kyhjonathan"},"content":"## Exporting .ics File Component (For future development)","lastModifiedDate":"2024-04-15"},{"lineNumber":851,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":852,"author":{"gitId":"kyhjonathan"},"content":"The \u0027ics\u0027 component:","lastModifiedDate":"2024-03-28"},{"lineNumber":853,"author":{"gitId":"kyhjonathan"},"content":"* Exports the tasks in the task hashmap to a .ics file that can be imported into calendar applications","lastModifiedDate":"2024-03-28"},{"lineNumber":854,"author":{"gitId":"kyhjonathan"},"content":"* Import tasks from external .ics file into the task hashmap","lastModifiedDate":"2024-03-28"},{"lineNumber":855,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":856,"author":{"gitId":"clarencepohh"},"content":"# Appendix: Requirements","lastModifiedDate":"2024-04-15"},{"lineNumber":857,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":858,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":860,"author":{"gitId":"Aak242"},"content":"Our target users are those require a calendar or task-management application but do not like clicking through multiple ","lastModifiedDate":"2024-04-14"},{"lineNumber":861,"author":{"gitId":"Aak242"},"content":"window prompts just to do so.","lastModifiedDate":"2024-04-14"},{"lineNumber":862,"author":{"gitId":"Aak242"},"content":"These are people who know their way around a keyboard *well* and can swiftly type their required commands accurately. ","lastModifiedDate":"2024-04-14"},{"lineNumber":863,"author":{"gitId":"Aak242"},"content":"We expect these individuals to be busy and want to keep on top of their tasks, so this application will serve their ","lastModifiedDate":"2024-04-14"},{"lineNumber":864,"author":{"gitId":"Aak242"},"content":"needs of quick data entry and task-management functions. ","lastModifiedDate":"2024-04-14"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":866,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":868,"author":{"gitId":"Aak242"},"content":"CLI-nton takes the pros of a GUI based calendar and integrates it with the efficiency of CLI-based inputs to achieve ","lastModifiedDate":"2024-04-14"},{"lineNumber":869,"author":{"gitId":"Aak242"},"content":"fast data entry while still maintaining the visual clarity that is expected of a calendar application. ","lastModifiedDate":"2024-04-14"},{"lineNumber":870,"author":{"gitId":"Aak242"},"content":"Most calendar applications require users to navigate their interface using both mouse and keyboard inputs, ","lastModifiedDate":"2024-04-14"},{"lineNumber":871,"author":{"gitId":"Aak242"},"content":"which can feel clunky and troublesome - especially when they have to navigate through many windows just to add one event","lastModifiedDate":"2024-04-14"},{"lineNumber":872,"author":{"gitId":"Aak242"},"content":"to their calendar. This application is made to benefit those who type quickly and accurately, allowing them to ","lastModifiedDate":"2024-04-14"},{"lineNumber":873,"author":{"gitId":"Aak242"},"content":"quickly create entries in their calendar. ","lastModifiedDate":"2024-04-14"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":875,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":877,"author":{"gitId":"clarencepohh"},"content":"| Version | As a ...     | I want to ...                                                                | So that I ...                                                               |","lastModifiedDate":"2024-04-09"},{"lineNumber":878,"author":{"gitId":"clarencepohh"},"content":"|---------|--------------|------------------------------------------------------------------------------|-----------------------------------------------------------------------------|","lastModifiedDate":"2024-04-09"},{"lineNumber":879,"author":{"gitId":"clarencepohh"},"content":"| v1.0    | new user     | be able to save my tasks                                                     | can still see my tasks even after I exit out of the program                 |","lastModifiedDate":"2024-04-09"},{"lineNumber":880,"author":{"gitId":"clarencepohh"},"content":"| v1.0    | user         | to create events in a calendar                                               | can plan my day-to-day routine                                              |","lastModifiedDate":"2024-04-09"},{"lineNumber":881,"author":{"gitId":"clarencepohh"},"content":"| v1.0    | user         | view the calendar with all my appointments                                   | do not miss out on any important commitments                                |","lastModifiedDate":"2024-04-09"},{"lineNumber":882,"author":{"gitId":"clarencepohh"},"content":"| v1.0    | user         | be able to edit and update any tasks I may have already added                | can correct any mistakes or update them to reflect changes in my priorities |","lastModifiedDate":"2024-04-09"},{"lineNumber":883,"author":{"gitId":"clarencepohh"},"content":"| v1.0    | user         | add tasks to be displayed                                                    | can keep track of them easily and not forget them                           |","lastModifiedDate":"2024-04-09"},{"lineNumber":884,"author":{"gitId":"clarencepohh"},"content":"| v1.0    | user         | remove/delete tasks that I\u0027ve completed                                      | keep my tasks as up-to-date as possible                                     |","lastModifiedDate":"2024-04-09"},{"lineNumber":885,"author":{"gitId":"clarencepohh"},"content":"| v1.0    | user         | be able to interact with program using just the CLI                          | can use the program with little to no mouse inputs                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":886,"author":{"gitId":"clarencepohh"},"content":"| v2.0    | new user     | have a quick tutorial/help page                                              | can find out how to use the program clearly                                 |","lastModifiedDate":"2024-04-09"},{"lineNumber":887,"author":{"gitId":"clarencepohh"},"content":"| v2.0    | user         | be able to tag and categorize tasks and events                               | can organize my schedule more effectively                                   |","lastModifiedDate":"2024-04-09"},{"lineNumber":888,"author":{"gitId":"clarencepohh"},"content":"| v2.0    | user         | add, remove and edit tasks with fewer keystrokes                             | manage my busy schedule more efficiently                                    |","lastModifiedDate":"2024-04-09"},{"lineNumber":889,"author":{"gitId":"clarencepohh"},"content":"| v2.0    | user         | set priority levels for tasks and events                                     | can easily identify what requires immediate attention                       |","lastModifiedDate":"2024-04-09"},{"lineNumber":890,"author":{"gitId":"clarencepohh"},"content":"| v2.0    | user         | have a deeper connection with the application with the addition of an avatar | feel more engaged when using the application.                               |","lastModifiedDate":"2024-04-09"},{"lineNumber":891,"author":{"gitId":"clarencepohh"},"content":"| v2.0    | user         | be able to mark tasks as complete                                            | can keep track of what I have left to do.                                   |","lastModifiedDate":"2024-04-09"},{"lineNumber":892,"author":{"gitId":"clarencepohh"},"content":"| v2.0    | user         | have the application look neat                                               | will be more motivated to use the application                               |","lastModifiedDate":"2024-04-09"},{"lineNumber":893,"author":{"gitId":"clarencepohh"},"content":"| v2.0    | busy student | be able to see different views (week/month) on the calendar                  | can see my week/month at a glance                                           |","lastModifiedDate":"2024-04-09"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":895,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":897,"author":{"gitId":"clarencepohh"},"content":"1. Should work on Linux, macOS, Unix and Windows as long as Java `11` is installed.","lastModifiedDate":"2024-04-09"},{"lineNumber":898,"author":{"gitId":"kyhjonathan"},"content":"2. A user with with an average typing speed should be able to add a task faster using commands than a mouse.","lastModifiedDate":"2024-04-15"},{"lineNumber":899,"author":{"gitId":"kyhjonathan"},"content":"3. The application will be free for all users","lastModifiedDate":"2024-04-15"},{"lineNumber":900,"author":{"gitId":"kyhjonathan"},"content":"4. The application should be able to work on typical CLI interface without the need of third-party software","lastModifiedDate":"2024-04-15"},{"lineNumber":901,"author":{"gitId":"kyhjonathan"},"content":"5. The application should be able to repond in no more than 5 seconds for any command","lastModifiedDate":"2024-04-15"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":903,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":905,"author":{"gitId":"clarencepohh"},"content":"* *.ics file* - The Internet Calendaring and Scheduling Core Object Specification (iCalendar) is a media type which allows users to store and exchange calendaring and scheduling information ","lastModifiedDate":"2024-04-09"},{"lineNumber":906,"author":{"gitId":"clarencepohh"},"content":"such as events, to-dos, journal entries, and free/busy information, and together with its associated standards has been a cornerstone of the standardization and interoperability of digital ","lastModifiedDate":"2024-04-09"},{"lineNumber":907,"author":{"gitId":"clarencepohh"},"content":"calendars across different vendors. Files formatted according to this specification usually have an extension of .ics. [(1)](https://en.wikipedia.org/wiki/ICalendar)","lastModifiedDate":"2024-04-09"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":909,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":910,"author":{"gitId":"clarencepohh"},"content":"Please take a look at our [User Guide](UserGuide.md) for a list of usable commands and their uses.","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"clarencepohh":184,"NicholasTanYY":102,"Mahesh1772":179,"Aak242":313,"-":29,"kyhjonathan":103}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"# CLI-nton","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"Welcome to CLI-nton, a powerful task management application designed to help you stay organized and productive. With a simple command-line interface, CLI-nton makes it easy to manage your tasks, whether they\u0027re todos, deadlines, or events.","lastModifiedDate":"2024-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Mahesh1772":1,"clarencepohh":1,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Aak242"},"content":"# CLI-nton Task Management User Guide","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"This user guide provides comprehensive instructions on how to use CLI-nton, from getting started to using advanced features. Whether you\u0027re a new user or an experienced one, this guide is designed to help you get the most out of CLI-nton.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"Read on to learn how to manage your tasks efficiently with CLI-nton!","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"### Table of Contents","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"* [Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"* [Features](#features)","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"  * [Moving to Next Week or Month: `next`](#moving-to-next-week-or-month-next)","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"  * [Moving to Previous Week or Month: `prev`](#moving-to-previous-week-or-month-prev)","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"  * [Switching to Month View: `month`](#switching-to-month-view-month)","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"  * [Switching to Week View: `week`](#switching-to-week-view-week)","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"  * [Adding a New Task: `add`](#adding-a-new-task-add)","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"    * [Adding a `Todo`](#adding-a-todo)","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"    * [Adding a `Deadline`](#adding-a-deadline)","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    * [Adding an `Event`](#adding-an-event)","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"    * [Notes to users](#notes-to-users)","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"  * [Updating a Task Description: `update`](#updating-a-task-description-update)","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"    * [Updating a `Todo`:](#updating-a-todo)","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    * [Updating a `Deadline`:](#updating-a-deadline)","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    * [Updating an `Event`:](#updating-an-event)","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"  * [Deleting a Task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"  * [Marking a Task as Complete or Incomplete: `mark`](#marking-a-task-as-complete-or-incomplete-mark)","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"  * [Setting Priority Level for a Task: `priority`](#setting-priority-level-for-a-task-priority)","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"  * [Quitting the Application: `quit`](#quitting-the-application-quit)","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"  * [ICS Exporting and Importing: `ics`](#ics-exporting-and-importing-ics-coming-in-v21)","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"* [FAQ](#faq)","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"Aak242"},"content":"To quickly get started with CLI-nton, follow these simple steps:","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"Aak242"},"content":"1. Ensure that you have Java 11 or above installed on your system.","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"2. Download the latest version of `CLI-nton` from [here](https://github.com/AY2324S2-CS2113-W13-2/tp/releases).","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"Aak242"},"content":"3. Open a command terminal and navigate to the directory where you downloaded CLI-nton.","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"Aak242"},"content":"4. Run the application using the command `java -jar clinton.jar`.","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"Aak242"},"content":"5. You\u0027re all set to start managing your tasks efficiently!","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"Aak242"},"content":"CLI-nton offers a variety of features to streamline your task management process:","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"kyhjonathan"},"content":"Here are the sections for the User Guide covering the `next`, `prev`, `month`, `week`, `add`, `update`, `delete`, `priority`, `mark`, `free` and `quit` commands:","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"Aak242"},"content":"### Moving to Next Week or Month: `next`","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"The `next` command allows you to move to the next week or next month, depending on whether you are currently in the week or month view.","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"**Usage:**","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"Aak242"},"content":"next","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"**Examples:**","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"If you are currently in the **Week view:**","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"![Example console outputs before using next command for WeekView](images/WeekView-Next-Before-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"The application will move to the following week view, displaying the following week.","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"![Example console outputs after using next command for WeekView](images/WeekView-Next-After-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"If you are currently in the **Month view:**","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"![Example console outputs before using next command for MonthView](images/MonthView-Next-Before-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"The application will move to the next month view, displaying the following month.","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"![Example console outputs after using next command for MonthView](images/MonthView-Next-After-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"Aak242"},"content":"### Moving to Previous Week or Month: `prev`","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"The `prev` command allows you to move to the previous week or previous month, depending on whether you are currently in the week or month view.","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"Mahesh1772"},"content":"**Usage:**","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"Aak242"},"content":"prev","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"**Example:**","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"If you are currently in the **Week view:**","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"![Example console outputs before using prev command for WeekView](images/WeekView-Next-After-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"The application will move to the previous week view, displaying the week prior.","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"![Example console outputs after using prev command for WeekView](images/WeekView-Next-Before-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"If you are currently in the **Month view:**","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":102,"author":{"gitId":"clarencepohh"},"content":"![Example console outputs before using prev command for MonthView](images/MonthView-Next-After-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":103,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"The application will move to the previous month view, displaying the month prior.","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"clarencepohh"},"content":"![Example console outputs after using prev command for MonthView](images/MonthView-Next-Before-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"### Switching to Month View: `month`","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"kyhjonathan"},"content":"The `month` command allows you to switch to the month view from week view.","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"Mahesh1772"},"content":"**Usage:**","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"Mahesh1772"},"content":"month","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"Mahesh1772"},"content":"**Example:**","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"Mahesh1772"},"content":"If you are currently in the week view:","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"clarencepohh"},"content":"![Example console outputs before changing WeekView to MonthView](images/Week-To-Month-View-Before-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":123,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":124,"author":{"gitId":"Mahesh1772"},"content":"The application will switch to the month view from week view and current month will be displayed.","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"clarencepohh"},"content":"![Example console outputs after changing WeekView to MonthView](images/Week-To-Month-View-After-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":127,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"Mahesh1772"},"content":"### Switching to Week View: `week`","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"kyhjonathan"},"content":"The `week` command allows you to switch to the week view from month view.","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"Mahesh1772"},"content":"**Usage:**","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"Mahesh1772"},"content":"week","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"Mahesh1772"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"Mahesh1772"},"content":"**Example:**","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"Mahesh1772"},"content":"If you are currently in the **Month view:**","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"clarencepohh"},"content":"![MonthView Display](images/Week-To-Month-View-After-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":143,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"Mahesh1772"},"content":"The application will switch to the **Week view.**","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"clarencepohh"},"content":"![Example console outputs after changing MonthView to WeekView](images/Month-To-Week-View-After-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":147,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"Aak242"},"content":"### Adding a New Task: `add`","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"clarencepohh"},"content":"\u003e Note that there are 3 different types of tasks: Todos, Events and Deadlines.","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"clarencepohh"},"content":"\u003e This section details how to add all 3 types of tasks to your calendar.","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"clarencepohh"},"content":"Adds a new task to the calendar.","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"Mahesh1772"},"content":"Format: `add, \u003cday number\u003e, \u003ctaskType\u003e, \u003ctaskDescription\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"clarencepohh"},"content":"You will be prompted on further inputs based on your desired task type.","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"clarencepohh"},"content":"#### Adding a `Todo`","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"clarencepohh"},"content":"\u003e Todos are regular tasks with no time limit!","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"Mahesh1772"},"content":"Format to add a `Todo`: `add, \u003cday number\u003e, T, \u003ctodo description\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"Mahesh1772"},"content":"Your Todo Task is now added to your calendar on the selected day (of whichever week/month you are viewing)!","lastModifiedDate":"2024-04-15"},{"lineNumber":164,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"Mahesh1772"},"content":"Here\u0027s what that would look like in week view:","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":167,"author":{"gitId":"clarencepohh"},"content":"![Todo Adding Example Console Inputs and Outputs](images/Todo-Example.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"Mahesh1772"},"content":"Here\u0027s what that would look like in month view:","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":171,"author":{"gitId":"Mahesh1772"},"content":"![AddTodoInMonthView.png](images/AddTodoInMonthView.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":172,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":173,"author":{"gitId":"Mahesh1772"},"content":"The Todos are represented by blue parenthesis, and they are empty indicating  the todo is not marked.","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"clarencepohh"},"content":"#### Adding a `Deadline`","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"clarencepohh"},"content":"\u003e Deadlines are tasks with an additional date/time of completion!","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"Mahesh1772"},"content":"Format to add a `Deadline`: `add, \u003cday number\u003e, D, \u003cdeadline description\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"clarencepohh"},"content":"You will then be asked to provide the deadline (date and time) for this task in the format `\"DD/MM/YYYY HHMM\"`.","lastModifiedDate":"2024-04-08"},{"lineNumber":181,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"clarencepohh"},"content":"`Enter the deadline date and time of this task, separated by a space: `","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"clarencepohh"},"content":"Example format: `06/04/2024 1800`","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"Mahesh1772"},"content":"Your Deadline Task is now added to your calendar on the selected day (of whichever week/month you are viewing)!","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"Mahesh1772"},"content":"Here\u0027s what that would look like in week view:","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":190,"author":{"gitId":"clarencepohh"},"content":"![Deadline Adding Example Console Inputs and Outputs](images/Deadline-Example.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"Mahesh1772"},"content":"Here\u0027s what that would look like in month view:","lastModifiedDate":"2024-04-15"},{"lineNumber":193,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":194,"author":{"gitId":"Mahesh1772"},"content":"![AddDeadlineInMonthView.png](images/AddDeadlineInMonthView.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":195,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":196,"author":{"gitId":"Mahesh1772"},"content":"The Deadlines are represented by yellow parenthesis, and they are empty indicating  the deadline is not marked.","lastModifiedDate":"2024-04-15"},{"lineNumber":197,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"clarencepohh"},"content":"#### Adding an `Event`","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"clarencepohh"},"content":"\u003e Events are tasks with a start and end date/time!","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"Mahesh1772"},"content":"Format to add an `Event`: `add, \u003cday number\u003e, E, \u003cevent description here\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":202,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"clarencepohh"},"content":"You will then be asked to provide the start and end dates/times for this task in the format `\"DD/MM/YYYY HHMM\"`.","lastModifiedDate":"2024-04-08"},{"lineNumber":204,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"clarencepohh"},"content":"`Enter the start date of this task, along with the start time separated by a space: `","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"clarencepohh"},"content":"Example format: `05/04/2024 1200`","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"clarencepohh"},"content":"`Enter the end date of this task, along with the end time separated by a space: `","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"clarencepohh"},"content":"Example format: `07/05/2024 2000`","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"Mahesh1772"},"content":"Your Event Task is now added to your calendar on the selected day (of whichever week/month you are viewing)!","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"Mahesh1772"},"content":"Here\u0027s what that would look like in week view:","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":217,"author":{"gitId":"clarencepohh"},"content":"![Event Adding Example Console Inputs and Outputs](images/Event-Example.png)","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"Mahesh1772"},"content":"Here\u0027s what that would look like in month view:","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"Mahesh1772"},"content":"![AddEventInMonthView.png](images/AddEventInMonthView.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"Mahesh1772"},"content":"The Events are represented by red parenthesis, and they are empty indicating the event is not marked.","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"clarencepohh"},"content":"#### **Notes to users**","lastModifiedDate":"2024-04-02"},{"lineNumber":226,"author":{"gitId":"kyhjonathan"},"content":"\u003e Dashes`-`, Slashes`/`, Commas`,` and pipes`|` are used in our application as delimiters and separators in our storage file(clintonData.txt).","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"kyhjonathan"},"content":"\u003e ","lastModifiedDate":"2024-04-15"},{"lineNumber":228,"author":{"gitId":"kyhjonathan"},"content":"\u003e Please avoid using these in your task descriptions as it could lead to parsing errors or storage issues during the writing and reading of the storage file.","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"clarencepohh"},"content":"\u003e ","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"clarencepohh"},"content":"\u003e You have been **informed**!","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":232,"author":{"gitId":"Aak242"},"content":"### Updating a Task Description: `update`","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"Aak242"},"content":"\u003eYou can update the description of a task using the `update` command. This command allows you to change the description of a task on a specific day for todos, or additionally also change the date and time for deadlines and events.","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"Mahesh1772"},"content":"Format to update a task Description: `update, \u003cday number\u003e, \u003ctask index\u003e, \u003cnew description\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":237,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"Aak242"},"content":"You will be prompted on further inputs based on the task type you seek to update.","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"Aak242"},"content":"#### Updating a `Todo`:","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"Mahesh1772"},"content":"update, \u003cday number\u003e, \u003ctask index\u003e, \u003cnew todo description\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":246,"author":{"gitId":"clarencepohh"},"content":"Your Todo will now be updated to `\"\u003cnew todo description\u003e\"` on the 31st (of whichever week/month you are viewing)!","lastModifiedDate":"2024-04-08"},{"lineNumber":247,"author":{"gitId":"Aak242"},"content":"Here\u0027s a sample of what that would look like:","lastModifiedDate":"2024-04-03"},{"lineNumber":248,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":249,"author":{"gitId":"Aak242"},"content":"![Todo Update Example](images/Update-Todo-Example.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":250,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"Aak242"},"content":"After updating the todo, the task will be displayed as follows:","lastModifiedDate":"2024-04-03"},{"lineNumber":252,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":253,"author":{"gitId":"Aak242"},"content":"![Todo Updated Example](images/Update-Todo-Example-After.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":254,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":255,"author":{"gitId":"Aak242"},"content":"#### Updating a `Deadline`:","lastModifiedDate":"2024-04-03"},{"lineNumber":256,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":257,"author":{"gitId":"Aak242"},"content":"To update a Deadline, follow this format:","lastModifiedDate":"2024-04-03"},{"lineNumber":258,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":259,"author":{"gitId":"Mahesh1772"},"content":"update, \u003cday number\u003e, \u003ctask index\u003e, \u003cnew deadline description\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":260,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":261,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":262,"author":{"gitId":"clarencepohh"},"content":"Your Deadline Task will be updated to `\"\u003cnew deadline description\u003e\"` on the 31st! You will then be prompted to provide the ","lastModifiedDate":"2024-04-08"},{"lineNumber":263,"author":{"gitId":"Aak242"},"content":"updated deadline date and time, if desired.","lastModifiedDate":"2024-04-03"},{"lineNumber":264,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":265,"author":{"gitId":"Aak242"},"content":"Here\u0027s a visual representation of the update process:","lastModifiedDate":"2024-04-03"},{"lineNumber":266,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":267,"author":{"gitId":"clarencepohh"},"content":"![Example console inputs for updating a Deadline Task](images/Update-Deadline-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":268,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":269,"author":{"gitId":"Aak242"},"content":"After the update, the task will be displayed as follows:","lastModifiedDate":"2024-04-03"},{"lineNumber":270,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":271,"author":{"gitId":"clarencepohh"},"content":"![Example calendar display after updating a Deadline Task](images/Update-Deadline-Example_After.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":272,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":273,"author":{"gitId":"Aak242"},"content":"#### Updating an `Event`:","lastModifiedDate":"2024-04-03"},{"lineNumber":274,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":275,"author":{"gitId":"Aak242"},"content":"To update an Event, use the following format:","lastModifiedDate":"2024-04-03"},{"lineNumber":276,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":277,"author":{"gitId":"Mahesh1772"},"content":"update, \u003cday number\u003e, \u003ctask index\u003e, \u003cnew event description\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":279,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":280,"author":{"gitId":"clarencepohh"},"content":"Your Event Task will be updated to `\"\u003cnew event description\u003e\"` on the 1st! You will then be prompted to provide the updated ","lastModifiedDate":"2024-04-08"},{"lineNumber":281,"author":{"gitId":"Aak242"},"content":"start and end dates/times for the event.","lastModifiedDate":"2024-04-03"},{"lineNumber":282,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":283,"author":{"gitId":"Aak242"},"content":"Here\u0027s an example illustrating the update process:","lastModifiedDate":"2024-04-03"},{"lineNumber":284,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":285,"author":{"gitId":"clarencepohh"},"content":"![Example console inputs for updating an Event Task](images/Updated-Event-Example.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":286,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":287,"author":{"gitId":"Aak242"},"content":"After the update, the task will be displayed as follows:","lastModifiedDate":"2024-04-03"},{"lineNumber":288,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":289,"author":{"gitId":"clarencepohh"},"content":"![Example calendar display after updating an Event Task](images/Updated-Event-Example-After.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":290,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":291,"author":{"gitId":"Aak242"},"content":"By following these instructions, you can efficiently update task descriptions in your calendar, ensuring accurate and ","lastModifiedDate":"2024-04-03"},{"lineNumber":292,"author":{"gitId":"Aak242"},"content":"up-to-date scheduling.","lastModifiedDate":"2024-04-03"},{"lineNumber":293,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":294,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":295,"author":{"gitId":"Aak242"},"content":"### Deleting a Task: `delete`","lastModifiedDate":"2024-04-02"},{"lineNumber":296,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":297,"author":{"gitId":"Aak242"},"content":"Deletes a task.","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":299,"author":{"gitId":"Mahesh1772"},"content":"Format: `delete, \u003cday number\u003e, \u003ctaskIndex\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":300,"author":{"gitId":"kyhjonathan"},"content":"- Deletes the task at the specified index on the given day","lastModifiedDate":"2024-04-02"},{"lineNumber":301,"author":{"gitId":"kyhjonathan"},"content":"- Shows an error message if the task index does not exist","lastModifiedDate":"2024-04-02"},{"lineNumber":302,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":303,"author":{"gitId":"kyhjonathan"},"content":"Here\u0027s an example on how to delete a task from your calendar:","lastModifiedDate":"2024-04-15"},{"lineNumber":304,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":305,"author":{"gitId":"kyhjonathan"},"content":"This is how your calender would look like in Week View before deleting a task:","lastModifiedDate":"2024-04-15"},{"lineNumber":306,"author":{"gitId":"kyhjonathan"},"content":"![img.png](images/Before-Deletion-Week_View.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":307,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"kyhjonathan"},"content":"This is how your calender would look like in Week View after deleting a task:","lastModifiedDate":"2024-04-15"},{"lineNumber":309,"author":{"gitId":"kyhjonathan"},"content":"![img.png](images/After-Deletion-Week-View.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":310,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":311,"author":{"gitId":"kyhjonathan"},"content":"The behaviour of the program would be the same in Month View as well.","lastModifiedDate":"2024-04-15"},{"lineNumber":312,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":313,"author":{"gitId":"kyhjonathan"},"content":"If the task that is being attempted to be deleted does not exist, an error message will be displayed ","lastModifiedDate":"2024-04-15"},{"lineNumber":314,"author":{"gitId":"kyhjonathan"},"content":"(*So please make sure you check the correct dates!*).","lastModifiedDate":"2024-04-15"},{"lineNumber":315,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":316,"author":{"gitId":"Aak242"},"content":"### Marking a Task as Complete or Incomplete: `mark`","lastModifiedDate":"2024-04-02"},{"lineNumber":317,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":318,"author":{"gitId":"Aak242"},"content":"Marks a task as complete or not complete.","lastModifiedDate":"2024-04-02"},{"lineNumber":319,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":320,"author":{"gitId":"Mahesh1772"},"content":"Format: `mark, \u003cday number\u003e, \u003ctaskIndex\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":321,"author":{"gitId":"NicholasTanYY"},"content":"- Marks task as complete if it is incomplete","lastModifiedDate":"2024-04-02"},{"lineNumber":322,"author":{"gitId":"NicholasTanYY"},"content":"- Marks task as incomplete if it is complete","lastModifiedDate":"2024-04-02"},{"lineNumber":323,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":324,"author":{"gitId":"Aak242"},"content":"Example of usage:","lastModifiedDate":"2024-04-02"},{"lineNumber":325,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":326,"author":{"gitId":"kyhjonathan"},"content":"This is how you calendar would look like in Week View before marking a task.","lastModifiedDate":"2024-04-15"},{"lineNumber":327,"author":{"gitId":"kyhjonathan"},"content":"![img.png](images/BeforeMarkTaskWeekView.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":328,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":329,"author":{"gitId":"kyhjonathan"},"content":"This is how you calendar would look like in Week View after marking a task.","lastModifiedDate":"2024-04-15"},{"lineNumber":330,"author":{"gitId":"kyhjonathan"},"content":"![img.png](images/AfterMarkingTaskWeekView.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":331,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"kyhjonathan"},"content":"The command will work the same way in Month View as well.","lastModifiedDate":"2024-04-15"},{"lineNumber":333,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":334,"author":{"gitId":"Aak242"},"content":"### Setting Priority Level for a Task: `priority`","lastModifiedDate":"2024-04-02"},{"lineNumber":335,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":336,"author":{"gitId":"Aak242"},"content":"Sets priority level for a task.","lastModifiedDate":"2024-04-02"},{"lineNumber":337,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":338,"author":{"gitId":"Mahesh1772"},"content":"Format: `priority, \u003cday number\u003e, \u003ctaskIndex\u003e, \u003cpriority\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":339,"author":{"gitId":"NicholasTanYY"},"content":"- Priority levels: `H` (high), `M` (medium), `L` (low)","lastModifiedDate":"2024-04-02"},{"lineNumber":340,"author":{"gitId":"NicholasTanYY"},"content":"- Default priority level: `L`","lastModifiedDate":"2024-04-02"},{"lineNumber":341,"author":{"gitId":"NicholasTanYY"},"content":"- Setting priority level will update any existing priority level for the task to the new level","lastModifiedDate":"2024-04-02"},{"lineNumber":342,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":343,"author":{"gitId":"kyhjonathan"},"content":"This is how you calendar would look like in Week View before setting a task\u0027s priority to high (Default Priority: Low).","lastModifiedDate":"2024-04-15"},{"lineNumber":344,"author":{"gitId":"kyhjonathan"},"content":"![img.png](images/BeforeSetPriorityWeekView.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":345,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":346,"author":{"gitId":"kyhjonathan"},"content":"This is how you calendar would look like in Week View after setting a task\u0027s priority to high.","lastModifiedDate":"2024-04-15"},{"lineNumber":347,"author":{"gitId":"kyhjonathan"},"content":"![img.png](images/AfterSetPriorityWeekView.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":348,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":349,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":350,"author":{"gitId":"Aak242"},"content":"### Identifying Free Times: `free`","lastModifiedDate":"2024-04-15"},{"lineNumber":351,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":352,"author":{"gitId":"Aak242"},"content":"The `free` feature enables users to identify and utilize their available time slots effectively. This section provides instructions on how to use the `free` feature to manage your schedule efficiently.","lastModifiedDate":"2024-04-15"},{"lineNumber":353,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":354,"author":{"gitId":"Aak242"},"content":"Format: `free, \u003cday\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":355,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":356,"author":{"gitId":"Aak242"},"content":"- `\u003cday\u003e`: Specifies the day of the month for which the user wants to identify free time slots.","lastModifiedDate":"2024-04-15"},{"lineNumber":357,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":358,"author":{"gitId":"Aak242"},"content":"#### Usage Example","lastModifiedDate":"2024-04-15"},{"lineNumber":359,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":360,"author":{"gitId":"Aak242"},"content":"Here\u0027s an example demonstrating the usage of the `free` feature:","lastModifiedDate":"2024-04-15"},{"lineNumber":361,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":362,"author":{"gitId":"Aak242"},"content":"1. Identifying Free Times for a Specific Day:","lastModifiedDate":"2024-04-15"},{"lineNumber":363,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":364,"author":{"gitId":"Aak242"},"content":"   For instance, to identify free time slots for the 20th day of the month:","lastModifiedDate":"2024-04-15"},{"lineNumber":365,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":366,"author":{"gitId":"Aak242"},"content":"   ```","lastModifiedDate":"2024-04-15"},{"lineNumber":367,"author":{"gitId":"Aak242"},"content":"   free, 20","lastModifiedDate":"2024-04-15"},{"lineNumber":368,"author":{"gitId":"Aak242"},"content":"   ```","lastModifiedDate":"2024-04-15"},{"lineNumber":369,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":370,"author":{"gitId":"Aak242"},"content":"#### Output","lastModifiedDate":"2024-04-15"},{"lineNumber":371,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":372,"author":{"gitId":"Aak242"},"content":"![Free-Times-Example.png](images/Free-Times-Example.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":373,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":374,"author":{"gitId":"Aak242"},"content":"#### Error Handling","lastModifiedDate":"2024-04-15"},{"lineNumber":375,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":376,"author":{"gitId":"Aak242"},"content":"The application will handle errors in case the specified day is invalid or if there are any other issues encountered during the process.","lastModifiedDate":"2024-04-15"},{"lineNumber":377,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":378,"author":{"gitId":"Aak242"},"content":"By following these instructions, users can efficiently utilize the `free` feature to optimize their schedules and manage their time effectively.","lastModifiedDate":"2024-04-15"},{"lineNumber":379,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"Mahesh1772"},"content":"### Quitting the Application: `quit`","lastModifiedDate":"2024-04-02"},{"lineNumber":381,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":382,"author":{"gitId":"Mahesh1772"},"content":"The `quit` command allows you to exit the CLI-nton application.","lastModifiedDate":"2024-04-02"},{"lineNumber":383,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":384,"author":{"gitId":"Mahesh1772"},"content":"**Usage:**","lastModifiedDate":"2024-04-02"},{"lineNumber":385,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":386,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":387,"author":{"gitId":"Mahesh1772"},"content":"quit","lastModifiedDate":"2024-04-02"},{"lineNumber":388,"author":{"gitId":"Aak242"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":389,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":390,"author":{"gitId":"Mahesh1772"},"content":"**Example:**","lastModifiedDate":"2024-04-02"},{"lineNumber":391,"author":{"gitId":"kyhjonathan"},"content":"Below shows how a user would quit the application.","lastModifiedDate":"2024-04-15"},{"lineNumber":392,"author":{"gitId":"kyhjonathan"},"content":"![img.png](images/QuitApplication.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":393,"author":{"gitId":"Mahesh1772"},"content":"The application will exit after displaying a goodbye message.","lastModifiedDate":"2024-04-02"},{"lineNumber":394,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":395,"author":{"gitId":"kyhjonathan"},"content":"### ICS Exporting and Importing: `ics` `[coming in future versions]`","lastModifiedDate":"2024-04-14"},{"lineNumber":396,"author":{"gitId":"kyhjonathan"},"content":"Exporting and importing tasks to and from an ICS file.","lastModifiedDate":"2024-04-02"},{"lineNumber":397,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":398,"author":{"gitId":"kyhjonathan"},"content":"Format: `ics \u003cexport\u003e \u003cfilename\u003e` or `ics \u003cimport\u003e \u003cfilename\u003e`","lastModifiedDate":"2024-04-02"},{"lineNumber":399,"author":{"gitId":"kyhjonathan"},"content":"- Exporting tasks to an ICS file will create a new ICS file with the specified filename","lastModifiedDate":"2024-04-02"},{"lineNumber":400,"author":{"gitId":"kyhjonathan"},"content":"- Importing tasks from an ICS file will add the tasks from the ICS file to the current task list","lastModifiedDate":"2024-04-02"},{"lineNumber":401,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":402,"author":{"gitId":"kyhjonathan"},"content":"Example of usage:","lastModifiedDate":"2024-04-02"},{"lineNumber":403,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":404,"author":{"gitId":"kyhjonathan"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":405,"author":{"gitId":"kyhjonathan"},"content":"// exports tasks to an ICS file named \"tasks.ics\" into the current working directory","lastModifiedDate":"2024-04-02"},{"lineNumber":406,"author":{"gitId":"kyhjonathan"},"content":"ics, export, tasks.ics","lastModifiedDate":"2024-04-02"},{"lineNumber":407,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":408,"author":{"gitId":"kyhjonathan"},"content":"// imports tasks from an ICS file named \"tasks.ics\" in the current working directory","lastModifiedDate":"2024-04-02"},{"lineNumber":409,"author":{"gitId":"kyhjonathan"},"content":"ics, import, tasks.ics","lastModifiedDate":"2024-04-02"},{"lineNumber":410,"author":{"gitId":"kyhjonathan"},"content":"```","lastModifiedDate":"2024-04-02"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":412,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2020-05-24"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":416,"author":{"gitId":"Aak242"},"content":"**A**: You can transfer your data to another computer by copying the data file saved in the CLI-nton application directory. The data file is typically named `clintonData.txt` and contains all your tasks. Simply copy this file to the same location on the other computer to transfer your tasks.","lastModifiedDate":"2024-04-02"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":418,"author":{"gitId":"NicholasTanYY"},"content":"**Q**: When adding an Event task, I entered `add,1,E,Event 1` to add an event on the first day of the month, but after that, I was prompted to enter the start date again. Why is that?","lastModifiedDate":"2024-04-15"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":420,"author":{"gitId":"NicholasTanYY"},"content":"**A**: Not to worry! Our program registers the start date as the date you keyed into the original command, i.e. the first day of the month. The subsequent prompt for the start date is for formatting purposes and will not affect the actual date of the event.","lastModifiedDate":"2024-04-15"},{"lineNumber":421,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":422,"author":{"gitId":"NicholasTanYY"},"content":"**Q**: I have an event lasting from 15 Apr to 19 Apr within a week. Why is it that `free, 16` shows that the day is free?","lastModifiedDate":"2024-04-15"},{"lineNumber":423,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":424,"author":{"gitId":"NicholasTanYY"},"content":"**A**: For events which stretch over multiple days, we only consider the original day of the event when calculating free times. In this case, the event starts on the 15th and ends on the 19th, so the 16th, 17th, 18th and 19th are considered free days. Our advise: add events with their corresponding timings for each day of the event to get a more accurate representation of your schedule.","lastModifiedDate":"2024-04-15"},{"lineNumber":425,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":426,"author":{"gitId":"NicholasTanYY"},"content":"**Q**: Does the scheduler account for clashes in event timings?","lastModifiedDate":"2024-04-15"},{"lineNumber":427,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":428,"author":{"gitId":"kyhjonathan"},"content":"**A**: No. This is to accommodate for users who may have overlapping events or tasks. We recommend users to manually check for clashes and adjust their schedules accordingly.","lastModifiedDate":"2024-04-15"},{"lineNumber":429,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":430,"author":{"gitId":"kyhjonathan"},"content":"**Q**: I accidentally typed in a wrong command after CLI-nton asked me \"Do you want to update the start and end dates and times? (yes/no)\". It says \"Event Updated.\", but the Date/Time is not updated. What does it mean?","lastModifiedDate":"2024-04-15"},{"lineNumber":431,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":432,"author":{"gitId":"kyhjonathan"},"content":"**A**: The message \"Event Updated.\" is a general message to indicate that the event has been updated. However, in this case, the date/time was not updated as the user did not provide the correct input. We recommend users to carefully follow the instructions and provide the correct input to ensure that the task is updated accurately.","lastModifiedDate":"2024-04-15"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":434,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":436,"author":{"gitId":"Aak242"},"content":"For a quick reference, here\u0027s a summary of available commands:","lastModifiedDate":"2024-04-02"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":438,"author":{"gitId":"Aak242"},"content":"- Move to next week or month `next`","lastModifiedDate":"2024-04-02"},{"lineNumber":439,"author":{"gitId":"Aak242"},"content":"- Move to previous week or month `prev`","lastModifiedDate":"2024-04-02"},{"lineNumber":440,"author":{"gitId":"Mahesh1772"},"content":"- Update task description `update, \u003cday number\u003e, \u003ctaskIndex\u003e, \u003cnewDescription\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":441,"author":{"gitId":"Mahesh1772"},"content":"- Add new task `add, \u003cday number\u003e, \u003ctaskType\u003e, \u003ctaskDescription\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":442,"author":{"gitId":"Mahesh1772"},"content":"- Delete task `delete, \u003cday number\u003e, \u003ctaskIndex\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":443,"author":{"gitId":"Mahesh1772"},"content":"- Mark task as complete or not complete `mark, \u003cday number\u003e, \u003ctaskIndex\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":444,"author":{"gitId":"Mahesh1772"},"content":"- Set priority level for task `priority, \u003cday number\u003e, \u003ctaskIndex\u003e, \u003cpriority\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":445,"author":{"gitId":"NicholasTanYY"},"content":"- Find free times in a day `free, \u003cday number\u003e`","lastModifiedDate":"2024-04-15"},{"lineNumber":446,"author":{"gitId":"Aak242"},"content":"- Switch to month view `month`","lastModifiedDate":"2024-04-02"},{"lineNumber":447,"author":{"gitId":"Aak242"},"content":"- Switch to week view `week`","lastModifiedDate":"2024-04-02"},{"lineNumber":448,"author":{"gitId":"Aak242"},"content":"- Quit the application `quit`","lastModifiedDate":"2024-04-02"},{"lineNumber":449,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":450,"author":{"gitId":"clarencepohh"},"content":"Here\u0027s a summary of task types:","lastModifiedDate":"2024-04-08"},{"lineNumber":451,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":452,"author":{"gitId":"NicholasTanYY"},"content":"- Todo (`T`): A basic task with no start or end date / times.","lastModifiedDate":"2024-04-15"},{"lineNumber":453,"author":{"gitId":"NicholasTanYY"},"content":"- Deadline (`D`): A task that has a date / time to complete by.","lastModifiedDate":"2024-04-15"},{"lineNumber":454,"author":{"gitId":"NicholasTanYY"},"content":"- Event (`E`): A task that has a start and end date / time.","lastModifiedDate":"2024-04-15"},{"lineNumber":455,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":456,"author":{"gitId":"clarencepohh"},"content":"Tasks can be classified in the following ways:","lastModifiedDate":"2024-04-08"},{"lineNumber":457,"author":{"gitId":"NicholasTanYY"},"content":"- marked as HIGH (`H`), MEDIUM (`M`) or LOW (`L`) priority. Default level is LOW.","lastModifiedDate":"2024-04-15"},{"lineNumber":458,"author":{"gitId":"NicholasTanYY"},"content":"- marked as COMPLETE (`X`) or INCOMPLETE (`O`). Default is INCOMPLETE.","lastModifiedDate":"2024-04-15"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":460,"author":{"gitId":"clarencepohh"},"content":"Start managing your tasks efficiently with CLI-nton today!","lastModifiedDate":"2024-04-08"}],"authorContributionMap":{"clarencepohh":102,"Mahesh1772":99,"NicholasTanYY":21,"Aak242":149,"-":33,"kyhjonathan":56}},{"path":"docs/diagrams/class/CommandParser.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"class CommandHandler {","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"    - scanner: Scanner","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"    - taskManager: TaskManager","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"    - weekView: WeekView","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"    - monthView: MonthView","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"    - inMonthView: boolean","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"    + CommandHandler(scanner: Scanner, taskManager: TaskManager, weekView: WeekView, monthView: MonthView)","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"    + handleCommand(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"    - handleNextCommand(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"    - handlePreviousCommand(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"    - handleUpdateCommand(parts: String[]): void","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"    - handleAddCommand(parts: String[]): void","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"    - handleDeleteCommand(parts: String[]): void","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    - handleMarkCommand(parts: String[]): void","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"    - handlePriorityCommand(parts: String[]): void","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    - handleMonthCommand(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"    - handleWeekCommand(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    - {static} printHelp(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"    - handleQuitCommand(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"class StringParser {","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"    + {static} dateFormatter: DateTimeFormatter","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"    + parseDate(dateString: String): LocalDate","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"    + parseTaskIndex(indexString: String): int","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"    + parseTaskDescription(descriptionString: String): String","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"    + parsePriorityLevel(priorityString: String): String","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"    + validateAddCommand(parts: String[]): void","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"    + validateUpdateCommand(parts: String[]): void","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"    + validateDeleteCommand(parts: String[]): void","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"    + validateMarkCommand(parts: String[]): void","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"    + validatePriorityCommand(parts: String[]): void","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"class Main {","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"    + main(args: String[]): void","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"Main --\u003e CommandHandler","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"Main --\u003e TaskManager","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"Main --\u003e WeekView","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"Main --\u003e MonthView","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"CommandHandler --\u003e TaskManager","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"CommandHandler --\u003e WeekView","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"CommandHandler --\u003e MonthView","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"CommandHandler ..\u003e StringParser","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"hide circle","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Mahesh1772":54}},{"path":"docs/diagrams/class/Data.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"@startuml","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"class TaskManager {","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"- {static} logger: Logger","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"- {static} tasks: HashMap \u003cLocalDate, List\u003cTask\u003e\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"+ {static} addTask (date: LocalDate, taskDescription: String, taskType: TaskType, dates: String[], times: String[])","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"+ {static} updateTask (date: LocalDate, taskIndex: int, newTaskDescription: String, scanner: Scanner, inMonthView: boolean, weekView: WeekView)","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"+ {static} updateEventTask (scanner: Scanner, dayTasks: List\u003cTask\u003e, taskIndex: int, newTaskDescription: String, oldDescription: String)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"+ {static} updateDeadlineTask (scanner: Scanner, dayTasks: List\u003cTask\u003e, taskIndex: int, newTaskDescription: String, oldDescription: String)","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"+ {static} getDayTasks (date: LocalDate)","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"+ {static} parseTaskType (userInput: String)","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"+ {static} deleteManager (weekView: WeekView, monthView: MonthView, inMonthView: boolean, \\n                         taskManager: TaskManager, day: String, taskIndex: int)","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"+ {static} deleteAllTasksOnDate (taskManager: TaskManager, specifiedDate: LocalDate)","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"+ {static} getEventsForDate (date: LocalDate)","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"+ deleteTask (date: LocalDate, taskIndex: int, isMuted: boolean)","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"+ markTaskAsCompleted (date: LocalDate, taskIndex: int)","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"+ markTaskAsNotCompleted (date: LocalDate, taskIndex: int)","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"+ getTasksForDate (date: LocalDate)","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"+ addManager (scanner: Scanner, weekView: WeekView, monthView: MonthView, inMonthView: boolean, \\n                      action: String, day: String, taskTypeString: String, taskDescription: String)","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"+ freeTimeManager (weekView: WeekView, monthView: MonthView, inMonthView: boolean, day: String)","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"+ markManager (weekView: WeekView, monthView: MonthView, inMonthView: boolean, day: String, taskIndex: int)","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"+ handleMarkingOfTask (taskIndex: int, date: LocalDate)","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"+ priorityManager (weekView: WeekView, monthView: MonthView, inMonthView: boolean, day: String, taskIndex: int, \\n                          priorityLevelString: String)","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"+ updateManager (scanner: Scanner, weekView: WeekView, monthView: MonthView, inMonthView: boolean, \\n                           taskManager: TaskManager, day: int, taskIndex: int, newDescription: String)","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"+ addTasksFromFile (tasksFromFile: Map\u003cLocalDate, List\u003cTask\u003e\u003e)","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"+ getFreeTimeSlots (events: List\u003cTask\u003e, currentDate: LocalDate)","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"+ printFreeTimeSlots (freeTimeSlots: List\u003cString\u003e, startDate: LocalDate)","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"- {static} updateEventLogging (newTaskDescription: String, oldDescription: String, oldEvent: Event, newDatesAndTimes: String[])","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"- {static} addTaskBasedOnType (scanner: Scanner, taskDescription: String, taskType: TaskType, date: LocalDate)","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"- {static} parseAndAddEvent (scanner: Scanner, taskDescription: String, taskType: TaskType, date: LocalDate)","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"- {static} findDateFromDayNumber (weekView: WeekView, monthView: MonthView, inMonthView: boolean, dayInt: int)","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"- setPriorityLevelOfTask (taskIndex: int, date: LocalDate, priorityLevelString: String)","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"class Task {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"# name: String","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"# priorityLevel: TaskPriorityLevel","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"# isCompleted: boolean","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"+ isCompleted ()","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"+ setCompleteness (completed: boolean)","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"+ getMarkedStatusIcon ()","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"+ setPriorityLevel (priorityLevelOfTask: TaskPriorityLevel)","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"+ getPriorityLevelIcon ()","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"+ getDisplayFormat ()","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"class Todo extends Task {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"+ getTaskType ()","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"+ getSaveFormat ()","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"+ todoToVEvent (todo: Todo)","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"# byDate: String","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"# byTime: String","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"+ getByDate ()","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"+ getByTime ()","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"+ getTaskType ()","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"+ getSaveFormat ()","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"class Event extends Task {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"# startDate: String","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"# endDate: String","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"# startTime: String","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"# endTime: String","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"+ getStartDate ()","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"+ getStartTime ()","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"+ getEndDate ()","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"+ getEndTime ()","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"+ getTaskType ()","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"+ getSaveFormat ()","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"enum TaskType \u003c\u003cenumeration\u003e\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"TODO","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"EVENT","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"DEADLINE","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"INVALID","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"enum TaskPriorityLevel \u003c\u003cenumeration\u003e\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"HIGH","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"MEDIUM","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"LOW","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"hide circle","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"Task \"*\"  \u003c- \"1\"TaskManager","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"@enduml","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"clarencepohh":95}},{"path":"docs/diagrams/class/Exceptions.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Aak242"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Aak242"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Aak242"},"content":"class TaskManagerException extends Exception {","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Aak242"},"content":"{static} + NOT_CURRENT_WEEK_MESSAGE : String","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"Aak242"},"content":"{static} + NOT_CURRENT_MONTH_MESSAGE : String","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"Aak242"},"content":"{static} + NO_TASKS_MESSAGE : String","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"Aak242"},"content":"+ TaskManagerException(errorMessage : String)","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"Aak242"},"content":"{static} + checkIfDateTimeInFormat(dateTime : String) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"Aak242"},"content":"{static} + checkIfDateInFormat(date : String) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"Aak242"},"content":"{static} + checkIfTimeInFormat(time : String) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"Aak242"},"content":"{static} + checkIfDateInCurrentWeek(date : LocalDate, weekView : WeekView) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"Aak242"},"content":"{static} + checkIfTaskExistsInCurrentDate(dayTasks: List\u003cTask\u003e, index: int) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"Aak242"},"content":"{static} + checkIfDateInCurrentMonth(date : LocalDate) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"Aak242"},"content":"{static} + checkIfDateHasTasks(dayTasks : List\u003cTask\u003e) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Aak242"},"content":"class MarkTaskException extends TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"Aak242"},"content":"{static} + TASK_INDEX_OUT_OF_RANGE_FOR_DAY_WITH_TASKS_MESSAGE : String","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"Aak242"},"content":"{static} + TASK_INDEX_WITH_NO_TASKS_MESSAGE : String","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"Aak242"},"content":"+ MarkTaskException(errorMessage : String)","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"Aak242"},"content":"{static} + checkIfTaskIndexIsValidForMarkingTask(dayTasks : List\u003cTask\u003e, taskIndex : int) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Aak242"},"content":"class SetPriorityException extends TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"Aak242"},"content":"{static} + TASK_INDEX_OUT_OF_RANGE_FOR_DAY_WITH_TASKS_MESSAGE : String","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"{static} + TASK_INDEX_WITH_NO_TASKS_MESSAGE : String","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"Aak242"},"content":"{static} + INVALID_PRIORITY_MESSAGE : String","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"Aak242"},"content":"+ SetPriorityException(errorMessage : String)","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"Aak242"},"content":"{static} + checkIfTaskIndexIsValidForPriority(dayTasks : List\u003cTask\u003e, taskIndex : int) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"Aak242"},"content":"{static} + checkIfPriorityIsValid(priority : String) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Aak242"},"content":"class StorageFileException extends Exception {","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"Aak242"},"content":"+ StorageFileException(errorMessage : String)","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"Aak242"},"content":"{static} + checkStorageTextDateFormat(date : String) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"Aak242"},"content":"hide circle","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Aak242"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Aak242":58}},{"path":"docs/diagrams/class/Storage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"class Storage {","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"    - {static} FILE_PATH: Path","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"    - {static} logger: Logger","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"    + {static} createNewFile(path: Path): void","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"    + {static} saveTasksToFile(tasks: Map\u003cLocalDate, List\u003cTask\u003e\u003e, path: Path): void","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"    + {static} loadTasksFromFile(path: Path): Map\u003cLocalDate, List\u003cTask\u003e\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"    - {static} configureStatuses(date: LocalDate, markedStatus: String, priorityLevel: String): void","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"    - {static} setPriorityLevelStatus(priorityLevel: String, recentlyAddedTask: Task): void","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"    - {static} setMarkedStatus(markedStatus: String, recentlyAddedTask: Task): void","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"    + {static} checkFileFormat(line: String): boolean","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"hide circle","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"kyhjonathan":19}},{"path":"docs/diagrams/class/Time.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"abstract class View {","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"    # startOfView: LocalDate","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"    # dateFormatter: DateTimeFormatter","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"    + View(startOfView: LocalDate, dateFormatter: DateTimeFormatter)","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"    + abstract printView(taskManager: TaskManager): void","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"    + abstract next(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"    + abstract previous(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"    + getStartOfView(): LocalDate","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"    + getStartOfMonth(): LocalDate","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"    + findDateFromNumber(dayInt: int): LocalDate","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"class MonthView extends View {","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    - logger : Logger {static}","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"    - NUMBER_OF_DAYS_IN_WEEK : int {static}","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    - uiRenderer : UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    + MonthView(startOfMonth: LocalDate, dateFormatter: DateTimeFormatter)","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"    + printView(taskManager: TaskManager): void","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"    - printMonthHeader(yearMonth: YearMonth): void","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"    - printWeek(currentDate: LocalDate, taskManager: TaskManager): void","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"    - printDay(currentDate: LocalDate, startOfMonth: LocalDate): void","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"    - printDayNumber(currentDate: LocalDate): void","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"    - getMaxTasksForWeek(weekStart: LocalDate, taskManager: TaskManager): int","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"    - printTasksForWeek(weekStart: LocalDate, maxTasks: int, taskManager: TaskManager): void","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"    - printTaskForDay(dayTasks: List\u003cTask\u003e, taskIndex: int): void","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"    - printTaskIcon(task: Task): void","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"    - getTaskIcon(task: Task): String","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"    - getColoredTaskIcon(task: Task, color: String): String","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"    + next(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"    + previous(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"class WeekView extends View {","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"    + WeekView(startOfWeek: LocalDate, dateFormatter: DateTimeFormatter)","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"    + printView(taskManager: TaskManager): void","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"    + next(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"    + previous(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"    + getStartOfWeek(): LocalDate","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"    + getDateForDay(dayOfWeek: int): LocalDate","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"class DateUtils {","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"    - NUMBER_OF_DAYS_IN_WEEK: int \u003d 7","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"    + getStartOfWeek(date: LocalDate): LocalDate","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"hide circle","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Mahesh1772":58}},{"path":"docs/diagrams/class/UiRendererClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"class UiRenderer {","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} END_HORIZONTAL_DIVIDER: String","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} VERTICAL_DIVIDER: String","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} SPACE_COUNT: String","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} ICON_COUNT: String","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} ENTRY_FORMAT: String","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} TASK_DISPLAY_FORMAT: String","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} ICON_DISPLAY_FORMAT: String","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} EMPTY_TASK_DISPLAY_FORMAT: String","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} EVENT_ICON_COLOR: String","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} DEADLINE_ICON_COLOR: String","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} TODO_ICON_COLOR: String","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} ESCAPE_COLOR: String","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} allWrappedTaskLines: HashMap \u003cLocalDate, List\u003cList\u003cString\u003e\u003e\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} logger: Logger","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} WEEK_DAYS: String[]","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} SINGLE_HORIZONTAL_DIVIDER: String","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} numberOfDaysInWeek: int","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} printWeekHeader(startOfView: LocalDate, dateFormatter: DateTimeFormatter, isMonthView: boolean)","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} printHorizontalDivider()","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} printHeaderRow()","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} printWeekBody(startOfWeek: LocalDate, taskManager: TaskManager)","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} printDateRow(dateFormatter: DateTimeFormatter, date: LocalDate)","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} printTasksInWeek(startOfWeek: LocalDate, taskManager: TaskManager)","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} getMaxNumberOfTasksInDay(allWrappedTaskLines: Map\u003cLocalDate, List\u003cList\u003cString\u003e\u003e\u003e): int","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} getMaxNumberOfLinesPerTask(allWrappedTaskLines: Map\u003cLocalDate, List\u003cList\u003cString\u003e\u003e\u003e): int","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} printTasksInGrid(startOfWeek: LocalDate, maxNumberOfTasksInDay: int, maxNumberOfLinesPerTask: int)","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} printTaskSubstringInRow(startOfWeek: LocalDate, taskIndex: int, lineIndex: int)","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} storeWrappedLines(startOfWeek: LocalDate, taskManager: TaskManager)","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"    - {static} wrapText(text: String, maxLengthToOccupy: int): List\u003cString\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} printTaskForDay(dayTasks: List\u003cTask\u003e, taskIndex: int)","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} getMaxTasks(startOfWeek: LocalDate, taskManager: TaskManager)","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} printSeparator()","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"    + {static} printHelp()","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"class TaskManager {","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer ..\u003e TaskManager","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"note right of TaskManager","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"  The class diagram for TaskManager","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"  can be found under the section ","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"  \"Data Component\".","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"end note","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"NicholasTanYY"},"content":"hide circle","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"NicholasTanYY"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"NicholasTanYY":54}},{"path":"docs/diagrams/sequence/AddManagerSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"participant \":User\" as User","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"participant \":TaskManager\" as TaskManager","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"participant \":System\" as System","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"User -\u003e TaskManager: addManager(scanner, weekView, monthView,\\n inMonthView, action, day, taskTypeString, taskDescription)","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"activate TaskManager","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"TaskManager -\u003e TaskManager++: findDateFromDayNumber(weekView, monthView, inMonthView, dayInt)","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"return date","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"TaskManager -\u003e TaskManager++: parseTaskType(taskTypeString.toUpperCase())","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"return taskType","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"TaskManager -\u003e TaskManager++: addTaskBasedOnType(scanner, taskDescription, taskType, date)","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"return","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"TaskManager -\u003e TaskManager++: parseAndAddEvent(scanner, taskDescription, taskType, date)","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"return","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"TaskManager -\u003e TaskManager++: parseAndAddDeadline(scanner, taskDescription, taskType, date)","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"return","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"TaskManager -\u003e TaskManager++: addTask(date, taskDescription, taskType, dummyDates, dummyTimes)","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"return","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"TaskManager -\u003e Storage++: saveTasksToFile(tasks, Storage.FILE_PATH)","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"return","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"TaskManager -\u003e System++: println(typeName + \" added.\")","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"return","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"return","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"hide footbox","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"kyhjonathan":26}},{"path":"docs/diagrams/sequence/DataSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"actor       User              as user","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"participant \":Main\"           as Main","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"participant \":TaskManager\"    as TM","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"participant \":Storage\"        as storage","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"participant \":CommandHandler\" as CH","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"hide footbox","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"title Sequence Diagram for Data class","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"user -\u003e Main ** : Start program","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"Main -\u003e TM ** : new TaskManager()","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"activate TM","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"TM --\u003e Main --","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"Main -\u003e storage ++ : loadTasksFromFile\\n(Storage.FILE_PATH)","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"storage --\u003e Main -- : tasksFromFile","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"Main -\u003e TM ++ : addTasksFromFile(tasksFromFile)","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"TM --\u003e Main --","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"Main -\u003e CH ** : new CommandHandler(...)","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"note left: method parameters \\nexcluded for clarity","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"loop while true","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"user -\u003e CH ++ : user command","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"CH -\u003e CH ++ : handleCommand()","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    alt \"add\"","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"        CH -\u003e CH ++ : handleAddCommand()","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"        CH -\u003e TM ++ : addManager(...)","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"        note left: method parameters\\n excluded for clarity","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"            return","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"        return","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"    else \"update\"","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"        CH -\u003e CH ++ : handleUpdateCommand()","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"        CH -\u003e TM ++ : updateManager(...)","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"        note left: method parameters\\n excluded for clarity","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"            return","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"        return","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"    else \"mark\"","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"        CH -\u003e CH ++ : handleMarkCommand()","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"        CH -\u003e TM ++ : markManager(...)","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"        note left: method parameters\\n excluded for clarity","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"            return","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"        return","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"    else \"delete\"","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"        CH -\u003e CH ++ : handleDeleteCommand()","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"        CH -\u003e TM ++ : deleteManager(...)","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"        note left: method parameters\\n excluded for clarity","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"            return","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"        return","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"    else rest omitted for clarity","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"    end","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"    return","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"return await next input","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"end","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"clarencepohh":59}},{"path":"docs/diagrams/sequence/PrintMonthViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"participant \":MonthView\" as MV","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"participant \"uiRenderer:UiRenderer\" as UR","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"participant \":TaskManager\" as TM","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e MV: printView(taskManager)","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"activate MV","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e UR: printMonthHeader(YearMonth.from(startOfView))","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e MV","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e UR: printWeekHeader(startOfView, dateFormatter, true)","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"UR -\u003e UR: printHorizontalDivider()","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e UR","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"UR -\u003e UR: printHeaderRow()","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e UR","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"UR -\u003e UR: printDateRow(dateFormatter, startOfView.withDayOfMonth(1))","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e UR","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"UR -\u003e UR: printHorizontalDivider()","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e UR","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e MV","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e MV: printWeek(startOfView.withDayOfMonth(1), taskManager)","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"activate MV","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e UR: printDay(startOfView.withDayOfMonth(1), startOfView.withDayOfMonth(1))","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e MV","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e UR: printDay(startOfView.withDayOfMonth(1), startOfView.withDayOfMonth(1))","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e MV","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e UR: printSeparator()","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e MV","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e MV: getMaxTasksForWeek(startOfView.withDayOfMonth(1).minusDays(7), taskManager)","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"activate MV","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e TM: getTasksForDate(date)","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"activate TM","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"TM --\u003e MV","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"deactivate TM","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"MV --\u003e MV","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"deactivate MV","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e MV: printTasksForWeek(startOfView.withDayOfMonth(1).minusDays(7), maxTasks, taskManager)","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"activate MV","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e UR: printTaskForDay(dayTasks, taskIndex)","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"UR -\u003e UR: printTaskIcon(task)","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e UR","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e MV","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"MV -\u003e UR: printSeparator()","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"activate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"UR --\u003e MV","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"deactivate UR","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"MV --\u003e MV","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"deactivate MV","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"MV --\u003e MV","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"deactivate MV","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Mahesh1772":74}},{"path":"docs/diagrams/sequence/PrintWeekViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"@startuml","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"participant \":WeekView\" as WeekView","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"participant \":UiRenderer\" as UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"\u0027 Printing of Week Header","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"WeekView -\u003e UiRenderer: printWeekHeader()","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"activate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer -\u003e UiRenderer: printHorizontalDivider()","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"activate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer --\u003e UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"deactivate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer -\u003e UiRenderer: printHeaderRow()","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"activate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer --\u003e UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"deactivate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"opt !isMonthView","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    UiRenderer -\u003e UiRenderer: printDateRow()","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"    activate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"    UiRenderer --\u003e UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"    deactivate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"end","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer -\u003e UiRenderer: printHorizontalDivider()","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"activate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer --\u003e UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"deactivate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer --\u003e WeekView","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"deactivate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"\u0027 Printing of Week Body","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"WeekView -\u003e UiRenderer: printWeekBody()","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"activate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer -\u003e UiRenderer: printTasksInWeek()","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"activate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer --\u003e UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"deactivate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer -\u003e UiRenderer: printHorizontalDivider()","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"activate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer --\u003e UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"deactivate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"UiRenderer --\u003e WeekView","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"deactivate UiRenderer","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"NicholasTanYY"},"content":"hide footbox","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"NicholasTanYY"},"content":"@enduml","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"NicholasTanYY":54}},{"path":"docs/diagrams/sequence/SaveAndLoadSequenceDiagrams.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"hide footbox","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"participant \":Main\" as M","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"participant \":Storage\" as S","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"participant \":FileWriter\" as FW","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"participant \":BufferedReader\" as BR","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"participant \":TaskManager\" as TM","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"M -\u003e S : saveTasksToFile(tasks, path)","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"activate S","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"S -\u003e FW : new FileWriter(path.toFile())","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"activate FW","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"S -\u003e TM : getTasks()","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"activate TM","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"TM --\u003e S : return tasks","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"S -\u003e FW : write(date + \"|\" + taskSaveFormat + System.lineSeparator())","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"deactivate TM","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"FW --\u003e S :","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"deactivate FW","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"S --\u003e M-- :","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"M -\u003e S : loadTasksFromFile(path)","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"activate S","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"create BR","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"S -\u003e BR++ : new BufferedReader(new FileReader(path.toFile()))","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"S -\u003e BR : readLine()","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"BR --\u003e S-- : return line","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"S -\u003e TM : addTask(date, taskDescription, taskType, dates, times)","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"activate TM","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"TM --\u003e S :","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"deactivate TM","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"S --\u003e M : return tasks","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"deactivate BR","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"deactivate S","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"kyhjonathan":35}},{"path":"docs/diagrams/sequence/UpdateTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Aak242"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"Aak242"},"content":"participant \":TaskManager\" as TaskManager","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"Aak242"},"content":"participant \":Task\" as Task","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"Aak242"},"content":"participant \":Todo\" as Todo","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"Aak242"},"content":"participant \":Event\" as Event","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"Aak242"},"content":"participant \":Deadline\" as Deadline","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Aak242"},"content":"participant \":Scanner\" as Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"Aak242"},"content":"hnote over TaskManager : updateTask(LocalDate date, int taskIndex, String newTaskDescription, Scanner scanner, boolean inMonthView, WeekView weekView)","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"Aak242"},"content":"TaskManager -\u003e Task : dayTasks.get(taskIndex)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"Aak242"},"content":"activate Task","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"Aak242"},"content":"Task -\u003e TaskManager : getName()","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"Aak242"},"content":"activate TaskManager","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"Aak242"},"content":"Task -\u003e TaskManager : getTaskType()","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"Aak242"},"content":"deactivate Task","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"Aak242"},"content":"alt currentTaskType \u003d\u003d \"T\"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"Aak242"},"content":"    TaskManager -\u003e Todo : new Todo(newTaskDescription)","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"Aak242"},"content":"    activate Todo","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"Aak242"},"content":"    TaskManager -\u003e Task : dayTasks.set(taskIndex, Todo)","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"Aak242"},"content":"    deactivate Todo","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"Aak242"},"content":"else currentTaskType \u003d\u003d \"E\"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"Aak242"},"content":"    hnote over TaskManager : updateEventTask(Scanner, dayTasks, taskIndex, newTaskDescription, oldDescription)","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"Aak242"},"content":"    TaskManager -\u003e Scanner : nextLine()","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"Aak242"},"content":"    activate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"Aak242"},"content":"    Scanner -\u003e TaskManager : eventResponse","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"Aak242"},"content":"    deactivate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"Aak242"},"content":"    alt eventResponse \u003d\u003d \"yes\"","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Scanner : nextLine()","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"Aak242"},"content":"        activate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"Aak242"},"content":"        Scanner -\u003e TaskManager : newStartDate","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"Aak242"},"content":"        deactivate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Scanner : nextLine()","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"Aak242"},"content":"        activate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"        Scanner -\u003e TaskManager : newEndDate","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"Aak242"},"content":"        deactivate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Scanner : nextLine()","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"Aak242"},"content":"        activate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"Aak242"},"content":"        Scanner -\u003e TaskManager : newStartTime","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"Aak242"},"content":"        deactivate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Scanner : nextLine()","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"Aak242"},"content":"        activate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"Aak242"},"content":"        Scanner -\u003e TaskManager : newEndTime","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"Aak242"},"content":"        deactivate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Event : new Event(name, newStartDate, newEndDate, newStartTime, newEndTime)","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"Aak242"},"content":"        activate Event","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Task : dayTasks.set(taskIndex, Event)","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"Aak242"},"content":"        deactivate Event","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"Aak242"},"content":"    else","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Event : new Event(name, oldStartDate, oldEndDate, oldStartTime, oldEndTime)","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"Aak242"},"content":"        activate Event","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Task : dayTasks.set(taskIndex, Event)","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"Aak242"},"content":"        deactivate Event","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"Aak242"},"content":"    end","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"Aak242"},"content":"else currentTaskType \u003d\u003d \"D\"","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"Aak242"},"content":"    hnote over TaskManager : updateDeadlineTask(Scanner, dayTasks, taskIndex, newTaskDescription, oldDescription)","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"Aak242"},"content":"    TaskManager -\u003e Scanner : nextLine()","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"Aak242"},"content":"    activate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"Aak242"},"content":"    Scanner -\u003e TaskManager : deadlineResponse","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"Aak242"},"content":"    deactivate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"Aak242"},"content":"    alt deadlineResponse \u003d\u003d \"yes\"","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Scanner : nextLine()","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"Aak242"},"content":"        activate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"Aak242"},"content":"        Scanner -\u003e TaskManager : newByDate","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"Aak242"},"content":"        deactivate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Scanner : nextLine()","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"Aak242"},"content":"        activate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"Aak242"},"content":"        Scanner -\u003e TaskManager : newByTime","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"Aak242"},"content":"        deactivate Scanner","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Deadline : new Deadline(name, newByDate, newByTime)","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"Aak242"},"content":"        activate Deadline","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Task : dayTasks.set(taskIndex, Deadline)","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"Aak242"},"content":"        deactivate Deadline","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"Aak242"},"content":"    else","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Deadline : new Deadline(name, byDate, byTime)","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"Aak242"},"content":"        activate Deadline","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"Aak242"},"content":"        TaskManager -\u003e Task : dayTasks.set(taskIndex, Deadline)","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"Aak242"},"content":"        deactivate Deadline","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"Aak242"},"content":"    end","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"Aak242"},"content":"end","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"Aak242"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"Aak242":85}},{"path":"docs/team/aak242.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"# Aakash Ramaswamy - Project Portfolio Page","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"## Overview","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"Aak242"},"content":"*New Feature*: Led the development of the event and deadline logic to handle both dates and times, implemented the ","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Aak242"},"content":"update function\u0027s functionality, and introduced a new feature to check for all the free times in a day based on the ","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Aak242"},"content":"event timings.","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"Aak242"},"content":"Worked closely with the Task Manager Module to ensure seamless integration and functionality of the new features.","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"Aak242"},"content":"#### Event and Deadline Logic","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Aak242"},"content":"- Enhanced the event and deadline logic to handle both dates and times, ensuring accurate scheduling and tracking of ","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Aak242"},"content":"tasks.","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Aak242"},"content":"- Optimized the logic to handle various edge cases and ensure robustness of the application.","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Aak242"},"content":"#### Update Function\u0027s Functionality","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Aak242"},"content":"- Implemented the update function\u0027s functionality, allowing users to modify task details efficiently.","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Aak242"},"content":"- Ensured the update function\u0027s seamless integration with the existing task management system, providing a smooth","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Aak242"},"content":"user experience.","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"Aak242"},"content":"#### Free Times Feature","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"Aak242"},"content":"- Developed a new feature to check for all the free times in a day based on the event timings, aiding users in ","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"Aak242"},"content":"efficient time management.","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"Aak242"},"content":"- Designed the feature to provide a clear and concise view of free times, enhancing the application\u0027s usability.","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"Aak242"},"content":"#### Project Management:","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"Aak242"},"content":"- Maintained issue relevancy on `Issues` page and assigned / deleted / updated issues as necessary.","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"Aak242"},"content":"- Maintained `Milestones` page to reflect actual deliverables and goals as necessary.","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"Aak242"},"content":"### User Guide Contributions","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"Aak242"},"content":"1. **Updating Event, Deadline, and Todo Sections**: I authored comprehensive sections detailing how users can update events, deadlines, and todos within the application. This involved providing clear command formats, usage examples, and expected outputs to guide users through the process effectively.","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"Aak242"},"content":"2. **Free Times Feature**: I introduced a new section dedicated to the Free Times feature, enabling users to identify and utilize their available time slots efficiently. This involved crafting command formats, usage examples, and descriptions to facilitate user understanding.","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"Aak242"},"content":"3. **Base Template and Format for UG**: I established a structured template for the User Guide, ensuring consistency in formatting and organization. By providing a clear outline and table of contents, I facilitated the creation and navigation of content by group mates.","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"Aak242"},"content":"1. **Updating Events, Deadlines, and Todos**: I expanded the Developer Guide with sections detailing the implementation of updating events, deadlines, and todos. This included providing method signatures, parameter descriptions, and functionality explanations to assist developers in understanding and implementing these features. Additionally, I incorporated a Sequence Diagram illustrating the flow of updating tasks within the application.","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"Aak242"},"content":"2. **Exceptions and Logging**: I introduced a section on Exceptions and Logging, outlining how exceptions are handled within the application and the logging mechanisms employed. This involved describing exception classes, logging levels, and error-handling strategies to aid developers in debugging and troubleshooting. Furthermore, I included a Class Diagram depicting the relationship between exception classes and logging components.","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"Aak242"},"content":"3. **Free Time Feature Entry**: I incorporated a new section dedicated to the Free Times feature within the Developer Guide. This involved detailing the functionality, method signatures, and usage examples for developers to integrate this feature seamlessly into the application. Additionally, I included a Sequence Diagram illustrating the process of identifying free time slots and a Class Diagram illustrating the relevant components involved in the feature.","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"Aak242"},"content":"My contributions to both the User Guide and Developer Guide have enriched the documentation, providing users and developers with valuable insights and guidance for utilizing and understanding the application effectively. Through clear explanations, structured formatting, and comprehensive content, I aimed to enhance the overall usability and accessibility of the documentation.","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"Aak242"},"content":"- **Code Contribution**: [Reposense Link.](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dAak242\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dAak242\u0026tabRepo\u003dAY2324S2-CS2113-W13-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"clarencepohh":6,"Aak242":42}},{"path":"docs/team/clarencepohh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"# Clarence Poh Xiang Jun - Project Portfolio Page","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"This page outlines what I have done for the module CS2113 - Software Engineering and OOP.","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"Our project: CLI-nton, a powerful task management application designed to help you stay organized and productive. With a simple command-line interface, CLI-nton makes it easy to manage your tasks, whether they\u0027re todos, deadlines, or events.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"CLI-nton was an idea sprung by our group\u0027s collective minds, and it turned out to be a great practice in SWE as well as programming.","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"Working with a new language - `Java` - helps to improve our tech stack (and hopefully our resumes!) ","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"## Overview","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"Here are my contributions to the project:","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"- **New Feature**: Created TaskManager as a basis for other members to handle CRUD of basic Tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"  - To see how the TaskManager works, view our [DG: TaskManager Component.](../DeveloperGuide.md/#taskmanager-component)","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"  - Alternatively, view the [GitHub Repo for our DG!](https://github.com/AY2324S2-CS2113-W13-2/tp/blob/master/docs/DeveloperGuide.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"- **Code Contribution**: [Reposense Link.](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dclarencepohh\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2024-02-23\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"- **Active Code Review**: Constantly monitoring build status of member\u0027s PRs, and try to assist in resolving them.","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"  Here are some PRs reviewed by me (with non-trivial comments): [#43](https://github.com/AY2324S2-CS2113-W13-2/tp/pull/43),","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"  [#75](https://github.com/AY2324S2-CS2113-W13-2/tp/pull/75), [77](https://github.com/AY2324S2-CS2113-W13-2/tp/pull/77),","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"  [#93](https://github.com/AY2324S2-CS2113-W13-2/tp/pull/93), [#139](https://github.com/AY2324S2-CS2113-W13-2/tp/pull/139),","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"  [#147](https://github.com/AY2324S2-CS2113-W13-2/tp/pull/147), [#148](https://github.com/AY2324S2-CS2113-W13-2/tp/pull/148),","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"  [#149](https://github.com/AY2324S2-CS2113-W13-2/tp/pull/149), [#160](https://github.com/AY2324S2-CS2113-W13-2/tp/pull/160)","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"- **Project Management**:","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    - Managed release `v2.0` on GitHub.","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"    - Maintained issue relevancy on `Issues` page and assigned / deleted / updated issues as necessary.","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    - Maintained `Milestones` page to reflect actual deliverables and goals as necessary.","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"- **Enhancement to existing features**:","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"    - Wrote JUnit tests for TaskManager and Exception related functions: [TaskManager JUnit Tests #115](https://github.com/AY2324S2-CS2113-W13-2/tp/pull/115), ","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"      [Exceptions JUnit Tests #158](https://github.com/AY2324S2-CS2113-W13-2/tp/pull/158)","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"- **Documentation**:","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"  - JavaDocs: ","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"    - Ensured consistent formatting throughout the codebase for milestones.","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"    - Wrote JavaDocs for TaskManager and TaskManagerException classes.","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"    - Completed incomplete JavaDocs for (non-trivial) methods lacking them.","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"    ","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"  - User Guide:","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"        - Formatted the UG and created the Table of Contents according to content written by group mates.","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"        - Maintained image consistency and proper organization of images in their respective folders.","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"        - Alternatively, view the [GitHub Repo for our UG!](https://github.com/AY2324S2-CS2113-W13-2/tp/blob/master/docs/UserGuide.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"  ","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"  - Developer Guide:","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"      - Formatted the DG and created the Table of Contents according to content written by group mates.","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"      - Handled the overall flow of DG to ensure reading ease for developers.","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"      - Wrote the Data component in the DG and created their respective UML diagrams [DG: Data Component](../DeveloperGuide.md/#data-component).","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"      - Maintained the Appendix in the DG to reflect our application needs. See [DG: Appendix](../DeveloperGuide.md/#appendix-requirements). ","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"        - Alternatively, view the [GitHub Repo for our DG!](https://github.com/AY2324S2-CS2113-W13-2/tp/blob/master/docs/DeveloperGuide.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"- **Community Contributions**:","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"  - Reviewed fellow course-mates PRs with possible improvements [(T09-3: StockPal)](https://github.com/nus-cs2113-AY2324S2/tp/pull/1),","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"  [(T13-3: Classify)](https://github.com/clarencepohh/ped/issues)","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"  - Tried to assist course-mates with their queries on the course forum [(Query on I/O redirection test failure)](https://github.com/nus-cs2113-AY2324S2/forum/issues/38#issuecomment-2049388702), ","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"  [(Query on Error Code 126)](https://github.com/nus-cs2113-AY2324S2/forum/issues/31)","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"- **Reflection**:","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"  - Working on this project allowed me to understand what it would be like working in the future as a software developer.","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"  I learnt plenty about the workflows used as well as tools that software engineers use in their day-to-day. The process ","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"  was very enriching and I greatly enjoyed working with my teammates and solving problems together. I hope that the ","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"  experience I have gained through this module will bring me further in my path, and that I will be able to be part of ","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"  this style of workflows soon enough in the future! Thank you, CS2113! :)  ","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"clarencepohh":65}},{"path":"docs/team/kyhjonathan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"# Kuek Yeau Hao, Jonathan - Project Portfolio Page","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"## Overview","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"**New Feature**: Added the ability to save and read tasks to and from a local file.","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"* What it does: Allows users to save their tasks to a local txt file and read tasks from a local txt file.","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"* Justification: This feature allows users to save their tasks and read them later, even after the application is closed.","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"* Highlights: This feature is implemented using the `Storage` class, which is responsible for reading and writing tasks and handling any parsing logic for storage.","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"**Feature in development**: Exporting and importing of files in ical format.","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"* What it does: Allows users to export their tasks to an ical file and import tasks from an ical file.","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"* Justification: This feature allows users to share their tasks with others and import tasks from other applications.","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"* Highlights: This feature is implemented using the \u0027icshandler\u0027 class, however it is still in development and not yet implemented into the main application.","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"**Enhancements to existing features**:","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"* Updated the `TaskList` class to include the ability to add tasks from a list of tasks.","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"* Refactored taskManager methods to be more modular and easier to read.","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"* Handled exception handling for parsing of DateTime.","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"* Updated the `Task` class to include the ability to set the task\u0027s completion status.","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"**Tools**","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"* Used ical4j library to handle ical file format.","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"* Update build.gradle file to include relevant dependencies for ical4j library.","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"### Code contributed:","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"[Link to code contribution](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dkyhjonathan\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dkyhjonathan\u0026zR\u003dAY2324S2-CS2113-W13-2%2Ftp%5Bmaster%5D\u0026zACS\u003d126.71478873239437\u0026zS\u003d2024-02-23\u0026zFS\u003dw13\u0026zU\u003d2024-04-15\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"### Contributions to the User Guide:","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"* Added documentation for the `save` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"* Amended documentation for the TaskManager Class","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"* Add screenshots of example usage for several commands under TaskManager Class.","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"### Contributions to the Developer Guide:","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"* Added implementation details for the `Storage` class.","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"* Add UML Class and Sequence diagrams for the `Storage` class and addManager.","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"* Add in Table of Contents.","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"* Ensured headings and font sizes were correct.","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"* Set up team organisation and repository and ensured that all team members had access to the repository.","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"* Incorporated the class for ics development.","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"* Maintaining of issue tracking and ensuring that all issues were resolved in a timely manner.","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"### Reflections:","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"I have learnt much about the practices of Software Engineering that is undoubtedly paramount in the future.","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"Extremely educational and important module that has taught me the importance of proper documentation and testing.","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"kyhjonathan":46}},{"path":"docs/team/mahesh1772.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"# Sivagnanam Maheshwaran - Project Portfolio Page","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"Module: CS2113 - Software Engineering and OOP","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"My contributions for the Team Project (tp) CLI-nton will be outlined in this page! ","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"Our project: CLI-nton, a powerful task management application designed to help you stay organized and productive. With a simple command-line interface, CLI-nton makes it easy to manage your tasks, whether they\u0027re todos, deadlines, or events.","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"ClI-nton is a idea that was brainstormed by the team as a whole which has given us ample opportunities to grow as software engineers!","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"## Overview","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"As a dedicated software developer, I have made significant contributions to the task management application, focusing on the user interface and core functionalities. My work includes the development of the `WeekView` and `MonthView` classes, which are central to the application\u0027s ability to display tasks in a clear and organized manner. Additionally, I have implemented the `CommandHandler` and `StringParser` classes, which are pivotal in processing user input and executing commands. My efforts also extend to enhancing the `Ui Renderer` class to support the new features I introduced.","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"## Summary of Contributions","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"### Enhancements Implemented","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"#### Check out my code!","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"[Mahesh\u0027s Contribution!](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dMahesh1772\u0026tabRepo\u003dAY2324S2-CS2113-W13-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"#### Specific rendering of week view","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"- **What it does**: The `WeekView` class provides a detailed visual representation of the user\u0027s weekly schedule, organizing tasks by day and time.","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"- **Justification**: This feature was developed to assist users in managing their weekly tasks more effectively, offering a comprehensive overview of their commitments.","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"- **Highlights**: The implementation involved creating a dynamic layout that adjusts to the user\u0027s settings and the density of scheduled tasks.","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"- **Challenges**: Ensuring readability and ease of use regardless of the number of tasks presented was a significant challenge, which I addressed through adaptive UI elements.","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"#### Specific rendering of month view","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"- **What it does**: The `MonthView` class offers a month-long perspective on the user\u0027s tasks and events, emphasizing important dates and deadlines.","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"- **Justification**: This feature allows users to plan their activities on a monthly basis and quickly identify busy days.","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"- **Highlights**: I focused on creating an interactive and user-friendly interface that enables users to navigate through months and access detailed views of specific dates.","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"- **Challenges**: Balancing the display of information to prevent user overwhelm while providing comprehensive details was a complex task that I successfully managed.","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"#### Command handling and input parsing","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"- **What it does**: The `CommandHandler` and `StringParser` classes are responsible for interpreting user input and executing the corresponding commands within the application.","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"- **Justification**: These classes are essential for the application\u0027s functionality, allowing users to interact with the system through a command-line interface.","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"- **Highlights**: I designed these classes to be robust and flexible, capable of handling a wide range of user inputs and providing appropriate feedback.","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"- **Challenges**: Developing a parsing mechanism that could accurately interpret various user commands and parameters required thorough testing and refinement.","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"### Contributions to the UG","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"- Authored comprehensive documentation for the `WeekView` and `MonthView` features, including examples and tips for effective use.","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"- Wrote clear instructions for using the `CommandHandler` and `StringParser`, ensuring users can easily navigate the application\u0027s command-line interface.","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"### Contributions to the DG","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"- Documented the architecture and design decisions for the `WeekView` and `MonthView` classes, including their integration with the `Ui Renderer`.","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"- Detailed the implementation of the `CommandHandler` and `StringParser`, providing insights into the command processing workflow and interaction with other components.","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"- Included diagrams to illustrate the structure and relationships between the classes I developed.","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"- Conducted rigorous testing of the application to identify and resolve various edge cases and corner cases, ensuring the robustness and reliability of the system.","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"- Participated actively in team discussions and code reviews, providing valuable feedback and suggestions to improve the codebase.","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"### Reflection","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"My involvement in this project has been a profound learning experience, sharpening my skills in UI/UX design, command-line interfaces, and software architecture. The challenges I faced pushed me to innovate and deliver features that significantly improve the user experience. I am eager to continue contributing to the project\u0027s success and evolution.","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"clarencepohh":5,"Mahesh1772":48}},{"path":"docs/team/nicholastanyy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"# Nicholas Tan Yun Yu - Project Portfolio Page","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"## Overview","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"### About CLI-nton","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"CLI-nton is a desktop application for managing tasks, optimized for use via a Command Line Interface (CLI). It is a Java application that uses a GUI, but the primary way to interact with it is by typing commands into a CLI. If you can type fast, CLI-nton can get your task management done faster than traditional GUI apps.","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"## Summary of Contributions","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"### Check out my code!","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"[Link to code contribution](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dnicholastanyy\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2024-02-23\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dNicholasTanYY\u0026tabRepo\u003dAY2324S2-CS2113-W13-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"### Enhancements implemented","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"  - Enhanced the overall UI for the application, including the logic behind printing table formats and tasks in the week and month view","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"  - Implemented feature to mark and set a priority to the tasks in the task list","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"  - Modified `runtest.sh` to build the project and run tests in one command","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"  - Implemented `changeExpected.sh` to automatically update expected output files for tests","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"  - Implemented an avatar which is displayed whenever the application starts and a command is ran, to give the application more personality","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"### Contributions to the User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"  - Added documentation for the `mark` and `priority` command","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"  - Wrote the FAQ page, especially for known issues","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"- Added sequence diagram for printing a week\u0027s view","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"- Added class diagram for the `UiRenderer` class","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"- Wrote documentation for the methods in the `UiRenderer` class","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"- Helped to debug and fix issues that my teammates faced","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"- Helped check for code quality and ensure that the coding standards are met","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"- Helped to review most PRs and provide feedback","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"- Helped to manage the issue tracker and assign issues to the team members","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"- Helped to manage the release process and ensure that the release is smooth","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"- Helped to manage the milestone setting","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"- Helped set meeting agenda and manage the flow of the meeting","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"- Extensively reviewed teammates PR to reduce the number of bugs in the code before it is merged","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"- Incorporated gradle checks in text-ui-test so teammates can run all tests (JUnit and Ui) using one command","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"### Review/mentoring contributions","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"[Link to PR code review contributions](https://github.com/AY2324S2-CS2113-W13-2/tp/issues?q\u003dreviewed-by%3ANicholasTanYY+)","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"### A feature I had particular difficulty implementing","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"The logic behind printing the tasks using wrapped lines in the week view was challenging for me. This implementation is encapsulated in the  `printTasksInWeek` method and its nested components in the `UiRenderer` class.","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"Before this change was made, the tasks that were printed were truncated in a single line, meaning that if the task description occupied more space than the allocated box width (which is true for all tasks), the description would be cut off. This was not ideal as it made the task description unreadable.","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"### Other enhancements I attempted","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"I implemented a feature to make the application neater by centralising all UI components (Avatar, Avatar words, table for week view and month view etc).","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"After this, I also implemented a feature that changed the size of the avatar printed based on the size of the terminal.","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"These were done by having a class which calculates the dimensions of the terminal. This code is not included in the unused folder as it is a code snippet modified from something I found online. The code uses an intelligent way of finding terminal dimensions, using ANSI codes to control the position of the cursor. Then using a TerminalController class (in unused code segment), I was able to send keyboard inputs to the terminal to fix some issues with the outputs to the terminal that arose during the calculation of terminal dimensions.","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"NicholasTanYY"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"NicholasTanYY"},"content":"I successfully managed to centralise some components and fit corresponding avatar sizes but ran into major issues when trying to run the text-ui-tests. This feature took a lot of effort to implement. I had to abandon this feature as I was worried that it could cause more problems to other implementations in the future, like not working in other terminal types or conflicting with other Ui implementations.","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"NicholasTanYY"},"content":"## Reflections","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"NicholasTanYY"},"content":"This project has been a great experience and a first step into the software engineering world for my teammates and I. I look forward to learning from this experience and build more software in the future!","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"clarencepohh":5,"NicholasTanYY":51}},{"path":"src/main/java/commandparser/CommandHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package commandparser;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import data.TaskManager;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import data.exceptions.TaskManagerException;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import time.MonthView;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import time.WeekView;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import ui.AvatarUi;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"/**","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":" * The CommandHandler class handles user commands by delegating to appropriate methods based on the command type.","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":" * It provides methods to handle various commands such as \"next\", \"prev\", \"update\", \"add\", \"delete\", \"mark\", \"free\",","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":" * \"priority\", \"month\", \"week\", \"help\", and \"quit\".","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":" * The class uses a Scanner object for user input, a TaskManager object for managing tasks, a WeekView object for","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":" * displaying weekly tasks, and a MonthView object for displaying monthly tasks.","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":" */","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"public class CommandHandler {","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    private final WeekView weekView;","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"    private final MonthView monthView;","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    private boolean inMonthView;","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"     * Constructs a CommandHandler with the specified dependencies.","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"     * @param scanner    the Scanner object for user input.","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"     * @param taskManager the TaskManager object for managing tasks.","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"     * @param weekView   the WeekView object for displaying weekly tasks.","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"     * @param monthView  the MonthView object for displaying monthly tasks.","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"    public CommandHandler(Scanner scanner, TaskManager taskManager, WeekView weekView, MonthView monthView) {","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"        this.weekView \u003d weekView;","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"        this.monthView \u003d monthView;","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"        this.inMonthView \u003d false;","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"     * Handles user commands by delegating to appropriate methods based on the command type.","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"    public void handleCommand() {","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"        AvatarUi.printAvatar();","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"        if (!inMonthView) {","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"            weekView.printView(taskManager);","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"            monthView.printView(taskManager);","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"Enter help to learn commands\");","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"        String input \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"        String[] parts \u003d input.split(\",\\\\s*\");","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"        switch (command) {","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"        case \"next\":","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"            handleNextCommand();","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"        case \"prev\":","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"            handlePreviousCommand();","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"        case \"update\":","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"            handleUpdateCommand(parts);","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"        case \"add\":","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"            handleAddCommand(parts);","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"        case \"delete\":","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"            handleDeleteCommand(parts);","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"        case \"mark\":","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"            handleMarkCommand(parts);","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"Aak242"},"content":"        case \"free\":","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"Aak242"},"content":"            handleFreeCommand(parts);","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"Aak242"},"content":"            break;","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"        case \"priority\":","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"            handlePriorityCommand(parts);","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"        case \"month\":","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"            handleMonthCommand();","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"        case \"week\":","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"Mahesh1772"},"content":"            handleWeekCommand();","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"        case \"help\":","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"            printHelp();","lastModifiedDate":"2024-04-10"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"        case \"quit\":","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"            handleQuitCommand();","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"        default:","lastModifiedDate":"2024-04-10"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(\"Invalid input. Please try again.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"     * Handles the \"next\" command to navigate to the next week or month.","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"    private void handleNextCommand() {","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"        if (inMonthView) {","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"            monthView.next();","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"            weekView.next();","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":111,"author":{"gitId":"Mahesh1772"},"content":"     * Handles the \"prev\" command to navigate to the previous week or month.","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"Mahesh1772"},"content":"    private void handlePreviousCommand() {","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"Mahesh1772"},"content":"        if (inMonthView) {","lastModifiedDate":"2024-04-10"},{"lineNumber":115,"author":{"gitId":"Mahesh1772"},"content":"            monthView.previous();","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"Mahesh1772"},"content":"            weekView.previous();","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":120,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":121,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":122,"author":{"gitId":"Mahesh1772"},"content":"     * Handles the \"update\" command to update task descriptions.","lastModifiedDate":"2024-04-10"},{"lineNumber":123,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":124,"author":{"gitId":"Mahesh1772"},"content":"     * @param parts the array of command parts.","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":126,"author":{"gitId":"Mahesh1772"},"content":"    private void handleUpdateCommand(String[] parts) {","lastModifiedDate":"2024-04-10"},{"lineNumber":127,"author":{"gitId":"Mahesh1772"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":128,"author":{"gitId":"Mahesh1772"},"content":"            StringParser.validateUpdateCommand(parts);","lastModifiedDate":"2024-04-10"},{"lineNumber":129,"author":{"gitId":"Mahesh1772"},"content":"            int day \u003d StringParser.parseTaskIndex(parts[1]);","lastModifiedDate":"2024-04-10"},{"lineNumber":130,"author":{"gitId":"Mahesh1772"},"content":"            int taskIndex \u003d StringParser.parseTaskIndex(parts[2]);","lastModifiedDate":"2024-04-10"},{"lineNumber":131,"author":{"gitId":"Mahesh1772"},"content":"            String newDescription \u003d StringParser.parseTaskDescription(parts[3]);","lastModifiedDate":"2024-04-10"},{"lineNumber":132,"author":{"gitId":"Mahesh1772"},"content":"            taskManager.updateManager(scanner, weekView, monthView, inMonthView, taskManager, day,","lastModifiedDate":"2024-04-10"},{"lineNumber":133,"author":{"gitId":"Mahesh1772"},"content":"                    taskIndex, newDescription);","lastModifiedDate":"2024-04-10"},{"lineNumber":134,"author":{"gitId":"Mahesh1772"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":135,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":136,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":139,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":140,"author":{"gitId":"Mahesh1772"},"content":"     * Handles the \"add\" command to add new tasks.","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"Mahesh1772"},"content":"     * @param parts the array of command parts.","lastModifiedDate":"2024-04-13"},{"lineNumber":143,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"Mahesh1772"},"content":"    private void handleAddCommand(String[] parts) {","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"Mahesh1772"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":146,"author":{"gitId":"Mahesh1772"},"content":"            StringParser.validateAddCommand(parts);","lastModifiedDate":"2024-04-14"},{"lineNumber":147,"author":{"gitId":"Mahesh1772"},"content":"            String day \u003d parts[1].trim();","lastModifiedDate":"2024-04-10"},{"lineNumber":148,"author":{"gitId":"Mahesh1772"},"content":"            String taskTypeString \u003d parts[2].trim();","lastModifiedDate":"2024-04-10"},{"lineNumber":149,"author":{"gitId":"Mahesh1772"},"content":"            String taskDescription \u003d StringParser.parseTaskDescription(parts[3]);","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"Mahesh1772"},"content":"            int dayIndex \u003d StringParser.parseTaskIndex(day);","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"Mahesh1772"},"content":"            taskManager.addManager(scanner, weekView, monthView, inMonthView, \"add\", day,","lastModifiedDate":"2024-04-10"},{"lineNumber":152,"author":{"gitId":"Mahesh1772"},"content":"                    taskTypeString, taskDescription);","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"Mahesh1772"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":154,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":155,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":156,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":159,"author":{"gitId":"Mahesh1772"},"content":"     * Handles the \"delete\" command to delete tasks.","lastModifiedDate":"2024-04-10"},{"lineNumber":160,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"Mahesh1772"},"content":"     * @param parts the array of command parts.","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"Mahesh1772"},"content":"    private void handleDeleteCommand(String[] parts) {","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"Mahesh1772"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":165,"author":{"gitId":"Mahesh1772"},"content":"            StringParser.validateDeleteCommand(parts);","lastModifiedDate":"2024-04-10"},{"lineNumber":166,"author":{"gitId":"Mahesh1772"},"content":"            String day \u003d parts[1].trim();","lastModifiedDate":"2024-04-10"},{"lineNumber":167,"author":{"gitId":"Mahesh1772"},"content":"            int taskIndex \u003d StringParser.parseTaskIndex(parts[2]);","lastModifiedDate":"2024-04-10"},{"lineNumber":168,"author":{"gitId":"Mahesh1772"},"content":"            int dayIndex \u003d StringParser.parseTaskIndex(day);","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"Mahesh1772"},"content":"            TaskManager.deleteManager(weekView, monthView, inMonthView, taskManager, day, taskIndex);","lastModifiedDate":"2024-04-10"},{"lineNumber":170,"author":{"gitId":"Mahesh1772"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":171,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":172,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":173,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":174,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"Mahesh1772"},"content":"     * Handles the \"mark\" command to mark tasks as completed.","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"Mahesh1772"},"content":"     * @param parts the array of command parts.","lastModifiedDate":"2024-04-13"},{"lineNumber":179,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"Mahesh1772"},"content":"    private void handleMarkCommand(String[] parts) {","lastModifiedDate":"2024-04-10"},{"lineNumber":181,"author":{"gitId":"Mahesh1772"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":182,"author":{"gitId":"Mahesh1772"},"content":"            StringParser.validateMarkCommand(parts);","lastModifiedDate":"2024-04-10"},{"lineNumber":183,"author":{"gitId":"Mahesh1772"},"content":"            String day \u003d parts[1].trim();","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"Mahesh1772"},"content":"            int taskIndex \u003d StringParser.parseTaskIndex(parts[2]);","lastModifiedDate":"2024-04-10"},{"lineNumber":185,"author":{"gitId":"Mahesh1772"},"content":"            int dayIndex \u003d StringParser.parseTaskIndex(day);","lastModifiedDate":"2024-04-14"},{"lineNumber":186,"author":{"gitId":"Mahesh1772"},"content":"            taskManager.markManager(weekView, monthView, inMonthView, day, taskIndex);","lastModifiedDate":"2024-04-10"},{"lineNumber":187,"author":{"gitId":"Mahesh1772"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":188,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":189,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":191,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":192,"author":{"gitId":"Aak242"},"content":"    private void handleFreeCommand(String[] parts) {","lastModifiedDate":"2024-04-12"},{"lineNumber":193,"author":{"gitId":"Aak242"},"content":"        try {","lastModifiedDate":"2024-04-12"},{"lineNumber":194,"author":{"gitId":"Aak242"},"content":"            StringParser.validateFreeCommand(parts);","lastModifiedDate":"2024-04-12"},{"lineNumber":195,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":196,"author":{"gitId":"Aak242"},"content":"            String day \u003d parts[1].trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":197,"author":{"gitId":"Aak242"},"content":"            taskManager.freeTimesManager(weekView, monthView, inMonthView, day);","lastModifiedDate":"2024-04-12"},{"lineNumber":198,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":199,"author":{"gitId":"Aak242"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2024-04-12"},{"lineNumber":200,"author":{"gitId":"Aak242"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-04-12"},{"lineNumber":201,"author":{"gitId":"Aak242"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":202,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":203,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":204,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":205,"author":{"gitId":"Mahesh1772"},"content":"     * Handles the \"priority\" command to set task priorities.","lastModifiedDate":"2024-04-10"},{"lineNumber":206,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":207,"author":{"gitId":"Mahesh1772"},"content":"     * @param parts the array of command parts.","lastModifiedDate":"2024-04-13"},{"lineNumber":208,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":209,"author":{"gitId":"Mahesh1772"},"content":"    private void handlePriorityCommand(String[] parts) {","lastModifiedDate":"2024-04-10"},{"lineNumber":210,"author":{"gitId":"Mahesh1772"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":211,"author":{"gitId":"Mahesh1772"},"content":"            StringParser.validatePriorityCommand(parts);","lastModifiedDate":"2024-04-10"},{"lineNumber":212,"author":{"gitId":"Mahesh1772"},"content":"            String day \u003d parts[1].trim();","lastModifiedDate":"2024-04-10"},{"lineNumber":213,"author":{"gitId":"Mahesh1772"},"content":"            int taskIndex \u003d StringParser.parseTaskIndex(parts[2]);","lastModifiedDate":"2024-04-10"},{"lineNumber":214,"author":{"gitId":"Mahesh1772"},"content":"            String priorityLevel \u003d StringParser.parsePriorityLevel(parts[3]);","lastModifiedDate":"2024-04-10"},{"lineNumber":215,"author":{"gitId":"Mahesh1772"},"content":"            int dayIndex \u003d StringParser.parseTaskIndex(day);","lastModifiedDate":"2024-04-14"},{"lineNumber":216,"author":{"gitId":"Mahesh1772"},"content":"            taskManager.priorityManager(weekView, monthView, inMonthView, day, taskIndex, priorityLevel);","lastModifiedDate":"2024-04-10"},{"lineNumber":217,"author":{"gitId":"Mahesh1772"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":218,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":219,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":220,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":221,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":222,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":223,"author":{"gitId":"Mahesh1772"},"content":"     * Handles the \"month\" command to switch to the month view.","lastModifiedDate":"2024-04-10"},{"lineNumber":224,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":225,"author":{"gitId":"Mahesh1772"},"content":"    private void handleMonthCommand() {","lastModifiedDate":"2024-04-10"},{"lineNumber":226,"author":{"gitId":"NicholasTanYY"},"content":"        inMonthView \u003d true;","lastModifiedDate":"2024-04-13"},{"lineNumber":227,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":228,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":229,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":230,"author":{"gitId":"Mahesh1772"},"content":"     * Handles the \"week\" command to switch to the week view.","lastModifiedDate":"2024-04-10"},{"lineNumber":231,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":232,"author":{"gitId":"Mahesh1772"},"content":"    private void handleWeekCommand() {","lastModifiedDate":"2024-04-10"},{"lineNumber":233,"author":{"gitId":"Mahesh1772"},"content":"        inMonthView \u003d false;","lastModifiedDate":"2024-04-10"},{"lineNumber":234,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":235,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":236,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":237,"author":{"gitId":"Mahesh1772"},"content":"     * Prints the help message with available commands.","lastModifiedDate":"2024-04-10"},{"lineNumber":238,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":239,"author":{"gitId":"Mahesh1772"},"content":"    private static void printHelp() {","lastModifiedDate":"2024-04-10"},{"lineNumber":240,"author":{"gitId":"Mahesh1772"},"content":"        ui.UiRenderer.printHelp();","lastModifiedDate":"2024-04-10"},{"lineNumber":241,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":242,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":243,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":244,"author":{"gitId":"Mahesh1772"},"content":"     * Handles the \"quit\" command to exit the calendar application.","lastModifiedDate":"2024-04-10"},{"lineNumber":245,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":246,"author":{"gitId":"Mahesh1772"},"content":"    private void handleQuitCommand() {","lastModifiedDate":"2024-04-10"},{"lineNumber":247,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"Exiting Calendar...\");","lastModifiedDate":"2024-04-10"},{"lineNumber":248,"author":{"gitId":"Mahesh1772"},"content":"        System.exit(0);","lastModifiedDate":"2024-04-10"},{"lineNumber":249,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":250,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"Mahesh1772":226,"NicholasTanYY":2,"Aak242":15,"kyhjonathan":7}},{"path":"src/main/java/commandparser/StringParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package commandparser;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import data.exceptions.TaskManagerException;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":" * This class provides utility methods for parsing and validating strings related to tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":" * It includes methods for parsing dates, task indices, task descriptions, and priority levels,","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":" * as well as methods for validating the format of various commands.","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"public class StringParser {","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"    private static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"     * @param dateString the string representing the date.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"     * @return the LocalDate object parsed from the string.","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"     * @throws TaskManagerException if the date string is not in the expected format.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"    public static LocalDate parseDate(String dateString) throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"            return LocalDate.parse(dateString, dateFormatter);","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid date format. Please use the format dd/MM/yyyy.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"     * Parses a task index string into an integer.","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"     * @param indexString the string representing the task index.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"     * @return the integer value of the task index.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"     * @throws TaskManagerException if the task index string is not a valid integer.","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"    public static int parseTaskIndex(String indexString) throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"            return Integer.parseInt(indexString);","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid task index. Please enter a valid integer.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"     * Parses a task description string.","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"     * @param descriptionString the string representing the task description.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"     * @return the parsed task description string.","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"    public static String parseTaskDescription(String descriptionString) {","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"        return descriptionString.trim();","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"     * Parses a priority level string.","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"     * @param priorityString the string representing the priority level.","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"     * @return the parsed priority level string.","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"     * @throws TaskManagerException if the priority level string is not valid.","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"    public static String parsePriorityLevel(String priorityString) throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"        String trimmedPriority \u003d priorityString.trim().toUpperCase();","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"        if (trimmedPriority.equals(\"H\") || trimmedPriority.equals(\"M\") || trimmedPriority.equals(\"L\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"            return trimmedPriority;","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"Aak242"},"content":"            throw new TaskManagerException(\"Invalid priority level. Please use \u0027H\u0027, \u0027M\u0027, or \u0027L\u0027.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"     * Validates the format of an \"add\" command.","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"Mahesh1772"},"content":"     * @param parts the array of command parts.","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"     * @throws TaskManagerException if the command format is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"    public static void validateAddCommand(String[] parts)","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"        if (parts.length !\u003d 4) {","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"Mahesh1772"},"content":"                    \"add, \u003cday\u003e, \u003ctaskType\u003e, \u003ctaskDescription\u003e\");","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"     * Validates the format of an \"update\" command.","lastModifiedDate":"2024-04-10"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"     * @param parts the array of command parts.","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"     * @throws TaskManagerException if the command format is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"    public static void validateUpdateCommand(String[] parts) throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"        if (parts.length !\u003d 4) {","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"                    \"update, \u003cday\u003e, \u003ctaskIndex\u003e, \u003cnewDescription\u003e\");","lastModifiedDate":"2024-04-10"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"     * Validates the format of a \"delete\" command.","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"     * @param parts the array of command parts.","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"     * @throws TaskManagerException if the command format is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"    public static void validateDeleteCommand(String[] parts) throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-04-10"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"Mahesh1772"},"content":"                    \"delete, \u003cday\u003e, \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-04-10"},{"lineNumber":111,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":115,"author":{"gitId":"Mahesh1772"},"content":"     * Validates the format of a command marking a task.","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"Mahesh1772"},"content":"     * @param parts the array of command parts.","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"Mahesh1772"},"content":"     * @throws TaskManagerException if the command format is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":120,"author":{"gitId":"Mahesh1772"},"content":"    public static void validateMarkCommand(String[] parts) throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":121,"author":{"gitId":"Mahesh1772"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-04-10"},{"lineNumber":122,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-04-10"},{"lineNumber":123,"author":{"gitId":"Mahesh1772"},"content":"                    \"mark, \u003cday\u003e, \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-04-10"},{"lineNumber":124,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":125,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":126,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":127,"author":{"gitId":"Aak242"},"content":"    public static void validateFreeCommand(String[] parts) throws TaskManagerException {","lastModifiedDate":"2024-04-12"},{"lineNumber":128,"author":{"gitId":"Aak242"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-04-12"},{"lineNumber":129,"author":{"gitId":"Aak242"},"content":"            throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-04-12"},{"lineNumber":130,"author":{"gitId":"Aak242"},"content":"                    \"free, \u003cday\u003e\");","lastModifiedDate":"2024-04-12"},{"lineNumber":131,"author":{"gitId":"Aak242"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":132,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":133,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":134,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":135,"author":{"gitId":"Mahesh1772"},"content":"     * Validates the format of a command setting priority.","lastModifiedDate":"2024-04-10"},{"lineNumber":136,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"Mahesh1772"},"content":"     * @param parts the array of command parts.","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"Mahesh1772"},"content":"     * @throws TaskManagerException if the command format is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":140,"author":{"gitId":"Mahesh1772"},"content":"    public static void validatePriorityCommand(String[] parts) throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"Mahesh1772"},"content":"        if (parts.length !\u003d 4) {","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-04-10"},{"lineNumber":143,"author":{"gitId":"Mahesh1772"},"content":"                    \"priority, \u003cday\u003e, \u003ctaskIndex\u003e, \u003cpriorityLevel\u003e\");","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":146,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"Mahesh1772":132,"NicholasTanYY":1,"Aak242":8,"kyhjonathan":5}},{"path":"src/main/java/data/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":" * A Deadline is a task that needs to be done before a specific date and time.","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"    protected String byDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"Aak242"},"content":"    protected String byTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"     * Deadlines are also considered as tasks.","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"Aak242"},"content":"     * @param byDate The date of the task\u0027s deadline as a string.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Aak242"},"content":"    public Deadline(String name, String byDate, String byTime) {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Aak242"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Aak242"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"     * Getter for by date of Deadline task.","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the by date.","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"    public String getByDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"        return byDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Aak242"},"content":"     * Getter for by time of Deadline task.","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Aak242"},"content":"     * @return The String representation of the by time.","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Aak242"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Aak242"},"content":"    public String getByTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Aak242"},"content":"        return byTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"     * Override function of superclass Task.","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"     * @return \"D\" which represents a Deadline task.","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType () {","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"        return \"D\";","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for a Deadline task.","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the save format for this task.","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"NicholasTanYY"},"content":"        return getTaskType() + \"|\" + getMarkedStatusIcon() + \"|\" + ","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"NicholasTanYY"},"content":"                getPriorityLevelIcon() + \"|\" + getName() + \"|\" + ","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"NicholasTanYY"},"content":"                getByDate() + \"|\" + getByTime();","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":48,"NicholasTanYY":3,"Aak242":16,"kyhjonathan":4}},{"path":"src/main/java/data/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    protected String startDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"    protected String endDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"Aak242"},"content":"    private final String startTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Aak242"},"content":"    private final String endTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     * Events are also considered as tasks.","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"     * @param start The starting time/date of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"     * @param end The ending time/date of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Aak242"},"content":"    public Event(String name, String start, String end, String startTime, String endTime) {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"        this.startDate \u003d start;","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"        this.endDate \u003d end;","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Aak242"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Aak242"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"     * Getter for start date of Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the start date.","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"        return startDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Aak242"},"content":"     * Getter for start time of Event task.","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Aak242"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Aak242"},"content":"     * @return The String representation of the start time.","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Aak242"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Aak242"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Aak242"},"content":"        return startTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Aak242"},"content":"     * Getter for end time of Event task.","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Aak242"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Aak242"},"content":"     * @return The String representation of the end time.","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Aak242"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Aak242"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Aak242"},"content":"        return endTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"     * Getter for end date of Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the end date.","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"        return endDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"     * Override function of superclass Task.","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"     * @return \"E\" which represents an Event task.","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"        return \"E\";","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for an Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the save format for this task.","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"NicholasTanYY"},"content":"        return getTaskType() + \"|\" + getMarkedStatusIcon() + \"|\" + getPriorityLevelIcon() + \"|\" + ","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"NicholasTanYY"},"content":"                getName() + \"|\" + getStartDate() + \"|\" + getEndDate() + \"|\" + getStartTime() + \"|\"","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Aak242"},"content":"                + getEndTime();","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":65,"NicholasTanYY":2,"Aak242":29}},{"path":"src/main/java/data/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    protected String name;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"    protected TaskPriorityLevel priorityLevel;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"    public Task(String name) {","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"        this.priorityLevel \u003d TaskPriorityLevel.LOW;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"     * Returns the name of the task that invokes this function.","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"     * @return Returns the string of the task\u0027s name.","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    public String getName() {","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"        return name;","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     * Sets the task\u0027s name to the given name.","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name to set the task\u0027s name to.","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"     * Checks if a task is complete and returns true if complete, false if incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"     * @return The boolean value that represents whether a task is completed:","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"        return isCompleted;","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"     * Sets the completeness status of a task.","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"     * @param completed Boolean value to set the task to.","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"    public void setCompleteness(boolean completed) {","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"        isCompleted \u003d completed;","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"     * Checks the completeness status of a task and returns to the","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"     * caller the status icon of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"     * \"X\" for complete, \" \" for incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"     * @return String representation of completeness status icon.","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"    ","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"NicholasTanYY"},"content":"    public String getMarkedStatusIcon() {","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"NicholasTanYY"},"content":"        return (isCompleted ? \"X\" : \"O\");","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"NicholasTanYY"},"content":"     * Sets the priority level of the task.","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"NicholasTanYY"},"content":"    public void setPriorityLevel(TaskPriorityLevel priorityLevelOfTask) {","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"NicholasTanYY"},"content":"        this.priorityLevel \u003d priorityLevelOfTask;","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"NicholasTanYY"},"content":"     * Gets the icon representation of the priority level of the task.","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"NicholasTanYY"},"content":"     * \"H\" for high, \"M\" for medium, \"L\" for low.","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"NicholasTanYY"},"content":"    public String getPriorityLevelIcon() {","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"NicholasTanYY"},"content":"        return (priorityLevel \u003d\u003d TaskPriorityLevel.HIGH ? \"H\" : ","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"NicholasTanYY"},"content":"                (priorityLevel \u003d\u003d TaskPriorityLevel.MEDIUM ? \"M\" :","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"NicholasTanYY"},"content":"                \"L\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"     * @return ? which represents an unclassified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"        return \"?\";","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"     * Getter for start date for an Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the Event subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"clarencepohh"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"clarencepohh"},"content":"     * Getter for end date for an Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the Event subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"clarencepohh"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"Aak242"},"content":"     * Getter for start time of Event task.","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"Aak242"},"content":"     * It is a dummy function meant for the Event subclass to override.","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"Aak242"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"Aak242"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"Aak242"},"content":"        return \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"Aak242"},"content":"     * Getter for end time of Event task.","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"Aak242"},"content":"     * It is a dummy function meant for the Event subclass to override.","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"Aak242"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"Aak242"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"Aak242"},"content":"        return \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":138,"author":{"gitId":"clarencepohh"},"content":"     * Getter for by date for a Deadline task.","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the Deadline subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":141,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":143,"author":{"gitId":"clarencepohh"},"content":"    public String getByDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":145,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":146,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":147,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"Aak242"},"content":"     * Getter for by time for a Deadline task.","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"Aak242"},"content":"     * It is a dummy function meant for the Deadline subclass to override","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"Aak242"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"Aak242"},"content":"    public String getByTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"Aak242"},"content":"        return \"\";","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":158,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for a task.","lastModifiedDate":"2024-03-23"},{"lineNumber":159,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":160,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":161,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":162,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":163,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":164,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":165,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":166,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"NicholasTanYY"},"content":"     * Method that creates the display format for a task.","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"NicholasTanYY"},"content":"     * ","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"NicholasTanYY"},"content":"     * @return The String representation of the display format for this task.","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"NicholasTanYY"},"content":"    public String getDisplayFormat() {","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"NicholasTanYY"},"content":"        String displayFormat \u003d String.format(","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"NicholasTanYY"},"content":"                \"[%s][%s][%s] \", getTaskType(), getMarkedStatusIcon(), getPriorityLevelIcon());","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"NicholasTanYY"},"content":"        return displayFormat;","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":115,"NicholasTanYY":33,"Aak242":30}},{"path":"src/main/java/data/TaskManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import time.MonthView;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Aak242"},"content":"import java.time.Duration;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Aak242"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Aak242"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Aak242"},"content":"import java.util.Objects;","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"import data.exceptions.MarkTaskException;","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"import data.exceptions.SetPriorityException;","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"import data.exceptions.TaskManagerException;","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.DEADLINE;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.EVENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.TODO;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"import static data.exceptions.MarkTaskException.checkIfTaskIndexIsValidForMarkingTask;","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"import static data.exceptions.SetPriorityException.checkIfPriorityIsValid;","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"import static data.exceptions.SetPriorityException.checkIfTaskIndexIsValidForPriority;","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"import static data.exceptions.TaskManagerException.checkIfDateHasTasks;","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"import static data.exceptions.TaskManagerException.checkIfDateInFormat;","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"import static data.exceptions.TaskManagerException.checkIfDateTimeInFormat;","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"import static data.exceptions.TaskManagerException.checkIfTaskExistsInCurrentDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"import static data.exceptions.TaskManagerException.checkIfTimeInFormat;","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"import static storage.Storage.saveTasksToFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":" * The TaskManager class manages tasks by providing functionalities to add, delete, and update tasks.","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":" * It provides methods to add tasks based on their type (Todo, Event, Deadline), delete tasks, update tasks,","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":" * mark tasks as completed or not completed, set priority levels for tasks, and retrieve tasks for a specific date.","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":" * It also provides methods to add tasks from a file and print free time slots for a specific date.","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"kyhjonathan"},"content":" * The class uses a Logger to log information and warnings related to task management.","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"Aak242"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"public class TaskManager {","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"    private static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"    private static final Map\u003cLocalDate, List\u003cTask\u003e\u003e tasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Aak242"},"content":"     * Adds a task for a specific date.","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"Aak242"},"content":"     * @param date The date for the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"     * @param taskType The TaskType of the task to be added.","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"     * @param dates A String array that contains the relevant dates for the task to be added.","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"kyhjonathan"},"content":"    public static void addTask(LocalDate date, String taskDescription, TaskType taskType,","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"kyhjonathan"},"content":"            String[] dates, String[] times)","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"        Task taskToAdd;","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"        switch (taskType) {","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"        case TODO:","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"            taskToAdd \u003d new Todo(taskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"        case EVENT:","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"            String startDate \u003d dates[0];","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"            String endDate \u003d dates[1];","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Aak242"},"content":"            String startTime \u003d times[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"kyhjonathan"},"content":"            checkIfTimeInFormat(startTime);","lastModifiedDate":"2024-04-08"},{"lineNumber":74,"author":{"gitId":"Aak242"},"content":"            String endTime \u003d times[1];","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"kyhjonathan"},"content":"            checkIfTimeInFormat(endTime);","lastModifiedDate":"2024-04-08"},{"lineNumber":76,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Aak242"},"content":"            taskToAdd \u003d new Event(taskDescription, startDate, endDate, startTime, endTime);","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"        case DEADLINE:","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"Aak242"},"content":"            String deadlineDate \u003d dates[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Aak242"},"content":"            String deadlineTime \u003d times[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"kyhjonathan"},"content":"            checkIfTimeInFormat(deadlineTime);","lastModifiedDate":"2024-04-08"},{"lineNumber":84,"author":{"gitId":"Aak242"},"content":"            taskToAdd \u003d new Deadline(taskDescription, deadlineDate, deadlineTime);","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"        default:","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"            throw new TaskManagerException(\"Invalid task type given. T for Todo, E for event, D for deadline.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"        tasks.computeIfAbsent(date, k -\u003e new ArrayList\u003c\u003e()).add(taskToAdd);","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"Aak242"},"content":"     * Deletes a task for a specific date and task index.","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"     * Adds an option to mute system outputs (Used for testing only).","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"Aak242"},"content":"     * @param date The date of the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"Aak242"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"     * @param isMuted Whether system outputs are muted.","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"clarencepohh"},"content":"    public void deleteTask(LocalDate date, int taskIndex, boolean isMuted) {","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":104,"author":{"gitId":"clarencepohh"},"content":"        if (dayTasks !\u003d null \u0026\u0026 taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"clarencepohh"},"content":"            dayTasks.remove(taskIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"clarencepohh"},"content":"            if (dayTasks.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"clarencepohh"},"content":"                tasks.remove(date);","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"clarencepohh"},"content":"            if (!isMuted) {","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"Mahesh1772"},"content":"                System.out.println(\"Task deleted.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"clarencepohh"},"content":"            if (!isMuted) {","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"Mahesh1772"},"content":"                System.out.println(\"The task you are trying to delete does not exist.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"Aak242"},"content":"     * Updates a task for a specific date and task index.","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"Aak242"},"content":"     * @param date              The date of the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"Aak242"},"content":"     * @param taskIndex         The index of the task to update.","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"clarencepohh"},"content":"     * @param newTaskDescription The updated description of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":126,"author":{"gitId":"Aak242"},"content":"     * @throws IndexOutOfBoundsException If the task index is out of bounds.","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"Aak242"},"content":"    public static void updateTask(LocalDate date, int taskIndex, String newTaskDescription, Scanner scanner,","lastModifiedDate":"2024-04-10"},{"lineNumber":129,"author":{"gitId":"Aak242"},"content":"            boolean inMonthView, WeekView weekView)","lastModifiedDate":"2024-04-10"},{"lineNumber":130,"author":{"gitId":"Aak242"},"content":"            throws IndexOutOfBoundsException, TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":131,"author":{"gitId":"Aak242"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"NicholasTanYY"},"content":"            List\u003cTask\u003e dayTasks \u003d getDayTasks(date);","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"Aak242"},"content":"            boolean dayHasTasks \u003d dayTasks !\u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"Aak242"},"content":"            boolean taskIndexExists \u003d taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c Objects.requireNonNull(dayTasks).size();","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"Aak242"},"content":"            assert dayHasTasks;","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"Aak242"},"content":"            assert taskIndexExists;","lastModifiedDate":"2024-03-22"},{"lineNumber":137,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":138,"author":{"gitId":"Aak242"},"content":"            String oldDescription \u003d dayTasks.get(taskIndex).getName();","lastModifiedDate":"2024-03-22"},{"lineNumber":139,"author":{"gitId":"Aak242"},"content":"            String currentTaskType \u003d dayTasks.get(taskIndex).getTaskType();","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":141,"author":{"gitId":"Aak242"},"content":"            Task task;","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"Aak242"},"content":"            switch (currentTaskType) {","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"Aak242"},"content":"            case \"T\":","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"Aak242"},"content":"                task \u003d new Todo(newTaskDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"Aak242"},"content":"                logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"Aak242"},"content":"                        oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"Aak242"},"content":"                dayTasks.set(taskIndex, task);","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"Aak242"},"content":"                break;","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"Aak242"},"content":"            case \"E\":","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"kyhjonathan"},"content":"                task \u003d updateEventTask(scanner, dayTasks, taskIndex, newTaskDescription, oldDescription);","lastModifiedDate":"2024-04-10"},{"lineNumber":151,"author":{"gitId":"kyhjonathan"},"content":"                break;","lastModifiedDate":"2024-04-10"},{"lineNumber":152,"author":{"gitId":"kyhjonathan"},"content":"            case \"D\":","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"kyhjonathan"},"content":"                task \u003d updateDeadlineTask(scanner, dayTasks, taskIndex, newTaskDescription, oldDescription);","lastModifiedDate":"2024-04-10"},{"lineNumber":154,"author":{"gitId":"kyhjonathan"},"content":"                break;","lastModifiedDate":"2024-04-10"},{"lineNumber":155,"author":{"gitId":"kyhjonathan"},"content":"            default:","lastModifiedDate":"2024-04-10"},{"lineNumber":156,"author":{"gitId":"kyhjonathan"},"content":"                throw new IllegalArgumentException(\"Invalid task type\");","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":159,"author":{"gitId":"kyhjonathan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":160,"author":{"gitId":"kyhjonathan"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of bounds.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":162,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":165,"author":{"gitId":"kyhjonathan"},"content":"     * Updates the details of an Event task.","lastModifiedDate":"2024-04-12"},{"lineNumber":166,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":167,"author":{"gitId":"kyhjonathan"},"content":"     * @param scanner Scanner object to read user input for updating task details.","lastModifiedDate":"2024-04-12"},{"lineNumber":168,"author":{"gitId":"kyhjonathan"},"content":"     * @param dayTasks List of tasks for the day.","lastModifiedDate":"2024-04-12"},{"lineNumber":169,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskIndex Index of the task to be updated.","lastModifiedDate":"2024-04-12"},{"lineNumber":170,"author":{"gitId":"kyhjonathan"},"content":"     * @param newTaskDescription New description for the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":171,"author":{"gitId":"kyhjonathan"},"content":"     * @param oldDescription Old description of the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":172,"author":{"gitId":"kyhjonathan"},"content":"     * @return Updated Task object.","lastModifiedDate":"2024-04-12"},{"lineNumber":173,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":174,"author":{"gitId":"clarencepohh"},"content":"    public static Task updateEventTask(Scanner scanner, List\u003cTask\u003e dayTasks,","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"kyhjonathan"},"content":"            int taskIndex, String newTaskDescription, String oldDescription) throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":176,"author":{"gitId":"Aak242"},"content":"        Event oldEvent \u003d (Event) dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"Aak242"},"content":"        System.out.println(\"Do you want to update the start and end dates and times? (yes/no)\");","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"Aak242"},"content":"        String eventResponse \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"Aak242"},"content":"        if (eventResponse.equals(\"yes\")) {","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"Aak242"},"content":"            System.out.println(\"Enter the new start date, end date, start time and end time, \" +","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"Aak242"},"content":"                    \"separated by spaces:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"Aak242"},"content":"            String[] newDatesAndTimes \u003d scanner.nextLine().trim().split(\" \");","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"kyhjonathan"},"content":"            checkIfDateInFormat(newDatesAndTimes[0]);","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"kyhjonathan"},"content":"            checkIfDateInFormat(newDatesAndTimes[1]);","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"kyhjonathan"},"content":"            checkIfTimeInFormat(newDatesAndTimes[2]);","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"kyhjonathan"},"content":"            checkIfTimeInFormat(newDatesAndTimes[3]);","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":191,"author":{"gitId":"kyhjonathan"},"content":"            Task task \u003d new Event(newTaskDescription, newDatesAndTimes[0], newDatesAndTimes[1], newDatesAndTimes[2],","lastModifiedDate":"2024-04-10"},{"lineNumber":192,"author":{"gitId":"Aak242"},"content":"                    newDatesAndTimes[3]);","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"Aak242"},"content":"            tasks.computeIfAbsent(LocalDate.parse(newDatesAndTimes[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")),","lastModifiedDate":"2024-04-15"},{"lineNumber":195,"author":{"gitId":"Aak242"},"content":"                    k -\u003e new ArrayList\u003c\u003e()).add(task);","lastModifiedDate":"2024-04-15"},{"lineNumber":196,"author":{"gitId":"Aak242"},"content":"            dayTasks.remove(taskIndex);","lastModifiedDate":"2024-04-15"},{"lineNumber":197,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":198,"author":{"gitId":"kyhjonathan"},"content":"            updateEventLogging(newTaskDescription, oldDescription, oldEvent, newDatesAndTimes);","lastModifiedDate":"2024-04-10"},{"lineNumber":199,"author":{"gitId":"kyhjonathan"},"content":"            return task;","lastModifiedDate":"2024-04-10"},{"lineNumber":200,"author":{"gitId":"Aak242"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"kyhjonathan"},"content":"            Task task \u003d new Event(newTaskDescription, oldEvent.getStartDate(), oldEvent.getEndDate(),","lastModifiedDate":"2024-04-10"},{"lineNumber":202,"author":{"gitId":"Aak242"},"content":"                    oldEvent.getStartTime(), oldEvent.getEndTime());","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"Aak242"},"content":"            logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"Aak242"},"content":"                    oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"Aak242"},"content":"            dayTasks.set(taskIndex, task);","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"kyhjonathan"},"content":"            return task;","lastModifiedDate":"2024-04-10"},{"lineNumber":208,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":209,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":212,"author":{"gitId":"kyhjonathan"},"content":"     * Updates the details of a Deadline task.","lastModifiedDate":"2024-04-12"},{"lineNumber":213,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":214,"author":{"gitId":"kyhjonathan"},"content":"     * @param scanner Scanner object to read user input for updating task details.","lastModifiedDate":"2024-04-12"},{"lineNumber":215,"author":{"gitId":"kyhjonathan"},"content":"     * @param dayTasks List of tasks for the day.","lastModifiedDate":"2024-04-12"},{"lineNumber":216,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskIndex Index of the task to be updated.","lastModifiedDate":"2024-04-12"},{"lineNumber":217,"author":{"gitId":"kyhjonathan"},"content":"     * @param newTaskDescription New description for the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":218,"author":{"gitId":"kyhjonathan"},"content":"     * @param oldDescription Old description of the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":219,"author":{"gitId":"kyhjonathan"},"content":"     * @return Updated Task object.","lastModifiedDate":"2024-04-12"},{"lineNumber":220,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":221,"author":{"gitId":"clarencepohh"},"content":"    public static Task updateDeadlineTask(Scanner scanner, List\u003cTask\u003e dayTasks,","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"kyhjonathan"},"content":"            int taskIndex, String newTaskDescription, String oldDescription) {","lastModifiedDate":"2024-04-10"},{"lineNumber":223,"author":{"gitId":"Aak242"},"content":"        Deadline oldDeadline \u003d (Deadline) dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"Aak242"},"content":"        System.out.println(\"Do you want to update the deadline date and time? (yes/no)\");","lastModifiedDate":"2024-03-25"},{"lineNumber":225,"author":{"gitId":"Aak242"},"content":"        String deadlineResponse \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"Aak242"},"content":"        if (deadlineResponse.equals(\"yes\")) {","lastModifiedDate":"2024-03-25"},{"lineNumber":227,"author":{"gitId":"Aak242"},"content":"            System.out.println(\"Enter the new deadline date and time, separated by a space:\");","lastModifiedDate":"2024-03-25"},{"lineNumber":228,"author":{"gitId":"clarencepohh"},"content":"            String[] newDatesAndTimes \u003d scanner.nextLine().trim().split(\" \");","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"kyhjonathan"},"content":"            Task task \u003d new Deadline(newTaskDescription, newDatesAndTimes[0], newDatesAndTimes[1]);","lastModifiedDate":"2024-04-10"},{"lineNumber":230,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":231,"author":{"gitId":"Aak242"},"content":"            tasks.computeIfAbsent(LocalDate.parse(newDatesAndTimes[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")),","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"Aak242"},"content":"                    k -\u003e new ArrayList\u003c\u003e()).add(task);","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"Aak242"},"content":"            dayTasks.remove(taskIndex);","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"clarencepohh"},"content":"            logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-03-23"},{"lineNumber":236,"author":{"gitId":"clarencepohh"},"content":"                    oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":237,"author":{"gitId":"Aak242"},"content":"            logger.log(Level.INFO, \"Updating task deadline date from \" + oldDeadline.getByDate() + \" to: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"clarencepohh"},"content":"                    + newDatesAndTimes[0]);","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"Aak242"},"content":"            logger.log(Level.INFO, \"Updating task deadline time from \" + oldDeadline.getByTime() + \" to: \"","lastModifiedDate":"2024-03-28"},{"lineNumber":240,"author":{"gitId":"clarencepohh"},"content":"                    + newDatesAndTimes[1]);","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"kyhjonathan"},"content":"            return task;","lastModifiedDate":"2024-04-10"},{"lineNumber":242,"author":{"gitId":"Aak242"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":243,"author":{"gitId":"kyhjonathan"},"content":"            Task task \u003d new Deadline(newTaskDescription, oldDeadline.getByDate(), oldDeadline.getByTime());","lastModifiedDate":"2024-04-10"},{"lineNumber":244,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":245,"author":{"gitId":"Aak242"},"content":"            logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"Aak242"},"content":"                    oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":247,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":248,"author":{"gitId":"Aak242"},"content":"            dayTasks.set(taskIndex, task);","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"kyhjonathan"},"content":"            return task;","lastModifiedDate":"2024-04-10"},{"lineNumber":250,"author":{"gitId":"Aak242"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":251,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":252,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":253,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":254,"author":{"gitId":"kyhjonathan"},"content":"     * Logs the updates made to an Event task.","lastModifiedDate":"2024-04-12"},{"lineNumber":255,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":256,"author":{"gitId":"kyhjonathan"},"content":"     * @param newTaskDescription New description for the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":257,"author":{"gitId":"kyhjonathan"},"content":"     * @param oldDescription Old description of the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":258,"author":{"gitId":"kyhjonathan"},"content":"     * @param oldEvent The old Event task that is being updated.","lastModifiedDate":"2024-04-12"},{"lineNumber":259,"author":{"gitId":"kyhjonathan"},"content":"     * @param newDatesAndTimes Array containing the new start and end dates and times for the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":260,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":261,"author":{"gitId":"kyhjonathan"},"content":"    private static void updateEventLogging(String newTaskDescription,","lastModifiedDate":"2024-04-10"},{"lineNumber":262,"author":{"gitId":"kyhjonathan"},"content":"            String oldDescription, Event oldEvent, String[] newDatesAndTimes) {","lastModifiedDate":"2024-04-10"},{"lineNumber":263,"author":{"gitId":"kyhjonathan"},"content":"        logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-04-10"},{"lineNumber":264,"author":{"gitId":"kyhjonathan"},"content":"                oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-04-10"},{"lineNumber":265,"author":{"gitId":"kyhjonathan"},"content":"        logger.log(Level.INFO, \"Updating task start date from \" +","lastModifiedDate":"2024-04-10"},{"lineNumber":266,"author":{"gitId":"kyhjonathan"},"content":"                oldEvent.getStartDate() + \" to: \" + newDatesAndTimes[0]);","lastModifiedDate":"2024-04-10"},{"lineNumber":267,"author":{"gitId":"kyhjonathan"},"content":"        logger.log(Level.INFO, \"Updating task end date from \" + oldEvent.getEndDate() + \" to: \"","lastModifiedDate":"2024-04-10"},{"lineNumber":268,"author":{"gitId":"kyhjonathan"},"content":"                + newDatesAndTimes[1]);","lastModifiedDate":"2024-04-10"},{"lineNumber":269,"author":{"gitId":"kyhjonathan"},"content":"        logger.log(Level.INFO, \"Updating task start time from \" + oldEvent.getStartTime() + \" to: \"","lastModifiedDate":"2024-04-10"},{"lineNumber":270,"author":{"gitId":"kyhjonathan"},"content":"                + newDatesAndTimes[2]);","lastModifiedDate":"2024-04-10"},{"lineNumber":271,"author":{"gitId":"kyhjonathan"},"content":"        logger.log(Level.INFO, \"Updating task end time from \" + oldEvent.getEndTime() + \" to: \"","lastModifiedDate":"2024-04-10"},{"lineNumber":272,"author":{"gitId":"kyhjonathan"},"content":"                + newDatesAndTimes[3]);","lastModifiedDate":"2024-04-10"},{"lineNumber":273,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":274,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":275,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":276,"author":{"gitId":"clarencepohh"},"content":"     * Method to get the tasks for a specified date.","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":278,"author":{"gitId":"clarencepohh"},"content":"     * @param date The date to be checked.","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"clarencepohh"},"content":"     * @return An ArrayList of Tasks containing the tasks on the specified date.","lastModifiedDate":"2024-04-02"},{"lineNumber":280,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":281,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":282,"author":{"gitId":"NicholasTanYY"},"content":"    public static List\u003cTask\u003e getDayTasks(LocalDate date) {","lastModifiedDate":"2024-03-30"},{"lineNumber":283,"author":{"gitId":"kyhjonathan"},"content":"        return tasks.get(date);","lastModifiedDate":"2024-04-14"},{"lineNumber":284,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":285,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":286,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":287,"author":{"gitId":"NicholasTanYY"},"content":"     * Marks a task as completed.","lastModifiedDate":"2024-03-30"},{"lineNumber":288,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":289,"author":{"gitId":"NicholasTanYY"},"content":"     * @param date The date of the task.","lastModifiedDate":"2024-03-30"},{"lineNumber":290,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskIndex The index of the task to mark.","lastModifiedDate":"2024-03-30"},{"lineNumber":291,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":292,"author":{"gitId":"NicholasTanYY"},"content":"    public void markTaskAsCompleted(LocalDate date, int taskIndex) {","lastModifiedDate":"2024-03-30"},{"lineNumber":293,"author":{"gitId":"NicholasTanYY"},"content":"        List\u003cTask\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-03-30"},{"lineNumber":294,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":295,"author":{"gitId":"NicholasTanYY"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":296,"author":{"gitId":"NicholasTanYY"},"content":"            dayTasks.get(taskIndex).setCompleteness(true);","lastModifiedDate":"2024-03-30"},{"lineNumber":297,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.println(\"Task marked as done.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":298,"author":{"gitId":"NicholasTanYY"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":299,"author":{"gitId":"NicholasTanYY"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of bounds.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":300,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":301,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":302,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":303,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":304,"author":{"gitId":"NicholasTanYY"},"content":"     * Marks a task as not completed.","lastModifiedDate":"2024-03-30"},{"lineNumber":305,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":306,"author":{"gitId":"NicholasTanYY"},"content":"     * @param date The date of the task.","lastModifiedDate":"2024-03-30"},{"lineNumber":307,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskIndex The index of the task to mark.","lastModifiedDate":"2024-03-30"},{"lineNumber":308,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":309,"author":{"gitId":"NicholasTanYY"},"content":"    public void markTaskAsNotCompleted(LocalDate date, int taskIndex) {","lastModifiedDate":"2024-03-30"},{"lineNumber":310,"author":{"gitId":"NicholasTanYY"},"content":"        List\u003cTask\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-03-30"},{"lineNumber":311,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":312,"author":{"gitId":"NicholasTanYY"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":313,"author":{"gitId":"NicholasTanYY"},"content":"            dayTasks.get(taskIndex).setCompleteness(false);","lastModifiedDate":"2024-03-30"},{"lineNumber":314,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.println(\"Unmarked task.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":315,"author":{"gitId":"NicholasTanYY"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":316,"author":{"gitId":"NicholasTanYY"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of bounds.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":317,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":318,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":319,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":320,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":321,"author":{"gitId":"Aak242"},"content":"     * Retrieves tasks for a specific date.","lastModifiedDate":"2024-03-19"},{"lineNumber":322,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":323,"author":{"gitId":"Aak242"},"content":"     * @param date The date to retrieve tasks for.","lastModifiedDate":"2024-03-19"},{"lineNumber":324,"author":{"gitId":"Aak242"},"content":"     * @return A list of tasks for the given date.","lastModifiedDate":"2024-03-19"},{"lineNumber":325,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":326,"author":{"gitId":"clarencepohh"},"content":"    public List\u003cTask\u003e getTasksForDate(LocalDate date) {","lastModifiedDate":"2024-03-22"},{"lineNumber":327,"author":{"gitId":"clarencepohh"},"content":"        return tasks.getOrDefault(date, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-16"},{"lineNumber":328,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":329,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":330,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":331,"author":{"gitId":"Aak242"},"content":"     * Adds a task from user input along with the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":332,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":333,"author":{"gitId":"clarencepohh"},"content":"     * @param scanner The scanner object used to read user input.","lastModifiedDate":"2024-04-02"},{"lineNumber":334,"author":{"gitId":"Aak242"},"content":"     * @param weekView WeekView object to validate the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":335,"author":{"gitId":"clarencepohh"},"content":"     * @param monthView MonthView object to validate the date.","lastModifiedDate":"2024-04-02"},{"lineNumber":336,"author":{"gitId":"Aak242"},"content":"     * @param inMonthView A boolean indicating whether the view is in month view or not.","lastModifiedDate":"2024-03-19"},{"lineNumber":337,"author":{"gitId":"clarencepohh"},"content":"     * @param day The String representing the date to add the task in.","lastModifiedDate":"2024-04-02"},{"lineNumber":338,"author":{"gitId":"clarencepohh"},"content":"     * @param taskTypeString The String representing the taskType of the task to be added.","lastModifiedDate":"2024-04-02"},{"lineNumber":339,"author":{"gitId":"clarencepohh"},"content":"     * @param taskDescription The String representing the description of the task to be added.","lastModifiedDate":"2024-04-02"},{"lineNumber":340,"author":{"gitId":"Aak242"},"content":"     * @throws TaskManagerException If there is an error in managing tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":341,"author":{"gitId":"clarencepohh"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-03-23"},{"lineNumber":342,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":343,"author":{"gitId":"Aak242"},"content":"    public void addManager(Scanner scanner, WeekView weekView, MonthView monthView, boolean inMonthView, String action,","lastModifiedDate":"2024-03-28"},{"lineNumber":344,"author":{"gitId":"Mahesh1772"},"content":"            String day, String taskTypeString, String taskDescription)","lastModifiedDate":"2024-03-25"},{"lineNumber":345,"author":{"gitId":"kyhjonathan"},"content":"            throws TaskManagerException,DateTimeParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":346,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":347,"author":{"gitId":"Mahesh1772"},"content":"        // Convert the day to a LocalDate","lastModifiedDate":"2024-03-24"},{"lineNumber":348,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":349,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":350,"author":{"gitId":"Mahesh1772"},"content":"        // Convert dayString to int","lastModifiedDate":"2024-03-25"},{"lineNumber":351,"author":{"gitId":"Mahesh1772"},"content":"        int dayInt \u003d Integer.parseInt(day);","lastModifiedDate":"2024-03-25"},{"lineNumber":352,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":353,"author":{"gitId":"NicholasTanYY"},"content":"        date \u003d findDateFromDayNumber(weekView, monthView, inMonthView, dayInt);","lastModifiedDate":"2024-03-30"},{"lineNumber":354,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":355,"author":{"gitId":"Mahesh1772"},"content":"        // Parse the task type","lastModifiedDate":"2024-03-24"},{"lineNumber":356,"author":{"gitId":"Mahesh1772"},"content":"        TaskType taskType \u003d parseTaskType(taskTypeString.toUpperCase());","lastModifiedDate":"2024-03-24"},{"lineNumber":357,"author":{"gitId":"Aak242"},"content":"        String typeName \u003d taskType.equals(TODO) ? \"Todo\" : taskType.equals(DEADLINE) ? \"Deadline\" : \"Event\";","lastModifiedDate":"2024-03-28"},{"lineNumber":358,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":359,"author":{"gitId":"kyhjonathan"},"content":"        //Add task based on type","lastModifiedDate":"2024-04-10"},{"lineNumber":360,"author":{"gitId":"kyhjonathan"},"content":"        addTaskBasedOnType(scanner, taskDescription, taskType, date);","lastModifiedDate":"2024-04-10"},{"lineNumber":361,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":362,"author":{"gitId":"kyhjonathan"},"content":"        // Save tasks to file","lastModifiedDate":"2024-04-10"},{"lineNumber":363,"author":{"gitId":"kyhjonathan"},"content":"        saveTasksToFile(tasks, Storage.FILE_PATH); // Update tasks.txt file","lastModifiedDate":"2024-04-10"},{"lineNumber":364,"author":{"gitId":"kyhjonathan"},"content":"        System.out.println(typeName + \" added.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":365,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":366,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":367,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":368,"author":{"gitId":"kyhjonathan"},"content":"     * Adds a task based on its type.","lastModifiedDate":"2024-04-12"},{"lineNumber":369,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":370,"author":{"gitId":"kyhjonathan"},"content":"     * @param scanner Scanner object to read user input for task details.","lastModifiedDate":"2024-04-12"},{"lineNumber":371,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskDescription Description of the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":372,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskType Type of the task (TODO, EVENT, DEADLINE).","lastModifiedDate":"2024-04-12"},{"lineNumber":373,"author":{"gitId":"kyhjonathan"},"content":"     * @param date Date for the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":374,"author":{"gitId":"kyhjonathan"},"content":"     * @throws TaskManagerException If an invalid task type is provided.","lastModifiedDate":"2024-04-12"},{"lineNumber":375,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":376,"author":{"gitId":"kyhjonathan"},"content":"    private static void addTaskBasedOnType(Scanner scanner, String taskDescription,","lastModifiedDate":"2024-04-10"},{"lineNumber":377,"author":{"gitId":"kyhjonathan"},"content":"            TaskType taskType, LocalDate date) throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":378,"author":{"gitId":"Mahesh1772"},"content":"        if (taskType \u003d\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":379,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid task type. Please provide valid task type: \" +","lastModifiedDate":"2024-03-24"},{"lineNumber":380,"author":{"gitId":"Mahesh1772"},"content":"                    \"T for Todo, E for event, D for deadline.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":381,"author":{"gitId":"Aak242"},"content":"        } else if (taskType \u003d\u003d DEADLINE) {","lastModifiedDate":"2024-03-28"},{"lineNumber":382,"author":{"gitId":"kyhjonathan"},"content":"            parseAndAddDeadline(scanner, taskDescription, taskType, date);","lastModifiedDate":"2024-04-10"},{"lineNumber":383,"author":{"gitId":"clarencepohh"},"content":"        } else if (taskType \u003d\u003d EVENT) {","lastModifiedDate":"2024-03-23"},{"lineNumber":384,"author":{"gitId":"kyhjonathan"},"content":"            parseAndAddEvent(scanner, taskDescription, taskType, date);","lastModifiedDate":"2024-04-10"},{"lineNumber":385,"author":{"gitId":"Aak242"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":386,"author":{"gitId":"kyhjonathan"},"content":"            // dummy String array to pass into function call","lastModifiedDate":"2024-04-12"},{"lineNumber":387,"author":{"gitId":"kyhjonathan"},"content":"            String[] dummyDates \u003d {null};","lastModifiedDate":"2024-04-12"},{"lineNumber":388,"author":{"gitId":"kyhjonathan"},"content":"            // dummy String array to pass into function call","lastModifiedDate":"2024-04-12"},{"lineNumber":389,"author":{"gitId":"kyhjonathan"},"content":"            String[] dummyTimes \u003d {null};","lastModifiedDate":"2024-04-12"},{"lineNumber":390,"author":{"gitId":"kyhjonathan"},"content":"            // Call function to add tasks","lastModifiedDate":"2024-04-12"},{"lineNumber":391,"author":{"gitId":"kyhjonathan"},"content":"            addTask(date, taskDescription, taskType, dummyDates, dummyTimes);","lastModifiedDate":"2024-04-10"},{"lineNumber":392,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":393,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":394,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":395,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":396,"author":{"gitId":"kyhjonathan"},"content":"     * Parses and adds an Event task.","lastModifiedDate":"2024-04-12"},{"lineNumber":397,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":398,"author":{"gitId":"kyhjonathan"},"content":"     * @param scanner Scanner object to read user input for task details.","lastModifiedDate":"2024-04-12"},{"lineNumber":399,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskDescription Description of the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":400,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskType Type of the task (EVENT).","lastModifiedDate":"2024-04-12"},{"lineNumber":401,"author":{"gitId":"kyhjonathan"},"content":"     * @param date Date for the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":402,"author":{"gitId":"kyhjonathan"},"content":"     * @throws TaskManagerException If an invalid task type is provided or if there is an error in date/time format.","lastModifiedDate":"2024-04-12"},{"lineNumber":403,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":404,"author":{"gitId":"kyhjonathan"},"content":"    private static void parseAndAddEvent(Scanner scanner, String taskDescription,","lastModifiedDate":"2024-04-10"},{"lineNumber":405,"author":{"gitId":"kyhjonathan"},"content":"            TaskType taskType, LocalDate date) throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":406,"author":{"gitId":"Aak242"},"content":"        System.out.println(\"Enter the start date of this task, along with the start time separated by a space:\");","lastModifiedDate":"2024-03-25"},{"lineNumber":407,"author":{"gitId":"kyhjonathan"},"content":"        String inputStartDateAndTime \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-04-08"},{"lineNumber":408,"author":{"gitId":"kyhjonathan"},"content":"        checkIfDateTimeInFormat(inputStartDateAndTime);","lastModifiedDate":"2024-04-08"},{"lineNumber":409,"author":{"gitId":"kyhjonathan"},"content":"        String[] startDateAndTime \u003d inputStartDateAndTime.split(\" \");","lastModifiedDate":"2024-04-08"},{"lineNumber":410,"author":{"gitId":"Aak242"},"content":"        String startDate \u003d startDateAndTime[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":411,"author":{"gitId":"Aak242"},"content":"        String startTime \u003d startDateAndTime[1];","lastModifiedDate":"2024-03-25"},{"lineNumber":412,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":413,"author":{"gitId":"Aak242"},"content":"        System.out.println(\"Enter the end date of this task, along with the end time separated by a space:\");","lastModifiedDate":"2024-03-25"},{"lineNumber":414,"author":{"gitId":"kyhjonathan"},"content":"        String inputEndDateAndTime \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-04-08"},{"lineNumber":415,"author":{"gitId":"kyhjonathan"},"content":"        checkIfDateTimeInFormat(inputEndDateAndTime);","lastModifiedDate":"2024-04-08"},{"lineNumber":416,"author":{"gitId":"kyhjonathan"},"content":"        String[] endDateAndTime \u003d inputEndDateAndTime.split(\" \");","lastModifiedDate":"2024-04-08"},{"lineNumber":417,"author":{"gitId":"Aak242"},"content":"        String endDate \u003d endDateAndTime[0];","lastModifiedDate":"2024-03-25"},{"lineNumber":418,"author":{"gitId":"Aak242"},"content":"        String endTime \u003d endDateAndTime[1];","lastModifiedDate":"2024-03-25"},{"lineNumber":419,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":420,"author":{"gitId":"clarencepohh"},"content":"        String [] startAndEndDates \u003d new String[]{startDate, endDate};","lastModifiedDate":"2024-03-23"},{"lineNumber":421,"author":{"gitId":"Aak242"},"content":"        String [] startAndEndTimes \u003d new String[]{startTime, endTime};","lastModifiedDate":"2024-03-25"},{"lineNumber":422,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":423,"author":{"gitId":"Aak242"},"content":"        addTask(date, taskDescription, taskType, startAndEndDates, startAndEndTimes);","lastModifiedDate":"2024-03-25"},{"lineNumber":424,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":425,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":426,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":427,"author":{"gitId":"kyhjonathan"},"content":"     * Parses and adds a Deadline task.","lastModifiedDate":"2024-04-12"},{"lineNumber":428,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":429,"author":{"gitId":"kyhjonathan"},"content":"     * @param scanner Scanner object to read user input for task details.","lastModifiedDate":"2024-04-12"},{"lineNumber":430,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskDescription Description of the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":431,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskType Type of the task (DEADLINE).","lastModifiedDate":"2024-04-12"},{"lineNumber":432,"author":{"gitId":"kyhjonathan"},"content":"     * @param date Date for the task.","lastModifiedDate":"2024-04-12"},{"lineNumber":433,"author":{"gitId":"kyhjonathan"},"content":"     * @throws TaskManagerException If an invalid task type is provided or if there is an error in date/time format.","lastModifiedDate":"2024-04-12"},{"lineNumber":434,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":435,"author":{"gitId":"kyhjonathan"},"content":"    private static void parseAndAddDeadline(Scanner scanner, String taskDescription,","lastModifiedDate":"2024-04-10"},{"lineNumber":436,"author":{"gitId":"kyhjonathan"},"content":"            TaskType taskType, LocalDate date) throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":437,"author":{"gitId":"kyhjonathan"},"content":"        System.out.println(\"Enter the deadline date and time of this task, separated by a space:\");","lastModifiedDate":"2024-04-10"},{"lineNumber":438,"author":{"gitId":"kyhjonathan"},"content":"        String inputDeadlineDateAndTime \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-04-10"},{"lineNumber":439,"author":{"gitId":"kyhjonathan"},"content":"        checkIfDateTimeInFormat(inputDeadlineDateAndTime);","lastModifiedDate":"2024-04-10"},{"lineNumber":440,"author":{"gitId":"kyhjonathan"},"content":"        String[] deadlineDateAndTime \u003d inputDeadlineDateAndTime.split(\" \");","lastModifiedDate":"2024-04-10"},{"lineNumber":441,"author":{"gitId":"kyhjonathan"},"content":"        String[] deadlineDate \u003d new String[]{deadlineDateAndTime[0]};","lastModifiedDate":"2024-04-10"},{"lineNumber":442,"author":{"gitId":"kyhjonathan"},"content":"        String[] deadlineTime \u003d new String[]{deadlineDateAndTime[1]};","lastModifiedDate":"2024-04-10"},{"lineNumber":443,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":444,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, taskDescription, taskType, deadlineDate, deadlineTime);","lastModifiedDate":"2024-04-10"},{"lineNumber":445,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":446,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":447,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":448,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":449,"author":{"gitId":"Aak242"},"content":"     * @param weekView The WeekView object for finding the date.","lastModifiedDate":"2024-04-10"},{"lineNumber":450,"author":{"gitId":"Aak242"},"content":"     * @param monthView The MonthView object for finding the date.","lastModifiedDate":"2024-04-10"},{"lineNumber":451,"author":{"gitId":"Aak242"},"content":"     * @param inMonthView A boolean indicating whether the view is in month view or not.","lastModifiedDate":"2024-04-10"},{"lineNumber":452,"author":{"gitId":"Aak242"},"content":"     * @param day The day of the task to show free times for.","lastModifiedDate":"2024-04-10"},{"lineNumber":453,"author":{"gitId":"Aak242"},"content":"     * @throws TaskManagerException If there is an error in managing tasks.","lastModifiedDate":"2024-04-10"},{"lineNumber":454,"author":{"gitId":"Aak242"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-04-10"},{"lineNumber":455,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":456,"author":{"gitId":"Aak242"},"content":"    public void freeTimesManager(WeekView weekView, MonthView monthView, boolean inMonthView, String day)","lastModifiedDate":"2024-04-10"},{"lineNumber":457,"author":{"gitId":"Aak242"},"content":"            throws TaskManagerException, DateTimeParseException {","lastModifiedDate":"2024-04-10"},{"lineNumber":458,"author":{"gitId":"Aak242"},"content":"        LocalDate date;","lastModifiedDate":"2024-04-10"},{"lineNumber":459,"author":{"gitId":"Aak242"},"content":"        int dayInt \u003d Integer.parseInt(day);","lastModifiedDate":"2024-04-10"},{"lineNumber":460,"author":{"gitId":"Aak242"},"content":"        date \u003d findDateFromDayNumber(weekView, monthView, inMonthView, dayInt);","lastModifiedDate":"2024-04-10"},{"lineNumber":461,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":462,"author":{"gitId":"Aak242"},"content":"        List\u003cTask\u003e eventsForDate \u003d getEventsForDate(date);","lastModifiedDate":"2024-04-10"},{"lineNumber":463,"author":{"gitId":"Aak242"},"content":"        List\u003cString\u003e freeTimes \u003d getFreeTimeSlots(eventsForDate, date);","lastModifiedDate":"2024-04-10"},{"lineNumber":464,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":465,"author":{"gitId":"Aak242"},"content":"        printFreeTimeSlots(freeTimes, date);","lastModifiedDate":"2024-04-10"},{"lineNumber":466,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":467,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":468,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":469,"author":{"gitId":"NicholasTanYY"},"content":"     * Marks a task as completed or not completed based its current marked status.","lastModifiedDate":"2024-03-30"},{"lineNumber":470,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":471,"author":{"gitId":"NicholasTanYY"},"content":"     * @param weekView WeekView object for finding the date.","lastModifiedDate":"2024-03-30"},{"lineNumber":472,"author":{"gitId":"NicholasTanYY"},"content":"     * @param monthView MonthView object for finding the date.","lastModifiedDate":"2024-03-30"},{"lineNumber":473,"author":{"gitId":"NicholasTanYY"},"content":"     * @param inMonthView A boolean indicating whether the view is in month view or not.","lastModifiedDate":"2024-03-30"},{"lineNumber":474,"author":{"gitId":"NicholasTanYY"},"content":"     * @param day The day of the task to be marked.","lastModifiedDate":"2024-03-30"},{"lineNumber":475,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskIndex The index of the task to be marked.","lastModifiedDate":"2024-03-30"},{"lineNumber":476,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException If the date given is not in the current month or week being viewed.","lastModifiedDate":"2024-04-02"},{"lineNumber":477,"author":{"gitId":"clarencepohh"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-04-02"},{"lineNumber":478,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":479,"author":{"gitId":"NicholasTanYY"},"content":"    public void markManager(WeekView weekView, MonthView monthView, boolean inMonthView, String day, int taskIndex)","lastModifiedDate":"2024-03-30"},{"lineNumber":480,"author":{"gitId":"NicholasTanYY"},"content":"            throws TaskManagerException, DateTimeParseException, MarkTaskException {","lastModifiedDate":"2024-04-07"},{"lineNumber":481,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-30"},{"lineNumber":482,"author":{"gitId":"NicholasTanYY"},"content":"        int dayInt \u003d Integer.parseInt(day);","lastModifiedDate":"2024-03-30"},{"lineNumber":483,"author":{"gitId":"NicholasTanYY"},"content":"        date \u003d findDateFromDayNumber(weekView, monthView, inMonthView, dayInt);","lastModifiedDate":"2024-03-30"},{"lineNumber":484,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":485,"author":{"gitId":"NicholasTanYY"},"content":"        List\u003cTask\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-04-08"},{"lineNumber":486,"author":{"gitId":"NicholasTanYY"},"content":"        checkIfTaskIndexIsValidForMarkingTask(dayTasks, taskIndex);","lastModifiedDate":"2024-04-08"},{"lineNumber":487,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":488,"author":{"gitId":"NicholasTanYY"},"content":"        handleMarkingOfTask(taskIndex, date);","lastModifiedDate":"2024-03-30"},{"lineNumber":489,"author":{"gitId":"NicholasTanYY"},"content":"        saveTasksToFile(tasks, Storage.FILE_PATH);","lastModifiedDate":"2024-03-30"},{"lineNumber":490,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":491,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":492,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":493,"author":{"gitId":"NicholasTanYY"},"content":"     * Finds the date based on the day number.","lastModifiedDate":"2024-03-30"},{"lineNumber":494,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":495,"author":{"gitId":"NicholasTanYY"},"content":"     * @param weekView WeekView object for finding the date.","lastModifiedDate":"2024-03-30"},{"lineNumber":496,"author":{"gitId":"NicholasTanYY"},"content":"     * @param monthView MonthView object for finding the date.","lastModifiedDate":"2024-03-30"},{"lineNumber":497,"author":{"gitId":"NicholasTanYY"},"content":"     * @param inMonthView A boolean indicating whether the view is in month view or not.","lastModifiedDate":"2024-03-30"},{"lineNumber":498,"author":{"gitId":"NicholasTanYY"},"content":"     * @param dayInt The day number to find the date for.","lastModifiedDate":"2024-03-30"},{"lineNumber":499,"author":{"gitId":"NicholasTanYY"},"content":"     * @return The date corresponding to the day number.","lastModifiedDate":"2024-03-30"},{"lineNumber":500,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException If the date is not in the current month or week being viewed.","lastModifiedDate":"2024-04-02"},{"lineNumber":501,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":502,"author":{"gitId":"NicholasTanYY"},"content":"    private static LocalDate findDateFromDayNumber(WeekView weekView, MonthView monthView,","lastModifiedDate":"2024-03-30"},{"lineNumber":503,"author":{"gitId":"NicholasTanYY"},"content":"            boolean inMonthView, int dayInt) throws TaskManagerException {","lastModifiedDate":"2024-03-30"},{"lineNumber":504,"author":{"gitId":"NicholasTanYY"},"content":"      ","lastModifiedDate":"2024-03-30"},{"lineNumber":505,"author":{"gitId":"Mahesh1772"},"content":"        if (dayInt \u003c 1 || dayInt \u003e 31) {","lastModifiedDate":"2024-04-14"},{"lineNumber":506,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid day number. Day must be between 1 and 31.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":507,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":508,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":509,"author":{"gitId":"NicholasTanYY"},"content":"        if (inMonthView) {","lastModifiedDate":"2024-03-30"},{"lineNumber":510,"author":{"gitId":"Mahesh1772"},"content":"            LocalDate startOfMonth \u003d monthView.getStartOfMonth();","lastModifiedDate":"2024-04-13"},{"lineNumber":511,"author":{"gitId":"Mahesh1772"},"content":"            int daysInMonth \u003d startOfMonth.lengthOfMonth();","lastModifiedDate":"2024-04-14"},{"lineNumber":512,"author":{"gitId":"Mahesh1772"},"content":"            if (dayInt \u003e daysInMonth) {","lastModifiedDate":"2024-04-14"},{"lineNumber":513,"author":{"gitId":"Mahesh1772"},"content":"                throw new TaskManagerException(\"Invalid day for month view. Please enter a day between 1 and \"","lastModifiedDate":"2024-04-14"},{"lineNumber":514,"author":{"gitId":"Mahesh1772"},"content":"                        + daysInMonth + \".\");","lastModifiedDate":"2024-04-14"},{"lineNumber":515,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":516,"author":{"gitId":"Mahesh1772"},"content":"            return startOfMonth.withDayOfMonth(dayInt);","lastModifiedDate":"2024-04-14"},{"lineNumber":517,"author":{"gitId":"NicholasTanYY"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":518,"author":{"gitId":"NicholasTanYY"},"content":"            LocalDate startOfWeek \u003d weekView.getStartOfWeek();","lastModifiedDate":"2024-04-02"},{"lineNumber":519,"author":{"gitId":"NicholasTanYY"},"content":"            LocalDate endOfWeek \u003d startOfWeek.plusDays(6);","lastModifiedDate":"2024-04-02"},{"lineNumber":520,"author":{"gitId":"NicholasTanYY"},"content":"            LocalDate startOfMonth \u003d startOfWeek.withDayOfMonth(1);","lastModifiedDate":"2024-04-02"},{"lineNumber":521,"author":{"gitId":"NicholasTanYY"},"content":"            LocalDate possibleDate \u003d startOfMonth.plusDays(dayInt - 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":522,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":523,"author":{"gitId":"NicholasTanYY"},"content":"            boolean isBeforeStartOfWeek \u003d possibleDate.isBefore(startOfWeek);","lastModifiedDate":"2024-04-02"},{"lineNumber":524,"author":{"gitId":"NicholasTanYY"},"content":"            boolean isNotInSameMonth \u003d possibleDate.getMonth() !\u003d startOfWeek.getMonth();","lastModifiedDate":"2024-04-02"},{"lineNumber":525,"author":{"gitId":"NicholasTanYY"},"content":"            boolean dayIntRefersToNextMonth \u003d isBeforeStartOfWeek || isNotInSameMonth;","lastModifiedDate":"2024-04-02"},{"lineNumber":526,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":527,"author":{"gitId":"NicholasTanYY"},"content":"            if (dayIntRefersToNextMonth) {","lastModifiedDate":"2024-04-02"},{"lineNumber":528,"author":{"gitId":"NicholasTanYY"},"content":"                LocalDate startOfNextMonth \u003d startOfMonth.plusMonths(1).withDayOfMonth(dayInt);","lastModifiedDate":"2024-04-02"},{"lineNumber":529,"author":{"gitId":"NicholasTanYY"},"content":"                if (startOfNextMonth.isAfter(endOfWeek)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":530,"author":{"gitId":"Mahesh1772"},"content":"                    throw new TaskManagerException(\"Invalid day for week view.\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":531,"author":{"gitId":"Mahesh1772"},"content":"                            \" Please enter a day that falls within the current week.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":532,"author":{"gitId":"NicholasTanYY"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":533,"author":{"gitId":"Mahesh1772"},"content":"                return startOfNextMonth;","lastModifiedDate":"2024-04-14"},{"lineNumber":534,"author":{"gitId":"NicholasTanYY"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":535,"author":{"gitId":"Mahesh1772"},"content":"                if (possibleDate.isBefore(startOfWeek) || possibleDate.isAfter(endOfWeek)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":536,"author":{"gitId":"Mahesh1772"},"content":"                    throw new TaskManagerException(\"Invalid day for week view.\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":537,"author":{"gitId":"Mahesh1772"},"content":"                            \" Please enter a day that falls within the current week.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":538,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-04-14"},{"lineNumber":539,"author":{"gitId":"Mahesh1772"},"content":"                return possibleDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":540,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":541,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":542,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":543,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":544,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":545,"author":{"gitId":"NicholasTanYY"},"content":"     * Handles the marking of a task based on the task index and date.","lastModifiedDate":"2024-03-30"},{"lineNumber":546,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":547,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskIndex The index of the task to be marked.","lastModifiedDate":"2024-03-30"},{"lineNumber":548,"author":{"gitId":"NicholasTanYY"},"content":"     * @param date The date of the task to be marked.","lastModifiedDate":"2024-03-30"},{"lineNumber":549,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":550,"author":{"gitId":"NicholasTanYY"},"content":"    private void handleMarkingOfTask(int taskIndex, LocalDate date) {","lastModifiedDate":"2024-04-08"},{"lineNumber":551,"author":{"gitId":"NicholasTanYY"},"content":"        logger.log(Level.INFO, \"Marking task at index \" + taskIndex + \" for date \" + date);","lastModifiedDate":"2024-04-13"},{"lineNumber":552,"author":{"gitId":"NicholasTanYY"},"content":"        assert tasks.get(date) !\u003d null;","lastModifiedDate":"2024-04-13"},{"lineNumber":553,"author":{"gitId":"NicholasTanYY"},"content":"        boolean taskIsCompleted \u003d tasks.get(date).get(taskIndex - 1).isCompleted();","lastModifiedDate":"2024-03-30"},{"lineNumber":554,"author":{"gitId":"NicholasTanYY"},"content":"        if (taskIsCompleted) {","lastModifiedDate":"2024-03-30"},{"lineNumber":555,"author":{"gitId":"NicholasTanYY"},"content":"            markTaskAsNotCompleted(date, taskIndex - 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":556,"author":{"gitId":"NicholasTanYY"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":557,"author":{"gitId":"NicholasTanYY"},"content":"            markTaskAsCompleted(date, taskIndex - 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":558,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":559,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":560,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":561,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":562,"author":{"gitId":"NicholasTanYY"},"content":"     * Performs the setting of priority levels based on the user\u0027s input.","lastModifiedDate":"2024-03-30"},{"lineNumber":563,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":564,"author":{"gitId":"NicholasTanYY"},"content":"     * @param weekView WeekView object for finding the date.","lastModifiedDate":"2024-03-30"},{"lineNumber":565,"author":{"gitId":"NicholasTanYY"},"content":"     * @param monthView MonthView object for finding the date.","lastModifiedDate":"2024-03-30"},{"lineNumber":566,"author":{"gitId":"NicholasTanYY"},"content":"     * @param inMonthView A boolean indicating whether the view is in month view or not.","lastModifiedDate":"2024-03-30"},{"lineNumber":567,"author":{"gitId":"NicholasTanYY"},"content":"     * @param day The day of the task to be marked.","lastModifiedDate":"2024-03-30"},{"lineNumber":568,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskIndex The index of the task to be marked.","lastModifiedDate":"2024-03-30"},{"lineNumber":569,"author":{"gitId":"NicholasTanYY"},"content":"     * @param priorityLevelString The priority level to set the task to.","lastModifiedDate":"2024-03-30"},{"lineNumber":570,"author":{"gitId":"NicholasTanYY"},"content":"     * @throws TaskManagerException If there is an error in managing tasks.","lastModifiedDate":"2024-03-30"},{"lineNumber":571,"author":{"gitId":"NicholasTanYY"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-03-30"},{"lineNumber":572,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":573,"author":{"gitId":"NicholasTanYY"},"content":"    public void priorityManager(WeekView weekView, MonthView monthView, boolean inMonthView, String day,","lastModifiedDate":"2024-03-30"},{"lineNumber":574,"author":{"gitId":"NicholasTanYY"},"content":"            int taskIndex, String priorityLevelString)","lastModifiedDate":"2024-04-08"},{"lineNumber":575,"author":{"gitId":"NicholasTanYY"},"content":"            throws TaskManagerException, DateTimeParseException, SetPriorityException {","lastModifiedDate":"2024-04-08"},{"lineNumber":576,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-30"},{"lineNumber":577,"author":{"gitId":"NicholasTanYY"},"content":"        int dayInt \u003d Integer.parseInt(day);","lastModifiedDate":"2024-03-30"},{"lineNumber":578,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":579,"author":{"gitId":"NicholasTanYY"},"content":"        date \u003d findDateFromDayNumber(weekView, monthView, inMonthView, dayInt);","lastModifiedDate":"2024-03-30"},{"lineNumber":580,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":581,"author":{"gitId":"NicholasTanYY"},"content":"        List\u003cTask\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-04-08"},{"lineNumber":582,"author":{"gitId":"NicholasTanYY"},"content":"        checkIfTaskIndexIsValidForPriority(dayTasks, taskIndex);","lastModifiedDate":"2024-04-08"},{"lineNumber":583,"author":{"gitId":"NicholasTanYY"},"content":"        checkIfPriorityIsValid(priorityLevelString);","lastModifiedDate":"2024-04-08"},{"lineNumber":584,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":585,"author":{"gitId":"NicholasTanYY"},"content":"        setPriorityLevelOfTask(taskIndex, date, priorityLevelString);","lastModifiedDate":"2024-03-30"},{"lineNumber":586,"author":{"gitId":"NicholasTanYY"},"content":"        saveTasksToFile(tasks, Storage.FILE_PATH);","lastModifiedDate":"2024-03-30"},{"lineNumber":587,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":588,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":589,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":590,"author":{"gitId":"NicholasTanYY"},"content":"     * Sets the priority level of a task.","lastModifiedDate":"2024-03-30"},{"lineNumber":591,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":592,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskIndex The index of the task to set the priority level for.","lastModifiedDate":"2024-03-30"},{"lineNumber":593,"author":{"gitId":"NicholasTanYY"},"content":"     * @param date The date of the task to set the priority level for.","lastModifiedDate":"2024-03-30"},{"lineNumber":594,"author":{"gitId":"NicholasTanYY"},"content":"     * @param priorityLevelString The priority level to set the task to.","lastModifiedDate":"2024-03-30"},{"lineNumber":595,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":596,"author":{"gitId":"NicholasTanYY"},"content":"    private void setPriorityLevelOfTask(int taskIndex, LocalDate date, String priorityLevelString) {","lastModifiedDate":"2024-03-30"},{"lineNumber":597,"author":{"gitId":"NicholasTanYY"},"content":"        logger.log(Level.INFO, \"Setting priority level of task at index \" + taskIndex + \" for date \" + date);","lastModifiedDate":"2024-04-13"},{"lineNumber":598,"author":{"gitId":"NicholasTanYY"},"content":"        assert tasks.get(date) !\u003d null;","lastModifiedDate":"2024-04-13"},{"lineNumber":599,"author":{"gitId":"NicholasTanYY"},"content":"        List\u003cTask\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-03-30"},{"lineNumber":600,"author":{"gitId":"NicholasTanYY"},"content":"        Task task \u003d dayTasks.get(taskIndex - 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":601,"author":{"gitId":"NicholasTanYY"},"content":"        TaskPriorityLevel priorityLevelToSet \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":602,"author":{"gitId":"NicholasTanYY"},"content":"                priorityLevelString.equals(\"H\") ? TaskPriorityLevel.HIGH :","lastModifiedDate":"2024-03-30"},{"lineNumber":603,"author":{"gitId":"NicholasTanYY"},"content":"                priorityLevelString.equals(\"M\") ? TaskPriorityLevel.MEDIUM :","lastModifiedDate":"2024-03-30"},{"lineNumber":604,"author":{"gitId":"NicholasTanYY"},"content":"                TaskPriorityLevel.LOW;","lastModifiedDate":"2024-03-30"},{"lineNumber":605,"author":{"gitId":"NicholasTanYY"},"content":"        task.setPriorityLevel(priorityLevelToSet);","lastModifiedDate":"2024-03-30"},{"lineNumber":606,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":607,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":608,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":609,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":610,"author":{"gitId":"clarencepohh"},"content":"     * Method that parses the TaskType to be specified based on the user\u0027s input.","lastModifiedDate":"2024-03-23"},{"lineNumber":611,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":612,"author":{"gitId":"clarencepohh"},"content":"     * @param userInput The String containing the user\u0027s cleaned input.","lastModifiedDate":"2024-03-23"},{"lineNumber":613,"author":{"gitId":"clarencepohh"},"content":"     * @return TaskType of the user\u0027s choosing.","lastModifiedDate":"2024-03-23"},{"lineNumber":614,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":615,"author":{"gitId":"clarencepohh"},"content":"    public static TaskType parseTaskType(String userInput) {","lastModifiedDate":"2024-03-23"},{"lineNumber":616,"author":{"gitId":"clarencepohh"},"content":"        TaskType currentTaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":617,"author":{"gitId":"clarencepohh"},"content":"        switch (userInput) {","lastModifiedDate":"2024-03-23"},{"lineNumber":618,"author":{"gitId":"clarencepohh"},"content":"        case \"T\":","lastModifiedDate":"2024-03-23"},{"lineNumber":619,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":620,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":621,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":622,"author":{"gitId":"clarencepohh"},"content":"        case \"D\":","lastModifiedDate":"2024-03-23"},{"lineNumber":623,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d DEADLINE;","lastModifiedDate":"2024-03-23"},{"lineNumber":624,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":625,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":626,"author":{"gitId":"clarencepohh"},"content":"        case \"E\":","lastModifiedDate":"2024-03-23"},{"lineNumber":627,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d EVENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":628,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":629,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":630,"author":{"gitId":"clarencepohh"},"content":"        default:","lastModifiedDate":"2024-03-23"},{"lineNumber":631,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d null;","lastModifiedDate":"2024-03-23"},{"lineNumber":632,"author":{"gitId":"clarencepohh"},"content":"            // intentional fallthrough since addTask method checks for invalid taskType already","lastModifiedDate":"2024-03-23"},{"lineNumber":633,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":634,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":635,"author":{"gitId":"clarencepohh"},"content":"        return currentTaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":636,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":637,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":638,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":639,"author":{"gitId":"kyhjonathan"},"content":"     * Prompts user for updated task description and updates task in the task list and tasks.txt file.","lastModifiedDate":"2024-04-12"},{"lineNumber":640,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":641,"author":{"gitId":"kyhjonathan"},"content":"     * @param scanner Scanner object to read user input for task details.","lastModifiedDate":"2024-04-12"},{"lineNumber":642,"author":{"gitId":"kyhjonathan"},"content":"     * @param weekView WeekView object for finding the date.","lastModifiedDate":"2024-04-12"},{"lineNumber":643,"author":{"gitId":"kyhjonathan"},"content":"     * @param monthView MonthView object for finding the date.","lastModifiedDate":"2024-04-12"},{"lineNumber":644,"author":{"gitId":"kyhjonathan"},"content":"     * @param inMonthView A boolean indicating whether the view is in month view or not.","lastModifiedDate":"2024-04-12"},{"lineNumber":645,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskManager The TaskManager instance being used.","lastModifiedDate":"2024-04-12"},{"lineNumber":646,"author":{"gitId":"kyhjonathan"},"content":"     * @param day The int representing the day containing the task to be updated.","lastModifiedDate":"2024-04-12"},{"lineNumber":647,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskIndex The int representing the task index to be updated.","lastModifiedDate":"2024-04-12"},{"lineNumber":648,"author":{"gitId":"kyhjonathan"},"content":"     * @param newDescription The String with the new task description.","lastModifiedDate":"2024-04-12"},{"lineNumber":649,"author":{"gitId":"kyhjonathan"},"content":"     * @throws TaskManagerException If not in correct week/month view.","lastModifiedDate":"2024-04-12"},{"lineNumber":650,"author":{"gitId":"kyhjonathan"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-04-12"},{"lineNumber":651,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":652,"author":{"gitId":"Mahesh1772"},"content":"    public void updateManager(Scanner scanner, WeekView weekView, MonthView monthView, boolean inMonthView,","lastModifiedDate":"2024-03-25"},{"lineNumber":653,"author":{"gitId":"Mahesh1772"},"content":"            TaskManager taskManager,int day, int taskIndex, String newDescription)","lastModifiedDate":"2024-03-25"},{"lineNumber":654,"author":{"gitId":"kyhjonathan"},"content":"            throws TaskManagerException, DateTimeParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":655,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":656,"author":{"gitId":"Mahesh1772"},"content":"        // Convert the day to a LocalDate","lastModifiedDate":"2024-03-24"},{"lineNumber":657,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":658,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":659,"author":{"gitId":"NicholasTanYY"},"content":"        date \u003d findDateFromDayNumber(weekView, monthView, inMonthView, day);","lastModifiedDate":"2024-03-30"},{"lineNumber":660,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":661,"author":{"gitId":"kyhjonathan"},"content":"        checkIfTaskExistsInCurrentDate(taskManager.getTasksForDate(date), taskIndex);","lastModifiedDate":"2024-04-14"},{"lineNumber":662,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":663,"author":{"gitId":"Aak242"},"content":"        checkIfDateHasTasks(taskManager.getTasksForDate(date));","lastModifiedDate":"2024-04-10"},{"lineNumber":664,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":665,"author":{"gitId":"Aak242"},"content":"        String currentTaskType \u003d taskManager.getTasksForDate(date).get(taskIndex - 1).getTaskType();","lastModifiedDate":"2024-03-28"},{"lineNumber":666,"author":{"gitId":"Aak242"},"content":"        String typeName \u003d currentTaskType.equals(\"T\") ? \"Todo\" : currentTaskType.equals(\"D\") ? \"Deadline\" : \"Event\";","lastModifiedDate":"2024-03-25"},{"lineNumber":667,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":668,"author":{"gitId":"Aak242"},"content":"        updateTask(date, taskIndex - 1, newDescription, scanner, inMonthView, weekView);","lastModifiedDate":"2024-04-10"},{"lineNumber":669,"author":{"gitId":"kyhjonathan"},"content":"        saveTasksToFile(tasks,Storage.FILE_PATH); //Update tasks.txt file","lastModifiedDate":"2024-03-19"},{"lineNumber":670,"author":{"gitId":"Aak242"},"content":"        System.out.println(typeName + \" updated.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":671,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":672,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":673,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":674,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":675,"author":{"gitId":"kyhjonathan"},"content":"    //@@author kyhjonathan","lastModifiedDate":"2024-04-12"},{"lineNumber":676,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":677,"author":{"gitId":"kyhjonathan"},"content":"     * Adds tasks from a file to the TaskManager.","lastModifiedDate":"2024-03-19"},{"lineNumber":678,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":679,"author":{"gitId":"kyhjonathan"},"content":"     * @param tasksFromFile A map containing tasks read from a file.","lastModifiedDate":"2024-03-19"},{"lineNumber":680,"author":{"gitId":"kyhjonathan"},"content":"     * @throws TaskManagerException If there is an error adding tasks.","lastModifiedDate":"2024-03-23"},{"lineNumber":681,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":682,"author":{"gitId":"kyhjonathan"},"content":"    public void addTasksFromFile(Map\u003cLocalDate, List\u003cTask\u003e\u003e tasksFromFile) throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":683,"author":{"gitId":"kyhjonathan"},"content":"        for (Map.Entry\u003cLocalDate, List\u003cTask\u003e\u003e entry : tasksFromFile.entrySet()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":684,"author":{"gitId":"kyhjonathan"},"content":"            LocalDate date \u003d entry.getKey();","lastModifiedDate":"2024-03-18"},{"lineNumber":685,"author":{"gitId":"kyhjonathan"},"content":"            List\u003cTask\u003e tasksList \u003d entry.getValue();","lastModifiedDate":"2024-04-02"},{"lineNumber":686,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":687,"author":{"gitId":"kyhjonathan"},"content":"            for (Task task : tasksList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":688,"author":{"gitId":"kyhjonathan"},"content":"                String taskDescription \u003d task.getName();","lastModifiedDate":"2024-03-22"},{"lineNumber":689,"author":{"gitId":"kyhjonathan"},"content":"                TaskType taskType \u003d parseTaskType(task.getTaskType());","lastModifiedDate":"2024-03-23"},{"lineNumber":690,"author":{"gitId":"kyhjonathan"},"content":"                String[] dates \u003d new String[]{null, null};","lastModifiedDate":"2024-03-23"},{"lineNumber":691,"author":{"gitId":"kyhjonathan"},"content":"                String[] times \u003d new String[]{null, null};","lastModifiedDate":"2024-03-25"},{"lineNumber":692,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":693,"author":{"gitId":"kyhjonathan"},"content":"                switch (taskType) {","lastModifiedDate":"2024-03-23"},{"lineNumber":694,"author":{"gitId":"kyhjonathan"},"content":"                case TODO:","lastModifiedDate":"2024-03-23"},{"lineNumber":695,"author":{"gitId":"kyhjonathan"},"content":"                    dates[0] \u003d taskDescription;","lastModifiedDate":"2024-03-23"},{"lineNumber":696,"author":{"gitId":"kyhjonathan"},"content":"                    break;","lastModifiedDate":"2024-03-23"},{"lineNumber":697,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":698,"author":{"gitId":"kyhjonathan"},"content":"                case EVENT:","lastModifiedDate":"2024-03-23"},{"lineNumber":699,"author":{"gitId":"kyhjonathan"},"content":"                    String startDate \u003d task.getStartDate();","lastModifiedDate":"2024-03-23"},{"lineNumber":700,"author":{"gitId":"kyhjonathan"},"content":"                    String endDate \u003d task.getEndDate();","lastModifiedDate":"2024-03-23"},{"lineNumber":701,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":702,"author":{"gitId":"kyhjonathan"},"content":"                    String startTime \u003d task.getStartTime();","lastModifiedDate":"2024-03-25"},{"lineNumber":703,"author":{"gitId":"kyhjonathan"},"content":"                    String endTime \u003d task.getEndTime();","lastModifiedDate":"2024-03-25"},{"lineNumber":704,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":705,"author":{"gitId":"kyhjonathan"},"content":"                    dates[0] \u003d startDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":706,"author":{"gitId":"kyhjonathan"},"content":"                    dates[1] \u003d endDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":707,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":708,"author":{"gitId":"kyhjonathan"},"content":"                    times[0] \u003d startTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":709,"author":{"gitId":"kyhjonathan"},"content":"                    times[1] \u003d endTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":710,"author":{"gitId":"kyhjonathan"},"content":"                    break;","lastModifiedDate":"2024-03-23"},{"lineNumber":711,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":712,"author":{"gitId":"kyhjonathan"},"content":"                case DEADLINE:","lastModifiedDate":"2024-03-23"},{"lineNumber":713,"author":{"gitId":"kyhjonathan"},"content":"                    String deadlineDate \u003d task.getByDate();","lastModifiedDate":"2024-03-25"},{"lineNumber":714,"author":{"gitId":"kyhjonathan"},"content":"                    String deadlineTime \u003d task.getByTime();","lastModifiedDate":"2024-03-25"},{"lineNumber":715,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":716,"author":{"gitId":"kyhjonathan"},"content":"                    dates[0] \u003d deadlineDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":717,"author":{"gitId":"kyhjonathan"},"content":"                    times[0] \u003d deadlineTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":718,"author":{"gitId":"kyhjonathan"},"content":"                    break;","lastModifiedDate":"2024-03-23"},{"lineNumber":719,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":720,"author":{"gitId":"kyhjonathan"},"content":"                default:","lastModifiedDate":"2024-03-23"},{"lineNumber":721,"author":{"gitId":"kyhjonathan"},"content":"                    logger.log(Level.INFO, \"Task to add was invalid. Task in question: \" + taskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":722,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":723,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":724,"author":{"gitId":"kyhjonathan"},"content":"                addTask(date, taskDescription, taskType, dates, times);","lastModifiedDate":"2024-03-25"},{"lineNumber":725,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":726,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":727,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":728,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":729,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":730,"author":{"gitId":"kyhjonathan"},"content":"     * Prompts user for task description and deletes task from hashmap and tasks.txt file.","lastModifiedDate":"2024-03-23"},{"lineNumber":731,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":732,"author":{"gitId":"kyhjonathan"},"content":"     * @param weekView Current week being viewed.","lastModifiedDate":"2024-03-23"},{"lineNumber":733,"author":{"gitId":"kyhjonathan"},"content":"     * @param inMonthView Whether month is being viewed.","lastModifiedDate":"2024-03-23"},{"lineNumber":734,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskManager The taskManager class being used.","lastModifiedDate":"2024-03-23"},{"lineNumber":735,"author":{"gitId":"kyhjonathan"},"content":"     * @param day The String containing the day being viewed.","lastModifiedDate":"2024-04-02"},{"lineNumber":736,"author":{"gitId":"kyhjonathan"},"content":"     * @param monthView The MonthView instance being used.","lastModifiedDate":"2024-04-02"},{"lineNumber":737,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskIndex The int representing the task index.","lastModifiedDate":"2024-04-02"},{"lineNumber":738,"author":{"gitId":"kyhjonathan"},"content":"     * @throws TaskManagerException If not in correct week/month view","lastModifiedDate":"2024-03-23"},{"lineNumber":739,"author":{"gitId":"kyhjonathan"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-03-23"},{"lineNumber":740,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":741,"author":{"gitId":"kyhjonathan"},"content":"    public static void deleteManager(WeekView weekView,MonthView monthView, boolean inMonthView,","lastModifiedDate":"2024-03-25"},{"lineNumber":742,"author":{"gitId":"kyhjonathan"},"content":"            TaskManager taskManager,String day, int taskIndex)","lastModifiedDate":"2024-04-02"},{"lineNumber":743,"author":{"gitId":"kyhjonathan"},"content":"            throws TaskManagerException, DateTimeParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":744,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":745,"author":{"gitId":"kyhjonathan"},"content":"        // Convert the day to a LocalDate","lastModifiedDate":"2024-03-24"},{"lineNumber":746,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-25"},{"lineNumber":747,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":748,"author":{"gitId":"kyhjonathan"},"content":"        int dayInt \u003d Integer.parseInt(day);","lastModifiedDate":"2024-03-25"},{"lineNumber":749,"author":{"gitId":"kyhjonathan"},"content":"        date \u003d findDateFromDayNumber(weekView, monthView, inMonthView, dayInt);","lastModifiedDate":"2024-03-30"},{"lineNumber":750,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":751,"author":{"gitId":"kyhjonathan"},"content":"        // Delete the task based on the parsed inputs","lastModifiedDate":"2024-03-24"},{"lineNumber":752,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.deleteTask(date, taskIndex - 1, false);","lastModifiedDate":"2024-04-10"},{"lineNumber":753,"author":{"gitId":"kyhjonathan"},"content":"        // Subtract 1 to convert to zero-based index","lastModifiedDate":"2024-04-10"},{"lineNumber":754,"author":{"gitId":"kyhjonathan"},"content":"        //System.out.println(\"Task deleted.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":755,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":756,"author":{"gitId":"kyhjonathan"},"content":"        // Save tasks to file","lastModifiedDate":"2024-03-24"},{"lineNumber":757,"author":{"gitId":"kyhjonathan"},"content":"        saveTasksToFile(tasks, Storage.FILE_PATH); // Update tasks.txt file","lastModifiedDate":"2024-03-19"},{"lineNumber":758,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":759,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":760,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":761,"author":{"gitId":"kyhjonathan"},"content":"     * Function to delete all tasks on a specified date.","lastModifiedDate":"2024-03-22"},{"lineNumber":762,"author":{"gitId":"kyhjonathan"},"content":"     * Currently only used to complement JUnit testing.","lastModifiedDate":"2024-03-22"},{"lineNumber":763,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":764,"author":{"gitId":"kyhjonathan"},"content":"     * @param taskManager The taskManager class in use.","lastModifiedDate":"2024-03-22"},{"lineNumber":765,"author":{"gitId":"kyhjonathan"},"content":"     * @param specifiedDate The date on which all tasks are to be deleted.","lastModifiedDate":"2024-03-22"},{"lineNumber":766,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":767,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":768,"author":{"gitId":"kyhjonathan"},"content":"    public static void deleteAllTasksOnDate (TaskManager taskManager, LocalDate specifiedDate) {","lastModifiedDate":"2024-03-22"},{"lineNumber":769,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cTask\u003e dayTasks \u003d tasks.get(specifiedDate);","lastModifiedDate":"2024-03-22"},{"lineNumber":770,"author":{"gitId":"kyhjonathan"},"content":"        if (dayTasks !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":771,"author":{"gitId":"kyhjonathan"},"content":"            int numOfTasks \u003d dayTasks.size();","lastModifiedDate":"2024-03-22"},{"lineNumber":772,"author":{"gitId":"kyhjonathan"},"content":"            for (int i \u003d numOfTasks; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-03-22"},{"lineNumber":773,"author":{"gitId":"kyhjonathan"},"content":"                taskManager.deleteTask(specifiedDate, i - 1, true);","lastModifiedDate":"2024-04-02"},{"lineNumber":774,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":775,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":776,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":777,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":778,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":779,"author":{"gitId":"kyhjonathan"},"content":"     * Retrieves all Event tasks for a specific date.","lastModifiedDate":"2024-04-12"},{"lineNumber":780,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":781,"author":{"gitId":"kyhjonathan"},"content":"     * @param date The date to retrieve Event tasks for.","lastModifiedDate":"2024-04-12"},{"lineNumber":782,"author":{"gitId":"kyhjonathan"},"content":"     * @return A list of Event tasks for the given date.","lastModifiedDate":"2024-04-12"},{"lineNumber":783,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":784,"author":{"gitId":"kyhjonathan"},"content":"    public static List\u003cTask\u003e getEventsForDate(LocalDate date) {","lastModifiedDate":"2024-04-10"},{"lineNumber":785,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cTask\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":786,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cTask\u003e taskList \u003d tasks.get(date);","lastModifiedDate":"2024-04-10"},{"lineNumber":787,"author":{"gitId":"kyhjonathan"},"content":"        if (taskList !\u003d null) {","lastModifiedDate":"2024-04-10"},{"lineNumber":788,"author":{"gitId":"kyhjonathan"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":789,"author":{"gitId":"kyhjonathan"},"content":"                if (task.getTaskType().equals(\"E\")) {","lastModifiedDate":"2024-04-10"},{"lineNumber":790,"author":{"gitId":"kyhjonathan"},"content":"                    events.add(task);","lastModifiedDate":"2024-04-10"},{"lineNumber":791,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":792,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":793,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":794,"author":{"gitId":"kyhjonathan"},"content":"        return events;","lastModifiedDate":"2024-04-10"},{"lineNumber":795,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":796,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":797,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":798,"author":{"gitId":"kyhjonathan"},"content":"     * Retrieves all free time slots for a specific date.","lastModifiedDate":"2024-04-12"},{"lineNumber":799,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":800,"author":{"gitId":"kyhjonathan"},"content":"     * @param events A list of Event tasks for the date.","lastModifiedDate":"2024-04-12"},{"lineNumber":801,"author":{"gitId":"kyhjonathan"},"content":"     * @param currentDate The date to show free times for.","lastModifiedDate":"2024-04-12"},{"lineNumber":802,"author":{"gitId":"kyhjonathan"},"content":"     * @return A list of free time slots for the given date.","lastModifiedDate":"2024-04-12"},{"lineNumber":803,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":804,"author":{"gitId":"kyhjonathan"},"content":"    public List\u003cString\u003e getFreeTimeSlots(List\u003cTask\u003e events, LocalDate currentDate) {","lastModifiedDate":"2024-04-10"},{"lineNumber":805,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cString\u003e freeTimeSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":806,"author":{"gitId":"kyhjonathan"},"content":"        LocalTime startOfDay \u003d LocalTime.of(0, 0);","lastModifiedDate":"2024-04-10"},{"lineNumber":807,"author":{"gitId":"kyhjonathan"},"content":"        LocalTime endOfDay \u003d LocalTime.of(23, 59);","lastModifiedDate":"2024-04-10"},{"lineNumber":808,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":809,"author":{"gitId":"kyhjonathan"},"content":"        // Sort events by start time and date","lastModifiedDate":"2024-04-10"},{"lineNumber":810,"author":{"gitId":"kyhjonathan"},"content":"        events.sort((e1, e2) -\u003e {","lastModifiedDate":"2024-04-10"},{"lineNumber":811,"author":{"gitId":"kyhjonathan"},"content":"            if (e1.getStartDate().equals(e2.getStartDate())) {","lastModifiedDate":"2024-04-10"},{"lineNumber":812,"author":{"gitId":"kyhjonathan"},"content":"                return LocalTime.parse(e1.getStartTime(), DateTimeFormatter.ofPattern(\"HHmm\"))","lastModifiedDate":"2024-04-12"},{"lineNumber":813,"author":{"gitId":"kyhjonathan"},"content":"                        .compareTo(LocalTime.parse(e2.getStartTime(), DateTimeFormatter.ofPattern(\"HHmm\")));","lastModifiedDate":"2024-04-12"},{"lineNumber":814,"author":{"gitId":"kyhjonathan"},"content":"            } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":815,"author":{"gitId":"kyhjonathan"},"content":"                return e1.getStartDate().compareTo(e2.getStartDate());","lastModifiedDate":"2024-04-10"},{"lineNumber":816,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":817,"author":{"gitId":"kyhjonathan"},"content":"        });","lastModifiedDate":"2024-04-10"},{"lineNumber":818,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":819,"author":{"gitId":"kyhjonathan"},"content":"        // Initialize the last end time to the start of the day for the first day","lastModifiedDate":"2024-04-12"},{"lineNumber":820,"author":{"gitId":"kyhjonathan"},"content":"        // Initialize the last end time to the start of the day for the first day","lastModifiedDate":"2024-04-10"},{"lineNumber":821,"author":{"gitId":"kyhjonathan"},"content":"        LocalTime lastEndTime \u003d startOfDay;","lastModifiedDate":"2024-04-10"},{"lineNumber":822,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":823,"author":{"gitId":"kyhjonathan"},"content":"        for (Task event : events) {","lastModifiedDate":"2024-04-10"},{"lineNumber":824,"author":{"gitId":"kyhjonathan"},"content":"            // Parse the start and end dates and times of the event as LocalDate and LocalTime","lastModifiedDate":"2024-04-10"},{"lineNumber":825,"author":{"gitId":"kyhjonathan"},"content":"            LocalDate eventStartDate \u003d LocalDate.parse(event.getStartDate(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-10"},{"lineNumber":826,"author":{"gitId":"kyhjonathan"},"content":"            LocalDate eventEndDate \u003d LocalDate.parse(event.getEndDate(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-10"},{"lineNumber":827,"author":{"gitId":"kyhjonathan"},"content":"            LocalTime eventStartTime \u003d LocalTime.parse(event.getStartTime(), DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-04-12"},{"lineNumber":828,"author":{"gitId":"kyhjonathan"},"content":"            LocalTime eventEndTime \u003d LocalTime.parse(event.getEndTime(), DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-04-12"},{"lineNumber":829,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":830,"author":{"gitId":"kyhjonathan"},"content":"            // Only process events that start on the current date","lastModifiedDate":"2024-04-10"},{"lineNumber":831,"author":{"gitId":"kyhjonathan"},"content":"            if (eventStartDate.isEqual(currentDate)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":832,"author":{"gitId":"kyhjonathan"},"content":"                // If the event ends on a different day, adjust the end time to the end of the current day","lastModifiedDate":"2024-04-10"},{"lineNumber":833,"author":{"gitId":"kyhjonathan"},"content":"                if (!eventEndDate.isEqual(currentDate)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":834,"author":{"gitId":"kyhjonathan"},"content":"                    eventEndTime \u003d endOfDay;","lastModifiedDate":"2024-04-10"},{"lineNumber":835,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":836,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":837,"author":{"gitId":"kyhjonathan"},"content":"                // Add free time slot before the event","lastModifiedDate":"2024-04-10"},{"lineNumber":838,"author":{"gitId":"kyhjonathan"},"content":"                if (Duration.between(lastEndTime, eventStartTime).toMinutes() \u003e 0) {","lastModifiedDate":"2024-04-10"},{"lineNumber":839,"author":{"gitId":"kyhjonathan"},"content":"                    freeTimeSlots.add(lastEndTime + \" - \" + eventStartTime);","lastModifiedDate":"2024-04-15"},{"lineNumber":840,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":841,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":842,"author":{"gitId":"kyhjonathan"},"content":"                // Update the last end time","lastModifiedDate":"2024-04-10"},{"lineNumber":843,"author":{"gitId":"kyhjonathan"},"content":"                lastEndTime \u003d eventEndTime;","lastModifiedDate":"2024-04-10"},{"lineNumber":844,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":845,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":846,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":847,"author":{"gitId":"kyhjonathan"},"content":"        // Add remaining time of the day to free slots only if lastEndTime is not endOfDay","lastModifiedDate":"2024-04-10"},{"lineNumber":848,"author":{"gitId":"kyhjonathan"},"content":"        if (!lastEndTime.equals(endOfDay) \u0026\u0026 Duration.between(lastEndTime, endOfDay).toMinutes() \u003e 0) {","lastModifiedDate":"2024-04-10"},{"lineNumber":849,"author":{"gitId":"kyhjonathan"},"content":"            freeTimeSlots.add(lastEndTime + \" - \" + endOfDay.toString());","lastModifiedDate":"2024-04-15"},{"lineNumber":850,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":851,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":852,"author":{"gitId":"kyhjonathan"},"content":"        return freeTimeSlots;","lastModifiedDate":"2024-04-10"},{"lineNumber":853,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":854,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":855,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":856,"author":{"gitId":"kyhjonathan"},"content":"     * Prints the free time slots for a specific date.","lastModifiedDate":"2024-04-12"},{"lineNumber":857,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":858,"author":{"gitId":"kyhjonathan"},"content":"     * @param freeTimeSlots A list of free time slots for the date.","lastModifiedDate":"2024-04-12"},{"lineNumber":859,"author":{"gitId":"kyhjonathan"},"content":"     * @param startDate The date to show free times for.","lastModifiedDate":"2024-04-12"},{"lineNumber":860,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":861,"author":{"gitId":"kyhjonathan"},"content":"    public void printFreeTimeSlots(List\u003cString\u003e freeTimeSlots, LocalDate startDate) {","lastModifiedDate":"2024-04-10"},{"lineNumber":862,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":863,"author":{"gitId":"kyhjonathan"},"content":"        System.out.println(\"Free time slots for \" + startDate + \":\");","lastModifiedDate":"2024-04-10"},{"lineNumber":864,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":865,"author":{"gitId":"kyhjonathan"},"content":"        for (String slot : freeTimeSlots) {","lastModifiedDate":"2024-04-10"},{"lineNumber":866,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(slot);","lastModifiedDate":"2024-04-10"},{"lineNumber":867,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":868,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":869,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"clarencepohh":131,"Mahesh1772":41,"NicholasTanYY":168,"Aak242":158,"kyhjonathan":371}},{"path":"src/main/java/data/TaskPriorityLevel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package data;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"public enum TaskPriorityLevel {","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"    HIGH,","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"    MEDIUM,","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"    LOW","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"NicholasTanYY":7}},{"path":"src/main/java/data/TaskType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public enum TaskType {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    TODO,","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"    EVENT,","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"    DEADLINE,","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"    INVALID","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":8}},{"path":"src/main/java/data/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"     * Todos are also considered as tasks.","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"     * Override function of superclass Task.","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"     * @return \"T\" which represents a Todo task.","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType () {","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"        return \"T\";","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for a Todo task.","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the save format for this task.","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"        return getTaskType() + \"|\" + getMarkedStatusIcon() + \"|\" + ","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"                getPriorityLevelIcon() + \"|\" +  getName();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":37,"NicholasTanYY":2}},{"path":"src/main/java/data/exceptions/MarkTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package data.exceptions;","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.List;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import data.Task;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":" * Represents an exception that occurs when marking a task.","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":" * Inherits from TaskManagerException class.","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":" * ","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"public class MarkTaskException extends TaskManagerException {","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"    public static final String TASK_INDEX_OUT_OF_RANGE_FOR_DAY_WITH_TASKS_MESSAGE \u003d ","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"            \"The task index you attempted to mark is out of range!\";","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"    public static final String TASK_INDEX_WITH_NO_TASKS_MESSAGE \u003d ","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"            \"There are no tasks to mark on this day!\";","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"     * Constructor for MarkTaskException class.","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"     * ","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"    public MarkTaskException(String errorMessage) {","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"        super(errorMessage);","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"     * Method that checks if the task index is valid for the given day.","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"     * ","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"     * @param dayTasks The list of tasks for the day.","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskIndex The index of the task to be marked.","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"     * @throws MarkTaskException if the task index is invalid.","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"    public static void checkIfTaskIndexIsValidForMarkingTask(List\u003cTask\u003e dayTasks, int taskIndex)","lastModifiedDate":"2024-04-08"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"            throws MarkTaskException {","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"        ","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"        boolean dayHasNoTasks \u003d (dayTasks \u003d\u003d null);","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"        if (dayHasNoTasks) {","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"            throw new MarkTaskException(TASK_INDEX_WITH_NO_TASKS_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"        ","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"        int taskListSize \u003d dayTasks.size();","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"        boolean taskIndexOutOfRange \u003d taskIndex \u003c 0 || taskIndex \u003e taskListSize;","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"        if (taskIndexOutOfRange) {","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"            throw new MarkTaskException(TASK_INDEX_OUT_OF_RANGE_FOR_DAY_WITH_TASKS_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"NicholasTanYY":49}},{"path":"src/main/java/data/exceptions/SetPriorityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package data.exceptions;","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.List;","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import data.Task;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"/**","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":" * Represents an exception that occurs when setting priority to a task.","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":" * Inherits from TaskManagerException class.","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":" * ","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":" */","lastModifiedDate":"2024-04-08"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"public class SetPriorityException extends TaskManagerException {","lastModifiedDate":"2024-04-08"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"    public static final String TASK_INDEX_OUT_OF_RANGE_FOR_DAY_WITH_TASKS_MESSAGE \u003d ","lastModifiedDate":"2024-04-08"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"            \"The task index you attempted to set a priority to is out of range!\";","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"    public static final String TASK_INDEX_WITH_NO_TASKS_MESSAGE \u003d ","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"            \"There are no tasks to set a priority to on this day!\";","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"    public static final String INVALID_PRIORITY_MESSAGE \u003d ","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"            \"The priority you entered is invalid! Please enter a valid priority (L, M, H)!\";","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"     * Constructor for SetPriorityException class.","lastModifiedDate":"2024-04-08"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"     * ","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    public SetPriorityException(String errorMessage) {","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"        super(errorMessage);","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"     * Method that checks if the task index is valid for the given day.","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"     * ","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"     * @param dayTasks The list of tasks for the day.","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskIndex The index of the task to set a priority to.","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"     * @throws SetPriorityException if the task index is invalid.","lastModifiedDate":"2024-04-08"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"    public static void checkIfTaskIndexIsValidForPriority(List\u003cTask\u003e dayTasks, int taskIndex)","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"            throws SetPriorityException {","lastModifiedDate":"2024-04-08"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"        ","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"        boolean dayHasNoTasks \u003d (dayTasks \u003d\u003d null);","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"        if (dayHasNoTasks) {","lastModifiedDate":"2024-04-08"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"            throw new SetPriorityException(TASK_INDEX_WITH_NO_TASKS_MESSAGE);","lastModifiedDate":"2024-04-08"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"        ","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"        int taskListSize \u003d dayTasks.size();","lastModifiedDate":"2024-04-08"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"        boolean taskIndexOutOfRange \u003d taskIndex \u003c 0 || taskIndex \u003e taskListSize;","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"        if (taskIndexOutOfRange) {","lastModifiedDate":"2024-04-08"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"            throw new SetPriorityException(TASK_INDEX_OUT_OF_RANGE_FOR_DAY_WITH_TASKS_MESSAGE);","lastModifiedDate":"2024-04-08"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":52,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":53,"author":{"gitId":"NicholasTanYY"},"content":"     * Method that checks if the priority entered is a valid string.","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"NicholasTanYY"},"content":"     * ","lastModifiedDate":"2024-04-08"},{"lineNumber":55,"author":{"gitId":"NicholasTanYY"},"content":"     * @param priority The priority to be checked.","lastModifiedDate":"2024-04-08"},{"lineNumber":56,"author":{"gitId":"NicholasTanYY"},"content":"     * @throws SetPriorityException if the priority is invalid.","lastModifiedDate":"2024-04-08"},{"lineNumber":57,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":58,"author":{"gitId":"NicholasTanYY"},"content":"    public static void checkIfPriorityIsValid(String priority) throws SetPriorityException {","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"NicholasTanYY"},"content":"        boolean priorityIsInvalid \u003d ","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"NicholasTanYY"},"content":"                !priority.equals(\"L\") \u0026\u0026 !priority.equals(\"M\") \u0026\u0026 !priority.equals(\"H\");","lastModifiedDate":"2024-04-08"},{"lineNumber":61,"author":{"gitId":"NicholasTanYY"},"content":"        if (priorityIsInvalid) {","lastModifiedDate":"2024-04-08"},{"lineNumber":62,"author":{"gitId":"NicholasTanYY"},"content":"            throw new SetPriorityException(INVALID_PRIORITY_MESSAGE);","lastModifiedDate":"2024-04-08"},{"lineNumber":63,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":64,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":65,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":66,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-04-08"}],"authorContributionMap":{"NicholasTanYY":66}},{"path":"src/main/java/data/exceptions/StorageFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package data.exceptions;","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"public class StorageFileException extends Exception{","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"    public static final String INVALID_STORAGE_TEXT_DATE_FORMAT_MESSAGE \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"            \"Invalid date format in tasks.txt file. Please use the format yyyy-MM-dd for dates.\";","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"    public StorageFileException(String errorMessage) {","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"        super(errorMessage);","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"    public static void checkStorageTextDateFormat(String date) throws StorageFileException {","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"            LocalDate.parse(date, formatter);","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"            throw new StorageFileException(INVALID_STORAGE_TEXT_DATE_FORMAT_MESSAGE);","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-04-09"}],"authorContributionMap":{"NicholasTanYY":1,"clarencepohh":4,"kyhjonathan":19}},{"path":"src/main/java/data/exceptions/TaskManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package data.exceptions;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import data.Task;","lastModifiedDate":"2024-04-09"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"public class TaskManagerException extends Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    public static final String NOT_CURRENT_WEEK_MESSAGE \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"            \"The date must be within the current week. Please try again.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"    public static final String NOT_CURRENT_MONTH_MESSAGE \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"            \"The date must be within the current month. Please try again.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"Aak242"},"content":"    public static final String NO_TASKS_MESSAGE \u003d","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"Aak242"},"content":"            \"There are no tasks on this date. Please try again.\";","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for TaskManagerException class.","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"     * Uses constructor from Exception superclass.","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"     * @param errorMessage The error message to be printed to the console.","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"    public TaskManagerException(String errorMessage) {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"        super(errorMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"    public static void checkIfDateTimeInFormat(String dateTime) throws TaskManagerException {","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"        // Validate start date and time format","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"        if (!dateTime.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{4}\")) {","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"            throw new TaskManagerException(\"Invalid date and time format. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"                    \"Please use the format dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"    public static void checkIfDateInFormat(String date) throws TaskManagerException {","lastModifiedDate":"2024-04-08"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"        // Validate start date format","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"        if (!date.matches(\"\\\\d{2}/\\\\d{2}/\\\\d{4}\")) {","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"            throw new TaskManagerException(\"Invalid date format. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"                    \"Please use the format dd/MM/yyyy\");","lastModifiedDate":"2024-04-08"},{"lineNumber":43,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"kyhjonathan"},"content":"     * need to debug this method","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"kyhjonathan"},"content":"    public static void checkIfTaskExistsInCurrentDate(List\u003cTask\u003e dayTasks, int index) throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"kyhjonathan"},"content":"        if (index \u003c\u003d 0) {","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"kyhjonathan"},"content":"            throw new TaskManagerException(\"Invalid task number. Please try again.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"kyhjonathan"},"content":"        } else if (index \u003e dayTasks.size()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"kyhjonathan"},"content":"            throw new TaskManagerException(\"Task number does not exist. Please try again.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"kyhjonathan"},"content":"    public static void checkIfTimeInFormat(String time) throws TaskManagerException {","lastModifiedDate":"2024-04-08"},{"lineNumber":58,"author":{"gitId":"kyhjonathan"},"content":"        if (!time.matches(\"(0[0-9]|1[0-9]|2[0-3])[0-5][0-9]\")) {","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"kyhjonathan"},"content":"            throw new TaskManagerException(\"Invalid time format.\" +","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"kyhjonathan"},"content":"                    \" Please use the format HHmm\");","lastModifiedDate":"2024-04-08"},{"lineNumber":61,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":62,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":63,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"     * Method that checks if the date is in the current week shown by the calendar.","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"     * @param date The date to be checked.","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"     * @param weekView The current week view shown by the calendar.","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException if date is not in the current week.","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"    public static void checkIfDateInCurrentWeek(LocalDate date, WeekView weekView) throws TaskManagerException {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfWeek \u003d weekView.getStartOfWeek();","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate endOfWeek \u003d startOfWeek.plusDays(6);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"        if (date.isBefore(startOfWeek) || date.isAfter(endOfWeek)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(NOT_CURRENT_WEEK_MESSAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"     * Method that checks if the date is in the current month shown by the calendar.","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"     * @param date The date to be checked.","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException if date is not in the current month.","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"    public static void checkIfDateInCurrentMonth(LocalDate date) throws TaskManagerException {","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"        int currentMonth \u003d currentDate.getMonthValue();","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"        int currentYear \u003d currentDate.getYear();","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"        int providedMonth \u003d date.getMonthValue();","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"        int providedYear \u003d date.getYear();","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"        if (currentMonth !\u003d providedMonth || currentYear !\u003d providedYear) {","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(NOT_CURRENT_MONTH_MESSAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"     * Method that checks if a specified date has existing tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"kyhjonathan"},"content":"     * @param dayTasks The List containing the list of tasks for the specified date.","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException if the specified date has no tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"clarencepohh"},"content":"    public static void checkIfDateHasTasks(List\u003cTask\u003e dayTasks) throws TaskManagerException {","lastModifiedDate":"2024-03-22"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"        if (dayTasks.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Aak242"},"content":"            throw new TaskManagerException(NO_TASKS_MESSAGE);","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"clarencepohh":31,"NicholasTanYY":1,"Mahesh1772":36,"Aak242":5,"kyhjonathan":37}},{"path":"src/main/java/log/FileLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package log;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"public class FileLogger {","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"    private static final Path LOG_FILE_PATH \u003d Path.of(\"./logs.log\");","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"    public static void setupLogger() {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"            Logger fileLogger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE_PATH.toString(), true);","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"            fileLogger.setUseParentHandlers(false);","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"            fileLogger.addHandler(fileHandler);","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"NicholasTanYY":23}},{"path":"src/main/java/seedu/duke/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import commandparser.CommandHandler;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import data.TaskManager;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import data.exceptions.TaskManagerException;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import log.FileLogger;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"import time.DateUtils;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"import time.MonthView;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"import ui.AvatarUi;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"import static storage.Storage.createNewFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"public class Main {","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    private static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"    public static void main(String[] args) throws IOException, TaskManagerException{","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"        FileLogger.setupLogger();","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"        LocalDate startOfWeek \u003d DateUtils.getStartOfWeek(today);","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"        WeekView weekView \u003d new WeekView(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfMonth \u003d today.withDayOfMonth(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"        MonthView monthView \u003d new MonthView(startOfMonth, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"        //Creates directory and tasks.txt file if it does not exist","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"        createNewFile(Storage.FILE_PATH);","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"        //Reads tasks from txt file","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"        Map\u003cLocalDate, List\u003cTask\u003e\u003e tasksFromFile \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"                Storage.loadTasksFromFile(Storage.FILE_PATH);","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"        //Loads tasks from txt file","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.addTasksFromFile(tasksFromFile);","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"        AvatarUi.printWelcomeMessage();","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"        CommandHandler commandHandler \u003d new CommandHandler(scanner, taskManager, weekView, monthView);","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"        while (true) {","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"            commandHandler.handleCommand();","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"clarencepohh":25,"Mahesh1772":11,"NicholasTanYY":7,"kyhjonathan":9}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import data.exceptions.StorageFileException;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"import data.exceptions.TaskManagerException;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import data.Task;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import data.TaskPriorityLevel;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"import data.TaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"import static data.exceptions.StorageFileException.checkStorageTextDateFormat;","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.addTask;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"import static data.TaskManager.getDayTasks;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.parseTaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.DEADLINE;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.EVENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"/**","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":" * The Storage class handles all operations related to storing and retrieving tasks from a file.","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":" * It provides methods to create a new file, save tasks to a file, load tasks from a file, and check the file format.","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":" * It also provides methods to configure the statuses of tasks after they are loaded from the file.","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":" * The class uses a Logger to log information and warnings related to file handling and task management.","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":" */","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"public class Storage {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"    public static final Path FILE_PATH \u003d Path.of(\"./save/clintonData.txt\");","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"    private static Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"     * Creates directory and tasks.txt if it does not exist.","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"     * @param path File Path of clintonData.txt file.","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"     * @throws IOException If an I/O exception occurs during file handling.","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"kyhjonathan"},"content":"    public static void createNewFile(Path path) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"kyhjonathan"},"content":"        if (!Files.isDirectory(path.getParent())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"kyhjonathan"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.INFO, \"new directory created\");","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"kyhjonathan"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"kyhjonathan"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.INFO, \"new clintonData.txt file created\");","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"kyhjonathan"},"content":"    //@@author kyhjonathan","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"kyhjonathan"},"content":"     * Reads tasks in hashmap and writes it in formatted form to clintonData.txt.","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"kyhjonathan"},"content":"     * @param tasks Hashmap of tasks.","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"kyhjonathan"},"content":"     * @param path File Path of clintonData.txt file.","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"kyhjonathan"},"content":"    public static void saveTasksToFile(Map\u003cLocalDate, List\u003cTask\u003e\u003e tasks, Path path) {","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"kyhjonathan"},"content":"        try (FileWriter writer \u003d new FileWriter(path.toFile())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"kyhjonathan"},"content":"            for (Map.Entry\u003cLocalDate, List\u003cTask\u003e\u003e entry : tasks.entrySet()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"kyhjonathan"},"content":"                assert entry !\u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"kyhjonathan"},"content":"                LocalDate date \u003d entry.getKey();","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"kyhjonathan"},"content":"                assert date !\u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"kyhjonathan"},"content":"                List\u003cTask\u003e taskList \u003d entry.getValue();","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"kyhjonathan"},"content":"                assert taskList !\u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"kyhjonathan"},"content":"                for (Task task : taskList) {","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"kyhjonathan"},"content":"                    String taskSaveFormat \u003d task.getSaveFormat();","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"kyhjonathan"},"content":"                    writer.write(date + \"|\" + taskSaveFormat + System.lineSeparator());","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"kyhjonathan"},"content":"                    String taskDescription \u003d task.getName();","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"kyhjonathan"},"content":"                    logger.log(Level.INFO, \"task added: \" + taskDescription);","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"kyhjonathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"I/O exception occurred during file handling\");","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"kyhjonathan"},"content":"     * Loads tasks from test.txt to hashmap.","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"kyhjonathan"},"content":"     * @param path File Path of clintonData.txt file.","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"kyhjonathan"},"content":"     * @return tasks hashmap of tasks read from test.txt.","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"kyhjonathan"},"content":"    public static Map\u003cLocalDate, List\u003cTask\u003e\u003e loadTasksFromFile(Path path) {","lastModifiedDate":"2024-03-22"},{"lineNumber":93,"author":{"gitId":"kyhjonathan"},"content":"        Map\u003cLocalDate, List\u003cTask\u003e\u003e tasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"kyhjonathan"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(path.toFile()))) {","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"kyhjonathan"},"content":"            String line;","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"kyhjonathan"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"kyhjonathan"},"content":"                if (!checkFileFormat(line)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"kyhjonathan"},"content":"                    throw new StorageFileException(\"Error in file format.\");","lastModifiedDate":"2024-04-09"},{"lineNumber":99,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"kyhjonathan"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"kyhjonathan"},"content":"                checkStorageTextDateFormat(parts[0]);","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"kyhjonathan"},"content":"                LocalDate date \u003d LocalDate.parse(parts[0]);","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"kyhjonathan"},"content":"                TaskType taskType \u003d parseTaskType(parts[1]);","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"kyhjonathan"},"content":"                String markedStatus \u003d parts[2];","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"kyhjonathan"},"content":"                String priorityLevel \u003d parts[3];","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"kyhjonathan"},"content":"                String taskDescription \u003d parts[4];","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"kyhjonathan"},"content":"                String[] dates \u003d {null, null};","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"kyhjonathan"},"content":"                String[] times \u003d {null, null};","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"kyhjonathan"},"content":"                if (taskType \u003d\u003d DEADLINE) {","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"kyhjonathan"},"content":"                    dates[0] \u003d parts[5];","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"kyhjonathan"},"content":"                    times[0] \u003d parts[6];","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"kyhjonathan"},"content":"                } else if (taskType \u003d\u003d EVENT) {","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"kyhjonathan"},"content":"                    dates[0] \u003d parts[5];","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"kyhjonathan"},"content":"                    dates[1] \u003d parts[6];","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"kyhjonathan"},"content":"                    times[0] \u003d parts[7];","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"kyhjonathan"},"content":"                    times[1] \u003d parts[8];","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"kyhjonathan"},"content":"                addTask(date, taskDescription, taskType, dates, times);","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"kyhjonathan"},"content":"                configureStatuses(date, markedStatus, priorityLevel);","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"kyhjonathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"I/O exception occurred during file handling\");","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.WARNING, \"I/O exception occurred\");","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"kyhjonathan"},"content":"        } catch (StorageFileException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.WARNING, \"Wrong tasks.txt format\");","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"kyhjonathan"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.WARNING, \"Invalid task type for task.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"kyhjonathan"},"content":"        logger.log(Level.INFO, \"tasks returned\");","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"kyhjonathan"},"content":"        return tasks;","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"kyhjonathan"},"content":"     * Configures the statuses of the tasks after they are loaded from the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"kyhjonathan"},"content":"     * ","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"kyhjonathan"},"content":"     * @param date Date of the task.","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"kyhjonathan"},"content":"     * @param markedStatus Marked status of the task.","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"kyhjonathan"},"content":"     * @param priorityLevel Priority level of the task.","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"kyhjonathan"},"content":"    private static void configureStatuses(LocalDate date, String markedStatus, String priorityLevel) {","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cTask\u003e allTasks \u003d getDayTasks(date);","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"kyhjonathan"},"content":"        Task recentlyAddedTask \u003d allTasks.get(allTasks.size() - 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"kyhjonathan"},"content":"        setMarkedStatus(markedStatus, recentlyAddedTask);","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"kyhjonathan"},"content":"        setPriorityLevelStatus(priorityLevel, recentlyAddedTask);","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"kyhjonathan"},"content":"     * Sets the priority level status of the task.","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"kyhjonathan"},"content":"     * ","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"kyhjonathan"},"content":"     * @param priorityLevel Priority level of the task.","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"kyhjonathan"},"content":"     * @param recentlyAddedTask Task that was most recently added.","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"kyhjonathan"},"content":"    private static void setPriorityLevelStatus(String priorityLevel, Task recentlyAddedTask) {","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"kyhjonathan"},"content":"        if (priorityLevel.equals(\"H\")) {","lastModifiedDate":"2024-04-08"},{"lineNumber":157,"author":{"gitId":"kyhjonathan"},"content":"            recentlyAddedTask.setPriorityLevel(TaskPriorityLevel.HIGH);","lastModifiedDate":"2024-04-08"},{"lineNumber":158,"author":{"gitId":"kyhjonathan"},"content":"        } else if (priorityLevel.equals(\"M\")) {","lastModifiedDate":"2024-04-08"},{"lineNumber":159,"author":{"gitId":"kyhjonathan"},"content":"            recentlyAddedTask.setPriorityLevel(TaskPriorityLevel.MEDIUM);","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"kyhjonathan"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"kyhjonathan"},"content":"            recentlyAddedTask.setPriorityLevel(TaskPriorityLevel.LOW);","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"kyhjonathan"},"content":"     * Sets the marked status of the task.","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"kyhjonathan"},"content":"     * ","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"kyhjonathan"},"content":"     * @param markedStatus Marked status of the task.","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"kyhjonathan"},"content":"     * @param recentlyAddedTask Task that was most recently added.","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"kyhjonathan"},"content":"    private static void setMarkedStatus(String markedStatus, Task recentlyAddedTask) {","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"kyhjonathan"},"content":"        if (markedStatus.equals(\"X\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"kyhjonathan"},"content":"            recentlyAddedTask.setCompleteness(true);","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"kyhjonathan"},"content":"     * Checks if the file format is correct.","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"kyhjonathan"},"content":"     * @param line Line to be checked.","lastModifiedDate":"2024-04-12"},{"lineNumber":181,"author":{"gitId":"kyhjonathan"},"content":"     * @return True if the file format is correct, false otherwise.","lastModifiedDate":"2024-04-12"},{"lineNumber":182,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"kyhjonathan"},"content":"    public static boolean checkFileFormat(String line) {","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"kyhjonathan"},"content":"        String regex \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\|.+\";","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"kyhjonathan"},"content":"        return line.matches(regex);","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"clarencepohh":10,"NicholasTanYY":5,"kyhjonathan":173}},{"path":"src/main/java/time/DateUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package time;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"public class DateUtils {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"    private static final int NUMBER_OF_DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"    public static LocalDate getStartOfWeek(LocalDate date) {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"        return date.minusDays(date.getDayOfWeek().getValue() % NUMBER_OF_DAYS_IN_WEEK);","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"clarencepohh":3,"kyhjonathan":6}},{"path":"src/main/java/time/MonthView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package time;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import ui.UiRenderer;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"import java.time.YearMonth;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"import java.util.List;","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"import java.util.Objects;","lastModifiedDate":"2024-04-08"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.TODO_ICON_COLOR;","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.DEADLINE_ICON_COLOR;","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.EVENT_ICON_COLOR;","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.ESCAPE_COLOR;","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"public class MonthView extends View {","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    private static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"    private static final int NUMBER_OF_DAYS_IN_WEEK \u003d 7;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    private final UiRenderer uiRenderer;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"     * Constructs a MonthView with the specified start date and date formatter.","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"     * @param startOfMonth   the start date of the month.","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"     * @param dateFormatter the date formatter for formatting dates.","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"    public MonthView(LocalDate startOfMonth, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"        super(startOfMonth, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"        this.uiRenderer \u003d new UiRenderer();","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"     * Prints the month view with tasks from the task manager.","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"     * @param taskManager the TaskManager object containing tasks.","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"    public void printView(TaskManager taskManager) {","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"        logger.log(Level.INFO, \"Printing calendar in month view\");","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"        assert startOfView !\u003d null : \"Start of Month missing!\";","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"        YearMonth yearMonth \u003d YearMonth.from(startOfView);","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate firstOfMonth \u003d startOfView.withDayOfMonth(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate currentDate \u003d firstOfMonth.with(TemporalAdjusters.previousOrSame(java.time.DayOfWeek.SUNDAY));","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"        printMonthHeader(yearMonth);","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"        uiRenderer.printWeekHeader(startOfView, dateFormatter, true);","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"        while (currentDate.isBefore(firstOfMonth.plusMonths(1))) {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"            printWeek(currentDate, taskManager);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"            currentDate \u003d currentDate.plusWeeks(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"     * Prints the header for the month view.","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"     * @param yearMonth the YearMonth object representing the month.","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"    private void printMonthHeader(YearMonth yearMonth) {","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"\\nMonth View: \" + yearMonth.getMonth() + \" \" + yearMonth.getYear());","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"     * Prints a week within the month view.","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"     * @param currentDate the current date in the week.","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"     * @param taskManager the TaskManager object containing tasks.","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"    private void printWeek(LocalDate currentDate, TaskManager taskManager) {","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_DAYS_IN_WEEK; i++) {","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"Mahesh1772"},"content":"            printDay(currentDate, startOfView);","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"            currentDate \u003d currentDate.plusDays(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(uiRenderer.VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"        uiRenderer.printSeparator();","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"        int maxTasks \u003d getMaxTasksForWeek(currentDate.minusDays(7), taskManager);","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"Mahesh1772"},"content":"        printTasksForWeek(currentDate.minusDays(7), maxTasks, taskManager);","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"Mahesh1772"},"content":"        if (maxTasks \u003e 0) {","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"            uiRenderer.printSeparator();","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"     * Prints the day number if it falls within the current month, otherwise prints an empty placeholder.","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"     * @param currentDate the current date to print.","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"     * @param startOfMonth the start date of the current month.","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"    private void printDay(LocalDate currentDate, LocalDate startOfMonth) {","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"        if (currentDate.getMonth().equals(YearMonth.from(startOfMonth).getMonth())) {","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"            printDayNumber(currentDate);","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"            System.out.print(uiRenderer.EMPTY_TASK_DISPLAY_FORMAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"     * Prints the day number for a given date.","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"     * @param currentDate the current date to print.","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"Mahesh1772"},"content":"    private void printDayNumber(LocalDate currentDate) {","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"Mahesh1772"},"content":"        DateTimeFormatter dayFormatter \u003d DateTimeFormatter.ofPattern(\"d\");","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"Mahesh1772"},"content":"        System.out.printf(uiRenderer.ENTRY_FORMAT, dayFormatter.format(currentDate));","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"Mahesh1772"},"content":"     * Returns the maximum number of tasks for a week.","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"Mahesh1772"},"content":"     * @param weekStart   the start date of the week.","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"Mahesh1772"},"content":"     * @param taskManager the TaskManager object containing tasks.","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"Mahesh1772"},"content":"     * @return the maximum number of tasks for the week.","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":122,"author":{"gitId":"Mahesh1772"},"content":"    private int getMaxTasksForWeek(LocalDate weekStart, TaskManager taskManager) {","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"Mahesh1772"},"content":"        int maxTasks \u003d 0;","lastModifiedDate":"2024-03-22"},{"lineNumber":124,"author":{"gitId":"Mahesh1772"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_DAYS_IN_WEEK; i++) {","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"Mahesh1772"},"content":"            LocalDate date \u003d weekStart.plusDays(i);","lastModifiedDate":"2024-03-22"},{"lineNumber":126,"author":{"gitId":"Mahesh1772"},"content":"            maxTasks \u003d Math.max(maxTasks, taskManager.getTasksForDate(date).size());","lastModifiedDate":"2024-03-22"},{"lineNumber":127,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":128,"author":{"gitId":"Mahesh1772"},"content":"        return maxTasks;","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":131,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":132,"author":{"gitId":"Mahesh1772"},"content":"     * Prints tasks for each day of the week.","lastModifiedDate":"2024-04-10"},{"lineNumber":133,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":134,"author":{"gitId":"Mahesh1772"},"content":"     * @param weekStart   the start date of the week.","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"Mahesh1772"},"content":"     * @param maxTasks    the maximum number of tasks for the week.","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"Mahesh1772"},"content":"     * @param taskManager the TaskManager object containing tasks.","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"Mahesh1772"},"content":"    private void printTasksForWeek(LocalDate weekStart, int maxTasks, TaskManager taskManager) {","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"Mahesh1772"},"content":"        for (int taskIndex \u003d 0; taskIndex \u003c maxTasks; taskIndex++) {","lastModifiedDate":"2024-03-22"},{"lineNumber":140,"author":{"gitId":"Mahesh1772"},"content":"            for (int dayIndex \u003d 0; dayIndex \u003c NUMBER_OF_DAYS_IN_WEEK; dayIndex++) {","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"Mahesh1772"},"content":"                LocalDate date \u003d weekStart.plusDays(dayIndex);","lastModifiedDate":"2024-03-22"},{"lineNumber":142,"author":{"gitId":"Mahesh1772"},"content":"                List\u003cTask\u003e dayTasks \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":143,"author":{"gitId":"Mahesh1772"},"content":"                printTaskForDay(dayTasks, taskIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":145,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(uiRenderer.VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":147,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":148,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"Mahesh1772"},"content":"     * Prints the tasks for a specific day within a week.","lastModifiedDate":"2024-04-10"},{"lineNumber":151,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":152,"author":{"gitId":"Mahesh1772"},"content":"     * @param dayTasks  the list of tasks for the day.","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"Mahesh1772"},"content":"     * @param taskIndex the index of the task to print.","lastModifiedDate":"2024-04-13"},{"lineNumber":154,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":155,"author":{"gitId":"Mahesh1772"},"content":"    private void printTaskForDay(List\u003cTask\u003e dayTasks, int taskIndex) {","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"Mahesh1772"},"content":"        if (taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"Mahesh1772"},"content":"            Task task \u003d dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"Mahesh1772"},"content":"            printTaskIcon(task);","lastModifiedDate":"2024-04-08"},{"lineNumber":159,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":160,"author":{"gitId":"Mahesh1772"},"content":"            System.out.print(uiRenderer.EMPTY_TASK_DISPLAY_FORMAT);","lastModifiedDate":"2024-04-08"},{"lineNumber":161,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":162,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":163,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":164,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":165,"author":{"gitId":"Mahesh1772"},"content":"     * Prints a task icon based on its type and status.","lastModifiedDate":"2024-04-10"},{"lineNumber":166,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":167,"author":{"gitId":"Mahesh1772"},"content":"     * @param task the task to print.","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":169,"author":{"gitId":"Mahesh1772"},"content":"    private void printTaskIcon(Task task) {","lastModifiedDate":"2024-04-08"},{"lineNumber":170,"author":{"gitId":"Mahesh1772"},"content":"        String taskIcon \u003d getTaskIcon(task);","lastModifiedDate":"2024-04-08"},{"lineNumber":171,"author":{"gitId":"Mahesh1772"},"content":"        System.out.printf(uiRenderer.ICON_DISPLAY_FORMAT, taskIcon);","lastModifiedDate":"2024-04-08"},{"lineNumber":172,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":173,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":174,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"Mahesh1772"},"content":"     * Retrieves the task icon based on its type and status.","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"Mahesh1772"},"content":"     * @param task the task to retrieve the icon for.","lastModifiedDate":"2024-04-13"},{"lineNumber":178,"author":{"gitId":"Mahesh1772"},"content":"     * @return the task icon.","lastModifiedDate":"2024-04-13"},{"lineNumber":179,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"Mahesh1772"},"content":"    private String getTaskIcon(Task task) {","lastModifiedDate":"2024-04-08"},{"lineNumber":181,"author":{"gitId":"Mahesh1772"},"content":"        String taskIcon;","lastModifiedDate":"2024-04-08"},{"lineNumber":182,"author":{"gitId":"Mahesh1772"},"content":"        switch (task.getTaskType()) {","lastModifiedDate":"2024-04-07"},{"lineNumber":183,"author":{"gitId":"Mahesh1772"},"content":"        case \"E\":","lastModifiedDate":"2024-04-07"},{"lineNumber":184,"author":{"gitId":"Mahesh1772"},"content":"            taskIcon \u003d getColoredTaskIcon(task, EVENT_ICON_COLOR);","lastModifiedDate":"2024-04-08"},{"lineNumber":185,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-07"},{"lineNumber":186,"author":{"gitId":"Mahesh1772"},"content":"        case \"D\":","lastModifiedDate":"2024-04-07"},{"lineNumber":187,"author":{"gitId":"Mahesh1772"},"content":"            taskIcon \u003d getColoredTaskIcon(task, DEADLINE_ICON_COLOR);","lastModifiedDate":"2024-04-08"},{"lineNumber":188,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-07"},{"lineNumber":189,"author":{"gitId":"Mahesh1772"},"content":"        case \"T\":","lastModifiedDate":"2024-04-07"},{"lineNumber":190,"author":{"gitId":"Mahesh1772"},"content":"            taskIcon \u003d getColoredTaskIcon(task, TODO_ICON_COLOR);","lastModifiedDate":"2024-04-08"},{"lineNumber":191,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-07"},{"lineNumber":192,"author":{"gitId":"Mahesh1772"},"content":"        default:","lastModifiedDate":"2024-04-07"},{"lineNumber":193,"author":{"gitId":"Mahesh1772"},"content":"            taskIcon \u003d \"\";","lastModifiedDate":"2024-04-08"},{"lineNumber":194,"author":{"gitId":"Mahesh1772"},"content":"            break;","lastModifiedDate":"2024-04-07"},{"lineNumber":195,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":196,"author":{"gitId":"Mahesh1772"},"content":"        return taskIcon;","lastModifiedDate":"2024-04-08"},{"lineNumber":197,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":198,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":199,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":200,"author":{"gitId":"Mahesh1772"},"content":"     * Retrieves a colored task icon.","lastModifiedDate":"2024-04-10"},{"lineNumber":201,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":202,"author":{"gitId":"Mahesh1772"},"content":"     * @param task  the task to retrieve the icon for.","lastModifiedDate":"2024-04-13"},{"lineNumber":203,"author":{"gitId":"Mahesh1772"},"content":"     * @param color the color of the task icon.","lastModifiedDate":"2024-04-13"},{"lineNumber":204,"author":{"gitId":"Mahesh1772"},"content":"     * @return the colored task icon.","lastModifiedDate":"2024-04-13"},{"lineNumber":205,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":206,"author":{"gitId":"Mahesh1772"},"content":"    private String getColoredTaskIcon(Task task, String color) {","lastModifiedDate":"2024-04-08"},{"lineNumber":207,"author":{"gitId":"Mahesh1772"},"content":"        String taskIcon;","lastModifiedDate":"2024-04-08"},{"lineNumber":208,"author":{"gitId":"Mahesh1772"},"content":"        if (Objects.equals(task.getMarkedStatusIcon(), \"X\")) {","lastModifiedDate":"2024-04-08"},{"lineNumber":209,"author":{"gitId":"Mahesh1772"},"content":"            taskIcon \u003d color + \"{*}\" + ESCAPE_COLOR;","lastModifiedDate":"2024-04-10"},{"lineNumber":210,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":211,"author":{"gitId":"Mahesh1772"},"content":"            taskIcon \u003d color + \"{ }\" + ESCAPE_COLOR;","lastModifiedDate":"2024-04-10"},{"lineNumber":212,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":213,"author":{"gitId":"Mahesh1772"},"content":"        return taskIcon;","lastModifiedDate":"2024-04-08"},{"lineNumber":214,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":215,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":216,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":217,"author":{"gitId":"Mahesh1772"},"content":"     * Moves the view to the next month.","lastModifiedDate":"2024-04-10"},{"lineNumber":218,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":219,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":220,"author":{"gitId":"Mahesh1772"},"content":"    public void next() {","lastModifiedDate":"2024-03-22"},{"lineNumber":221,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.plusMonths(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":222,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":223,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":224,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":225,"author":{"gitId":"Mahesh1772"},"content":"     * Moves the view to the previous month.","lastModifiedDate":"2024-04-10"},{"lineNumber":226,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":227,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":228,"author":{"gitId":"Mahesh1772"},"content":"    public void previous() {","lastModifiedDate":"2024-03-22"},{"lineNumber":229,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.minusMonths(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":230,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":231,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"Mahesh1772":231}},{"path":"src/main/java/time/View.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package time;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import data.exceptions.TaskManagerException;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"public abstract class View {","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"    protected LocalDate startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"    protected final DateTimeFormatter dateFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"     * Constructs a View with the specified start date and date formatter.","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"     * @param startOfView   the start date of the view.","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"     * @param dateFormatter the date formatter for formatting dates.","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"    public View(LocalDate startOfView, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"        this.startOfView \u003d startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"        this.dateFormatter \u003d dateFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"     * Prints the view with tasks from the task manager.","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"     * @param taskManager the TaskManager object containing tasks.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"    public abstract void printView(TaskManager taskManager);","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"     * Moves the view to the next period (e.g., next week or next month).","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"    public abstract void next();","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"     * Moves the view to the previous period (e.g., previous week or previous month).","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"    public abstract void previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"     * Returns the start date of the view.","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"     * @return the start date of the view","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getStartOfView() {","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"        return startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"     * Returns the start date of the month associated with the view.","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"     * @return the start date of the month","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"NicholasTanYY"},"content":"    public LocalDate getStartOfMonth() {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"NicholasTanYY"},"content":"        return startOfView.withDayOfMonth(1);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"     * Finds the date corresponding to a given day number within the same month","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"     * and year as the start of the view.","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"     * @param dayInt the day number to find the date for.","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"     * @return the corresponding date.","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"     * @throws TaskManagerException if the day number is invalid.","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate findDateFromNumber(int dayInt) throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"        if (dayInt \u003c 1 || dayInt \u003e 31) {","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid day number. Day must be between 1 and 31.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate targetDate \u003d getStartOfMonth().withDayOfMonth(dayInt);","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"        if (targetDate.getMonth() !\u003d getStartOfMonth().getMonth()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid day number for the current month.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"        return targetDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"Mahesh1772":71,"NicholasTanYY":5}},{"path":"src/main/java/time/WeekView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"package time;","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import static ui.UiRenderer.printWeekBody;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.printWeekHeader;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"public class WeekView extends View {","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"     * Constructs a WeekView with the specified start date and date formatter.","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"     * @param startOfWeek   the start date of the week","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"     * @param dateFormatter the date formatter for formatting dates","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"    public WeekView(LocalDate startOfWeek, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"        super(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"     * Prints the week view with tasks from the task manager.","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"     * @param taskManager the TaskManager object containing tasks","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"    public void printView(TaskManager taskManager) {","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"        assert startOfView !\u003d null : \"Start of Weekday missing!\";","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate endOfWeek \u003d startOfView.plusDays(6);","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"\\nWeek View: \" + dateFormatter.format(startOfView) +","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"                \" - \" + dateFormatter.format(endOfWeek));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        printWeekHeader(startOfView, dateFormatter, false);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"        printWeekBody(startOfView, taskManager);","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"     * Moves the view to the next week.","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"    public void next() {","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.plusWeeks(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"     * Moves the view to the previous week.","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"    public void previous() {","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.minusWeeks(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"     * Retrieves the start date of the week.","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"     * @return the start date of the week","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getStartOfWeek() {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"        return startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"     * Retrieves the date for a specific day of the week.","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"     * @param dayOfWeek the day of the week (1 for Monday, 2 for Tuesday, ..., 7 for Sunday)","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"     * @return the date corresponding to the given day of the week","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getDateForDay(int dayOfWeek) {","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"        // Assuming dayOfWeek is 1 for Monday, 2 for Tuesday, ..., 7 for Sunday","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"        // Adjust the value to match ISO-8601 (1 for Monday, ..., 7 for Sunday)","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"        int currentDayOfWeek \u003d startOfView.getDayOfWeek().getValue();","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"        int daysDiff \u003d dayOfWeek - currentDayOfWeek;","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"        // If the dayOfWeek is before the currentDayOfWeek, we need to adjust the daysDiff","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"Mahesh1772"},"content":"        if (daysDiff \u003c 0) {","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"            daysDiff +\u003d 7;","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"        return startOfView.plusDays(daysDiff);","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Mahesh1772":75,"clarencepohh":5,"NicholasTanYY":1,"Aak242":1,"kyhjonathan":1}},{"path":"src/main/java/ui/AvatarUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"public class AvatarUi {","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String AVATAR \u003d ","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"            \"            *****\u003d            \\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"            \"          %%#**#%#**          \\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"            \"         +%#\u003d\u003d\u003d\u003d \u003d#%          \\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"            \"          @*+\u003d  \u003d+##          \\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"            \"          %++\u003d\u003d\u003d\u003d\u003d*#          \\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"            \"           *\u003d \u003d\u003d \u003d+           \\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"            \"           \u003d*\u003d++\u003d*            \\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"            \"           +**++*+\u003d           \\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"            \"        \u003d*%\u003d  +\u003d  +%+         \\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"            \"  -##*##%##   %#  +######**+  \\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"            \"*#%###*##*#\u003d  #*  ***##*###%*+\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"            \"*#%#########  ##  %########%%#\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"            \" %%%%######%\u003d %% +%######%%%@#\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"            \"*@%%%%##%%%%##%%##%%%#*#%%%%%\u003d\\n\";","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello there, I am CLI-nton, your CLI-based \" + ","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"            \"personal assistant in event management!\";","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printAvatar() {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(AVATAR);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"NicholasTanYY":31}},{"path":"src/main/java/ui/UiRenderer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"public class UiRenderer {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    public static final String END_HORIZONTAL_DIVIDER \u003d \"+\";","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"    public static final String VERTICAL_DIVIDER \u003d \"|\";","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    public static final int SPACE_COUNT \u003d 15;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"    public static final int ICON_COUNT \u003d 24;","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    public static final String ENTRY_FORMAT \u003d VERTICAL_DIVIDER + \"%-\" + SPACE_COUNT + \"s\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"    public static final String TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \"%-\" + SPACE_COUNT + \".\" + SPACE_COUNT + \"s\";","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    public static final String ICON_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \"%-\" + ICON_COUNT + \".\" + ICON_COUNT + \"s\";","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"    public static final String EMPTY_TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" \".repeat(SPACE_COUNT);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"    public static final String EVENT_ICON_COLOR \u003d \"\\u001B[31m\";","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"    public static final String DEADLINE_ICON_COLOR \u003d \"\\u001B[33m\";","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"    public static final String TODO_ICON_COLOR \u003d \"\\u001B[34m\";","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"    public static final String ESCAPE_COLOR \u003d \"\\u001B[0m\";","lastModifiedDate":"2024-04-08"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"    private static Map\u003cLocalDate, List\u003cList\u003cString\u003e\u003e\u003e allWrappedTaskLines \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"    private static Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"    private static final String[] WEEK_DAYS \u003d {\"Sunday\", \"Monday\", \"Tuesday\",","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"        \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"};","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"    private static final String SINGLE_HORIZONTAL_DIVIDER \u003d \"+\" + \"-\".repeat(SPACE_COUNT);","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"    private static final int numberOfDaysInWeek \u003d 7;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"     * Prints the header row with the surrounding horizontal dividers.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"     * @param startOfView The date of the start of the week or month view.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"     * @param dateFormatter The date formatter to format the date.","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"     * @param isMonthView A boolean to indicate if the view is a month view.","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"    public static void printWeekHeader(LocalDate startOfView, DateTimeFormatter dateFormatter, boolean isMonthView) {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"        printHeaderRow();","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"        if (!isMonthView) {","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"            printDateRow(dateFormatter ,startOfView);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"NicholasTanYY"},"content":"     * Prints the horizontal divider.","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"    public static void printHorizontalDivider() {","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"NicholasTanYY"},"content":"        for (int i \u003d 0; i \u003c numberOfDaysInWeek; i++) {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.print(SINGLE_HORIZONTAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(END_HORIZONTAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"NicholasTanYY"},"content":"     * Prints the header row with the days of the week.","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printHeaderRow() {","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"NicholasTanYY"},"content":"        for (String day : WEEK_DAYS) {","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.printf(ENTRY_FORMAT, day);","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"NicholasTanYY"},"content":"     * Prints the body of the week view.","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"NicholasTanYY"},"content":"     * @param startOfWeek The date of the start of the week.","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskManager The task manager to get the tasks from.","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printWeekBody(LocalDate startOfWeek, TaskManager taskManager) {","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"NicholasTanYY"},"content":"        printTasksInWeek(startOfWeek, taskManager);","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"NicholasTanYY"},"content":"     * Prints the date row with the dates of the week.","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"NicholasTanYY"},"content":"     * @param dateFormatter The date formatter to format the date.","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"NicholasTanYY"},"content":"     * @param date The date of the start of the week.","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printDateRow(DateTimeFormatter dateFormatter, LocalDate date) {","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"NicholasTanYY"},"content":"        logger.log(Level.INFO, \"Printing dates for week starting from \" + date);","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"NicholasTanYY"},"content":"        for (int i \u003d 0; i \u003c numberOfDaysInWeek; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"            String formattedDate \u003d dateFormatter.format(date);","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.printf(ENTRY_FORMAT, formattedDate);","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"NicholasTanYY"},"content":"            date \u003d date.plusDays(1);","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"NicholasTanYY"},"content":"     * Prints the tasks in the week.","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"NicholasTanYY"},"content":"     * @param startOfWeek The date of the start of the week.","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskManager The task manager to get the tasks from.","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printTasksInWeek(LocalDate startOfWeek, TaskManager taskManager) {","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"NicholasTanYY"},"content":"        storeWrappedLines(startOfWeek, taskManager);","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"NicholasTanYY"},"content":"        int maxNumberOfTasksInDay \u003d getMaxNumberOfTasksInDay(allWrappedTaskLines);","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"NicholasTanYY"},"content":"        int maxNumberOfLinesPerTask \u003d getMaxNumberOfLinesPerTask(allWrappedTaskLines);","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"NicholasTanYY"},"content":"        printTasksInGrid(startOfWeek, maxNumberOfTasksInDay, maxNumberOfLinesPerTask);","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"NicholasTanYY"},"content":"     * Returns the maximum number of tasks in a day.","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"NicholasTanYY"},"content":"     * @param allWrappedTaskLines The map of wrapped task lines.","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"NicholasTanYY"},"content":"     * @return The maximum number of tasks in a day.","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"NicholasTanYY"},"content":"    private static int getMaxNumberOfTasksInDay(Map\u003cLocalDate, List\u003cList\u003cString\u003e\u003e\u003e allWrappedTaskLines) {","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"NicholasTanYY"},"content":"        int maxNumberOfTasksInDay \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"NicholasTanYY"},"content":"        for (List\u003cList\u003cString\u003e\u003e dayTasks : allWrappedTaskLines.values()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"NicholasTanYY"},"content":"            if (dayTasks.size() \u003e maxNumberOfTasksInDay) {","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"NicholasTanYY"},"content":"                maxNumberOfTasksInDay \u003d dayTasks.size();","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"NicholasTanYY"},"content":"        return maxNumberOfTasksInDay;","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"NicholasTanYY"},"content":"     * Returns the maximum number of lines per task.","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"NicholasTanYY"},"content":"     * @param allWrappedTaskLines The map of wrapped task lines.","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"NicholasTanYY"},"content":"     * @return The maximum number of lines per task.","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"NicholasTanYY"},"content":"    private static int getMaxNumberOfLinesPerTask(Map\u003cLocalDate, List\u003cList\u003cString\u003e\u003e\u003e allWrappedTaskLines) {","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"NicholasTanYY"},"content":"        int maxNumberOfLinesPerTask \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"NicholasTanYY"},"content":"        for (List\u003cList\u003cString\u003e\u003e dayTasks : allWrappedTaskLines.values()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"NicholasTanYY"},"content":"            for (List\u003cString\u003e taskLines : dayTasks) {","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"NicholasTanYY"},"content":"                if (taskLines.size() \u003e maxNumberOfLinesPerTask) {","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"NicholasTanYY"},"content":"                    maxNumberOfLinesPerTask \u003d taskLines.size();","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"NicholasTanYY"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"NicholasTanYY"},"content":"        return maxNumberOfLinesPerTask;","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"NicholasTanYY"},"content":"     * Prints the tasks in a grid format for the week. The tasks across different days are aligned in the same row.","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"NicholasTanYY"},"content":"     * @param startOfWeek The date of the start of the week.","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"NicholasTanYY"},"content":"     * @param maxNumberOfTasksInDay The maximum number of tasks in a day.","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"NicholasTanYY"},"content":"     * @param maxNumberOfLinesPerTask The maximum number of lines per task.","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printTasksInGrid(LocalDate startOfWeek, int maxNumberOfTasksInDay,","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"NicholasTanYY"},"content":"            int maxNumberOfLinesPerTask) {","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"NicholasTanYY"},"content":"        for (int taskIndex \u003d 0; taskIndex \u003c maxNumberOfTasksInDay; taskIndex++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"NicholasTanYY"},"content":"            for (int lineIndex \u003d 0; lineIndex \u003c maxNumberOfLinesPerTask; lineIndex++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"NicholasTanYY"},"content":"                printTaskSubstringInRow(startOfWeek, taskIndex, lineIndex);","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":169,"author":{"gitId":"NicholasTanYY"},"content":"     * Prints the substring of the task in the row.","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"NicholasTanYY"},"content":"     * @param startOfWeek The date of the start of the week.","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskIndex The index of the task.","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"NicholasTanYY"},"content":"     * @param lineIndex The index of the line in the task.","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printTaskSubstringInRow(LocalDate startOfWeek, int taskIndex, int lineIndex) {","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"NicholasTanYY"},"content":"        for (int dayIndex \u003d 0; dayIndex \u003c numberOfDaysInWeek; dayIndex++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"NicholasTanYY"},"content":"            LocalDate currentDate \u003d startOfWeek.plusDays(dayIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"NicholasTanYY"},"content":"            List\u003cList\u003cString\u003e\u003e tasksWrappedLinesForDay \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"NicholasTanYY"},"content":"                    allWrappedTaskLines.getOrDefault(currentDate, Collections.emptyList());","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"NicholasTanYY"},"content":"            if (taskIndex \u003c tasksWrappedLinesForDay.size() \u0026\u0026","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"NicholasTanYY"},"content":"                    lineIndex \u003c tasksWrappedLinesForDay.get(taskIndex).size()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"NicholasTanYY"},"content":"                String taskLine \u003d tasksWrappedLinesForDay.get(taskIndex).get(lineIndex);","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"NicholasTanYY"},"content":"                System.out.printf(TASK_DISPLAY_FORMAT, taskLine);","lastModifiedDate":"2024-03-31"},{"lineNumber":186,"author":{"gitId":"NicholasTanYY"},"content":"            } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"NicholasTanYY"},"content":"                System.out.print(EMPTY_TASK_DISPLAY_FORMAT);","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":191,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":194,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"NicholasTanYY"},"content":"     * Stores the wrapped lines for the tasks in the week.","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"NicholasTanYY"},"content":"     * @param startOfWeek The date of the start of the week.","lastModifiedDate":"2024-03-31"},{"lineNumber":198,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskManager The task manager to get the tasks from.","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":200,"author":{"gitId":"NicholasTanYY"},"content":"    private static void storeWrappedLines(LocalDate startOfWeek, TaskManager taskManager) {","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"NicholasTanYY"},"content":"        for (int dayIndex \u003d 0; dayIndex \u003c numberOfDaysInWeek; dayIndex++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":202,"author":{"gitId":"NicholasTanYY"},"content":"            LocalDate currentDate \u003d startOfWeek.plusDays(dayIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"clarencepohh"},"content":"            List\u003cTask\u003e dayTasks \u003d taskManager.getTasksForDate(currentDate);","lastModifiedDate":"2024-03-22"},{"lineNumber":204,"author":{"gitId":"NicholasTanYY"},"content":"            List\u003cList\u003cString\u003e\u003e wrappedTasksForDay \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":206,"author":{"gitId":"NicholasTanYY"},"content":"            for (Task task : dayTasks) {","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"NicholasTanYY"},"content":"                String taskDescription \u003d task.getName();","lastModifiedDate":"2024-03-31"},{"lineNumber":208,"author":{"gitId":"NicholasTanYY"},"content":"                String displayString \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"NicholasTanYY"},"content":"                        (dayTasks.indexOf(task) + 1) + \".\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"NicholasTanYY"},"content":"                        task.getDisplayFormat() +","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"NicholasTanYY"},"content":"                        taskDescription;","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"NicholasTanYY"},"content":"                List\u003cString\u003e wrappedLines \u003d wrapText(displayString, SPACE_COUNT);","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"NicholasTanYY"},"content":"                wrappedTasksForDay.add(wrappedLines);","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":215,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"NicholasTanYY"},"content":"            allWrappedTaskLines.put(currentDate, wrappedTasksForDay);","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":218,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":219,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":220,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"NicholasTanYY"},"content":"     * Wraps the text to fit the given maximum length.","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"NicholasTanYY"},"content":"     * @param text The text to wrap.","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"NicholasTanYY"},"content":"     * @param maxLengthToOccupy The maximum length to occupy.","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"NicholasTanYY"},"content":"     * @return The list of wrapped lines.","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":227,"author":{"gitId":"NicholasTanYY"},"content":"    private static List\u003cString\u003e wrapText(String text, int maxLengthToOccupy) {","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"NicholasTanYY"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"NicholasTanYY"},"content":"        while (text.length() \u003e maxLengthToOccupy) {","lastModifiedDate":"2024-03-31"},{"lineNumber":230,"author":{"gitId":"NicholasTanYY"},"content":"            int breakPointIndex \u003d text.lastIndexOf(\u0027 \u0027, maxLengthToOccupy);","lastModifiedDate":"2024-03-31"},{"lineNumber":231,"author":{"gitId":"NicholasTanYY"},"content":"            if (breakPointIndex \u003d\u003d -1) {","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"NicholasTanYY"},"content":"                breakPointIndex \u003d maxLengthToOccupy;","lastModifiedDate":"2024-03-31"},{"lineNumber":233,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":234,"author":{"gitId":"NicholasTanYY"},"content":"            lines.add(text.substring(0, breakPointIndex));","lastModifiedDate":"2024-03-31"},{"lineNumber":235,"author":{"gitId":"NicholasTanYY"},"content":"            text \u003d text.substring(breakPointIndex).trim();","lastModifiedDate":"2024-03-31"},{"lineNumber":236,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":237,"author":{"gitId":"NicholasTanYY"},"content":"        if (!text.isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":238,"author":{"gitId":"NicholasTanYY"},"content":"            lines.add(text);","lastModifiedDate":"2024-03-31"},{"lineNumber":239,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":240,"author":{"gitId":"NicholasTanYY"},"content":"        return lines;","lastModifiedDate":"2024-03-31"},{"lineNumber":241,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":242,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":243,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":244,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":245,"author":{"gitId":"NicholasTanYY"},"content":"     * Prints the task for the day.","lastModifiedDate":"2024-03-30"},{"lineNumber":246,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"NicholasTanYY"},"content":"     * @param dayTasks The list of tasks for the day.","lastModifiedDate":"2024-03-30"},{"lineNumber":248,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskIndex The index of the task to print.","lastModifiedDate":"2024-03-30"},{"lineNumber":249,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":250,"author":{"gitId":"clarencepohh"},"content":"    public static void printTaskForDay(List\u003cTask\u003e dayTasks, int taskIndex) {","lastModifiedDate":"2024-03-22"},{"lineNumber":251,"author":{"gitId":"NicholasTanYY"},"content":"        if (taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":252,"author":{"gitId":"clarencepohh"},"content":"            Task task \u003d dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-22"},{"lineNumber":253,"author":{"gitId":"NicholasTanYY"},"content":"            String taskDescription \u003d task.getName();","lastModifiedDate":"2024-03-30"},{"lineNumber":254,"author":{"gitId":"NicholasTanYY"},"content":"            String displayString \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":255,"author":{"gitId":"NicholasTanYY"},"content":"                    (taskIndex + 1) + \".\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":256,"author":{"gitId":"NicholasTanYY"},"content":"                    task.getDisplayFormat() +","lastModifiedDate":"2024-03-30"},{"lineNumber":257,"author":{"gitId":"NicholasTanYY"},"content":"                    taskDescription;","lastModifiedDate":"2024-03-30"},{"lineNumber":258,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.printf(TASK_DISPLAY_FORMAT, displayString);","lastModifiedDate":"2024-03-30"},{"lineNumber":259,"author":{"gitId":"NicholasTanYY"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":260,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.print(EMPTY_TASK_DISPLAY_FORMAT);","lastModifiedDate":"2024-03-16"},{"lineNumber":261,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":262,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":263,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":264,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":265,"author":{"gitId":"NicholasTanYY"},"content":"     * Returns the maximum number of tasks in a day.","lastModifiedDate":"2024-03-30"},{"lineNumber":266,"author":{"gitId":"NicholasTanYY"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":267,"author":{"gitId":"NicholasTanYY"},"content":"     * @param startOfWeek The date of the start of the week.","lastModifiedDate":"2024-03-30"},{"lineNumber":268,"author":{"gitId":"NicholasTanYY"},"content":"     * @param taskManager The task manager to get the tasks from.","lastModifiedDate":"2024-03-30"},{"lineNumber":269,"author":{"gitId":"NicholasTanYY"},"content":"     * @return The maximum number of tasks of a day in a week.","lastModifiedDate":"2024-03-30"},{"lineNumber":270,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":271,"author":{"gitId":"NicholasTanYY"},"content":"    public static int getMaxTasks(LocalDate startOfWeek, TaskManager taskManager) {","lastModifiedDate":"2024-03-19"},{"lineNumber":272,"author":{"gitId":"NicholasTanYY"},"content":"        int maxTasks \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":273,"author":{"gitId":"NicholasTanYY"},"content":"        for (int i \u003d 0; i \u003c numberOfDaysInWeek; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":274,"author":{"gitId":"NicholasTanYY"},"content":"            LocalDate currentDate \u003d startOfWeek.plusDays(i);","lastModifiedDate":"2024-03-17"},{"lineNumber":275,"author":{"gitId":"NicholasTanYY"},"content":"            int tasksSize \u003d taskManager.getTasksForDate(currentDate).size();","lastModifiedDate":"2024-03-17"},{"lineNumber":276,"author":{"gitId":"NicholasTanYY"},"content":"            if (tasksSize \u003e maxTasks) {","lastModifiedDate":"2024-03-17"},{"lineNumber":277,"author":{"gitId":"NicholasTanYY"},"content":"                maxTasks \u003d tasksSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":278,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":279,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":280,"author":{"gitId":"NicholasTanYY"},"content":"        return maxTasks;","lastModifiedDate":"2024-03-17"},{"lineNumber":281,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":282,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":283,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":284,"author":{"gitId":"NicholasTanYY"},"content":"     * Prints the separator for the week view.","lastModifiedDate":"2024-03-30"},{"lineNumber":285,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":286,"author":{"gitId":"Mahesh1772"},"content":"    public static void printSeparator() {","lastModifiedDate":"2024-03-17"},{"lineNumber":287,"author":{"gitId":"NicholasTanYY"},"content":"        for (int i \u003d 0; i \u003c numberOfDaysInWeek; i++) {","lastModifiedDate":"2024-03-30"},{"lineNumber":288,"author":{"gitId":"Mahesh1772"},"content":"            System.out.print(SINGLE_HORIZONTAL_DIVIDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":289,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":290,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(END_HORIZONTAL_DIVIDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":291,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":292,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":293,"author":{"gitId":"NicholasTanYY"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":294,"author":{"gitId":"NicholasTanYY"},"content":"     * Prints the help message for the user.","lastModifiedDate":"2024-03-30"},{"lineNumber":295,"author":{"gitId":"NicholasTanYY"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":296,"author":{"gitId":"Mahesh1772"},"content":"    public static void printHelp() {","lastModifiedDate":"2024-03-25"},{"lineNumber":297,"author":{"gitId":"Mahesh1772"},"content":"        String horizontalLine \u003d \"+-------------------------------------------------------------------------------+\";","lastModifiedDate":"2024-03-25"},{"lineNumber":298,"author":{"gitId":"Mahesh1772"},"content":"        String emptyLine \u003d \"|                                                                               |\";","lastModifiedDate":"2024-03-25"},{"lineNumber":299,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":300,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"|                               Available Commands                              |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":301,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":302,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(emptyLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":303,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027next\u0027: Move to the next week or month view.                                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":304,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027prev\u0027: Move to the previous week or month view.                            |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":305,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027update, \u003cday\u003e, \u003ctaskIndex\u003e, \u003cnewDescription\u003e\u0027: Update a task description.  |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":306,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027add, \u003cday\u003e, \u003ctaskType\u003e, \u003ctaskDescription\u003e\u0027: Add a new task.                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":307,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027delete, \u003cday\u003e, \u003ctaskIndex\u003e\u0027: Delete a task.                                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":308,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(\"| - \u0027mark, \u003cday\u003e, \u003ctaskIndex\u003e\u0027: Mark a task as complete or not complete.        |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":309,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(\"| - \u0027priority, \u003cday\u003e, \u003ctaskIndex\u003e, \u003cpriority\u003e\u0027: Set priority level for a task.  |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":310,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027month\u0027: Switch to month view.                                              |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":311,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027week\u0027: Switch to week view.                                                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":312,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027quit\u0027: Exit the calendar application.                                      |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":313,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(emptyLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":314,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":315,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":316,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":317,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":318,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":319,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"NicholasTanYY":263,"clarencepohh":5,"Mahesh1772":50,"Aak242":1}},{"path":"src/test/java/commandparser/StringParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package commandparser;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import data.exceptions.TaskManagerException;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"class StringParserTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"    void parseDate_validDateFormatGiven_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"        String validDateString \u003d \"15/03/2023\";","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate expectedDate \u003d LocalDate.of(2023, 3, 15);","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"            LocalDate parsedDate \u003d StringParser.parseDate(validDateString);","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"            assertEquals(expectedDate, parsedDate);","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"        });","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"    void parseDate_invalidDateFormatGiven_exceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"        String invalidDateString \u003d \"30-02-2023\";","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(TaskManagerException.class, ()","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"                -\u003e StringParser.parseDate(invalidDateString));","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"    void parseDate_emptyStringGiven_exceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"        String emptyDateString \u003d \"\";","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(TaskManagerException.class, () -\u003e StringParser.parseDate(emptyDateString));","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"    void parseDate_invalidMonthGiven_exceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"        String invalidDateString \u003d \"15/13/2023\";","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(TaskManagerException.class, () -\u003e StringParser.parseDate(invalidDateString));","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"kyhjonathan"},"content":"    void parseDate_invalidDayGiven_exceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"kyhjonathan"},"content":"        String invalidDateString \u003d \"32/12/2023\";","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(TaskManagerException.class, () -\u003e StringParser.parseDate(invalidDateString));","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"kyhjonathan"},"content":"    void parseDate_leapYearGiven_noExceptionThrown() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"kyhjonathan"},"content":"        String leapYearDateString \u003d \"29/02/2024\";","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate expectedDate \u003d LocalDate.of(2024, 2, 29);","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate parsedDate \u003d StringParser.parseDate(leapYearDateString);","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"kyhjonathan"},"content":"        assertEquals(expectedDate, parsedDate);","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"kyhjonathan"},"content":"    void arseTaskIndex_validIntegerGiven_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"        String validIndexString \u003d \"5\";","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"        int expectedIndex \u003d 5;","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"            int parsedIndex \u003d StringParser.parseTaskIndex(validIndexString);","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"            assertEquals(expectedIndex, parsedIndex);","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"        });","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"kyhjonathan"},"content":"    void parseTaskIndex_invalidIntegerGiven_exceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"        String invalidIndexString \u003d \"five\";","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"        assertThrows(TaskManagerException.class, () -\u003e StringParser.parseTaskIndex(invalidIndexString));","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"kyhjonathan"},"content":"    void arseTaskDescription_validDescriptionGiven_correctDescriptionReturned() {","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"kyhjonathan"},"content":"        String description \u003d \"Valid task description\";","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"kyhjonathan"},"content":"        String expectedDescription \u003d \"Valid task description\";","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(expectedDescription, StringParser.parseTaskDescription(description));","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"kyhjonathan"},"content":"    void parsePriorityLevel_validHighPriorityGiven_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"        String priority \u003d \"H\";","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"Mahesh1772"},"content":"        String expectedPriority \u003d \"H\";","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"            String parsedPriority \u003d StringParser.parsePriorityLevel(priority);","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"            assertEquals(expectedPriority, parsedPriority);","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"        });","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"kyhjonathan"},"content":"    void parsePriorityLevel_validPriorityGiven_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"        String priority \u003d \"m\";","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"        String expectedPriority \u003d \"M\";","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"            String parsedPriority \u003d StringParser.parsePriorityLevel(priority);","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"            assertEquals(expectedPriority, parsedPriority);","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"        });","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"kyhjonathan"},"content":"    void parsePriorityLevel_validLowPriorityGiven_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"        String priority \u003d \"L\";","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"        String expectedPriority \u003d \"L\";","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"            String parsedPriority \u003d StringParser.parsePriorityLevel(priority);","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"            assertEquals(expectedPriority, parsedPriority);","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"Mahesh1772"},"content":"        });","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"kyhjonathan"},"content":"    void parsePriorityLevel_invalidPriorityGiven_exceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":115,"author":{"gitId":"Mahesh1772"},"content":"        String invalidPriority \u003d \"X\";","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"Mahesh1772"},"content":"        assertThrows(TaskManagerException.class, () -\u003e StringParser.parsePriorityLevel(invalidPriority));","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"kyhjonathan"},"content":"    void validateAddCommand_validFormatGiven_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":121,"author":{"gitId":"Mahesh1772"},"content":"        // Ensure the day is within the range of the current week starting on Sunday.","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"Mahesh1772"},"content":"        String[] validParts \u003d {\"add\", \"12\", \"taskType\", \"taskDescription\"}; // Adjusted to Sunday","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfWeek \u003d LocalDate.of(2024, 4, 7); // Sunday of the week","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"Mahesh1772"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"Mahesh1772"},"content":"        assertDoesNotThrow(() -\u003e StringParser.validateAddCommand(validParts));","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":128,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":129,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"kyhjonathan"},"content":"    void validateAddCommand_invalidFormatGiven_exceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"Mahesh1772"},"content":"        String[] invalidParts \u003d {\"add\", \"15/03/2023\", \"taskDescription\"};","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"Mahesh1772"},"content":"        assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"Mahesh1772"},"content":"                StringParser.validateAddCommand(invalidParts));","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"kyhjonathan"},"content":"    void checkStorageTextDateFormat_validStorageTextDateGiven_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":138,"author":{"gitId":"Mahesh1772"},"content":"        String[] validParts \u003d {\"update\", \"15/03/2023\", \"1\", \"newDescription\"};","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"Mahesh1772"},"content":"        assertDoesNotThrow(() -\u003e StringParser.validateUpdateCommand(validParts));","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":141,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":142,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":143,"author":{"gitId":"kyhjonathan"},"content":"    void validateUpdateCommand_invalidFormatGiven_exceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"Mahesh1772"},"content":"        String[] invalidParts \u003d {\"update\", \"15/03/2023\", \"newDescription\"};","lastModifiedDate":"2024-04-13"},{"lineNumber":145,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":146,"author":{"gitId":"kyhjonathan"},"content":"                StringParser.validateUpdateCommand(invalidParts));","lastModifiedDate":"2024-04-15"},{"lineNumber":147,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":148,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":149,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"kyhjonathan"},"content":"    void validateDeleteCommand_validFormatGiven_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"Mahesh1772"},"content":"        String[] validParts \u003d {\"delete\", \"15/03/2023\", \"1\"};","lastModifiedDate":"2024-04-13"},{"lineNumber":152,"author":{"gitId":"Mahesh1772"},"content":"        assertDoesNotThrow(() -\u003e StringParser.validateDeleteCommand(validParts));","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":154,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":155,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":156,"author":{"gitId":"kyhjonathan"},"content":"    void validateDeleteCommand_invalidFormatGiven_exceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":157,"author":{"gitId":"Mahesh1772"},"content":"        String[] invalidParts \u003d {\"delete\", \"15/03/2023\"};","lastModifiedDate":"2024-04-13"},{"lineNumber":158,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"kyhjonathan"},"content":"                StringParser.validateDeleteCommand(invalidParts));","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":161,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":163,"author":{"gitId":"kyhjonathan"},"content":"    void validateMarkCommand_validFormatGiven_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":164,"author":{"gitId":"Mahesh1772"},"content":"        String[] validParts \u003d {\"mark\", \"15/03/2023\", \"1\"};","lastModifiedDate":"2024-04-13"},{"lineNumber":165,"author":{"gitId":"Mahesh1772"},"content":"        assertDoesNotThrow(() -\u003e StringParser.validateMarkCommand(validParts));","lastModifiedDate":"2024-04-13"},{"lineNumber":166,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":167,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":169,"author":{"gitId":"kyhjonathan"},"content":"    void validateMarkCommand_invalidFormatGiven_exceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"Mahesh1772"},"content":"        String[] invalidParts \u003d {\"mark\", \"15/03/2023\"};","lastModifiedDate":"2024-04-13"},{"lineNumber":171,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":172,"author":{"gitId":"kyhjonathan"},"content":"                StringParser.validateMarkCommand(invalidParts));","lastModifiedDate":"2024-04-15"},{"lineNumber":173,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":174,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":175,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":176,"author":{"gitId":"kyhjonathan"},"content":"    void validatePriorityCommand_validFormatGiven_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"Mahesh1772"},"content":"        String[] validParts \u003d {\"priority\", \"15/03/2023\", \"1\", \"H\"};","lastModifiedDate":"2024-04-13"},{"lineNumber":178,"author":{"gitId":"Mahesh1772"},"content":"        assertDoesNotThrow(() -\u003e StringParser.validatePriorityCommand(validParts));","lastModifiedDate":"2024-04-13"},{"lineNumber":179,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":180,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":181,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":182,"author":{"gitId":"kyhjonathan"},"content":"    void validatePriorityCommand_invalidFormatGiven_exceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"Mahesh1772"},"content":"        String[] invalidParts \u003d {\"priority\", \"15/03/2023\", \"1\"};","lastModifiedDate":"2024-04-13"},{"lineNumber":184,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":185,"author":{"gitId":"kyhjonathan"},"content":"                StringParser.validatePriorityCommand(invalidParts));","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":187,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"Mahesh1772":127,"NicholasTanYY":2,"kyhjonathan":58}},{"path":"src/test/java/data/TaskManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Aak242"},"content":"package data;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import data.exceptions.TaskManagerException;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Aak242"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"Aak242"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"Aak242"},"content":"import time.WeekView;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"Aak242"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Aak242"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"Aak242"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"Aak242"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Aak242"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Aak242"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Aak242"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Aak242"},"content":"import static data.TaskManager.addTask;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.deleteAllTasksOnDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Aak242"},"content":"import static data.TaskManager.updateTask;","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"Aak242"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"Aak242"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Aak242"},"content":"class TaskManagerTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Aak242"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Aak242"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Aak242"},"content":"    void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Aak242"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"    @AfterEach","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"    void resetTaskManager() {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"        deleteAllTasksOnDate(taskManager, date);","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"    void addTodo_validInput_addsTask() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Todo\";","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"        Task testTask \u003d new Todo(taskDescription);","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"Aak242"},"content":"        String[] dummyTestTimes \u003d new String[]{null};","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Aak242"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates, dummyTestTimes);","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"        Task addedTask \u003d taskManager.getTasksForDate(date).get(0);","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTask.getName(), addedTask.getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"kyhjonathan"},"content":"    void addTask_validTodoTask_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription \u003d \"Test Todo\";","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"kyhjonathan"},"content":"        TaskType taskType \u003d TaskType.TODO;","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"kyhjonathan"},"content":"        String[] dates \u003d {null};","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"kyhjonathan"},"content":"        String[] times \u003d {null};","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e TaskManager.addTask(date, taskDescription, taskType, dates, times));","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"kyhjonathan"},"content":"    void addTask_validEventTask_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription \u003d \"Test Event\";","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"kyhjonathan"},"content":"        TaskType taskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"kyhjonathan"},"content":"        String[] dates \u003d {\"15/03/2023\", \"16/03/2023\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"kyhjonathan"},"content":"        String[] times \u003d {\"1000\", \"1200\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e TaskManager.addTask(date, taskDescription, taskType, dates, times));","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"kyhjonathan"},"content":"    void addTask_validDeadlineTask_noExceptionThrown() {","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription \u003d \"Test Deadline\";","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"kyhjonathan"},"content":"        TaskType taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"kyhjonathan"},"content":"        String[] dates \u003d {\"15/03/2023\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"kyhjonathan"},"content":"        String[] times \u003d {\"1200\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e TaskManager.addTask(date, taskDescription, taskType, dates, times));","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"kyhjonathan"},"content":"    void addTask_invalidTaskType_throwsException() {","lastModifiedDate":"2024-04-15"},{"lineNumber":95,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":96,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription \u003d \"Test Invalid\";","lastModifiedDate":"2024-04-15"},{"lineNumber":97,"author":{"gitId":"kyhjonathan"},"content":"        TaskType taskType \u003d TaskType.INVALID;","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"kyhjonathan"},"content":"        String[] dates \u003d {null};","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"kyhjonathan"},"content":"        String[] times \u003d {null};","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":101,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"kyhjonathan"},"content":"                TaskManager.addTask(date, taskDescription, taskType, dates, times));","lastModifiedDate":"2024-04-15"},{"lineNumber":103,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":104,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":105,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"clarencepohh"},"content":"    void addTodo_invalidInput_throwsException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Todo\";","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"clarencepohh"},"content":"        TaskType testInvalidTaskType \u003d TaskType.INVALID;","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{null};","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"clarencepohh"},"content":"                addTask(date, taskDescription, testInvalidTaskType, dummyTestDates, dummyTestTimes));","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(\"Invalid task type given. T for Todo, E for event, D for deadline.\", thrown.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"clarencepohh"},"content":"    void updateTodo_validInput_updatesTask() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"clarencepohh"},"content":"        String initialTaskDescription \u003d \"Initial todo\";","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"clarencepohh"},"content":"        String updatedTaskDescription \u003d \"Updated todo\";","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-03-23"},{"lineNumber":131,"author":{"gitId":"Aak242"},"content":"        String[] dummyTestTimes \u003d new String[]{null};","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"Aak242"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"Aak242"},"content":"        boolean inMonthView \u003d false;","lastModifiedDate":"2024-04-10"},{"lineNumber":136,"author":{"gitId":"Aak242"},"content":"        WeekView weekView \u003d new WeekView(LocalDate.now(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"Aak242"},"content":"        addTask(date, initialTaskDescription, testTaskType, dummyTestDates, dummyTestTimes);","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"Aak242"},"content":"        updateTask(date, 0, updatedTaskDescription, scanner,inMonthView, weekView);","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(updatedTaskDescription, taskManager.getTasksForDate(date).get(0).getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":145,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"kyhjonathan"},"content":"    void updateTask_validTodoTask_noExceptionThrown() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":149,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":150,"author":{"gitId":"kyhjonathan"},"content":"        String initialTaskDescription \u003d \"Initial Todo\";","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"kyhjonathan"},"content":"        String updatedTaskDescription \u003d \"Updated Todo\";","lastModifiedDate":"2024-04-15"},{"lineNumber":152,"author":{"gitId":"kyhjonathan"},"content":"        TaskType taskType \u003d TaskType.TODO;","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"kyhjonathan"},"content":"        String[] dates \u003d {null};","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"kyhjonathan"},"content":"        String[] times \u003d {null};","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"kyhjonathan"},"content":"        Scanner scanner \u003d new Scanner(updatedTaskDescription);","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":157,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, initialTaskDescription, taskType, dates, times);","lastModifiedDate":"2024-04-15"},{"lineNumber":158,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"kyhjonathan"},"content":"                TaskManager.updateTask(date, 0, updatedTaskDescription, scanner,","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"kyhjonathan"},"content":"                        false, new WeekView(date, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))));","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"clarencepohh"},"content":"    void getTasksForDate_validDate_returnsTasks() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":165,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test todo task\";","lastModifiedDate":"2024-03-23"},{"lineNumber":168,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":169,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-03-23"},{"lineNumber":170,"author":{"gitId":"Aak242"},"content":"        String[] dummyTestTimes \u003d new String[]{null};","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"Aak242"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates,dummyTestTimes);","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e tasksForDate \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":176,"author":{"gitId":"clarencepohh"},"content":"        Task createdTask \u003d tasksForDate.get(0);","lastModifiedDate":"2024-03-22"},{"lineNumber":177,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(createdTask, tasksForDate.get(0));","lastModifiedDate":"2024-03-22"},{"lineNumber":180,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"kyhjonathan"},"content":"    void getTasksForDate_multipleTasksOnDate_returnsAllTasks() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":185,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription1 \u003d \"Test Task 1\";","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription2 \u003d \"Test Task 2\";","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"kyhjonathan"},"content":"        TaskType taskType \u003d TaskType.TODO;","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"kyhjonathan"},"content":"        String[] dates \u003d {null};","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"kyhjonathan"},"content":"        String[] times \u003d {null};","lastModifiedDate":"2024-04-15"},{"lineNumber":191,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":192,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, taskDescription1, taskType, dates, times);","lastModifiedDate":"2024-04-15"},{"lineNumber":193,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, taskDescription2, taskType, dates, times);","lastModifiedDate":"2024-04-15"},{"lineNumber":194,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":195,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":196,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cTask\u003e tasksForDate \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-04-15"},{"lineNumber":197,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":198,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":199,"author":{"gitId":"kyhjonathan"},"content":"        assertEquals(2, tasksForDate.size());","lastModifiedDate":"2024-04-15"},{"lineNumber":200,"author":{"gitId":"kyhjonathan"},"content":"        assertEquals(taskDescription1, tasksForDate.get(0).getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":201,"author":{"gitId":"kyhjonathan"},"content":"        assertEquals(taskDescription2, tasksForDate.get(1).getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":202,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":203,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":205,"author":{"gitId":"kyhjonathan"},"content":"    void getTasksForDate_noTasksOnDate_returnsEmptyList() {","lastModifiedDate":"2024-04-15"},{"lineNumber":206,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":208,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":209,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":210,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cTask\u003e tasksForDate \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-04-15"},{"lineNumber":211,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":212,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":213,"author":{"gitId":"kyhjonathan"},"content":"        assertTrue(tasksForDate.isEmpty());","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"clarencepohh"},"content":"    void addTodoFromFile_validInput_addsTasks() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":218,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"clarencepohh"},"content":"        Map\u003cLocalDate, List\u003cTask\u003e\u003e tasksFromFile \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-22"},{"lineNumber":221,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test todo task\";","lastModifiedDate":"2024-03-23"},{"lineNumber":222,"author":{"gitId":"clarencepohh"},"content":"        Task testTodoTask \u003d new Todo(taskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":223,"author":{"gitId":"clarencepohh"},"content":"        tasksFromFile.put(date, List.of(testTodoTask));","lastModifiedDate":"2024-03-23"},{"lineNumber":224,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"Aak242"},"content":"        taskManager.addTasksFromFile(tasksFromFile);","lastModifiedDate":"2024-03-19"},{"lineNumber":227,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":228,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":229,"author":{"gitId":"kyhjonathan"},"content":"        assertEquals(testTodoTask.getName(),","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"kyhjonathan"},"content":"                taskManager.getTasksForDate(date).get(0).getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":232,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"clarencepohh"},"content":"    void addDeadline_validInput_addsTask() throws TaskManagerException {","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Deadline\";","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"Aak242"},"content":"        String byDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":239,"author":{"gitId":"clarencepohh"},"content":"        String byTime \u003d \"1800\";","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-02"},{"lineNumber":242,"author":{"gitId":"clarencepohh"},"content":"        Task testTask \u003d new Deadline(taskDescription, byDate, byTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{byDate};","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{byTime};","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates,dummyTestTimes);","lastModifiedDate":"2024-04-02"},{"lineNumber":248,"author":{"gitId":"clarencepohh"},"content":"        Task addedTask \u003d taskManager.getTasksForDate(date).get(0);","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"clarencepohh"},"content":"        String addedTaskByDate \u003d addedTask.getByDate();","lastModifiedDate":"2024-04-02"},{"lineNumber":250,"author":{"gitId":"clarencepohh"},"content":"        String addedTaskByTime \u003d addedTask.getByTime();","lastModifiedDate":"2024-04-02"},{"lineNumber":251,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTask.getName(), addedTask.getName());","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTask.getByDate(), addedTaskByDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":255,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTask.getByTime(), addedTaskByTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":257,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":258,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":259,"author":{"gitId":"kyhjonathan"},"content":"    void addDeadline_nullInput_throwsException() {","lastModifiedDate":"2024-04-15"},{"lineNumber":260,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":261,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2024-04-15"},{"lineNumber":262,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription \u003d null;","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"kyhjonathan"},"content":"        String byDate \u003d null;","lastModifiedDate":"2024-04-15"},{"lineNumber":264,"author":{"gitId":"kyhjonathan"},"content":"        String byTime \u003d null;","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":266,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":267,"author":{"gitId":"kyhjonathan"},"content":"        TaskType testTaskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"kyhjonathan"},"content":"        String[] dummyTestDates \u003d new String[]{byDate};","lastModifiedDate":"2024-04-15"},{"lineNumber":269,"author":{"gitId":"kyhjonathan"},"content":"        String[] dummyTestTimes \u003d new String[]{byTime};","lastModifiedDate":"2024-04-15"},{"lineNumber":270,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"kyhjonathan"},"content":"                addTask(date, taskDescription, testTaskType, dummyTestDates,dummyTestTimes));","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":276,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":277,"author":{"gitId":"kyhjonathan"},"content":"    void addDeadline_emptyInput_throwsException() {","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":279,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":280,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription \u003d \"\";","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"kyhjonathan"},"content":"        String byDate \u003d \"\";","lastModifiedDate":"2024-04-15"},{"lineNumber":282,"author":{"gitId":"kyhjonathan"},"content":"        String byTime \u003d \"\";","lastModifiedDate":"2024-04-15"},{"lineNumber":283,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":284,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"kyhjonathan"},"content":"        TaskType testTaskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"kyhjonathan"},"content":"        String[] dummyTestDates \u003d new String[]{byDate};","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"kyhjonathan"},"content":"        String[] dummyTestTimes \u003d new String[]{byTime};","lastModifiedDate":"2024-04-15"},{"lineNumber":288,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":289,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":290,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":291,"author":{"gitId":"kyhjonathan"},"content":"                addTask(date, taskDescription, testTaskType, dummyTestDates,dummyTestTimes));","lastModifiedDate":"2024-04-15"},{"lineNumber":292,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":293,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":294,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"clarencepohh"},"content":"    void addDeadline_invalidInput_throwsException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":296,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-02"},{"lineNumber":297,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Deadline\";","lastModifiedDate":"2024-04-02"},{"lineNumber":299,"author":{"gitId":"Aak242"},"content":"        String byDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":300,"author":{"gitId":"clarencepohh"},"content":"        String byTime \u003d \"1800\";","lastModifiedDate":"2024-04-02"},{"lineNumber":301,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":302,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-02"},{"lineNumber":303,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.INVALID;","lastModifiedDate":"2024-04-02"},{"lineNumber":304,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{byDate};","lastModifiedDate":"2024-04-02"},{"lineNumber":305,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{byTime};","lastModifiedDate":"2024-04-02"},{"lineNumber":306,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":307,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":309,"author":{"gitId":"clarencepohh"},"content":"                addTask(date, taskDescription, testTaskType, dummyTestDates,dummyTestTimes));","lastModifiedDate":"2024-04-02"},{"lineNumber":310,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(\"Invalid task type given. T for Todo, E for event, D for deadline.\", thrown.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":311,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":312,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":313,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":314,"author":{"gitId":"clarencepohh"},"content":"    void updateDeadlineDescriptionOnly_validInput_updatesTask() throws TaskManagerException {","lastModifiedDate":"2024-04-02"},{"lineNumber":315,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-02"},{"lineNumber":316,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":317,"author":{"gitId":"clarencepohh"},"content":"        String initialTaskDescription \u003d \"Initial Deadline\";","lastModifiedDate":"2024-04-02"},{"lineNumber":318,"author":{"gitId":"clarencepohh"},"content":"        String updatedTaskDescription \u003d \"Updated Deadline\";","lastModifiedDate":"2024-04-02"},{"lineNumber":319,"author":{"gitId":"Aak242"},"content":"        String byDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":320,"author":{"gitId":"clarencepohh"},"content":"        String byTime \u003d \"1800\";","lastModifiedDate":"2024-04-02"},{"lineNumber":321,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-04-02"},{"lineNumber":322,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{byDate};","lastModifiedDate":"2024-04-02"},{"lineNumber":323,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{byTime};","lastModifiedDate":"2024-04-02"},{"lineNumber":324,"author":{"gitId":"clarencepohh"},"content":"        String simulatedUserInput \u003d \"no\";","lastModifiedDate":"2024-04-02"},{"lineNumber":325,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":326,"author":{"gitId":"clarencepohh"},"content":"        Scanner scanner \u003d new Scanner(simulatedUserInput);","lastModifiedDate":"2024-04-02"},{"lineNumber":327,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":328,"author":{"gitId":"Aak242"},"content":"        boolean inMonthView \u003d false;","lastModifiedDate":"2024-04-10"},{"lineNumber":329,"author":{"gitId":"Aak242"},"content":"        WeekView weekView \u003d new WeekView(LocalDate.now(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-10"},{"lineNumber":330,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":331,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, initialTaskDescription, testTaskType, dummyTestDates, dummyTestTimes);","lastModifiedDate":"2024-04-02"},{"lineNumber":332,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":333,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-02"},{"lineNumber":334,"author":{"gitId":"Aak242"},"content":"        updateTask(date, 0, updatedTaskDescription, scanner,inMonthView, weekView);","lastModifiedDate":"2024-04-10"},{"lineNumber":335,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":336,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-02"},{"lineNumber":337,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(updatedTaskDescription, taskManager.getTasksForDate(date).get(0).getName());","lastModifiedDate":"2024-04-02"},{"lineNumber":338,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":339,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":340,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":341,"author":{"gitId":"clarencepohh"},"content":"    void updateDeadlineDescriptionAndByDateTime_validInput_updatesTask() throws TaskManagerException {","lastModifiedDate":"2024-04-02"},{"lineNumber":342,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-02"},{"lineNumber":343,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":344,"author":{"gitId":"clarencepohh"},"content":"        String initialTaskDescription \u003d \"Initial Deadline\";","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"clarencepohh"},"content":"        String updatedTaskDescription \u003d \"Updated Deadline\";","lastModifiedDate":"2024-04-02"},{"lineNumber":346,"author":{"gitId":"Aak242"},"content":"        String byDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":347,"author":{"gitId":"Aak242"},"content":"        String byTime \u003d \"1800\";","lastModifiedDate":"2024-04-12"},{"lineNumber":348,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":349,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-04-02"},{"lineNumber":350,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{byDate};","lastModifiedDate":"2024-04-02"},{"lineNumber":351,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{byTime};","lastModifiedDate":"2024-04-02"},{"lineNumber":352,"author":{"gitId":"Aak242"},"content":"        String simulatedUserInput \u003d \"yes\\n\" +","lastModifiedDate":"2024-04-10"},{"lineNumber":353,"author":{"gitId":"Aak242"},"content":"                LocalDate.now().plusDays(2).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \" 1500\\n\";","lastModifiedDate":"2024-04-15"},{"lineNumber":354,"author":{"gitId":"Aak242"},"content":"        String updatedByDate \u003d LocalDate.now().plusDays(2).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":355,"author":{"gitId":"Aak242"},"content":"        String updatedByTime \u003d \"1500\";","lastModifiedDate":"2024-04-12"},{"lineNumber":356,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":357,"author":{"gitId":"clarencepohh"},"content":"        Scanner scanner \u003d new Scanner(simulatedUserInput);","lastModifiedDate":"2024-04-02"},{"lineNumber":358,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":359,"author":{"gitId":"Aak242"},"content":"        boolean inMonthView \u003d false;","lastModifiedDate":"2024-04-10"},{"lineNumber":360,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":361,"author":{"gitId":"Aak242"},"content":"        WeekView weekView \u003d new WeekView(LocalDate.now(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-10"},{"lineNumber":362,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":363,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, initialTaskDescription, testTaskType, dummyTestDates, dummyTestTimes);","lastModifiedDate":"2024-04-02"},{"lineNumber":364,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":365,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-02"},{"lineNumber":366,"author":{"gitId":"Aak242"},"content":"        updateTask(date, 0, updatedTaskDescription, scanner, inMonthView, weekView);","lastModifiedDate":"2024-04-10"},{"lineNumber":367,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":368,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-02"},{"lineNumber":369,"author":{"gitId":"Aak242"},"content":"        assertEquals(updatedTaskDescription, taskManager.getTasksForDate(LocalDate.parse(updatedByDate,","lastModifiedDate":"2024-04-15"},{"lineNumber":370,"author":{"gitId":"Aak242"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))).get(0).getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":371,"author":{"gitId":"Aak242"},"content":"        assertEquals(updatedByTime, taskManager.getTasksForDate(LocalDate.parse(updatedByDate,","lastModifiedDate":"2024-04-15"},{"lineNumber":372,"author":{"gitId":"Aak242"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))).get(0).getByTime());","lastModifiedDate":"2024-04-15"},{"lineNumber":373,"author":{"gitId":"Aak242"},"content":"        assertEquals(updatedByDate, taskManager.getTasksForDate(LocalDate.parse(updatedByDate,","lastModifiedDate":"2024-04-15"},{"lineNumber":374,"author":{"gitId":"Aak242"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))).get(0).getByDate());","lastModifiedDate":"2024-04-15"},{"lineNumber":375,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":376,"author":{"gitId":"NicholasTanYY"},"content":"        deleteAllTasksOnDate(taskManager, LocalDate.now().plusDays(2));","lastModifiedDate":"2024-04-15"},{"lineNumber":377,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":378,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":379,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":380,"author":{"gitId":"clarencepohh"},"content":"    void addEvent_validInput_addsTask() throws TaskManagerException {","lastModifiedDate":"2024-04-02"},{"lineNumber":381,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-02"},{"lineNumber":382,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":383,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Event\";","lastModifiedDate":"2024-04-02"},{"lineNumber":384,"author":{"gitId":"Aak242"},"content":"        String startDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":385,"author":{"gitId":"Aak242"},"content":"        String endDate \u003d LocalDate.now().plusDays(2).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":386,"author":{"gitId":"clarencepohh"},"content":"        String startTime \u003d \"1800\";","lastModifiedDate":"2024-04-02"},{"lineNumber":387,"author":{"gitId":"clarencepohh"},"content":"        String endTime \u003d \"2000\";","lastModifiedDate":"2024-04-02"},{"lineNumber":388,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":389,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-02"},{"lineNumber":390,"author":{"gitId":"clarencepohh"},"content":"        Task testTask \u003d new Event(taskDescription, startDate, endDate, startTime, endTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":391,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-04-02"},{"lineNumber":392,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{startDate, endDate};","lastModifiedDate":"2024-04-02"},{"lineNumber":393,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{startTime, endTime};","lastModifiedDate":"2024-04-02"},{"lineNumber":394,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":395,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates,dummyTestTimes);","lastModifiedDate":"2024-04-02"},{"lineNumber":396,"author":{"gitId":"clarencepohh"},"content":"        Task addedTask \u003d taskManager.getTasksForDate(date).get(0);","lastModifiedDate":"2024-04-02"},{"lineNumber":397,"author":{"gitId":"clarencepohh"},"content":"        String addedTaskStartDate \u003d addedTask.getStartDate();","lastModifiedDate":"2024-04-02"},{"lineNumber":398,"author":{"gitId":"clarencepohh"},"content":"        String addedTaskEndDate \u003d addedTask.getEndDate();","lastModifiedDate":"2024-04-02"},{"lineNumber":399,"author":{"gitId":"clarencepohh"},"content":"        String addedTaskStartTime \u003d addedTask.getStartTime();","lastModifiedDate":"2024-04-02"},{"lineNumber":400,"author":{"gitId":"clarencepohh"},"content":"        String addedTaskEndTime \u003d addedTask.getEndTime();","lastModifiedDate":"2024-04-02"},{"lineNumber":401,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":402,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-02"},{"lineNumber":403,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTask.getName(), addedTask.getName());","lastModifiedDate":"2024-04-02"},{"lineNumber":404,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTask.getStartDate(), addedTaskStartDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":405,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTask.getEndDate(), addedTaskEndDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":406,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTask.getStartTime(), addedTaskStartTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":407,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTask.getEndTime(), addedTaskEndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":408,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":409,"author":{"gitId":"kyhjonathan"},"content":"        deleteAllTasksOnDate(taskManager, LocalDate.now().plusDays(2));","lastModifiedDate":"2024-04-15"},{"lineNumber":410,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":411,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":412,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":413,"author":{"gitId":"clarencepohh"},"content":"    void addEvent_invalidInput_throwsException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":414,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-02"},{"lineNumber":415,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-02"},{"lineNumber":416,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Event\";","lastModifiedDate":"2024-04-02"},{"lineNumber":417,"author":{"gitId":"clarencepohh"},"content":"        String startDate \u003d \"05/04/2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":418,"author":{"gitId":"clarencepohh"},"content":"        String endDate \u003d \"06/04/2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":419,"author":{"gitId":"clarencepohh"},"content":"        String startTime \u003d \"1800\";","lastModifiedDate":"2024-04-02"},{"lineNumber":420,"author":{"gitId":"clarencepohh"},"content":"        String endTime \u003d \"2000\";","lastModifiedDate":"2024-04-02"},{"lineNumber":421,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":422,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-02"},{"lineNumber":423,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.INVALID;","lastModifiedDate":"2024-04-02"},{"lineNumber":424,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{startDate, endDate};","lastModifiedDate":"2024-04-02"},{"lineNumber":425,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{startTime, endTime};","lastModifiedDate":"2024-04-02"},{"lineNumber":426,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":427,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-02"},{"lineNumber":428,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":429,"author":{"gitId":"clarencepohh"},"content":"                addTask(date, taskDescription, testTaskType, dummyTestDates,dummyTestTimes));","lastModifiedDate":"2024-04-02"},{"lineNumber":430,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(\"Invalid task type given. T for Todo, E for event, D for deadline.\", thrown.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":431,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":432,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":433,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":434,"author":{"gitId":"clarencepohh"},"content":"    void updateEventDescriptionOnly_validInput_updatesTask() throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":435,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":436,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":437,"author":{"gitId":"clarencepohh"},"content":"        String initialTaskDescription \u003d \"Initial Event\";","lastModifiedDate":"2024-04-14"},{"lineNumber":438,"author":{"gitId":"clarencepohh"},"content":"        String updatedTaskDescription \u003d \"Updated Event\";","lastModifiedDate":"2024-04-14"},{"lineNumber":439,"author":{"gitId":"clarencepohh"},"content":"        String startDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":440,"author":{"gitId":"clarencepohh"},"content":"        String endDate \u003d LocalDate.now().plusDays(2).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":441,"author":{"gitId":"clarencepohh"},"content":"        String startTime \u003d \"1800\";","lastModifiedDate":"2024-04-14"},{"lineNumber":442,"author":{"gitId":"clarencepohh"},"content":"        String endTime \u003d \"2000\";","lastModifiedDate":"2024-04-14"},{"lineNumber":443,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":444,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-04-14"},{"lineNumber":445,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{startDate, endDate};","lastModifiedDate":"2024-04-14"},{"lineNumber":446,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{startTime, endTime};","lastModifiedDate":"2024-04-14"},{"lineNumber":447,"author":{"gitId":"clarencepohh"},"content":"        String simulatedUserInput \u003d \"no\";","lastModifiedDate":"2024-04-14"},{"lineNumber":448,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":449,"author":{"gitId":"clarencepohh"},"content":"        Scanner scanner \u003d new Scanner(simulatedUserInput);","lastModifiedDate":"2024-04-14"},{"lineNumber":450,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":451,"author":{"gitId":"clarencepohh"},"content":"        boolean inMonthView \u003d false;","lastModifiedDate":"2024-04-14"},{"lineNumber":452,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":453,"author":{"gitId":"clarencepohh"},"content":"        WeekView weekView \u003d new WeekView(LocalDate.now(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":454,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":455,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, initialTaskDescription, testTaskType, dummyTestDates, dummyTestTimes);","lastModifiedDate":"2024-04-14"},{"lineNumber":456,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":457,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-14"},{"lineNumber":458,"author":{"gitId":"clarencepohh"},"content":"        updateTask(date, 0, updatedTaskDescription, scanner, inMonthView, weekView);","lastModifiedDate":"2024-04-14"},{"lineNumber":459,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":460,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":461,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(updatedTaskDescription, taskManager.getTasksForDate(date).get(0).getName());","lastModifiedDate":"2024-04-14"},{"lineNumber":462,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":463,"author":{"gitId":"NicholasTanYY"},"content":"        deleteAllTasksOnDate(taskManager, LocalDate.now().plusDays(2));","lastModifiedDate":"2024-04-15"},{"lineNumber":464,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":465,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":466,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":467,"author":{"gitId":"NicholasTanYY"},"content":"    void updateEventDescriptionAndDateTime_validInput_updatesTask() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":468,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":469,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":470,"author":{"gitId":"clarencepohh"},"content":"        String initialTaskDescription \u003d \"Initial Event\";","lastModifiedDate":"2024-04-14"},{"lineNumber":471,"author":{"gitId":"clarencepohh"},"content":"        String updatedTaskDescription \u003d \"Updated Event\";","lastModifiedDate":"2024-04-14"},{"lineNumber":472,"author":{"gitId":"clarencepohh"},"content":"        String startDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":473,"author":{"gitId":"clarencepohh"},"content":"        String endDate \u003d LocalDate.now().plusDays(2).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":474,"author":{"gitId":"clarencepohh"},"content":"        String startTime \u003d \"1800\";","lastModifiedDate":"2024-04-14"},{"lineNumber":475,"author":{"gitId":"clarencepohh"},"content":"        String endTime \u003d \"2000\";","lastModifiedDate":"2024-04-14"},{"lineNumber":476,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":477,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-04-14"},{"lineNumber":478,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{startDate, endDate};","lastModifiedDate":"2024-04-14"},{"lineNumber":479,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{startTime, endTime};","lastModifiedDate":"2024-04-14"},{"lineNumber":480,"author":{"gitId":"clarencepohh"},"content":"        String simulatedUserInput \u003d \"yes\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":481,"author":{"gitId":"clarencepohh"},"content":"                LocalDate.now().plusDays(1).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \" \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":482,"author":{"gitId":"clarencepohh"},"content":"                LocalDate.now().plusDays(2).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) +","lastModifiedDate":"2024-04-14"},{"lineNumber":483,"author":{"gitId":"clarencepohh"},"content":"                \" 1500\" + \" 1600 \";","lastModifiedDate":"2024-04-14"},{"lineNumber":484,"author":{"gitId":"Aak242"},"content":"        String updatedStartDate \u003d LocalDate.now().plusDays(1).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")","lastModifiedDate":"2024-04-15"},{"lineNumber":485,"author":{"gitId":"Aak242"},"content":"        );","lastModifiedDate":"2024-04-15"},{"lineNumber":486,"author":{"gitId":"clarencepohh"},"content":"        String updatedStartTime \u003d \"1500\";","lastModifiedDate":"2024-04-14"},{"lineNumber":487,"author":{"gitId":"clarencepohh"},"content":"        String updatedEndDate \u003d LocalDate.now().plusDays(2).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":488,"author":{"gitId":"clarencepohh"},"content":"        String updatedEndTime \u003d \"1600\";","lastModifiedDate":"2024-04-14"},{"lineNumber":489,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":490,"author":{"gitId":"clarencepohh"},"content":"        Scanner scanner \u003d new Scanner(simulatedUserInput);","lastModifiedDate":"2024-04-14"},{"lineNumber":491,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":492,"author":{"gitId":"clarencepohh"},"content":"        boolean inMonthView \u003d false;","lastModifiedDate":"2024-04-14"},{"lineNumber":493,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":494,"author":{"gitId":"clarencepohh"},"content":"        WeekView weekView \u003d new WeekView(LocalDate.now(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":495,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":496,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, initialTaskDescription, testTaskType, dummyTestDates, dummyTestTimes);","lastModifiedDate":"2024-04-14"},{"lineNumber":497,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":498,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-14"},{"lineNumber":499,"author":{"gitId":"clarencepohh"},"content":"        updateTask(date, 0, updatedTaskDescription, scanner, inMonthView, weekView);","lastModifiedDate":"2024-04-14"},{"lineNumber":500,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":501,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":502,"author":{"gitId":"Aak242"},"content":"        assertEquals(updatedTaskDescription, taskManager.getTasksForDate(LocalDate.parse(updatedStartDate,","lastModifiedDate":"2024-04-15"},{"lineNumber":503,"author":{"gitId":"Aak242"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))).get(0).getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":504,"author":{"gitId":"Aak242"},"content":"        assertEquals(updatedStartDate, taskManager.getTasksForDate(LocalDate.parse(updatedStartDate,","lastModifiedDate":"2024-04-15"},{"lineNumber":505,"author":{"gitId":"Aak242"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))).get(0).getStartDate());","lastModifiedDate":"2024-04-15"},{"lineNumber":506,"author":{"gitId":"Aak242"},"content":"        assertEquals(updatedStartTime, taskManager.getTasksForDate(LocalDate.parse(updatedStartDate,","lastModifiedDate":"2024-04-15"},{"lineNumber":507,"author":{"gitId":"Aak242"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))).get(0).getStartTime());","lastModifiedDate":"2024-04-15"},{"lineNumber":508,"author":{"gitId":"Aak242"},"content":"        assertEquals(updatedEndDate, taskManager.getTasksForDate(LocalDate.parse(updatedStartDate,","lastModifiedDate":"2024-04-15"},{"lineNumber":509,"author":{"gitId":"Aak242"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))).get(0).getEndDate());","lastModifiedDate":"2024-04-15"},{"lineNumber":510,"author":{"gitId":"Aak242"},"content":"        assertEquals(updatedEndTime, taskManager.getTasksForDate(LocalDate.parse(updatedStartDate,","lastModifiedDate":"2024-04-15"},{"lineNumber":511,"author":{"gitId":"Aak242"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))).get(0).getEndTime());","lastModifiedDate":"2024-04-15"},{"lineNumber":512,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":513,"author":{"gitId":"NicholasTanYY"},"content":"        deleteAllTasksOnDate(taskManager, LocalDate.now().plusDays(2));","lastModifiedDate":"2024-04-15"},{"lineNumber":514,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":515,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":516,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":517,"author":{"gitId":"kyhjonathan"},"content":"    void addEvent_nullInput_throwsException() {","lastModifiedDate":"2024-04-15"},{"lineNumber":518,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":519,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2024-04-15"},{"lineNumber":520,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription \u003d null;","lastModifiedDate":"2024-04-15"},{"lineNumber":521,"author":{"gitId":"kyhjonathan"},"content":"        String startDate \u003d null;","lastModifiedDate":"2024-04-15"},{"lineNumber":522,"author":{"gitId":"kyhjonathan"},"content":"        String endDate \u003d null;","lastModifiedDate":"2024-04-15"},{"lineNumber":523,"author":{"gitId":"kyhjonathan"},"content":"        String startTime \u003d null;","lastModifiedDate":"2024-04-15"},{"lineNumber":524,"author":{"gitId":"kyhjonathan"},"content":"        String endTime \u003d null;","lastModifiedDate":"2024-04-15"},{"lineNumber":525,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":526,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":527,"author":{"gitId":"kyhjonathan"},"content":"        TaskType testTaskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-04-15"},{"lineNumber":528,"author":{"gitId":"kyhjonathan"},"content":"        String[] dummyTestDates \u003d new String[]{startDate, endDate};","lastModifiedDate":"2024-04-15"},{"lineNumber":529,"author":{"gitId":"kyhjonathan"},"content":"        String[] dummyTestTimes \u003d new String[]{startTime, endTime};","lastModifiedDate":"2024-04-15"},{"lineNumber":530,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":531,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":532,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":533,"author":{"gitId":"kyhjonathan"},"content":"                addTask(date, taskDescription, testTaskType, dummyTestDates,dummyTestTimes));","lastModifiedDate":"2024-04-15"},{"lineNumber":534,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":535,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":536,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":537,"author":{"gitId":"kyhjonathan"},"content":"    void addEvent_emptyInput_throwsException() {","lastModifiedDate":"2024-04-15"},{"lineNumber":538,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":539,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":540,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription \u003d \"\";","lastModifiedDate":"2024-04-15"},{"lineNumber":541,"author":{"gitId":"kyhjonathan"},"content":"        String startDate \u003d \"\";","lastModifiedDate":"2024-04-15"},{"lineNumber":542,"author":{"gitId":"kyhjonathan"},"content":"        String endDate \u003d \"\";","lastModifiedDate":"2024-04-15"},{"lineNumber":543,"author":{"gitId":"kyhjonathan"},"content":"        String startTime \u003d \"\";","lastModifiedDate":"2024-04-15"},{"lineNumber":544,"author":{"gitId":"kyhjonathan"},"content":"        String endTime \u003d \"\";","lastModifiedDate":"2024-04-15"},{"lineNumber":545,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":546,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":547,"author":{"gitId":"kyhjonathan"},"content":"        TaskType testTaskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-04-15"},{"lineNumber":548,"author":{"gitId":"kyhjonathan"},"content":"        String[] dummyTestDates \u003d new String[]{startDate, endDate};","lastModifiedDate":"2024-04-15"},{"lineNumber":549,"author":{"gitId":"kyhjonathan"},"content":"        String[] dummyTestTimes \u003d new String[]{startTime, endTime};","lastModifiedDate":"2024-04-15"},{"lineNumber":550,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":551,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":552,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":553,"author":{"gitId":"kyhjonathan"},"content":"                addTask(date, taskDescription, testTaskType, dummyTestDates,dummyTestTimes));","lastModifiedDate":"2024-04-15"},{"lineNumber":554,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":555,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":556,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":557,"author":{"gitId":"Aak242"},"content":"    void getFreeTimeSlots_validInput_returnsCorrectSlots() throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":558,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-04-10"},{"lineNumber":559,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.of(2024, 4, 7);","lastModifiedDate":"2024-04-10"},{"lineNumber":560,"author":{"gitId":"Aak242"},"content":"        String taskDescription \u003d \"Test Event\";","lastModifiedDate":"2024-04-10"},{"lineNumber":561,"author":{"gitId":"Aak242"},"content":"        String startDate \u003d \"07/04/2024\";","lastModifiedDate":"2024-04-10"},{"lineNumber":562,"author":{"gitId":"Aak242"},"content":"        String endDate \u003d \"07/04/2024\";","lastModifiedDate":"2024-04-10"},{"lineNumber":563,"author":{"gitId":"Aak242"},"content":"        String startTime \u003d \"1200\";","lastModifiedDate":"2024-04-12"},{"lineNumber":564,"author":{"gitId":"Aak242"},"content":"        String endTime \u003d \"1300\";","lastModifiedDate":"2024-04-12"},{"lineNumber":565,"author":{"gitId":"Aak242"},"content":"        TaskType testTaskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-04-10"},{"lineNumber":566,"author":{"gitId":"Aak242"},"content":"        String[] testDates \u003d new String[]{startDate, endDate};","lastModifiedDate":"2024-04-10"},{"lineNumber":567,"author":{"gitId":"Aak242"},"content":"        String[] testTimes \u003d new String[]{startTime, endTime};","lastModifiedDate":"2024-04-10"},{"lineNumber":568,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":569,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-04-10"},{"lineNumber":570,"author":{"gitId":"Aak242"},"content":"        addTask(date, taskDescription, testTaskType, testDates, testTimes);","lastModifiedDate":"2024-04-10"},{"lineNumber":571,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cTask\u003e events \u003d TaskManager.getEventsForDate(date);","lastModifiedDate":"2024-04-15"},{"lineNumber":572,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cString\u003e freeTimeSlots \u003d taskManager.getFreeTimeSlots(events, date);","lastModifiedDate":"2024-04-15"},{"lineNumber":573,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":574,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-04-10"},{"lineNumber":575,"author":{"gitId":"Aak242"},"content":"        assertEquals(2, freeTimeSlots.size());","lastModifiedDate":"2024-04-10"},{"lineNumber":576,"author":{"gitId":"Aak242"},"content":"        assertEquals(\"00:00 - 12:00\", freeTimeSlots.get(0));","lastModifiedDate":"2024-04-10"},{"lineNumber":577,"author":{"gitId":"Aak242"},"content":"        assertEquals(\"13:00 - 23:59\", freeTimeSlots.get(1));","lastModifiedDate":"2024-04-10"},{"lineNumber":578,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":579,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":580,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":581,"author":{"gitId":"Aak242"},"content":"    void getFreeTimeSlots_invalidInput_returnsFullTime() {","lastModifiedDate":"2024-04-10"},{"lineNumber":582,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-04-10"},{"lineNumber":583,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.of(2024, 4, 7);","lastModifiedDate":"2024-04-10"},{"lineNumber":584,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":585,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-04-10"},{"lineNumber":586,"author":{"gitId":"Aak242"},"content":"        List\u003cString\u003e freeTimeSlots \u003d taskManager.getFreeTimeSlots(new ArrayList\u003c\u003e(), date);","lastModifiedDate":"2024-04-10"},{"lineNumber":587,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":588,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-04-10"},{"lineNumber":589,"author":{"gitId":"Aak242"},"content":"        assertEquals(freeTimeSlots.get(0), \"00:00 - 23:59\");","lastModifiedDate":"2024-04-10"},{"lineNumber":590,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":591,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":592,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":593,"author":{"gitId":"Aak242"},"content":"    void getEventsForDate_validDate_returnsEvents() throws TaskManagerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":594,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-04-10"},{"lineNumber":595,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-11"},{"lineNumber":596,"author":{"gitId":"Aak242"},"content":"        String taskDescription \u003d \"Test Event\";","lastModifiedDate":"2024-04-10"},{"lineNumber":597,"author":{"gitId":"Aak242"},"content":"        String startDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":598,"author":{"gitId":"Aak242"},"content":"        String endDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":599,"author":{"gitId":"Aak242"},"content":"        String startTime \u003d \"1200\";","lastModifiedDate":"2024-04-12"},{"lineNumber":600,"author":{"gitId":"Aak242"},"content":"        String endTime \u003d \"1300\";","lastModifiedDate":"2024-04-12"},{"lineNumber":601,"author":{"gitId":"Aak242"},"content":"        TaskType testTaskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-04-10"},{"lineNumber":602,"author":{"gitId":"Aak242"},"content":"        String[] testDates \u003d new String[]{startDate, endDate};","lastModifiedDate":"2024-04-10"},{"lineNumber":603,"author":{"gitId":"Aak242"},"content":"        String[] testTimes \u003d new String[]{startTime, endTime};","lastModifiedDate":"2024-04-10"},{"lineNumber":604,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":605,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-04-10"},{"lineNumber":606,"author":{"gitId":"Aak242"},"content":"        addTask(date, taskDescription, testTaskType, testDates, testTimes);","lastModifiedDate":"2024-04-10"},{"lineNumber":607,"author":{"gitId":"Aak242"},"content":"        List\u003cTask\u003e eventsForDate \u003d TaskManager.getEventsForDate(date);","lastModifiedDate":"2024-04-10"},{"lineNumber":608,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":609,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-04-10"},{"lineNumber":610,"author":{"gitId":"Aak242"},"content":"        assertEquals(1, eventsForDate.size());","lastModifiedDate":"2024-04-10"},{"lineNumber":611,"author":{"gitId":"Aak242"},"content":"        assertEquals(taskDescription, eventsForDate.get(0).getName());","lastModifiedDate":"2024-04-10"},{"lineNumber":612,"author":{"gitId":"Aak242"},"content":"        assertEquals(startDate, eventsForDate.get(0).getStartDate());","lastModifiedDate":"2024-04-10"},{"lineNumber":613,"author":{"gitId":"Aak242"},"content":"        assertEquals(endDate, eventsForDate.get(0).getEndDate());","lastModifiedDate":"2024-04-10"},{"lineNumber":614,"author":{"gitId":"Aak242"},"content":"        assertEquals(startTime, eventsForDate.get(0).getStartTime());","lastModifiedDate":"2024-04-10"},{"lineNumber":615,"author":{"gitId":"Aak242"},"content":"        assertEquals(endTime, eventsForDate.get(0).getEndTime());","lastModifiedDate":"2024-04-10"},{"lineNumber":616,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":617,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":618,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":619,"author":{"gitId":"kyhjonathan"},"content":"    void getEventsForDate_multipleEventsOnDate_returnsAllEvents() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":620,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":621,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":622,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription1 \u003d \"Test Event 1\";","lastModifiedDate":"2024-04-15"},{"lineNumber":623,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription2 \u003d \"Test Event 2\";","lastModifiedDate":"2024-04-15"},{"lineNumber":624,"author":{"gitId":"kyhjonathan"},"content":"        TaskType taskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-04-15"},{"lineNumber":625,"author":{"gitId":"kyhjonathan"},"content":"        String[] dates \u003d {date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")),","lastModifiedDate":"2024-04-15"},{"lineNumber":626,"author":{"gitId":"kyhjonathan"},"content":"                date.plusDays(1).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))};","lastModifiedDate":"2024-04-15"},{"lineNumber":627,"author":{"gitId":"kyhjonathan"},"content":"        String[] times \u003d {\"1000\", \"1200\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":628,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":629,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, taskDescription1, taskType, dates, times);","lastModifiedDate":"2024-04-15"},{"lineNumber":630,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, taskDescription2, taskType, dates, times);","lastModifiedDate":"2024-04-15"},{"lineNumber":631,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":632,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":633,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cTask\u003e eventsForDate \u003d TaskManager.getEventsForDate(date);","lastModifiedDate":"2024-04-15"},{"lineNumber":634,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":635,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":636,"author":{"gitId":"kyhjonathan"},"content":"        assertEquals(2, eventsForDate.size());","lastModifiedDate":"2024-04-15"},{"lineNumber":637,"author":{"gitId":"kyhjonathan"},"content":"        assertEquals(taskDescription1, eventsForDate.get(0).getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":638,"author":{"gitId":"kyhjonathan"},"content":"        assertEquals(taskDescription2, eventsForDate.get(1).getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":639,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":640,"author":{"gitId":"kyhjonathan"},"content":"        deleteAllTasksOnDate(taskManager, LocalDate.now().plusDays(1));","lastModifiedDate":"2024-04-15"},{"lineNumber":641,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":642,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":643,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":644,"author":{"gitId":"kyhjonathan"},"content":"    void getEventsForDate_noEventsOnDate_returnsEmptyList() {","lastModifiedDate":"2024-04-15"},{"lineNumber":645,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":646,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":647,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":648,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":649,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cTask\u003e eventsForDate \u003d TaskManager.getEventsForDate(date);","lastModifiedDate":"2024-04-15"},{"lineNumber":650,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":651,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":652,"author":{"gitId":"kyhjonathan"},"content":"        assertTrue(eventsForDate.isEmpty());","lastModifiedDate":"2024-04-15"},{"lineNumber":653,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":654,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":655,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":656,"author":{"gitId":"kyhjonathan"},"content":"    void getEventsForDate_eventOnDifferentDate_returnsEmptyList() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":657,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":658,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":659,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate differentDate \u003d date.plusDays(1);","lastModifiedDate":"2024-04-15"},{"lineNumber":660,"author":{"gitId":"kyhjonathan"},"content":"        String taskDescription \u003d \"Test Event\";","lastModifiedDate":"2024-04-15"},{"lineNumber":661,"author":{"gitId":"kyhjonathan"},"content":"        TaskType taskType \u003d TaskType.EVENT;","lastModifiedDate":"2024-04-15"},{"lineNumber":662,"author":{"gitId":"kyhjonathan"},"content":"        String[] dates \u003d {differentDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")),","lastModifiedDate":"2024-04-15"},{"lineNumber":663,"author":{"gitId":"kyhjonathan"},"content":"                differentDate.plusDays(1).format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))};","lastModifiedDate":"2024-04-15"},{"lineNumber":664,"author":{"gitId":"kyhjonathan"},"content":"        String[] times \u003d {\"1000\", \"1200\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":665,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":666,"author":{"gitId":"kyhjonathan"},"content":"        addTask(differentDate, taskDescription, taskType, dates, times);","lastModifiedDate":"2024-04-15"},{"lineNumber":667,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":668,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":669,"author":{"gitId":"kyhjonathan"},"content":"        List\u003cTask\u003e eventsForDate \u003d TaskManager.getEventsForDate(date);","lastModifiedDate":"2024-04-15"},{"lineNumber":670,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":671,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":672,"author":{"gitId":"kyhjonathan"},"content":"        assertTrue(eventsForDate.isEmpty());","lastModifiedDate":"2024-04-15"},{"lineNumber":673,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":674,"author":{"gitId":"kyhjonathan"},"content":"        deleteAllTasksOnDate(taskManager, LocalDate.now().plusDays(1));","lastModifiedDate":"2024-04-15"},{"lineNumber":675,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":676,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":677,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":678,"author":{"gitId":"Aak242"},"content":"    void getEventsForDate_invalidDate_returnsNoEvents() {","lastModifiedDate":"2024-04-10"},{"lineNumber":679,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-04-10"},{"lineNumber":680,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now(); // No events added for this date","lastModifiedDate":"2024-04-11"},{"lineNumber":681,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":682,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-04-10"},{"lineNumber":683,"author":{"gitId":"Aak242"},"content":"        List\u003cTask\u003e eventsForDate \u003d TaskManager.getEventsForDate(date);","lastModifiedDate":"2024-04-10"},{"lineNumber":684,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":685,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-04-10"},{"lineNumber":686,"author":{"gitId":"Aak242"},"content":"        assertTrue(eventsForDate.isEmpty());","lastModifiedDate":"2024-04-10"},{"lineNumber":687,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":688,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":689,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":690,"author":{"gitId":"NicholasTanYY"},"content":"    void markTaskAsCompleted_validIndex_marksTask() throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":691,"author":{"gitId":"NicholasTanYY"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":692,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":693,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(date, \"Complete project report\", TaskType.TODO, ","lastModifiedDate":"2024-04-14"},{"lineNumber":694,"author":{"gitId":"NicholasTanYY"},"content":"                new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-14"},{"lineNumber":695,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":696,"author":{"gitId":"NicholasTanYY"},"content":"        // Act","lastModifiedDate":"2024-04-14"},{"lineNumber":697,"author":{"gitId":"NicholasTanYY"},"content":"        taskManager.markTaskAsCompleted(date, 0);","lastModifiedDate":"2024-04-14"},{"lineNumber":698,"author":{"gitId":"NicholasTanYY"},"content":"        Task completedTask \u003d taskManager.getTasksForDate(date).get(0);","lastModifiedDate":"2024-04-14"},{"lineNumber":699,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":700,"author":{"gitId":"NicholasTanYY"},"content":"        // Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":701,"author":{"gitId":"NicholasTanYY"},"content":"        assertTrue(completedTask.isCompleted(), \"Task should be marked as completed.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":702,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":703,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":704,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":705,"author":{"gitId":"NicholasTanYY"},"content":"    void markTaskAsCompleted_invalidIndex_throwsException() throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":706,"author":{"gitId":"NicholasTanYY"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":707,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":708,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(date, \"Write unit test\", TaskType.TODO, ","lastModifiedDate":"2024-04-14"},{"lineNumber":709,"author":{"gitId":"NicholasTanYY"},"content":"                new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-14"},{"lineNumber":710,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":711,"author":{"gitId":"NicholasTanYY"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":712,"author":{"gitId":"NicholasTanYY"},"content":"        IndexOutOfBoundsException exceptionThrown \u003d assertThrows(","lastModifiedDate":"2024-04-14"},{"lineNumber":713,"author":{"gitId":"NicholasTanYY"},"content":"                IndexOutOfBoundsException.class, ","lastModifiedDate":"2024-04-14"},{"lineNumber":714,"author":{"gitId":"NicholasTanYY"},"content":"                () -\u003e taskManager.markTaskAsCompleted(date, 1), ","lastModifiedDate":"2024-04-14"},{"lineNumber":715,"author":{"gitId":"NicholasTanYY"},"content":"                \"Should throw IndexOutOfBoundsException\");","lastModifiedDate":"2024-04-14"},{"lineNumber":716,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":717,"author":{"gitId":"NicholasTanYY"},"content":"        assertEquals(","lastModifiedDate":"2024-04-14"},{"lineNumber":718,"author":{"gitId":"NicholasTanYY"},"content":"                \"Task index is out of bounds.\", ","lastModifiedDate":"2024-04-14"},{"lineNumber":719,"author":{"gitId":"NicholasTanYY"},"content":"                exceptionThrown.getMessage(), ","lastModifiedDate":"2024-04-14"},{"lineNumber":720,"author":{"gitId":"NicholasTanYY"},"content":"                \"Exception message should match expected.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":721,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":722,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":723,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":724,"author":{"gitId":"NicholasTanYY"},"content":"    void markTaskAsNotCompleted_validIndex_marksTaskNotCompleted() throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":725,"author":{"gitId":"NicholasTanYY"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":726,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":727,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(date, \"Complete project report\", TaskType.TODO, ","lastModifiedDate":"2024-04-14"},{"lineNumber":728,"author":{"gitId":"NicholasTanYY"},"content":"                new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-14"},{"lineNumber":729,"author":{"gitId":"NicholasTanYY"},"content":"        taskManager.markTaskAsCompleted(date, 0); ","lastModifiedDate":"2024-04-14"},{"lineNumber":730,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":731,"author":{"gitId":"NicholasTanYY"},"content":"        // Act","lastModifiedDate":"2024-04-14"},{"lineNumber":732,"author":{"gitId":"NicholasTanYY"},"content":"        taskManager.markTaskAsNotCompleted(date, 0);","lastModifiedDate":"2024-04-14"},{"lineNumber":733,"author":{"gitId":"NicholasTanYY"},"content":"        Task unmarkedTask \u003d taskManager.getTasksForDate(date).get(0);","lastModifiedDate":"2024-04-14"},{"lineNumber":734,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":735,"author":{"gitId":"NicholasTanYY"},"content":"        // Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":736,"author":{"gitId":"NicholasTanYY"},"content":"        assertFalse(unmarkedTask.isCompleted(), \"Task should be marked as not completed.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":737,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":738,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":739,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":740,"author":{"gitId":"NicholasTanYY"},"content":"    void markTaskAsNotCompleted_invalidIndex_throwsException() throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":741,"author":{"gitId":"NicholasTanYY"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":742,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":743,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(date, \"Write unit test\", TaskType.TODO, ","lastModifiedDate":"2024-04-14"},{"lineNumber":744,"author":{"gitId":"NicholasTanYY"},"content":"                new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-14"},{"lineNumber":745,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":746,"author":{"gitId":"NicholasTanYY"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":747,"author":{"gitId":"NicholasTanYY"},"content":"        IndexOutOfBoundsException exceptionThrown \u003d assertThrows(","lastModifiedDate":"2024-04-14"},{"lineNumber":748,"author":{"gitId":"NicholasTanYY"},"content":"                IndexOutOfBoundsException.class, ","lastModifiedDate":"2024-04-14"},{"lineNumber":749,"author":{"gitId":"NicholasTanYY"},"content":"                () -\u003e taskManager.markTaskAsNotCompleted(date, 1), ","lastModifiedDate":"2024-04-14"},{"lineNumber":750,"author":{"gitId":"NicholasTanYY"},"content":"                \"Should throw IndexOutOfBoundsException\");","lastModifiedDate":"2024-04-14"},{"lineNumber":751,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":752,"author":{"gitId":"NicholasTanYY"},"content":"        assertEquals(","lastModifiedDate":"2024-04-14"},{"lineNumber":753,"author":{"gitId":"NicholasTanYY"},"content":"                \"Task index is out of bounds.\", ","lastModifiedDate":"2024-04-14"},{"lineNumber":754,"author":{"gitId":"NicholasTanYY"},"content":"                exceptionThrown.getMessage(), ","lastModifiedDate":"2024-04-14"},{"lineNumber":755,"author":{"gitId":"NicholasTanYY"},"content":"                \"Exception message should match expected.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":756,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":757,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":758,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":759,"author":{"gitId":"kyhjonathan"},"content":"    void markTaskAsCompleted_allTasks_marksAllTasks() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":760,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":761,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":762,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, \"Task 1\", TaskType.TODO, new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-15"},{"lineNumber":763,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, \"Task 2\", TaskType.TODO, new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-15"},{"lineNumber":764,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":765,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":766,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.markTaskAsCompleted(date, 0);","lastModifiedDate":"2024-04-15"},{"lineNumber":767,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.markTaskAsCompleted(date, 1);","lastModifiedDate":"2024-04-15"},{"lineNumber":768,"author":{"gitId":"kyhjonathan"},"content":"        Task completedTask1 \u003d taskManager.getTasksForDate(date).get(0);","lastModifiedDate":"2024-04-15"},{"lineNumber":769,"author":{"gitId":"kyhjonathan"},"content":"        Task completedTask2 \u003d taskManager.getTasksForDate(date).get(1);","lastModifiedDate":"2024-04-15"},{"lineNumber":770,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":771,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":772,"author":{"gitId":"kyhjonathan"},"content":"        assertTrue(completedTask1.isCompleted(), \"Task 1 should be marked as completed.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":773,"author":{"gitId":"kyhjonathan"},"content":"        assertTrue(completedTask2.isCompleted(), \"Task 2 should be marked as completed.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":774,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":775,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":776,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":777,"author":{"gitId":"kyhjonathan"},"content":"    void markTaskAsNotCompleted_allTasks_marksAllTasksNotCompleted() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":778,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":779,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":780,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, \"Task 1\", TaskType.TODO, new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-15"},{"lineNumber":781,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, \"Task 2\", TaskType.TODO, new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-15"},{"lineNumber":782,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.markTaskAsCompleted(date, 0);","lastModifiedDate":"2024-04-15"},{"lineNumber":783,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.markTaskAsCompleted(date, 1);","lastModifiedDate":"2024-04-15"},{"lineNumber":784,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":785,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":786,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.markTaskAsNotCompleted(date, 0);","lastModifiedDate":"2024-04-15"},{"lineNumber":787,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.markTaskAsNotCompleted(date, 1);","lastModifiedDate":"2024-04-15"},{"lineNumber":788,"author":{"gitId":"kyhjonathan"},"content":"        Task unmarkedTask1 \u003d taskManager.getTasksForDate(date).get(0);","lastModifiedDate":"2024-04-15"},{"lineNumber":789,"author":{"gitId":"kyhjonathan"},"content":"        Task unmarkedTask2 \u003d taskManager.getTasksForDate(date).get(1);","lastModifiedDate":"2024-04-15"},{"lineNumber":790,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":791,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":792,"author":{"gitId":"kyhjonathan"},"content":"        assertFalse(unmarkedTask1.isCompleted(), \"Task 1 should be marked as not completed.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":793,"author":{"gitId":"kyhjonathan"},"content":"        assertFalse(unmarkedTask2.isCompleted(), \"Task 2 should be marked as not completed.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":794,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":795,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":796,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":797,"author":{"gitId":"kyhjonathan"},"content":"    void markTaskAsCompleted_alreadyCompletedTask_noChange() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":798,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":799,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":800,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, \"Task 1\", TaskType.TODO, new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-15"},{"lineNumber":801,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.markTaskAsCompleted(date, 0);","lastModifiedDate":"2024-04-15"},{"lineNumber":802,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":803,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":804,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.markTaskAsCompleted(date, 0);","lastModifiedDate":"2024-04-15"},{"lineNumber":805,"author":{"gitId":"kyhjonathan"},"content":"        Task completedTask \u003d taskManager.getTasksForDate(date).get(0);","lastModifiedDate":"2024-04-15"},{"lineNumber":806,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":807,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":808,"author":{"gitId":"kyhjonathan"},"content":"        assertTrue(completedTask.isCompleted(), \"Task should still be marked as completed.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":809,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":810,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":811,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":812,"author":{"gitId":"kyhjonathan"},"content":"    void markTaskAsNotCompleted_alreadyNotCompletedTask_noChange() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":813,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-15"},{"lineNumber":814,"author":{"gitId":"kyhjonathan"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":815,"author":{"gitId":"kyhjonathan"},"content":"        addTask(date, \"Task 1\", TaskType.TODO, new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-15"},{"lineNumber":816,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":817,"author":{"gitId":"kyhjonathan"},"content":"        // Act","lastModifiedDate":"2024-04-15"},{"lineNumber":818,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.markTaskAsNotCompleted(date, 0);","lastModifiedDate":"2024-04-15"},{"lineNumber":819,"author":{"gitId":"kyhjonathan"},"content":"        Task unmarkedTask \u003d taskManager.getTasksForDate(date).get(0);","lastModifiedDate":"2024-04-15"},{"lineNumber":820,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":821,"author":{"gitId":"kyhjonathan"},"content":"        // Assert","lastModifiedDate":"2024-04-15"},{"lineNumber":822,"author":{"gitId":"kyhjonathan"},"content":"        assertFalse(unmarkedTask.isCompleted(), \"Task should still be marked as not completed.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":823,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":824,"author":{"gitId":"kyhjonathan"},"content":"    ","lastModifiedDate":"2024-04-15"},{"lineNumber":825,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":826,"author":{"gitId":"NicholasTanYY"},"content":"    void getDayTasks_withMultipleTasks_returnsAllTasks() throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":827,"author":{"gitId":"NicholasTanYY"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":828,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":829,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(date, \"Task 1\", TaskType.TODO, new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-14"},{"lineNumber":830,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(date, \"Task 2\", TaskType.TODO, new String[]{null}, new String[]{null});","lastModifiedDate":"2024-04-14"},{"lineNumber":831,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":832,"author":{"gitId":"NicholasTanYY"},"content":"        // Act","lastModifiedDate":"2024-04-14"},{"lineNumber":833,"author":{"gitId":"NicholasTanYY"},"content":"        List\u003cTask\u003e tasksForDay \u003d TaskManager.getDayTasks(date);","lastModifiedDate":"2024-04-14"},{"lineNumber":834,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":835,"author":{"gitId":"NicholasTanYY"},"content":"        // Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":836,"author":{"gitId":"NicholasTanYY"},"content":"        assertEquals(2, tasksForDay.size(), \"Should return all tasks for the day.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":837,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":838,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":839,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":840,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"NicholasTanYY":99,"clarencepohh":248,"Aak242":188,"kyhjonathan":305}},{"path":"src/test/java/data/exceptions/MarkTaskExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data.exceptions;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import data.TaskType;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"import java.util.List;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.addTask;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.deleteAllTasksOnDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.getDayTasks;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"public class MarkTaskExceptionTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    void setUp() {","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"    @AfterEach","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    void resetTaskManager() {","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"        deleteAllTasksOnDate(taskManager, date);","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfTaskIndexIsValidForMarkingTask_validIndexGivenForDayWithTask_noExceptionThrown ()","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Todo\";","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{null};","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates, dummyTestTimes);","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d getDayTasks(date);","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e MarkTaskException.checkIfTaskIndexIsValidForMarkingTask(dayTasks, 1));","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfTaskIndexIsValidForMarkingTask_invalidIndexGivenForDayWithTask_exceptionThrown ()","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Todo\";","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{null};","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates, dummyTestTimes);","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d getDayTasks(date);","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"        MarkTaskException thrown \u003d assertThrows(MarkTaskException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"kyhjonathan"},"content":"                MarkTaskException.checkIfTaskIndexIsValidForMarkingTask(dayTasks, 2));","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(\"The task index you attempted to mark is out of range!\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfTaskIndexIsValidForMarkingTask_indexGivenForDayWithNoTasks_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d getDayTasks(date);","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"        MarkTaskException thrown \u003d assertThrows(MarkTaskException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"kyhjonathan"},"content":"                MarkTaskException.checkIfTaskIndexIsValidForMarkingTask(dayTasks, 1));","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(\"There are no tasks to mark on this day!\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"clarencepohh":91,"kyhjonathan":3}},{"path":"src/test/java/data/exceptions/SetPriorityExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data.exceptions;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import data.TaskType;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"import java.util.List;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.addTask;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.deleteAllTasksOnDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.getDayTasks;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"public class SetPriorityExceptionTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    void setUp() {","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"    @AfterEach","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    void resetTaskManager() {","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"        deleteAllTasksOnDate(taskManager, date);","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfTaskIndexIsValidForPriority_validIndexGivenForDayWithTask_noExceptionThrown ()","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Todo\";","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{null};","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates, dummyTestTimes);","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d getDayTasks(date);","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e SetPriorityException.checkIfTaskIndexIsValidForPriority(dayTasks, 1));","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfTaskIndexIsValidForPriority_invalidIndexGivenForDayWithTask_exceptionThrown ()","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Todo\";","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestTimes \u003d new String[]{null};","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates, dummyTestTimes);","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d getDayTasks(date);","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"        SetPriorityException thrown \u003d assertThrows(SetPriorityException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"kyhjonathan"},"content":"                SetPriorityException.checkIfTaskIndexIsValidForPriority(dayTasks, 2));","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(\"The task index you attempted to set a priority to is out of range!\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfTaskIndexIsValidForPriority_indexGivenForDayWithNoTasks_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"        // Act","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d getDayTasks(date);","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"        // Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"        SetPriorityException thrown \u003d assertThrows(SetPriorityException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"kyhjonathan"},"content":"                SetPriorityException.checkIfTaskIndexIsValidForPriority(dayTasks, 1));","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(\"There are no tasks to set a priority to on this day!\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfPriorityIsValid_validHPriorityGiven_noExceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"        String priorityString \u003d \"H\";","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"        // Act and Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e SetPriorityException.checkIfPriorityIsValid(priorityString));","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfPriorityIsValid_validMPriorityGiven_noExceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"clarencepohh"},"content":"        String priorityString \u003d \"M\";","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"clarencepohh"},"content":"        // Act and Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e SetPriorityException.checkIfPriorityIsValid(priorityString));","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfPriorityIsValid_validLPriorityGiven_noExceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"clarencepohh"},"content":"        String priorityString \u003d \"L\";","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"clarencepohh"},"content":"        // Act and Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e SetPriorityException.checkIfPriorityIsValid(priorityString));","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfPriorityIsValid_invalidPriorityGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"clarencepohh"},"content":"        String priorityString \u003d \"low\";","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"clarencepohh"},"content":"        // Act and Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"clarencepohh"},"content":"        SetPriorityException thrown \u003d assertThrows(SetPriorityException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"kyhjonathan"},"content":"                SetPriorityException.checkIfPriorityIsValid(priorityString));","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(\"The priority you entered is invalid! Please enter a valid priority (L, M, H)!\",","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfPriorityIsValid_integerGivenAsInput_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"clarencepohh"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"clarencepohh"},"content":"        String priorityString \u003d \"995\";","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"clarencepohh"},"content":"        // Act and Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"clarencepohh"},"content":"        SetPriorityException thrown \u003d assertThrows(SetPriorityException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"kyhjonathan"},"content":"                SetPriorityException.checkIfPriorityIsValid(priorityString));","lastModifiedDate":"2024-04-15"},{"lineNumber":142,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(\"The priority you entered is invalid! Please enter a valid priority (L, M, H)!\",","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":145,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"clarencepohh":137,"kyhjonathan":8}},{"path":"src/test/java/data/exceptions/StorageFileExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"//@@author kyhjonathan","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"package data.exceptions;","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"public class StorageFileExceptionTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"    public void checkStorageTextDateFormat_validStorageTextDateGiven_noExceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"        String testStorageTextDate \u003d \"2024-12-03\";","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"        // Act and Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e StorageFileException.checkStorageTextDateFormat(testStorageTextDate));","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"    public void checkStorageTextDateFormat_reversedStorageTextDateGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"        String testStorageTextDate \u003d \"03-12-2024\";","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"        // Act and Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"        StorageFileException thrown \u003d assertThrows(StorageFileException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"                StorageFileException.checkStorageTextDateFormat(testStorageTextDate));","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"        assertEquals(\"Invalid date format in tasks.txt file. \" + \"Please use the format yyyy-MM-dd for dates.\",","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"kyhjonathan":32}},{"path":"src/test/java/data/exceptions/TaskManagerExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data.exceptions;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"import time.DateUtils;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"import java.util.List;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"public class TaskManagerExceptionTest {","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"    LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    LocalDate startOfWeek \u003d DateUtils.getStartOfWeek(today);","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"    WeekView weekView \u003d new WeekView(startOfWeek, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateInCurrentMonth_pastDateGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"                TaskManagerException.checkIfDateInCurrentMonth(LocalDate.parse(\"1111-11-11\")),","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"                \"TaskManagerException was expected\");","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"        Assertions.assertEquals(\"The date must be within the current month. \" + \"Please try again.\",","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateInCurrentMonth_futureDateGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"            TaskManagerException.checkIfDateInCurrentMonth(LocalDate.parse(\"2222-11-11\")),","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"                \"TaskManagerException was expected\");","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"        Assertions.assertEquals(\"The date must be within the current month. \" + \"Please try again.\",","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateInCurrentWeek_pastDateGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"            TaskManagerException.checkIfDateInCurrentWeek(LocalDate.parse(\"1111-11-11\"), weekView),","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"                \"TaskManagerException was expected\");","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"        Assertions.assertEquals(\"The date must be within the current week. Please try again.\",","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateInCurrentWeek_futureDateGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"kyhjonathan"},"content":"                TaskManagerException.checkIfDateInCurrentWeek(LocalDate.parse(\"2222-11-11\"), weekView),","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"                \"TaskManagerException was expected\");","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"        Assertions.assertEquals(\"The date must be within the current week. Please try again.\",","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateHasTasks_noTasksOnDate_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayWithNoTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"kyhjonathan"},"content":"                TaskManagerException.checkIfDateHasTasks(dayWithNoTasks));","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"        Assertions.assertEquals(\"There are no tasks on this date. Please try again.\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateTimeInFormat_validDateTimeGiven_noExceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e TaskManagerException.checkIfDateTimeInFormat(\"15/04/2024 1600\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"kyhjonathan"},"content":"    //@@author kyhjonathan","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"kyhjonathan"},"content":"    public void checkIfDateTimeInFormat_invalidDateTimeDelimitersGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"kyhjonathan"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"kyhjonathan"},"content":"                TaskManagerException.checkIfDateTimeInFormat(\"15-04-2024 1600\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"kyhjonathan"},"content":"        Assertions.assertEquals(\"Invalid date and time format. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"kyhjonathan"},"content":"                \"Please use the format dd/MM/yyyy HHmm\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"kyhjonathan"},"content":"    public void checkIfDateTimeInFormat_invalidDateGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"kyhjonathan"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"kyhjonathan"},"content":"                TaskManagerException.checkIfDateTimeInFormat(\"15042024 1600\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"kyhjonathan"},"content":"        Assertions.assertEquals(\"Invalid date and time format. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"kyhjonathan"},"content":"                \"Please use the format dd/MM/yyyy HHmm\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"kyhjonathan"},"content":"    public void checkIfDateTimeInFormat_invalidTimeGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"kyhjonathan"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"kyhjonathan"},"content":"                TaskManagerException.checkIfDateTimeInFormat(\"15/04/2024 16:00\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"kyhjonathan"},"content":"        Assertions.assertEquals(\"Invalid date and time format. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"kyhjonathan"},"content":"                \"Please use the format dd/MM/yyyy HHmm\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"kyhjonathan"},"content":"    public void checkIfDateTimeInFormat_dateTimeNotSeparatedWithWhiteSpace_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"kyhjonathan"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"kyhjonathan"},"content":"                TaskManagerException.checkIfDateTimeInFormat(\"15/04/2024-16:00\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"kyhjonathan"},"content":"        Assertions.assertEquals(\"Invalid date and time format. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"kyhjonathan"},"content":"                \"Please use the format dd/MM/yyyy HHmm\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"kyhjonathan"},"content":"    public void checkIfDateInFormat_validDateGiven_noExceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e TaskManagerException.checkIfDateInFormat(\"15/04/2024\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"kyhjonathan"},"content":"    public void checkIfDateInFormat_invalidDateGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"kyhjonathan"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"kyhjonathan"},"content":"                TaskManagerException.checkIfDateInFormat(\"152/04/2024\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"kyhjonathan"},"content":"        Assertions.assertEquals(\"Invalid date format. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"kyhjonathan"},"content":"                \"Please use the format dd/MM/yyyy\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"kyhjonathan"},"content":"    public void checkIfDateInFormat_invalidDateDelimitersGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"kyhjonathan"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"kyhjonathan"},"content":"                TaskManagerException.checkIfDateInFormat(\"15-04-2024\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"kyhjonathan"},"content":"        Assertions.assertEquals(\"Invalid date format. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"kyhjonathan"},"content":"                \"Please use the format dd/MM/yyyy\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"kyhjonathan"},"content":"    public void checkIfTimeInFormat_validTimeGiven_noExceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"kyhjonathan"},"content":"        assertDoesNotThrow(() -\u003e TaskManagerException.checkIfTimeInFormat(\"1600\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"kyhjonathan"},"content":"    public void checkIfDateInFormat_invalidTimeGiven_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"kyhjonathan"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"kyhjonathan"},"content":"                TaskManagerException.checkIfTimeInFormat(\"15024\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":140,"author":{"gitId":"kyhjonathan"},"content":"        Assertions.assertEquals(\"Invalid time format.\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"kyhjonathan"},"content":"                \" Please use the format HHmm\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":145,"author":{"gitId":"kyhjonathan"},"content":"    public void checkIfTimeInFormat_dateGivenInstead_exceptionThrown () {","lastModifiedDate":"2024-04-14"},{"lineNumber":146,"author":{"gitId":"kyhjonathan"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":147,"author":{"gitId":"kyhjonathan"},"content":"                TaskManagerException.checkIfTimeInFormat(\"15-04-2024\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"kyhjonathan"},"content":"        Assertions.assertEquals(\"Invalid time format.\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"kyhjonathan"},"content":"                \" Please use the format HHmm\", thrown.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"clarencepohh":69,"NicholasTanYY":1,"kyhjonathan":81}},{"path":"src/test/java/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"class StorageTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"    private static final Path TEST_FILE_PATH \u003d Path.of(\"save\", \"test_tasks.txt\");","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"        // Delete the test file before each test","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"        Files.deleteIfExists(TEST_FILE_PATH);","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"    void tearDown() throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"        // Delete the test file after each test","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"        Files.deleteIfExists(TEST_FILE_PATH);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"    void saveTasksToFile_throwsIOException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"        // Arrange","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"        Path nonExistentPath \u003d Path.of(\"nonexistent/directory/tasks.txt\");","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"        // Act and Assert","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(IOException.class, () -\u003e Files.write(nonExistentPath, \"test data\".getBytes()));","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"    void readFromFile_fileDoesNotExist_throwsIOException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"        Path nonExistentPath \u003d Path.of(\"nonexistent/directory/tasks.txt\");","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"        assertThrows(IOException.class, () -\u003e Files.readString(nonExistentPath));","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"kyhjonathan":42}},{"path":"src/test/java/ui/AvatarUiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"class AvatarUiTest {","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    @AfterEach","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"    void printWelcomeMessage_displaysCorrectMessage() {","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"        AvatarUi.printWelcomeMessage();","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"        String lineSeparator \u003d System.lineSeparator();","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"        String expectedOutput \u003d \"Hello there, I am CLI-nton, your CLI-based \" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"                                \"personal assistant in event management!\" + lineSeparator;","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"NicholasTanYY":35}},{"path":"src/test/java/ui/MonthViewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package ui;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import time.MonthView;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"import java.time.YearMonth;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"class MonthViewTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"    private MonthView monthView;","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    private DateTimeFormatter dateFormatter;","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"    void setUp() {","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"        dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"        monthView \u003d new MonthView(LocalDate.now(), dateFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"    void testMonthViewInitialization() {","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate expectedStartDate \u003d LocalDate.now().withDayOfMonth(1);","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(expectedStartDate, monthView.getStartOfMonth());","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"    void testNextMonthTransition() {","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"        YearMonth currentMonth \u003d YearMonth.from(monthView.getStartOfMonth());","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        monthView.next();","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"        YearMonth nextMonth \u003d currentMonth.plusMonths(1);","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(nextMonth.atDay(1), monthView.getStartOfMonth());","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"    void testPreviousMonthTransition() {","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"        YearMonth currentMonth \u003d YearMonth.from(monthView.getStartOfMonth());","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"        monthView.previous();","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"        YearMonth previousMonth \u003d currentMonth.minusMonths(1);","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(previousMonth.atDay(1), monthView.getStartOfMonth());","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"    void testMonthViewLeapYearFebruary() {","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate leapYearDate \u003d LocalDate.of(2024, 2, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"        monthView \u003d new MonthView(leapYearDate, dateFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(29, leapYearDate.lengthOfMonth());","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"    void testMonthViewNonLeapYearFebruary() {","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate nonLeapYearDate \u003d LocalDate.of(2023, 2, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"        monthView \u003d new MonthView(nonLeapYearDate, dateFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(28, nonLeapYearDate.lengthOfMonth());","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"    void testMonthViewDecemberToJanuaryTransition() {","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate decemberDate \u003d LocalDate.of(2023, 12, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"        monthView \u003d new MonthView(decemberDate, dateFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"        monthView.next();","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(LocalDate.of(2024, 1, 1), monthView.getStartOfMonth());","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"    void testMonthViewJanuaryToDecemberTransition() {","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate januaryDate \u003d LocalDate.of(2023, 1, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"        monthView \u003d new MonthView(januaryDate, dateFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"        monthView.previous();","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(LocalDate.of(2022, 12, 1), monthView.getStartOfMonth());","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"    void testMonthViewEndOfMonthBoundary() {","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate endOfMonth \u003d LocalDate.of(2023, 3, 31);","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"        monthView \u003d new MonthView(endOfMonth, dateFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"        monthView.next();","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(LocalDate.of(2023, 4, 1), monthView.getStartOfMonth());","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"    void testMonthViewStartOfMonthBoundary() {","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfMonth \u003d LocalDate.of(2023, 3, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"        monthView \u003d new MonthView(startOfMonth, dateFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"        monthView.previous();","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(LocalDate.of(2023, 2, 1), monthView.getStartOfMonth());","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"    void testMonthViewWithInvalidDate() {","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"        assertThrows(DateTimeException.class, () -\u003e {","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"            LocalDate invalidDate \u003d LocalDate.of(2023, 2, 30); // Invalid date","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"            new MonthView(invalidDate, dateFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"        });","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"Mahesh1772":101}},{"path":"src/test/java/ui/UiRendererTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import data.TaskManager;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import data.TaskType;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import data.exceptions.TaskManagerException;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"import time.DateUtils;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"import static data.TaskManager.addTask;","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"import static ui.UiRenderer.printWeekHeader;","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"import static ui.UiRenderer.printWeekBody;","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"import static data.TaskManager.deleteAllTasksOnDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"import static ui.UiRenderer.printTaskForDay;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"public class UiRendererTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    public static List\u003cTask\u003e tasks \u003d List.of(new Task(\"task1\"), new Task(\"task2\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"            new Task(\"task3\"), new Task(\"task4\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    public static List\u003cTask\u003e emptyTaskList \u003d List.of();","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"    private static final int SPACE_COUNT \u003d 15;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String VERTICAL_DIVIDER \u003d \"|\";","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String EMPTY_TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" \".repeat(SPACE_COUNT);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"    void setUp() {","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"    @AfterEach","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"    void resetTaskManager() {","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"        deleteAllTasksOnDate(taskManager, date);","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"NicholasTanYY"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"NicholasTanYY"},"content":"    @AfterEach","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"NicholasTanYY"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"NicholasTanYY"},"content":"        outContent.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"NicholasTanYY"},"content":"    void printTaskForDay_noTasks_printsNoTasks() {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"NicholasTanYY"},"content":"        printTaskForDay(emptyTaskList, 0);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(outContent.toString(), EMPTY_TASK_DISPLAY_FORMAT);","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"NicholasTanYY"},"content":"    void printWeekHeader_forWeekView_printsWeekViewHeading() {","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate startOfWeek \u003d DateUtils.getStartOfWeek(today);","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"NicholasTanYY"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"NicholasTanYY"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"NicholasTanYY"},"content":"        printWeekHeader(startOfWeek, dateFormatter, false);","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"NicholasTanYY"},"content":"        String lineSeparator \u003d System.lineSeparator();","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"NicholasTanYY"},"content":"        String expectedOutput \u003d ","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"NicholasTanYY"},"content":"                \"+---------------+---------------+---------------+---------------+\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"NicholasTanYY"},"content":"                \"---------------+---------------+---------------+\" + lineSeparator + ","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"NicholasTanYY"},"content":"                \"|Sunday         |Monday         |Tuesday        |Wednesday      |\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"NicholasTanYY"},"content":"                \"Thursday       |Friday         |Saturday       |\" + lineSeparator + ","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"NicholasTanYY"},"content":"                \"|14/04/2024     |15/04/2024     |16/04/2024     |17/04/2024     |\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"NicholasTanYY"},"content":"                \"18/04/2024     |19/04/2024     |20/04/2024     |\" + lineSeparator + ","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"NicholasTanYY"},"content":"                \"+---------------+---------------+---------------+---------------+\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"NicholasTanYY"},"content":"                \"---------------+---------------+---------------+\" + lineSeparator;","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"NicholasTanYY"},"content":"                                ","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"NicholasTanYY"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"NicholasTanYY"},"content":"    void printWeekHeader_forMonthView_printsMonthViewHeading() {","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate startOfMonth \u003d LocalDate.now().withDayOfMonth(1);","lastModifiedDate":"2024-04-15"},{"lineNumber":95,"author":{"gitId":"NicholasTanYY"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-04-15"},{"lineNumber":96,"author":{"gitId":"NicholasTanYY"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-15"},{"lineNumber":97,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"NicholasTanYY"},"content":"        printWeekHeader(startOfMonth, dateFormatter, true);","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":101,"author":{"gitId":"NicholasTanYY"},"content":"        String lineSeparator \u003d System.lineSeparator();","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"NicholasTanYY"},"content":"        String expectedOutput \u003d ","lastModifiedDate":"2024-04-15"},{"lineNumber":103,"author":{"gitId":"NicholasTanYY"},"content":"                \"+---------------+---------------+---------------+---------------+\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":104,"author":{"gitId":"NicholasTanYY"},"content":"                \"---------------+---------------+---------------+\" + lineSeparator + ","lastModifiedDate":"2024-04-15"},{"lineNumber":105,"author":{"gitId":"NicholasTanYY"},"content":"                \"|Sunday         |Monday         |Tuesday        |Wednesday      |\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"NicholasTanYY"},"content":"                \"Thursday       |Friday         |Saturday       |\" + lineSeparator + ","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"NicholasTanYY"},"content":"                \"+---------------+---------------+---------------+---------------+\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"NicholasTanYY"},"content":"                \"---------------+---------------+---------------+\" + lineSeparator;","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"NicholasTanYY"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"NicholasTanYY"},"content":"    void printWeekBody_noTasks_printsEmptyWeekBody() {","lastModifiedDate":"2024-04-15"},{"lineNumber":115,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate startOfWeek \u003d DateUtils.getStartOfWeek(LocalDate.now());","lastModifiedDate":"2024-04-15"},{"lineNumber":116,"author":{"gitId":"NicholasTanYY"},"content":"        deleteAllTasksOnDate(taskManager, startOfWeek);","lastModifiedDate":"2024-04-15"},{"lineNumber":117,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"NicholasTanYY"},"content":"        outContent.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"NicholasTanYY"},"content":"        printWeekBody(startOfWeek, taskManager);","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":121,"author":{"gitId":"NicholasTanYY"},"content":"        String lineSeparator \u003d System.lineSeparator();","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"NicholasTanYY"},"content":"        String expectedOutput \u003d ","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"NicholasTanYY"},"content":"                \"+---------------+---------------+---------------+---------------+\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":124,"author":{"gitId":"NicholasTanYY"},"content":"                \"---------------+---------------+---------------+\" + lineSeparator;","lastModifiedDate":"2024-04-15"},{"lineNumber":125,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"NicholasTanYY"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"NicholasTanYY"},"content":"    void printWeekBody_singleTaskPerDay_printsWeekBodyWithSingleTaskPerDay() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate startOfWeek \u003d DateUtils.getStartOfWeek(LocalDate.now());","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"NicholasTanYY"},"content":"        deleteAllTasksOnDate(taskManager, startOfWeek);","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(startOfWeek, \"Task 1\", TaskType.TODO, new String[]{}, new String[]{});","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(startOfWeek.plusDays(1), \"Task 2\", TaskType.TODO, new String[]{}, new String[]{});","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":137,"author":{"gitId":"NicholasTanYY"},"content":"        outContent.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":138,"author":{"gitId":"NicholasTanYY"},"content":"        printWeekBody(startOfWeek, taskManager);","lastModifiedDate":"2024-04-15"},{"lineNumber":139,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":140,"author":{"gitId":"NicholasTanYY"},"content":"        String lineSeparator \u003d System.lineSeparator();","lastModifiedDate":"2024-04-15"},{"lineNumber":141,"author":{"gitId":"NicholasTanYY"},"content":"        String expectedOutput \u003d ","lastModifiedDate":"2024-04-15"},{"lineNumber":142,"author":{"gitId":"NicholasTanYY"},"content":"                \"|1.[T][O][L]    |1.[T][O][L]    |               |               |\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":143,"author":{"gitId":"NicholasTanYY"},"content":"                \"               |               |               |\" + lineSeparator +","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"NicholasTanYY"},"content":"                \"|Task 1         |Task 2         |               |               |\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":145,"author":{"gitId":"NicholasTanYY"},"content":"                \"               |               |               |\" + lineSeparator +","lastModifiedDate":"2024-04-15"},{"lineNumber":146,"author":{"gitId":"NicholasTanYY"},"content":"                \"+---------------+---------------+---------------+---------------+\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":147,"author":{"gitId":"NicholasTanYY"},"content":"                \"---------------+---------------+---------------+\" + lineSeparator;","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":149,"author":{"gitId":"NicholasTanYY"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-04-15"},{"lineNumber":150,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"kyhjonathan"},"content":"        deleteAllTasksOnDate(taskManager, LocalDate.now().plusDays(1));","lastModifiedDate":"2024-04-15"},{"lineNumber":152,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"NicholasTanYY"},"content":"    void printWeekBody_multipleTasksPerDay_printsWeekBodyWithMultipleTasksPerDay() throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"NicholasTanYY"},"content":"        LocalDate startOfWeek \u003d DateUtils.getStartOfWeek(LocalDate.now());","lastModifiedDate":"2024-04-15"},{"lineNumber":157,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":158,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(startOfWeek, \"Task 1\", TaskType.TODO, new String[]{}, new String[]{});","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(startOfWeek, \"Task 2\", TaskType.TODO, new String[]{}, new String[]{});","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(startOfWeek.plusDays(1), \"Task 3\", TaskType.TODO, new String[]{}, new String[]{});","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"NicholasTanYY"},"content":"        addTask(startOfWeek.plusDays(1), \"Task 4\", TaskType.TODO, new String[]{}, new String[]{});","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"NicholasTanYY"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-15"},{"lineNumber":164,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"NicholasTanYY"},"content":"        printWeekBody(startOfWeek, taskManager);","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"NicholasTanYY"},"content":"        String lineSeparator \u003d System.lineSeparator();","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"NicholasTanYY"},"content":"        String expectedOutput \u003d ","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"NicholasTanYY"},"content":"                \"|1.[T][O][L]    |1.[T][O][L]    |               |               |\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":171,"author":{"gitId":"NicholasTanYY"},"content":"                \"               |               |               |\" + lineSeparator +","lastModifiedDate":"2024-04-15"},{"lineNumber":172,"author":{"gitId":"NicholasTanYY"},"content":"                \"|Task 1         |Task 3         |               |               |\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":173,"author":{"gitId":"NicholasTanYY"},"content":"                \"               |               |               |\" + lineSeparator +","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"NicholasTanYY"},"content":"                \"|2.[T][O][L]    |2.[T][O][L]    |               |               |\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"NicholasTanYY"},"content":"                \"               |               |               |\" + lineSeparator +","lastModifiedDate":"2024-04-15"},{"lineNumber":176,"author":{"gitId":"NicholasTanYY"},"content":"                \"|Task 2         |Task 4         |               |               |\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"NicholasTanYY"},"content":"                \"               |               |               |\" + lineSeparator +","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"NicholasTanYY"},"content":"                \"+---------------+---------------+---------------+---------------+\" + ","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"NicholasTanYY"},"content":"                \"---------------+---------------+---------------+\" + lineSeparator;","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"NicholasTanYY"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"kyhjonathan"},"content":"        deleteAllTasksOnDate(taskManager, LocalDate.now().plusDays(1));","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"NicholasTanYY":174,"clarencepohh":6,"kyhjonathan":4}},{"path":"src/test/java/ui/WeekViewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import time.MonthView;","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"import static data.exceptions.TaskManagerExceptionTest.DATE_TIME_FORMATTER;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"public class WeekViewTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    private WeekView weekView;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    private MonthView monthView;","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfWeek \u003d LocalDate.of(2024, 3, 10); // March 10, 2024","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"        weekView \u003d new WeekView(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"        monthView \u003d new MonthView(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"    public void testNextWeek() {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d weekView.getStartOfWeek();","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"        weekView.next();","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.plusWeeks(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, weekView.getStartOfWeek());","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"    public void testPreviousWeek() {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d weekView.getStartOfWeek();","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"        weekView.previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.minusWeeks(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, weekView.getStartOfWeek());","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"    public void testNextMonth() {","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d monthView.getStartOfMonth();","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"        monthView.next();","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.plusMonths(1).withDayOfMonth(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, monthView.getStartOfMonth());","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"    public void testPreviousMonth() {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d monthView.getStartOfMonth();","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"        monthView.previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.minusMonths(1).withDayOfMonth(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, monthView.getStartOfMonth());","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"    void testWeekViewAtYearEnd() {","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate endOfYear \u003d LocalDate.of(2023, 12, 31);","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"        weekView \u003d new WeekView(endOfYear, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"        weekView.next();","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"        // The expected start of the next week should be the next Sunday, which is January 7, 2024","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate expectedStartOfNextWeek \u003d LocalDate.of(2024, 1, 7);","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(expectedStartOfNextWeek, weekView.getStartOfWeek());","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"    void testWeekViewAtYearStart() {","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfYear \u003d LocalDate.of(2024, 1, 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"        weekView \u003d new WeekView(startOfYear, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"Mahesh1772"},"content":"        weekView.previous();","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate endOfPreviousYear \u003d LocalDate.of(2023, 12, 31)","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"                .with(TemporalAdjusters.previous(DayOfWeek.MONDAY));","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(endOfPreviousYear, weekView.getStartOfWeek());","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"Mahesh1772"},"content":"    void testWeekViewDuringLeapYear() {","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate leapYearDate \u003d LocalDate.of(2024, 2, 29);","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"Mahesh1772"},"content":"        weekView \u003d new WeekView(leapYearDate, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate expectedStartOfWeek \u003d leapYearDate;","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(expectedStartOfWeek, weekView.getStartOfWeek());","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"    void testWeekViewDayOfWeekConsistency() {","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate date \u003d LocalDate.of(2023, 3, 10); // This is a Friday","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"        weekView \u003d new WeekView(date, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate expectedStartOfWeek \u003d date;","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"        weekView.next();","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate expectedNewDate \u003d expectedStartOfWeek.plusWeeks(1);","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(expectedNewDate, weekView.getStartOfWeek());","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Mahesh1772":105,"clarencepohh":1}},{"path":"text-ui-test/changeExpected.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"# reset saved file from previous run","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"save/clintonData.txt\" ]","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"then ","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"    rm save/clintonData.txt","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"# delete output from previous run","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"./text-ui-test/EXPECTED-UNIX.TXT\" ]","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"then ","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"    rm ./text-ui-test/EXPECTED-UNIX.TXT","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"# run the program, feed commands from input.txt file and redirect the output to the EXPECTED-UNIX.TXT","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"if ./gradlew -q run \u003c ./text-ui-test/input.txt \u003e ./text-ui-test/EXPECTED-UNIX.TXT; then","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"EXPECTED-UNIX.TXT changed according to the output from commands in input.txt!\"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"else","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"An error occurred\"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"    exit 1","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"# reset saved file from previous run","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"save/clintonData.txt\" ]","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"then ","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    rm save/clintonData.txt","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"# run the program, feed commands from input.txt file and redirect the output to the EXPECTED.TXT","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"if ./gradlew -q run \u003c ./text-ui-test/input.txt \u003e ./text-ui-test/EXPECTED.TXT; then","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"EXPECTED.TXT changed according to the output from commands in input.txt!\"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"else","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"An error occurred\"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"    exit 1","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"NicholasTanYY":35}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"NicholasTanYY":1,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"# delete output from previous run","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"./text-ui-test/ACTUAL-UNIX.TXT\" ]","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"then","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"    rm ./text-ui-test/ACTUAL-UNIX.TXT","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"# reset saved file from previous run","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"save/clintonData.txt\" ]","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"then ","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"    rm save/clintonData.txt","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"if ! ./gradlew build","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"then","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    exit 1","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"# run Checkstyle, terminates if error occurred","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"if ! ./gradlew checkstyleMain","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"then","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"********** CHECKSTYLE FAILURE **********\"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"    exit 1","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL-UNIX.TXT","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"./gradlew -q run \u003c ./text-ui-test/input.txt \u003e ./text-ui-test/ACTUAL-UNIX.TXT","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"diff ./text-ui-test/EXPECTED-UNIX.TXT ./text-ui-test/ACTUAL-UNIX.TXT","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"NicholasTanYY":29,"-":14}},{"path":"unused/data/TaskManager.java","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Aak242"},"content":"class TaskManager {","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"Aak242"},"content":"     * Lists task of the input date.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"Aak242"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"Aak242"},"content":"     * @param taskManager Hashmap of tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Aak242"},"content":"     * @param date Date that\u0027s prompted by user.","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"Aak242"},"content":"     * @param message Message to be prompted to the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"Aak242"},"content":"     * @throws TaskManagerException If not in correct week/month view.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"Aak242"},"content":"    private static void listTasksAtDate(TaskManager taskManager, LocalDate date, String message)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"Aak242"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"Aak242"},"content":"        List\u003cTask\u003e dayTasks \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"Aak242"},"content":"        checkIfDateHasTasks(dayTasks);","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"Aak242"},"content":"        System.out.println(message);","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"Aak242"},"content":"        for (int i \u003d 0; i \u003c dayTasks.size(); i++) {","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"Aak242"},"content":"            System.out.println((i + 1) + \". \" + dayTasks.get(i).getName());","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"Aak242"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"Aak242":21}},{"path":"unused/data/exceptions/TaskManagerException.java","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Aak242"},"content":"package data.exceptions;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Aak242"},"content":"import data.Task;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Aak242"},"content":"import time.WeekView;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Aak242"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Aak242"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Aak242"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Aak242"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Aak242"},"content":"import java.util.List;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author Aak242-unused","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Previously used for exception handling in Event and Deadline classes.","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// Became redundant after discovering concurrent work by another team member resolving the same issues.","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// This code is now unused and replaced with a more concise version, found in src/main/java/data/TaskManager.java.","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Reason: The previous implementation was not as concise and did not provide as much functionality as the new","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// implementation.","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class TaskManagerException extends Exception {","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String INVALID_DATE_FORMAT_MESSAGE \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \"Invalid date format. Please enter a valid date in the format: dd/MM/yyyy\";","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String INVALID_TIME_FORMAT_MESSAGE \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \"Invalid time format. Please enter a valid time in the format: HH:mm\";","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String START_DATE_AFTER_END_DATE_MESSAGE \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \"Start date must be before end date.\";","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String START_TIME_AFTER_END_TIME_MESSAGE \u003d","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Start time must be before end time.\";","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Method that checks if start date is before end date, and throw TaskManagerException if not,","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * convert to LocalDate first","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param startDate The start date to be checked.","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param endDate The end date to be checked.","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws TaskManagerException if start date is after end date.","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void checkIfStartDateBeforeEndDate(String startDate, String endDate) throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            LocalDate start \u003d LocalDate.parse(startDate, formatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            LocalDate end \u003d LocalDate.parse(endDate, formatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            if (start.isAfter(end)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                throw new TaskManagerException(START_DATE_AFTER_END_DATE_MESSAGE);","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new TaskManagerException(INVALID_DATE_FORMAT_MESSAGE);","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Method that checks if start time is before end time, and throw TaskManagerException if not,","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * convert to LocalTime first","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param startTime The start time to be checked.","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param endTime The end time to be checked.","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws TaskManagerException if start time is after end time.","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static void checkIfStartTimeBeforeEndTime(String startTime, String endTime) throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            LocalTime start \u003d LocalTime.parse(startTime, formatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            LocalTime end \u003d LocalTime.parse(endTime, formatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (start.isAfter(end)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                throw new TaskManagerException(START_TIME_AFTER_END_TIME_MESSAGE);","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new TaskManagerException(INVALID_TIME_FORMAT_MESSAGE);","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Checks if the provided string is a valid date in the format \"dd/MM/yyyy\".","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Throws a TaskManagerException if the date is not valid.","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param date The date string to be checked.","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws TaskManagerException If the date string is not a valid date in the format \"dd/MM/yyyy\".","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void checkIfValidDate(String date) throws TaskManagerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            LocalDate.parse(date, formatter);","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new TaskManagerException(INVALID_DATE_FORMAT_MESSAGE);","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Checks the validity of the provided date and time.","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The date is checked for its format and whether it falls within the current week or month.","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The time is checked for its format.","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param weekView The current week view shown by the calendar.","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param inMonthView A boolean indicating whether the month is being viewed.","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param startDate The start date to be checked.","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param startTime The start time to be checked.","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws TaskManagerException If the date or time is not valid, or does not fall within the current week or month.","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void checkDateAndTimeValidity(WeekView weekView, boolean inMonthView, String startDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                                String startTime) throws TaskManagerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Check if date is valid","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        checkIfValidDate(startDate);","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (inMonthView) {","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            checkIfDateInCurrentMonth(LocalDate.parse(startDate, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            checkIfDateInCurrentWeek(LocalDate.parse(startDate, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")), weekView);","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Check if time is valid","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        checkIfValidTime(startTime);","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Aak242":11,"-":104}},{"path":"unused/icshandler/IcsHandler.java","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package icshandler;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.data.CalendarOutputter;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.Calendar;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.DateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.component.VEvent;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.property.ProdId;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.property.Uid;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.util.RandomUidGenerator;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.util.UidGenerator;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.validate.ValidationException;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.property.Version;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"import net.fortuna.ical4j.model.property.CalScale;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"//@@author kyhjonathan-unused","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"//Unused as there were too many issues with the dependacies of the library","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"//and the library itself was not very well documented","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"//Decided to half development of ics and focuses on testing and documentation of other features","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class IcsHandler {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String filePath \u003d \"./src/main/java/icshandler/icstest.ics\";","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void generateICS() throws IOException, ValidationException {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // Start Date is on: April 1, 2023, 9:00 am","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        java.util.Calendar startDate \u003d new GregorianCalendar();","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.MONTH, java.util.Calendar.APRIL);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.DAY_OF_MONTH, 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.YEAR, 2023);","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.HOUR_OF_DAY, 9);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.MINUTE, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.SECOND, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // End Date is on: April 1, 2023, 13:00","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        java.util.Calendar endDate \u003d new GregorianCalendar();","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.MONTH, java.util.Calendar.APRIL);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.DAY_OF_MONTH, 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.YEAR, 2023);","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.HOUR_OF_DAY, 13);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.MINUTE, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.SECOND, 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Create the event","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DateTime start \u003d new DateTime(startDate.getTime());","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DateTime end \u003d new DateTime(endDate.getTime());","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        VEvent meeting \u003d new VEvent(start, end, \"Team Meeting\");","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Generate a UID for the event","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UidGenerator ug \u003d new RandomUidGenerator();","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Uid uid \u003d ug.generateUid();","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        meeting.getProperties().add(uid);","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Add the event and print","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Calendar calendar \u003d new Calendar();","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        calendar.getProperties().add(new ProdId(\"CLINTON CALENDAR\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        calendar.getProperties().add(Version.VERSION_2_0);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        calendar.getProperties().add(CalScale.GREGORIAN);","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        calendar.getComponents().add(meeting);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Save to an ICS file","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try (FileOutputStream fout \u003d new FileOutputStream(filePath)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            CalendarOutputter outputter \u003d new CalendarOutputter();","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            outputter.output(calendar, fout);","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static VEvent eventToVEvent(Event event) {","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        java.util.Calendar startDate \u003d new GregorianCalendar();","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int intStartDate \u003d parseInt(event.getStartDate().substring(2,5)) - 1;","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        System.out.println(intStartDate);","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.MONTH, 3);","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.DAY_OF_MONTH, 1);","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.YEAR, 2023);","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.HOUR_OF_DAY, 9);","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.MINUTE, 0);","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        startDate.set(java.util.Calendar.SECOND, 0);","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        java.util.Calendar endDate \u003d new GregorianCalendar();","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.MONTH, java.util.Calendar.APRIL);","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.DAY_OF_MONTH, 1);","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.YEAR, 2023);","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.HOUR_OF_DAY, 13);","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.MINUTE, 0);","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        endDate.set(java.util.Calendar.SECOND, 0);","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Create the event","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        DateTime start \u003d new DateTime(startDate.getTime());","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        DateTime end \u003d new DateTime(endDate.getTime());","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        VEvent meeting \u003d new VEvent(start, end, \"Team Meeting\");","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return meeting;","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"-":83,"kyhjonathan":18}},{"path":"unused/ui/AvatarUi.java","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author NicholasTanYY-unused","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Unused and replaced with a much more concise version, found in src/main/java/ui/AvatarUi.java","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Reason: Previous implementation involved printing the appropriate avatar size based on","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// the detected terminal size. However this feature was removed and hence this","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// implementation was no longer relevant.","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AvatarUi {","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String LARGE_AVATAR \u003d ","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            \"▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓████▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \"▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓█████▓▓▓▓▓▓▓▓███▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓███████▓▓▓▓▓▓▓▓▓██████▓▒░░░░░░░░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░░░░░░░░░░░▒██████▓▓▓▒▒▒▓▓▓▓████▓▓▓███▒░░░░░░░░░░░░░░░░░░░░░░░░░░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓████▓▓▓▓▓▓██▓███████▓▓▓▓██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \"▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓█████████████████▓▓▓▓▓█▓▓███▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░▓█████▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓███▒░░░░░░░░░░░░░░░░░░▒▒░░▒▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░▓████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓████▓░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░████▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓████▒░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░████▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓███░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░▓███▓▓▓▓████▒▒▒▓████▓▓▓▓██▓▒░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░▓██▓▒▓█▓▓▓▓▒▓▒▒▓▒▓▓▓▓▓▒▓██▓▒░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░▓▓█▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓██▓▒░░░░░░░░░░░░░░░░░░░▒░░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░▓▓█▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓█▓▒░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓▓▒▒▒▒▒▒▓▒▒▓▒▒▒▒▒▓▓▓▓▒░░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓▓▒▒▒▒▒▓▓▓▓▒▒▒▒▒▓▓▓░░░░░░░░░░░░░░░░░░░░░░░▒░░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░▓▓▓▓▒▒▒▒▓▒▒▓▒▒▒▒▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░▒░░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░▒▓▓▓▒▒▒▓▓▓▓▓▓▒▒▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░▒░░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░██▓▓▒▒▒▒▒▒▒▒▒▒▓▓█▓░░░░░░░░░░░░░░░░░░░░░░░░▒░░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░▒█▓▓█▓▓▒▒▒▒▒▒▓▓█▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░░░░░░░░░░░░░░░░░░░▓▓▓▓▓▓▓█▓▓▓▓▓██▓▒▒▓▒▓▒░░░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░░░░▒░░░░░░░░░░░░░░░▒██▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▓██▒░░░░░░░░░░░░░░░░░░░░▒▒░░▒▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \"░░▒▒░░░░▒▒▓▒▒▒▒▒░░░░░░░░▒▓████▒▒▒░░░▒▓▓▓▓▒▒▒░░░▒▒▒████▓▒░░░░░░░░░░░░░░░░░▒▒░░▒▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"░░▒▒░░▒▒▓▓▓▓▓▒░░░░░░▒▓▓███████▒▒░░░░░░▒▓▓▒░░░░░▒▒▒███████▓▓▒░░░░░░░░░░░░░▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \"▒▒▒▒░░░▒▓▓▓▓▒▒░▒▓▓██████████▓█▒▒░░░░▒██████░░░░░▒▒█▓██████████▓▓▓▒▒▒▒▒▒▒▒▒▒░░▒▒░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \"▓▓▓▓▒▒▒▒▓▓████████████████▓▓▓█▒▒░░░▒▒██████▒▒░░░▒▒█▓▓▓███████████████▓▓▓▓▓▒▒▒▒▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \"▓▓▓▓▒▒▓██████████▓▓▓▓▓██▓▓▓▓▓█░░░░▒░░▒████░░░▒░░░▒█▓▓▓▓▓██▓▓▓▓▓▓███████████▓▓▓▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \"▓▓▓▓█████████▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓█▒░░░░░░░████░░░░░░░▓█▓▓▓▓▓▓▓▓▓▓█▓▓▓▓▓▓████████▓▓▓▓\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \"███▓███▓█▓▓▓▓▓▓▓▓▓▓█▓▓█▓▓▓▓▓▓█▓░░░░░░▓████▒░░░░░░██▓▓▓▓▓██▓▓█▓▓▓▓▓▓▓▓▓▓▓████▒▒▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \"▒▒▒▒███▓█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██░░░░░░█████▓░░░░░▒██▓▓▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓▓█▓███▓▓▓▓\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \"▓▓▓▓████▓█▓▓▓▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓██▓░░░░░██████░░░░░▓██▓▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓▓▓██████▓██\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \"████████▓██▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓██▓▒░░░▒██████▒░░░▒▓██▓▓▓▓▓▓▓▓█▓▓▓▓▓▓▓▓▓██▓█████▓▓▓\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \"▓▓▓████████████▓▓▓▓▓▓██▓▓▓▓▓▓██▓▓░░░▓██████▒░░░▓▓██▓▓▓▓▓▓███▓▓▓▓▓▓▓███████████▓▓\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \"░░░█████████████████▓██████████▓▓▓░░▓██████▓░░▓▓▓███████████████████████████████\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \"▒▒▓█████████████████████████████▓▓▒░▓███████░▒█▓▓█████████████████████████████▓▓\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \"█▓█████████████████████████████████▒▓███████░▓▓▓████████████▓▓▓▓▓█████████████▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \"█▒██████████████████████████████████████████▓████████████▓▓▓▓█████████████████▓▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \"█▒████████████████████████████████████████████████████████████████████████████▓▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \"▓▓█████████████████████████████████████████████████████████████████████████████▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \"▓▓█████████████████████████████████████████████████████████████████████████████▒\\n\";","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MEDIUM_AVATAR \u003d ","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \"▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░▒▒▓███▓▓▓▓▓▓▓█▓▓▒░░░░░░░░░░░░░░░░░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░▒▒▒▒▒▓███▓▓▓▓▓▓███▓▓▓█▒▒▒▒▒▒▒░░░░░░░░░░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \"▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒█████▓▓▓█▓▓▓▓▓▓██▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░███▓▒▒▒▒▒▒▒▒▒▒▓██▒░░░░░░░░░░░▒░░▒░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░███▓▒▒▒▒▒▒▒▒▒▒▓██░░░░░░░░░░░░░░░▒░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░▒█▓▓███▓▒▒▓██▓▓██░░░░░░░░░░░░░░░▒░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░▓█▓▒▒▒▒▒▒▒▒▒▒▒▒█▓░░░░░░░░░░░░░░░▒░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░░▓▓▓▒▒▒▒▒▒▒▒▒▒▓▓▒░░░░░░░░░░░░▒░░▒░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░░░▒▓▒▒▒▒▓▓▒▒▒▓▓░░░░░░░░░░░░░░▒░░▒░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░░░░▓▓▒▒▓▓▓▓▒▓▓▒░░░░░░░░░░░░░░▒░░▒░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░░░░▓▓▓▒▒▒▒▒▒▓▓░░░░░░░░░░░░░░░▒░░▒░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \"░░░░░░░░░░░░░░░░░░▒▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░▒░░▒░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \"░▒░░░░░▒░░░░░░░░▒▓█▒▒▒▓▓▓▓▓▒▒▒▒█▓▒░░░░░░░░░░░▒░░▒░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \"░▒░░▒▓▓▓▒░░░▒▒▓███▓▒░░░▒▓▓░░░▒▒████▓▒▒░░░░░░░▒░░▒░\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \"▓▓▒░▒▓▓▓▓▓▓██████▓▓▒░░▒████░░░▒█▓██████▓▓▓▓▓▒▒▒▒▒▒\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \"▓▓▓▓██████▓▓▓██▓▓▓▓░░░░▓██░░░░▒█▓▓▓█▓▓▓▓██████▓▓▓▒\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \"▓▓████▓▓▓▓▓▓█▓▓▓▓▓█░░░░▓██▒░░░▒█▓▓▓▓▓▓▓▓▓▓▓▓███▓▓▓\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            \"▒▒▓███▓▓▓▓▓▓▓▓▓▓▓▓█▒░░░███▓░░░▓█▓▓▓▓▓▓▓▓▓▓▓▓▓███▓▓\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            \"███████▓▓▓▓▓██▓▓▓▓█▓░░░████░░▒██▓▓▓▓█▓▓▓▓▓▓█████▓▓\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \"▒▒████████▓▓▓██▓▓▓█▓▓░▒████░░▓████▓██▓▓▓██████████\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \"▒▓██████████████████▓▒▒████▒▓▓█████████▓████████▓▓\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \"▓▓████████████████████▓████▓████████▓▓▓█████████▓▒\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \"▓████████████████████████████████████████████████▒\\n\" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"▓████████████████████████████████████████████████▒\\n\";","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static final String SMALL_AVATAR \u003d ","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"░░░░▒▒▒▓▓▓▓▓▓▒▒▒░░░░\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \"▒░░░░░▓█▓▓▓▓▓▒░░░░▒▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \"░░░░░░▒▓▓▒▒▓█░░░░░░▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            \"░░░░░░░▓▒▒▒▒▓░░░░░░▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \"░░░░░░░▒▓▒▒▓░░░░░░░▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \"░░▒░░▒▓▓▒▓▓▒▓▒▒░░░░▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \"▓▓█▓██▓▒░▓▓░▓▓██▓▓▓▒\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \"▓█▓▓▓▓▓▓░▓▓░▓▓▓▓▓▓█▓\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \"▓███████▒██▒███▓███▓\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \"███████████████████▓\\n\";","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            ","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello there, I am CLI-nton, your CLI-based \" + ","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \"personal assistant in event management!\";","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private enum AvatarSize {","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        SMALL,","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        MEDIUM,","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LARGE","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Calculates the width of the avatar based on the avatar string.","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param avatar The avatar string.","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @return The width of the avatar in characters.","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static int getAvatarWidth(String avatar) {","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String[] lines \u003d avatar.split(\"\\n\");","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return lines[0].length();","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Determines the size of the avatar to use.","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @param terminalWidth Width of the terminal.","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @return The appropriate avatar to use.","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private static AvatarSize getAvatarSize(int terminalWidth) {","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (terminalWidth \u003c getAvatarWidth(MEDIUM_AVATAR)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return AvatarSize.SMALL;","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } else if (terminalWidth \u003c getAvatarWidth(LARGE_AVATAR)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return AvatarSize.MEDIUM;","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return AvatarSize.LARGE;","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Prints the avatar to the terminal.","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void printAvatar() {","lastModifiedDate":"2024-04-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        int terminalWidth \u003d TerminalSize.getTerminalWidth();","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AvatarSize avatarSize \u003d getAvatarSize(terminalWidth);","lastModifiedDate":"2024-04-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String avatar \u003d getAvatarImage(avatarSize);","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String[] lines \u003d avatar.split(\"\\n\");","lastModifiedDate":"2024-04-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        int avatarWidth \u003d lines[0].length();","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        int avatarPadding \u003d Math.max((terminalWidth - avatarWidth) / 2, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        for (String line : lines) {","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            System.out.print(\" \".repeat(avatarPadding));","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            System.out.println(line);","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Retrieves the avatar string to use based on the required size.","lastModifiedDate":"2024-04-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param avatarSize The size of the avatar.","lastModifiedDate":"2024-04-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @return The avatar string corresponding to the avatar size.","lastModifiedDate":"2024-04-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private static String getAvatarImage(AvatarSize avatarSize) {","lastModifiedDate":"2024-04-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String avatar;","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        switch (avatarSize) {","lastModifiedDate":"2024-04-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        case SMALL:","lastModifiedDate":"2024-04-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            avatar \u003d SMALL_AVATAR;","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2024-04-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        case MEDIUM:","lastModifiedDate":"2024-04-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            avatar \u003d MEDIUM_AVATAR;","lastModifiedDate":"2024-04-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2024-04-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2024-04-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            avatar \u003d LARGE_AVATAR;","lastModifiedDate":"2024-04-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return avatar;","lastModifiedDate":"2024-04-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Prints a welcome message to the user.","lastModifiedDate":"2024-04-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * It is centralized based on the width of the terminal.","lastModifiedDate":"2024-04-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        int terminalWidth \u003d TerminalSize.getTerminalWidth();","lastModifiedDate":"2024-04-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        int messagePadding \u003d Math.max((terminalWidth - WELCOME_MESSAGE.length()) / 2, 0);","lastModifiedDate":"2024-04-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        System.out.print(\" \".repeat(messagePadding));","lastModifiedDate":"2024-04-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello there, I am CLI-nton, your CLI-based personal assistant in event management!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"NicholasTanYY":2,"-":171}},{"path":"unused/ui/TerminalController.java","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import java.awt.AWTException;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import java.awt.Robot;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import java.awt.event.KeyEvent;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"//@@author NicholasTanYY-unused","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"// Reason: Initially wanted to have the screen cleared everytime the user presses enter, ","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"// to make the UI cleaner. However using keyboard inputs worked differently across different ","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"// terminals and different OS. This became too troublesome to manage.","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TerminalController {","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static Robot robot;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final int KEY_ENTER \u003d KeyEvent.VK_ENTER;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TerminalController() {","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            robot \u003d new Robot();","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        } catch (AWTException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void pressEnter() {","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        robot.keyPress(KEY_ENTER);","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        robot.keyRelease(KEY_ENTER);","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void clearTerminal() {","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        System.out.print(\"\\033[H\\033[2J\");","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        System.out.flush();","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"NicholasTanYY":6,"-":28}}]
