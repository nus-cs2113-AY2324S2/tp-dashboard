[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"    mainClass.set(\"seedu.duke.Main\")","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clarencepohh":1,"-":45}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Display |     Name     | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"--------|:------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Aakash Ramaswamy   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Nicholas Tan Yun Yu   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Sivagnanam Maheshwarn   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Jonathan Kuek   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Clarence Poh | [Github](https://github.com/clarencepohh) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Mahesh1772":4,"clarencepohh":2,"NicholasTanYY":1,"-":3}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"# CLI-nton","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Mahesh1772":1,"-":7}},{"path":"src/main/java/data/TaskManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateHasTasks;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateInCurrentWeek;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateInCurrentMonth;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"import static storage.Storage.saveTasksToFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Aak242"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Aak242"},"content":" * Manages tasks by providing functionalities to add, delete, and update tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Aak242"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"public class TaskManager {","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    private static final Map\u003cLocalDate, List\u003cString\u003e\u003e tasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Aak242"},"content":"     * Adds a task for a specific date.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Aak242"},"content":"     * @param date The date for the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Aak242"},"content":"     * @param task The description of the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"    public static void addTask(LocalDate date, String task) {","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"        tasks.computeIfAbsent(date, k -\u003e new ArrayList\u003c\u003e()).add(task);","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Aak242"},"content":"     * Deletes a task for a specific date and task index.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Aak242"},"content":"     * @param date The date of the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"    public void deleteTask(LocalDate date, int taskIndex) {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"        List\u003cString\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"        if (dayTasks !\u003d null \u0026\u0026 taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"            dayTasks.remove(taskIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"            if (dayTasks.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"                tasks.remove(date);","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Aak242"},"content":"     * Updates a task for a specific date and task index.","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Aak242"},"content":"     * @param date The date of the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Aak242"},"content":"     * @param taskIndex The index of the task to update.","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Aak242"},"content":"     * @param updatedTask The updated description of the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Aak242"},"content":"     * @throws IndexOutOfBoundsException If the task index is out of bounds.","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"    public static void updateTask(LocalDate date, int taskIndex, String updatedTask) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"Aak242"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Aak242"},"content":"            List\u003cString\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Aak242"},"content":"            boolean dayHasTasks \u003d dayTasks !\u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Aak242"},"content":"            boolean taskIndexExists \u003d taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c Objects.requireNonNull(dayTasks).size();","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Aak242"},"content":"            if (dayHasTasks \u0026\u0026 taskIndexExists) {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Aak242"},"content":"                dayTasks.set(taskIndex, updatedTask);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Aak242"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Aak242"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Aak242"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Aak242"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"Aak242"},"content":"     * Retrieves tasks for a specific date.","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Aak242"},"content":"     * @param date The date to retrieve tasks for.","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"Aak242"},"content":"     * @return A list of tasks for the given date.","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"    public List\u003cString\u003e getTasksForDate(LocalDate date) {","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"        return tasks.getOrDefault(date, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"Aak242"},"content":"     * Adds a task from user input along with the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"Aak242"},"content":"     * @param scanner Scanner object to get user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Aak242"},"content":"     * @param weekView WeekView object to validate the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"Aak242"},"content":"     * @param inMonthView A boolean indicating whether the view is in month view or not.","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"Aak242"},"content":"     * @throws TaskManagerException If there is an error in managing tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"    public static void addManager(Scanner scanner, WeekView weekView, boolean inMonthView)","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"Enter the date for the task (dd/MM/yyyy):\");","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d parseInputDate(scanner);","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"        if (inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"            checkIfDateInCurrentMonth(date);","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"            checkIfDateInCurrentWeek(date, weekView);","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"Enter the task description:\");","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"        String task \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, task);","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"kyhjonathan"},"content":"        saveTasksToFile(tasks); // Updates tasks from hashmap into tasks.txt file","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"Task added.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"Aak242"},"content":"     * Updates a task from user input along with the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"Aak242"},"content":"     * @param scanner Scanner object to get user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"Aak242"},"content":"     * @param weekView WeekView object to validate the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"Aak242"},"content":"     * @param taskManager TaskManager object to manage tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"Aak242"},"content":"     * @throws TaskManagerException If there is an error in managing tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"clarencepohh"},"content":"    public static void updateManager(Scanner scanner, WeekView weekView, TaskManager taskManager)","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"Aak242"},"content":"        System.out.println(\"Enter the date for the task you wish to update (dd/MM/yyyy):\");","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d parseInputDate(scanner);","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"clarencepohh"},"content":"        checkIfDateInCurrentWeek(date, weekView);","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"Aak242"},"content":"        listTasksAtDate(taskManager, date, \"Enter the task number of the task you wish to update:\");","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"Aak242"},"content":"        int taskNumber;","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Aak242"},"content":"        String updatedDescription;","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"Aak242"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"Aak242"},"content":"            taskNumber \u003d Integer.parseInt(scanner.nextLine().trim());","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"Aak242"},"content":"            System.out.println(\"Enter the updated task description:\");","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"Aak242"},"content":"            updatedDescription \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"Aak242"},"content":"            updateTask(date, taskNumber - 1, updatedDescription);","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"kyhjonathan"},"content":"            saveTasksToFile(tasks); // Update tasks.txt file","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"Aak242"},"content":"            System.out.println(\"Task updated.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"Aak242"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"Aak242"},"content":"            System.out.println(\"Task number should be an integer value. Please try again.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"Aak242"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"Aak242"},"content":"            System.out.println(\"The task number you have entered does not exist. Please try again.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"Aak242"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"Aak242"},"content":"     * Adds tasks from a file to the TaskManager.","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"Aak242"},"content":"     * @param tasksFromFile A map containing tasks read from a file.","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"kyhjonathan"},"content":"    public void addTasksFromFile(Map\u003cLocalDate, List\u003cString\u003e\u003e tasksFromFile) {","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"kyhjonathan"},"content":"        for (Map.Entry\u003cLocalDate, List\u003cString\u003e\u003e entry : tasksFromFile.entrySet()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"kyhjonathan"},"content":"            LocalDate date \u003d entry.getKey();","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"kyhjonathan"},"content":"            List\u003cString\u003e taskList \u003d entry.getValue();","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"kyhjonathan"},"content":"            for (String task : taskList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"kyhjonathan"},"content":"                addTask(date, task);","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"clarencepohh"},"content":"    private static void listTasksAtDate(TaskManager taskManager, LocalDate date, String message)","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"clarencepohh"},"content":"        List\u003cString\u003e dayTasks \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"clarencepohh"},"content":"        checkIfDateHasTasks(dayTasks);","lastModifiedDate":"2024-03-16"},{"lineNumber":159,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"Aak242"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"clarencepohh"},"content":"        for (int i \u003d 0; i \u003c dayTasks.size(); i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"clarencepohh"},"content":"            System.out.println((i + 1) + \". \" + dayTasks.get(i));","lastModifiedDate":"2024-03-16"},{"lineNumber":163,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"Aak242"},"content":"     * Deletes a task based on user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"Aak242"},"content":"     * @param scanner Scanner object to get user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"Aak242"},"content":"     * @param weekView WeekView object to validate the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"Aak242"},"content":"     * @param taskManager TaskManager object to manage tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"Aak242"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"Aak242"},"content":"     * @throws TaskManagerException If there is an error in managing tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"Aak242"},"content":"    public static void deleteManager(Scanner scanner, WeekView weekView, TaskManager taskManager)","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"Aak242"},"content":"            throws DateTimeParseException, TaskManagerException {","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"Aak242"},"content":"        System.out.println(\"Enter the date for the task to delete (dd/MM/yyyy):\");","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d parseInputDate(scanner);","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"Aak242"},"content":"        checkIfDateInCurrentWeek(date, weekView);","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"Aak242"},"content":"        listTasksAtDate(taskManager, date, \"Enter the task number to delete:\");","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"clarencepohh"},"content":"        int taskNumber;","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"clarencepohh"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"clarencepohh"},"content":"            taskNumber \u003d Integer.parseInt(scanner.nextLine().trim());","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"clarencepohh"},"content":"            taskManager.deleteTask(date, taskNumber - 1);","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"clarencepohh"},"content":"            System.out.println(\"Task deleted.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"kyhjonathan"},"content":"            saveTasksToFile(tasks); // Update tasks.txt file","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"clarencepohh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"clarencepohh"},"content":"            System.out.println(\"Invalid task number. Please try again.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"NicholasTanYY"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.println(\"The task number you have entered does not exist. Please try again.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"clarencepohh"},"content":"    // to abstract as Parser/UI function","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"Aak242"},"content":"    private static LocalDate parseInputDate(Scanner scanner) throws DateTimeParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":200,"author":{"gitId":"clarencepohh"},"content":"        String dateString \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"Mahesh1772"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-17"},{"lineNumber":202,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"Mahesh1772"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"clarencepohh"},"content":"            date \u003d LocalDate.parse(dateString, dateFormatter);","lastModifiedDate":"2024-03-16"},{"lineNumber":205,"author":{"gitId":"Mahesh1772"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"Mahesh1772"},"content":"            throw new DateTimeParseException(\"Invalid date format. Please use the format dd/MM/yyyy.\", dateString, 0);","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":208,"author":{"gitId":"clarencepohh"},"content":"        return date;","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":211,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"clarencepohh":86,"Mahesh1772":10,"NicholasTanYY":2,"Aak242":100,"kyhjonathan":13}},{"path":"src/main/java/data/TaskManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"public class TaskManagerException extends Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"    public static final String NOT_CURRENT_WEEK_MESSAGE \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"            \"The date must be within the current week. Please try again.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    public static final String NOT_CURRENT_MONTH_MESSAGE \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"            \"The date must be within the current month. Please try again.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"    public TaskManagerException(String errorMessage) {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"        super(errorMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"    public static void checkIfDateInCurrentWeek(LocalDate date, WeekView weekView) throws TaskManagerException {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfWeek \u003d weekView.getStartOfWeek();","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate endOfWeek \u003d startOfWeek.plusDays(6);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"        if (date.isBefore(startOfWeek) || date.isAfter(endOfWeek)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(NOT_CURRENT_WEEK_MESSAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"    public static void checkIfDateInCurrentMonth(LocalDate date) throws TaskManagerException {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"        int currentMonth \u003d currentDate.getMonthValue();","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"        int currentYear \u003d currentDate.getYear();","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"        int providedMonth \u003d date.getMonthValue();","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"        int providedYear \u003d date.getYear();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        if (currentMonth !\u003d providedMonth || currentYear !\u003d providedYear) {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(NOT_CURRENT_MONTH_MESSAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"    public static void checkIfDateHasTasks(List\u003cString\u003e dayTasks) throws TaskManagerException {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"        if (dayTasks.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"No tasks to delete on this date.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"clarencepohh":7,"Mahesh1772":39}},{"path":"src/main/java/seedu/duke/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import time.DateUtils;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManagerException;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"import static storage.Storage.createNewFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.addManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.deleteManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"import static data.TaskManager.updateManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"public class Main {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"    private static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"        LocalDate startOfWeek \u003d DateUtils.getStartOfWeek(today);","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"        WeekView weekView \u003d new WeekView(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"        boolean printWeek \u003d true; // Flag to control printing of the week view","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"        boolean inMonthView \u003d false; // Flag to indicate if we are in month view mode","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"        createNewFile(); //Creates directory and tasks.txt file if it does not exist","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"        Map\u003cLocalDate, List\u003cString\u003e\u003e tasksFromFile \u003d Storage.loadTasksFromFile(); //Reads tasks from txt file","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.addTasksFromFile(tasksFromFile); //Loads tasks from txt file","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"        while (true) {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"            if (printWeek) {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"                if (!inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"                    weekView.printWeekView(taskManager);","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"                } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"                    weekView.printMonthView(taskManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"            printWeek \u003d true; // Reset flag for the next iteration","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"            System.out.println(\"Enter \u0027next\u0027 for next week, \u0027prev\u0027 for previous week, \u0027add\u0027 to add a task, \" +","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"                    \"\u0027update\u0027 to edit a task, \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"                    \"\u0027delete\u0027 to delete a task, \" + ","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"                    \"\u0027month\u0027 to display the month view, \" +","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"                    \"or \u0027quit\u0027 to quit:\");","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"            String input \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"            switch (input) {","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"            case \"next\":","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"                if (inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"                    weekView.nextMonth();","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"                } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"                    weekView.nextWeek();","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"            case \"prev\":","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"                if (inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"                    weekView.previousMonth();","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"                } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"                    weekView.previousWeek();","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"                } ","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Aak242"},"content":"            case \"update\":","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"NicholasTanYY"},"content":"                try {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Aak242"},"content":"                    updateManager(scanner, weekView, taskManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"NicholasTanYY"},"content":"                } catch (TaskManagerException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"NicholasTanYY"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"NicholasTanYY"},"content":"                }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Aak242"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"            case \"add\":","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"                try {","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"                    addManager(scanner, weekView, inMonthView);","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"                } catch (TaskManagerException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"            case \"delete\":","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"                try {","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"                    deleteManager(scanner, weekView, taskManager);","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"                } catch (TaskManagerException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"            case \"month\":","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"                weekView.printMonthView(taskManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"                inMonthView \u003d !inMonthView; // Toggle month view mode","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"                printWeek \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"            case \"week\":","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"                inMonthView \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"                //weekView.printWeekView(taskManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"            case \"quit\":","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"clarencepohh"},"content":"                System.out.println(\"Exiting Calendar...\");","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"clarencepohh"},"content":"                System.exit(0);","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"clarencepohh"},"content":"            default:","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"clarencepohh"},"content":"                System.out.println(\"Invalid input. Please try again.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"clarencepohh":53,"NicholasTanYY":9,"Mahesh1772":36,"Aak242":3,"kyhjonathan":8}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"public class Storage {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"    private static final Path FILE_PATH \u003d Path.of(\"./save/tasks.txt\");","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"     * Creates directory and tasks.txt if it does not exist","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"kyhjonathan"},"content":"     * @throws IOException If an I/O exception occurs during file handling","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"kyhjonathan"},"content":"    public static void createNewFile() throws IOException {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"        if (!Files.isDirectory(FILE_PATH.getParent())) {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"            //  System.out.println(\"Directory not found, creating new one\");","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"            Files.createDirectories(FILE_PATH.getParent());","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"        if (!Files.exists(FILE_PATH)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"            Files.createFile(FILE_PATH);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"     * Reads tasks in hashmap and writes it in formatted form to tests.txt","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"     * @param tasks","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"    public static void saveTasksToFile(Map\u003cLocalDate, List\u003cString\u003e\u003e tasks) {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"        try (FileWriter writer \u003d new FileWriter(FILE_PATH.toFile())) {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"            for (Map.Entry\u003cLocalDate, List\u003cString\u003e\u003e entry : tasks.entrySet()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"                LocalDate date \u003d entry.getKey();","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"kyhjonathan"},"content":"                List\u003cString\u003e taskList \u003d entry.getValue();","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"                for (String task : taskList) {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"                    writer.write(date + \"|\" + task + System.lineSeparator());","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"kyhjonathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"I/O exception occurred during file handling\");","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"kyhjonathan"},"content":"     * Loads tasks from test.txt to hashmap","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"kyhjonathan"},"content":"     * @return tasks hashmap of tasks read from test.txt","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"kyhjonathan"},"content":"    public static Map\u003cLocalDate, List\u003cString\u003e\u003e loadTasksFromFile() {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"kyhjonathan"},"content":"        Map\u003cLocalDate, List\u003cString\u003e\u003e tasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"kyhjonathan"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH.toFile()))) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"kyhjonathan"},"content":"            String line;","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"kyhjonathan"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"kyhjonathan"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"kyhjonathan"},"content":"                LocalDate date \u003d LocalDate.parse(parts[0]);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"kyhjonathan"},"content":"                String task \u003d parts[1];","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"kyhjonathan"},"content":"                tasks.computeIfAbsent(date, k -\u003e new ArrayList\u003c\u003e()).add(task);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"kyhjonathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"I/O exception occurred during file handling\");","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"kyhjonathan"},"content":"        return tasks;","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"clarencepohh":2,"kyhjonathan":72}},{"path":"src/main/java/time/DateUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package time;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"public class DateUtils {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"    public static LocalDate getStartOfWeek(LocalDate date) {","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"        return date.minusDays(date.getDayOfWeek().getValue() % 7);","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"clarencepohh":1,"kyhjonathan":7}},{"path":"src/main/java/time/WeekView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package time;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import java.time.YearMonth;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"import static ui.UiRenderer.printWeekHeader;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"import static ui.UiRenderer.printWeekBody;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"import static ui.UiRenderer.printSeparator;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"public class WeekView {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"    private LocalDate startOfWeek;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"    private final DateTimeFormatter dateFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"    public WeekView(LocalDate startOfWeek, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"        this.startOfWeek \u003d startOfWeek;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"        this.dateFormatter \u003d dateFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    public void printWeekView(TaskManager taskManager) {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate endOfWeek \u003d startOfWeek.plusDays(6);","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"\\nWeek View: \" + dateFormatter.format(startOfWeek) +","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"                \" - \" + dateFormatter.format(endOfWeek));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"        printWeekHeader();","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"        printWeekBody(startOfWeek, dateFormatter, taskManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"    public void nextWeek() {","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"        startOfWeek \u003d startOfWeek.plusWeeks(1);","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"    public void previousWeek() {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"        startOfWeek \u003d startOfWeek.minusWeeks(1);","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getStartOfWeek() {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"        return startOfWeek;","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"    public void printMonthView(TaskManager taskManager) {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"        YearMonth yearMonth \u003d YearMonth.from(startOfWeek);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate firstOfMonth \u003d startOfWeek.withDayOfMonth(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate current \u003d firstOfMonth.with(TemporalAdjusters.previousOrSame(DayOfWeek.SUNDAY));","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"        // Create a formatter that only prints the day of the month","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"        DateTimeFormatter dayFormatter \u003d DateTimeFormatter.ofPattern(\"d\");","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"\\nMonth View: \" + yearMonth.getMonth() + \" \" + yearMonth.getYear());","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"        printWeekHeader();","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"        while (current.isBefore(firstOfMonth.plusMonths(1))) {","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"            for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"                if (current.getMonth().equals(yearMonth.getMonth())) {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"                    // Use the dayFormatter to print only the day number","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"                    System.out.printf(\"| %-10s \", dayFormatter.format(current));","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"                } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"                    System.out.print(\"|            \");","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"                current \u003d current.plusDays(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(\"|\");","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"            printSeparator();","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"            // Find the maximum number of tasks for any day in the current week","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"            LocalDate weekStart \u003d current.minusDays(7);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"            int maxTasks \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"            for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"                LocalDate date \u003d weekStart.plusDays(i);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"                maxTasks \u003d Math.max(maxTasks, taskManager.getTasksForDate(date).size());","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Mahesh1772"},"content":"            // Print tasks for each day in the current week","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"            for (int taskIndex \u003d 0; taskIndex \u003c maxTasks; taskIndex++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"                for (int dayIndex \u003d 0; dayIndex \u003c 7; dayIndex++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"                    LocalDate date \u003d weekStart.plusDays(dayIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"                    List\u003cString\u003e dayTasks \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"                    if (taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"                        String task \u003d dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Mahesh1772"},"content":"                        System.out.printf(\"| %-10.10s \", task);","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"                    } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Mahesh1772"},"content":"                        System.out.print(\"|            \");","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"                    }","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"                System.out.println(\"|\");","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"            // Print the separator only if there were tasks in the week","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"            if (maxTasks \u003e 0) {","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"                printSeparator();","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"    public void nextMonth() {","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"        YearMonth currentMonth \u003d YearMonth.from(startOfWeek);","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"        startOfWeek \u003d currentMonth.plusMonths(1).atDay(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"    public void previousMonth() {","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"        YearMonth currentMonth \u003d YearMonth.from(startOfWeek);","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"        startOfWeek \u003d currentMonth.minusMonths(1).atDay(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"clarencepohh":8,"Mahesh1772":97,"Aak242":1,"kyhjonathan":2}},{"path":"src/main/java/ui/UiRenderer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"public class UiRenderer {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String[] WEEK_DAYS \u003d {\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"};","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"    private static final int SPACE_COUNT \u003d 15;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String SINGLE_HORIZONTAL_DIVIDER \u003d \"+\" + \"-\".repeat(SPACE_COUNT + 2);","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String END_HORIZONTAL_DIVIDER \u003d \"+\";","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String VERTICAL_DIVIDER \u003d \"|\";","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String ENTRY_FORMAT \u003d VERTICAL_DIVIDER + \" %-\" + SPACE_COUNT + \"s \";","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" %-\" + SPACE_COUNT + \".\" + SPACE_COUNT + \"s \";","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String EMPTY_TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" \".repeat(SPACE_COUNT+1) + \" \";","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"    private static final int numberOfDaysInWeek \u003d 7;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printWeekHeader() {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"        printHeaderRow();","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printHorizontalDivider() {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.print(SINGLE_HORIZONTAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(END_HORIZONTAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printHeaderRow() {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"        for (String day : WEEK_DAYS) {","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.printf(ENTRY_FORMAT, day);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printWeekBody(LocalDate startOfWeek, DateTimeFormatter dateFormatter, TaskManager taskManager) {","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"        printDateRow(dateFormatter, startOfWeek);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"        int maxTasks \u003d getMaxTasks(startOfWeek, taskManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"        printWeeksTasks(startOfWeek, maxTasks, taskManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printDateRow(DateTimeFormatter dateFormatter, LocalDate date) {","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"NicholasTanYY"},"content":"        for (int i \u003d 0; i \u003c numberOfDaysInWeek; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.printf(ENTRY_FORMAT, dateFormatter.format(date));","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"NicholasTanYY"},"content":"            date \u003d date.plusDays(1);","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printWeeksTasks(LocalDate startOfWeek, int maxTasks, TaskManager taskManager) {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"NicholasTanYY"},"content":"        for (int taskIndex \u003d 0; taskIndex \u003c maxTasks; taskIndex++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"NicholasTanYY"},"content":"            for (int dayIndex \u003d 0; dayIndex \u003c numberOfDaysInWeek; dayIndex++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"NicholasTanYY"},"content":"                LocalDate currentDate \u003d startOfWeek.plusDays(dayIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"NicholasTanYY"},"content":"                List\u003cString\u003e dayTasks \u003d taskManager.getTasksForDate(currentDate);","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"NicholasTanYY"},"content":"                printTaskForDay(dayTasks, taskIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printTaskForDay(List\u003cString\u003e dayTasks, int taskIndex) {","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"NicholasTanYY"},"content":"        if (taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"NicholasTanYY"},"content":"            String task \u003d dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.printf(TASK_DISPLAY_FORMAT, task);","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"NicholasTanYY"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.print(EMPTY_TASK_DISPLAY_FORMAT);","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"NicholasTanYY"},"content":"    public static int getMaxTasks(LocalDate startOfWeek, TaskManager taskManager) {","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"NicholasTanYY"},"content":"        int maxTasks \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"NicholasTanYY"},"content":"        for (int i \u003d 0; i \u003c numberOfDaysInWeek; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"NicholasTanYY"},"content":"            LocalDate currentDate \u003d startOfWeek.plusDays(i);","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"NicholasTanYY"},"content":"            int tasksSize \u003d taskManager.getTasksForDate(currentDate).size();","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"NicholasTanYY"},"content":"            if (tasksSize \u003e maxTasks) {","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"NicholasTanYY"},"content":"                maxTasks \u003d tasksSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"NicholasTanYY"},"content":"        return maxTasks;","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"Aak242"},"content":"  ","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"    public static void printSeparator() {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"            System.out.print(\"+------------\");","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"+\");","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"NicholasTanYY":87,"clarencepohh":3,"Mahesh1772":6,"Aak242":2}},{"path":"src/test/java/data/TaskManagerExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateInCurrentMonth;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"public class TaskManagerExceptionTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateInCurrentMonth_pastDateGiven_exceptionThrown () {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"            checkIfDateInCurrentMonth(LocalDate.parse(\"1111-11-11\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"        }, \"TaskManagerException was expected\");","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"        Assertions.assertEquals(\"The date must be within the current month. \" + \"Please try again.\",","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateInCurrentMonth_futureDateGiven_exceptionThrown () {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"            checkIfDateInCurrentMonth(LocalDate.parse(\"2222-11-11\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"        }, \"TaskManagerException was expected\");","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"        Assertions.assertEquals(\"The date must be within the current month. \" + \"Please try again.\",","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"clarencepohh":31}},{"path":"src/test/java/seedu/duke/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class StorageTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"kyhjonathan":4}},{"path":"src/test/java/ui/UiRendererTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"import static ui.UiRenderer.printTaskForDay;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"public class UiRendererTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"    public static List\u003cString\u003e tasks \u003d List.of(\"task1\", \"task2\", \"task3\", \"task4\");","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"    public static List\u003cString\u003e emptyTaskList \u003d List.of();    ","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"    private static final int SPACE_COUNT \u003d 15;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String VERTICAL_DIVIDER \u003d \"|\";","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" %-\" + SPACE_COUNT + \".\" + SPACE_COUNT + \"s \";","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String EMPTY_TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" \".repeat(SPACE_COUNT+1) + \" \";","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"    @AfterEach","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"    void printTaskForDay_noTasks_printsNoTasks() {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"        printTaskForDay(emptyTaskList, 0);","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"        assertTrue(outContent.toString().equals(EMPTY_TASK_DISPLAY_FORMAT));","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"    void printTaskForDay_hasTask_printsTaskWithFormat() {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"        printTaskForDay(tasks, 0);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"        assertTrue(outContent.toString().equals(String.format(TASK_DISPLAY_FORMAT, tasks.get(0))));","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"NicholasTanYY":48}},{"path":"text-ui-test/changeExpected.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"# reset saved file from previous run","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"save/tasks.txt\" ]","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"then ","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"    rm save/tasks.txt","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"then","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"    mkdir ../bin","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"# delete output from previous run","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"./EXPECTED-UNIX.TXT\" ]","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"then ","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"    rm EXPECTED-UNIX.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"if ! javac -cp . -d ../bin $(find ../src/main/java -name \"*.java\" -print)","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"then","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"    exit 1","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"# run the program, feed commands from input.txt file and redirect the output to the EXPECTED-UNIX.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"if java -classpath ../bin seedu/duke/Main \u003c input.txt \u003e EXPECTED-UNIX.TXT; then","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"EXPECTED-UNIX.TXT changed according to the output from commands in input.txt!\"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"else","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"An error occurred\"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"    exit 1","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"NicholasTanYY":34}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"# reset saved file from previous run","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"save/tasks.txt\" ]","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"then ","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"    rm save/tasks.txt","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL-UNIX.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"diff EXPECTED-UNIX.TXT ACTUAL-UNIX.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NicholasTanYY":7,"-":20}}]
