[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"    mainClass.set(\"seedu.duke.Main\")","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"clarencepohh":2,"-":45}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Display |     Name     | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"--------|:------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Aakash Ramaswamy   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Nicholas Tan Yun Yu   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Sivagnanam Maheshwarn   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Jonathan Kuek   | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Clarence Poh | [Github](https://github.com/clarencepohh) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Mahesh1772":4,"clarencepohh":2,"NicholasTanYY":1,"-":3}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"# CLI-nton","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Mahesh1772":1,"-":7}},{"path":"src/main/java/data/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    protected String byDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"     * Deadlines are also considered as tasks.","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * @param by The date of the task\u0027s deadline as a string.","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"        this.byDate \u003d by;","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"     * Getter for by date of Deadline task.","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the by date.","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    public String getByDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"        return byDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     * Override function of superclass Task.","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"     * @return D which represents a Deadline task.","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType () {","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"        return \"D\";","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for a Deadline task.","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the save format for this task.","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"        return getTaskType() + \"|\" + getName() + \"|\" + getByDate();","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":52}},{"path":"src/main/java/data/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    protected String startDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"    protected String endDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"     * Events are also considered as tasks.","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     * @param start The starting time/date of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"     * @param end The ending time/date of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"        this.startDate \u003d start;","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"        this.endDate \u003d end;","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"     * Getter for start date of Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the start date.","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"        return startDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"     * Getter for end date of Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the end date.","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"        return endDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"     * Override function of superclass Task.","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"     * @return E which represents an Event task.","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"        return \"E\";","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for an Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the save format for this task.","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"        return getTaskType() + \"|\" + getName() + \"|\" + getStartDate() + \"|\" + getEndDate();","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":67}},{"path":"src/main/java/data/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    protected String name;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"    public Task(String name) {","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"     * Returns the name of the task that invokes this function.","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"     * @return Returns the string of the task\u0027s name.","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    public String getName() {","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"        return name;","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"     * Sets the task\u0027s name to the given name.","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name to set the task\u0027s name to.","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"     * Checks if a task is complete and returns true if complete, false if incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"     * @return The boolean value that represents whether a task is completed:","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"        return isCompleted;","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"     * Sets the completeness status of a task.","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"     * @param completed Boolean value to set the task to.","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"    public void setCompleteness(boolean completed) {","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"        isCompleted \u003d completed;","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"     * Checks the completeness status of a task and returns to the","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"     * caller the status icon of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"     * \"X\" for complete, \" \" for incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"     * @return String representation of completeness status icon.","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"        return (isCompleted ? \"X\" : \" \");","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"clarencepohh"},"content":"     * @return ? which represents an unclassified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"        return \"?\";","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"     * Getter for start date for an Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the Event subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"     * Getter for end date for an Event task.","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the Event subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"clarencepohh"},"content":"     * Getter for by date for a Deadline task.","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the Deadline subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"clarencepohh"},"content":"    public String getByDate() {","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for a task.","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"clarencepohh"},"content":"     * It is a dummy function meant for the subclass to override.","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"clarencepohh"},"content":"     * @return Empty string.","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"clarencepohh"},"content":"        return \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":119}},{"path":"src/main/java/data/TaskManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import time.MonthView;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateHasTasks;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateInCurrentWeek;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateInCurrentMonth;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.DEADLINE;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.EVENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"import static storage.Storage.saveTasksToFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Aak242"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"Aak242"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"Aak242"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Aak242"},"content":" * Manages tasks by providing functionalities to add, delete, and update tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Aak242"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"public class TaskManager {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"    private static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"    private static final Map\u003cLocalDate, List\u003cTask\u003e\u003e tasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Aak242"},"content":"     * Adds a task for a specific date.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Aak242"},"content":"     * @param date The date for the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"     * @param taskType The TaskType of the task to be added.","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"     * @param dates A String array that contains the relevant dates for the task to be added.","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"    public static void addTask(LocalDate date, String taskDescription, TaskType taskType, String[] dates)","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"        Task taskToAdd;","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"        switch (taskType) {","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"        case TODO:","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"            taskToAdd \u003d new Todo(taskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"        case EVENT:","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"            String startDate \u003d dates[0];","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"            String endDate \u003d dates[1];","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"            taskToAdd \u003d new Event(taskDescription, startDate, endDate);","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"clarencepohh"},"content":"        case DEADLINE:","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"            String deadline \u003d dates[0];","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"            taskToAdd \u003d new Deadline(taskDescription, deadline);","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"        default:","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"            throw new TaskManagerException(\"Invalid task type given. T for Todo, E for event, D for deadline.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"        tasks.computeIfAbsent(date, k -\u003e new ArrayList\u003c\u003e()).add(taskToAdd);","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"Aak242"},"content":"     * Deletes a task for a specific date and task index.","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"Aak242"},"content":"     * @param date The date of the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"Aak242"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"    public void deleteTask(LocalDate date, int taskIndex) {","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"        if (dayTasks !\u003d null \u0026\u0026 taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"            dayTasks.remove(taskIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"            if (dayTasks.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"                tasks.remove(date);","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(\"Task deleted.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(\"The task you are trying to delete does not exist.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Aak242"},"content":"     * Updates a task for a specific date and task index.","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"Aak242"},"content":"     * @param date              The date of the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Aak242"},"content":"     * @param taskIndex         The index of the task to update.","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"     * @param newTaskDescription The updated description of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"Aak242"},"content":"     * @throws IndexOutOfBoundsException If the task index is out of bounds.","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"    public static void updateTask(LocalDate date, int taskIndex, String newTaskDescription)","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"            throws IndexOutOfBoundsException, TaskManagerException {","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"Aak242"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"clarencepohh"},"content":"            List\u003cTask\u003e dayTasks \u003d tasks.get(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"            if (dayTasks \u003d\u003d null || taskIndex \u003c 0 || taskIndex \u003e\u003d dayTasks.size()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"                throw new TaskManagerException(\"The task you are trying to update does not exist.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":106,"author":{"gitId":"Aak242"},"content":"            String oldDescription \u003d dayTasks.get(taskIndex).getName();","lastModifiedDate":"2024-03-22"},{"lineNumber":107,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"clarencepohh"},"content":"            Task task \u003d new Task(newTaskDescription);","lastModifiedDate":"2024-03-22"},{"lineNumber":109,"author":{"gitId":"clarencepohh"},"content":"            dayTasks.set(taskIndex, task);","lastModifiedDate":"2024-03-22"},{"lineNumber":110,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":111,"author":{"gitId":"clarencepohh"},"content":"            logger.log(Level.INFO, \"Updating task description from \" +","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"clarencepohh"},"content":"                    oldDescription + \" to: \" + newTaskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"Aak242"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"Mahesh1772"},"content":"            throw new IndexOutOfBoundsException(\"Task index is out of bounds.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"Aak242"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"Aak242"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"Aak242"},"content":"     * Retrieves tasks for a specific date.","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"Aak242"},"content":"     * @param date The date to retrieve tasks for.","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"Aak242"},"content":"     * @return A list of tasks for the given date.","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"Aak242"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"clarencepohh"},"content":"    public List\u003cTask\u003e getTasksForDate(LocalDate date) {","lastModifiedDate":"2024-03-22"},{"lineNumber":126,"author":{"gitId":"clarencepohh"},"content":"        return tasks.getOrDefault(date, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"Aak242"},"content":"     * Adds a task from user input along with the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"Aak242"},"content":"     * @param weekView WeekView object to validate the date.","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"Aak242"},"content":"     * @param inMonthView A boolean indicating whether the view is in month view or not.","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"Aak242"},"content":"     * @throws TaskManagerException If there is an error in managing tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"clarencepohh"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-03-23"},{"lineNumber":136,"author":{"gitId":"Mahesh1772"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"Mahesh1772"},"content":"    public void addManager(WeekView weekView, MonthView monthView,boolean inMonthView, String action,","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"Mahesh1772"},"content":"            String day, String taskTypeString, String taskDescription)","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"Mahesh1772"},"content":"            throws TaskManagerException,DateTimeParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"Mahesh1772"},"content":"        // Convert the day to a LocalDate","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"Mahesh1772"},"content":"        // Convert the dayString to date range","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"Mahesh1772"},"content":"        String[] dates \u003d new String[2];","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"Mahesh1772"},"content":"        if (day.contains(\"-\")) {","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"Mahesh1772"},"content":"            dates \u003d day.split(\"-\");","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"Mahesh1772"},"content":"            dates[0] \u003d day;","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"Mahesh1772"},"content":"        // Convert dayString to int","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"Mahesh1772"},"content":"        int dayInt \u003d Integer.parseInt(day);","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"Mahesh1772"},"content":"        // Check if the date is in the current week/month view","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"Mahesh1772"},"content":"        if (inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d monthView.getStartOfMonth().plusDays(dayInt - 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"Mahesh1772"},"content":"            checkIfDateInCurrentMonth(date);","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d weekView.getStartOfWeek().plusDays(dayInt - 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"clarencepohh"},"content":"            checkIfDateInCurrentWeek(date, weekView);","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"Mahesh1772"},"content":"        // Parse the task type","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"Mahesh1772"},"content":"        TaskType taskType \u003d parseTaskType(taskTypeString.toUpperCase());","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":167,"author":{"gitId":"Mahesh1772"},"content":"        if (taskType \u003d\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"Invalid task type. Please provide valid task type: \" +","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"Mahesh1772"},"content":"                    \"T for Todo, E for event, D for deadline.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":171,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":172,"author":{"gitId":"Mahesh1772"},"content":"        // Add the task based on the parsed inputs","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"Mahesh1772"},"content":"        addTask(date, taskDescription, taskType, dates); // Assuming no additional dates are needed for the task","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"Mahesh1772"},"content":"        // Save tasks to file","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"Mahesh1772"},"content":"        saveTasksToFile(tasks, Storage.FILE_PATH); // Update tasks.txt file","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"clarencepohh"},"content":"        System.out.println(\"Task added.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"clarencepohh"},"content":"     * Method that parses the TaskType to be specified based on the user\u0027s input.","lastModifiedDate":"2024-03-23"},{"lineNumber":183,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":184,"author":{"gitId":"clarencepohh"},"content":"     * @param userInput The String containing the user\u0027s cleaned input.","lastModifiedDate":"2024-03-23"},{"lineNumber":185,"author":{"gitId":"clarencepohh"},"content":"     * @return TaskType of the user\u0027s choosing.","lastModifiedDate":"2024-03-23"},{"lineNumber":186,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":187,"author":{"gitId":"clarencepohh"},"content":"    public static TaskType parseTaskType(String userInput) {","lastModifiedDate":"2024-03-23"},{"lineNumber":188,"author":{"gitId":"clarencepohh"},"content":"        TaskType currentTaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":189,"author":{"gitId":"clarencepohh"},"content":"        switch (userInput) {","lastModifiedDate":"2024-03-23"},{"lineNumber":190,"author":{"gitId":"clarencepohh"},"content":"        case \"T\":","lastModifiedDate":"2024-03-23"},{"lineNumber":191,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":192,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":193,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":194,"author":{"gitId":"clarencepohh"},"content":"        case \"D\":","lastModifiedDate":"2024-03-23"},{"lineNumber":195,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d DEADLINE;","lastModifiedDate":"2024-03-23"},{"lineNumber":196,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":197,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":198,"author":{"gitId":"clarencepohh"},"content":"        case \"E\":","lastModifiedDate":"2024-03-23"},{"lineNumber":199,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d EVENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":200,"author":{"gitId":"clarencepohh"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":201,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":202,"author":{"gitId":"clarencepohh"},"content":"        default:","lastModifiedDate":"2024-03-23"},{"lineNumber":203,"author":{"gitId":"clarencepohh"},"content":"            currentTaskType \u003d null;","lastModifiedDate":"2024-03-23"},{"lineNumber":204,"author":{"gitId":"clarencepohh"},"content":"            // intentional fallthrough since addTask method checks for invalid taskType already","lastModifiedDate":"2024-03-23"},{"lineNumber":205,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":206,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":207,"author":{"gitId":"clarencepohh"},"content":"        return currentTaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":208,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":209,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":210,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":211,"author":{"gitId":"clarencepohh"},"content":"     * Prompts user for updated task description.","lastModifiedDate":"2024-03-23"},{"lineNumber":212,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"clarencepohh"},"content":"     * @param scanner User input.","lastModifiedDate":"2024-03-23"},{"lineNumber":214,"author":{"gitId":"clarencepohh"},"content":"     * @param weekView Current week being viewed.","lastModifiedDate":"2024-03-23"},{"lineNumber":215,"author":{"gitId":"clarencepohh"},"content":"     * @param inMonthView Whether month is being viewed.","lastModifiedDate":"2024-03-23"},{"lineNumber":216,"author":{"gitId":"clarencepohh"},"content":"     * @param taskManager The taskManager class being used.","lastModifiedDate":"2024-03-23"},{"lineNumber":217,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException If not in correct week/month view.","lastModifiedDate":"2024-03-23"},{"lineNumber":218,"author":{"gitId":"clarencepohh"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-03-23"},{"lineNumber":219,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"Mahesh1772"},"content":"    public void updateManager(Scanner scanner, WeekView weekView, MonthView monthView, boolean inMonthView,","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"Mahesh1772"},"content":"                              TaskManager taskManager,int day, int taskIndex, String newDescription)","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"kyhjonathan"},"content":"            throws TaskManagerException, DateTimeParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"Mahesh1772"},"content":"        // Convert the day to a LocalDate","lastModifiedDate":"2024-03-24"},{"lineNumber":225,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-24"},{"lineNumber":226,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":227,"author":{"gitId":"Mahesh1772"},"content":"        // Check if the date is in the current week/month view","lastModifiedDate":"2024-03-24"},{"lineNumber":228,"author":{"gitId":"kyhjonathan"},"content":"        if (inMonthView) {","lastModifiedDate":"2024-03-19"},{"lineNumber":229,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d monthView.getStartOfMonth().plusDays(day - 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":230,"author":{"gitId":"kyhjonathan"},"content":"            checkIfDateInCurrentMonth(date);","lastModifiedDate":"2024-03-19"},{"lineNumber":231,"author":{"gitId":"kyhjonathan"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":232,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d weekView.getStartOfWeek().plusDays(day - 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":233,"author":{"gitId":"kyhjonathan"},"content":"            checkIfDateInCurrentWeek(date, weekView);","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":235,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":236,"author":{"gitId":"Mahesh1772"},"content":"        // Update the task based on the parsed inputs","lastModifiedDate":"2024-03-24"},{"lineNumber":237,"author":{"gitId":"Mahesh1772"},"content":"        updateTask(date, taskIndex - 1, newDescription); // Subtract 1 to convert to zero-based index","lastModifiedDate":"2024-03-25"},{"lineNumber":238,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"Task updated.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":239,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":240,"author":{"gitId":"Mahesh1772"},"content":"        // Save tasks to file","lastModifiedDate":"2024-03-24"},{"lineNumber":241,"author":{"gitId":"kyhjonathan"},"content":"        saveTasksToFile(tasks, Storage.FILE_PATH); // Update tasks.txt file","lastModifiedDate":"2024-03-19"},{"lineNumber":242,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":243,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":244,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":245,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":246,"author":{"gitId":"Aak242"},"content":"     * Adds tasks from a file to the TaskManager.","lastModifiedDate":"2024-03-19"},{"lineNumber":247,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":248,"author":{"gitId":"Aak242"},"content":"     * @param tasksFromFile A map containing tasks read from a file.","lastModifiedDate":"2024-03-19"},{"lineNumber":249,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException If there is an error adding tasks.","lastModifiedDate":"2024-03-23"},{"lineNumber":250,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":251,"author":{"gitId":"clarencepohh"},"content":"    public void addTasksFromFile(Map\u003cLocalDate, List\u003cTask\u003e\u003e tasksFromFile) throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":252,"author":{"gitId":"clarencepohh"},"content":"        for (Map.Entry\u003cLocalDate, List\u003cTask\u003e\u003e entry : tasksFromFile.entrySet()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":253,"author":{"gitId":"kyhjonathan"},"content":"            LocalDate date \u003d entry.getKey();","lastModifiedDate":"2024-03-18"},{"lineNumber":254,"author":{"gitId":"clarencepohh"},"content":"            List\u003cTask\u003e taskList \u003d entry.getValue();","lastModifiedDate":"2024-03-22"},{"lineNumber":255,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":256,"author":{"gitId":"clarencepohh"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-03-22"},{"lineNumber":257,"author":{"gitId":"clarencepohh"},"content":"                String taskDescription \u003d task.getName();","lastModifiedDate":"2024-03-22"},{"lineNumber":258,"author":{"gitId":"clarencepohh"},"content":"                TaskType taskType \u003d parseTaskType(task.getTaskType());","lastModifiedDate":"2024-03-23"},{"lineNumber":259,"author":{"gitId":"clarencepohh"},"content":"                String[] dates \u003d new String[]{null, null};","lastModifiedDate":"2024-03-23"},{"lineNumber":260,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":261,"author":{"gitId":"clarencepohh"},"content":"                switch (taskType) {","lastModifiedDate":"2024-03-23"},{"lineNumber":262,"author":{"gitId":"clarencepohh"},"content":"                case TODO:","lastModifiedDate":"2024-03-23"},{"lineNumber":263,"author":{"gitId":"clarencepohh"},"content":"                    dates[0] \u003d taskDescription;","lastModifiedDate":"2024-03-23"},{"lineNumber":264,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-03-23"},{"lineNumber":265,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":266,"author":{"gitId":"clarencepohh"},"content":"                case EVENT:","lastModifiedDate":"2024-03-23"},{"lineNumber":267,"author":{"gitId":"clarencepohh"},"content":"                    String startDate \u003d task.getStartDate();","lastModifiedDate":"2024-03-23"},{"lineNumber":268,"author":{"gitId":"clarencepohh"},"content":"                    String endDate \u003d task.getEndDate();","lastModifiedDate":"2024-03-23"},{"lineNumber":269,"author":{"gitId":"clarencepohh"},"content":"                    dates[0] \u003d startDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":270,"author":{"gitId":"clarencepohh"},"content":"                    dates[1] \u003d endDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":271,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-03-23"},{"lineNumber":272,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":273,"author":{"gitId":"clarencepohh"},"content":"                case DEADLINE:","lastModifiedDate":"2024-03-23"},{"lineNumber":274,"author":{"gitId":"clarencepohh"},"content":"                    String deadline \u003d task.getByDate();","lastModifiedDate":"2024-03-23"},{"lineNumber":275,"author":{"gitId":"clarencepohh"},"content":"                    dates[0] \u003d deadline;","lastModifiedDate":"2024-03-23"},{"lineNumber":276,"author":{"gitId":"clarencepohh"},"content":"                    break;","lastModifiedDate":"2024-03-23"},{"lineNumber":277,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":278,"author":{"gitId":"clarencepohh"},"content":"                default:","lastModifiedDate":"2024-03-23"},{"lineNumber":279,"author":{"gitId":"clarencepohh"},"content":"                    logger.log(Level.INFO, \"Task to add was invalid. Task in question: \" + taskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":280,"author":{"gitId":"clarencepohh"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":281,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":282,"author":{"gitId":"clarencepohh"},"content":"                addTask(date, taskDescription, taskType, dates);","lastModifiedDate":"2024-03-23"},{"lineNumber":283,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":284,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":285,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":286,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":287,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":288,"author":{"gitId":"clarencepohh"},"content":"     * Lists task of the input date.","lastModifiedDate":"2024-03-23"},{"lineNumber":289,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":290,"author":{"gitId":"clarencepohh"},"content":"     * @param taskManager Hashmap of tasks.","lastModifiedDate":"2024-03-23"},{"lineNumber":291,"author":{"gitId":"clarencepohh"},"content":"     * @param date Date that\u0027s prompted by user.","lastModifiedDate":"2024-03-23"},{"lineNumber":292,"author":{"gitId":"clarencepohh"},"content":"     * @param message Message to be prompted to the user.","lastModifiedDate":"2024-03-23"},{"lineNumber":293,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException If not in correct week/month view.","lastModifiedDate":"2024-03-23"},{"lineNumber":294,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":295,"author":{"gitId":"clarencepohh"},"content":"    private static void listTasksAtDate(TaskManager taskManager, LocalDate date, String message)","lastModifiedDate":"2024-03-18"},{"lineNumber":296,"author":{"gitId":"clarencepohh"},"content":"            throws TaskManagerException {","lastModifiedDate":"2024-03-18"},{"lineNumber":297,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":298,"author":{"gitId":"clarencepohh"},"content":"        checkIfDateHasTasks(dayTasks);","lastModifiedDate":"2024-03-16"},{"lineNumber":299,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":300,"author":{"gitId":"Aak242"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-17"},{"lineNumber":301,"author":{"gitId":"clarencepohh"},"content":"        for (int i \u003d 0; i \u003c dayTasks.size(); i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":302,"author":{"gitId":"clarencepohh"},"content":"            System.out.println((i + 1) + \". \" + dayTasks.get(i).getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":303,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":304,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":305,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":306,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":307,"author":{"gitId":"clarencepohh"},"content":"     * Prompts user for task description and deletes task from hashmap and tasks.txt file.","lastModifiedDate":"2024-03-23"},{"lineNumber":308,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":309,"author":{"gitId":"clarencepohh"},"content":"     * @param weekView Current week being viewed.","lastModifiedDate":"2024-03-23"},{"lineNumber":310,"author":{"gitId":"clarencepohh"},"content":"     * @param inMonthView Whether month is being viewed.","lastModifiedDate":"2024-03-23"},{"lineNumber":311,"author":{"gitId":"clarencepohh"},"content":"     * @param taskManager The taskManager class being used.","lastModifiedDate":"2024-03-23"},{"lineNumber":312,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException If not in correct week/month view","lastModifiedDate":"2024-03-23"},{"lineNumber":313,"author":{"gitId":"clarencepohh"},"content":"     * @throws DateTimeParseException If there is an error parsing the date.","lastModifiedDate":"2024-03-23"},{"lineNumber":314,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":315,"author":{"gitId":"Mahesh1772"},"content":"    public static void deleteManager(WeekView weekView,MonthView monthView, boolean inMonthView,","lastModifiedDate":"2024-03-25"},{"lineNumber":316,"author":{"gitId":"Mahesh1772"},"content":"            TaskManager taskManager,String day, int taskIndex) throws TaskManagerException, DateTimeParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":317,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":318,"author":{"gitId":"Mahesh1772"},"content":"        // Convert the day to a LocalDate","lastModifiedDate":"2024-03-24"},{"lineNumber":319,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate date;","lastModifiedDate":"2024-03-25"},{"lineNumber":320,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":321,"author":{"gitId":"Mahesh1772"},"content":"        int dayInt \u003d Integer.parseInt(day);","lastModifiedDate":"2024-03-25"},{"lineNumber":322,"author":{"gitId":"Mahesh1772"},"content":"        // Check if the date is in the current week/month view","lastModifiedDate":"2024-03-24"},{"lineNumber":323,"author":{"gitId":"kyhjonathan"},"content":"        if (inMonthView) {","lastModifiedDate":"2024-03-19"},{"lineNumber":324,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d monthView.getStartOfMonth().plusDays(dayInt - 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":325,"author":{"gitId":"kyhjonathan"},"content":"            checkIfDateInCurrentMonth(date);","lastModifiedDate":"2024-03-19"},{"lineNumber":326,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":327,"author":{"gitId":"kyhjonathan"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":328,"author":{"gitId":"Mahesh1772"},"content":"            date \u003d weekView.getStartOfWeek().plusDays(dayInt - 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":329,"author":{"gitId":"Aak242"},"content":"            checkIfDateInCurrentWeek(date, weekView);","lastModifiedDate":"2024-03-17"},{"lineNumber":330,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":331,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":332,"author":{"gitId":"Mahesh1772"},"content":"        // Delete the task based on the parsed inputs","lastModifiedDate":"2024-03-24"},{"lineNumber":333,"author":{"gitId":"Mahesh1772"},"content":"        taskManager.deleteTask(date, taskIndex - 1); // Subtract 1 to convert to zero-based index","lastModifiedDate":"2024-03-24"},{"lineNumber":334,"author":{"gitId":"Mahesh1772"},"content":"        //System.out.println(\"Task deleted.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":335,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":336,"author":{"gitId":"Mahesh1772"},"content":"        // Save tasks to file","lastModifiedDate":"2024-03-24"},{"lineNumber":337,"author":{"gitId":"kyhjonathan"},"content":"        saveTasksToFile(tasks, Storage.FILE_PATH); // Update tasks.txt file","lastModifiedDate":"2024-03-19"},{"lineNumber":338,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":339,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":340,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":341,"author":{"gitId":"clarencepohh"},"content":"     * Function to delete all tasks on a specified date.","lastModifiedDate":"2024-03-22"},{"lineNumber":342,"author":{"gitId":"clarencepohh"},"content":"     * Currently only used to complement JUnit testing.","lastModifiedDate":"2024-03-22"},{"lineNumber":343,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":344,"author":{"gitId":"clarencepohh"},"content":"     * @param taskManager The taskManager class in use.","lastModifiedDate":"2024-03-22"},{"lineNumber":345,"author":{"gitId":"clarencepohh"},"content":"     * @param specifiedDate The date on which all tasks are to be deleted.","lastModifiedDate":"2024-03-22"},{"lineNumber":346,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":347,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":348,"author":{"gitId":"clarencepohh"},"content":"    public static void deleteAllTasksOnDate (TaskManager taskManager, LocalDate specifiedDate) {","lastModifiedDate":"2024-03-22"},{"lineNumber":349,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e dayTasks \u003d tasks.get(specifiedDate);","lastModifiedDate":"2024-03-22"},{"lineNumber":350,"author":{"gitId":"clarencepohh"},"content":"        int numOfTasks \u003d dayTasks.size();","lastModifiedDate":"2024-03-22"},{"lineNumber":351,"author":{"gitId":"clarencepohh"},"content":"        for (int i \u003d numOfTasks; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-03-22"},{"lineNumber":352,"author":{"gitId":"clarencepohh"},"content":"            taskManager.deleteTask(specifiedDate, i - 1);","lastModifiedDate":"2024-03-22"},{"lineNumber":353,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":354,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":355,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":356,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"clarencepohh":193,"Mahesh1772":72,"Aak242":53,"kyhjonathan":38}},{"path":"src/main/java/data/TaskManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"public class TaskManagerException extends Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"    public static final String NOT_CURRENT_WEEK_MESSAGE \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"            \"The date must be within the current week. Please try again.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    public static final String NOT_CURRENT_MONTH_MESSAGE \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"            \"The date must be within the current month. Please try again.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for TaskManagerException class","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"     * Uses constructor from Exception superclass","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"     * @param errorMessage The error message to be printed to the console","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    public TaskManagerException(String errorMessage) {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"        super(errorMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"     * Method that checks if the date is in the current week shown by the calendar.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"     * @param date The date to be checked.","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     * @param weekView The current week view shown by the calendar.","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException if date is not in the current week.","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"    public static void checkIfDateInCurrentWeek(LocalDate date, WeekView weekView) throws TaskManagerException {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfWeek \u003d weekView.getStartOfWeek();","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate endOfWeek \u003d startOfWeek.plusDays(6);","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"        if (date.isBefore(startOfWeek) || date.isAfter(endOfWeek)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(NOT_CURRENT_WEEK_MESSAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"clarencepohh"},"content":"     * Method that checks if the date is in the current month shown by the calendar.","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"     * @param date The date to be checked.","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException if date is not in the current month.","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"    public static void checkIfDateInCurrentMonth(LocalDate date) throws TaskManagerException {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"        int currentMonth \u003d currentDate.getMonthValue();","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"        int currentYear \u003d currentDate.getYear();","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"        int providedMonth \u003d date.getMonthValue();","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"        int providedYear \u003d date.getYear();","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"        if (currentMonth !\u003d providedMonth || currentYear !\u003d providedYear) {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(NOT_CURRENT_MONTH_MESSAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"     * Method that checks if a specified date has existing tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"kyhjonathan"},"content":"     * @param dayTasks The List containing the list of tasks for the specified date.","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"     * @throws TaskManagerException if the specified date has no tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"    public static void checkIfDateHasTasks(List\u003cTask\u003e dayTasks) throws TaskManagerException {","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"        if (dayTasks.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"            throw new TaskManagerException(\"No tasks to delete on this date.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"clarencepohh":35,"Mahesh1772":38,"kyhjonathan":1}},{"path":"src/main/java/data/TaskType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public enum TaskType {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"    TODO,","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"    EVENT,","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"    DEADLINE","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":7}},{"path":"src/main/java/data/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"     * Constructor for new tasks given its name.","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"     * Tasks are initialized as incomplete.","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"     * Increments the class-level element totalNumTasks by 1.","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"     * Todos are also considered as tasks.","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"     * @param name The name of the task to be created.","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"        super(name);","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"     * Returns the task type of the specified task.","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"     * Override function of superclass Task.","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"     * @return T which represents a Todo task.","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"    public String getTaskType () {","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"        return \"T\";","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"     * Method that creates the save format for a Todo task.","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"     * Overrides super dummy function.","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"     * @return The String representation of the save format for this task.","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"clarencepohh"},"content":"    public String getSaveFormat () {","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"        return getTaskType() + \"|\" + getName();","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"clarencepohh":39}},{"path":"src/main/java/log/FileLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package log;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"public class FileLogger {","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"    private static final Path LOG_FILE_PATH \u003d Path.of(\"./logs.log\");","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"    public static void setupLogger() {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"            Logger fileLogger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE_PATH.toString(), true);","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"            fileLogger.setUseParentHandlers(false);","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"            fileLogger.addHandler(fileHandler);","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"NicholasTanYY":23}},{"path":"src/main/java/seedu/duke/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import time.DateUtils;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import time.MonthView;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManagerException;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"import log.FileLogger;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"import static storage.Storage.createNewFile;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.deleteManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.printHelp;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"public class Main {","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"    private static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    public static void main(String[] args) throws IOException, TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"        FileLogger.setupLogger();","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"        LocalDate startOfWeek \u003d DateUtils.getStartOfWeek(today);","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"clarencepohh"},"content":"        WeekView weekView \u003d new WeekView(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"clarencepohh"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfMonth \u003d today.withDayOfMonth(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"        MonthView monthView \u003d new MonthView(startOfMonth, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"        boolean printWeek \u003d true; // Flag to control printing of the week view","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"        boolean inMonthView \u003d false; // Flag to indicate if we are in month view mode","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"        createNewFile(Storage.FILE_PATH); //Creates directory and tasks.txt file if it does not exist","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"        Map\u003cLocalDate, List\u003cTask\u003e\u003e tasksFromFile \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"kyhjonathan"},"content":"                Storage.loadTasksFromFile(Storage.FILE_PATH); //Reads tasks from txt file","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"        taskManager.addTasksFromFile(tasksFromFile); //Loads tasks from txt file","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"clarencepohh"},"content":"        while (true) {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"            if (printWeek) {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"                if (!inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"                    weekView.printView(taskManager);","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"                } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"                    monthView.printView(taskManager);","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"            printWeek \u003d true; // Reset flag for the next iteration","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(\"Enter help to learn commands\");","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"            String input \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"            String command \u003d input.split(\",\")[0];","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"            switch (command) {","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"            case \"next\":","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"                if (inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"                    monthView.next();","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"                } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"                    weekView.next();","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"            case \"prev\":","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"                if (inMonthView) {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"                    monthView.previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"                } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"                    weekView.previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"                } ","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Aak242"},"content":"            case \"update\":","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"NicholasTanYY"},"content":"                try {","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"                    String[] parts \u003d input.split(\",\\\\s*\");","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"                    if (parts.length \u003c 4) {","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Mahesh1772"},"content":"                        throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"                                \"update, \u003cday\u003e, \u003ctaskIndex\u003e, \u003cnewDescription\u003e\");","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"                    }","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"                    int day \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"                    int taskIndex \u003d Integer.parseInt(parts[2].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"                    String newDescription \u003d parts[3].trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"                    taskManager.updateManager(scanner, weekView, monthView, inMonthView, taskManager, day,","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Mahesh1772"},"content":"                            taskIndex, newDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"                } catch (TaskManagerException | DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"NicholasTanYY"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"NicholasTanYY"},"content":"                }","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"Aak242"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"            case \"add\":","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"                try {","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"                    String[] parts \u003d input.split(\",\\\\s*\");","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"                    if (parts.length \u003c 4) {","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"                        throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"                                \"add, \u003cday\u003e, \u003ctaskType\u003e, \u003ctaskDescription\u003e\");","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"                    }","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"                    String action \u003d parts[0];","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"                    //int day \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"                    String day \u003d parts[1].trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"                    String taskTypeString \u003d parts[2].trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"                    String taskDescription \u003d parts[3].trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"                    taskManager.addManager(weekView,monthView, inMonthView, action, day,","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"                            taskTypeString, taskDescription);","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"                } catch (TaskManagerException | DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"clarencepohh"},"content":"            case \"delete\":","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"                try {","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"                    String[] parts \u003d input.split(\",\\\\s*\");","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"Mahesh1772"},"content":"                    if (parts.length !\u003d 3) {","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"Mahesh1772"},"content":"                        throw new TaskManagerException(\"Invalid input format. Please provide input in the format: \" +","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"Mahesh1772"},"content":"                                \"delete, \u003cday\u003e, \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"Mahesh1772"},"content":"                    }","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"Mahesh1772"},"content":"                    String day \u003d parts[1].trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"Mahesh1772"},"content":"                    int taskIndex \u003d Integer.parseInt(parts[2].trim());","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"Mahesh1772"},"content":"                    deleteManager(weekView, monthView, inMonthView, taskManager, day, taskIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"Mahesh1772"},"content":"                } catch (TaskManagerException | DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"Mahesh1772"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"Mahesh1772"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"Mahesh1772"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"Mahesh1772"},"content":"            case \"month\":","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Mahesh1772"},"content":"                monthView.printView(taskManager);","lastModifiedDate":"2024-03-22"},{"lineNumber":123,"author":{"gitId":"Mahesh1772"},"content":"                inMonthView \u003d !inMonthView; // Toggle month view mode","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"Mahesh1772"},"content":"                printWeek \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"Mahesh1772"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"Mahesh1772"},"content":"            case \"week\":","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"Mahesh1772"},"content":"                inMonthView \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"Mahesh1772"},"content":"            case \"help\":","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"Mahesh1772"},"content":"                printHelp();","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"Mahesh1772"},"content":"                break;","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"clarencepohh"},"content":"            case \"quit\":","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"clarencepohh"},"content":"                System.out.println(\"Exiting Calendar...\");","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"clarencepohh"},"content":"                System.exit(0);","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"clarencepohh"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"clarencepohh"},"content":"            default:","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"clarencepohh"},"content":"                System.out.println(\"Invalid input. Please try again.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"clarencepohh"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"clarencepohh"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"clarencepohh":47,"Mahesh1772":78,"NicholasTanYY":6,"Aak242":2,"kyhjonathan":8}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManagerException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"import data.TaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.addTask;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.parseTaskType;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.DEADLINE;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskType.EVENT;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"kyhjonathan"},"content":"public class Storage {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"kyhjonathan"},"content":"    public static final Path FILE_PATH \u003d Path.of(\"./save/tasks.txt\");","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"    private static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"kyhjonathan"},"content":"     * Creates directory and tasks.txt if it does not exist","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"kyhjonathan"},"content":"     * @param path File Path of tests.txt file","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"kyhjonathan"},"content":"     * @throws IOException If an I/O exception occurs during file handling","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"kyhjonathan"},"content":"    public static void createNewFile(Path path) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"kyhjonathan"},"content":"        if (!Files.isDirectory(path.getParent())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"            //  System.out.println(\"Directory not found, creating new one\");","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"kyhjonathan"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.INFO, \"new directory created\");","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"kyhjonathan"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"kyhjonathan"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.INFO, \"new tests.txt file created\");","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"     * Reads tasks in hashmap and writes it in formatted form to tests.txt.","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"clarencepohh"},"content":"     * @param tasks Hashmap of tasks.","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"     * @param path File Path of tests.txt file.","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"    public static void saveTasksToFile(Map\u003cLocalDate, List\u003cTask\u003e\u003e tasks, Path path) {","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"kyhjonathan"},"content":"        try (FileWriter writer \u003d new FileWriter(path.toFile())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"            for (Map.Entry\u003cLocalDate, List\u003cTask\u003e\u003e entry : tasks.entrySet()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"kyhjonathan"},"content":"                assert entry !\u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"kyhjonathan"},"content":"                LocalDate date \u003d entry.getKey();","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"kyhjonathan"},"content":"                assert date !\u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"clarencepohh"},"content":"                List\u003cTask\u003e taskList \u003d entry.getValue();","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"kyhjonathan"},"content":"                assert taskList !\u003d null;","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"                for (Task task : taskList) {","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"clarencepohh"},"content":"                    String taskSaveFormat \u003d task.getSaveFormat();","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"clarencepohh"},"content":"                    writer.write(date + \"|\" + taskSaveFormat + System.lineSeparator());","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"clarencepohh"},"content":"                    String taskDescription \u003d task.getName();","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"                    logger.log(Level.INFO, \"task added: \" + taskDescription);","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"kyhjonathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"I/O exception occurred during file handling\");","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"kyhjonathan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"     * Loads tasks from test.txt to hashmap.","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"kyhjonathan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"clarencepohh"},"content":"     * @param path File Path of tests.txt file.","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"     * @return tasks hashmap of tasks read from test.txt.","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"kyhjonathan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"clarencepohh"},"content":"    public static Map\u003cLocalDate, List\u003cTask\u003e\u003e loadTasksFromFile(Path path) {","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"clarencepohh"},"content":"        Map\u003cLocalDate, List\u003cTask\u003e\u003e tasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-22"},{"lineNumber":82,"author":{"gitId":"kyhjonathan"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(path.toFile()))) {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"kyhjonathan"},"content":"            String line;","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"kyhjonathan"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"kyhjonathan"},"content":"                if (!checkFileFormat(line)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"kyhjonathan"},"content":"                    throw new StorageFileException();","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"kyhjonathan"},"content":"                }","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"kyhjonathan"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"kyhjonathan"},"content":"                LocalDate date \u003d LocalDate.parse(parts[0]);","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"clarencepohh"},"content":"                TaskType taskType \u003d parseTaskType(parts[1]);","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"clarencepohh"},"content":"                String taskDescription \u003d parts[2];","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"clarencepohh"},"content":"                String[] dates \u003d {null, null};","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"clarencepohh"},"content":"                if (taskType \u003d\u003d DEADLINE) {","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"clarencepohh"},"content":"                    dates[0] \u003d parts[3];","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"                } else if (taskType \u003d\u003d EVENT) {","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"clarencepohh"},"content":"                    dates[0] \u003d parts[3];","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"clarencepohh"},"content":"                    dates[1] \u003d parts[4];","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"clarencepohh"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"clarencepohh"},"content":"                addTask(date, taskDescription, taskType, dates);","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"kyhjonathan"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"kyhjonathan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"I/O exception occurred during file handling\");","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.WARNING, \"I/O exception occurred\");","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"kyhjonathan"},"content":"        } catch (StorageFileException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"kyhjonathan"},"content":"            System.out.println(\"tasks.txt is in wrong format.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"kyhjonathan"},"content":"            logger.log(Level.WARNING, \"Wrong tasks.txt format\");","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"clarencepohh"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"clarencepohh"},"content":"            logger.log(Level.WARNING, \"Invalid task type for task.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"kyhjonathan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"kyhjonathan"},"content":"        logger.log(Level.INFO, \"tasks returned\");","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"kyhjonathan"},"content":"        return tasks;","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"kyhjonathan"},"content":"    public static boolean checkFileFormat(String line) {","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"kyhjonathan"},"content":"        String regex \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\|.+\";","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"kyhjonathan"},"content":"        return line.matches(regex);","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"clarencepohh":40,"kyhjonathan":79}},{"path":"src/main/java/storage/StorageFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"public class StorageFileException extends Exception{","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"kyhjonathan":4}},{"path":"src/main/java/time/DateUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package time;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"public class DateUtils {","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"    public static LocalDate getStartOfWeek(LocalDate date) {","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"        return date.minusDays(date.getDayOfWeek().getValue() % 7);","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"clarencepohh":1,"kyhjonathan":7}},{"path":"src/main/java/time/MonthView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package time;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import java.time.YearMonth;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"import java.util.List;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.printSeparator;","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.printWeekHeader;","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"public class MonthView extends View {","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    private static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    public MonthView(LocalDate startOfMonth, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"        super(startOfMonth, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"    public void printView(TaskManager taskManager) {","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"        logger.log(Level.INFO, \"Printing calendar in month view\");","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"        assert startOfView !\u003d null : \"Start of Month missing!\";","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"        boolean isMonthView \u003d true;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"        YearMonth yearMonth \u003d YearMonth.from(startOfView);","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate firstOfMonth \u003d startOfView.withDayOfMonth(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate current \u003d firstOfMonth.with(TemporalAdjusters.previousOrSame(java.time.DayOfWeek.SUNDAY));","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"\\nMonth View: \" + yearMonth.getMonth() + \" \" + yearMonth.getYear());","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"        printWeekHeader(startOfView, dateFormatter, isMonthView);","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"        while (current.isBefore(firstOfMonth.plusMonths(1))) {","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"            printWeek(current, taskManager);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"            current \u003d current.plusWeeks(1);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"    private void printWeek(LocalDate current, TaskManager taskManager) {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"            if (current.getMonth().equals(YearMonth.from(startOfView).getMonth())) {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"                printDay(current);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"            } else {","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"                System.out.print(\"|            \");","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"            current \u003d current.plusDays(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"|\");","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"        printSeparator();","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"        int maxTasks \u003d getMaxTasksForWeek(current.minusDays(7), taskManager);","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"        printTasksForWeek(current.minusDays(7), maxTasks, taskManager);","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"        if (maxTasks \u003e 0) {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"            printSeparator();","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"    private void printDay(LocalDate current) {","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"        DateTimeFormatter dayFormatter \u003d DateTimeFormatter.ofPattern(\"d\");","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"        System.out.printf(\"| %-10s \", dayFormatter.format(current));","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"    private int getMaxTasksForWeek(LocalDate weekStart, TaskManager taskManager) {","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Mahesh1772"},"content":"        int maxTasks \u003d 0;","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"Mahesh1772"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"Mahesh1772"},"content":"            LocalDate date \u003d weekStart.plusDays(i);","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"Mahesh1772"},"content":"            maxTasks \u003d Math.max(maxTasks, taskManager.getTasksForDate(date).size());","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"        return maxTasks;","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"Mahesh1772"},"content":"    private void printTasksForWeek(LocalDate weekStart, int maxTasks, TaskManager taskManager) {","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Mahesh1772"},"content":"        for (int taskIndex \u003d 0; taskIndex \u003c maxTasks; taskIndex++) {","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"Mahesh1772"},"content":"            for (int dayIndex \u003d 0; dayIndex \u003c 7; dayIndex++) {","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"Mahesh1772"},"content":"                LocalDate date \u003d weekStart.plusDays(dayIndex);","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"Mahesh1772"},"content":"                List\u003cTask\u003e dayTasks \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"Mahesh1772"},"content":"                printTaskForDay(dayTasks, taskIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"Mahesh1772"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"Mahesh1772"},"content":"            System.out.println(\"|\");","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":85,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"Mahesh1772"},"content":"    private void printTaskForDay(List\u003cTask\u003e dayTasks, int taskIndex) {","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"Mahesh1772"},"content":"        if (taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"Mahesh1772"},"content":"            Task task \u003d dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Mahesh1772"},"content":"            System.out.printf(\"| %-10.10s \", task.getName());","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Mahesh1772"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Mahesh1772"},"content":"            System.out.print(\"|            \");","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"Mahesh1772"},"content":"    public void next() {","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.plusMonths(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":100,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":101,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"Mahesh1772"},"content":"    public void previous() {","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.minusMonths(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":104,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":105,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getStartOfMonth() {","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"        return startOfView.withDayOfMonth(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"Mahesh1772":109}},{"path":"src/main/java/time/View.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package time;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"public abstract class View {","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"    protected LocalDate startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"    protected final DateTimeFormatter dateFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"    public View(LocalDate startOfView, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"        this.startOfView \u003d startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"        this.dateFormatter \u003d dateFormatter;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"    public abstract void printView(TaskManager taskManager);","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    public abstract void next();","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    public abstract void previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getStartOfView() {","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"        return startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"Mahesh1772":25}},{"path":"src/main/java/time/WeekView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"package time;","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import static ui.UiRenderer.printWeekBody;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"import static ui.UiRenderer.printWeekHeader;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"public class WeekView extends View {","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"    public WeekView(LocalDate startOfWeek, DateTimeFormatter dateFormatter) {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"        super(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    public void printView(TaskManager taskManager) {","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"        assert startOfView !\u003d null : \"Start of Weekday missing!\";","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate endOfWeek \u003d startOfView.plusDays(6);","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"\\nWeek View: \" + dateFormatter.format(startOfView) +","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"                \" - \" + dateFormatter.format(endOfWeek));","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"        printWeekHeader(startOfView, dateFormatter, false);","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"        printWeekBody(startOfView, dateFormatter, taskManager);","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"    public void next() {","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.plusWeeks(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"    public void previous() {","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        startOfView \u003d startOfView.minusWeeks(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getStartOfWeek() {","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"        return startOfView;","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"    public LocalDate getDateForDay(int dayOfWeek) {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"        // Assuming dayOfWeek is 1 for Monday, 2 for Tuesday, ..., 7 for Sunday","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"        // Adjust the calculation if your week starts on a different day","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"        return startOfView.plusDays(dayOfWeek - 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Mahesh1772":41,"clarencepohh":5,"Aak242":1,"kyhjonathan":1}},{"path":"src/main/java/ui/UiRenderer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"public class UiRenderer {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"    private static Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"    private static final String[] WEEK_DAYS \u003d {\"Sunday\", \"Monday\", \"Tuesday\",","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"        \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"};","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"    private static final int SPACE_COUNT \u003d 10;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String SINGLE_HORIZONTAL_DIVIDER \u003d \"+\" + \"-\".repeat(SPACE_COUNT + 2);","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String END_HORIZONTAL_DIVIDER \u003d \"+\";","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String VERTICAL_DIVIDER \u003d \"|\";","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String ENTRY_FORMAT \u003d VERTICAL_DIVIDER + \" %-\" + SPACE_COUNT + \"s \";","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" %-\" + SPACE_COUNT + \".\" + SPACE_COUNT + \"s \";","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String EMPTY_TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" \".repeat(SPACE_COUNT+1) + \" \";","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    private static final int numberOfDaysInWeek \u003d 7;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"    private static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"    private static final String ANSI_CYAN \u003d \"\\u001B[36m\"; // Cyan","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"    public static void printWeekHeader(LocalDate startOfView, DateTimeFormatter dateFormatter, boolean isMonthView) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"        printHeaderRow();","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        if (!isMonthView) {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"            printDateRow(dateFormatter ,startOfView);","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printHorizontalDivider() {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.print(SINGLE_HORIZONTAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(END_HORIZONTAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printHeaderRow() {","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"        for (String day : WEEK_DAYS) {","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.printf(ENTRY_FORMAT, day);","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printWeekBody(LocalDate startOfWeek, DateTimeFormatter dateFormatter, TaskManager taskManager) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"NicholasTanYY"},"content":"        int maxTasks \u003d getMaxTasks(startOfWeek, taskManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"NicholasTanYY"},"content":"        assert maxTasks \u003e\u003d 0 : \"maxTasks should be non-negative\";","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"NicholasTanYY"},"content":"        printWeeksTasks(startOfWeek, maxTasks, taskManager);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"NicholasTanYY"},"content":"        printHorizontalDivider();","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"NicholasTanYY"},"content":"    private static void printDateRow(DateTimeFormatter dateFormatter, LocalDate date) {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"NicholasTanYY"},"content":"        logger.log(Level.INFO, \"Printing dates for week starting from \" + date);","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"NicholasTanYY"},"content":"        for (int i \u003d 0; i \u003c numberOfDaysInWeek; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"            String formattedDate \u003d dateFormatter.format(date);","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Mahesh1772"},"content":"            System.out.printf(ENTRY_FORMAT, ANSI_CYAN + \"\\033[2m\\033[22m\" + dateFormatter.format(date) + ANSI_RESET);","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"NicholasTanYY"},"content":"            date \u003d date.plusDays(1);","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"NicholasTanYY"},"content":"        System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"NicholasTanYY"},"content":"    public static void printWeeksTasks(LocalDate startOfWeek, int maxTasks, TaskManager taskManager) {","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"NicholasTanYY"},"content":"        for (int taskIndex \u003d 0; taskIndex \u003c maxTasks; taskIndex++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"NicholasTanYY"},"content":"            for (int dayIndex \u003d 0; dayIndex \u003c numberOfDaysInWeek; dayIndex++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"NicholasTanYY"},"content":"                LocalDate currentDate \u003d startOfWeek.plusDays(dayIndex);","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"clarencepohh"},"content":"                List\u003cTask\u003e dayTasks \u003d taskManager.getTasksForDate(currentDate);","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"NicholasTanYY"},"content":"                printTaskForDay(dayTasks, taskIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.println(VERTICAL_DIVIDER);","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"clarencepohh"},"content":"    public static void printTaskForDay(List\u003cTask\u003e dayTasks, int taskIndex) {","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"NicholasTanYY"},"content":"        if (taskIndex \u003c dayTasks.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"            Task task \u003d dayTasks.get(taskIndex);","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"            System.out.printf(TASK_DISPLAY_FORMAT, task.getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"NicholasTanYY"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"NicholasTanYY"},"content":"            System.out.print(EMPTY_TASK_DISPLAY_FORMAT);","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"NicholasTanYY"},"content":"    public static int getMaxTasks(LocalDate startOfWeek, TaskManager taskManager) {","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"NicholasTanYY"},"content":"        int maxTasks \u003d 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"NicholasTanYY"},"content":"        for (int i \u003d 0; i \u003c numberOfDaysInWeek; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"NicholasTanYY"},"content":"            LocalDate currentDate \u003d startOfWeek.plusDays(i);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"NicholasTanYY"},"content":"            int tasksSize \u003d taskManager.getTasksForDate(currentDate).size();","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"NicholasTanYY"},"content":"            if (tasksSize \u003e maxTasks) {","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"NicholasTanYY"},"content":"                maxTasks \u003d tasksSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"NicholasTanYY"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"NicholasTanYY"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"NicholasTanYY"},"content":"        return maxTasks;","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"Aak242"},"content":"  ","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Mahesh1772"},"content":"    public static void printSeparator() {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Mahesh1772"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Mahesh1772"},"content":"            System.out.print(\"+------------\");","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Mahesh1772"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"+\");","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"Mahesh1772"},"content":"    public static void printHelp() {","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"Mahesh1772"},"content":"        String horizontalLine \u003d \"+-------------------------------------------------------------------------------+\";","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"Mahesh1772"},"content":"        String emptyLine \u003d \"|                                                                               |\";","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"|                               Available Commands                              |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(emptyLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027next\u0027: Move to the next week or month view.                                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027prev\u0027: Move to the previous week or month view.                            |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027update, \u003cday\u003e, \u003ctaskIndex\u003e, \u003cnewDescription\u003e\u0027: Update a task description.  |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027add, \u003cday\u003e, \u003ctaskType\u003e, \u003ctaskDescription\u003e\u0027: Add a new task.                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027delete, \u003cday\u003e, \u003ctaskIndex\u003e\u0027: Delete a task.                                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027month\u0027: Switch to month view.                                              |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027week\u0027: Switch to week view.                                                |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(\"| - \u0027quit\u0027: Exit the calendar application.                                      |\");","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(emptyLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"Mahesh1772"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"NicholasTanYY":84,"clarencepohh":7,"Mahesh1772":41,"Aak242":2}},{"path":"src/test/java/data/TaskManagerExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clarencepohh"},"content":"package data;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"clarencepohh"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"clarencepohh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManagerException.checkIfDateInCurrentMonth;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"clarencepohh"},"content":"public class TaskManagerExceptionTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateInCurrentMonth_pastDateGiven_exceptionThrown () {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"clarencepohh"},"content":"            checkIfDateInCurrentMonth(LocalDate.parse(\"1111-11-11\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"clarencepohh"},"content":"        }, \"TaskManagerException was expected\");","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"        Assertions.assertEquals(\"The date must be within the current month. \" + \"Please try again.\",","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"clarencepohh"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"clarencepohh"},"content":"    public void checkIfDateInCurrentMonth_futureDateGiven_exceptionThrown () {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"clarencepohh"},"content":"        TaskManagerException thrown \u003d Assertions.assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"clarencepohh"},"content":"            checkIfDateInCurrentMonth(LocalDate.parse(\"2222-11-11\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"clarencepohh"},"content":"        }, \"TaskManagerException was expected\");","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"        Assertions.assertEquals(\"The date must be within the current month. \" + \"Please try again.\",","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"clarencepohh"},"content":"                thrown.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"clarencepohh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"clarencepohh"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"clarencepohh":31}},{"path":"src/test/java/data/TaskManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Aak242"},"content":"package data;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Aak242"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Aak242"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Aak242"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Aak242"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Aak242"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Aak242"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Aak242"},"content":"import static data.TaskManager.addTask;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Aak242"},"content":"import static data.TaskManager.updateTask;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"clarencepohh"},"content":"import static data.TaskManager.deleteAllTasksOnDate;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"Aak242"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Aak242"},"content":"class TaskManagerTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Aak242"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Aak242"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Aak242"},"content":"    void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Aak242"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"    @AfterEach","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    void resetTaskManager() {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"clarencepohh"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"clarencepohh"},"content":"        deleteAllTasksOnDate(taskManager, date);","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"clarencepohh"},"content":"    void addTodo_validInput_addsTask() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test Todo\";","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"clarencepohh"},"content":"        Task testTask \u003d new Task(taskDescription);","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"clarencepohh"},"content":"        Task addedTask \u003d taskManager.getTasksForDate(date).get(0);","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTask.getName(), addedTask.getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"clarencepohh"},"content":"    void updateTodo_validInput_updatesTask() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"clarencepohh"},"content":"        String initialTaskDescription \u003d \"Initial todo\";","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"clarencepohh"},"content":"        String updatedTaskDescription \u003d \"Updated todo\";","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, initialTaskDescription, testTaskType, dummyTestDates);","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"clarencepohh"},"content":"        updateTask(date, 0, updatedTaskDescription);","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(updatedTaskDescription, taskManager.getTasksForDate(date).get(0).getName());","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"clarencepohh"},"content":"    void getTasksForDate_validDate_returnsTasks() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test todo task\";","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"clarencepohh"},"content":"        TaskType testTaskType \u003d TaskType.TODO;","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"clarencepohh"},"content":"        String[] dummyTestDates \u003d new String[]{null};","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"clarencepohh"},"content":"        addTask(date, taskDescription, testTaskType, dummyTestDates);","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"clarencepohh"},"content":"        List\u003cTask\u003e tasksForDate \u003d taskManager.getTasksForDate(date);","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"clarencepohh"},"content":"        Task createdTask \u003d tasksForDate.get(0);","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(createdTask, tasksForDate.get(0));","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Aak242"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"clarencepohh"},"content":"    void addTodoFromFile_validInput_addsTasks() throws TaskManagerException {","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"Aak242"},"content":"        // Arrange","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"Aak242"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"clarencepohh"},"content":"        Map\u003cLocalDate, List\u003cTask\u003e\u003e tasksFromFile \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"clarencepohh"},"content":"        String taskDescription \u003d \"Test todo task\";","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"clarencepohh"},"content":"        Task testTodoTask \u003d new Todo(taskDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"clarencepohh"},"content":"        tasksFromFile.put(date, List.of(testTodoTask));","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Aak242"},"content":"        // Act","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"Aak242"},"content":"        taskManager.addTasksFromFile(tasksFromFile);","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"Aak242"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Aak242"},"content":"        // Assert","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(testTodoTask.getName() ,taskManager.getTasksForDate(date).get(0).getName());","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"Aak242"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Aak242"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"NicholasTanYY":5,"clarencepohh":33,"Aak242":59}},{"path":"src/test/java/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyhjonathan"},"content":"package storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"kyhjonathan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"kyhjonathan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"kyhjonathan"},"content":"class StorageTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"kyhjonathan"},"content":"    private static final Path TEST_FILE_PATH \u003d Path.of(\"save\", \"test_tasks.txt\");","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"kyhjonathan"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"kyhjonathan"},"content":"        // Delete the test file before each test","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"kyhjonathan"},"content":"        Files.deleteIfExists(TEST_FILE_PATH);","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"kyhjonathan"},"content":"    void tearDown() throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"kyhjonathan"},"content":"        // Delete the test file after each test","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"kyhjonathan"},"content":"        Files.deleteIfExists(TEST_FILE_PATH);","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"kyhjonathan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"kyhjonathan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"kyhjonathan"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"kyhjonathan":21}},{"path":"src/test/java/ui/UiRendererTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"package ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"clarencepohh"},"content":"import data.Task;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"clarencepohh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"import static ui.UiRenderer.printTaskForDay;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"public class UiRendererTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"clarencepohh"},"content":"    public static List\u003cTask\u003e tasks \u003d List.of(new Task(\"task1\"), new Task(\"task2\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"clarencepohh"},"content":"            new Task(\"task3\"), new Task(\"task4\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"clarencepohh"},"content":"    public static List\u003cTask\u003e emptyTaskList \u003d List.of();","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"    private static final int SPACE_COUNT \u003d 10;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String VERTICAL_DIVIDER \u003d \"|\";","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" %-\" + SPACE_COUNT + \".\" + SPACE_COUNT + \"s \";","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"    private static final String EMPTY_TASK_DISPLAY_FORMAT \u003d VERTICAL_DIVIDER + \" \".repeat(SPACE_COUNT+1) + \" \";","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"    @AfterEach","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"    void printTaskForDay_noTasks_printsNoTasks() {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"        printTaskForDay(emptyTaskList, 0);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(outContent.toString(), EMPTY_TASK_DISPLAY_FORMAT);","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"    void printTaskForDay_hasTask_printsTaskWithFormat() {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"        printTaskForDay(tasks, 0);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"clarencepohh"},"content":"        assertEquals(outContent.toString(), String.format(TASK_DISPLAY_FORMAT, tasks.get(0).getName()));","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"NicholasTanYY"},"content":"    ","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"NicholasTanYY"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"NicholasTanYY":43,"clarencepohh":7}},{"path":"src/test/java/ui/WeekViewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Mahesh1772"},"content":"package ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Mahesh1772"},"content":"import data.TaskManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Mahesh1772"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Mahesh1772"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Mahesh1772"},"content":"import time.MonthView;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"Mahesh1772"},"content":"import time.WeekView;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Mahesh1772"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Mahesh1772"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Mahesh1772"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Mahesh1772"},"content":"public class WeekViewTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Mahesh1772"},"content":"    private WeekView weekView;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"Mahesh1772"},"content":"    private MonthView monthView;","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Mahesh1772"},"content":"    private TaskManager taskManagerMock;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Mahesh1772"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Mahesh1772"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfWeek \u003d LocalDate.of(2024, 3, 10); // March 10, 2024","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Mahesh1772"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"Mahesh1772"},"content":"        weekView \u003d new WeekView(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate startOfMonth \u003d LocalDate.of(2024, 3, 10); // March 10, 2024","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"Mahesh1772"},"content":"        monthView \u003d new MonthView(startOfWeek, dateFormatter);","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"Mahesh1772"},"content":"        taskManagerMock \u003d new TaskManager(); // You can create a mock TaskManager as needed","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Mahesh1772"},"content":"    public void testNextWeek() {","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d weekView.getStartOfWeek();","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Mahesh1772"},"content":"        weekView.next();","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.plusWeeks(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, weekView.getStartOfWeek());","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Mahesh1772"},"content":"    public void testPreviousWeek() {","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d weekView.getStartOfWeek();","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Mahesh1772"},"content":"        weekView.previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.minusWeeks(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, weekView.getStartOfWeek());","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Mahesh1772"},"content":"    public void testNextMonth() {","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d monthView.getStartOfMonth();","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"Mahesh1772"},"content":"        monthView.next();","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.plusMonths(1).withDayOfMonth(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, monthView.getStartOfMonth());","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Mahesh1772"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Mahesh1772"},"content":"    public void testPreviousMonth() {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate initialStartOfWeek \u003d monthView.getStartOfMonth();","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"Mahesh1772"},"content":"        monthView.previous();","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"Mahesh1772"},"content":"        LocalDate newStartOfWeek \u003d initialStartOfWeek.minusMonths(1).withDayOfMonth(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Mahesh1772"},"content":"        assertEquals(newStartOfWeek, monthView.getStartOfMonth());","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"Mahesh1772"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Mahesh1772"},"content":"}","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Mahesh1772"},"content":"","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Mahesh1772":65}},{"path":"text-ui-test/changeExpected.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"NicholasTanYY"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"NicholasTanYY"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"NicholasTanYY"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"NicholasTanYY"},"content":"then","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"    mkdir ../bin","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"# delete output from previous run","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"./EXPECTED-UNIX.TXT\" ]","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"NicholasTanYY"},"content":"then ","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"NicholasTanYY"},"content":"    rm EXPECTED-UNIX.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"NicholasTanYY"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"NicholasTanYY"},"content":"if ! javac -cp . -d ../bin $(find ../src/main/java -name \"*.java\" -print)","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"then","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"    exit 1","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"NicholasTanYY"},"content":"# reset saved file from previous run","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"save/tasks.txt\" ]","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"NicholasTanYY"},"content":"then ","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"NicholasTanYY"},"content":"    rm save/tasks.txt","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"NicholasTanYY"},"content":"# run the program, feed commands from input.txt file and redirect the output to the EXPECTED-UNIX.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"NicholasTanYY"},"content":"if java -classpath ../bin seedu/duke/Main \u003c input.txt \u003e EXPECTED-UNIX.TXT; then","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"EXPECTED-UNIX.TXT changed according to the output from commands in input.txt!\"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"NicholasTanYY"},"content":"else","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"An error occurred\"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"NicholasTanYY"},"content":"    exit 1","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"NicholasTanYY"},"content":"# reset saved file from previous run","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"save/tasks.txt\" ]","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"NicholasTanYY"},"content":"then ","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"NicholasTanYY"},"content":"    rm save/tasks.txt","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"NicholasTanYY"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"NicholasTanYY"},"content":"# run the program, feed commands from input.txt file and redirect the output to the EXPECTED.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"NicholasTanYY"},"content":"if java -classpath ../bin seedu/duke/Main \u003c input.txt \u003e EXPECTED.TXT; then","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"EXPECTED.TXT changed according to the output from commands in input.txt!\"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"NicholasTanYY"},"content":"else","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"NicholasTanYY"},"content":"    echo \"An error occurred\"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"NicholasTanYY"},"content":"    exit 1","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"NicholasTanYY":48}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"NicholasTanYY"},"content":"# reset saved file from previous run","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"NicholasTanYY"},"content":"if [ -e \"save/tasks.txt\" ]","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"NicholasTanYY"},"content":"then ","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"NicholasTanYY"},"content":"    rm save/tasks.txt","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"NicholasTanYY"},"content":"fi","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"NicholasTanYY"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL-UNIX.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"NicholasTanYY"},"content":"diff EXPECTED-UNIX.TXT ACTUAL-UNIX.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NicholasTanYY":7,"-":20}}]
