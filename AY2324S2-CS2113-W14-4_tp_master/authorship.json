[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"    jvmArgs \u0027-ea\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"    mainClass.set(\"seedu.voyagers.Voyagers\")","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"    archiveBaseName.set(\"voyagers\")","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"azamanis":5,"jthibault03":1,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |      Name       | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"--------|:---------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"![](https://media.licdn.com/dms/image/D5603AQGkmHnwye02HQ/profile-displayphoto-shrink_400_400/0/1709711973265?e\u003d1718236800\u0026v\u003dbeta\u0026t\u003dVUlzyASk3t_yqetd7IORQgh4ncrmeeP57RgEYv8-SQI) | Chong Zhen Kang | [Github](https://github.com/CerealMiller) | [Portfolio](https://www.linkedin.com/in/czk2026/)","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"![](https://media.licdn.com/dms/image/D4D03AQE7Hws2__bbVA/profile-displayphoto-shrink_400_400/0/1703085849663?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003dNJt0jGQHRCBDY9zcQJqVwb0lYffdQB7goHouBf3u7ls) | √Ålvaro Zamanillo | [Github](https://github.com/azamanis) | [Portfolio](https://www.linkedin.com/in/%C3%A1lvaro-zamanillo-s%C3%A1ez-652771153/)","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Luo-Z-Y"},"content":"![](https://media.licdn.com/dms/image/D5603AQGb2DQ9U83alw/profile-displayphoto-shrink_100_100/0/1709732858635?e\u003d1715212800\u0026v\u003dbeta\u0026t\u003d6UMyu9yLQ9TBnebAIqyJEJ1Y6jTRu8ZuQSIvEJ1N9Mc) | Luo Zhiyang | [Github](https:github.com/Luo-Z-Y) | [Portfolio](https://www.linkedin.com/in/luo-zhiyang-559683274/)","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"![](https://imgur.com/a/tArWOLA) | Jacqueline Thibault | [Github](https://github.com/jthibault03) | [Portfolio](https://www.linkedin.com/in/jacqueline-thibault/)","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"azamanis":1,"Luo-Z-Y":1,"CerealMiller":3,"jthibault03":1,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"# Developer Guide - Voyagers","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"This project is a team effort by the NUS CS2113 Group W14-4","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"## Setting Up, Getting Started","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"Run the JAR File, then follow the prompts through the command-line interface. Refer to this guide for syntax.","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"## Architecture","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"{UML Diagram of high-level app architecture}","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"Voyagers {...}  ","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"Parser {...}  ","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"Commands {...}  ","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"Storage {...}  ","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"Ui {...}  ","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"Trip {...}  ","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"Bill {...}","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"How the architecture components interact with each other","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"{Sequence Diagram}","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"Luo-Z-Y"},"content":"The Voyagers application is designed as a command-line interface ","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Luo-Z-Y"},"content":"(CLI) tool for managing travel trips. ","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Luo-Z-Y"},"content":"It is implemented in Java and follows a modular architecture to promote scalability and maintainability.","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"### Normal flow of the application","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"The application starts by displaying a welcome message. Then the flow is as follows:","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"1. The user is prompted to enter a command.","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"2. The application processes the command and displays the appropriate output.","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"3. Steps 1 and 2 are repeated until the user enters the `exit` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"The implementation of this flow is made using four main classes: `Parser`, `Commands`, `Storage` and `Ui`.","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"With these classes we can encapsulate the whole logic of the application in a relative simple loop.","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"````java","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"                                    ...","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"  while (!isExit) {","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"            try {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"                Command c \u003d NewParser.parse(fullCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"                c.execute(tripList, ui, null);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"            } catch (Exception e) { ","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"                ui.echo(e.getMessage());","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"                                ...","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"````","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"The following UML sequence diagram shows the flow of the application when the user enters a command.","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"![Sequence Diagram](diagrams/seq_diagram_flow.png)","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"### Commands","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"As shown in the sequence diagram, commands are encapsulated in the `Command` class.","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"This class is abstract and each command is implemented in a subclass of `Command`.","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"The `Command` class has the following structure:","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"````java","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"public abstract class Command {","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"    public abstract void execute(TripList tripList, Ui ui, Storage storage) throws VoyagersException;","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"        return isExit;","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"````","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"The main logic of each command is implemented in the `execute` method. ","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"### Parser","lastModifiedDate":"2024-04-07"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"To parser the user input into a command we have implemented a `Parser` class. ","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"This parser is quite generic and easy to extend to include new commands.","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"azamanis"},"content":"The parser works with another class called \u0027ParserDefinition\u0027. This class is a simple data structure that contains the","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"azamanis"},"content":"expected arguments for each command.","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"azamanis"},"content":"### Simplifying bills: minimizing number of transactions.","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"azamanis"},"content":"Each trip can have multiple bills associated. We have decided to include a functionality to simplify the bills","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"azamanis"},"content":"from a trip. This means that we will try to minimize the number of transactions between the participants of the trip.","lastModifiedDate":"2024-04-07"},{"lineNumber":96,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"azamanis"},"content":"The implementation uses a graph algorithm to find the minimum number of transactions between the participants of the trip.","lastModifiedDate":"2024-04-07"},{"lineNumber":98,"author":{"gitId":"azamanis"},"content":"The code has been adapted to the one found in the following [link](https://medium.com/@mithunmk93/algorithm-behind-splitwises-debt-simplification-feature-8ac485e97688).","lastModifiedDate":"2024-04-07"},{"lineNumber":99,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":100,"author":{"gitId":"azamanis"},"content":"The next diagram shows the flow of the application after the user enters the `simplifybills` command.","lastModifiedDate":"2024-04-07"},{"lineNumber":101,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":102,"author":{"gitId":"azamanis"},"content":"![Sequence Diagram](diagrams/diag_simplify_bills_2.png)","lastModifiedDate":"2024-04-07"},{"lineNumber":103,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"jthibault03"},"content":"## Bill","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"jthibault03"},"content":"Bill implements Payable, an interface to be used a few times in this project to cover ","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"jthibault03"},"content":"actions involving payment. It is dependent on the Profile and Trip classes, and Parser","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"jthibault03"},"content":"is dependent on the Bill class. We will include this in the UML diagrams to be included soon.","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"jthibault03"},"content":"Currently, the supported public methods can add and remove Profiles, pay the bill, change","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"jthibault03"},"content":"percentages that different people owe, and set and return various attributes. This is still","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"jthibault03"},"content":"not fully fleshed out, as we will add more features and better functionality in subsequent","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"jthibault03"},"content":"releases. ","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"CerealMiller"},"content":"## Review","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"CerealMiller"},"content":"The Review class, instantiated solely by the Trip object. ","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"CerealMiller"},"content":"It enables users to assign trip ratings (1-10) in Review\u0027s \u0027int score\u0027 attribute and input personal reflections and ","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"CerealMiller"},"content":"encapsulates individual sentiments in Review\u0027s \u0027String reflection attribute, facilitating comprehensive user feedback.","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"CerealMiller"},"content":"Currently, Reviews are not stored when the app exits, this implementation is planned.","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"Luo-Z-Y"},"content":"Individuals who frequently embark on journeys and require a reliable method to document their itinerary, ","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"Luo-Z-Y"},"content":"capture memories through photos, and track expenses effectively.","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"Luo-Z-Y"},"content":"The ultimate travel companion designed for adventurers who crave seamless organisation and unforgettable experiences. ","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"Luo-Z-Y"},"content":"With our intuitive digital diary, users can effortlessly manage their itinerary, capture precious memories with ","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"Luo-Z-Y"},"content":"integrated photo features, and track expenses for a worry-free journey. Users can enjoy anytime, anywhere access across ","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"Luo-Z-Y"},"content":"their local devices. We also have customisation options tailored to users‚Äô unique style.","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ...   | So that I can ...                                    |","lastModifiedDate":"2020-05-24"},{"lineNumber":137,"author":{"gitId":"Luo-Z-Y"},"content":"|--------|----------|-----------------|------------------------------------------------------|","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"Luo-Z-Y"},"content":"|v1.0|new user| add a new trip  | plan my upcoming travel itinerary                    |","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"Luo-Z-Y"},"content":"|v2.0|user| review my trips | give scores or simple comments on my completed trips |","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"azamanis":84,"Luo-Z-Y":15,"CerealMiller":5,"jthibault03":15,"-":32}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"# Voyagers","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"Welcome to Voyagers! Voyagers is a Java application designed to simplify trip management. Whether you\u0027re planning a weekend getaway or a month-long expedition, Voyagers provides an intuitive interface to organize and track all your trips seamlessly.","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"With Voyagers, you can effortlessly add, delete, and list trips, allowing you to stay on top of your travel plans with ease. Each trip can be customized with details such as name, dates, location, and description, ensuring that you have all the necessary information at your fingertips.","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Luo-Z-Y"},"content":"Links:","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Luo-Z-Y":5,"-":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"# Voyagers","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"Voyagers is a Java application designed to manage trips efficiently through a command-line interface.","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"\u003c!---","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"@@author azamanis","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"--\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"## Table of Contents","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"1. [Introduction](#introduction)","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"2. [Features](#features)","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    - [Add Main Trip](#adding-a-main-trip)","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    - [Delete Main Trip](#deleting-a-main-trip)","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"    - [Set Trip Details](#setting-trip-details)","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"    - [Add Sub Trip](#adding-a-sub-trip)","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    - [Delete Sub Trip](#deleting-a-sub-trip)","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    - [List All Trips](#listing-all-trips)","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"    - [Listing Trips by Status](#listing-trips-by-status)","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"jthibault03"},"content":"    - [Add Bills](#creating-a-bill)","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"jthibault03"},"content":"    - [Pay Bills](#paying-a-bill)","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"jthibault03"},"content":"    - [List Bills](#listing-all-bills)","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"jthibault03"},"content":"    - [Settle and Simplify Bills](#simplify-bills)","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"    - [Add Review](#reviewing-trips)","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"    - [Read Review](#reading-trip-reviews)","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"    - [Update Status](#update-status)","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"    - [Cancel Trip](#canceling-a-trip)","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"    - [Save Data](#save-data)","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"    - [Exit Application](#exit-application)","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"3. [Usage](#usage)","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"    - [Adding a Main Trip](#adding-a-main-trip)","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"    - [Setting Trip Details](#setting-trip-details)","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"    - [Change the Name of a Trip](#change-the-name-of-a-trip)","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"    - [Change the Date of a Trip](#change-the-date-of-a-trip)","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"    - [Change the Location of a Trip](#Change-the-Location-of-a-Trip)","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"    - [Change the Description of a Trip](#Change-the-Description-of-a-Trip)","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"    - [Cancel a Trip](#cancel-a-trip)","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"    - [Uncancel a Trip](#uncancel-a-trip)","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"    - [Deleting a Main Trip](#deleting-a-main-trip)","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"    - [Add Sub Trip](#adding-a-sub-trip)","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"    - [Delete Sub Trip](#deleting-a-sub-trip)","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"    - [Listing All Trips](#listing-all-trips)","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"    - [Listing Trips by Status](#listing-trips-by-status)","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"jthibault03"},"content":"    - [Managing Bills](#managing-bills)","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"jthibault03"},"content":"      - [Adding Bills](#creating-a-bill)","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"jthibault03"},"content":"      - [Paying Bills](#paying-a-bill)","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"jthibault03"},"content":"      - [Listing Bills](#listing-all-bills)","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"jthibault03"},"content":"      - [Settling and Simplifying Bills](#simplify-bills)","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"    - [Reviewing Trips](#reviewing-trips)","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"    - [Reading Trip Reviews](#reading-trip-reviews)","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"    - [Exit Command](#exit-command)","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"    - [Currency](#currency)","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"\u003c!---","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"@@author azamanis","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"--\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"Luo-Z-Y"},"content":"Voyagers is a Java application designed to simplify trip management. It provides users with a command-line interface to ","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"Luo-Z-Y"},"content":"manage their trips efficiently, including adding main trips, setting trip details, listing all trips, and more.","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"Luo-Z-Y"},"content":"## Features","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"Luo-Z-Y"},"content":"- **Add Main Trip**: Add a new main trip with specified details such as name, dates, location, and description.","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"Luo-Z-Y"},"content":"- **Delete Main Trip**: Remove an existing main trip from the list.","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"Luo-Z-Y"},"content":"- **Set Trip Details**: Modify trip details such as name, dates, location, and description for existing trips.","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"Luo-Z-Y"},"content":"- **List All Trips**: View a comprehensive list of all trips along with their details.","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"jthibault03"},"content":"- **Add Bill**: Add a bill to a certain trip, along with who paid, people who owe, and what percentage of the bill ","lastModifiedDate":"2024-04-09"},{"lineNumber":70,"author":{"gitId":"jthibault03"},"content":"each person owes.","lastModifiedDate":"2024-04-09"},{"lineNumber":71,"author":{"gitId":"jthibault03"},"content":"- **Pay Bill** Mark a bill as paid.","lastModifiedDate":"2024-04-09"},{"lineNumber":72,"author":{"gitId":"Luo-Z-Y"},"content":"- **Add Review**: Review a trip by providing a score and reflection.","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"Luo-Z-Y"},"content":"- **Read Review**: Read the review of a specific trip.","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"Luo-Z-Y"},"content":"- **Update Status**: Update the status of a trip to \u0027Ongoing\u0027, \u0027Upcoming\u0027 or \u0027Completed\u0027.","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"Luo-Z-Y"},"content":"- **Cancel Trip**: Cancel a trip and remove it from the list.","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"Luo-Z-Y"},"content":"- **Save Data**: Save the trip data to a file for future reference.","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"Luo-Z-Y"},"content":"- **Exit Application**: Exit the application.","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"Luo-Z-Y"},"content":"## Usage","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"Luo-Z-Y"},"content":"The core of Voyagers is to allow users to manage their trips efficiently. Especially adding a new main trip by typing a","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"Luo-Z-Y"},"content":"single line.","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"Luo-Z-Y"},"content":"### Adding a Main Trip","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"Luo-Z-Y"},"content":"To add a new main trip, use the `addmaintrip` command followed by the trip details.","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"Luo-Z-Y"},"content":"```bash","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"Luo-Z-Y"},"content":"addmaintrip /n \u003cName\u003e /start \u003cyyyy-MM-dd\u003e /end \u003cyyyy-MM-dd\u003e /location \u003cLocation\u003e /d \u003cDescription\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"Luo-Z-Y"},"content":"```","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"CerealMiller"},"content":"Example:","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"CerealMiller"},"content":"addmaintrip /n EuropeTrip /start 2024-05-01 /end 2024-07-01 /location Europe /d Travelling western europe with the family","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"CerealMiller"},"content":"\t\tGot it. I\u0027ve added this trip:","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"CerealMiller"},"content":"\tTrip Name: EuropeTrip\t\tStart Date: 2024-05-01\t\tEnd Date: 2024-07-01\t\tLocation: Europe\t\tDescription: Travelling western europe with the family\t\tStatus: UPCOMING","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"CerealMiller"},"content":"\tSub-trips:","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"CerealMiller"},"content":"Now you have 3 trips in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"CerealMiller"},"content":"        ____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"Luo-Z-Y"},"content":"### Setting Trip Details","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"Luo-Z-Y"},"content":"You can also modify the details of an existing trip using the following commands:","lastModifiedDate":"2024-04-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"Luo-Z-Y"},"content":"- `setname`: Set the name of a trip.","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"Luo-Z-Y"},"content":"- `setdates`: Set the dates of a trip.","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"Luo-Z-Y"},"content":"- `setlocation`: Set the location of a trip.","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"Luo-Z-Y"},"content":"- `setdescription`: Set the description of a trip.","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":115,"author":{"gitId":"CerealMiller"},"content":"### Change the Name of a Trip (only for main trips)","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"CerealMiller"},"content":"setname \u003ccurrent_name\u003e /n \u003cnew_name\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"Luo-Z-Y"},"content":"Example:","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"Luo-Z-Y"},"content":"```bash","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"Luo-Z-Y"},"content":"setname EuropeTrip /n EuropeanAdventure","lastModifiedDate":"2024-04-07"},{"lineNumber":125,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"CerealMiller"},"content":"\t\tNoted. I\u0027ve modified this trip:","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"CerealMiller"},"content":"\tTrip Name: EuropeanAdventure\t\tStart Date: 2024-05-01\t\tEnd Date: 2024-07-01\t\tLocation: Europe\t\tDescription: Travelling western europe with the family\t\tStatus: UPCOMING","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"CerealMiller"},"content":"\tSub-trips:","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"Luo-Z-Y"},"content":"### Change the Date of a Trip","lastModifiedDate":"2024-04-07"},{"lineNumber":138,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":139,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"CerealMiller"},"content":"setdates \u003ccurrent_trip_name\u003e /start \u003cyyyy-MM-dd\u003e /end \u003cyyyy-MM-dde\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"CerealMiller"},"content":"Example:","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"CerealMiller"},"content":"setdates EuropeanAdventure /start 2024-05-01 /end 2024-07-31","lastModifiedDate":"2024-04-14"},{"lineNumber":146,"author":{"gitId":"Luo-Z-Y"},"content":"```","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"CerealMiller"},"content":"        ____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"CerealMiller"},"content":"\t\tNoted. I\u0027ve modified this trip:","lastModifiedDate":"2024-04-14"},{"lineNumber":152,"author":{"gitId":"CerealMiller"},"content":"\tTrip Name: EuropeanAdventure\t\tStart Date: 2024-05-01\t\tEnd Date: 2024-07-31\t\tLocation: Europe\t\tDescription: Travelling western europe with the family\t\tStatus: UPCOMING","lastModifiedDate":"2024-04-14"},{"lineNumber":153,"author":{"gitId":"CerealMiller"},"content":"\tSub-trips:","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"CerealMiller"},"content":"        ____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"CerealMiller"},"content":"### Change the Location of a Trip","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"CerealMiller"},"content":"setdates \u003ccurrent_trip_name\u003e /location \u003cnew_location\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"CerealMiller"},"content":"Example:","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"CerealMiller"},"content":"setdates DateWithSO /location Fancy Restaurant","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":170,"author":{"gitId":"CerealMiller"},"content":"        ____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"CerealMiller"},"content":"\t\tNoted. I\u0027ve modified this trip:","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"CerealMiller"},"content":"\tTrip Name: DateWithSO\t\tStart Date: 2024-08-27\t\tEnd Date: 2024-08-27\t\tLocation: Fancy Restaurant\t\tDescription: Having Italian with beloved\t\tStatus: UPCOMING","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"CerealMiller"},"content":"\tSub-trips:","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"CerealMiller"},"content":"        ____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":175,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":176,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":177,"author":{"gitId":"CerealMiller"},"content":"### Change the Description of a Trip","lastModifiedDate":"2024-04-14"},{"lineNumber":178,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"CerealMiller"},"content":"setdates \u003ccurrent_trip_name\u003e /d \u003cnew_description\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":182,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":183,"author":{"gitId":"CerealMiller"},"content":"Example:","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":185,"author":{"gitId":"CerealMiller"},"content":"setdates DateWithSO /d Double dating with other friends at Italian place","lastModifiedDate":"2024-04-14"},{"lineNumber":186,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":187,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"CerealMiller"},"content":"        ____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":191,"author":{"gitId":"CerealMiller"},"content":"\t\tNoted. I\u0027ve modified this trip:","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"CerealMiller"},"content":"\tTrip Name: DateWithSO\t\tStart Date: 2024-08-27\t\tEnd Date: 2024-08-27\t\tLocation: Fancy Restaurant\t\tDescription: Double dating with other friends at Italian place\t\tStatus: UPCOMING","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"CerealMiller"},"content":"\tSub-trips:","lastModifiedDate":"2024-04-14"},{"lineNumber":194,"author":{"gitId":"CerealMiller"},"content":"        ____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":196,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":197,"author":{"gitId":"CerealMiller"},"content":"### Canceling a Trip","lastModifiedDate":"2024-04-14"},{"lineNumber":198,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":199,"author":{"gitId":"Luo-Z-Y"},"content":"```bash","lastModifiedDate":"2024-04-07"},{"lineNumber":200,"author":{"gitId":"CerealMiller"},"content":"setstatus \u003ccurrent_name\u003e /status cancel","lastModifiedDate":"2024-04-14"},{"lineNumber":201,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":202,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":203,"author":{"gitId":"CerealMiller"},"content":"Example:","lastModifiedDate":"2024-04-14"},{"lineNumber":204,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":205,"author":{"gitId":"CerealMiller"},"content":"setstatus EuropeanAdventure /status cancel","lastModifiedDate":"2024-04-14"},{"lineNumber":206,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":207,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":208,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":209,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"CerealMiller"},"content":"\t\tNoted. I\u0027ve modified this trip:","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"CerealMiller"},"content":"\tTrip Name: EuropeanAdventure\t\tStart Date: 2024-05-01\t\tEnd Date: 2024-07-31\t\tLocation: Europe\t\tDescription: Travelling western europe with the family\t\tStatus: CANCELLED","lastModifiedDate":"2024-04-14"},{"lineNumber":213,"author":{"gitId":"CerealMiller"},"content":"\tSub-trips:","lastModifiedDate":"2024-04-14"},{"lineNumber":214,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"Luo-Z-Y"},"content":"```","lastModifiedDate":"2024-04-07"},{"lineNumber":216,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":217,"author":{"gitId":"Luo-Z-Y"},"content":"### Uncancel a Trip","lastModifiedDate":"2024-04-07"},{"lineNumber":218,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":219,"author":{"gitId":"CerealMiller"},"content":"setstatus \u003ctrip_name\u003e /status uncancel","lastModifiedDate":"2024-04-14"},{"lineNumber":220,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":222,"author":{"gitId":"CerealMiller"},"content":"Example:","lastModifiedDate":"2024-04-14"},{"lineNumber":223,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":224,"author":{"gitId":"CerealMiller"},"content":"setstatus EuropeanAdventure /status uncancel","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":226,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":227,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":228,"author":{"gitId":"Luo-Z-Y"},"content":"```bash","lastModifiedDate":"2024-04-07"},{"lineNumber":229,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"CerealMiller"},"content":"\t\tNoted. I\u0027ve modified this trip:","lastModifiedDate":"2024-04-14"},{"lineNumber":231,"author":{"gitId":"CerealMiller"},"content":"\tTrip Name: EuropeanAdventure\t\tStart Date: 2024-05-01\t\tEnd Date: 2024-07-31\t\tLocation: Europe\t\tDescription: Travelling western europe with the family\t\tStatus: UPCOMING","lastModifiedDate":"2024-04-14"},{"lineNumber":232,"author":{"gitId":"CerealMiller"},"content":"\tSub-trips:","lastModifiedDate":"2024-04-14"},{"lineNumber":233,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":234,"author":{"gitId":"Luo-Z-Y"},"content":"```","lastModifiedDate":"2024-04-07"},{"lineNumber":235,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":236,"author":{"gitId":"Luo-Z-Y"},"content":"### Deleting a Main Trip","lastModifiedDate":"2024-03-15"},{"lineNumber":237,"author":{"gitId":"Luo-Z-Y"},"content":"To delete an existing main trip, use the `deletemaintrip` command followed by the trip name.","lastModifiedDate":"2024-03-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"Luo-Z-Y"},"content":"```bash","lastModifiedDate":"2024-03-15"},{"lineNumber":240,"author":{"gitId":"CerealMiller"},"content":"deletemaintrip /n \u003cmain_trip_name\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":241,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":242,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":243,"author":{"gitId":"CerealMiller"},"content":"Example:","lastModifiedDate":"2024-04-14"},{"lineNumber":244,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":245,"author":{"gitId":"CerealMiller"},"content":"deletemaintrip /n EuropeanAdventure","lastModifiedDate":"2024-04-14"},{"lineNumber":246,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":247,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":248,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":249,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":250,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":251,"author":{"gitId":"CerealMiller"},"content":"\t\tNoted. I\u0027ve removed this trip:","lastModifiedDate":"2024-04-14"},{"lineNumber":252,"author":{"gitId":"CerealMiller"},"content":"\tTrip Name: EuropeanAdventure\t\tStart Date: 2024-05-01\t\tEnd Date: 2024-07-31\t\tLocation: Europe\t\tDescription: Travelling western europe with the family\t\tStatus: UPCOMING","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"CerealMiller"},"content":"\tSub-trips:","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"CerealMiller"},"content":"Now you have 2 trips in the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"Luo-Z-Y"},"content":"```","lastModifiedDate":"2024-03-15"},{"lineNumber":257,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":258,"author":{"gitId":"CerealMiller"},"content":"### Adding a Sub Trip","lastModifiedDate":"2024-04-12"},{"lineNumber":259,"author":{"gitId":"CerealMiller"},"content":"To add sub trips under a main trip, use the addsubtrip command.","lastModifiedDate":"2024-04-12"},{"lineNumber":260,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":261,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-12"},{"lineNumber":262,"author":{"gitId":"CerealMiller"},"content":"addsubtrip /n \u003cexisting_main_trip_name\u003e /start \u003cyyyy-MM-dd\u003e /end \u003cyyyy-MM-dd\u003e /location \u003clocation\u003e /d \u003cdescription\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":263,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":264,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":265,"author":{"gitId":"CerealMiller"},"content":"Example:","lastModifiedDate":"2024-04-14"},{"lineNumber":266,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-12"},{"lineNumber":267,"author":{"gitId":"CerealMiller"},"content":"addsubtrip /n Korea /start 2024-05-10 /end 2024-05-24 /location Gwanggyo Lake Park /d have a picnic","lastModifiedDate":"2024-04-14"},{"lineNumber":268,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":269,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":270,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":271,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":272,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":273,"author":{"gitId":"CerealMiller"},"content":"\t\tGot it. I\u0027ve added this trip as a subtrip of :Korea","lastModifiedDate":"2024-04-14"},{"lineNumber":274,"author":{"gitId":"CerealMiller"},"content":"\tKorea-1\t\tStart Date: 2024-05-10\t\tEnd Date: 2024-05-24\t\tLocation: Gwanggyo Lake Park\t\tDescription: have a picnic\t\tStatus: UPCOMING","lastModifiedDate":"2024-04-14"},{"lineNumber":275,"author":{"gitId":"CerealMiller"},"content":"Now you have 1 subtrips.","lastModifiedDate":"2024-04-14"},{"lineNumber":276,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":277,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":278,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":279,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":280,"author":{"gitId":"CerealMiller"},"content":"### Deleting a Sub Trip","lastModifiedDate":"2024-04-12"},{"lineNumber":281,"author":{"gitId":"CerealMiller"},"content":"To delete a sub trip, use the deletesubtrip command.","lastModifiedDate":"2024-04-12"},{"lineNumber":282,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":283,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-12"},{"lineNumber":284,"author":{"gitId":"CerealMiller"},"content":"deletesubtrip /n \u003cMain trip name\u003e /i \u003cindex of subtrip\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":285,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":286,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":287,"author":{"gitId":"CerealMiller"},"content":"Example:","lastModifiedDate":"2024-04-14"},{"lineNumber":288,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":289,"author":{"gitId":"CerealMiller"},"content":"deletesubtrip /n Korea /i 1","lastModifiedDate":"2024-04-14"},{"lineNumber":290,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":291,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":292,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":293,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-12"},{"lineNumber":294,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":295,"author":{"gitId":"CerealMiller"},"content":"\t\tNoted. I\u0027ve removed this subtrip:","lastModifiedDate":"2024-04-14"},{"lineNumber":296,"author":{"gitId":"CerealMiller"},"content":"\tKorea-1\t\tStart Date: 2024-05-10\t\tEnd Date: 2024-05-24\t\tLocation: Gwanggyo Lake Park\t\tDescription: have a picnic\t\tStatus: UPCOMING","lastModifiedDate":"2024-04-14"},{"lineNumber":297,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":298,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":299,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":300,"author":{"gitId":"Luo-Z-Y"},"content":"### Listing All Trips","lastModifiedDate":"2024-03-15"},{"lineNumber":301,"author":{"gitId":"CerealMiller"},"content":"To view a list of all trips along with their details, use the list command.","lastModifiedDate":"2024-04-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":303,"author":{"gitId":"Luo-Z-Y"},"content":"```bash ","lastModifiedDate":"2024-03-15"},{"lineNumber":304,"author":{"gitId":"CerealMiller"},"content":"list","lastModifiedDate":"2024-04-12"},{"lineNumber":305,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":306,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":307,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":308,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":309,"author":{"gitId":"CerealMiller"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":310,"author":{"gitId":"CerealMiller"},"content":"\t\tHere are the trips in your list:","lastModifiedDate":"2024-04-14"},{"lineNumber":311,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":312,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":313,"author":{"gitId":"CerealMiller"},"content":"\t\t1. \tTrip Name: Korea\t\tStart Date: 2024-05-01\t\tEnd Date: 2024-07-31\t\tLocation: Suwon\t\tDescription: dating\t\tStatus: UPCOMING","lastModifiedDate":"2024-04-14"},{"lineNumber":314,"author":{"gitId":"CerealMiller"},"content":"\tSub-trips:","lastModifiedDate":"2024-04-14"},{"lineNumber":315,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":316,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":317,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":318,"author":{"gitId":"CerealMiller"},"content":"### Listing Trips by Status","lastModifiedDate":"2024-04-12"},{"lineNumber":319,"author":{"gitId":"CerealMiller"},"content":"To view a list of trips of only a specific status, add the status after the list command","lastModifiedDate":"2024-04-12"},{"lineNumber":320,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":321,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":322,"author":{"gitId":"CerealMiller"},"content":"list \u003cstatus\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":323,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":324,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":325,"author":{"gitId":"CerealMiller"},"content":"Example 1:","lastModifiedDate":"2024-04-14"},{"lineNumber":326,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-12"},{"lineNumber":327,"author":{"gitId":"CerealMiller"},"content":"list upcoming","lastModifiedDate":"2024-04-12"},{"lineNumber":328,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":329,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":330,"author":{"gitId":"CerealMiller"},"content":"Example output 1:","lastModifiedDate":"2024-04-14"},{"lineNumber":331,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":332,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":333,"author":{"gitId":"CerealMiller"},"content":"\t\tHere are the upcoming trips in your list:","lastModifiedDate":"2024-04-14"},{"lineNumber":334,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":335,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":336,"author":{"gitId":"CerealMiller"},"content":"\t\t1. \tTrip Name: Korea\t\tStart Date: 2024-05-01\t\tEnd Date: 2024-07-31\t\tLocation: Suwon\t\tDescription: dating\t\tStatus: UPCOMING","lastModifiedDate":"2024-04-14"},{"lineNumber":337,"author":{"gitId":"CerealMiller"},"content":"\tSub-trips:","lastModifiedDate":"2024-04-14"},{"lineNumber":338,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":339,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":340,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":341,"author":{"gitId":"CerealMiller"},"content":"Example 2:","lastModifiedDate":"2024-04-14"},{"lineNumber":342,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-12"},{"lineNumber":343,"author":{"gitId":"CerealMiller"},"content":"list cancelled","lastModifiedDate":"2024-04-12"},{"lineNumber":344,"author":{"gitId":"Luo-Z-Y"},"content":"```","lastModifiedDate":"2024-03-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":346,"author":{"gitId":"CerealMiller"},"content":"Example output 2:","lastModifiedDate":"2024-04-14"},{"lineNumber":347,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":348,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":349,"author":{"gitId":"CerealMiller"},"content":"\t\tYou have no cancelled trips in your list.","lastModifiedDate":"2024-04-14"},{"lineNumber":350,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":351,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":352,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":353,"author":{"gitId":"jthibault03"},"content":"### Managing bills","lastModifiedDate":"2024-04-14"},{"lineNumber":354,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":355,"author":{"gitId":"jthibault03"},"content":"You can add bills to a trip. The bills are payed by a person but it can involve multiple people.","lastModifiedDate":"2024-04-14"},{"lineNumber":356,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":357,"author":{"gitId":"jthibault03"},"content":"### Creating a Bill","lastModifiedDate":"2024-04-09"},{"lineNumber":358,"author":{"gitId":"jthibault03"},"content":"To add a bill to a trip, use the `addbill` command followed by the following flags:","lastModifiedDate":"2024-04-14"},{"lineNumber":359,"author":{"gitId":"jthibault03"},"content":" ","lastModifiedDate":"2024-04-13"},{"lineNumber":360,"author":{"gitId":"jthibault03"},"content":" `/trip`: name of the trip this bill belongs to  ","lastModifiedDate":"2024-04-13"},{"lineNumber":361,"author":{"gitId":"jthibault03"},"content":"`/n`: name of this bill  ","lastModifiedDate":"2024-04-13"},{"lineNumber":362,"author":{"gitId":"jthibault03"},"content":"`/payer`: name of the person who paid the bill  ","lastModifiedDate":"2024-04-13"},{"lineNumber":363,"author":{"gitId":"jthibault03"},"content":"`/others`: other people involved in the bill, owing the payer for this expense  ","lastModifiedDate":"2024-04-13"},{"lineNumber":364,"author":{"gitId":"jthibault03"},"content":"`/amount`: how much this bill costed. Default currency will be the currency of the trip.","lastModifiedDate":"2024-04-13"},{"lineNumber":365,"author":{"gitId":"jthibault03"},"content":"`/percentages`: the percentage of the total amount that each person is responsible for","lastModifiedDate":"2024-04-13"},{"lineNumber":366,"author":{"gitId":"jthibault03"},"content":"in the bill. Must have the same number of arguments as the number of people in `/payer` and `/others`. ","lastModifiedDate":"2024-04-13"},{"lineNumber":367,"author":{"gitId":"jthibault03"},"content":" Must add up to 100 (+-0.5).","lastModifiedDate":"2024-04-13"},{"lineNumber":368,"author":{"gitId":"jthibault03"},"content":"```bash","lastModifiedDate":"2024-04-09"},{"lineNumber":369,"author":{"gitId":"jthibault03"},"content":"addbill /trip China /n dinner /payer Alice /others Bob Carol /amount 50 /percentages 33.3 33.3 33.3","lastModifiedDate":"2024-04-14"},{"lineNumber":370,"author":{"gitId":"jthibault03"},"content":"```","lastModifiedDate":"2024-04-09"},{"lineNumber":371,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":372,"author":{"gitId":"jthibault03"},"content":"Note:","lastModifiedDate":"2024-04-14"},{"lineNumber":373,"author":{"gitId":"jthibault03"},"content":"- The amount must be positive.","lastModifiedDate":"2024-04-14"},{"lineNumber":374,"author":{"gitId":"jthibault03"},"content":"   - The currency must be a valid currency code. Consult the list of valid currency codes [here](#currency).","lastModifiedDate":"2024-04-14"},{"lineNumber":375,"author":{"gitId":"jthibault03"},"content":"   - The percentage must be between 0 and 100 and the sum of the percentages of all participants must be 100.","lastModifiedDate":"2024-04-14"},{"lineNumber":376,"author":{"gitId":"jthibault03"},"content":"   - The payer may not be involved in the bill: i.e the payer may not be in the list of participants.","lastModifiedDate":"2024-04-14"},{"lineNumber":377,"author":{"gitId":"jthibault03"},"content":"- The listed percentages are attributed to the listed users in the order that they appear. For example,","lastModifiedDate":"2024-04-14"},{"lineNumber":378,"author":{"gitId":"jthibault03"},"content":"in the below command, Bob is responsible for 50% of the bill, Charles for 45%, and Denise for 5%.  ","lastModifiedDate":"2024-04-14"},{"lineNumber":379,"author":{"gitId":"jthibault03"},"content":"`addbill /trip China /n breakfast /payer Bob /others Charles Denise /amount 45 /percentages 50 45 5`","lastModifiedDate":"2024-04-14"},{"lineNumber":380,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":381,"author":{"gitId":"jthibault03"},"content":"### Paying a Bill","lastModifiedDate":"2024-04-09"},{"lineNumber":382,"author":{"gitId":"jthibault03"},"content":"To mark a bill as paid, use the `paybill` command followed by the name of the bill.","lastModifiedDate":"2024-04-14"},{"lineNumber":383,"author":{"gitId":"jthibault03"},"content":"```bash","lastModifiedDate":"2024-04-09"},{"lineNumber":384,"author":{"gitId":"jthibault03"},"content":"paybill /n dinner","lastModifiedDate":"2024-04-14"},{"lineNumber":385,"author":{"gitId":"jthibault03"},"content":"```","lastModifiedDate":"2024-04-09"},{"lineNumber":386,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":387,"author":{"gitId":"jthibault03"},"content":"### Listing all Bills","lastModifiedDate":"2024-04-09"},{"lineNumber":388,"author":{"gitId":"jthibault03"},"content":"To list all bills in Voyagers, use the `listbills` command.","lastModifiedDate":"2024-04-14"},{"lineNumber":389,"author":{"gitId":"jthibault03"},"content":"```bash","lastModifiedDate":"2024-04-09"},{"lineNumber":390,"author":{"gitId":"jthibault03"},"content":"listbills","lastModifiedDate":"2024-04-14"},{"lineNumber":391,"author":{"gitId":"jthibault03"},"content":"```","lastModifiedDate":"2024-04-09"},{"lineNumber":392,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":393,"author":{"gitId":"jthibault03"},"content":"### Simplify bills","lastModifiedDate":"2024-04-14"},{"lineNumber":394,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":395,"author":{"gitId":"jthibault03"},"content":"In order to settle up all the bills. You can simplify all the bills.","lastModifiedDate":"2024-04-14"},{"lineNumber":396,"author":{"gitId":"jthibault03"},"content":"The simplification will reduce the number of transactions needed to settle up all the bills.","lastModifiedDate":"2024-04-14"},{"lineNumber":397,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":398,"author":{"gitId":"jthibault03"},"content":"````bash","lastModifiedDate":"2024-04-14"},{"lineNumber":399,"author":{"gitId":"jthibault03"},"content":"simplifybills","lastModifiedDate":"2024-04-14"},{"lineNumber":400,"author":{"gitId":"jthibault03"},"content":"````","lastModifiedDate":"2024-04-14"},{"lineNumber":401,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":402,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":403,"author":{"gitId":"jthibault03"},"content":"Note: if the trip is a maintrip, the simplification will be done on all the subtrips of the maintrip.","lastModifiedDate":"2024-04-14"},{"lineNumber":404,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":405,"author":{"gitId":"jthibault03"},"content":"Note: the simplification will be made using dollars.","lastModifiedDate":"2024-04-14"},{"lineNumber":406,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":407,"author":{"gitId":"jthibault03"},"content":"#### Currency","lastModifiedDate":"2024-04-14"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":409,"author":{"gitId":"jthibault03"},"content":"The app supports multiple currencies:","lastModifiedDate":"2024-04-14"},{"lineNumber":410,"author":{"gitId":"jthibault03"},"content":"- EUR: Euro","lastModifiedDate":"2024-04-14"},{"lineNumber":411,"author":{"gitId":"jthibault03"},"content":"- USD: US Dollar","lastModifiedDate":"2024-04-14"},{"lineNumber":412,"author":{"gitId":"jthibault03"},"content":"- SGD: Singapore Dollar","lastModifiedDate":"2024-04-14"},{"lineNumber":413,"author":{"gitId":"jthibault03"},"content":"- JPY: Japanese Yen","lastModifiedDate":"2024-04-14"},{"lineNumber":414,"author":{"gitId":"jthibault03"},"content":"- CNY: Chinese Yuan","lastModifiedDate":"2024-04-14"},{"lineNumber":415,"author":{"gitId":"jthibault03"},"content":"- KRW: South Korean Won","lastModifiedDate":"2024-04-14"},{"lineNumber":416,"author":{"gitId":"jthibault03"},"content":"- GBP: British Pound","lastModifiedDate":"2024-04-14"},{"lineNumber":417,"author":{"gitId":"jthibault03"},"content":"- AUD: Australian Dollar","lastModifiedDate":"2024-04-14"},{"lineNumber":418,"author":{"gitId":"jthibault03"},"content":"- CAD: Canadian Dollar","lastModifiedDate":"2024-04-14"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":420,"author":{"gitId":"CerealMiller"},"content":"### Reviewing Trips","lastModifiedDate":"2024-03-29"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":422,"author":{"gitId":"CerealMiller"},"content":"To review a main trip with a scale of 1-10 \u0027score\u0027 and your open-ended \u0027reflection\u0027, use the review command.","lastModifiedDate":"2024-04-12"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":424,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-03-29"},{"lineNumber":425,"author":{"gitId":"CerealMiller"},"content":"review \u003cmain_trip_name\u003e /s \u003c1-10\u003e /r \u003copen-ended thoughts\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":426,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":428,"author":{"gitId":"CerealMiller"},"content":"Example:","lastModifiedDate":"2024-04-14"},{"lineNumber":429,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":430,"author":{"gitId":"CerealMiller"},"content":"review Korea /s 7 /r Great food, great weather, expensive though","lastModifiedDate":"2024-04-14"},{"lineNumber":431,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":433,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":434,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":435,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":436,"author":{"gitId":"CerealMiller"},"content":"\t\tNoted. you reviewed this trip: Korea with a score of 7","lastModifiedDate":"2024-04-14"},{"lineNumber":437,"author":{"gitId":"CerealMiller"},"content":"\t\tnoting: Great food, great weather, expensive though","lastModifiedDate":"2024-04-14"},{"lineNumber":438,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":440,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":442,"author":{"gitId":"CerealMiller"},"content":"### Reading Trip Reviews","lastModifiedDate":"2024-03-29"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":444,"author":{"gitId":"CerealMiller"},"content":"To read previously reviewed main trip, use the readreview command with the name of the trip.","lastModifiedDate":"2024-04-12"},{"lineNumber":445,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":446,"author":{"gitId":"CerealMiller"},"content":"readreview \u003cmain_trip_name\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":447,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":449,"author":{"gitId":"CerealMiller"},"content":"Example:","lastModifiedDate":"2024-04-14"},{"lineNumber":450,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-03-29"},{"lineNumber":451,"author":{"gitId":"CerealMiller"},"content":"readreview Korea","lastModifiedDate":"2024-04-14"},{"lineNumber":452,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":454,"author":{"gitId":"CerealMiller"},"content":"Example output:","lastModifiedDate":"2024-04-14"},{"lineNumber":455,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":456,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":457,"author":{"gitId":"CerealMiller"},"content":"\t\tHere\u0027s what you wrote about Korea","lastModifiedDate":"2024-04-14"},{"lineNumber":458,"author":{"gitId":"CerealMiller"},"content":"\t\tScore: 7","lastModifiedDate":"2024-04-14"},{"lineNumber":459,"author":{"gitId":"CerealMiller"},"content":"\t\tReflection:","lastModifiedDate":"2024-04-14"},{"lineNumber":460,"author":{"gitId":"CerealMiller"},"content":"\t\tGreat food, great weather, expensive though","lastModifiedDate":"2024-04-14"},{"lineNumber":461,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":462,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":464,"author":{"gitId":"CerealMiller"},"content":"### Save data","lastModifiedDate":"2024-04-14"},{"lineNumber":465,"author":{"gitId":"CerealMiller"},"content":"Remember to properly exit to save trip data.","lastModifiedDate":"2024-04-14"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":467,"author":{"gitId":"Luo-Z-Y"},"content":"### Enter \"exit\" to exit the application.","lastModifiedDate":"2024-03-15"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":469,"author":{"gitId":"Luo-Z-Y"},"content":"```bash ","lastModifiedDate":"2024-03-15"},{"lineNumber":470,"author":{"gitId":"Luo-Z-Y"},"content":"exit","lastModifiedDate":"2024-03-15"},{"lineNumber":471,"author":{"gitId":"Luo-Z-Y"},"content":"```","lastModifiedDate":"2024-03-15"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":473,"author":{"gitId":"CerealMiller"},"content":"Output:","lastModifiedDate":"2024-04-14"},{"lineNumber":474,"author":{"gitId":"CerealMiller"},"content":"```bash","lastModifiedDate":"2024-04-14"},{"lineNumber":475,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":476,"author":{"gitId":"CerealMiller"},"content":"\t\tBye. Hope to see you again soon!","lastModifiedDate":"2024-04-14"},{"lineNumber":477,"author":{"gitId":"CerealMiller"},"content":"\t\t____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":478,"author":{"gitId":"CerealMiller"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":480,"author":{"gitId":"azamanis"},"content":"\u003c!---","lastModifiedDate":"2024-04-13"},{"lineNumber":481,"author":{"gitId":"azamanis"},"content":"@@author azamanis","lastModifiedDate":"2024-04-13"},{"lineNumber":482,"author":{"gitId":"azamanis"},"content":"--\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":484,"author":{"gitId":"azamanis"},"content":"\u003c!---","lastModifiedDate":"2024-04-13"},{"lineNumber":485,"author":{"gitId":"azamanis"},"content":"@@author azamanis","lastModifiedDate":"2024-04-13"},{"lineNumber":486,"author":{"gitId":"azamanis"},"content":"--\u003e","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"azamanis":35,"Luo-Z-Y":56,"CerealMiller":282,"jthibault03":77,"-":36}},{"path":"docs/team/azamanis.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"# Overview","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"This document provides a summary of my contributions to the project. The project consists on developing an application called `Voyagers` to manage trips.","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"First of all, I would say that my most important contribution to the project has been in terms on managing. ","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"Our team was only 4 people and two of us were exchangers. Although, it\u0027s usually assumed that the exchangers will not","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"get involve in the projects, it was definitely not my case. I assumed the leader role since one of the first sessions, not because I wanted, but because no one was trying to lead the project and there was a lack of initiative.","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"During the whole project I tried to divide and assign tasks, as well as trying to bring up conversations on what we wanted to achieve and implement.","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"On the code side, I have developed several classes but most importantly, I have worked in the integration of the code. Because we lacked some communication, the code developed by every member sometimes did not fit with the rest of the code. ","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"# Summary of Contributions","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"# Code contributed: ","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"The link for my contribution can be found [here](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dazamanis\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2024-02-23\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~others).","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"![Contributions](../others/code_statistics.png)","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"I focused mainly in the development of the following classes:","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"- Trip","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"- Command: abstract class and its subclasses","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"- Parser","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"- BillSettler","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"- TripList","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"- Ui","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"# Enhancements implemented: A summary of the enhancements you implemented.","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"## Improving the parser: ","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"The parser was not originally assigned to me. However, the old parser was not very generalized and it ","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"needed to write a new function for each new command. I changed the parser to be more general and to save time for the future.","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"## Simplifying bills:","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"This is one of the most distinctive features of the app, as the rest are basically CRUD operations for the different classes.","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"This was mainly a task of reading information articles as the idea was not coming up with an algorithm from scratch.","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"After documenting myself, I found a [website](https://medium.com/@mithunmk93/algorithm-behind-splitwises-debt-simplification-feature-8ac485e97688) were the problem was explained and a template code was provided.","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"After the documenting process, the task was to adapt the code to our project.","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"# Contributions to the UG: Which sections did you contribute to the UG?","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"For the user guide, I have focused in the sections related with the classed I developed.","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"# Contributions to the DG: Which sections did you contribute to the DG? Which UML diagrams did you add/updated?","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"The main contributions can be found in the Design and Implementation section.","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"- Normal flow of the application.","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"- Commands","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"- Parser","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"- Symplifying bills","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"The following (all the) sequence diagrams in the DG were created by me.","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"- Sequence Diagram for the flow of the application","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"![Sequence Diagram](../diagrams/seq_diagram_flow.png)","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"- Sequence Diagram for the simplification of bills.","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"![Sequence Diagram](../diagrams/diag_simplify_bills_2.png)","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"Furthermore, I contributed to other minimal sections of the DG such as the index and organizing the different sections.","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"azamanis":67}},{"path":"docs/team/cerealmiller.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"# CerealMiller\u0027s Project Portfolio Page","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"## Project: Voyagers","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"Voyagers is a Java application designed to track and manage a user\u0027s trips (i.e. events). Through a CLT-based UI, the","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"user can add, edit, delete, and track the statuses of their trips. Additional features such as giving each trip a review","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"and tracking bills/payments associated with each trip are also provided.","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"### Feature:","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"- Updated the TripStorage class to read and write sub trips.","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"- Added the feature to list trips by status (eg. list upcoming).","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"- Added the ability to delete sub-trips.","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"- Added the ability to create reviews for main trips.","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"- Added the ability to store reviews for main trips.","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"- Fixed bugs and updated NewParser to implement new features.","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"- Fixed bugs to in modifying main trip.","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"### Code contributed: [Repo link](https://cerealmillertp.netlify.app/?search\u003dCerealMiller\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dLAPTOP-IO707OMP%5Cchong\u0026tabRepo\u003dAY2324S2-CS2113-W14-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dmd~java\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"### Project management:","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"- Managed releases `v1.0 - v2.1` (Latest release)","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"- Managed issue tracker and milestones","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"- Managed project documentation","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"- Managed project releases","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"### Enhancements to existing features:","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"- **Enhancement 1**: Updated the `README.md` file to include a brief description of the project.","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"- **Enhancement 2**: Updated the `UserGuide.md` file to include a detailed user guide for parts I implemented.","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"- **Enhancement 3**: Updated the `AboutUs.md` file to include a brief introduction of the team members.","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"### Community:","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"- **Community 1**: Reported bugs and suggestions for other teams in the project.","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"- **Community 2**: Reviewed PRs for other teams in the project.","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"CerealMiller":34}},{"path":"docs/team/luo-z-y.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"# LUO-Z-Y\u0027s Project Portfolio Page","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"## Project: Voyagers","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"Voyagers is a Java application designed to simplify trip management. It provides users with a command-line interface to","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"manage their trips efficiently, including adding main trips, setting trip details, listing all trips, manage bills and ","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"more.","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Luo-Z-Y"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"Luo-Z-Y"},"content":"### Feature: ","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"Luo-Z-Y"},"content":"- Added the ability to set status for a trip.","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"Luo-Z-Y"},"content":"- Added the ability to store trips and bills data in a file.","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"Luo-Z-Y"},"content":"- Added the ability to simplify bills from a trip.","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"Luo-Z-Y"},"content":"### Code contributed: [Repo link](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dluo-z-y)","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Luo-Z-Y"},"content":"### Project management:","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"Luo-Z-Y"},"content":"  - Managed releases `v1.0 - v2.1` (Latest release)","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"Luo-Z-Y"},"content":"  - Managed issue tracker and milestones","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"Luo-Z-Y"},"content":"  - Managed project documentation","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"Luo-Z-Y"},"content":"  - Managed project releases","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"Luo-Z-Y"},"content":"  - Managed project CI/CD","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"Luo-Z-Y"},"content":"### Enhancements to existing features:","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"Luo-Z-Y"},"content":"- **Enhancement 1**: Updated the `README.md` file to include a brief description of the project.","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"Luo-Z-Y"},"content":"- **Enhancement 2**: Updated the `UserGuide.md` file to include a detailed user guide for the project.","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"Luo-Z-Y"},"content":"- **Enhancement 3**: Updated the `AboutUs.md` file to include a brief introduction of the team members.","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"Luo-Z-Y"},"content":"### Documentation:","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"Luo-Z-Y"},"content":"- **Documentation 1**: [User Guide](","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"Luo-Z-Y"},"content":"- **Documentation 2**: [Developer Guide](","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"Luo-Z-Y"},"content":"- **Documentation 3**: [About Us](","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"Luo-Z-Y"},"content":"### Community:","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"Luo-Z-Y"},"content":"- **Community 1**: Reported bugs and suggestions for other teams in the project.","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"Luo-Z-Y"},"content":"- **Community 2**: Reviewed PRs for other teams in the project.","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"Luo-Z-Y":36}},{"path":"src/main/java/seedu/voyagers/VoyagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jthibault03"},"content":"package seedu.voyagers;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"jthibault03"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"jthibault03"},"content":" * Generic exception class for Voyagers.","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"jthibault03"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"jthibault03"},"content":"public class VoyagerException extends Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"    public VoyagerException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"    public String toString(){","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"        return \"OOPS!!! \" + super.getMessage();","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"    public void printExceptionMessage() {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"jthibault03"},"content":"        System.out.println(\"An error occurred\");","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"    public static class ParserDefinitions {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"        public static final String[] ADDMAINTRIP \u003d {\"add\", \"main\", \"trip\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"        public static final String[] ADDSUBTRIP \u003d {\"add\", \"sub\", \"trip\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"        public static final String[] ADDEXPENSE \u003d {\"add\", \"expense\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"        public static final String[] DELETEMAINTRIP \u003d {\"delete\", \"main\", \"trip\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"azamanis":17,"jthibault03":9}},{"path":"src/main/java/seedu/voyagers/Voyagers.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.BillList;","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.Profile;","lastModifiedDate":"2024-04-09"},{"lineNumber":5,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.ProfileList;","lastModifiedDate":"2024-04-09"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.commands.AutoTripStatusUpdateCommand;","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"import seedu.voyagers.paser.NewParser;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"import seedu.voyagers.commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"import seedu.voyagers.commands.ListCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Luo-Z-Y"},"content":"import static seedu.voyagers.utils.BillStorage.readBillFile;","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"//import static seedu.voyagers.utils.ProfileStorage.readProfileFile;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"import static seedu.voyagers.utils.ReviewStorage.readReviewFile;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"import static seedu.voyagers.utils.ReviewStorage.writeReviewFileMain;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"import static seedu.voyagers.utils.TripStorage.readTripFile;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"import static seedu.voyagers.utils.TripStorage.writeTripFileMain;","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"public class Voyagers {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"    private static final String TRIPS_FILE_NAME \u003d \"local-voyagers.txt\";","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"    private static final String REVIEWS_FILE_NAME \u003d \"local-reviews.txt\";","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"Luo-Z-Y"},"content":"    private static final String BILLS_FILE_NAME \u003d \"local-bills.txt\";","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"Luo-Z-Y"},"content":"    private static final String PROFILES_FILE_NAME \u003d \"local-profiles.txt\";","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"Luo-Z-Y"},"content":"    //TODO: change to private and add to the command.execute(Ui, tripList, storage)","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"    public TripList tripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"jthibault03"},"content":"    public ProfileList profileList;","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"Luo-Z-Y"},"content":"    public BillList billList;","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"    public Ui ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"    public Voyagers() {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"        this.tripList \u003d new TripList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Luo-Z-Y"},"content":"        billList \u003d new BillList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"jthibault03"},"content":"        profileList \u003d new ProfileList(new ArrayList\u003cProfile\u003e());","lastModifiedDate":"2024-04-09"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"Luo-Z-Y"},"content":"        new Voyagers().run();","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Luo-Z-Y"},"content":"    void run() {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"Luo-Z-Y"},"content":"        Logger logger \u003d Logger.getLogger(\"Voyagers\");","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Luo-Z-Y"},"content":"        logger.setLevel(Level.INFO);","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Luo-Z-Y"},"content":"        //assert false : \"This is a debug assertion set to fail.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Luo-Z-Y"},"content":"        //ui.echo(\"Here are the trips in your list from the previous time:\", false, false);","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"        //TODO: make Storage a singleton","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Luo-Z-Y"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"        //TODO: check","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"        readTripFile(tripList.getTrips(), currentDir, TRIPS_FILE_NAME);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"CerealMiller"},"content":"        readReviewFile(tripList, currentDir, REVIEWS_FILE_NAME);","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"jthibault03"},"content":"        //TODO: load in Profiles and Bills from save file","lastModifiedDate":"2024-04-09"},{"lineNumber":65,"author":{"gitId":"jthibault03"},"content":"        //readBillFile(billList, currentDir, BILLS_FILE_NAME);","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Luo-Z-Y"},"content":"        //readProfileFile(profileList, currentDir, PROFILES_FILE_NAME);","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"        new ListCommand().execute(tripList, ui, null);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"Luo-Z-Y"},"content":"        ui.showNextCommand();","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"            try {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"                Command c \u003d NewParser.parse(fullCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"                c.execute(tripList, ui, null);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"            } catch (Exception e) { //TODO: change to specific exceptions","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"                ui.echo(e.getMessage());","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"Luo-Z-Y"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"CerealMiller"},"content":"        writeTripFileMain(tripList.getTrips(), tripList.size(), currentDir, TRIPS_FILE_NAME);","lastModifiedDate":"2024-04-11"},{"lineNumber":85,"author":{"gitId":"CerealMiller"},"content":"        writeReviewFileMain(tripList, tripList.size(), currentDir, REVIEWS_FILE_NAME);","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"azamanis":30,"Luo-Z-Y":33,"CerealMiller":15,"jthibault03":6,"-":4}},{"path":"src/main/java/seedu/voyagers/classes/Bill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jthibault03"},"content":"package seedu.voyagers.classes;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"import seedu.voyagers.utils.Currency;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.utils.FormatDate;","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.utils.Payable;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"jthibault03"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"jthibault03"},"content":"//NOTE: this class uses object Double class, since it implements ArrayLists.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"public class Bill implements Payable {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"jthibault03"},"content":"    private String tripName;","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"jthibault03"},"content":"    private String billName;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"    private double amount;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"    private Currency currency;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"jthibault03"},"content":"    private Trip trip;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"    private Profile payer;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"jthibault03"},"content":"    //raw Strings to be used in toString method.","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"jthibault03"},"content":"    private String othersRaw;","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"    // hashmap with key as profile and value as the percentage of the bill they are responsible for","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"    // percentages must sum to 100","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"    private HashMap\u003cProfile, Double\u003e participants \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"jthibault03"},"content":"    //people on this bill.","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"jthibault03"},"content":"    private ArrayList\u003cProfile\u003e people \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"jthibault03"},"content":"    private ArrayList\u003cDouble\u003e percentages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"jthibault03"},"content":"    private boolean paid;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"jthibault03"},"content":"    public Bill(String[] args, TripList trips) {","lastModifiedDate":"2024-04-09"},{"lineNumber":36,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"jthibault03"},"content":"        //TODO: setCurrency method and null currency","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"        this.trip \u003d trips.getTrip(args[0]);","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"        //TODO: check that error message reveals helpful info if no such trip exists","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"jthibault03"},"content":"        this.tripName \u003d args[0];","lastModifiedDate":"2024-04-09"},{"lineNumber":42,"author":{"gitId":"jthibault03"},"content":"        this.billName \u003d args[1];","lastModifiedDate":"2024-04-09"},{"lineNumber":43,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"jthibault03"},"content":"        if (ProfileList.findProfile(args[2]) \u003d\u003d -1) {","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"jthibault03"},"content":"            this.payer \u003d new Profile(args[2]);","lastModifiedDate":"2024-04-09"},{"lineNumber":46,"author":{"gitId":"jthibault03"},"content":"        } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"jthibault03"},"content":"            this.payer \u003d ProfileList.getProfile(args[2]);","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"jthibault03"},"content":"        this.amount \u003d Double.parseDouble(args[4]);","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"        this.participants \u003d setParticipants(args[4], args[2], args[3], args[5]);","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"        //TODO: check these args are the right index number","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"jthibault03"},"content":"        this.percentages \u003d makeDoublesArray(args[5]);","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"jthibault03"},"content":"        this.currency \u003d trip.getCurrency();","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"jthibault03"},"content":"        checkPercentages(percentages);","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"jthibault03"},"content":"        this.othersRaw \u003d args[3];","lastModifiedDate":"2024-04-09"},{"lineNumber":56,"author":{"gitId":"jthibault03"},"content":"        for (Profile x : participants.keySet()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":57,"author":{"gitId":"jthibault03"},"content":"            this.people.add(x);","lastModifiedDate":"2024-04-09"},{"lineNumber":58,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"jthibault03"},"content":"    public Bill(String tripName, String billName, Profile payer, Double amount, Currency currency,","lastModifiedDate":"2024-04-08"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"                ArrayList\u003cProfile\u003e people, ArrayList\u003cDouble\u003e percentages) {","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"jthibault03"},"content":"        if (people.size() + 1 !\u003d percentages.size()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"jthibault03"},"content":"            throw new IllegalArgumentException(\"Number of elements in \u0027people\u0027 and \u0027percentages\u0027 must be equal\");","lastModifiedDate":"2024-04-08"},{"lineNumber":65,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"        checkPercentages(percentages);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"        this.participants \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"        for (int i \u003d 0; i \u003c people.size(); i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"CerealMiller"},"content":"            this.participants.put(people.get(i), (percentages.get(i) * amount) / 100.0);","lastModifiedDate":"2024-04-11"},{"lineNumber":72,"author":{"gitId":"CerealMiller"},"content":"            //TODO: check; this would be the actual amount they\u0027re responsible for","lastModifiedDate":"2024-04-11"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"jthibault03"},"content":"        this.tripName \u003d tripName;","lastModifiedDate":"2024-04-08"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"        this.payer \u003d payer;","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"jthibault03"},"content":"        this.billName \u003d billName;","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"jthibault03"},"content":"        this.percentages \u003d percentages;","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"jthibault03"},"content":"        this.paid \u003d false;","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"jthibault03"},"content":"    //sets default percentages to equal when no percentages are provided","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"    public Bill(String billName, Profile payer, Double amount, Currency currency,","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"                ArrayList\u003cProfile\u003e people) {","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"jthibault03"},"content":"        int numPeople \u003d people.size();","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"CerealMiller"},"content":"        double percentage \u003d (double) 100 / numPeople;","lastModifiedDate":"2024-04-11"},{"lineNumber":89,"author":{"gitId":"CerealMiller"},"content":"        //TODO: check that this is compatible w the rest; this is a decimal","lastModifiedDate":"2024-04-11"},{"lineNumber":90,"author":{"gitId":"jthibault03"},"content":"        Double[] percentages \u003d new Double[numPeople];","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"jthibault03"},"content":"        Arrays.fill(percentages, percentage);","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"jthibault03"},"content":"        ArrayList\u003cDouble\u003e p \u003d new ArrayList\u003c\u003e(Arrays.asList(percentages));","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"jthibault03"},"content":"        new Bill(tripName, billName, payer, amount, currency, people, p);","lastModifiedDate":"2024-04-08"},{"lineNumber":94,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"azamanis"},"content":"    public Bill(String billName, Profile payer, Double amount, Currency currency,","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"azamanis"},"content":"                HashMap\u003cProfile, Double\u003e participants) {","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"azamanis"},"content":"        this.billName \u003d billName;","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"azamanis"},"content":"        this.payer \u003d payer;","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"azamanis"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"azamanis"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"azamanis"},"content":"        this.participants \u003d participants;","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"azamanis"},"content":"        this.paid \u003d false;","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"jthibault03"},"content":"    public Bill(String billName) {","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"jthibault03"},"content":"        this.billName \u003d billName;","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"jthibault03"},"content":"        this.paid \u003d false;","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"jthibault03"},"content":"    public ArrayList\u003cDouble\u003e makeDoublesArray(String input) {","lastModifiedDate":"2024-04-08"},{"lineNumber":112,"author":{"gitId":"jthibault03"},"content":"        String[] inputs \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2024-04-08"},{"lineNumber":113,"author":{"gitId":"jthibault03"},"content":"        ArrayList\u003cDouble\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-08"},{"lineNumber":114,"author":{"gitId":"jthibault03"},"content":"        for (String i : inputs) {","lastModifiedDate":"2024-04-08"},{"lineNumber":115,"author":{"gitId":"jthibault03"},"content":"            arr.add(Double.parseDouble(i));","lastModifiedDate":"2024-04-08"},{"lineNumber":116,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":117,"author":{"gitId":"jthibault03"},"content":"        return arr;","lastModifiedDate":"2024-04-08"},{"lineNumber":118,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":119,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":120,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":121,"author":{"gitId":"jthibault03"},"content":"    public HashMap\u003cProfile, Double\u003e setParticipants(String amount, String payer, String others, String percentages) {","lastModifiedDate":"2024-04-09"},{"lineNumber":122,"author":{"gitId":"jthibault03"},"content":"        participants.clear();","lastModifiedDate":"2024-04-08"},{"lineNumber":123,"author":{"gitId":"jthibault03"},"content":"        Double amountAsDouble \u003d Double.parseDouble(amount);","lastModifiedDate":"2024-04-08"},{"lineNumber":124,"author":{"gitId":"jthibault03"},"content":"        String[] words \u003d payer.concat(\" \").concat(others).split(\"\\\\s+\");","lastModifiedDate":"2024-04-09"},{"lineNumber":125,"author":{"gitId":"jthibault03"},"content":"        String[] percentagesArr \u003d percentages.split(\"\\\\s+\");","lastModifiedDate":"2024-04-08"},{"lineNumber":126,"author":{"gitId":"jthibault03"},"content":"        if (hasDuplicates(words)) {","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"jthibault03"},"content":"            throw new IllegalArgumentException(\"participant names must be unique\");","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"jthibault03"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2024-04-08"},{"lineNumber":130,"author":{"gitId":"jthibault03"},"content":"            Profile person;","lastModifiedDate":"2024-04-08"},{"lineNumber":131,"author":{"gitId":"jthibault03"},"content":"            if (ProfileList.findProfile(words[i]) \u003d\u003d -1) {","lastModifiedDate":"2024-04-08"},{"lineNumber":132,"author":{"gitId":"CerealMiller"},"content":"                //Creates a profile for this person and adds them to the ProfileList if they are not already in list.","lastModifiedDate":"2024-04-11"},{"lineNumber":133,"author":{"gitId":"jthibault03"},"content":"                person \u003d new Profile(words[i]);","lastModifiedDate":"2024-04-08"},{"lineNumber":134,"author":{"gitId":"jthibault03"},"content":"                ProfileList.add(person);","lastModifiedDate":"2024-04-08"},{"lineNumber":135,"author":{"gitId":"jthibault03"},"content":"            } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":136,"author":{"gitId":"jthibault03"},"content":"                person \u003d ProfileList.getProfile(words[i]);","lastModifiedDate":"2024-04-08"},{"lineNumber":137,"author":{"gitId":"jthibault03"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":138,"author":{"gitId":"jthibault03"},"content":"            participants.put(person, Double.parseDouble(percentagesArr[i]) * amountAsDouble);","lastModifiedDate":"2024-04-08"},{"lineNumber":139,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":140,"author":{"gitId":"jthibault03"},"content":"        return participants;","lastModifiedDate":"2024-04-08"},{"lineNumber":141,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":142,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":143,"author":{"gitId":"jthibault03"},"content":"    public String getName() {","lastModifiedDate":"2024-04-08"},{"lineNumber":144,"author":{"gitId":"jthibault03"},"content":"        return this.billName;","lastModifiedDate":"2024-04-08"},{"lineNumber":145,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":146,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":147,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"jthibault03"},"content":"    public void addPeople(Profile[] newPeople) {","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"jthibault03"},"content":"        for (Profile newPerson : newPeople) {","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"jthibault03"},"content":"            addPerson(newPerson, this.amount / people.size());","lastModifiedDate":"2024-04-08"},{"lineNumber":151,"author":{"gitId":"jthibault03"},"content":"            people.add(newPerson);","lastModifiedDate":"2024-04-08"},{"lineNumber":152,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"jthibault03"},"content":"    public void addPerson(Profile person, Double percentage) {","lastModifiedDate":"2024-04-08"},{"lineNumber":156,"author":{"gitId":"jthibault03"},"content":"        if (!nameExists(person)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"jthibault03"},"content":"            //refactorPercentages(); TODO: implement this method","lastModifiedDate":"2024-04-08"},{"lineNumber":158,"author":{"gitId":"jthibault03"},"content":"            participants.put(person, percentage * this.amount);","lastModifiedDate":"2024-04-08"},{"lineNumber":159,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"jthibault03"},"content":"    public void removePerson(Profile person) {","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"jthibault03"},"content":"        if (nameExists(person)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"jthibault03"},"content":"            people.remove(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"jthibault03"},"content":"    private boolean nameExists(Profile person) {","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"jthibault03"},"content":"        return people.contains(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":172,"author":{"gitId":"jthibault03"},"content":"    public void removePeople(Profile[] removeThesePeople) {","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"jthibault03"},"content":"        for (Profile person : removeThesePeople) {","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"jthibault03"},"content":"            removePerson(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":178,"author":{"gitId":"jthibault03"},"content":"    public ArrayList\u003cProfile\u003e getPeople() {","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"jthibault03"},"content":"        return people;","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"jthibault03"},"content":"    public boolean hasDuplicates(String[] arr) {","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"jthibault03"},"content":"        HashSet\u003cString\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"jthibault03"},"content":"        for (String s : arr) {","lastModifiedDate":"2024-04-15"},{"lineNumber":185,"author":{"gitId":"jthibault03"},"content":"            if (!set.add(s)) { // If unable to add the element to the set, it means it\u0027s a duplicate","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"jthibault03"},"content":"                return true;","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"jthibault03"},"content":"            }","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"jthibault03"},"content":"        return false;","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":191,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":192,"author":{"gitId":"azamanis"},"content":"    public static void checkPercentages(ArrayList\u003cDouble\u003e list) {","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"azamanis"},"content":"        double sum \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"azamanis"},"content":"        for (double num : list) {","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"azamanis"},"content":"            sum +\u003d num;","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"azamanis"},"content":"            if (num \u003c 0) {","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"azamanis"},"content":"                throw new IllegalArgumentException(\"Percentages cannot be negative\");","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"jthibault03"},"content":"        //In the case of number of people not divisible by 3","lastModifiedDate":"2024-04-09"},{"lineNumber":202,"author":{"gitId":"jthibault03"},"content":"        if (Math.abs(sum - 100) \u003e\u003d 0.5) {","lastModifiedDate":"2024-04-09"},{"lineNumber":203,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(\"Percentages do not sum to 100\");","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"azamanis"},"content":"    public static void checkPercentages(Double[] p) {","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"azamanis"},"content":"        checkPercentages(new ArrayList\u003c\u003e(Arrays.asList(p)));","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":211,"author":{"gitId":"jthibault03"},"content":"    public static double sumPercentages(ArrayList\u003cDouble\u003e list) {","lastModifiedDate":"2024-03-27"},{"lineNumber":212,"author":{"gitId":"jthibault03"},"content":"        double sum \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"jthibault03"},"content":"        for (double num : list) {","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"jthibault03"},"content":"            sum +\u003d num;","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"jthibault03"},"content":"        return sum;","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":219,"author":{"gitId":"jthibault03"},"content":"    public static double sumPercentages(Double[] list) {","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"jthibault03"},"content":"        double sum \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"jthibault03"},"content":"        for (double num : list) {","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"jthibault03"},"content":"            sum +\u003d num;","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"jthibault03"},"content":"        return sum;","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":226,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":227,"author":{"gitId":"jthibault03"},"content":"    public void modifyPercentages(Double[] percentages) {","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"jthibault03"},"content":"        if (percentages.length !\u003d this.participants.size()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":229,"author":{"gitId":"jthibault03"},"content":"            throw new IllegalArgumentException(\"Number of percentage arguments must equal the number of people\");","lastModifiedDate":"2024-03-27"},{"lineNumber":230,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":231,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":232,"author":{"gitId":"azamanis"},"content":"        checkPercentages(percentages);","lastModifiedDate":"2024-03-27"},{"lineNumber":233,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"azamanis"},"content":"        this.percentages \u003d new ArrayList\u003c\u003e(Arrays.asList(percentages));","lastModifiedDate":"2024-03-27"},{"lineNumber":235,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":238,"author":{"gitId":"jthibault03"},"content":"    public ArrayList\u003cDouble\u003e getPercentages() {","lastModifiedDate":"2024-03-27"},{"lineNumber":239,"author":{"gitId":"jthibault03"},"content":"        return this.percentages;","lastModifiedDate":"2024-03-27"},{"lineNumber":240,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":241,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":242,"author":{"gitId":"azamanis"},"content":"    public void setAmount(double amount) {","lastModifiedDate":"2024-03-27"},{"lineNumber":243,"author":{"gitId":"azamanis"},"content":"        if (amount \u003c 0) {","lastModifiedDate":"2024-03-27"},{"lineNumber":244,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(\"Amount cannot be negative\");","lastModifiedDate":"2024-03-27"},{"lineNumber":245,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":246,"author":{"gitId":"azamanis"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2024-03-27"},{"lineNumber":247,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":248,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":249,"author":{"gitId":"azamanis"},"content":"    public double getAmount() {","lastModifiedDate":"2024-03-27"},{"lineNumber":250,"author":{"gitId":"azamanis"},"content":"        return this.amount;","lastModifiedDate":"2024-03-27"},{"lineNumber":251,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":253,"author":{"gitId":"azamanis"},"content":"    public void setCurrency(Currency currency) {","lastModifiedDate":"2024-03-27"},{"lineNumber":254,"author":{"gitId":"jthibault03"},"content":"        if (currency \u003d\u003d null) {","lastModifiedDate":"2024-04-15"},{"lineNumber":255,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":256,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":257,"author":{"gitId":"azamanis"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2024-03-27"},{"lineNumber":258,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":259,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":260,"author":{"gitId":"azamanis"},"content":"    public Currency getCurrency() {","lastModifiedDate":"2024-03-27"},{"lineNumber":261,"author":{"gitId":"azamanis"},"content":"        return this.currency;","lastModifiedDate":"2024-03-27"},{"lineNumber":262,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":263,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":264,"author":{"gitId":"jthibault03"},"content":"    public void setTrip(Trip trip) {","lastModifiedDate":"2024-03-27"},{"lineNumber":265,"author":{"gitId":"jthibault03"},"content":"        this.trip \u003d trip;","lastModifiedDate":"2024-03-27"},{"lineNumber":266,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":267,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":268,"author":{"gitId":"jthibault03"},"content":"    public Trip getTrip() {","lastModifiedDate":"2024-03-27"},{"lineNumber":269,"author":{"gitId":"jthibault03"},"content":"        return this.trip;","lastModifiedDate":"2024-03-27"},{"lineNumber":270,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":271,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":272,"author":{"gitId":"jthibault03"},"content":"    public void payBill() {","lastModifiedDate":"2024-03-27"},{"lineNumber":273,"author":{"gitId":"jthibault03"},"content":"        this.paid \u003d true;","lastModifiedDate":"2024-03-27"},{"lineNumber":274,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":275,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":276,"author":{"gitId":"azamanis"},"content":"    public Profile getPayer() {","lastModifiedDate":"2024-03-31"},{"lineNumber":277,"author":{"gitId":"azamanis"},"content":"        return this.payer;","lastModifiedDate":"2024-03-31"},{"lineNumber":278,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":279,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":280,"author":{"gitId":"azamanis"},"content":"    public HashMap\u003cProfile, Double\u003e getParticipants() {","lastModifiedDate":"2024-03-31"},{"lineNumber":281,"author":{"gitId":"azamanis"},"content":"        return this.participants;","lastModifiedDate":"2024-03-31"},{"lineNumber":282,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":283,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":284,"author":{"gitId":"jthibault03"},"content":"    public String listOthers() {","lastModifiedDate":"2024-04-09"},{"lineNumber":285,"author":{"gitId":"jthibault03"},"content":"        String s \u003d \"\";","lastModifiedDate":"2024-04-09"},{"lineNumber":286,"author":{"gitId":"jthibault03"},"content":"        for (Profile p : participants.keySet()) {","lastModifiedDate":"2024-04-09"},{"lineNumber":287,"author":{"gitId":"jthibault03"},"content":"            s +\u003d p.getName() + \", \";","lastModifiedDate":"2024-04-09"},{"lineNumber":288,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":289,"author":{"gitId":"jthibault03"},"content":"        return s.substring(0, s.length() - 2);","lastModifiedDate":"2024-04-09"},{"lineNumber":290,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":291,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":292,"author":{"gitId":"CerealMiller"},"content":"    public String getTripName(){","lastModifiedDate":"2024-04-14"},{"lineNumber":293,"author":{"gitId":"CerealMiller"},"content":"        return this.tripName;","lastModifiedDate":"2024-04-14"},{"lineNumber":294,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":295,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":296,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":297,"author":{"gitId":"jthibault03"},"content":"    @Override","lastModifiedDate":"2024-04-09"},{"lineNumber":298,"author":{"gitId":"jthibault03"},"content":"    public String toString() {","lastModifiedDate":"2024-04-09"},{"lineNumber":299,"author":{"gitId":"jthibault03"},"content":"        String s \u003d \"Trip: \" + tripName + \"\\t\\tBill Name: \" +","lastModifiedDate":"2024-04-09"},{"lineNumber":300,"author":{"gitId":"jthibault03"},"content":"                billName + \"\\t\\tPayer: \" +","lastModifiedDate":"2024-04-09"},{"lineNumber":301,"author":{"gitId":"jthibault03"},"content":"                payer.getName() + \"\\t\\tOthers: \" + othersRaw","lastModifiedDate":"2024-04-09"},{"lineNumber":302,"author":{"gitId":"jthibault03"},"content":"                + \"\\t\\tAmount: \" + amount","lastModifiedDate":"2024-04-09"},{"lineNumber":303,"author":{"gitId":"jthibault03"},"content":"                + \"\\t\\tPercentages: \" + percentages","lastModifiedDate":"2024-04-09"},{"lineNumber":304,"author":{"gitId":"jthibault03"},"content":"                + \"\\t\\tCurrency: \" + this.currency","lastModifiedDate":"2024-04-09"},{"lineNumber":305,"author":{"gitId":"jthibault03"},"content":"                + \"\\t\\tPaid?: \" + this.paid;","lastModifiedDate":"2024-04-09"},{"lineNumber":306,"author":{"gitId":"jthibault03"},"content":"        return s;","lastModifiedDate":"2024-04-09"},{"lineNumber":307,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":308,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":309,"author":{"gitId":"Luo-Z-Y"},"content":"    public String toStorage() {","lastModifiedDate":"2024-04-11"},{"lineNumber":310,"author":{"gitId":"CerealMiller"},"content":"        /*String s \u003d \"Trip: \" + tripName + \"\\t\\tBill Name: \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":311,"author":{"gitId":"CerealMiller"},"content":"                billName + \"\\t\\tPayer: \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":312,"author":{"gitId":"CerealMiller"},"content":"                payer.getName() + \"\\t\\tOthers: \" + othersRaw","lastModifiedDate":"2024-04-13"},{"lineNumber":313,"author":{"gitId":"CerealMiller"},"content":"                + \"\\t\\tAmount: \" + amount","lastModifiedDate":"2024-04-13"},{"lineNumber":314,"author":{"gitId":"CerealMiller"},"content":"                + \"\\t\\tPercentages: \" + percentages","lastModifiedDate":"2024-04-13"},{"lineNumber":315,"author":{"gitId":"CerealMiller"},"content":"                + \"\\t\\tCurrency: \" + this.currency","lastModifiedDate":"2024-04-13"},{"lineNumber":316,"author":{"gitId":"CerealMiller"},"content":"                + \"\\t\\tPaid?: \" + this.paid;*/","lastModifiedDate":"2024-04-13"},{"lineNumber":317,"author":{"gitId":"Luo-Z-Y"},"content":"        String s \u003d tripName + \"|\" + billName + \"|\" + payer.getName() +","lastModifiedDate":"2024-04-11"},{"lineNumber":318,"author":{"gitId":"Luo-Z-Y"},"content":"                \"|\" + amount + \"|\" + currency + \"|\" + othersRaw + \"|\"","lastModifiedDate":"2024-04-11"},{"lineNumber":319,"author":{"gitId":"Luo-Z-Y"},"content":"                + percentages.toString().replace(\"[\", \"\").","lastModifiedDate":"2024-04-11"},{"lineNumber":320,"author":{"gitId":"Luo-Z-Y"},"content":"                replace(\"]\", \"\") + \"|\"","lastModifiedDate":"2024-04-11"},{"lineNumber":321,"author":{"gitId":"Luo-Z-Y"},"content":"                + paid + \"\\n\";","lastModifiedDate":"2024-04-11"},{"lineNumber":322,"author":{"gitId":"Luo-Z-Y"},"content":"        return s;","lastModifiedDate":"2024-04-11"},{"lineNumber":323,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":324,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":325,"author":{"gitId":"Luo-Z-Y"},"content":"    public Object getPayers() {","lastModifiedDate":"2024-04-11"},{"lineNumber":326,"author":{"gitId":"Luo-Z-Y"},"content":"        return this.payer;","lastModifiedDate":"2024-04-11"},{"lineNumber":327,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":328,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"azamanis":82,"Luo-Z-Y":14,"CerealMiller":30,"jthibault03":202}},{"path":"src/main/java/seedu/voyagers/classes/BillList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jthibault03"},"content":"package seedu.voyagers.classes;","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.VoyagerException;","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"jthibault03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-08"},{"lineNumber":5,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"public class BillList {","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"    public static ArrayList\u003cBill\u003e bills;","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"    private Trip trip;","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    public BillList() {","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"        this.bills \u003d bills;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"    public BillList(ArrayList\u003cBill\u003e bills) {","lastModifiedDate":"2024-04-08"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"        this.bills \u003d bills;","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"jthibault03"},"content":"    public void add(Bill bill) {","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"        if (isBillNameRepeated(bill)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"jthibault03"},"content":"            throw new IllegalArgumentException(\"Bill name already exists\");","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"jthibault03"},"content":"        } else {","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"jthibault03"},"content":"            this.bills.add(bill);","lastModifiedDate":"2024-04-08"},{"lineNumber":23,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":26,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"jthibault03"},"content":"     * Removes a bill from the list","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"jthibault03"},"content":"     * @param index the index of the bill to remove. Index starts from 1","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"jthibault03"},"content":"     * @return the bill that was removed","lastModifiedDate":"2024-04-08"},{"lineNumber":30,"author":{"gitId":"jthibault03"},"content":"     * @throws VoyagerException if the index is invalid","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"jthibault03"},"content":"    public Bill remove(String index) throws VoyagerException{","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"jthibault03"},"content":"        Bill bill \u003d bills.get(checkIndex(index) - 1);","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"jthibault03"},"content":"        this.bills.remove(checkIndex(index) - 1);","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"jthibault03"},"content":"        return bill;","lastModifiedDate":"2024-04-08"},{"lineNumber":36,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":37,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":39,"author":{"gitId":"jthibault03"},"content":"     * Removes a bill from the list","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"jthibault03"},"content":"     * @param index the index of the bill to remove. Index starts from 0","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"jthibault03"},"content":"     * @return the bill that was removed","lastModifiedDate":"2024-04-08"},{"lineNumber":42,"author":{"gitId":"jthibault03"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2024-04-08"},{"lineNumber":43,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"jthibault03"},"content":"    public Bill remove(int index) throws IndexOutOfBoundsException{","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"jthibault03"},"content":"        Bill bill \u003d bills.get(index);","lastModifiedDate":"2024-04-08"},{"lineNumber":46,"author":{"gitId":"jthibault03"},"content":"        this.bills.remove(index);","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"jthibault03"},"content":"        return bill;","lastModifiedDate":"2024-04-08"},{"lineNumber":48,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":49,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"    public ArrayList\u003cBill\u003e getList(){","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"        return this.bills;","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":55,"author":{"gitId":"jthibault03"},"content":"     * Returns the bill at the specified index","lastModifiedDate":"2024-04-08"},{"lineNumber":56,"author":{"gitId":"jthibault03"},"content":"     * @param index the index of the bill to return. Index starts from 0","lastModifiedDate":"2024-04-08"},{"lineNumber":57,"author":{"gitId":"jthibault03"},"content":"     * @return the bill at the specified index","lastModifiedDate":"2024-04-08"},{"lineNumber":58,"author":{"gitId":"jthibault03"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"jthibault03"},"content":"    public Bill get(int index) throws IndexOutOfBoundsException{","lastModifiedDate":"2024-04-08"},{"lineNumber":61,"author":{"gitId":"jthibault03"},"content":"        return bills.get(index);","lastModifiedDate":"2024-04-09"},{"lineNumber":62,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":63,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":64,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":65,"author":{"gitId":"jthibault03"},"content":"     * Returns the bill at the specified index","lastModifiedDate":"2024-04-08"},{"lineNumber":66,"author":{"gitId":"jthibault03"},"content":"     * @param index the index of the bill to return. Index starts from 1","lastModifiedDate":"2024-04-08"},{"lineNumber":67,"author":{"gitId":"jthibault03"},"content":"     * @return the bill at the specified index","lastModifiedDate":"2024-04-08"},{"lineNumber":68,"author":{"gitId":"jthibault03"},"content":"     * @throws VoyagerException if the index is invalid","lastModifiedDate":"2024-04-08"},{"lineNumber":69,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":70,"author":{"gitId":"jthibault03"},"content":"    public Bill get(String index) throws VoyagerException{","lastModifiedDate":"2024-04-08"},{"lineNumber":71,"author":{"gitId":"jthibault03"},"content":"        return this.bills.get(checkIndex(index) - 1);","lastModifiedDate":"2024-04-08"},{"lineNumber":72,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":73,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":74,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":75,"author":{"gitId":"jthibault03"},"content":"     * Tries to parse the index to an integer and checks if it is within the range of the list.","lastModifiedDate":"2024-04-08"},{"lineNumber":76,"author":{"gitId":"jthibault03"},"content":"     * Index starts from 1.","lastModifiedDate":"2024-04-08"},{"lineNumber":77,"author":{"gitId":"jthibault03"},"content":"     * @param index the index to check","lastModifiedDate":"2024-04-08"},{"lineNumber":78,"author":{"gitId":"jthibault03"},"content":"     * @return the index as an integer","lastModifiedDate":"2024-04-08"},{"lineNumber":79,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":80,"author":{"gitId":"jthibault03"},"content":"    private int checkIndex(String index) throws VoyagerException{","lastModifiedDate":"2024-04-08"},{"lineNumber":81,"author":{"gitId":"jthibault03"},"content":"        int i;","lastModifiedDate":"2024-04-08"},{"lineNumber":82,"author":{"gitId":"jthibault03"},"content":"        try{","lastModifiedDate":"2024-04-08"},{"lineNumber":83,"author":{"gitId":"jthibault03"},"content":"            i \u003d Integer.parseInt(index);","lastModifiedDate":"2024-04-08"},{"lineNumber":84,"author":{"gitId":"jthibault03"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2024-04-08"},{"lineNumber":85,"author":{"gitId":"jthibault03"},"content":"            throw new VoyagerException(\"Please enter a valid number\");","lastModifiedDate":"2024-04-08"},{"lineNumber":86,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":87,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":88,"author":{"gitId":"jthibault03"},"content":"        if (i \u003e this.bills.size() || i \u003c 1){","lastModifiedDate":"2024-04-08"},{"lineNumber":89,"author":{"gitId":"jthibault03"},"content":"            throw new VoyagerException(\"Sorry. There are only \" + bills.size() + \" bill(s) in the list\");","lastModifiedDate":"2024-04-08"},{"lineNumber":90,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":91,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":92,"author":{"gitId":"jthibault03"},"content":"        return i;","lastModifiedDate":"2024-04-08"},{"lineNumber":93,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":94,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":95,"author":{"gitId":"jthibault03"},"content":"    public void setBill(int index, Bill bill){","lastModifiedDate":"2024-04-08"},{"lineNumber":96,"author":{"gitId":"jthibault03"},"content":"        this.bills.set(index, bill);","lastModifiedDate":"2024-04-08"},{"lineNumber":97,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":98,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":99,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":100,"author":{"gitId":"jthibault03"},"content":"     * Finds the index of the bill with the specified name","lastModifiedDate":"2024-04-08"},{"lineNumber":101,"author":{"gitId":"jthibault03"},"content":"     * @param tripName the trip name containing the bill to find","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"jthibault03"},"content":"     * @param billName the name of the bill to find","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"jthibault03"},"content":"     * @return the index of the bill with the specified name. Returns -1 if no such bill is found","lastModifiedDate":"2024-04-08"},{"lineNumber":104,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":105,"author":{"gitId":"jthibault03"},"content":"    public static int findBill(String tripName, String billName){","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"jthibault03"},"content":"        for (int i \u003d 0; i \u003c bills.size(); i++){","lastModifiedDate":"2024-04-08"},{"lineNumber":107,"author":{"gitId":"jthibault03"},"content":"            if (bills.get(i).getName().equals(billName) \u0026\u0026 bills.get(i).getTripName().equals(tripName)){","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"jthibault03"},"content":"                return i;","lastModifiedDate":"2024-04-08"},{"lineNumber":109,"author":{"gitId":"jthibault03"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":110,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":111,"author":{"gitId":"jthibault03"},"content":"        return -1;","lastModifiedDate":"2024-04-08"},{"lineNumber":112,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":113,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":114,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"jthibault03"},"content":"    public static Bill getBill(String tripName, String billName) throws IllegalArgumentException{","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"jthibault03"},"content":"        int index \u003d findBill(tripName, billName);","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"jthibault03"},"content":"        if (index \u003d\u003d -1){","lastModifiedDate":"2024-04-08"},{"lineNumber":119,"author":{"gitId":"jthibault03"},"content":"            throw new IllegalArgumentException(\"No such trip found\");","lastModifiedDate":"2024-04-08"},{"lineNumber":120,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":121,"author":{"gitId":"jthibault03"},"content":"        return bills.get(index);","lastModifiedDate":"2024-04-08"},{"lineNumber":122,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":123,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":124,"author":{"gitId":"CerealMiller"},"content":"    public boolean isBillNameRepeated(Bill newBill){","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"CerealMiller"},"content":"        Trip trip \u003d  newBill.getTrip();","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"CerealMiller"},"content":"        for(int i \u003d 0; i \u003c bills.size(); i++){","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"CerealMiller"},"content":"            Bill existingBill \u003d bills.get(i);","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"CerealMiller"},"content":"            if (matchingTripNameAndBillName(existingBill, newBill)){","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"CerealMiller"},"content":"                return true;","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"CerealMiller"},"content":"        return false;","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":134,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":135,"author":{"gitId":"CerealMiller"},"content":"    private boolean matchingTripNameAndBillName(Bill bill1, Bill bill2){","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"CerealMiller"},"content":"        return bill1.getTripName().equals(bill2.getTripName()) \u0026\u0026 bill1.getName().equals(bill2.getName());","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":139,"author":{"gitId":"jthibault03"},"content":"    public ArrayList\u003cBill\u003e getBills(){","lastModifiedDate":"2024-04-08"},{"lineNumber":140,"author":{"gitId":"jthibault03"},"content":"        return bills;","lastModifiedDate":"2024-04-09"},{"lineNumber":141,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":142,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":143,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":144,"author":{"gitId":"jthibault03"},"content":"     * Returns the number of bills in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":145,"author":{"gitId":"jthibault03"},"content":"     * @return the number of bills in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":146,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":147,"author":{"gitId":"jthibault03"},"content":"    public int size(){","lastModifiedDate":"2024-04-08"},{"lineNumber":148,"author":{"gitId":"jthibault03"},"content":"        return this.bills.size();","lastModifiedDate":"2024-04-08"},{"lineNumber":149,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":150,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-04-08"}],"authorContributionMap":{"CerealMiller":19,"jthibault03":131}},{"path":"src/main/java/seedu/voyagers/classes/Profile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.classes;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Currency;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"jthibault03"},"content":"//TODO: update so each person can get a list of the bills they still owe.","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"public class Profile {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"    private String name;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"jthibault03"},"content":"    private Currency currency;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"jthibault03"},"content":"    public Profile(String name, Currency currency) {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"jthibault03"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"jthibault03"},"content":"    public Profile(String name) {","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"jthibault03"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"jthibault03"},"content":"        this.currency \u003d null;","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"jthibault03"},"content":"    public boolean equals(Profile p) {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"jthibault03"},"content":"        if (this.name.equals(p.name)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"jthibault03"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"jthibault03"},"content":"        } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"jthibault03"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"jthibault03"},"content":"    //TODO","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"jthibault03"},"content":"    public Bill billsOwed() {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"jthibault03"},"content":"        return null;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"jthibault03"},"content":"    //TODO","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"jthibault03"},"content":"    public Bill billsPaid() {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"jthibault03"},"content":"        return null;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"jthibault03"},"content":"    public String getName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"jthibault03"},"content":"        return this.name;","lastModifiedDate":"2024-04-09"},{"lineNumber":41,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"jthibault03"},"content":"    public void setCurrency(Currency currency) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"jthibault03"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Luo-Z-Y":3,"jthibault03":43}},{"path":"src/main/java/seedu/voyagers/classes/ProfileList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jthibault03"},"content":"package seedu.voyagers.classes;","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.VoyagerException;","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":5,"author":{"gitId":"jthibault03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"public class ProfileList {","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"jthibault03"},"content":"     * Represents a list of all profiles across trips. Static class since one ProfileList is used across all trips.","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    private static ArrayList\u003cProfile\u003e profileList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"    public ProfileList(ArrayList\u003cProfile\u003e profiles){","lastModifiedDate":"2024-04-08"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"jthibault03"},"content":"     * Adds a profile to the list","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"jthibault03"},"content":"     * @param profile the profile to add","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"jthibault03"},"content":"    public static void add(Profile profile){","lastModifiedDate":"2024-04-08"},{"lineNumber":22,"author":{"gitId":"jthibault03"},"content":"        if (isProfileNameRepeated(profile.getName())){","lastModifiedDate":"2024-04-08"},{"lineNumber":23,"author":{"gitId":"jthibault03"},"content":"            throw new IllegalArgumentException(\"Profile name already exists\");","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"        profileList.add(profile);","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"jthibault03"},"content":"     * Removes a Profile from the list","lastModifiedDate":"2024-04-08"},{"lineNumber":30,"author":{"gitId":"jthibault03"},"content":"     * @param index the index of the profile to remove. Index starts from 1","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"jthibault03"},"content":"     * @return the profile that was removed","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"jthibault03"},"content":"     * @throws VoyagerException if the index is invalid","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"jthibault03"},"content":"    public static Profile remove(String index) throws VoyagerException{","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"        Profile profile \u003d profileList.get(checkIndex(index) - 1);","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"        profileList.remove(checkIndex(index) - 1);","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"jthibault03"},"content":"        return profile;","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":39,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"jthibault03"},"content":"     * Removes a profile from the list","lastModifiedDate":"2024-04-08"},{"lineNumber":42,"author":{"gitId":"jthibault03"},"content":"     * @param index the index of the profile to remove. Index starts from 0","lastModifiedDate":"2024-04-08"},{"lineNumber":43,"author":{"gitId":"jthibault03"},"content":"     * @return the profile that was removed","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"jthibault03"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":46,"author":{"gitId":"jthibault03"},"content":"    public static Profile remove(int index) throws IndexOutOfBoundsException{","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"        Profile profile \u003d profileList.get(index);","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"        profileList.remove(index);","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"jthibault03"},"content":"        return profile;","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":51,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":52,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":53,"author":{"gitId":"jthibault03"},"content":"     * Returns the profile at the specified index","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"jthibault03"},"content":"     * @param index the index of the profile to return. Index starts from 0","lastModifiedDate":"2024-04-08"},{"lineNumber":55,"author":{"gitId":"jthibault03"},"content":"     * @return the profile at the specified index","lastModifiedDate":"2024-04-08"},{"lineNumber":56,"author":{"gitId":"jthibault03"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2024-04-08"},{"lineNumber":57,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":58,"author":{"gitId":"jthibault03"},"content":"    public static Profile get(int index) throws IndexOutOfBoundsException{","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"CerealMiller"},"content":"        return profileList.get(index);","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":61,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":62,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":63,"author":{"gitId":"jthibault03"},"content":"     * Returns the profile at the specified index","lastModifiedDate":"2024-04-08"},{"lineNumber":64,"author":{"gitId":"jthibault03"},"content":"     * @param index the index of the profile to return. Index starts from 1","lastModifiedDate":"2024-04-08"},{"lineNumber":65,"author":{"gitId":"jthibault03"},"content":"     * @return the profile at the specified index","lastModifiedDate":"2024-04-08"},{"lineNumber":66,"author":{"gitId":"jthibault03"},"content":"     * @throws VoyagerException if the index is invalid","lastModifiedDate":"2024-04-08"},{"lineNumber":67,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":68,"author":{"gitId":"jthibault03"},"content":"    public static Profile get(String index) throws VoyagerException{","lastModifiedDate":"2024-04-08"},{"lineNumber":69,"author":{"gitId":"CerealMiller"},"content":"        return profileList.get(checkIndex(index) - 1);","lastModifiedDate":"2024-04-11"},{"lineNumber":70,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":71,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":72,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":73,"author":{"gitId":"jthibault03"},"content":"     * Tries to parse the index to an integer and checks if it is within the range of the list.","lastModifiedDate":"2024-04-08"},{"lineNumber":74,"author":{"gitId":"jthibault03"},"content":"     * Index starts from 1.","lastModifiedDate":"2024-04-08"},{"lineNumber":75,"author":{"gitId":"jthibault03"},"content":"     * @param index the index to check","lastModifiedDate":"2024-04-08"},{"lineNumber":76,"author":{"gitId":"jthibault03"},"content":"     * @return the index as an integer","lastModifiedDate":"2024-04-08"},{"lineNumber":77,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":78,"author":{"gitId":"jthibault03"},"content":"    private static int checkIndex(String index) throws VoyagerException{","lastModifiedDate":"2024-04-08"},{"lineNumber":79,"author":{"gitId":"jthibault03"},"content":"        int i;","lastModifiedDate":"2024-04-08"},{"lineNumber":80,"author":{"gitId":"jthibault03"},"content":"        try{","lastModifiedDate":"2024-04-08"},{"lineNumber":81,"author":{"gitId":"jthibault03"},"content":"            i \u003d Integer.parseInt(index);","lastModifiedDate":"2024-04-08"},{"lineNumber":82,"author":{"gitId":"jthibault03"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2024-04-08"},{"lineNumber":83,"author":{"gitId":"jthibault03"},"content":"            throw new VoyagerException(\"Please enter a valid number\");","lastModifiedDate":"2024-04-08"},{"lineNumber":84,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":85,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":86,"author":{"gitId":"CerealMiller"},"content":"        if (i \u003e profileList.size() || i \u003c 1){","lastModifiedDate":"2024-04-11"},{"lineNumber":87,"author":{"gitId":"CerealMiller"},"content":"            throw new VoyagerException(\"Sorry. There are only \" + profileList.size() + \" profiles in the list\");","lastModifiedDate":"2024-04-11"},{"lineNumber":88,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":89,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":90,"author":{"gitId":"jthibault03"},"content":"        return i;","lastModifiedDate":"2024-04-08"},{"lineNumber":91,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":92,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":93,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":94,"author":{"gitId":"jthibault03"},"content":"    * Finds the index of the profile with the specified name","lastModifiedDate":"2024-04-08"},{"lineNumber":95,"author":{"gitId":"jthibault03"},"content":"    * @param name the name of the profile to find","lastModifiedDate":"2024-04-08"},{"lineNumber":96,"author":{"gitId":"jthibault03"},"content":"    * @return the index of the profile with the specified name. Returns -1 if no such profile is found","lastModifiedDate":"2024-04-08"},{"lineNumber":97,"author":{"gitId":"jthibault03"},"content":"    */","lastModifiedDate":"2024-04-08"},{"lineNumber":98,"author":{"gitId":"jthibault03"},"content":"    public static int findProfile(String name){","lastModifiedDate":"2024-04-08"},{"lineNumber":99,"author":{"gitId":"CerealMiller"},"content":"        for (int i \u003d 0; i \u003c profileList.size(); i++){","lastModifiedDate":"2024-04-11"},{"lineNumber":100,"author":{"gitId":"CerealMiller"},"content":"            if (profileList.get(i).getName().equals(name)){","lastModifiedDate":"2024-04-11"},{"lineNumber":101,"author":{"gitId":"jthibault03"},"content":"                return i;","lastModifiedDate":"2024-04-08"},{"lineNumber":102,"author":{"gitId":"jthibault03"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":103,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":104,"author":{"gitId":"jthibault03"},"content":"        return -1;","lastModifiedDate":"2024-04-08"},{"lineNumber":105,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":106,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":107,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":108,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":109,"author":{"gitId":"jthibault03"},"content":"    public static Profile getProfile(String name) throws IllegalArgumentException{","lastModifiedDate":"2024-04-08"},{"lineNumber":110,"author":{"gitId":"jthibault03"},"content":"        int index \u003d findProfile(name);","lastModifiedDate":"2024-04-08"},{"lineNumber":111,"author":{"gitId":"jthibault03"},"content":"        if (index \u003d\u003d -1){","lastModifiedDate":"2024-04-08"},{"lineNumber":112,"author":{"gitId":"jthibault03"},"content":"            throw new IllegalArgumentException(\"No such profile found\");","lastModifiedDate":"2024-04-08"},{"lineNumber":113,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":114,"author":{"gitId":"CerealMiller"},"content":"        return profileList.get(index);","lastModifiedDate":"2024-04-11"},{"lineNumber":115,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":116,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":117,"author":{"gitId":"jthibault03"},"content":"    public static boolean isProfileNameRepeated(String name){","lastModifiedDate":"2024-04-08"},{"lineNumber":118,"author":{"gitId":"jthibault03"},"content":"        return findProfile(name) !\u003d -1;","lastModifiedDate":"2024-04-08"},{"lineNumber":119,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":120,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":121,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":122,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":123,"author":{"gitId":"jthibault03"},"content":"    public static ArrayList\u003cProfile\u003e getProfiles(){","lastModifiedDate":"2024-04-08"},{"lineNumber":124,"author":{"gitId":"CerealMiller"},"content":"        return profileList;","lastModifiedDate":"2024-04-11"},{"lineNumber":125,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":126,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":127,"author":{"gitId":"jthibault03"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":128,"author":{"gitId":"jthibault03"},"content":"     * Returns the number of profiles in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":129,"author":{"gitId":"jthibault03"},"content":"     * @return the number of profiles in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":130,"author":{"gitId":"jthibault03"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":131,"author":{"gitId":"jthibault03"},"content":"    public static int size(){","lastModifiedDate":"2024-04-08"},{"lineNumber":132,"author":{"gitId":"CerealMiller"},"content":"        return profileList.size();","lastModifiedDate":"2024-04-11"},{"lineNumber":133,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":134,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-04-08"},{"lineNumber":135,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"}],"authorContributionMap":{"CerealMiller":15,"jthibault03":120}},{"path":"src/main/java/seedu/voyagers/classes/Review.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package seedu.voyagers.classes;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"public class Review {","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"    private int score;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"    private String reflection;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    private Trip trip;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    public Review(){","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"        this.score \u003d -1;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        this.reflection \u003d \"empty\";","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    public void setTrip(Trip trip) {","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"        this.trip \u003d trip;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"    public void setScore(int score) {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"        this.score \u003d score;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"    public void setScore(String score) {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"        this.score \u003d parseInt(score);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"    public void setReflection(String reflection) {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"        this.reflection \u003d reflection;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"    public int getScore() {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"        return score;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"    public String getReflection() {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"        return reflection;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"    public String toString() {","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"        return \"Here\u0027s what you wrote about \" + this.trip.getName() + \"\\n\\t\\tScore: \" + score","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"                + \"\\n\\t\\tReflection:\\n\\t\\t\" + reflection;","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CerealMiller":48}},{"path":"src/main/java/seedu/voyagers/classes/Trip.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.classes;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.utils.Currency;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.FormatDate;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Status;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"public class Trip {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"    private String name;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"    private Date startDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"    private Date endDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"    private String location;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"    private String description;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Luo-Z-Y"},"content":"    private String tripType;","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Luo-Z-Y"},"content":"    private Status status;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    private Review review;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"jthibault03"},"content":"    private Currency currency;","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"    private int subTripIndex \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"    private ArrayList\u003cTrip\u003e subTrips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"jthibault03"},"content":"    private BillList bills \u003d new BillList(new ArrayList\u003cBill\u003e());","lastModifiedDate":"2024-04-08"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"    public Trip(String name, Date startDate, Date endDate, String location, String description) {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"        if (startDate.after(endDate)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(\"Start date cannot be after end date\");","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"Luo-Z-Y"},"content":"        assert !startDate.after(endDate) : \"Start date cannot be after end date\";","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"        this.location \u003d location;","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"Luo-Z-Y"},"content":"        // if the date is in the future, the trip is ongoing","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"Luo-Z-Y"},"content":"        // if the date is in the past, the trip is completed","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"Luo-Z-Y"},"content":"        if (endDate.before(new Date())) {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"            setStatus(Status.COMPLETED);","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"Luo-Z-Y"},"content":"        } else if (startDate.after(new Date())) {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"            setStatus(Status.UPCOMING);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"Luo-Z-Y"},"content":"        } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"            setStatus(Status.ONGOING);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"        this.review \u003d new Review();","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"    public Trip(String[] args) throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"        this.name \u003d args[0];","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Luo-Z-Y"},"content":"        this.startDate \u003d FormatDate.dateFormat.parse(args[1]);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Luo-Z-Y"},"content":"        this.endDate \u003d FormatDate.dateFormat.parse(args[2]);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"        this.location \u003d args[3];","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"        this.description \u003d args[4];","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"CerealMiller"},"content":"        if (endDate.before(new Date())) {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"CerealMiller"},"content":"            setStatus(Status.COMPLETED);","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"CerealMiller"},"content":"        } else if (startDate.after(new Date())) {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"            setStatus(Status.UPCOMING);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"CerealMiller"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"CerealMiller"},"content":"            setStatus(Status.ONGOING);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"CerealMiller"},"content":"        this.review \u003d new Review();","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"    public String getName() {","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"        return name;","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"    public Date getStartDate() {","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"        return startDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"    public Date getEndDate() {","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"        return endDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"azamanis"},"content":"    public int getSubTripsSize() {","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"        return subTrips.size();","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":86,"author":{"gitId":"Luo-Z-Y"},"content":"    public String getTripType() {","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"Luo-Z-Y"},"content":"        return tripType;","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"Luo-Z-Y"},"content":"    public void setTripType(String tripType) {","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"Luo-Z-Y"},"content":"        if (tripType.equalsIgnoreCase(\"main\")) {","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"Luo-Z-Y"},"content":"            this.tripType \u003d \"main\";","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"Luo-Z-Y"},"content":"        } else if (tripType.equalsIgnoreCase(\"sub\")) {","lastModifiedDate":"2024-04-07"},{"lineNumber":94,"author":{"gitId":"Luo-Z-Y"},"content":"            this.tripType \u003d \"sub\";","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"Luo-Z-Y"},"content":"        } else {","lastModifiedDate":"2024-04-07"},{"lineNumber":96,"author":{"gitId":"Luo-Z-Y"},"content":"            this.tripType \u003d \"main\";","lastModifiedDate":"2024-04-07"},{"lineNumber":97,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":98,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":99,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":100,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"azamanis"},"content":"     * Returns the duration of the trip in days.","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"azamanis"},"content":"     * @return duration of the trip in days","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"azamanis"},"content":"    public int getDuration() {","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"azamanis"},"content":"        return (int) ((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"azamanis"},"content":"    public String getLocation() {","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"azamanis"},"content":"        return location;","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"azamanis"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"azamanis"},"content":"        return description;","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"azamanis"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"azamanis"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"CerealMiller"},"content":"        for (Trip subTrip : subTrips) {","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"CerealMiller"},"content":"            subTrip.setName(name);","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"azamanis"},"content":"    public void setDates(Date startDate, Date endDate) {","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"azamanis"},"content":"        if (startDate.after(endDate)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(\"Start date cannot be after end date\");","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"azamanis"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"azamanis"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"azamanis"},"content":"        if(endDate.before(new Date())) {","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"azamanis"},"content":"            setStatus(Status.COMPLETED);","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"azamanis"},"content":"        } else if(startDate.after(new Date())) {","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"azamanis"},"content":"            setStatus(Status.UPCOMING);","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"azamanis"},"content":"        } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"azamanis"},"content":"            setStatus(Status.ONGOING);","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"azamanis"},"content":"    public void setLocation(String location) {","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"azamanis"},"content":"        this.location \u003d location;","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"azamanis"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"azamanis"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"jthibault03"},"content":"    public void setCurrency(Currency currency) {","lastModifiedDate":"2024-04-15"},{"lineNumber":150,"author":{"gitId":"jthibault03"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":152,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"jthibault03"},"content":"    public Currency getCurrency() {","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"jthibault03"},"content":"        return this.currency;","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":157,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"azamanis"},"content":"     * Returns the sub-trips of the current trip.","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"Luo-Z-Y"},"content":"     * @return the list with sub-trips of the current trip","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"azamanis"},"content":"    public ArrayList\u003cTrip\u003e getSubTrips() {","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"azamanis"},"content":"        return subTrips;","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":167,"author":{"gitId":"azamanis"},"content":"     * Adds a sub-trip to the current trip.","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"azamanis"},"content":"     * @param subTrip the sub-trip to be added","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":171,"author":{"gitId":"azamanis"},"content":"    public void addSubTrip(Trip subTrip) {","lastModifiedDate":"2024-03-13"},{"lineNumber":172,"author":{"gitId":"azamanis"},"content":"        subTrips.add(subTrip);","lastModifiedDate":"2024-03-13"},{"lineNumber":173,"author":{"gitId":"CerealMiller"},"content":"        subTrip.subTripIndex \u003d subTrips.size();","lastModifiedDate":"2024-04-12"},{"lineNumber":174,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"azamanis"},"content":"     * Removes the specified sub-trip from the current trip.","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"azamanis"},"content":"     * @param subTrip the sub-trip to be removed","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"azamanis"},"content":"    public void removeSubTrip(Trip subTrip) {","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"azamanis"},"content":"        subTrips.remove(subTrip);","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"azamanis"},"content":"     * Removes the sub-trip at the specified index.","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"azamanis"},"content":"     * @param i the index of the sub-trip to be removed. Index starts from 0.","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"azamanis"},"content":"    public void removeSubTrip(int i) {","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"azamanis"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"azamanis"},"content":"            subTrips.remove(i);","lastModifiedDate":"2024-03-14"},{"lineNumber":193,"author":{"gitId":"CerealMiller"},"content":"            for (int j \u003d i; j \u003c subTrips.size(); j++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":194,"author":{"gitId":"CerealMiller"},"content":"                subTrips.get(j).subTripIndex--;","lastModifiedDate":"2024-04-12"},{"lineNumber":195,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-12"},{"lineNumber":196,"author":{"gitId":"azamanis"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":197,"author":{"gitId":"azamanis"},"content":"            throw new IndexOutOfBoundsException(\"Index out of bounds\");","lastModifiedDate":"2024-03-14"},{"lineNumber":198,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"jthibault03"},"content":"    public void addBill(Bill bill) {","lastModifiedDate":"2024-04-08"},{"lineNumber":202,"author":{"gitId":"jthibault03"},"content":"        bills.add(bill);","lastModifiedDate":"2024-04-08"},{"lineNumber":203,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":204,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":205,"author":{"gitId":"jthibault03"},"content":"    //TODO: implement way to find bills in BillList from index","lastModifiedDate":"2024-04-08"},{"lineNumber":206,"author":{"gitId":"jthibault03"},"content":"    public void removeBill(Bill bill) {","lastModifiedDate":"2024-04-08"},{"lineNumber":207,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":208,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":209,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":210,"author":{"gitId":"jthibault03"},"content":"    public BillList getBills() {","lastModifiedDate":"2024-04-08"},{"lineNumber":211,"author":{"gitId":"jthibault03"},"content":"        return this.bills;","lastModifiedDate":"2024-04-08"},{"lineNumber":212,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":213,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":214,"author":{"gitId":"Luo-Z-Y"},"content":"    public Status getStatus() {","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"Luo-Z-Y"},"content":"        return this.status;","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"Luo-Z-Y"},"content":"    public void setStatus(Status status) {","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"Luo-Z-Y"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":223,"author":{"gitId":"azamanis"},"content":"     * Returns the sub-trip at the specified index.","lastModifiedDate":"2024-03-14"},{"lineNumber":224,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"azamanis"},"content":"     * @param i the index of the sub-trip to be returned. Index starts from 0.","lastModifiedDate":"2024-03-14"},{"lineNumber":226,"author":{"gitId":"azamanis"},"content":"     * @return the sub-trip at the specified index","lastModifiedDate":"2024-03-14"},{"lineNumber":227,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":228,"author":{"gitId":"azamanis"},"content":"    public Trip getSubTrip(int i) {","lastModifiedDate":"2024-03-14"},{"lineNumber":229,"author":{"gitId":"azamanis"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":230,"author":{"gitId":"azamanis"},"content":"            return subTrips.get(i);","lastModifiedDate":"2024-03-14"},{"lineNumber":231,"author":{"gitId":"azamanis"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":232,"author":{"gitId":"azamanis"},"content":"            throw new IndexOutOfBoundsException(\"Index out of bounds\");","lastModifiedDate":"2024-03-14"},{"lineNumber":233,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":234,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":235,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":236,"author":{"gitId":"CerealMiller"},"content":"    public Review getReview() {","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"CerealMiller"},"content":"        return review;","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"azamanis"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":241,"author":{"gitId":"azamanis"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":242,"author":{"gitId":"CerealMiller"},"content":"        String s;","lastModifiedDate":"2024-04-12"},{"lineNumber":243,"author":{"gitId":"CerealMiller"},"content":"        if (this.tripType \u003d\u003d \"main\") {","lastModifiedDate":"2024-04-12"},{"lineNumber":244,"author":{"gitId":"CerealMiller"},"content":"            s \u003d \"\\tTrip Name: \" + name;","lastModifiedDate":"2024-04-12"},{"lineNumber":245,"author":{"gitId":"CerealMiller"},"content":"        } else {","lastModifiedDate":"2024-04-12"},{"lineNumber":246,"author":{"gitId":"CerealMiller"},"content":"            s \u003d \"\\t\" + name + \"-\" + subTripIndex;","lastModifiedDate":"2024-04-12"},{"lineNumber":247,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":248,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":249,"author":{"gitId":"CerealMiller"},"content":"        s +\u003d \"\\t\\tStart Date: \" +","lastModifiedDate":"2024-04-12"},{"lineNumber":250,"author":{"gitId":"Luo-Z-Y"},"content":"                FormatDate.dateFormat.format(startDate) + \"\\t\\tEnd Date: \" +","lastModifiedDate":"2024-03-19"},{"lineNumber":251,"author":{"gitId":"Luo-Z-Y"},"content":"                FormatDate.dateFormat.format(endDate) + \"\\t\\tLocation: \" +","lastModifiedDate":"2024-03-19"},{"lineNumber":252,"author":{"gitId":"CerealMiller"},"content":"                location + \"\\t\\tDescription: \" + description","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"CerealMiller"},"content":"                + \"\\t\\tStatus: \" + getStatus();","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":255,"author":{"gitId":"CerealMiller"},"content":"        if (this.tripType \u003d\u003d \"main\") {","lastModifiedDate":"2024-04-11"},{"lineNumber":256,"author":{"gitId":"azamanis"},"content":"            s +\u003d \"\\n\\tSub-trips:\";","lastModifiedDate":"2024-03-19"},{"lineNumber":257,"author":{"gitId":"azamanis"},"content":"            for (Trip t : subTrips) {","lastModifiedDate":"2024-03-19"},{"lineNumber":258,"author":{"gitId":"azamanis"},"content":"                s +\u003d \"\\n\\t\\t\" + t.toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":259,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":260,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":261,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":262,"author":{"gitId":"azamanis"},"content":"        return s;","lastModifiedDate":"2024-03-19"},{"lineNumber":263,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":264,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":265,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"azamanis":152,"Luo-Z-Y":41,"CerealMiller":48,"jthibault03":24}},{"path":"src/main/java/seedu/voyagers/classes/TripList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.classes;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.VoyagerException;","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":" * Represents a list of trips","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"public class TripList {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"    private ArrayList\u003cTrip\u003e trips;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"    public TripList(int size){","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"        this.trips \u003d new ArrayList\u003cTrip\u003e(size);","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"    public TripList(ArrayList\u003cTrip\u003e trips){","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"        this.trips \u003d trips;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"     * Adds a trip to the list","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"     * @param trip the trip to add","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"    public void add(Trip trip){","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Luo-Z-Y"},"content":"        if (isTripNameRepeated(trip.getName()) \u0026\u0026 !trip.getTripType().equals(\"sub\")){","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(\"Trip name already exists\");","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"        this.trips.add(trip);","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"     * Removes a trip from the list","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"     * @param index the index of the trip to remove. Index starts from 1","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"     * @return the trip that was removed","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"     * @throws VoyagerException if the index is invalid","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"    public Trip remove (String index) throws VoyagerException{","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"        Trip trip \u003d trips.get(checkIndex(index) - 1);","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"        this.trips.remove(checkIndex(index) - 1);","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"        return trip;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"     * Removes a trip from the list","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"     * @param index the index of the trip to remove. Index starts from 0","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"     * @return the trip that was removed","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"    public Trip remove(int index) throws IndexOutOfBoundsException{","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"        Trip trip \u003d trips.get(index);","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"        this.trips.remove(index);","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"CerealMiller"},"content":"        for(int i \u003d index; i \u003c trips.size() - 2; i++){","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"CerealMiller"},"content":"            trips.set(i, trips.get(i + 1));","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"        return trip;","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"     * Returns the trip at the specified index","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"     * @param index the index of the trip to return. Index starts from 0","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"     * @return the trip at the specified index","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"    public Trip get(int index) throws IndexOutOfBoundsException{","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"        return this.trips.get(index);","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"     * Returns the trip at the specified index","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"     * @param index the index of the trip to return. Index starts from 1","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"     * @return the trip at the specified index","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"     * @throws VoyagerException if the index is invalid","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"    public Trip get(String index) throws VoyagerException{","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"        return this.trips.get(checkIndex(index) - 1);","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"     * Tries to parse the index to an integer and checks if it is within the range of the list.","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"     * Index starts from 1.","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"     * @param index the index to check","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"     * @return the index as an integer","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"    private int checkIndex(String index) throws VoyagerException{","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"azamanis"},"content":"        int i;","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"azamanis"},"content":"        try{","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"azamanis"},"content":"            i \u003d Integer.parseInt(index);","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"azamanis"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"azamanis"},"content":"            throw new VoyagerException(\"Please enter a valid number\");","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"azamanis"},"content":"        if (i \u003e this.trips.size() || i \u003c 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"azamanis"},"content":"            throw new VoyagerException(\"Sorry. There are only \" + trips.size() + \" trips in the list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"azamanis"},"content":"        return i;","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"azamanis"},"content":"    public void setTrip(int index, Trip trip){","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"azamanis"},"content":"        this.trips.set(index, trip);","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"azamanis"},"content":"     * Finds the index of the trip with the specified name","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"Luo-Z-Y"},"content":"     * @param name the name of the trip to find","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"Luo-Z-Y"},"content":"     * @return the index of the trip with the specified name. Returns -1 if no such trip is found","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"azamanis"},"content":"    public int findTrip(String name){","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"azamanis"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++){","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"azamanis"},"content":"            if (trips.get(i).getName().equals(name)){","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"azamanis"},"content":"                return i;","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"azamanis"},"content":"        return -1;","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"azamanis"},"content":"    public Trip getTrip(String name) throws IllegalArgumentException{","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"azamanis"},"content":"        int index \u003d findTrip(name);","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"azamanis"},"content":"        if (index \u003d\u003d -1){","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(\"No such trip found\");","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"azamanis"},"content":"        return trips.get(index);","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"azamanis"},"content":"    public boolean isTripNameRepeated(String name){","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"azamanis"},"content":"        return findTrip(name) !\u003d -1;","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"azamanis"},"content":"    public ArrayList\u003cTrip\u003e getTrips(){","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"azamanis"},"content":"        return this.trips;","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"azamanis"},"content":"     * Returns the number of trips in the list","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"azamanis"},"content":"     * @return the number of trips in the list","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"azamanis"},"content":"    public int size(){","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"azamanis"},"content":"        return this.trips.size();","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"azamanis":136,"Luo-Z-Y":6,"CerealMiller":3,"jthibault03":1}},{"path":"src/main/java/seedu/voyagers/classes/billsettler/BillSettler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.classes.billsettler;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"import seedu.voyagers.classes.Profile;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"import seedu.voyagers.classes.Bill;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"import seedu.voyagers.utils.Currency;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"public class BillSettler {","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"    private static final long OFFSET \u003d 1000000000L;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"    private static Set\u003cLong\u003e visitedEdges;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"        ArrayList\u003cBill\u003e bills \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"        Profile alice \u003d new Profile(\"Alice\", Currency.EUR);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"        Profile bob \u003d new Profile(\"Bob\", Currency.EUR);","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"        Profile charlie \u003d new Profile(\"Charlie\", Currency.EUR);","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"        Profile david \u003d new Profile(\"David\", Currency.EUR);","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"        Bill bill1 \u003d new Bill(\"bill1\", alice, 110.0, Currency.EUR, new HashMap\u003c\u003e() {","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"            {","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"                put(bob, 40.0);","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"                put(charlie, 20.0);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"                put(david, 40.0);","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"        });","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"        Bill bill2 \u003d new Bill(\"bill2\", bob, 50.0, Currency.EUR, new HashMap\u003cProfile, Double\u003e() {","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"            {","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"                put(alice, 90.0);","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"                put(charlie, 10.0);","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"        });","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"        Bill bill3 \u003d new Bill(\"bill3\", charlie, 60.0, Currency.EUR, new HashMap\u003cProfile, Double\u003e() {","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"            {","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"                put(alice, 20.0);","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"                put(bob, 80.0);","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"        });","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"        bills.add(bill1);","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"        bills.add(bill2);","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"        bills.add(bill3);","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"Luo-Z-Y"},"content":"        System.out.println(bill1);","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"Luo-Z-Y"},"content":"        System.out.println(bill2);","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"Luo-Z-Y"},"content":"        System.out.println(bill3);","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"        createGraphForDebts(bills);","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"    private static String[] getNames(ArrayList\u003cBill\u003e bills) {","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"        Set\u003cString\u003e names \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"        for (Bill bill : bills) {","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"            names.add(bill.getPayer().getName());","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"            for (Map.Entry\u003cProfile, Double\u003e entry : bill.getParticipants().entrySet()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"                names.add(entry.getKey().getName());","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"        return names.toArray(new String[0]);","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"     * This example graph is taken from my Medium blog post.","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"     * Here Alice, Bob, Charlie, David, Ema, Fred and Gabe are represented by vertices from 0 to 6 respectively.","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"Luo-Z-Y"},"content":"    public static void createGraphForDebts(ArrayList\u003cBill\u003e bills) {","lastModifiedDate":"2024-04-11"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"        String[] person \u003d getNames(bills);","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"        int n \u003d person.length;","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"        //  Creating a graph with n vertices","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"        Dinics solver \u003d new Dinics(n, person);","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"azamanis"},"content":"        //  Adding edges to the graph","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"        solver \u003d addAllTransactions(solver, bills);","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"        solver.printEdges();","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"        System.out.println();","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"        System.out.println();","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"azamanis"},"content":"        System.out.println(\"Simplifying Debts...\");","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"azamanis"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"azamanis"},"content":"        System.out.println();","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"azamanis"},"content":"        //  Map to keep track of visited edges","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"azamanis"},"content":"        visitedEdges \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"azamanis"},"content":"        Integer edgePos;","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"azamanis"},"content":"        while ((edgePos \u003d getNonVisitedEdge(solver.getEdges())) !\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"azamanis"},"content":"            //  Force recomputation of subsequent flows in the graph","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"azamanis"},"content":"            solver.recompute();","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"azamanis"},"content":"            //  Set source and sink in the flow graph","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"azamanis"},"content":"            Dinics.Edge firstEdge \u003d solver.getEdges().get(edgePos);","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"azamanis"},"content":"            solver.setSource(firstEdge.from);","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"azamanis"},"content":"            solver.setSink(firstEdge.to);","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"azamanis"},"content":"            //  Initialize the residual graph to be same as the given graph","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"azamanis"},"content":"            List\u003cDinics.Edge\u003e[] residualGraph \u003d solver.getGraph();","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"azamanis"},"content":"            List\u003cDinics.Edge\u003e newEdges \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"azamanis"},"content":"            for (List\u003cDinics.Edge\u003e allEdges : residualGraph) {","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"azamanis"},"content":"                for (Dinics.Edge edge : allEdges) {","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"azamanis"},"content":"                    long remainingFlow \u003d ((edge.flow \u003c 0) ? edge.capacity : (edge.capacity - edge.flow));","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"azamanis"},"content":"                    //  If there is capacity remaining in the graph, then add the remaining capacity as an edge","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"azamanis"},"content":"                    //  so that it can be used for optimizing other debts within the graph","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"azamanis"},"content":"                    if (remainingFlow \u003e 0) {","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"azamanis"},"content":"                        newEdges.add(new Dinics.Edge(edge.from, edge.to, remainingFlow));","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"azamanis"},"content":"                    }","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"azamanis"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"azamanis"},"content":"            //  Get the maximum flow between the source and sink","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"azamanis"},"content":"            long maxFlow \u003d solver.getMaxFlow();","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"azamanis"},"content":"            //  Mark the edge from source to sink as visited","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"azamanis"},"content":"            int source \u003d solver.getSource();","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"azamanis"},"content":"            int sink \u003d solver.getSink();","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"azamanis"},"content":"            visitedEdges.add(getHashKeyForEdge(source, sink));","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"azamanis"},"content":"            //  Create a new graph","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"azamanis"},"content":"            solver \u003d new Dinics(n, person);","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"azamanis"},"content":"            //  Add edges having remaining capacity","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"azamanis"},"content":"            solver.addEdges(newEdges);","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"azamanis"},"content":"            //  Add an edge from source to sink in the new graph with obtained maximum flow as it\u0027s weight","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"azamanis"},"content":"            solver.addEdge(source, sink, maxFlow);","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"azamanis"},"content":"        //  Print the edges in the graph","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"azamanis"},"content":"        solver.printEdges();","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"azamanis"},"content":"        System.out.println();","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"azamanis"},"content":"    private static Dinics addAllTransactions(Dinics solver, ArrayList\u003cBill\u003e bills) {","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"azamanis"},"content":"        HashMap\u003cString, Integer\u003e nameToIndex \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"azamanis"},"content":"        String[] person \u003d getNames(bills);","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"azamanis"},"content":"        for (int i \u003d 0; i \u003c person.length; i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"azamanis"},"content":"            nameToIndex.put(person[i], i);","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"azamanis"},"content":"        for (Bill bill : bills) {","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"azamanis"},"content":"            Profile payer \u003d bill.getPayer();","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"azamanis"},"content":"            HashMap\u003cProfile, Double\u003e participants \u003d bill.getParticipants();","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"azamanis"},"content":"            int indexReceiver \u003d nameToIndex.get(payer.getName());","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"azamanis"},"content":"            double amount \u003d bill.getAmount();","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"azamanis"},"content":"            for (Map.Entry\u003cProfile, Double\u003e entry : participants.entrySet()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"azamanis"},"content":"                Profile ower \u003d entry.getKey();","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"azamanis"},"content":"                double owing \u003d entry.getValue() * amount; //in cents","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"azamanis"},"content":"                int indexOwer \u003d nameToIndex.get(ower.getName());","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"azamanis"},"content":"                //Quantity in cents","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"azamanis"},"content":"                solver.addEdge(indexOwer, indexReceiver, (long) owing);","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"azamanis"},"content":"        return solver;","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"azamanis"},"content":"     * Get any non visited edge in the graph","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"azamanis"},"content":"     * @param edges list of all edges in the graph","lastModifiedDate":"2024-03-31"},{"lineNumber":169,"author":{"gitId":"azamanis"},"content":"     * @return index of a non visited edge","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"azamanis"},"content":"    private static Integer getNonVisitedEdge(List\u003cDinics.Edge\u003e edges) {","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"azamanis"},"content":"        Integer edgePos \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"azamanis"},"content":"        int curEdge \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"azamanis"},"content":"        for (Dinics.Edge edge : edges) {","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"azamanis"},"content":"            if (!visitedEdges.contains(getHashKeyForEdge(edge.from, edge.to))) {","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"azamanis"},"content":"                edgePos \u003d curEdge;","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":178,"author":{"gitId":"azamanis"},"content":"            curEdge++;","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"azamanis"},"content":"        return edgePos;","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"azamanis"},"content":"     * Get a unique hash key for a given edge","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":186,"author":{"gitId":"azamanis"},"content":"     * @param u the starting vertex in the edge","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"azamanis"},"content":"     * @param v the ending vertex in the edge","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"azamanis"},"content":"     * @return a unique hash key","lastModifiedDate":"2024-03-31"},{"lineNumber":189,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"azamanis"},"content":"    private static Long getHashKeyForEdge(int u, int v) {","lastModifiedDate":"2024-03-31"},{"lineNumber":191,"author":{"gitId":"azamanis"},"content":"        return u * OFFSET + v;","lastModifiedDate":"2024-03-31"},{"lineNumber":192,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"azamanis":174,"Luo-Z-Y":4,"CerealMiller":15}},{"path":"src/main/java/seedu/voyagers/classes/billsettler/Dinics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.classes.billsettler;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"import java.util.Deque;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"import static java.lang.Math.min;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"public class Dinics extends NetworkFlowSolverBase{","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"    private int[] level;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"     * Creates an instance of a flow network solver. Use the {@link #addEdge} method to add edges to","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"     * the graph.","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"     * @param n - The number of nodes in the graph including source and sink nodes.","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"    public Dinics(int n, String[] vertexLabels) {","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"        super(n, vertexLabels);","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"        level \u003d new int[n];","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"    public void solve() {","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"        // next[i] indicates the next unused edge index in the adjacency list for node i. This is part","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"        // of the Shimon Even and Alon Itai optimization of pruning deads ends as part of the DFS phase.","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"        int[] next \u003d new int[n];","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"        while (bfs()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"            Arrays.fill(next, 0);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"            // Find max flow by adding all augmenting path flows.","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"            for (long f \u003d dfs(s, next, INF); f !\u003d 0; f \u003d dfs(s, next, INF)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"                maxFlow +\u003d f;","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"        for (int i \u003d 0; i \u003c n; i++){","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"            if (level[i] !\u003d -1){","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"                minCut[i] \u003d true;","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"    // Do a BFS from source to sink and compute the depth/level of each node","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"    // which is the minimum number of edges from that node to the source.","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"    private boolean bfs() {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"        Arrays.fill(level, -1);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"        level[s] \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"        Deque\u003cInteger\u003e q \u003d new ArrayDeque\u003c\u003e(n);","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"        q.offer(s);","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"        while (!q.isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"            int node \u003d q.poll();","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"            for (Edge edge : graph[node]) {","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"                long cap \u003d edge.remainingCapacity();","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"                if (cap \u003e 0 \u0026\u0026 level[edge.to] \u003d\u003d -1) {","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"                    level[edge.to] \u003d level[node] + 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"                    q.offer(edge.to);","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"        return level[t] !\u003d -1;","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"    private long dfs(int at, int[] next, long flow) {","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"        if (at \u003d\u003d t){","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"            return flow;","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"        final int numEdges \u003d graph[at].size();","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"        for (; next[at] \u003c numEdges; next[at]++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"            Edge edge \u003d graph[at].get(next[at]);","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"            long cap \u003d edge.remainingCapacity();","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"            if (cap \u003e 0 \u0026\u0026 level[edge.to] \u003d\u003d level[at] + 1) {","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"                long bottleNeck \u003d dfs(edge.to, next, min(flow, cap));","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"                if (bottleNeck \u003e 0) {","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"                    edge.augment(bottleNeck);","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"                    return bottleNeck;","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"        return 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"azamanis":85}},{"path":"src/main/java/seedu/voyagers/classes/billsettler/NetworkFlowSolverBase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.classes.billsettler;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"public abstract class NetworkFlowSolverBase {","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"    // To avoid overflow, set infinity to a value less than Long.MAX_VALUE;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"    protected static final long INF \u003d Long.MAX_VALUE / 2;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"    // Inputs: n \u003d number of nodes, s \u003d source, t \u003d sink","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"    protected int n;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"    protected int s;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"    protected int t;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"    protected long maxFlow;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"    protected long minCost;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"    protected boolean[] minCut;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"    protected List\u003cEdge\u003e[] graph;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"    protected String[] vertexLabels;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"    protected List\u003cEdge\u003e edges;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"    // Indicates whether the network flow algorithm has ran. We should not need to","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"    // run the solver multiple times, because it always yields the same result.","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"    protected boolean solved;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"    private int[] visited;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"    // \u0027visited\u0027 and \u0027visitedToken\u0027 are variables used for graph sub-routines to","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"    // track whether a node has been visited or not. In particular, node \u0027i\u0027 was","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"    // recently visited if visited[i] \u003d\u003d visitedToken is true. This is handy","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"    // because to mark all nodes as unvisited simply increment the visitedToken.","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"    private int visitedToken \u003d 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"    public static class Edge {","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"        public int from;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"        public int to;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"        public Edge residual;","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"        public long flow;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"        public long cost;","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"        public final long capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"        public final long originalCost;","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"        public Edge(int from, int to, long capacity) {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"            this(from, to, capacity, 0 /* unused */);","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"        public Edge(int from, int to, long capacity, long cost) {","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"            this.from \u003d from;","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"            this.to \u003d to;","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"            this.capacity \u003d capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"            this.originalCost \u003d this.cost \u003d cost;","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"        public boolean isResidual() {","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"            return capacity \u003d\u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"        public long remainingCapacity() {","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"            return capacity - flow;","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"        public void augment(long bottleNeck) {","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"            flow +\u003d bottleNeck;","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"            residual.flow -\u003d bottleNeck;","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"        public String toString(int s, int t) {","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"            String u \u003d (from \u003d\u003d s) ? \"s\" : ((from \u003d\u003d t) ? \"t\" : String.valueOf(from));","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"            String v \u003d (to \u003d\u003d s) ? \"s\" : ((to \u003d\u003d t) ? \"t\" : String.valueOf(to));","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"            return String.format(","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"                    \"Edge %s -\u003e %s | flow \u003d %d | capacity \u003d %d | is residual: %s\",","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"                    u, v, flow, capacity, isResidual());","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"     * Creates an instance of a flow network solver. Use the {@link #addEdge} method to add edges to","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"     * the graph.","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"azamanis"},"content":"     * @param n - The number of nodes in the graph including source and sink nodes.","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"azamanis"},"content":"    public NetworkFlowSolverBase(int n, String[] vertexLabels) {","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"azamanis"},"content":"        this.n \u003d n;","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"azamanis"},"content":"        initializeGraph();","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"azamanis"},"content":"        assignLabelsToVertices(vertexLabels);","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"azamanis"},"content":"        minCut \u003d new boolean[n];","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"azamanis"},"content":"        visited \u003d new int[n];","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"azamanis"},"content":"        edges \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"azamanis"},"content":"    // Construct an empty graph with n nodes including the source and sink nodes.","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"azamanis"},"content":"    private void initializeGraph() {","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"azamanis"},"content":"        graph \u003d new List[n];","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"azamanis"},"content":"        for (int i \u003d 0; i \u003c n; i++){","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"azamanis"},"content":"            graph[i] \u003d new ArrayList\u003cEdge\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"azamanis"},"content":"    // Add labels to vertices in the graph.","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"azamanis"},"content":"    private void assignLabelsToVertices(String[] vertexLabels) {","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"azamanis"},"content":"        if(vertexLabels.length !\u003d n){","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(String.format(\"You must pass %s number of labels\", n));","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"azamanis"},"content":"        this.vertexLabels \u003d vertexLabels;","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"azamanis"},"content":"     * Adds a list of directed edges (and residual edges) to the flow graph.","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"azamanis"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"azamanis"},"content":"     * @param edges - A list of all edges to be added to the flow graph.","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"azamanis"},"content":"    public void addEdges(List\u003cEdge\u003e edges) {","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"azamanis"},"content":"        if (edges \u003d\u003d null){","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(\"Edges cannot be null\");","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"azamanis"},"content":"        for(Edge edge : edges) {","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"azamanis"},"content":"            addEdge(edge.from, edge.to, edge.capacity);","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"azamanis"},"content":"     * Adds a directed edge (and residual edge) to the flow graph.","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"azamanis"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"azamanis"},"content":"     * @param from - The index of the node the directed edge starts at.","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"azamanis"},"content":"     * @param to - The index of the node the directed edge ends at.","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"azamanis"},"content":"     * @param capacity - The capacity of the edge.","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"azamanis"},"content":"    public void addEdge(int from, int to, long capacity) {","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"azamanis"},"content":"        if (capacity \u003c 0){","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(\"Capacity \u003c 0\");","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"azamanis"},"content":"        Edge e1 \u003d new Edge(from, to, capacity);","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"azamanis"},"content":"        Edge e2 \u003d new Edge(to, from, 0);","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"azamanis"},"content":"        e1.residual \u003d e2;","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"azamanis"},"content":"        e2.residual \u003d e1;","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"azamanis"},"content":"        graph[from].add(e1);","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"azamanis"},"content":"        graph[to].add(e2);","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"azamanis"},"content":"        edges.add(e1);","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"azamanis"},"content":"    ///** Cost variant of {@link #addEdge(int, int, int)} for min-cost max-flow */","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"azamanis"},"content":"    public void addEdge(int from, int to, long capacity, long cost) {","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"azamanis"},"content":"        Edge e1 \u003d new Edge(from, to, capacity, cost);","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"azamanis"},"content":"        Edge e2 \u003d new Edge(to, from, 0, -cost);","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"azamanis"},"content":"        e1.residual \u003d e2;","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"azamanis"},"content":"        e2.residual \u003d e1;","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"azamanis"},"content":"        graph[from].add(e1);","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"azamanis"},"content":"        graph[to].add(e2);","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"azamanis"},"content":"        edges.add(e1);","lastModifiedDate":"2024-03-31"},{"lineNumber":159,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"azamanis"},"content":"    // Marks node \u0027i\u0027 as visited.","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"azamanis"},"content":"    public void visit(int i) {","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"azamanis"},"content":"        visited[i] \u003d visitedToken;","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"azamanis"},"content":"    // Returns whether or not node \u0027i\u0027 has been visited.","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"azamanis"},"content":"    public boolean visited(int i) {","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"azamanis"},"content":"        return visited[i] \u003d\u003d visitedToken;","lastModifiedDate":"2024-03-31"},{"lineNumber":169,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"azamanis"},"content":"    // Resets all nodes as unvisited. This is especially useful to do","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"azamanis"},"content":"    // between iterations of finding augmenting paths, O(1)","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"azamanis"},"content":"    public void markAllNodesAsUnvisited() {","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"azamanis"},"content":"        visitedToken++;","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":178,"author":{"gitId":"azamanis"},"content":"     * Returns the graph after the solver has been executed. This allow you to inspect the {@link","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"azamanis"},"content":"     * Edge#flow}","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"azamanis"},"content":"     * compared to the {@link Edge#capacity}","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"azamanis"},"content":"     * in each edge. This is useful if you want to","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"azamanis"},"content":"     * figure out which edges were used during the max flow.","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"azamanis"},"content":"    public List\u003cEdge\u003e[] getGraph() {","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"azamanis"},"content":"        execute();","lastModifiedDate":"2024-03-31"},{"lineNumber":186,"author":{"gitId":"azamanis"},"content":"        return graph;","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":189,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"azamanis"},"content":"     * Returns all edges in this flow network","lastModifiedDate":"2024-03-31"},{"lineNumber":191,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":192,"author":{"gitId":"azamanis"},"content":"    public List\u003cEdge\u003e getEdges() {","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"azamanis"},"content":"        return edges;","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"azamanis"},"content":"    // Returns the maximum flow from the source to the sink.","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"azamanis"},"content":"    public long getMaxFlow() {","lastModifiedDate":"2024-03-31"},{"lineNumber":198,"author":{"gitId":"azamanis"},"content":"        execute();","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"azamanis"},"content":"        return maxFlow;","lastModifiedDate":"2024-03-31"},{"lineNumber":200,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":202,"author":{"gitId":"azamanis"},"content":"    // Returns the min cost from the source to the sink.","lastModifiedDate":"2024-03-31"},{"lineNumber":203,"author":{"gitId":"azamanis"},"content":"    // NOTE: This method only applies to min-cost max-flow algorithms.","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"azamanis"},"content":"    public long getMinCost() {","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"azamanis"},"content":"        execute();","lastModifiedDate":"2024-03-31"},{"lineNumber":206,"author":{"gitId":"azamanis"},"content":"        return minCost;","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":208,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"azamanis"},"content":"    // Returns the min-cut of this flow network in which the nodes on the \"left side\"","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"azamanis"},"content":"    // of the cut with the source are marked as true and those on the \"right side\"","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"azamanis"},"content":"    // of the cut with the sink are marked as false.","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"azamanis"},"content":"    public boolean[] getMinCut() {","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"azamanis"},"content":"        execute();","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"azamanis"},"content":"        return minCut;","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"azamanis"},"content":"     * Used to set the source for this flow network","lastModifiedDate":"2024-03-31"},{"lineNumber":219,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"azamanis"},"content":"    public void setSource(int s) {","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"azamanis"},"content":"        this.s \u003d s;","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"azamanis"},"content":"     * Used to set the sink for this flow network","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":227,"author":{"gitId":"azamanis"},"content":"    public void setSink(int t) {","lastModifiedDate":"2024-03-31"},{"lineNumber":228,"author":{"gitId":"azamanis"},"content":"        this.t \u003d t;","lastModifiedDate":"2024-03-31"},{"lineNumber":229,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":230,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":231,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"azamanis"},"content":"     * Get source for this flow network","lastModifiedDate":"2024-03-31"},{"lineNumber":233,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":234,"author":{"gitId":"azamanis"},"content":"    public int getSource() {","lastModifiedDate":"2024-03-31"},{"lineNumber":235,"author":{"gitId":"azamanis"},"content":"        return s;","lastModifiedDate":"2024-03-31"},{"lineNumber":236,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":237,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":238,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":239,"author":{"gitId":"azamanis"},"content":"     * Get sink for this flow network","lastModifiedDate":"2024-03-31"},{"lineNumber":240,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":241,"author":{"gitId":"azamanis"},"content":"    public int getSink() {","lastModifiedDate":"2024-03-31"},{"lineNumber":242,"author":{"gitId":"azamanis"},"content":"        return t;","lastModifiedDate":"2024-03-31"},{"lineNumber":243,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":244,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":245,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":246,"author":{"gitId":"azamanis"},"content":"     * Set \u0027solved\u0027 flag to false to force recomputation of subsequent flows.","lastModifiedDate":"2024-03-31"},{"lineNumber":247,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":248,"author":{"gitId":"azamanis"},"content":"    public void recompute() {","lastModifiedDate":"2024-03-31"},{"lineNumber":249,"author":{"gitId":"azamanis"},"content":"        solved \u003d false;","lastModifiedDate":"2024-03-31"},{"lineNumber":250,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":251,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":252,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":253,"author":{"gitId":"azamanis"},"content":"     * Print all edges.","lastModifiedDate":"2024-03-31"},{"lineNumber":254,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":255,"author":{"gitId":"azamanis"},"content":"    public void printEdges() {","lastModifiedDate":"2024-03-31"},{"lineNumber":256,"author":{"gitId":"azamanis"},"content":"        for(Edge edge : edges) {","lastModifiedDate":"2024-03-31"},{"lineNumber":257,"author":{"gitId":"azamanis"},"content":"            System.out.println(String.format(\"%s ----%s----\u003e %s\",","lastModifiedDate":"2024-03-31"},{"lineNumber":258,"author":{"gitId":"azamanis"},"content":"                    vertexLabels[edge.from], edge.capacity, vertexLabels[edge.to]));","lastModifiedDate":"2024-03-31"},{"lineNumber":259,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":260,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":261,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":262,"author":{"gitId":"azamanis"},"content":"    // Wrapper method that ensures we only call solve() once","lastModifiedDate":"2024-03-31"},{"lineNumber":263,"author":{"gitId":"azamanis"},"content":"    private void execute() {","lastModifiedDate":"2024-03-31"},{"lineNumber":264,"author":{"gitId":"azamanis"},"content":"        if (solved){","lastModifiedDate":"2024-03-31"},{"lineNumber":265,"author":{"gitId":"azamanis"},"content":"            return;","lastModifiedDate":"2024-03-31"},{"lineNumber":266,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":267,"author":{"gitId":"azamanis"},"content":"        solved \u003d true;","lastModifiedDate":"2024-03-31"},{"lineNumber":268,"author":{"gitId":"azamanis"},"content":"        solve();","lastModifiedDate":"2024-03-31"},{"lineNumber":269,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":270,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":271,"author":{"gitId":"azamanis"},"content":"    // Method to implement which solves the network flow problem.","lastModifiedDate":"2024-03-31"},{"lineNumber":272,"author":{"gitId":"azamanis"},"content":"    public abstract void solve();","lastModifiedDate":"2024-03-31"},{"lineNumber":273,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"azamanis":273}},{"path":"src/main/java/seedu/voyagers/commands/AddBillCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jthibault03"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.Bill;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.BillList;","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"import static seedu.voyagers.utils.BillStorage.writeBillFile;","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"jthibault03"},"content":"public class AddBillCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"jthibault03"},"content":"    public AddBillCommand(String[] args){","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"        super(args);","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"jthibault03"},"content":"    //TODO: also need currency","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage){","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"jthibault03"},"content":"        try{","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"jthibault03"},"content":"            Bill bill \u003d new Bill(args, trips);","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"jthibault03"},"content":"            bill.getTrip().addBill(bill);","lastModifiedDate":"2024-04-08"},{"lineNumber":23,"author":{"gitId":"jthibault03"},"content":"            BillList bills \u003d bill.getTrip().getBills();","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"jthibault03"},"content":"            //new AutoBillStatusUpdateCommand().execute(bills, ui, null);","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"jthibault03"},"content":"            ui.echo(\"Got it. I\u0027ve added this bill:\\n\" + bill","lastModifiedDate":"2024-04-08"},{"lineNumber":26,"author":{"gitId":"jthibault03"},"content":"                    + \"\\nNow you have \" + bills.size() +","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"jthibault03"},"content":"                    \" bill(s) in the list.\");","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"Luo-Z-Y"},"content":"            String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"            String billsFileName \u003d \"local-bills.txt\";","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"            writeBillFile(bills, bills.size(), currentDir, billsFileName);","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"jthibault03"},"content":"        } catch (Exception e){","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"jthibault03"},"content":"            ui.echo(e.getMessage());","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Luo-Z-Y":3,"CerealMiller":4,"jthibault03":29}},{"path":"src/main/java/seedu/voyagers/commands/AddSubTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.FormatDate;","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"import java.util.Date;","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"//TODO: check dates make sense with main trip","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"public class AddSubTripCommand extends Command{","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"    public AddSubTripCommand(String[] args){","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"        super(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage) {","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"        Trip mainTrip \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"        String[] newArgs \u003d new String[args.length - 1];","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"        System.arraycopy(args, 1, newArgs, 0, args.length - 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"        try{","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Luo-Z-Y"},"content":"            mainTrip \u003d trips.getTrip(newArgs[0]);","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"        } catch (Exception e){","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"            ui.echo(e.getMessage());","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"            return;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"        Date mainTripStart \u003d mainTrip.getStartDate();","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"        Date mainTripEnd \u003d mainTrip.getEndDate();","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"        Date subTripStart \u003d null;","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"        Date subTripEnd \u003d null;","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"        try {","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"            subTripStart \u003d FormatDate.dateFormat.parse(newArgs[1]);","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"            subTripEnd \u003d FormatDate.dateFormat.parse(newArgs[2]);","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"Failure to parse dates in AddSubTripCommand\");","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"        if (mainTripStart.after(subTripStart) || mainTripEnd.before(subTripEnd)){","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"This trip is not within the main trip\u0027s dates\");","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"        if (subTripStart.after(subTripEnd)){","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"The start date of this trip is after the end date\");","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"        try{","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"            Trip trip \u003d new Trip(newArgs);","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Luo-Z-Y"},"content":"            trip.setTripType(\"sub\");","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"            mainTrip.addSubTrip(trip);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"            ui.echo(\"Got it. I\u0027ve added this trip as a subtrip of :\" + mainTrip.getName() + \"\\n\" + trip","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"                    + \"\\nNow you have \" + mainTrip.getSubTripsSize() +","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"                    \" subtrips.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Luo-Z-Y"},"content":"            trips.add(trip);","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"        } catch (Exception e){","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"            ui.echo(e.getMessage());","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Luo-Z-Y"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"CerealMiller"},"content":"        final String tripsFileName \u003d \"local-voyagers.txt\";","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"CerealMiller"},"content":"        TripStorage.writeTripFileMain(trips.getTrips(), trips.size(),currentDir, tripsFileName);","lastModifiedDate":"2024-04-11"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"azamanis":32,"Luo-Z-Y":7,"CerealMiller":30}},{"path":"src/main/java/seedu/voyagers/commands/AddTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"public class AddTripCommand extends Command{","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"     * Constructor for AddTripCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"     * @param args args[0]\u003d name, args[1]\u003d location, args[2]\u003d start date, args[3]\u003d end date, args[4]\u003d description","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"    public AddTripCommand(String[] args){","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"        super(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage){","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"Luo-Z-Y"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        final String tripsFileName \u003d \"local-voyagers.txt\";","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"        try{","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"            Trip trip \u003d new Trip(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Luo-Z-Y"},"content":"            trip.setTripType(\"main\");","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"            trips.add(trip);","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Luo-Z-Y"},"content":"            new AutoTripStatusUpdateCommand().execute(trips, ui, null);","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"            ui.echo(\"Got it. I\u0027ve added this trip:\\n\" + trip","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"                    + \"\\nNow you have \" + trips.size() +","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"                    \" trips in the list.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"        } catch (Exception e){","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"            ui.echo(e.getMessage());","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"        TripStorage.writeTripFileMain(trips.getTrips(), trips.size(),currentDir, tripsFileName);","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"azamanis":27,"Luo-Z-Y":6,"CerealMiller":4}},{"path":"src/main/java/seedu/voyagers/commands/AutoTripStatusUpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Status;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Luo-Z-Y"},"content":"public class AutoTripStatusUpdateCommand {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage) {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"Luo-Z-Y"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"        final String tripsFileName \u003d \"local-voyagers.txt\";","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"Luo-Z-Y"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Luo-Z-Y"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Luo-Z-Y"},"content":"            Trip trip \u003d trips.get(i);","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Luo-Z-Y"},"content":"            if (trip.getStatus() \u003d\u003d null) {","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Luo-Z-Y"},"content":"                //System.out.println(\"Trip status is null\");","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Luo-Z-Y"},"content":"                if (trip.getEndDate().before(currentDate)) {","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Luo-Z-Y"},"content":"                    // System.out.println(\"Trip end date is before current date\");","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Luo-Z-Y"},"content":"                    trip.setStatus(Status.COMPLETED);","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Luo-Z-Y"},"content":"                } else if (trip.getStartDate().after(currentDate)) {","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Luo-Z-Y"},"content":"                    //System.out.println(\"Trip start date is after current date\");","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Luo-Z-Y"},"content":"                    trip.setStatus(Status.UPCOMING);","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Luo-Z-Y"},"content":"                    //System.out.println(\"Trip status is now \" + trip.getStatus());","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Luo-Z-Y"},"content":"                } else {","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Luo-Z-Y"},"content":"                    //System.out.println(\"Trip is ongoing\");","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Luo-Z-Y"},"content":"                    trip.setStatus(Status.ONGOING);","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Luo-Z-Y"},"content":"                    // System.out.println(\"Trip status is now \" + trip.getStatus());","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Luo-Z-Y"},"content":"                }","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"            } else if (trip.getEndDate().before(currentDate) \u0026\u0026 (trip.getStatus() \u003d\u003d Status.ONGOING ||","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"Luo-Z-Y"},"content":"                    trip.getStatus() \u003d\u003d Status.UPCOMING)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"Luo-Z-Y"},"content":"                trip.setStatus(Status.COMPLETED);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"Luo-Z-Y"},"content":"                ui.echo(\"Trip \" + trip.getName() + \" has ended. It is now marked as completed.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"            } else if (trip.getStartDate().before(currentDate) \u0026\u0026 trip.getEndDate().after(currentDate)","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"Luo-Z-Y"},"content":"                    \u0026\u0026 trip.getStatus() \u003d\u003d Status.UPCOMING) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"Luo-Z-Y"},"content":"                trip.setStatus(Status.ONGOING);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"Luo-Z-Y"},"content":"                ui.echo(\"Trip \" + trip.getName() + \" has started. It is now marked as ongoing.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"Luo-Z-Y"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"        TripStorage.writeTripFileMain(trips.getTrips(), trips.size(), currentDir, tripsFileName);","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"Luo-Z-Y"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Luo-Z-Y":39,"CerealMiller":8}},{"path":"src/main/java/seedu/voyagers/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.classes.BillList;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.classes.ProfileList;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.utils.BillStorage;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.utils.ProfileStorage;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"// Code taken from https://github.com/azamanis/ip","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":" * Represents a command to be executed.","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"    protected String[] args;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"     * Constructor for Command.","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"     * @param args the arguments for the command","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"    public Command(String[] args){","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"        this.args \u003d args;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"    public Command(){","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"     * Executes the command.","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"     * @param ui the user interface","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"     * @param tripStorage the storage","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"    public abstract void execute(TripList tasks, Ui ui, TripStorage tripStorage);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"     * Returns true iff the command is an exit command.","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"    public boolean isExit(){","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"    public String[] getArgs() {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"        return args;","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"azamanis":42,"Luo-Z-Y":2,"CerealMiller":7}},{"path":"src/main/java/seedu/voyagers/commands/DeleteMainTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"public class DeleteMainTripCommand extends Command{","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    public DeleteMainTripCommand(String[] args){","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"        super(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage){","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Luo-Z-Y"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        final String tripsFileName \u003d \"local-voyagers.txt\";","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"        int index \u003d trips.findTrip(args[0]);","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"        if (index \u003d\u003d -1){","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"            ui.echo(\"No such trip found\");","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"            return;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"        Trip trip \u003d trips.remove(index);","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"        ui.echo(\"Noted. I\u0027ve removed this trip:\\n\" + trip","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"                + \"\\nNow you have \" + trips.size() +","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"                \" trips in the list.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"        TripStorage.writeTripFileMain(trips.getTrips(), trips.size(),currentDir, tripsFileName);","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"azamanis":20,"Luo-Z-Y":4,"CerealMiller":6}},{"path":"src/main/java/seedu/voyagers/commands/DeleteSubTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"public class DeleteSubTripCommand extends Command{","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    public DeleteSubTripCommand(String[] args){","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"        super(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage){","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"Luo-Z-Y"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        final String tripsFileName \u003d \"local-voyagers.txt\";","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"        int index \u003d trips.findTrip(args[0]);","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"        if (index \u003d\u003d -1){","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"            ui.echo(\"No such trip found\");","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"            return;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        Trip trip \u003d trips.get(index);","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"        int subTripIndex \u003d Integer.parseInt(args[1]) - 1;","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"        Trip subTrip \u003d trip.getSubTrip(subTripIndex);","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"Noted. I\u0027ve removed this subtrip:\\n\" + subTrip);","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"        trip.removeSubTrip(subTripIndex);","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"        TripStorage.writeTripFileMain(trips.getTrips(), trips.size(),currentDir, tripsFileName);","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"azamanis":16,"Luo-Z-Y":2,"CerealMiller":14}},{"path":"src/main/java/seedu/voyagers/commands/EmptyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"public class EmptyCommand extends Command{","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"    public EmptyCommand(){","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"        super(new String[0]);","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage){","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"      //do nothing","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"azamanis":12,"Luo-Z-Y":2,"CerealMiller":2}},{"path":"src/main/java/seedu/voyagers/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"    public ExitCommand(){","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"     * Executes the command to exit the program.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Luo-Z-Y"},"content":"     * @param trips the list of trips","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"     * @param ui the user interface","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"     * @param tripStorage the storage","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Luo-Z-Y"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage){","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"Luo-Z-Y"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        final String tripsFileName \u003d \"local-voyagers.txt\";","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        TripStorage.writeTripFileMain(trips.getTrips(), trips.size(),currentDir, tripsFileName);","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"        ui.showExit();","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"    public boolean isExit(){","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"        return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"azamanis":20,"Luo-Z-Y":5,"CerealMiller":4}},{"path":"src/main/java/seedu/voyagers/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"    public FindCommand(String[] args) {","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"        super(args);","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList tasks, Ui ui, TripStorage tripStorage){","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"        TripList toPrintTrips \u003d new TripList(tasks.size());","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"        findWithKeyword(args[0], tasks, toPrintTrips);","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        if(toPrintTrips.size() \u003d\u003d 0){","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"No trips found.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"        for(int i \u003d 0; i \u003c toPrintTrips.size(); i++){","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(toPrintTrips.get(i).toString());","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"    private void findWithKeyword(String keyword, TripList tasks, TripList foundList){","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"        while(i \u003c tasks.size()){","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"            String tripName;","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"            tripName \u003d tasks.get(i).getName();","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"            if(tripName.contains(keyword)){","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"                foundList.add(tasks.get(i));","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"            i++;","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"CerealMiller":36}},{"path":"src/main/java/seedu/voyagers/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"public class HelpCommand extends Command{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList tasks, Ui ui, TripStorage tripStorage) {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"        ui.echo(\"Here are the commands you can use:\", true, false);","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"1. addmaintrip - add a main trip with name, start, end, location and description\",","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"                false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"   addmaintrip /n \u003cname\u003e /start yyyy-MM-dd /end yyyy-MM-dd /location \u003clocation /d \u003cdescription\"","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"                , false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"2. How to modify main trips:\",","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"                false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"   setname \u003ccurrent_name\u003e /n \u003cnew_name\u003e - You can change name of main trips only\",","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"                false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"   setdates \u003ccurrent_name\u003e /start \u003cyyyy-MM-dd\u003e /end \u003cyyyy-MM-dd\u003e\",","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"                false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"   setlocation \u003ccurrent_name\u003e /location \u003clocation\u003e\",","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"                false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"   setdescription \u003ccurrent_name\u003e /d \u003cdescription\u003e\",","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"                false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"   setstatus - cancel or uncancel a trip without deleting it from the database\",","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"                false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"   setstatus \u003ccurrent_name\u003e /status \u003ccancel OR uncancel\u003e\",","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"                false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"3. list - Lists all trips\", false, false);","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"   list \u003cstatus\u003e - list by status (upcoming, ongoing, completed, cancelled)\",","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"                false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"4. add - Adds a trip\", false, false);","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"5. deletemaintrip /n \u003cmain_trip_name\u003e - Deletes a main trip\", false, false);","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"6. deletesubtrip /n \u003cmain_trip_name\u003e /i \u003cindex - Deletes a sub trip\", false, false);","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"7. addbill /trip \u003ctrip_name\u003e /n \u003cbill_name\u003e /payer \u003cpayer_name\u003e /others \u003cdebtor_names\u003e /amount \u003cbill_total\u003e /percentages \u003cpercentages\u003e\", false, false);","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"8. paybill /trip \u003ctrip_name\u003e /n \u003cbill_name\u003e\", false, false);","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"9. listbills - lists all bills\", false, false);","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"10. find - Finds a trip\", false, false);","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"   find \u003ckeyword\u003e - show trips whose names contain the keyword\", false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"11. help - Shows the help message\", false, false);","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"12. review \u003cmain_trip_name\u003e /s \u003c1-10\u003e /r \u003creflection\u003e - Give your thoughts on a main trip\",","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"                false, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"13. readreview \u003cmain_trip_name\u003e - Read your review\", false, false);","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"jthibault03"},"content":"        ui.echo(\"14. exit - Exits the program\",false, true);","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"azamanis":9,"Luo-Z-Y":2,"CerealMiller":24,"jthibault03":13}},{"path":"src/main/java/seedu/voyagers/commands/ListBillCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jthibault03"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Bill;","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.BillList;","lastModifiedDate":"2024-04-08"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.classes.Bill;","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"public class ListBillCommand extends Command {","lastModifiedDate":"2024-04-08"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage) {","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        /*if (trips.size() \u003d\u003d 0){","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"You have no bills in your list.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"Here are the bills in your list:\");","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++){","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"            BillList bills \u003d trips.get(i).getBills();","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"            for (int j \u003d 0; j \u003c bills.size(); j++) {","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"                ui.echo((counter + 1) + \". \" + bills.get(j));","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"                counter++;","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"You have no bills in your list.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"        }*/","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"        BillList billList \u003d new BillList();","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"        ArrayList\u003cBill\u003e bills \u003d billList.getBills();","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Luo-Z-Y"},"content":"        for (int j \u003d 0; j \u003c billList.size(); j++) {","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"            ui.echo((j + 1) + \". \" + bills.get(j).toString());","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":42,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-04-08"}],"authorContributionMap":{"Luo-Z-Y":6,"CerealMiller":23,"jthibault03":13}},{"path":"src/main/java/seedu/voyagers/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.Status;","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"    public ListCommand() {","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"        this.args \u003d new String[2];","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        this.args[0] \u003d \"list\";","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"        this.args[1] \u003d \"all\";","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"    public ListCommand(String[] args) {","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"        super(args);","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage) {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        if (args.length \u003d\u003d 1) {","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"            args \u003d padArgs();","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        switch (args[1]) {","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"        case \"upcoming\":","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"            listUpcoming(trips, ui);","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"            break;","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"        case \"ongoing\":","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"            listOngoing(trips, ui);","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"            break;","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"        case \"completed\":","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"            listCompleted(trips, ui);","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"            break;","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"        case \"cancelled\":","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"            listCancelled(trips, ui);","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"            break;","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"        case \"all\":","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"            listAll(trips, ui);","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"            break;","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"        default:","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"Invalid list type. Please enter a valid list type.\");","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"            break;","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"    public void listAll(TripList trips, Ui ui) {","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"        if (trips.size() \u003d\u003d 0) {","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"You have no trips in your list.\");","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"Here are the trips in your list:\");","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"CerealMiller"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++) {","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"CerealMiller"},"content":"            if (trips.get(i).getTripType() \u003d\u003d \"main\") {","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"CerealMiller"},"content":"                ui.echo((i + 1) + \". \" + trips.get(i));","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"CerealMiller"},"content":"    public void listUpcoming(TripList trips, Ui ui) {","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"CerealMiller"},"content":"        boolean hasTrip \u003d false;","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++) {","lastModifiedDate":"2024-04-11"},{"lineNumber":63,"author":{"gitId":"CerealMiller"},"content":"            if (trips.get(i).getStatus() \u003d\u003d Status.UPCOMING) {","lastModifiedDate":"2024-04-11"},{"lineNumber":64,"author":{"gitId":"CerealMiller"},"content":"                hasTrip \u003d true;","lastModifiedDate":"2024-04-11"},{"lineNumber":65,"author":{"gitId":"CerealMiller"},"content":"                break;","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":68,"author":{"gitId":"CerealMiller"},"content":"        if (!hasTrip) {","lastModifiedDate":"2024-04-11"},{"lineNumber":69,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"You have no upcoming trips in your list.\");","lastModifiedDate":"2024-04-11"},{"lineNumber":70,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-11"},{"lineNumber":71,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":72,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"Here are the upcoming trips in your list:\");","lastModifiedDate":"2024-04-11"},{"lineNumber":73,"author":{"gitId":"CerealMiller"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++) {","lastModifiedDate":"2024-04-11"},{"lineNumber":74,"author":{"gitId":"CerealMiller"},"content":"            if (trips.get(i).getStatus() \u003d\u003d Status.UPCOMING \u0026\u0026 trips.get(i).getTripType() \u003d\u003d \"main\") {","lastModifiedDate":"2024-04-11"},{"lineNumber":75,"author":{"gitId":"CerealMiller"},"content":"                ui.echo((i + 1) + \". \" + trips.get(i));","lastModifiedDate":"2024-04-11"},{"lineNumber":76,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":77,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":78,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"CerealMiller"},"content":"    public void listOngoing(TripList trips, Ui ui) {","lastModifiedDate":"2024-04-11"},{"lineNumber":81,"author":{"gitId":"CerealMiller"},"content":"        boolean hasTrip \u003d false;","lastModifiedDate":"2024-04-11"},{"lineNumber":82,"author":{"gitId":"CerealMiller"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++) {","lastModifiedDate":"2024-04-11"},{"lineNumber":83,"author":{"gitId":"CerealMiller"},"content":"            if (trips.get(i).getStatus() \u003d\u003d Status.ONGOING) {","lastModifiedDate":"2024-04-11"},{"lineNumber":84,"author":{"gitId":"CerealMiller"},"content":"                hasTrip \u003d true;","lastModifiedDate":"2024-04-11"},{"lineNumber":85,"author":{"gitId":"CerealMiller"},"content":"                break;","lastModifiedDate":"2024-04-11"},{"lineNumber":86,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":87,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":88,"author":{"gitId":"CerealMiller"},"content":"        if (!hasTrip) {","lastModifiedDate":"2024-04-11"},{"lineNumber":89,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"You have no ongoing trips in your list.\");","lastModifiedDate":"2024-04-11"},{"lineNumber":90,"author":{"gitId":"azamanis"},"content":"            return;","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"Here are the ongoing trips in your list:\");","lastModifiedDate":"2024-04-11"},{"lineNumber":93,"author":{"gitId":"CerealMiller"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++) {","lastModifiedDate":"2024-04-11"},{"lineNumber":94,"author":{"gitId":"CerealMiller"},"content":"            if (trips.get(i).getStatus() \u003d\u003d Status.ONGOING \u0026\u0026 trips.get(i).getTripType() \u003d\u003d \"main\") {","lastModifiedDate":"2024-04-11"},{"lineNumber":95,"author":{"gitId":"CerealMiller"},"content":"                ui.echo((i + 1) + \". \" + trips.get(i));","lastModifiedDate":"2024-04-11"},{"lineNumber":96,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":97,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":98,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":99,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"CerealMiller"},"content":"    public void listCompleted(TripList trips, Ui ui) {","lastModifiedDate":"2024-04-11"},{"lineNumber":101,"author":{"gitId":"CerealMiller"},"content":"        boolean hasTrip \u003d false;","lastModifiedDate":"2024-04-11"},{"lineNumber":102,"author":{"gitId":"CerealMiller"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++) {","lastModifiedDate":"2024-04-11"},{"lineNumber":103,"author":{"gitId":"CerealMiller"},"content":"            if (trips.get(i).getStatus() \u003d\u003d Status.COMPLETED) {","lastModifiedDate":"2024-04-11"},{"lineNumber":104,"author":{"gitId":"CerealMiller"},"content":"                hasTrip \u003d true;","lastModifiedDate":"2024-04-11"},{"lineNumber":105,"author":{"gitId":"CerealMiller"},"content":"                break;","lastModifiedDate":"2024-04-11"},{"lineNumber":106,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":107,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":108,"author":{"gitId":"CerealMiller"},"content":"        if (!hasTrip) {","lastModifiedDate":"2024-04-11"},{"lineNumber":109,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"You have no completed trips in your list.\");","lastModifiedDate":"2024-04-11"},{"lineNumber":110,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-11"},{"lineNumber":111,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":112,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"Here are the completed trips in your list:\");","lastModifiedDate":"2024-04-11"},{"lineNumber":113,"author":{"gitId":"azamanis"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++) {","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"CerealMiller"},"content":"            if (trips.get(i).getStatus() \u003d\u003d Status.COMPLETED \u0026\u0026 trips.get(i).getTripType() \u003d\u003d \"main\") {","lastModifiedDate":"2024-04-11"},{"lineNumber":115,"author":{"gitId":"azamanis"},"content":"                ui.echo((i + 1) + \". \" + trips.get(i));","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":120,"author":{"gitId":"CerealMiller"},"content":"    private void listCancelled(TripList trips, Ui ui) {","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"CerealMiller"},"content":"        boolean hasTrip \u003d false;","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"CerealMiller"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":123,"author":{"gitId":"CerealMiller"},"content":"            if (trips.get(i).getStatus() \u003d\u003d Status.CANCELLED) {","lastModifiedDate":"2024-04-12"},{"lineNumber":124,"author":{"gitId":"CerealMiller"},"content":"                hasTrip \u003d true;","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"CerealMiller"},"content":"                break;","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-12"},{"lineNumber":127,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":128,"author":{"gitId":"CerealMiller"},"content":"        if (!hasTrip) {","lastModifiedDate":"2024-04-12"},{"lineNumber":129,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"You have no cancelled trips in your list.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":130,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-12"},{"lineNumber":131,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":132,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"Here are the cancelled trips in your list:\");","lastModifiedDate":"2024-04-12"},{"lineNumber":133,"author":{"gitId":"CerealMiller"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":134,"author":{"gitId":"CerealMiller"},"content":"            if (trips.get(i).getStatus() \u003d\u003d Status.CANCELLED \u0026\u0026 trips.get(i).getTripType() \u003d\u003d \"main\") {","lastModifiedDate":"2024-04-12"},{"lineNumber":135,"author":{"gitId":"CerealMiller"},"content":"                ui.echo((i + 1) + \". \" + trips.get(i));","lastModifiedDate":"2024-04-12"},{"lineNumber":136,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-12"},{"lineNumber":137,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":138,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":139,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":140,"author":{"gitId":"CerealMiller"},"content":"    private String[] padArgs() {","lastModifiedDate":"2024-04-11"},{"lineNumber":141,"author":{"gitId":"CerealMiller"},"content":"        String[] newArgs \u003d new String[2];","lastModifiedDate":"2024-04-11"},{"lineNumber":142,"author":{"gitId":"CerealMiller"},"content":"        newArgs[0] \u003d \"list\";","lastModifiedDate":"2024-04-11"},{"lineNumber":143,"author":{"gitId":"CerealMiller"},"content":"        newArgs[1] \u003d \"all\";","lastModifiedDate":"2024-04-12"},{"lineNumber":144,"author":{"gitId":"CerealMiller"},"content":"        return newArgs;","lastModifiedDate":"2024-04-11"},{"lineNumber":145,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":146,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"azamanis":15,"Luo-Z-Y":2,"CerealMiller":129}},{"path":"src/main/java/seedu/voyagers/commands/ListProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"/*import seedu.voyagers.classes.ProfileList;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.ProfileStorage;","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.Ui;*/","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"/*","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"Luo-Z-Y"},"content":"public class ListProfileCommand extends Command{","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"Luo-Z-Y"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage){","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"Luo-Z-Y"},"content":"        if (trips.size() \u003d\u003d 0){","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"Luo-Z-Y"},"content":"            ui.echo(\"You have no profiles in your list.\");","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"Luo-Z-Y"},"content":"            return;","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"Luo-Z-Y"},"content":"        ui.echo(\"Here are the profiles in your list:\");","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"Luo-Z-Y"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"Luo-Z-Y"},"content":"        for (int i \u003d 0; i \u003c trips.size(); i++){","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"Luo-Z-Y"},"content":"            ProfileList profileList \u003d trips.get(i).getProfiles();","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"Luo-Z-Y"},"content":"            for (int j \u003d 0; j \u003c profileList.size(); j++) {","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"Luo-Z-Y"},"content":"                ui.echo((counter + 1) + \". \" + profileList.get(j));","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"Luo-Z-Y"},"content":"                counter++;","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"Luo-Z-Y"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"Luo-Z-Y"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"Luo-Z-Y"},"content":"            ui.echo(\"You have no bills in your list.\");","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"Luo-Z-Y"},"content":"            return;","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"Luo-Z-Y"},"content":"}","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"Luo-Z-Y"},"content":"*/","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"Luo-Z-Y":31,"CerealMiller":2}},{"path":"src/main/java/seedu/voyagers/commands/ModifyTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.FormatDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Status;","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"public class ModifyTripCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"    public ModifyTripCommand(String[] args) {","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"        super(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage) {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"        String tripName \u003d args[1];","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        String modificationType \u003d args[0];","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"        boolean isSubtrip \u003d isSubtrip(tripName);","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        int subTripIndex \u003d -1;","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"        if (isSubtrip) {","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"            subTripIndex \u003d extractSubtripIndex(tripName);","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"            tripName \u003d extractMainTripName(tripName);","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"            if(subTripIndex \u003c 0){","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"                ui.echo(\"Invalid subtrip index\");","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"                return;","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"        int mainTripIndex \u003d trips.findTrip(tripName);","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"        if (mainTripIndex \u003d\u003d -1) {","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"            ui.echo(\"No such trip found\");","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"            return;","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"        Trip trip \u003d trips.get(mainTripIndex);","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"        if (isSubtrip) {","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"            trip \u003d trip.getSubTrip(subTripIndex);","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"        switch (modificationType) {","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"        case \"name\":","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"            if(isSubtrip){","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"                ui.echo(\"You cannot rename a sub trip.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"                return;","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"            if (trips.findTrip(args[2]) !\u003d -1) {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"                ui.echo(\"A trip with that name already exists\");","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"                return;","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"            trip.setName(args[2]);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"        case \"dates\":","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"            try {","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"CerealMiller"},"content":"                Date newStartDate \u003d FormatDate.dateFormat.parse(args[2]);","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"CerealMiller"},"content":"                Date newEndDate \u003d FormatDate.dateFormat.parse(args[3]);","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"                trip.setDates(newStartDate, newEndDate);","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"                //TODO: be more descriptive about the error (e.g. invalid date format,","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"                // start date after end date, etc.)","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"                ui.echo(\"Invalid dates\");","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"                return;","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"Luo-Z-Y"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"        case \"location\":","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"            trip.setLocation(args[2]);","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"        case \"description\":","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"            trip.setDescription(args[2]);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"Luo-Z-Y"},"content":"        case \"status\":","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"Luo-Z-Y"},"content":"            if (args[2].equalsIgnoreCase(\"cancel\")) {","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"Luo-Z-Y"},"content":"                trip.setStatus(Status.CANCELLED);","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"Luo-Z-Y"},"content":"            } else if (args[2].equalsIgnoreCase(\"uncancel\")) {","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"Luo-Z-Y"},"content":"                trip.setStatus(null);","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"Luo-Z-Y"},"content":"                new AutoTripStatusUpdateCommand().execute(trips, ui, null);","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"Luo-Z-Y"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"Luo-Z-Y"},"content":"            break;","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"        default:","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"            ui.echo(\"Invalid modification type\");","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"            return;","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"azamanis"},"content":"        ui.echo(\"Noted. I\u0027ve modified this trip:\\n\" + trip);","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"Luo-Z-Y"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"CerealMiller"},"content":"        final String tripsFileName \u003d \"local-voyagers.txt\";","lastModifiedDate":"2024-04-11"},{"lineNumber":92,"author":{"gitId":"CerealMiller"},"content":"        TripStorage.writeTripFileMain(trips.getTrips(), trips.size(), currentDir, tripsFileName);","lastModifiedDate":"2024-04-11"},{"lineNumber":93,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"CerealMiller"},"content":"    private boolean isSubtrip(String tripName) {","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"CerealMiller"},"content":"        String[] nameParts \u003d tripName.split(\"-\");","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"CerealMiller"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"CerealMiller"},"content":"            int subIndex \u003d Integer.parseInt(nameParts[1]);","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"CerealMiller"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"CerealMiller"},"content":"            return false;","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"CerealMiller"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"CerealMiller"},"content":"            return false;","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"CerealMiller"},"content":"        return true;","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"CerealMiller"},"content":"    private String extractMainTripName(String tripName) {","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"CerealMiller"},"content":"        String[] nameParts \u003d tripName.split(\"-\");","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"CerealMiller"},"content":"        return nameParts[0];","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"CerealMiller"},"content":"    private int extractSubtripIndex(String tripName) {","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"CerealMiller"},"content":"        String[] nameParts \u003d tripName.split(\"-\");","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"CerealMiller"},"content":"        return (Integer.parseInt(nameParts[1]) - 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"azamanis":48,"Luo-Z-Y":14,"CerealMiller":54}},{"path":"src/main/java/seedu/voyagers/commands/PayBillCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jthibault03"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.Bill;","lastModifiedDate":"2024-04-09"},{"lineNumber":4,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.BillList;","lastModifiedDate":"2024-04-09"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"jthibault03"},"content":"public class PayBillCommand extends Command{","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":12,"author":{"gitId":"jthibault03"},"content":"    public PayBillCommand(String[] args) {","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"        super(args);","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"jthibault03"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage){","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"jthibault03"},"content":"        try{","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"jthibault03"},"content":"            Bill bill \u003d BillList.getBill(args[0], args[1]);","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"jthibault03"},"content":"            bill.payBill();","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"jthibault03"},"content":"            ui.echo(\"Got it. This bill is now marked as paid.\");","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"jthibault03"},"content":"        } catch (Exception e){","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"jthibault03"},"content":"            ui.echo(e.getMessage());","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-04-08"}],"authorContributionMap":{"CerealMiller":1,"jthibault03":24}},{"path":"src/main/java/seedu/voyagers/commands/ReadReviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.classes.Review;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"public class ReadReviewCommand extends Command{","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"    public ReadReviewCommand(String[] args){","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"        super(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage){","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"        String tripName \u003d args[1];","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"        int index \u003d trips.findTrip(tripName);","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"        if (index \u003d\u003d -1){","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"No such trip found\");","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        Trip trip \u003d trips.get(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"        assert trip !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"        Review review\u003d trip.getReview();","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"        if(review.getScore() \u003d\u003d -1){","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"This trip: \u0027\" + tripName + \"\u0027 has not been reviewed\");","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(review.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CerealMiller":34}},{"path":"src/main/java/seedu/voyagers/commands/ReviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.classes.Review;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.Status;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"public class ReviewCommand extends Command{","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"    public ReviewCommand(String[] args){","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"        super(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage) {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"        String tripName \u003d args[1];","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"        int index \u003d trips.findTrip(tripName);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"        if (index \u003d\u003d -1){","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"No such trip found\");","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"        Trip trip \u003d trips.get(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"        if(trip.getStatus() !\u003d Status.COMPLETED){","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"Trip must be completed before it can be reviewed\");","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"        if(args[2].length() \u003e 1){","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"Score must be between 0 and 10\");","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"        int score \u003d parseInt(args[2]);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"        String reflection \u003d args[3];","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"        if(score \u003c 1 || score \u003e 10){","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"            ui.echo(\"Score must be between 0 and 10\");","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"            return;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"        assert trip !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"        assert score \u003e\u003d 1 \u0026\u0026 score \u003c\u003d 10;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"        Review review \u003d trip.getReview();","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"        review.setScore(score);","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"        review.setReflection(reflection);","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"        ui.echo(\"Noted. you reviewed this trip: \" + tripName + \" with a score of \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"                + review.getScore() + \"\\n\\t\\t\" + \"noting: \" + review.getReflection());","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"CerealMiller":54}},{"path":"src/main/java/seedu/voyagers/commands/SetBillCurrencyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jthibault03"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-04-09"},{"lineNumber":2,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":3,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.Bill;","lastModifiedDate":"2024-04-09"},{"lineNumber":4,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.BillList;","lastModifiedDate":"2024-04-09"},{"lineNumber":5,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-04-09"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.utils.Currency;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"jthibault03"},"content":"public class SetBillCurrencyCommand extends Command{","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":12,"author":{"gitId":"jthibault03"},"content":"    public SetBillCurrencyCommand(String[] args) {","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"        super(args);","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"jthibault03"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage){","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"jthibault03"},"content":"        try{","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"jthibault03"},"content":"            Bill bill \u003d BillList.getBill(args[0], args[1]);","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"jthibault03"},"content":"            Currency curr \u003d Currency.getCurr(args[2]);","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"jthibault03"},"content":"            bill.setCurrency(curr);","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"jthibault03"},"content":"            ui.echo(\"Got it. Updated this bill\u0027s currency.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"jthibault03"},"content":"        } catch (Exception e){","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"jthibault03"},"content":"            ui.echo(e.getMessage());","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"}],"authorContributionMap":{"jthibault03":28}},{"path":"src/main/java/seedu/voyagers/commands/SimplifyBillCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.commands;","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Bill;","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.BillList;","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.classes.Profile;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.billsettler.BillSettler;","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Ui;","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"//import java.util.HashMap;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"//import java.util.Objects;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"//import static javax.swing.UIManager.put;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"Luo-Z-Y"},"content":"public class SimplifyBillCommand extends Command {","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"Luo-Z-Y"},"content":"    public void execute(TripList trips, Ui ui, TripStorage tripStorage) {","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"Luo-Z-Y"},"content":"        if (trips.size() \u003d\u003d 0) {","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"Luo-Z-Y"},"content":"            ui.echo(\"You have no bills in your list.\");","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"Luo-Z-Y"},"content":"            return;","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"Luo-Z-Y"},"content":"        } else {","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"Luo-Z-Y"},"content":"            BillList billList \u003d null;","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"Luo-Z-Y"},"content":"            ArrayList\u003cBill\u003e bills \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"Luo-Z-Y"},"content":"            for (int i \u003d 0; i \u003c trips.size(); i++) {","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"Luo-Z-Y"},"content":"                billList \u003d trips.get(i).getBills();","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"Luo-Z-Y"},"content":"                bills.add(billList.get(i));","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"            /*for (int j \u003d 0; j \u003c Objects.requireNonNull(billList).size(); j++) {","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"                Bill billtemp \u003d billList.get(j);","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"                Bill bill \u003d new Bill(billtemp.getName(), billtemp.getPayer(), billtemp.getAmount(),","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"                        billtemp.getCurrency(), new HashMap\u003cProfile, Double\u003e() {{","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"                    for (int k \u003d 0; k \u003c billtemp.getParticipants().size(); k++) {","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"                        put(billtemp.getParticipants(k), billtemp.getAmount() * billtemp.getPercentages().get(k));","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"Luo-Z-Y"},"content":"                    }","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"                }});","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"            }*/","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"Luo-Z-Y"},"content":"            BillSettler.createGraphForDebts(bills);","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"Luo-Z-Y"},"content":"}","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"Luo-Z-Y":27,"CerealMiller":15}},{"path":"src/main/java/seedu/voyagers/paser/NewParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.paser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.AddBillCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.AddSubTripCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.AddTripCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.commands.AutoTripStatusUpdateCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.Command;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.DeleteMainTripCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.DeleteSubTripCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.commands.EmptyCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.ExitCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.HelpCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.FindCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.ListBillCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.ListCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.ModifyTripCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.PayBillCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.ReadReviewCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.ReviewCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.SetBillCurrencyCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.commands.SimplifyBillCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"public class NewParser {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"     * Parses the input from the user and returns the corresponding command.","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"     * @param line the input from the user","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"     * @return the corresponding command","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"     * @throws IllegalArgumentException if the input is invalid","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"    public static Command parse(String line) throws IllegalArgumentException {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"        String[] words \u003d line.split(\" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"        String command \u003d words[0];","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"        String[] values;","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"        String tripName\u003d\"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"        String keyword\u003d\"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Luo-Z-Y"},"content":"        //Check syntax","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"        try{","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"            tripName \u003d words[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"            keyword \u003d words[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"        }catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"            //Do nothing","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"        switch (command) {","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"        case \"exit\":","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"CerealMiller"},"content":"        case \"list\":","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"CerealMiller"},"content":"            values \u003d line.split(\" \");","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"CerealMiller"},"content":"            return new ListCommand(values);","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"        case \"deletemaintrip\":","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"CerealMiller"},"content":"            return new DeleteMainTripCommand(parseArgs(line, ParserDefinitions.DELETEMAINTRIP));","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"        case \"deletesubtrip\":","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"CerealMiller"},"content":"            return new DeleteSubTripCommand(parseArgs(line, ParserDefinitions.DELETESUBTRIP));","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"        case \"addmaintrip\":","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"            return new AddTripCommand(parseArgs(line, ParserDefinitions.ADDMAINTRIP));","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"        case \"addsubtrip\":","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"            return new AddSubTripCommand(parseArgs(line, ParserDefinitions.ADDSUBTRIP, true));","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"CerealMiller"},"content":"        case \"addbill\":","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"jthibault03"},"content":"            return new AddBillCommand(parseArgs(line, ParserDefinitions.ADDBILL));","lastModifiedDate":"2024-04-09"},{"lineNumber":70,"author":{"gitId":"CerealMiller"},"content":"        case \"listbills\":","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"jthibault03"},"content":"            return new ListBillCommand();","lastModifiedDate":"2024-04-09"},{"lineNumber":72,"author":{"gitId":"Luo-Z-Y"},"content":"        case \"simplifybill\":","lastModifiedDate":"2024-04-11"},{"lineNumber":73,"author":{"gitId":"Luo-Z-Y"},"content":"            return new SimplifyBillCommand();","lastModifiedDate":"2024-04-11"},{"lineNumber":74,"author":{"gitId":"CerealMiller"},"content":"        case \"paybill\":","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"jthibault03"},"content":"            return new PayBillCommand(parseArgs(line, ParserDefinitions.PAYBILL));","lastModifiedDate":"2024-04-09"},{"lineNumber":76,"author":{"gitId":"CerealMiller"},"content":"        case \"setbillcurrency\":","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"jthibault03"},"content":"            return new SetBillCurrencyCommand(parseArgs(line, ParserDefinitions.SETBILLCURRENCY));","lastModifiedDate":"2024-04-09"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"        case \"setname\":","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"            values \u003d concatenate(new String[]{\"name\"},","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"                    parseArgs(line, ParserDefinitions.SETNAME, true));","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"azamanis"},"content":"            return new ModifyTripCommand(values);","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"        case \"setdates\":","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"            values \u003d concatenate(new String[]{\"dates\"},","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"                    parseArgs(line, ParserDefinitions.SETDATES, true));","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"            return new ModifyTripCommand(values);","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"        case \"setlocation\":","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"            values \u003d concatenate(new String[]{\"location\"},","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"azamanis"},"content":"                    parseArgs(line, ParserDefinitions.SETLOCATION, true));","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"azamanis"},"content":"            return new ModifyTripCommand(values);","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"azamanis"},"content":"        case \"setdescription\":","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"azamanis"},"content":"            values \u003d concatenate(new String[]{\"description\"},","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"azamanis"},"content":"                    parseArgs(line, ParserDefinitions.SETDESCRIPTION, true));","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"azamanis"},"content":"            return new ModifyTripCommand(values);","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"Luo-Z-Y"},"content":"        case \"setstatus\":","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"Luo-Z-Y"},"content":"            values \u003d concatenate(new String[]{\"status\"},","lastModifiedDate":"2024-04-07"},{"lineNumber":96,"author":{"gitId":"Luo-Z-Y"},"content":"                    parseArgs(line, ParserDefinitions.SETSTATUS, true));","lastModifiedDate":"2024-04-07"},{"lineNumber":97,"author":{"gitId":"Luo-Z-Y"},"content":"            return new ModifyTripCommand(values);","lastModifiedDate":"2024-04-07"},{"lineNumber":98,"author":{"gitId":"azamanis"},"content":"        case \"help\":","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"azamanis"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"CerealMiller"},"content":"        case \"review\":","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"CerealMiller"},"content":"            values \u003d concatenate(new String[]{\"review\"},","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"CerealMiller"},"content":"                    parseArgs(line, ParserDefinitions.REVIEW, true));","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"CerealMiller"},"content":"            return new ReviewCommand(values);","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"CerealMiller"},"content":"        case \"readreview\":","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"CerealMiller"},"content":"            values \u003d line.split(\" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"CerealMiller"},"content":"            return new ReadReviewCommand(values);","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"CerealMiller"},"content":"        case \"find\":","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"CerealMiller"},"content":"            values \u003d parseArgs(line, ParserDefinitions.FIND);","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"CerealMiller"},"content":"            return new FindCommand(values);","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"azamanis"},"content":"        default:","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(\"Invalid command\");","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"azamanis"},"content":"    private static String[] concatenate(String[] s1, String[] s2){","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"azamanis"},"content":"        String[] result \u003d new String[s1.length + s2.length];","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"azamanis"},"content":"        System.arraycopy(s1, 0, result, 0, s1.length);","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"CerealMiller"},"content":"        System.arraycopy(s2, 0, result, 1, s2.length);","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"azamanis"},"content":"        return result;","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"azamanis"},"content":"    private static String[] parseArgs(String line, String[] validArgs) throws IllegalArgumentException {","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"azamanis"},"content":"        return parseArgs(line, validArgs, false);","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"azamanis"},"content":"     * Extracts the arguments from an input line.","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"azamanis"},"content":"     * @param line the line to parse. command INITIAL /arg1 val 1 /arg2 val2 ...","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"azamanis"},"content":"     * @param validArgs expected arguments","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"azamanis"},"content":"     * @return the values for the arguments as an array. [Initial, /arg1, /arg2, ...]","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"azamanis"},"content":"     * @throws IllegalArgumentException if the arguments in the input are invalid","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"azamanis"},"content":"    private static String[] parseArgs(String line, String[] validArgs, boolean initial)","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"azamanis"},"content":"                throws IllegalArgumentException {","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"azamanis"},"content":"        String[] args \u003d line.split(\" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"azamanis"},"content":"        String[] values \u003d new String[validArgs.length + 1];","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"azamanis"},"content":"        String aux \u003d \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"azamanis"},"content":"        int i;","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"azamanis"},"content":"        int indexOfNewArgs \u003d 0;","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"azamanis"},"content":"        int indexOfValidArgs \u003d 0;","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"azamanis"},"content":"        int lenOfArgGiven \u003d 0;","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"azamanis"},"content":"        for (i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"azamanis"},"content":"            String word \u003d args[i];","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"azamanis"},"content":"            if (word.equals(validArgs[Math.min(indexOfValidArgs, validArgs.length - 1)])) {","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"azamanis"},"content":"                if (lenOfArgGiven \u003d\u003d 0 \u0026\u0026 indexOfValidArgs \u003e 0) {","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"azamanis"},"content":"                    //String name \u003d indexOfValidArgs \u003e 0 ? validArgs[indexOfValidArgs - 1] : \"description\";","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"azamanis"},"content":"                    throw new IllegalArgumentException(\"No value for \" + validArgs[indexOfValidArgs - 1]);","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"azamanis"},"content":"                }","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"azamanis"},"content":"                values[indexOfNewArgs++] \u003d aux.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"azamanis"},"content":"                aux \u003d \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"azamanis"},"content":"                indexOfValidArgs++;","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"azamanis"},"content":"                lenOfArgGiven \u003d 0;","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"azamanis"},"content":"            } else if (word.startsWith(\"/\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"azamanis"},"content":"                //We are forcing to receive the arguments in one order.","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"azamanis"},"content":"                //TODO: consider to allow the user to input the arguments in any order","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"azamanis"},"content":"                throw new IllegalArgumentException(\"Invalid argument \" + word +","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"azamanis"},"content":"                        \". Expected \" + validArgs[indexOfValidArgs]);","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"azamanis"},"content":"            } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"azamanis"},"content":"                aux +\u003d word + \" \";","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"azamanis"},"content":"                lenOfArgGiven++;","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"azamanis"},"content":"        values[indexOfNewArgs] \u003d aux.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"azamanis"},"content":"        if (lenOfArgGiven \u003d\u003d 0 \u0026\u0026 indexOfValidArgs \u003e 0) {","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"azamanis"},"content":"            //String name \u003d indexOfValidArgs \u003e 0 ? validArgs[indexOfValidArgs - 1] : \"description\";","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(\"No value for \" + validArgs[indexOfValidArgs - 1]);","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"azamanis"},"content":"        if (indexOfValidArgs !\u003d validArgs.length) {","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"azamanis"},"content":"            String message \u003d \"Missing arguments. Expected \";","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"azamanis"},"content":"            for (String arg : validArgs) {","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"azamanis"},"content":"                message +\u003d arg + \" \";","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"azamanis"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"azamanis"},"content":"            throw new IllegalArgumentException(message);","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"azamanis"},"content":"        if (!initial){","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"azamanis"},"content":"            values \u003d Arrays.copyOfRange(values, 1, values.length);","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"azamanis"},"content":"        return values;","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"azamanis"},"content":"    public  static void main(String[] args) {","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"azamanis"},"content":"        String line \u003d \"addmaintrip /n trip1 /start 2020-1-1 /end 2020-12-12 /location location1 /d description1\";","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"azamanis"},"content":"        String line2 \u003d \"setname trip1 /n trip2\";","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"azamanis"},"content":"        String[] values \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"azamanis"},"content":"        try{","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"Luo-Z-Y"},"content":"            values \u003d parseArgs(line2, ParserDefinitions.SETNAME, true);","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"Luo-Z-Y"},"content":"        } catch (IllegalArgumentException e){","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"azamanis"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"azamanis"},"content":"        for (String value : values) {","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"azamanis"},"content":"            System.out.println(value);","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"azamanis"},"content":"        Command c \u003d parse(line);","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"azamanis":151,"Luo-Z-Y":9,"CerealMiller":44,"jthibault03":4}},{"path":"src/main/java/seedu/voyagers/paser/ParserDefinitions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers.paser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"public class ParserDefinitions {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"    public static final String[] ADDMAINTRIP \u003d {\"/n\", \"/start\", \"/end\", \"/location\", \"/d\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"    public static final String[] DELETEMAINTRIP \u003d {\"/n\"};","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"    public static final String[] DELETESUBTRIP \u003d {\"/n\", \"/i\"};","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"    public static final String[] ADDSUBTRIP \u003d {\"/n\", \"/start\", \"/end\", \"/location\", \"/d\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"jthibault03"},"content":"    public static final String[] ADDBILL \u003d {\"/trip\", \"/n\", \"/payer\", \"/others\", \"/amount\", \"/percentages\"};","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"    public static final String[] PAYBILL \u003d {\"/trip\", \"/n\"};","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"    public static final String[] SETBILLCURRENCY \u003d {\"/trip\", \"/n\", \"/currency\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"    public static final String[] SETNAME \u003d {\"/n\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"    public static final String[] SETDATES \u003d {\"/start\", \"/end\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"    public static final String[] SETLOCATION \u003d {\"/location\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"    public static final String[] SETDESCRIPTION \u003d {\"/d\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"    public static final String[] REVIEW \u003d {\"/s\", \"/r\"};","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final String[] SETSTATUS \u003d {\"/status\"};","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"    public static final String[] FIND \u003d {\"/n\"};","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"azamanis":18,"Luo-Z-Y":1,"CerealMiller":6,"jthibault03":4}},{"path":"src/main/java/seedu/voyagers/utils/BillStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.utils;","lastModifiedDate":"2024-04-09"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Bill;","lastModifiedDate":"2024-04-09"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.BillList;","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Profile;","lastModifiedDate":"2024-04-09"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"//import seedu.voyagers.classes.ProfileList;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.File;","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-09"},{"lineNumber":12,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"Luo-Z-Y"},"content":"public class BillStorage {","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"Luo-Z-Y"},"content":"    public static void readBillFile(BillList billList, String currentDir, String fileName) {","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"Luo-Z-Y"},"content":"        try {","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"Luo-Z-Y"},"content":"            File f \u003d new File(currentDir + \"/\" + fileName);","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"Luo-Z-Y"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"Luo-Z-Y"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"Luo-Z-Y"},"content":"                String[] inputs \u003d s.nextLine().split(\"\\\\|\", 8);","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"Luo-Z-Y"},"content":"                assert inputs.length \u003d\u003d 8 : \"Invalid input format\";","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"Luo-Z-Y"},"content":"                //Profile payer \u003d ProfileList.getProfile(inputs[2]);","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"Luo-Z-Y"},"content":"                Profile payer \u003d new Profile(inputs[2]);","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"Luo-Z-Y"},"content":"                double amount \u003d Double.parseDouble(inputs[3]);","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"Luo-Z-Y"},"content":"                Currency currency;","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"Luo-Z-Y"},"content":"                if (inputs[4].equalsIgnoreCase(\"null\")) {","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"Luo-Z-Y"},"content":"                    currency \u003d null;","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"                } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"                    currency \u003d Currency.valueOf(inputs[4]);","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"Luo-Z-Y"},"content":"                }","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"Luo-Z-Y"},"content":"                ArrayList\u003cProfile\u003e people \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"Luo-Z-Y"},"content":"                ArrayList\u003cDouble\u003e percentages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"Luo-Z-Y"},"content":"                String[] peopleNames \u003d inputs[5].split(\", \");","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"Luo-Z-Y"},"content":"                String[] percentagesString \u003d inputs[6].split(\", \");","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"Luo-Z-Y"},"content":"                for (int i \u003d 0; i \u003c percentagesString.length; i++) {","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"Luo-Z-Y"},"content":"                    people.add(new Profile(peopleNames[i]));","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"Luo-Z-Y"},"content":"                    percentages.add(Double.parseDouble(percentagesString[i]));","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"Luo-Z-Y"},"content":"                }","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"Luo-Z-Y"},"content":"                Bill bill \u003d new Bill(inputs[0], inputs[1], payer, amount, currency, people, percentages);","lastModifiedDate":"2024-04-09"},{"lineNumber":41,"author":{"gitId":"Luo-Z-Y"},"content":"                billList.add(bill);","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"Luo-Z-Y"},"content":"            }","lastModifiedDate":"2024-04-09"},{"lineNumber":43,"author":{"gitId":"Luo-Z-Y"},"content":"            s.close();","lastModifiedDate":"2024-04-09"},{"lineNumber":44,"author":{"gitId":"Luo-Z-Y"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-09"},{"lineNumber":45,"author":{"gitId":"Luo-Z-Y"},"content":"            System.out.println(\"Bill file not found.\\nCreating new bill file...\\nBill file created.\");","lastModifiedDate":"2024-04-09"},{"lineNumber":46,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":47,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"Luo-Z-Y"},"content":"    public static void writeBillFile(BillList billList, int size, String currentDir, String fileName) {","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"Luo-Z-Y"},"content":"        try {","lastModifiedDate":"2024-04-09"},{"lineNumber":51,"author":{"gitId":"Luo-Z-Y"},"content":"            FileWriter fileWriter \u003d new FileWriter(currentDir + \"/\" + fileName);","lastModifiedDate":"2024-04-09"},{"lineNumber":52,"author":{"gitId":"Luo-Z-Y"},"content":"            for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"Luo-Z-Y"},"content":"                fileWriter.write(billList.get(i).toStorage());","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"Luo-Z-Y"},"content":"            }","lastModifiedDate":"2024-04-09"},{"lineNumber":55,"author":{"gitId":"Luo-Z-Y"},"content":"            fileWriter.close();","lastModifiedDate":"2024-04-09"},{"lineNumber":56,"author":{"gitId":"Luo-Z-Y"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-09"},{"lineNumber":57,"author":{"gitId":"Luo-Z-Y"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2024-04-09"},{"lineNumber":58,"author":{"gitId":"Luo-Z-Y"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-04-09"},{"lineNumber":59,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":60,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":61,"author":{"gitId":"Luo-Z-Y"},"content":"}","lastModifiedDate":"2024-04-09"}],"authorContributionMap":{"Luo-Z-Y":57,"CerealMiller":4}},{"path":"src/main/java/seedu/voyagers/utils/Currency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.utils;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"jthibault03"},"content":"public enum Currency {","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"jthibault03"},"content":"    USD(\"US Dollar\", \"$\", \"USD\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"jthibault03"},"content":"    EUR(\"Euro\", \"‚Ç¨\", \"EUR\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"    GBP(\"British Pound\", \"¬£\", \"GPB\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"    JPY(\"Japanese Yen\", \"¬•\", \"JPY\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"    AUD(\"Australian Dollar\", \"$\", \"AUD\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"jthibault03"},"content":"    CAD(\"Canadian Dollar\", \"$\", \"CAD\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"jthibault03"},"content":"    CHF(\"Swiss Franc\", \"CHF\", \"CHF\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"jthibault03"},"content":"    CNY(\"Chinese Yuan Renminbi\", \"¬•\", \"CNY\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"jthibault03"},"content":"    SEK(\"Swedish Krona\", \"kr\", \"SEK\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"    NZD(\"New Zealand Dollar\", \"$\", \"NZD\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"    MXN(\"Mexican Peso\", \"$\", \"MXN\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"    SGD(\"Singapore Dollar\", \"$\", \"SGD\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"jthibault03"},"content":"    HKD(\"Hong Kong Dollar\", \"$\", \"HKD\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"jthibault03"},"content":"    NOK(\"Norwegian Krone\", \"kr\", \"NOK\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"jthibault03"},"content":"    KRW(\"South Korean Won\", \"W\", \"KRW\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"jthibault03"},"content":"    TRY(\"Turkish Lira\", \"‚Ç∫\", \"TRY\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"jthibault03"},"content":"    RUB(\"Russian Ruble\", \"‚ÇΩ\", \"RUB\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"jthibault03"},"content":"    INR(\"Indian Rupee\", \"‚Çπ\", \"INR\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"jthibault03"},"content":"    BRL(\"Brazilian Real\", \"R$\", \"BRL\"),","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"jthibault03"},"content":"    ZAR(\"South African Rand\", \"R\", \"ZAR\");","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Luo-Z-Y"},"content":"    //Default conversion rates from SGD to other currencies","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOEUR \u003d 0.63;","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOUSD \u003d 0.74;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOGBP \u003d 0.54;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOJPY \u003d 80.0;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOAUD \u003d 1.0;","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOCAD \u003d 0.94;","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOCHF \u003d 0.68;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOCNY \u003d 4.8;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOSEK \u003d 6.5;","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTONZD \u003d 1.1;","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOMXN \u003d 15.0;","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOHKD \u003d 5.7;","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTONOK \u003d 6.5;","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOKRW \u003d 850.0;","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOTRY \u003d 6.5;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTORUB \u003d 55.0;","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOINR \u003d 55.0;","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOBRL \u003d 4.5;","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Luo-Z-Y"},"content":"    public static final double SGDTOZAR \u003d 11.0;","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"    private final String name;","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"    private final String symbol;","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"jthibault03"},"content":"    private final String code;","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"jthibault03"},"content":"    Currency(String name, String symbol, String code) {","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"jthibault03"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"jthibault03"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"jthibault03"},"content":"        this.code \u003d code;","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"CerealMiller"},"content":"    public double currencyConversion(double foreignCurrencyAmount, double conversionRate) {","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"Luo-Z-Y"},"content":"        return foreignCurrencyAmount * conversionRate;","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"jthibault03"},"content":"    public String getName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"jthibault03"},"content":"        return name;","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"jthibault03"},"content":"    public String getCode() {","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"jthibault03"},"content":"        return code;","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"jthibault03"},"content":"    public static Currency getCurr(String currString) {","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"jthibault03"},"content":"        for (Currency c : Currency.values()) {","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"jthibault03"},"content":"            if (c.getCode().equals(currString)) {","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"jthibault03"},"content":"                return c;","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"jthibault03"},"content":"            }","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"jthibault03"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"jthibault03"},"content":"        throw new IllegalArgumentException(\"Invalid currency code.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"jthibault03"},"content":"    public String getSymbol() {","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"jthibault03"},"content":"        return symbol;","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":81,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"CerealMiller"},"content":"    /*public Currency getEnum(String name) {","lastModifiedDate":"2024-04-11"},{"lineNumber":83,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":84,"author":{"gitId":"CerealMiller"},"content":"    }*/","lastModifiedDate":"2024-04-11"},{"lineNumber":85,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Luo-Z-Y":25,"CerealMiller":7,"jthibault03":55}},{"path":"src/main/java/seedu/voyagers/utils/FormatDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.utils;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"public class FormatDate {","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"    public static SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"azamanis":4,"Luo-Z-Y":3}},{"path":"src/main/java/seedu/voyagers/utils/Payable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jthibault03"},"content":"package seedu.voyagers.utils;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.Profile;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"jthibault03"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"public interface Payable {","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"jthibault03"},"content":"    void addPeople(Profile[] people);","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"jthibault03"},"content":"    void removePeople(Profile[] people);","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"jthibault03"},"content":"    ArrayList\u003cProfile\u003e getPeople();","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"jthibault03"},"content":"    void modifyPercentages(Double[] percentages);","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"    ArrayList\u003cDouble\u003e getPercentages();","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"    void setTrip(Trip trip);","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"    Trip getTrip();","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"jthibault03":17}},{"path":"src/main/java/seedu/voyagers/utils/ProfileStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.utils;","lastModifiedDate":"2024-04-09"},{"lineNumber":2,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Profile;","lastModifiedDate":"2024-04-09"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.ProfileList;","lastModifiedDate":"2024-04-09"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.File;","lastModifiedDate":"2024-04-09"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-04-09"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"Luo-Z-Y"},"content":"public class ProfileStorage {","lastModifiedDate":"2024-04-09"},{"lineNumber":12,"author":{"gitId":"Luo-Z-Y"},"content":"    public static void readProfileFile(ProfileList profileList, String currentDir, String fileName) {","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"Luo-Z-Y"},"content":"        try {","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"Luo-Z-Y"},"content":"            File f \u003d new File(currentDir + \"/\" + fileName);","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"Luo-Z-Y"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"Luo-Z-Y"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"Luo-Z-Y"},"content":"                String[] inputs \u003d s.nextLine().split(\"\\\\|\", 2);","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"Luo-Z-Y"},"content":"                assert inputs.length \u003d\u003d 2 : \"Invalid input format\";","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"Luo-Z-Y"},"content":"                Profile profile \u003d new Profile(inputs[0], Currency.valueOf(inputs[1]));","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"Luo-Z-Y"},"content":"                ProfileList.add(profile);","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"Luo-Z-Y"},"content":"            }","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"Luo-Z-Y"},"content":"            s.close();","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"Luo-Z-Y"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"Luo-Z-Y"},"content":"            System.out.println(\"Profile file not found.\\nCreating new profile file...\\nProfile file created.\");","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"Luo-Z-Y"},"content":"    public static void writeProfileFile(ArrayList\u003cProfile\u003e profiles, int size, String currentDir, String fileName) {","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"Luo-Z-Y"},"content":"        try {","lastModifiedDate":"2024-04-09"},{"lineNumber":30,"author":{"gitId":"Luo-Z-Y"},"content":"            FileWriter fileWriter \u003d new FileWriter(currentDir + \"/\" + fileName);","lastModifiedDate":"2024-04-09"},{"lineNumber":31,"author":{"gitId":"Luo-Z-Y"},"content":"            for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2024-04-09"},{"lineNumber":32,"author":{"gitId":"Luo-Z-Y"},"content":"                fileWriter.write(profiles.get(i).toString());","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"Luo-Z-Y"},"content":"            }","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"Luo-Z-Y"},"content":"            fileWriter.close();","lastModifiedDate":"2024-04-09"},{"lineNumber":35,"author":{"gitId":"Luo-Z-Y"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-09"},{"lineNumber":36,"author":{"gitId":"Luo-Z-Y"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"Luo-Z-Y"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-04-09"},{"lineNumber":38,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":39,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":40,"author":{"gitId":"Luo-Z-Y"},"content":"}","lastModifiedDate":"2024-04-09"}],"authorContributionMap":{"Luo-Z-Y":40}},{"path":"src/main/java/seedu/voyagers/utils/ReviewStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CerealMiller"},"content":"package seedu.voyagers.utils;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.classes.TripList;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.classes.Review;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import java.io.File;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"CerealMiller"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"CerealMiller"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"CerealMiller"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"CerealMiller"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"CerealMiller"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"CerealMiller"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"CerealMiller"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"CerealMiller"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"public class ReviewStorage {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(\"Storage\");","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"CerealMiller"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"     * Reads the trip file and adds the trips to the list of trips.","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"     * @param tripList   The class which contains a list of trips.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"     * @param currentDir The current directory of the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"CerealMiller"},"content":"     * @param fileName   The name of the file to read from.","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"    public static void readReviewFile(TripList tripList, String currentDir, String fileName) {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"CerealMiller"},"content":"        Logger logger \u003d Logger.getLogger(\"Storage\");","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"CerealMiller"},"content":"        //local path of data file","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"CerealMiller"},"content":"        File f \u003d new File(currentDir + \"/\" + fileName);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"CerealMiller"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"                readReviewLine(tripList, s);","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"            s.close();","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"CerealMiller"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"Review file not found.\\nCreating new review file...\\nReview file created.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"            try {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"CerealMiller"},"content":"                assert f.createNewFile() : \"Review File creation failed\";","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"                f.createNewFile();","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"CerealMiller"},"content":"                logger.log(Level.INFO, \"Review file created.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"CerealMiller"},"content":"            } catch (java.io.IOException ex) {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"CerealMiller"},"content":"                System.out.println(\"An error occurred.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"                logger.log(Level.SEVERE, \"An error occurred when creating the review file.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"Trip from local-reviews.txt not found.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"CerealMiller"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"An error occurred: \" + e.getMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"CerealMiller"},"content":"    private static void readReviewLine(TripList tripList, Scanner s) {","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"CerealMiller"},"content":"        String[] inputs \u003d s.nextLine().split(\"\\\\|\", 3);","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"CerealMiller"},"content":"        assert inputs.length \u003d\u003d 3 : \"Invalid input format\";","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"CerealMiller"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"        Trip trip \u003d null;","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"CerealMiller"},"content":"        trip \u003d tripList.getTrip(inputs[0]);","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"CerealMiller"},"content":"        if (trip \u003d\u003d null) {","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"CerealMiller"},"content":"            throw new NullPointerException(\"Trip not found\");","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"CerealMiller"},"content":"        Review review \u003d trip.getReview();","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"CerealMiller"},"content":"        review.setScore(inputs[1]);","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"CerealMiller"},"content":"        review.setReflection(inputs[2]);","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"CerealMiller"},"content":"        review.setTrip(trip);","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"CerealMiller"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"CerealMiller"},"content":"     * Writes the trips to the trip file.","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"CerealMiller"},"content":"     * @param tripList   The class which containts a list of trips.","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"CerealMiller"},"content":"     * @param tripsCount The number of trips in the list.","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"CerealMiller"},"content":"     * @param currentDir The current directory of the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"CerealMiller"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"CerealMiller"},"content":"    public static void writeReviewFileMain(TripList tripList, int tripsCount, String currentDir, String fileName) {","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"CerealMiller"},"content":"        //local path of data file","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"CerealMiller"},"content":"        File f \u003d new File(currentDir + \"/\" + fileName);","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"CerealMiller"},"content":"        try (java.io.FileWriter writer \u003d new java.io.FileWriter(f)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"CerealMiller"},"content":"            for (int i \u003d 0; i \u003c tripsCount; i++) {","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"CerealMiller"},"content":"                Trip trip \u003d tripList.get(i);","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"CerealMiller"},"content":"                if (trip.getTripType()\u003d\u003d\"main\") {","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"CerealMiller"},"content":"                    parseToFile(writer, trip);","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"CerealMiller"},"content":"                }","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"CerealMiller"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"An error occurred: \" + e.getMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"CerealMiller"},"content":"    private static void parseToFile(FileWriter writer, Trip trip) throws IOException {","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"CerealMiller"},"content":"        Review review \u003d trip.getReview();","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"CerealMiller"},"content":"        writer.write(trip.getName() + \"|\" + review.getScore() + \"|\" + review.getReflection() +","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"CerealMiller"},"content":"                \"\\n\");","lastModifiedDate":"2024-04-12"},{"lineNumber":100,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":101,"author":{"gitId":"CerealMiller"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"CerealMiller":101}},{"path":"src/main/java/seedu/voyagers/utils/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.utils;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"public enum Status {","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"    ONGOING,","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"    COMPLETED,","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"    UPCOMING,","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Luo-Z-Y"},"content":"    CANCELLED","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Luo-Z-Y"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Luo-Z-Y":8}},{"path":"src/main/java/seedu/voyagers/utils/TripStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.utils;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.File;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"public class TripStorage {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Luo-Z-Y"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(\"Storage\");","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Luo-Z-Y"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Luo-Z-Y"},"content":"     * Reads the trip file and adds the trips to the list of trips.","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"Luo-Z-Y"},"content":"     * @param trips      The list of trips to add the trips to.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Luo-Z-Y"},"content":"     * @param currentDir The current directory of the file.","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Luo-Z-Y"},"content":"     * @param fileName   The name of the file to read from.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Luo-Z-Y"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"    public static void readTripFile(ArrayList\u003cTrip\u003e trips, String currentDir, String fileName) {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"        Logger logger \u003d Logger.getLogger(\"Storage\");","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Luo-Z-Y"},"content":"        //local path of data file","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"CerealMiller"},"content":"        File f \u003d new File(currentDir + \"/\" + fileName);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Luo-Z-Y"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"Luo-Z-Y"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"CerealMiller"},"content":"            /*if (s.hasNext()) {","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"CerealMiller"},"content":"                System.out.println(\"Here are the trips in your list:\");","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"CerealMiller"},"content":"            }*/","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"Luo-Z-Y"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Luo-Z-Y"},"content":"                String[] inputs \u003d s.nextLine().split(\"\\\\|\", 7);","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Luo-Z-Y"},"content":"                assert inputs.length \u003d\u003d 7 : \"Invalid input format\";","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Luo-Z-Y"},"content":"                java.text.SimpleDateFormat format \u003d new java.text.SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Luo-Z-Y"},"content":"                Date startDate \u003d format.parse(inputs[2]);","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Luo-Z-Y"},"content":"                Date endDate \u003d format.parse(inputs[3]);","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Luo-Z-Y"},"content":"                Trip trip \u003d new Trip(inputs[1], startDate, endDate, inputs[4], inputs[5]);","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Luo-Z-Y"},"content":"                trip.setTripType(inputs[0]);","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Luo-Z-Y"},"content":"                if (inputs[0].equalsIgnoreCase(\"main\")) {","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"CerealMiller"},"content":"                    trips.add(trip);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Luo-Z-Y"},"content":"                } else {","lastModifiedDate":"2024-04-09"},{"lineNumber":51,"author":{"gitId":"Luo-Z-Y"},"content":"                    for (Trip t : trips) {","lastModifiedDate":"2024-04-09"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"                        if (t.getTripType().equalsIgnoreCase(\"main\") \u0026\u0026","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"CerealMiller"},"content":"                                t.getName().equalsIgnoreCase(inputs[1])) {","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"Luo-Z-Y"},"content":"                            t.addSubTrip(trip);","lastModifiedDate":"2024-04-09"},{"lineNumber":55,"author":{"gitId":"Luo-Z-Y"},"content":"                        }","lastModifiedDate":"2024-04-09"},{"lineNumber":56,"author":{"gitId":"Luo-Z-Y"},"content":"                    }","lastModifiedDate":"2024-04-09"},{"lineNumber":57,"author":{"gitId":"Luo-Z-Y"},"content":"                }","lastModifiedDate":"2024-04-09"},{"lineNumber":58,"author":{"gitId":"Luo-Z-Y"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"CerealMiller"},"content":"            s.close();","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Luo-Z-Y"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"Trip file not found.\\nCreating new trip file...\\nTrip file created.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Luo-Z-Y"},"content":"            try {","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"CerealMiller"},"content":"                assert f.createNewFile() : \"Trip file creation failed\";","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"Luo-Z-Y"},"content":"                f.createNewFile();","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"CerealMiller"},"content":"                logger.log(Level.INFO, \"Trip file created.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"Luo-Z-Y"},"content":"            } catch (java.io.IOException ex) {","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"Luo-Z-Y"},"content":"                System.out.println(\"An error occurred.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"CerealMiller"},"content":"                logger.log(Level.SEVERE, \"An error occurred when creating the trip file.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"Luo-Z-Y"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"Luo-Z-Y"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"Luo-Z-Y"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"Luo-Z-Y"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"Luo-Z-Y"},"content":"     * Writes the trips to the trip file.","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"CerealMiller"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"Luo-Z-Y"},"content":"     * @param trips      The list of trips to write to the file.","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"Luo-Z-Y"},"content":"     * @param tripsCount The number of trips in the list.","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"Luo-Z-Y"},"content":"     * @param currentDir The current directory of the file.","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Luo-Z-Y"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"CerealMiller"},"content":"    public static void writeTripFileMain(ArrayList\u003cTrip\u003e trips, int tripsCount, String currentDir, String fileName) {","lastModifiedDate":"2024-04-11"},{"lineNumber":84,"author":{"gitId":"Luo-Z-Y"},"content":"        //local path of data file","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"CerealMiller"},"content":"        File f \u003d new File(currentDir + \"/\" + fileName);","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"Luo-Z-Y"},"content":"        try (java.io.FileWriter writer \u003d new java.io.FileWriter(f)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"Luo-Z-Y"},"content":"            for (int i \u003d 0; i \u003c tripsCount; i++) {","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"Luo-Z-Y"},"content":"                Trip trip \u003d trips.get(i);","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"CerealMiller"},"content":"                if (trip.getTripType() \u003d\u003d \"main\") {","lastModifiedDate":"2024-04-11"},{"lineNumber":91,"author":{"gitId":"CerealMiller"},"content":"                    parseToFile(writer, trip);","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"CerealMiller"},"content":"                    writeTripFileSub(trip.getSubTrips(), trip.getSubTripsSize(), writer);","lastModifiedDate":"2024-04-11"},{"lineNumber":93,"author":{"gitId":"CerealMiller"},"content":"                }","lastModifiedDate":"2024-04-11"},{"lineNumber":94,"author":{"gitId":"CerealMiller"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":95,"author":{"gitId":"CerealMiller"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-11"},{"lineNumber":96,"author":{"gitId":"CerealMiller"},"content":"            System.out.println(\"An error occurred: \" + e.getMessage());","lastModifiedDate":"2024-04-11"},{"lineNumber":97,"author":{"gitId":"CerealMiller"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":98,"author":{"gitId":"CerealMiller"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":99,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":100,"author":{"gitId":"CerealMiller"},"content":"    private static void parseToFile(FileWriter writer, Trip trip) throws IOException {","lastModifiedDate":"2024-04-11"},{"lineNumber":101,"author":{"gitId":"CerealMiller"},"content":"        writer.write(trip.getTripType() + \"|\" + trip.getName() + \"|\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":102,"author":{"gitId":"CerealMiller"},"content":"                FormatDate.dateFormat.format(trip.getStartDate()) + \"|\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":103,"author":{"gitId":"Luo-Z-Y"},"content":"                FormatDate.dateFormat.format(trip.getEndDate()) + \"|\"","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"CerealMiller"},"content":"                + trip.getLocation() + \"|\" + trip.getDescription()","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"CerealMiller"},"content":"                + \"|\" + trip.getStatus().toString() + \"\\n\");","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":108,"author":{"gitId":"CerealMiller"},"content":"    public static void writeTripFileSub(ArrayList\u003cTrip\u003e trips, int tripsCount, java.io.FileWriter writer)","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"CerealMiller"},"content":"            throws IOException {","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":111,"author":{"gitId":"CerealMiller"},"content":"        for (int i \u003d 0; i \u003c tripsCount; i++) {","lastModifiedDate":"2024-04-11"},{"lineNumber":112,"author":{"gitId":"CerealMiller"},"content":"            Trip trip \u003d trips.get(i);","lastModifiedDate":"2024-04-11"},{"lineNumber":113,"author":{"gitId":"CerealMiller"},"content":"            parseToFile(writer, trip);","lastModifiedDate":"2024-04-11"},{"lineNumber":114,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"Luo-Z-Y"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"azamanis":5,"Luo-Z-Y":69,"CerealMiller":42}},{"path":"src/main/java/seedu/voyagers/utils/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers.utils;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":" * Represents the user interface of the application","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"public class Ui {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"    private static final String LOGO \u003d \"Voyagers\";","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"    private static final String NAME \u003d \"Voyagers\";","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"    private static final String DIVIDER \u003d \"\\t\\t____________________________________________________________\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"    private String lastLine;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"    public Ui() {","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"     * Prints a line with indentation and optional top and bottom border","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"azamanis"},"content":"     * @param line the line to print","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"     * @param isTop true to print the top border","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"     * @param isBottom true to print the bottom border","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"    public void echo(String line, boolean isTop, boolean isBottom) {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"        if (isTop) {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"        System.out.println(\"\\t\\t\" + line);","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"        if (isBottom) {","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"azamanis"},"content":"     * Prints a line with indentation","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"     * @param line the line to print","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"    public void echo(String line) {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"        System.out.println(\"\\t\\t\" + line);","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"     * Prints the welcome message","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"azamanis"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"        echo(\"Hello! I\u0027m \" + NAME + \"\\n\\t\\tWhat can I do for you?\", true, false);","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"     * Prints the goodbye message","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"        echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"     * Reads the next command from the user","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"     * @return the command as a string","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"azamanis"},"content":"    public String readCommand() {","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"        this.lastLine \u003d in.nextLine();","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"        return this.lastLine;","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Luo-Z-Y"},"content":"    public void showNextCommand() {","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Luo-Z-Y"},"content":"        echo(\"Enter your next command:\");","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"     * Prints the message after deleting a task","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"     * @param task task that has been deleted","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"     * @param size size of the list after deletion","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"    public void showDelete(Trip task, int size) {","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"azamanis"},"content":"        echo(\"Noted. I\u0027ve removed this trip:\\n\\t\\t\" + task, true, false);","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"azamanis"},"content":"        echo(\"Now you have \" + size + \" trips in the list.\", false, true);","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"azamanis"},"content":"     * Prints the message after adding a task","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"azamanis"},"content":"     * @return the last line read","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"azamanis"},"content":"    public String geLastLine() {","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"azamanis"},"content":"        return lastLine;","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"azamanis"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"azamanis"},"content":"     * Show Exit message","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"azamanis"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"azamanis"},"content":"    public void showExit() {","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"azamanis"},"content":"        echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"azamanis":102,"Luo-Z-Y":7}},{"path":"src/test/java/seedu/voyagers/CurrencyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jthibault03"},"content":"package seedu.voyagers;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"jthibault03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.utils.Currency;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"jthibault03"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"jthibault03"},"content":"import java.util.Random;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"jthibault03"},"content":"import static org.junit.Assert.assertNotNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"jthibault03"},"content":"import static org.junit.Assert.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"jthibault03"},"content":"public class CurrencyTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"jthibault03"},"content":"    List\u003cCurrency\u003e items \u003d List.of(Currency.USD, Currency.EUR, Currency.GBP, Currency.JPY, Currency.AUD,","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"jthibault03"},"content":"            Currency.CAD, Currency.CHF, Currency.CNY, Currency.SEK, Currency.NZD, Currency.MXN, Currency.SGD,","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"jthibault03"},"content":"            Currency.HKD, Currency.NOK, Currency.KRW, Currency.TRY, Currency.RUB, Currency.INR, Currency.BRL,","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"jthibault03"},"content":"            Currency.ZAR);","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"jthibault03"},"content":"    Random random \u003d new Random();","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"jthibault03"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"jthibault03"},"content":"    public void hasSymbol() {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"jthibault03"},"content":"        int randomNumber \u003d random.nextInt(19);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"jthibault03"},"content":"        Currency randomItem \u003d items.get(randomNumber);","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"jthibault03"},"content":"        assertNotNull(randomItem.getSymbol());","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"jthibault03"},"content":"        assertTrue(randomItem.getSymbol() instanceof String);","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"jthibault03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"jthibault03"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"jthibault03"},"content":"    public void hasName() {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"jthibault03"},"content":"        int randomNumber \u003d random.nextInt(19);","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"jthibault03"},"content":"        Currency randomItem \u003d items.get(randomNumber);","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"jthibault03"},"content":"        assertNotNull(randomItem.getName());","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"jthibault03"},"content":"        assertTrue(randomItem.getName() instanceof String);","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"jthibault03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"jthibault03"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Luo-Z-Y":2,"jthibault03":33}},{"path":"src/test/java/seedu/voyagers/TripStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Luo-Z-Y"},"content":"package seedu.voyagers;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Luo-Z-Y"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"CerealMiller"},"content":"import seedu.voyagers.utils.TripStorage;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"CerealMiller"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.File;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Luo-Z-Y"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Luo-Z-Y"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Luo-Z-Y"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Luo-Z-Y"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"CerealMiller"},"content":"public class TripStorageTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"CerealMiller"},"content":"    private static final String TEST_FILE_NAME \u003d \"temp_test_file.txt\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Luo-Z-Y"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Luo-Z-Y"},"content":"    public void testReadTripFile() {","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"CerealMiller"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Luo-Z-Y"},"content":"        ArrayList\u003cTrip\u003e trips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Luo-Z-Y"},"content":"        // Create a temporary file with sample trip data","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Luo-Z-Y"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"CerealMiller"},"content":"            FileWriter writer \u003d new FileWriter(TEST_FILE_NAME);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"CerealMiller"},"content":"            writer.write(\"main|Trip1|2024-03-15|2024-03-20|Location1|Description1|4\\n\");","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"CerealMiller"},"content":"            writer.write(\"main|Trip2|2024-03-25|2024-03-30|Location2|Description2|5\\n\");","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"Luo-Z-Y"},"content":"            writer.close();","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"Luo-Z-Y"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"Luo-Z-Y"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Luo-Z-Y"},"content":"        // Call readTripFile method","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"CerealMiller"},"content":"        TripStorage.readTripFile(trips, currentDir, TEST_FILE_NAME);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"Luo-Z-Y"},"content":"        // Assert that the trips list contains expected trips","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"Luo-Z-Y"},"content":"        Assertions.assertEquals(2, trips.size());","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Luo-Z-Y"},"content":"        Assertions.assertEquals(\"Trip1\", trips.get(0).getName());","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Luo-Z-Y"},"content":"        Assertions.assertEquals(\"Location1\", trips.get(0).getLocation());","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"Luo-Z-Y"},"content":"        Assertions.assertEquals(\"Description2\", trips.get(1).getDescription());","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Luo-Z-Y"},"content":"        // Delete the temporary file","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"CerealMiller"},"content":"        File tempFile \u003d new File(TEST_FILE_NAME);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Luo-Z-Y"},"content":"        tempFile.delete();","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"Luo-Z-Y"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Luo-Z-Y"},"content":"    public void testWriteTripFile() {","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"CerealMiller"},"content":"        String currentDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"Luo-Z-Y"},"content":"        ArrayList\u003cTrip\u003e trips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"Luo-Z-Y"},"content":"        // Populate the trips list with sample trips","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Luo-Z-Y"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"Luo-Z-Y"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"Luo-Z-Y"},"content":"            Date startDate1 \u003d dateFormat.parse(\"2024-03-15\");","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"Luo-Z-Y"},"content":"            Date endDate1 \u003d dateFormat.parse(\"2024-03-20\");","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"Luo-Z-Y"},"content":"            Date startDate2 \u003d dateFormat.parse(\"2024-03-25\");","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Luo-Z-Y"},"content":"            Date endDate2 \u003d dateFormat.parse(\"2024-03-30\");","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"CerealMiller"},"content":"            Trip trip1 \u003d new Trip(\"Trip1\", startDate1, endDate1, \"Location1\",","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"CerealMiller"},"content":"                    \"Description1\");","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"CerealMiller"},"content":"            trip1.setTripType(\"main\");","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"CerealMiller"},"content":"            Trip trip2 \u003d new Trip(\"Trip2\", startDate2, endDate2, \"Location2\",","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"CerealMiller"},"content":"                    \"Description2\");","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"CerealMiller"},"content":"            trip2.setTripType(\"main\");","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"CerealMiller"},"content":"            Trip trip1sub1 \u003d new Trip(\"Trip1\", startDate1, endDate1, \"Location1\",","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"CerealMiller"},"content":"                    \"Description1\");","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"CerealMiller"},"content":"            trip1sub1.setTripType(\"sub\");","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"Luo-Z-Y"},"content":"            trips.add(trip1);","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"Luo-Z-Y"},"content":"            trips.add(trip2);","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"CerealMiller"},"content":"            trip1.addSubTrip(trip1sub1);","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"Luo-Z-Y"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"Luo-Z-Y"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"Luo-Z-Y"},"content":"        // Call writeTripFile method","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"CerealMiller"},"content":"        TripStorage.writeTripFileMain(trips, trips.size(), currentDir, TEST_FILE_NAME);","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"Luo-Z-Y"},"content":"        // Read the content of the temporary file and assert its correctness","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"Luo-Z-Y"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"CerealMiller"},"content":"            File tempFile \u003d new File(TEST_FILE_NAME);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"Luo-Z-Y"},"content":"            Scanner scanner \u003d new Scanner(tempFile);","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"Luo-Z-Y"},"content":"            Assertions.assertTrue(scanner.hasNextLine());","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"CerealMiller"},"content":"            Assertions.assertEquals(\"main|Trip1|2024-03-15|2024-03-20|Location1|Description1|COMPLETED\",","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"CerealMiller"},"content":"                    scanner.nextLine());","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"CerealMiller"},"content":"            Assertions.assertTrue(scanner.hasNextLine());","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"CerealMiller"},"content":"            Assertions.assertEquals(\"sub|Trip1|2024-03-15|2024-03-20|Location1|Description1|COMPLETED\",","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"CerealMiller"},"content":"                    scanner.nextLine());","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"Luo-Z-Y"},"content":"            Assertions.assertTrue(scanner.hasNextLine());","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"CerealMiller"},"content":"            Assertions.assertEquals(\"main|Trip2|2024-03-25|2024-03-30|Location2|Description2|COMPLETED\",","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"CerealMiller"},"content":"                    scanner.nextLine());","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"Luo-Z-Y"},"content":"            scanner.close();","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"Luo-Z-Y"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"Luo-Z-Y"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"Luo-Z-Y"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"Luo-Z-Y"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"Luo-Z-Y"},"content":"        // Delete the temporary file","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"CerealMiller"},"content":"        File tempFile \u003d new File(TEST_FILE_NAME);","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"Luo-Z-Y"},"content":"        tempFile.delete();","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"Luo-Z-Y"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"Luo-Z-Y"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Luo-Z-Y":71,"CerealMiller":31}},{"path":"src/test/java/seedu/voyagers/TripTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"azamanis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Luo-Z-Y"},"content":"import seedu.voyagers.classes.Trip;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"azamanis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"azamanis"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"azamanis"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"azamanis"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"azamanis"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"azamanis"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"azamanis"},"content":"public class TripTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"azamanis"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"azamanis"},"content":"    public void testGetDuration() {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"azamanis"},"content":"        Trip trip \u003d new Trip(\"Test Trip\",","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 1),","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 3),","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"azamanis"},"content":"                \"Test Location\",","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"CerealMiller"},"content":"                \"Test Description\");","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"azamanis"},"content":"        assertEquals(trip.getDuration(), 2);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"azamanis"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"azamanis"},"content":"    public void testValidDates() {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"azamanis"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"azamanis"},"content":"            new Trip(\"Test Trip\",","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"azamanis"},"content":"                    new Date(2020, 2, 1),","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"azamanis"},"content":"                    new Date(2020, 1, 3),","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"azamanis"},"content":"                    \"Test Location\",","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"CerealMiller"},"content":"                    \"Test Description\");","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"azamanis"},"content":"        });","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"azamanis"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"azamanis"},"content":"            new Trip(\"Test Trip\",","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"azamanis"},"content":"                    new Date(2020, 1, 1),","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"azamanis"},"content":"                    new Date(2020, 2, 3),","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"azamanis"},"content":"                    \"Test Location\",","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"CerealMiller"},"content":"                    \"Test Description\");","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"azamanis"},"content":"        });","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"azamanis"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"azamanis"},"content":"    public void testAddSubTrip() {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"azamanis"},"content":"        Trip trip \u003d new Trip(\"Test Trip\",","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 1),","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 3),","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"azamanis"},"content":"                \"Test Location\",","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"CerealMiller"},"content":"                \"Test Description\");","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"azamanis"},"content":"        Trip subTrip \u003d new Trip(\"Sub Trip\",","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 1),","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 3),","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"azamanis"},"content":"                \"Test Location\",","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"CerealMiller"},"content":"                \"Test Description\");","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"azamanis"},"content":"        trip.addSubTrip(subTrip);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"azamanis"},"content":"        assertTrue(trip.getSubTrips().contains(subTrip));","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"azamanis"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"azamanis"},"content":"    public void testRemoveSubTrip(){","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"azamanis"},"content":"        Trip trip \u003d new Trip(\"Test Trip\",","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 1),","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 3),","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"azamanis"},"content":"                \"Test Location\",","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"CerealMiller"},"content":"                \"Test Description\");","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"azamanis"},"content":"        Trip subTrip \u003d new Trip(\"Sub Trip\",","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 1),","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 3),","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"azamanis"},"content":"                \"Test Location\",","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"CerealMiller"},"content":"                \"Test Description\");","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"azamanis"},"content":"        Trip subTrip2 \u003d new Trip(\"Sub Trip 2\",","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 1),","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"azamanis"},"content":"                new Date(2020, 1, 3),","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"azamanis"},"content":"                \"Test Location\",","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"CerealMiller"},"content":"                \"Test Description\");","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"azamanis"},"content":"        trip.addSubTrip(subTrip);","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"azamanis"},"content":"        trip.addSubTrip(subTrip2);","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"azamanis"},"content":"        trip.removeSubTrip(subTrip);","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"azamanis"},"content":"        assertFalse(trip.getSubTrips().contains(subTrip));","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"azamanis"},"content":"        // There is only one subTrip left","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"azamanis"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"azamanis"},"content":"            trip.removeSubTrip(2);","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"azamanis"},"content":"        });","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"azamanis"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"azamanis"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"azamanis"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"azamanis":80,"Luo-Z-Y":1,"CerealMiller":8}},{"path":"src/test/java/seedu/voyagers/VoyagersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"azamanis"},"content":"package seedu.voyagers;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"Luo-Z-Y"},"content":"class VoyagersTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"azamanis":1,"Luo-Z-Y":1,"-":10}}]
