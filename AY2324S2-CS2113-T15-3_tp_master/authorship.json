[{"path":".idea/misc.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Cohii2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"Cohii2"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"Cohii2"},"content":"  \u003ccomponent name\u003d\"ExternalStorageConfigurationManager\" enabled\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"Cohii2"},"content":"  \u003ccomponent name\u003d\"FrameworkDetectionExcludesConfiguration\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"Cohii2"},"content":"    \u003cfile type\u003d\"web\" url\u003d\"file://$PROJECT_DIR$\" /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"Cohii2"},"content":"  \u003c/component\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"  \u003ccomponent name\u003d\"ProjectRootManager\" version\u003d\"2\" languageLevel\u003d\"JDK_11\" default\u003d\"true\" project-jdk-name\u003d\"11\" project-jdk-type\u003d\"JavaSDK\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Cohii2"},"content":"    \u003coutput url\u003d\"file://$PROJECT_DIR$/out\" /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"Cohii2"},"content":"  \u003c/component\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"Cohii2"},"content":"\u003c/project\u003e","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"hafizuddin-a":1,"Cohii2":9}},{"path":".idea/vcs.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Cohii2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"Cohii2"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"Cohii2"},"content":"  \u003ccomponent name\u003d\"VcsDirectoryMappings\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"Cohii2"},"content":"    \u003cmapping directory\u003d\"$PROJECT_DIR$\" vcs\u003d\"Git\" /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"Cohii2"},"content":"  \u003c/component\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"Cohii2"},"content":"\u003c/project\u003e","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"Cohii2":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"Cohii2"},"content":"    // id \u0027org.openjfx.javafxplugin\u0027 version \u00270.1.0\u0027","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"mukund1403"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Cohii2"},"content":"//javafx {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Cohii2"},"content":"//    version \u003d \"21\"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Cohii2"},"content":"//    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Cohii2"},"content":"//}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Cohii2":5,"-":46,"mukund1403":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Display |     Name      | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"MonkeScripts"},"content":"--------|:-------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Hafiz      | [Github](https://github.com/hafizuddin-a) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"Cohii2"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Heng Junxiang | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"MonkeScripts"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Akshan     | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"MonkeScripts"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   John Roe    | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Don Roe    | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"MonkeScripts":4,"hafizuddin-a":1,"Cohii2":1,"-":4,"mukund1403":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"original source as well}","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"## Design ","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"### Architecture","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"### Group Storage","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"The Group Storage feature allows users to save group information to files when exiting groups or ending the program. It also enables users to load group information from files when entering groups. This feature ensures that changes made to a group are persisted across sessions and that users can resume their interactions with groups seamlessly.","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"Below is the class diagram for the Group Storage feature:","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"![Class Diagram](images/GroupStorageClassDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"The Group Storage feature:","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"- `GroupStorage` class: Responsible for saving and loading group information to and from files.","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"- `FileIO` interface: Defines the contract for file input/output operations.","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"- `FileIOImpl` class: Implements the `FileIO` interface for file input/output operations.","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"- `GroupNameChecker` class: Provides methods to check if a group file exists and to generate the file name for a group.","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"- `Group` class: Represents a group with members and expenses. It interacts with the `GroupStorage` class to save and load group information.","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"- `GroupFilePaths` class: Contains constants for file paths used by the `GroupStorage` feature.","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"The implementation of the Group Storage feature is covered in the next section.","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"## Implementation","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"MonkeScripts"},"content":"### Help menu feature","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"MonkeScripts"},"content":"#### Implementation","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"MonkeScripts"},"content":"The \"help\" feature is facilitated by the  `Help` class.","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"MonkeScripts"},"content":"It provides a static method `printHelp` to print out a guide on how to use the commands in the application.","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"MonkeScripts"},"content":"`printHelp` can be used in the event the user issues an invalid command","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"avrilgk"},"content":"### Group Creation feature","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"avrilgk"},"content":"#### Implementation","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"avrilgk"},"content":"The \"Group Creation\" feature is facilitated by the `Group` class. It provides methods to create a new group and manage","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"group membership. The implementation of this feature is as follows:","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"The Group class maintains a list of members as a `private List\u003cUser\u003e` field called `members`.","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"avrilgk"},"content":"The `createGroup(String groupName)` method is responsible for creating a new group. It performs the following steps:","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"avrilgk"},"content":"1. Checks if a group with the given `groupName` already exists using the `isGroup(String groupName)` method.","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"avrilgk"},"content":"2. If the group does not exist, creates a new `Group` object with the provided `groupName`.","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"avrilgk"},"content":"3. Prints a success message indicating that the group has been created.","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"avrilgk"},"content":"4. Adds the new `Group` object to the `groups` list.","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"avrilgk"},"content":"5. Returns the newly created `Group` object.","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"avrilgk"},"content":"6. If the group already exists, prints an error message indicating that the group already exists.","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"hafizuddin-a"},"content":"### Add Member to Group feature","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"hafizuddin-a"},"content":"#### Implementation","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"hafizuddin-a"},"content":"The \"Add Member to Group\" feature is facilitated by the `Group` class. It extends the `Group` class with methods to manage group membership and allows users to add new members to an existing group. Additionally, it implements the following operations:","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"hafizuddin-a"},"content":"- `Group#addMember(String memberName)` — Adds a new member to the group with the given `memberName`.","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"hafizuddin-a"},"content":"- `Group#isMember(String memberName)` — Checks if a user with the given `memberName` is already a member of the group.","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"hafizuddin-a"},"content":"These operations are exposed in the `GroupCommand` class as `GroupCommand#addMember(String memberName)`.","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"hafizuddin-a"},"content":"Given below is an example usage scenario and how the \"Add Member to Group\" feature behaves at each step.","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"hafizuddin-a"},"content":"Step 1. The user launches the application and enters a group named \"Project Team\" using the `group Project Team` command. The `Group` object for \"Project Team\" will be initialized with an empty `members` list.","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"hafizuddin-a"},"content":"Step 2. The user executes the `member John` command to add a new member named \"John\" to the \"Project Team\" group. The `member` command calls `GroupCommand#addMember(\"John\")`, which in turn calls `Group#addMember(\"John\")`. This operation checks if \"John\" is already a member of the group using `Group#isMember(\"John\")`. Since \"John\" is not a member, a new `User` object with the name \"John\" is created and added to the `members` list of the \"Project Team\" group.","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"hafizuddin-a"},"content":"![Sequence Diagram](images/addMember1.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"hafizuddin-a"},"content":"Step 3. The user executes the `member Emily` command to add another member named \"Emily\" to the \"Project Team\" group. Similar to step 2, the `member` command calls `GroupCommand#addMember(\"Emily\")`, which then calls `Group#addMember(\"Emily\")`. After checking that \"Emily\" is not already a member, a new `User` object with the name \"Emily\" is created and added to the `members` list of the \"Project Team\" group.","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"hafizuddin-a"},"content":"Step 4. The user tries to add \"John\" again to the \"Project Team\" group by executing the `member John` command. However, since \"John\" is already a member of the group, the `Group#isMember(\"John\")` check in `Group#addMember(\"John\")` returns `true`. As a result, an error message is displayed to the user, indicating that \"John\" is already a member of the group, and no duplicate member is added.","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"hafizuddin-a"},"content":"![Sequence Diagram](images/addMember2.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"hafizuddin-a"},"content":"The following sequence diagram illustrates the flow of the \"Add Member to Group\" feature:","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"hafizuddin-a"},"content":"![Sequence Diagram](images/addMember3.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"hafizuddin-a"},"content":"### Expenses feature","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"hafizuddin-a"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"avrilgk"},"content":"The Expenses feature is facilitated through the Expense class. It allows users to add a new Expense through creation of","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"avrilgk"},"content":"a new Expense object. Users can specify amount paid, the payee, and the members of the group involved in the","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"avrilgk"},"content":"transaction.","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"hafizuddin-a"},"content":"Additionally, it implements the following operations:","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"hafizuddin-a"},"content":"+ `Expenses#payer()` - Gives the name of the member who paid for the expense","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"hafizuddin-a"},"content":"+ `Expenses#totalAmount()` - Returns the total amount of the expense","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"hafizuddin-a"},"content":"+ `Expenses#payees()` - Returns all the members involved in the transaction","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"avrilgk"},"content":"These operations are exposed in the Expense class through the `getPayerName()`, `getTotalAmount()`, and `getPayees()`","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"avrilgk"},"content":"functions respectively.","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"Cohii2"},"content":"### Balance feature","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"Cohii2"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"Cohii2"},"content":"The Balance feature is facilitated through the Balance class.","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"Cohii2"},"content":"It allows a user to view a printed list of other users in the Group, and the amount that is owed by/to each user.","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"Cohii2"},"content":"Each `Balance` object contains a String of a user `userName`,","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"Cohii2"},"content":"and a Map `balanceList`. This Map uses String of other users\u0027 usernames as Key, and","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"Cohii2"},"content":"a Float of the amount that is owed by/to each user.","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"Cohii2"},"content":"To print a user\u0027s Balance List, perform the following steps:","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"Cohii2"},"content":"1. Create a `Balance` object with the params String `userName` and the current Group `group`.","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"Cohii2"},"content":"2. From the `members` and `expenseList` List items in `group`, the Map `balanceList` is populated.","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"Cohii2"},"content":"3. Call method `printBalance()` to print the contents of the Map `balanceList`.","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"avrilgk"},"content":"### Settle feature","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"avrilgk"},"content":"#### Implementation","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"avrilgk"},"content":"The Settle feature is facilitated through the Settle class.","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"avrilgk"},"content":"It allows a user to settle the debts between two users in a Group.","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"avrilgk"},"content":" The `Settle` class contains a `settleDebt(String userName1, String userName2)` method.","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"avrilgk"},"content":"This method takes in two Strings `userName1` and `userName2` as parameters, representing the two users to settle the","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"avrilgk"},"content":"debt between.","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"avrilgk"},"content":"The method then prints out the amount that is owed by `userName1` to `userName2`, and the amount that is owed","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"avrilgk"},"content":"by `userName2` to `userName1`.  It then prints out the total amount that is owed between the two users, and prompts the user to enter the amount to","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"avrilgk"},"content":"settle the debt.","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"avrilgk"},"content":"The method then prints out the amount that is owed by `userName1` to `userName2`, and the amount that is owed","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"avrilgk"},"content":"by `userName2` to `userName1` after the settlement.","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"hafizuddin-a"},"content":"### Group Storage feature","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"hafizuddin-a"},"content":"#### Implementation","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"hafizuddin-a"},"content":"The \"Group Storage\" feature is facilitated by the `GroupStorage` class. It extends the functionality of the `Group` class by providing methods to save and load group information to and from files. The `GroupStorage` class interacts with the `FileIO` interface for file input/output operations. Additionally, it implements the following key operations:","lastModifiedDate":"2024-04-14"},{"lineNumber":145,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":146,"author":{"gitId":"hafizuddin-a"},"content":"- `GroupStorage#saveGroupToFile(Group group)` — Saves the group information to a file when a user exits a group or ends the program.","lastModifiedDate":"2024-04-14"},{"lineNumber":147,"author":{"gitId":"hafizuddin-a"},"content":"- `GroupStorage#loadGroupFromFile(String groupName)` — Loads the group information from a file when a user enters a group.","lastModifiedDate":"2024-04-14"},{"lineNumber":148,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"hafizuddin-a"},"content":"These operations are invoked from the `Group` class when the user performs specific actions related to groups.","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"hafizuddin-a"},"content":"Given below is an example usage scenario and how the \"Group Storage\" feature behaves at each step.","lastModifiedDate":"2024-04-14"},{"lineNumber":152,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":153,"author":{"gitId":"hafizuddin-a"},"content":"Step 1. The user launches the application and tries to create a group named \"Project Team\" using the `create Project Team` command. The `Group#getOrCreateGroup(String groupName)` method is called to retrieve or create the group.","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"hafizuddin-a"},"content":"Step 2. Inside the `Group#getOrCreateGroup(String groupName)` method, it checks if the group already exists in memory. If not, it uses the `GroupNameChecker` class to check if the group file exists. If the group file doesn\u0027t exist, a new `Group` object is created, and the user is placed in the newly created group.","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"hafizuddin-a"},"content":"Step 3. The user executes various commands to add members and expenses to the \"Project Team\" group. These changes are made to the `Group` object in memory.","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"hafizuddin-a"},"content":"Step 4. The user executes the `exit Project Team` command to exit the \"Project Team\" group. This command invokes the `Group#exitGroup(String groupName)` method, which in turn calls the `GroupStorage#saveGroupToFile(Group group)` method to save the current state of the \"Project Team\" group to a file. The saving process includes writing the group name, members, and expenses to the file in a structured format.","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"hafizuddin-a"},"content":"![Sequence Diagram](images/groupStorage1.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"hafizuddin-a"},"content":"Step 5. Later, the user decides to enter the \"Project Team\" group again using the `enter Project Team` command. The `Group#enterGroup(String groupName)` method is called to enter the group.","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"hafizuddin-a"},"content":"Step 6. Inside the `Group#enterGroup(String groupName)` method, it first checks if the group exists in memory. If not, it uses the `GroupNameChecker` class to check if the group file exists. If the group file exists, it invokes the `GroupStorage#loadGroupFromFile(String groupName)` method to load the group information from the file.","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"hafizuddin-a"},"content":"![Sequence Diagram](images/groupStorage2.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"hafizuddin-a"},"content":"The `GroupStorage#loadGroupFromFile(String groupName)` method reads the group information from the file, creates a new `Group` object, and populates it with the loaded data. This includes the group name, members, and expenses. The loaded `Group` object is then returned to the `Group` class.","lastModifiedDate":"2024-04-14"},{"lineNumber":170,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"hafizuddin-a"},"content":"Step 7. The user continues to interact with the \"Project Team\" group, making changes to its members and expenses. These changes are made to the loaded `Group` object in memory.","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"hafizuddin-a"},"content":"Step 8. When the user ends the program using the `bye` command, the `GroupStorage#saveGroupToFile(Group group)` method is invoked again to save the current state of all loaded groups to their respective files. This ensures that any changes made during the session are persisted.","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":175,"author":{"gitId":"hafizuddin-a"},"content":"**Design Considerations:**","lastModifiedDate":"2024-04-14"},{"lineNumber":176,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":177,"author":{"gitId":"hafizuddin-a"},"content":"- **Alternative 1 (current choice):** Saving group information to files when exiting groups or ending the program, and loading group information when entering groups.","lastModifiedDate":"2024-04-14"},{"lineNumber":178,"author":{"gitId":"hafizuddin-a"},"content":"  - Pros: Minimizes file I/O operations and reduces the overhead of constantly saving and loading group information. ","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"hafizuddin-a"},"content":"  - Cons: Changes made to a group are not persisted until the user explicitly exits the group or ends the program.","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"hafizuddin-a"},"content":"- **Alternative 2:** Saving group information after every command that modifies the group, and loading group information whenever a group is accessed. ","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"hafizuddin-a"},"content":"  - Pros: Ensures that changes are immediately persisted and reduces the risk of data loss in case of unexpected program termination. ","lastModifiedDate":"2024-04-14"},{"lineNumber":182,"author":{"gitId":"hafizuddin-a"},"content":"  - Cons: Increases file I/O operations and may impact performance, especially for frequent group modifications.","lastModifiedDate":"2024-04-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":186,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":190,"author":{"gitId":"MonkeScripts"},"content":"Our target users are people who share expenses with friends, family, roommates, or colleagues.","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"MonkeScripts"},"content":"The application gives an accurate and simple way to represent unsettled debts between users and their friends","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                                                  | So that I can ...                                           |","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"mukund1403"},"content":"|---------|----------|----------------------------------------------------------------|-------------------------------------------------------------|","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"| v1.0    | new user | see usage instructions                                         | refer to them when I forget how to use the application      |","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"mukund1403"},"content":"| v1.0    | user     | add a new expense with description, amount, and users involved | split the expense equally                                   |","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"mukund1403"},"content":"| v1.0    | user     | create a new group                                             | split expenses with different groups                        |","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"mukund1403"},"content":"| v1.0    | user     | list all expenses within a group                               | see recent transactions                                     |","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"mukund1403"},"content":"| v1.0    | user     | check how much I owe each member in the group                  | keep track of my debts                                      |","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"-"},"content":"| v2.0    | user     | find a to-do item by name                                      | locate a to-do without having to go through the entire list |","lastModifiedDate":"2020-05-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"MonkeScripts":8,"avrilgk":50,"hafizuddin-a":104,"Cohii2":16,"-":35,"mukund1403":5}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mukund1403"},"content":"# Split-liang (An app to help you split expenses with friends in a fun way!)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":7,"mukund1403":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"Split-liang is an application that helps you split expenses with friends in a fun way! If you are tired of keeping track and calculating who owes who, Split-liang is here to help you. With Split-liang, you can create groups, add members, add expenses, and settle debts between members. Split-liang will automatically calculate the amount each member owes or is owed. You can also play slots to remove your debts!","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"## Content Page","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"2. [Features](#features)","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"    - [Viewing help: `help`](#viewing-help-help)","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"    - [Creating a group: `create`](#creating-a-group-create)","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"    - [Entering a group: `enter`](#entering-a-group-enter)","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"    - [Add members to group: `member`](#add-members-to-group-member)","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"    - [Exiting a group: `exit`](#exiting-a-group-exit)","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"    - [Show balance of user: `balance`](#show-balance-of-user-balance)","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"    - [Settle expenses: `settle`](#settle-expenses-settle)","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"    - [Trying your luck: `luck`](#trying-your-luck-luck)","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"    - [Create expenses: `expense`](#create-expenses-expense)","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"    - [Saying goodbye: `bye`](#saying-goodbye-bye)","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"1. Ensure that you have Java 11 or above installed in your computer.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"2. Download the latest version of `Split-liang` from [here](https://github.com/AY2324S2-CS2113-T15-3/tp/releases).","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"3. Copy the file to the folder you want to use as the home folder for your Split-liang.","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"4. Open a command terminal, `cd` to the folder where the jar file is located. Run the command `java -jar Split-liang.jar`. The application should start and display the welcome message.","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"### Viewing help: `help`","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"This command will display a message explaining how to use the application.","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"Format: `help`","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"Example: `help`","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"Output:","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"Welcome, here is a list of commands:","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"- `help`: Access help menu.","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"- `create \u003cname\u003e`: Create a group.","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"- `exit \u003cname\u003e`: Exit current group.","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"- `member \u003cname\u003e`: Add a member to the group.","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"avrilgk"},"content":"- `expense \u003cdescription\u003e /amount \u003camount\u003e /paid \u003cpaid_by\u003e /user \u003cuser_1\u003e /user \u003cuser_2\u003e ...`: Add an expense SPLIT","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"avrilgk"},"content":"  EQUALLY.","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"avrilgk"},"content":"- `expense \u003cdescription\u003e /unequal /amount \u003camount\u003e /paid \u003cpaid_by\u003e /user \u003cuser_1\u003e \u003camount_owed\u003e /user \u003cuser_2\u003e \u003camount owed\u003e ...`:","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"avrilgk"},"content":"  Add an expense SPLIT UNEQUALLY.","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"avrilgk"},"content":"- `list`: List all expenses in the group.","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"avrilgk"},"content":"- `balance \u003cuser_name\u003e`: Show user\u0027s balance.","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"avrilgk"},"content":"- `settle \u003cpayer_name\u003e /user \u003cpayee_name\u003e`: Settle the amount between two users.","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"avrilgk"},"content":"- `luck`: Luck is in the air tonight.","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"avrilgk"},"content":"### Creating a group: `create`","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"avrilgk"},"content":"Creates a new group with the specified group name.","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"avrilgk"},"content":"Format: `create /group GROUP_NAME`","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"avrilgk"},"content":"- `/group` is a keyword to indicate the start of the group name.","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"avrilgk"},"content":"- `GROUP_NAME` is the name of the group.","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"avrilgk"},"content":"Example: `create /group Friends`","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"avrilgk"},"content":"This command will create a new group named \u0027Friends\u0027.","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"avrilgk"},"content":"### Entering a group: `enter`","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"avrilgk"},"content":"Enters an existing group with the specified group name.","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"avrilgk"},"content":"Format: `enter /group GROUP_NAME`","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"avrilgk"},"content":"- `/group` is a keyword to indicate the start of the group name.","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"avrilgk"},"content":"- `GROUP_NAME` is the name of the group.","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"avrilgk"},"content":"Example: `enter /group Friends`","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"avrilgk"},"content":"This command will enter the group named \u0027Friends\u0027.","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"hafizuddin-a"},"content":"### Add members to group: `member`","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"hafizuddin-a"},"content":"Adds a new member to the group.","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"hafizuddin-a"},"content":"Format: `member USER_NAME`","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":92,"author":{"gitId":"hafizuddin-a"},"content":"- `USER_NAME` is the name of the user to be added to the group.","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"hafizuddin-a"},"content":"- `USER_NAME` must be unique. It cannot be the same as an existing member\u0027s name.","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"hafizuddin-a"},"content":"- `USER_NAME` can contain whitespaces but cannot be empty.","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"hafizuddin-a"},"content":"- `USER_NAME` is not case-sensitive.","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"hafizuddin-a"},"content":"- `USER_NAME` can contain special characters.","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"hafizuddin-a"},"content":"Example: `member Alice`","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"hafizuddin-a"},"content":"This command will add a new member named \u0027Alice\u0027 to the group.","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"hafizuddin-a"},"content":"Output: `Alice has been added to group.`","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"avrilgk"},"content":"### Exiting a group: `exit`","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"avrilgk"},"content":"Exits the current group.","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"avrilgk"},"content":"Format: `exit /group GROUP_NAME`","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"avrilgk"},"content":"- `/group` is a keyword to indicate the start of the group name.","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"avrilgk"},"content":"- `GROUP_NAME` is the name of the group.","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"avrilgk"},"content":"Example: `exit /group Friends`","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"avrilgk"},"content":"This command will exit the group named \u0027Friends\u0027.","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"Cohii2"},"content":"### Show balance of user: `balance`","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"Cohii2"},"content":"Shows list of members the user owes money to.","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"Cohii2"},"content":"Format: `balance USER_NAME`","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"Cohii2"},"content":"Example: `balance Shaoliang`","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"Cohii2"},"content":"This command will display the balance of the user named Shaoliang.","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"avrilgk"},"content":"### Settle expenses: `settle`","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"avrilgk"},"content":"Settles the expenses between two users in the group.","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"avrilgk"},"content":"Format: `settle USER_NAME1 /user USER_NAME2`","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"avrilgk"},"content":"- `USER_NAME1` is the name of the first user.","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"avrilgk"},"content":"- `USER_NAME2` is the name of the second user.","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"avrilgk"},"content":"- `/user` is a keyword to indicate the start of the second user\u0027s name.","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"avrilgk"},"content":"Example: `settle Alice /user Bob`","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"avrilgk"},"content":"This command will settle the expenses between Alice and Bob, showing what Alice owes Bob.","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"MonkeScripts"},"content":"### Trying your luck: `luck`","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"MonkeScripts"},"content":"Play slots to remove debts","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"MonkeScripts"},"content":"Format: `luck` (Coming soon feature)","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"MonkeScripts"},"content":"- Enters the slot machine","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"MonkeScripts"},"content":"    - `/reroll` to reroll the slots","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"MonkeScripts"},"content":"    - `/exit` to exit the slot machine","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"MonkeScripts"},"content":"    - Example: `/reroll`","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"MonkeScripts"},"content":"This command enable users play slots to remove their debts","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"mukund1403"},"content":"### Create expenses: `expense`","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"mukund1403"},"content":"Create a new expense for a given group.","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"mukund1403"},"content":"#### Create expense split equally","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":160,"author":{"gitId":"mukund1403"},"content":"Format:`expense DESCRIPITON /amount AMOUNT /paid PAYER_USER_NAME /user USER_NAME /user USER_NAME`","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"mukund1403"},"content":"`PAYER_USER_NAME` is the username of the person who paid for the transaction.","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"mukund1403"},"content":"`USER_NAME` is the username of the payee.","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"mukund1403"},"content":"- The amount will be split equally between all members including the payer.","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"mukund1403"},"content":"- The expense will be added to a list of expenses.","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"mukund1403"},"content":"#### Create expense split unequally","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":170,"author":{"gitId":"mukund1403"},"content":"Format:`expense DESCRIPITON /unequal /amount TOTAL_AMOUNT","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"mukund1403"},"content":"/paid PAYER_USER_NAME /user USER_NAME AMOUNT_OWED /user USER_NAME AMOUNT_OWED`","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"mukund1403"},"content":"`PAYER_USER_NAME` is the username of the person who paid for the transaction.","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"mukund1403"},"content":"`USER_NAME` is the username of the payee.","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"mukund1403"},"content":"`AMOUNT_OWED` is the amount owed by the","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"mukund1403"},"content":"- The amount will be split unequally between all members including the payer based on the `AMOUNT_OWED`.","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"mukund1403"},"content":"- The expense will be added to a list of expenses.","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"hafizuddin-a"},"content":"### Saving the data","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"avrilgk"},"content":"Split-liang automatically saves the data in each group to `GROUP_NAME.txt` in the `data` folder after the application","lastModifiedDate":"2024-04-11"},{"lineNumber":183,"author":{"gitId":"avrilgk"},"content":"exits. There is no need to save manually.","lastModifiedDate":"2024-04-11"},{"lineNumber":184,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"hafizuddin-a"},"content":"The data is loaded automatically when the application starts.","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"hafizuddin-a"},"content":"### Saying goodbye: `bye`","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"hafizuddin-a"},"content":"This command exits the application.","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"avrilgk"},"content":"## FAQ","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":193,"author":{"gitId":"hafizuddin-a"},"content":"1. **Q: How do I create a new group?**","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"hafizuddin-a"},"content":"    - A: To create a new group, use the `create group` command followed by the group name.","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"hafizuddin-a"},"content":"2. **Q: How do I transfer my data to another device?**","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"hafizuddin-a"},"content":"    - A: You can copy the `data` folder to the new device to transfer your data.","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":201,"author":{"gitId":"hafizuddin-a"},"content":"Action | Format, Examples","lastModifiedDate":"2024-04-13"},{"lineNumber":202,"author":{"gitId":"hafizuddin-a"},"content":"--------|------------------","lastModifiedDate":"2024-04-13"},{"lineNumber":203,"author":{"gitId":"hafizuddin-a"},"content":"Help | `help`","lastModifiedDate":"2024-04-13"},{"lineNumber":204,"author":{"gitId":"hafizuddin-a"},"content":"Create group | `create GROUP_NAME` \u003cbr\u003e e.g. `create Friends`","lastModifiedDate":"2024-04-13"},{"lineNumber":205,"author":{"gitId":"hafizuddin-a"},"content":"Enter group | `enter GROUP_NAME` \u003cbr\u003e e.g. `enter Friends`","lastModifiedDate":"2024-04-13"},{"lineNumber":206,"author":{"gitId":"hafizuddin-a"},"content":"Add member | `member USER_NAME` \u003cbr\u003e e.g. `member Alice`","lastModifiedDate":"2024-04-13"},{"lineNumber":207,"author":{"gitId":"hafizuddin-a"},"content":"Exit group | `exit GROUP_NAME` \u003cbr\u003e e.g. `exit Friends`","lastModifiedDate":"2024-04-13"},{"lineNumber":208,"author":{"gitId":"hafizuddin-a"},"content":"Settle expenses | `settle USER_NAME1 /user USER_NAME2` \u003cbr\u003e e.g. `settle Alice /user Bob`","lastModifiedDate":"2024-04-13"},{"lineNumber":209,"author":{"gitId":"hafizuddin-a"},"content":"Exit application | `bye`","lastModifiedDate":"2024-04-13"},{"lineNumber":210,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"MonkeScripts":12,"avrilgk":73,"hafizuddin-a":62,"Cohii2":8,"-":30,"mukund1403":25}},{"path":"docs/diagrams/GroupStorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"hide circle","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"hide empty members","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"class GroupStorage {","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"  + isLoading: boolean {static}","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"  - fileIO: FileIO","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"  + saveGroupToFile(group: Group): void","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"  + loadGroupFromFile(groupName: String): Group","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"  + deleteGroupFile(groupName: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"interface FileIO\u003c\u003cinterface\u003e\u003e {","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"  + getFileReader(filePath: String): BufferedReader","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"  + getFileWriter(filePath: String): BufferedWriter","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"  + deleteFile(filePath: String): boolean","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"class FileIOImpl implements FileIO {","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"class Group {","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"  - groupName: String","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"  - expenseList: List\u003cExpense\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"  + addMember(memberName: String): User","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"  + addExpense(expense: Expense): void","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"  + getGroupName(): String","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"  + getMembers(): List\u003cUser\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"  + getExpenseList(): List\u003cExpense\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"class GroupNameChecker {","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"  + doesGroupNameExist(groupNameToCheck: String): boolean","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"GroupStorage --\u003e FileIO","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"GroupStorage --\u003e Group","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"Group --\u003e GroupNameChecker","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"Group --\u003e GroupStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"GroupNameChecker --\u003e GroupFilePath","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"hafizuddin-a":42}},{"path":"docs/diagrams/addMember1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"actor User","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"participant \":GroupCommand\" as GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"participant \":Group\" as Group","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"participant \":User\" as JohnUser","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"User -\u003e GroupCommand: member John","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"activate GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"GroupCommand -\u003e Group: addMember(\"John\")","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"Group -\u003e Group: isMember(\"John\")","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"Group -\u003e JohnUser: new User(\"John\")","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"activate JohnUser","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"JohnUser --\u003e Group: johnUser","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"deactivate JohnUser","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"Group -\u003e Group: members.add(johnUser)","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"Group --\u003e GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"GroupCommand --\u003e User","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"deactivate GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"hafizuddin-a":29}},{"path":"docs/diagrams/addMember2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"actor User","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"participant \":GroupCommand\" as GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"participant \":Group\" as Group","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"User -\u003e GroupCommand: member John","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"activate GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"GroupCommand -\u003e Group: addMember(\"John\")","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"Group -\u003e Group: isMember(\"John\")","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"Group --\u003e Group: true","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"Group --\u003e GroupCommand: \"John is already a member\"","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"GroupCommand --\u003e User: \"John is already a member\"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"deactivate GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"hafizuddin-a":22}},{"path":"docs/diagrams/addMember3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"actor User","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"participant \":GroupCommand\" as GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"participant \":Group\" as Group","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"participant \":User\" as NewUser","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"User -\u003e GroupCommand: member USER_NAME","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"activate GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"GroupCommand -\u003e Group: addMember(memberName)","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"Group -\u003e Group: isValidMemberName(memberName)","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"alt is valid member name","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"    Group -\u003e Group: isMember(memberName)","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"    activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"    alt is not a member","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"        Group --\u003e Group: false","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"        Group -\u003e NewUser: new User(memberName)","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"        activate NewUser","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"        NewUser --\u003e Group: newUser","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate NewUser","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"        Group -\u003e Group: members.add(newUser)","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"        activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"        Group --\u003e GroupCommand: success message","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"    else is already a member","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"        Group --\u003e Group: true","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"        Group --\u003e GroupCommand: failure message","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"    end","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"else is invalid member name","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"    Group --\u003e Group: false","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"    deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"    Group --\u003e GroupCommand: failure message","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"    deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"GroupCommand --\u003e User: command result","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"deactivate GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"hafizuddin-a":50}},{"path":"docs/diagrams/groupStorage1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"actor User","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"participant \":GroupCommand\" as GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"participant \":Group\" as Group","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"participant \":User\" as NewUser","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"User -\u003e GroupCommand: member USER_NAME","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"activate GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"GroupCommand -\u003e Group: addMember(memberName)","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"Group -\u003e Group: isValidMemberName(memberName)","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"alt is valid member name","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"    Group -\u003e Group: isMember(memberName)","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"    activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"    alt is not a member","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"        Group --\u003e Group: false","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"        Group -\u003e NewUser: new User(memberName)","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"        activate NewUser","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"        NewUser --\u003e Group: newUser","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate NewUser","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"        Group -\u003e Group: members.add(newUser)","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"        activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"        Group --\u003e GroupCommand: success message","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"    else is already a member","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"        Group --\u003e Group: true","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"        Group --\u003e GroupCommand: failure message","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"    end","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"else is invalid member name","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"    Group --\u003e Group: false","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"    deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"    Group --\u003e GroupCommand: failure message","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"    deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"GroupCommand --\u003e User: command result","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"deactivate GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"hafizuddin-a":50}},{"path":"docs/diagrams/groupStorage2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"actor User","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"participant \":GroupCommand\" as GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"participant \":Group\" as Group","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"participant \":GroupNameChecker\" as GroupNameChecker","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"participant \":GroupStorage\" as GroupStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"participant \":FileIO\" as FileIO","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"User -\u003e GroupCommand: enter Project Team","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"activate GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"GroupCommand -\u003e Group: enterGroup(\"Project Team\")","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"Group -\u003e Group: check if group exists in memory","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"activate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"alt group does not exist in memory","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"    Group --\u003e Group: false","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"    deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"    Group -\u003e GroupNameChecker: doesGroupNameExist(\"Project Team\")","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"    activate GroupNameChecker","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"    alt group file exists","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"        GroupNameChecker --\u003e Group: true","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate GroupNameChecker","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"        Group -\u003e GroupStorage: loadGroupFromFile(\"Project Team\")","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"        activate GroupStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"        GroupStorage -\u003e FileIO: getFileReader(filePath)","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"        activate FileIO","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"        FileIO --\u003e GroupStorage: reader","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate FileIO","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"        GroupStorage -\u003e GroupStorage: loadGroupName(reader)","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"        activate GroupStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate GroupStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"        GroupStorage -\u003e GroupStorage: loadMembers(reader, group)","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"        activate GroupStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate GroupStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"        GroupStorage -\u003e GroupStorage: loadExpenses(reader, group)","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"        activate GroupStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate GroupStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"        GroupStorage -\u003e FileIO: reader.close()","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"        activate FileIO","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate FileIO","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"hafizuddin-a"},"content":"        GroupStorage --\u003e Group: loadedGroup","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate GroupStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"hafizuddin-a"},"content":"    else group file does not exist","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"hafizuddin-a"},"content":"        GroupNameChecker --\u003e Group: false","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate GroupNameChecker","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"hafizuddin-a"},"content":"        Group --\u003e GroupCommand: group does not exist","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"hafizuddin-a"},"content":"        deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"hafizuddin-a"},"content":"    end","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"hafizuddin-a"},"content":"else group exists in memory","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"hafizuddin-a"},"content":"    Group --\u003e Group: true","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"hafizuddin-a"},"content":"    deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"hafizuddin-a"},"content":"    Group --\u003e GroupCommand: group found in memory","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"hafizuddin-a"},"content":"    deactivate Group","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"hafizuddin-a"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"hafizuddin-a"},"content":"GroupCommand --\u003e User","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"hafizuddin-a"},"content":"deactivate GroupCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"hafizuddin-a"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"hafizuddin-a":70}},{"path":"docs/team/avrilgk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"# Avril Guok - Project Portfolio Page","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"## Overview","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"Split-liang is a CLI application that helps you split expenses with friends in a fun way! If you can type fast,","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"Split-liang can help you manage your expenses faster than traditional GUI apps","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"* **Code Contributions**:","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"  [RepoSense Link]","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003davrilgk\u0026tabRepo\u003dAY2324S2-CS2113-T15-3/tp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"    1. Implemented features relating to group creation","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"        * Group creation feature","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"            * What it does: allows the user to create a new group with a specified group name","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"        * Group entering feature","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"            * What it does: allows the user to enter an existing group with a specified group name","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"        * Group exit feature","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"            * What it does: allows the user to exit the current group","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"        * Group deletion feature","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"            * What it does: allows the user to delete an existing group with a specified group name","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"    2. Implemented settle function","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"        * Settle feature","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"        * What it does: allows the user to settle the debts within the group","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"            * This feature can be used for both scenarios where the bill is split equally or unequally. Entering the","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"              settle","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"              function between Person A /user Person B will settle expenses between the two, showing what A owes B.","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"* **Contributions to UG**","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"    * Added documentation relating to the group function (create, enter, exit, delete group)","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"    * Added documentation relating to the settle function","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"* **Contributions to DG**","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"avrilgk"},"content":"    * Added the implementation for the group creation feature.","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"    * Added the implementation for the settle feature.","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"avrilgk"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"    * Added a short introduction to Split-Liang in UG","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"    * Added FAQs in UG","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"avrilgk"},"content":"* **Review/mentoring contributions**","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"avrilgk"},"content":"    * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"avrilgk"},"content":"      https://github.com/AY2324S2-CS2113-T15-3/tp/pull/64","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"avrilgk"},"content":"      https://github.com/AY2324S2-CS2113-T15-3/tp/pull/152","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"avrilgk"},"content":"      https://github.com/AY2324S2-CS2113-T15-3/tp/pull/56","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"avrilgk"},"content":"      https://github.com/AY2324S2-CS2113-T15-3/tp/pull/6","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"avrilgk"},"content":"* **Contributions beyond the project team**","lastModifiedDate":"2024-04-11"},{"lineNumber":63,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":64,"author":{"gitId":"avrilgk"},"content":"  https://github.com/avrilgk/ped/issues","lastModifiedDate":"2024-04-11"},{"lineNumber":65,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"avrilgk":67}},{"path":"docs/team/hafizuddin-a.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"# Hafizuddin - Project Portfolio Page","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"### Project: Split-liang","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"Split-liang is a CLI application that helps you split expenses with friends in a fun way! If you can type fast, Split-liang can help you manage your expenses faster than traditional GUI apps.","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"* **New Feature**: Added the ability to add members to groups.","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"    * What it does: allows the user to add names of members to groups so that expenses can be split among them.","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"* **New Feature**: Added database storage for groups and members.","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"    * What it does: allows the user to save the groups and members to a file so that they can be accessed later.","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dhafizuddin-a\u0026tabRepo\u003dAY2324S2-CS2113-T15-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"* **Documentation**:","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"    * User Guide:","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"        * Added documentation for the addition of members to groups [\\#87](https://github.com/AY2324S2-CS2113-T15-3/tp/pull/87)","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"        * Added documentation for the storage of groups and members [\\#87](https://github.com/AY2324S2-CS2113-T15-3/tp/pull/87)","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"    * Developer Guide:","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"        * Added implementation for the addition of members to groups [\\#87](https://github.com/AY2324S2-CS2113-T15-3/tp/pull/87)","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"        * Added sequence diagram for the addition of members to groups [\\#87](https://github.com/AY2324S2-CS2113-T15-3/tp/pull/87)","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"* **Community**:","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#55](https://github.com/AY2324S2-CS2113-T15-3/tp/pull/55)","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"hafizuddin-a":29}},{"path":"src/main/java/seedu/duke/Balance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cohii2"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Cohii2"},"content":"import seedu.duke.exceptions.ExpensesException;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Cohii2"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Cohii2"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Cohii2"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Cohii2"},"content":"//@@author Cohii2","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Cohii2"},"content":"public class Balance {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Cohii2"},"content":"    protected String userName;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Cohii2"},"content":"    protected Map\u003cString, Float\u003e balanceList;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Cohii2"},"content":"    public Balance(String userName, Group group) {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Cohii2"},"content":"        this(userName, group.getExpenseList(), group.getMembers());","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Cohii2"},"content":"     * Populates balanceList with list of Users and list of Expenses in Group.","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Cohii2"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Cohii2"},"content":"     * @param userName The name of User to print the balance of.","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Cohii2"},"content":"     * @param expenses The list of Expenses in Group.","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Cohii2"},"content":"     * @param users The list of Users in Group","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Cohii2"},"content":"    public Balance(String userName, List\u003cExpense\u003e expenses, List\u003cUser\u003e users) {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Cohii2"},"content":"        this.userName \u003d userName;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Cohii2"},"content":"        this.balanceList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Cohii2"},"content":"        // Populate balanceList with other Users from Group","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Cohii2"},"content":"        for (User user : users) {","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Cohii2"},"content":"            if (!user.getName().equals(userName)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Cohii2"},"content":"                balanceList.put(user.getName(), 0f);","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Cohii2"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"Cohii2"},"content":"        // Add Expenses to balanceList","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Cohii2"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Cohii2"},"content":"            addExpense(expense);","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Cohii2"},"content":"    public Map\u003cString, Float\u003e getBalanceList() {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Cohii2"},"content":"        return balanceList;","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Cohii2"},"content":"     * Adds an Expense to balanceList.","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Cohii2"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Cohii2"},"content":"     * @param expense The Expense to be added.","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Cohii2"},"content":"    private void addExpense(Expense expense) {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Cohii2"},"content":"        String payerName \u003d expense.getPayerName();","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Cohii2"},"content":"        List\u003cPair\u003cString, Money\u003e\u003e payees \u003d expense.getPayees();","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Cohii2"},"content":"        if(payerName.equals(userName)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Cohii2"},"content":"            for(Pair\u003cString, Money\u003e payee : payees) {","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Cohii2"},"content":"                String payeeName \u003d payee.getKey();","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Cohii2"},"content":"                Float payeeAmount \u003d payee.getValue().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"Cohii2"},"content":"                if (payeeName.equals(userName)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Cohii2"},"content":"                    continue;","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Cohii2"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"Cohii2"},"content":"                Float currentOwed \u003d balanceList.get(payeeName);","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"Cohii2"},"content":"                Float newOwed \u003d currentOwed + payeeAmount;","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"Cohii2"},"content":"                balanceList.put(payeeName, newOwed);","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"Cohii2"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"Cohii2"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Cohii2"},"content":"            for(Pair\u003cString, Money\u003e payee : payees) {","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Cohii2"},"content":"                String payeeName \u003d payee.getKey();","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"Cohii2"},"content":"                Float payeeAmount \u003d payee.getValue().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"Cohii2"},"content":"                if (!payeeName.equals(userName)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"Cohii2"},"content":"                    continue;","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"Cohii2"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"Cohii2"},"content":"                Float currentOwed \u003d balanceList.get(payerName);","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"Cohii2"},"content":"                Float newOwed \u003d currentOwed - payeeAmount;","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"Cohii2"},"content":"                balanceList.put(payerName, newOwed);","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"Cohii2"},"content":"                break;","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"Cohii2"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Cohii2"},"content":"    public void printBalance() {","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Cohii2"},"content":"        StringBuilder printOutput \u003d new StringBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"Cohii2"},"content":"        printOutput.append(String.format(\"User %s\u0027s Balance List:\", userName));","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Cohii2"},"content":"        for (Map.Entry\u003cString, Float\u003e entry : balanceList.entrySet()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Cohii2"},"content":"            if (entry.getValue() \u003e 0f) {","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"Cohii2"},"content":"                printOutput.append(String.format(","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"Cohii2"},"content":"                        \"\\n  %s owes %s : %.2f\", entry.getKey(), userName, entry.getValue()","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"Cohii2"},"content":"                ));","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"Cohii2"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"Cohii2"},"content":"            else {","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"Cohii2"},"content":"                printOutput.append(String.format(","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"Cohii2"},"content":"                        \"\\n  %s owes %s : %.2f\", userName, entry.getKey(), -entry.getValue()","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"Cohii2"},"content":"                ));","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"Cohii2"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"Cohii2"},"content":"        printOutput.append(\"\\nEnd of Balance List\");","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"Cohii2"},"content":"        UserInterface.printMessage(printOutput.toString(), MessageType.SUCCESS);","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"Cohii2"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Cohii2":109}},{"path":"src/main/java/seedu/duke/CurrencyConversions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MonkeScripts"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"MonkeScripts"},"content":"//@@author MonkeScripts","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"MonkeScripts"},"content":"//all rates are relative to 1 SGD","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"MonkeScripts"},"content":"public enum CurrencyConversions {","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"MonkeScripts"},"content":"    USD(\"USD\", 0.74F),","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"MonkeScripts"},"content":"    RMB(\"RMB\", 5.35F),","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"MonkeScripts"},"content":"    EUR(\"EUR\", 0.687F),","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"MonkeScripts"},"content":"    JPY(\"JPY\", 112.12F),","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"MonkeScripts"},"content":"    AUD(\"AUD\", 1.12F),","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"MonkeScripts"},"content":"    MYR(\"MYR\", 3.50F),","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"MonkeScripts"},"content":"    SGD(\"SGD\", 1.00F),","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"MonkeScripts"},"content":"    ;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"MonkeScripts"},"content":"    private final String name;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"MonkeScripts"},"content":"    private final float rate;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"MonkeScripts"},"content":"    CurrencyConversions(String name, float rate) {","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"MonkeScripts"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"MonkeScripts"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"MonkeScripts"},"content":"    String getName() {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"MonkeScripts"},"content":"        return this.name;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"MonkeScripts"},"content":"    float getRate() {","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"MonkeScripts"},"content":"        return this.rate;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"MonkeScripts"},"content":"    float getInverseRate() {","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"MonkeScripts"},"content":"        return (1.00f / this.rate);","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"MonkeScripts"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"MonkeScripts"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"MonkeScripts"},"content":"        return this.name;","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"MonkeScripts"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"MonkeScripts":39}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.exceptions.ExpensesException;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"MonkeScripts"},"content":"        String logo \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"MonkeScripts"},"content":"                \".------..------..------..------..------..------..------..------..------..------.\\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"MonkeScripts"},"content":"                        \"|S.--. ||P.--. ||L.--. ||I.--. ||T.--. ||L.--. ||I.--. ||A.--. ||N.--. ||G.--. |\\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"MonkeScripts"},"content":"                        \"| :/\\\\: || :/\\\\: || :/\\\\: || (\\\\/) || :/\\\\: || :/\\\\: || (\\\\/) || (\\\\/) || :(): || :/\\\\: |\\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"MonkeScripts"},"content":"                        \"| :\\\\/: || (__) || (__) || :\\\\/: || (__) || (__) || :\\\\/: || :\\\\/: || ()() || :\\\\/: |\\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"MonkeScripts"},"content":"                        \"| \u0027--\u0027S|| \u0027--\u0027P|| \u0027--\u0027L|| \u0027--\u0027I|| \u0027--\u0027T|| \u0027--\u0027L|| \u0027--\u0027I|| \u0027--\u0027A|| \u0027--\u0027N|| \u0027--\u0027G|\\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"MonkeScripts"},"content":"                        \"`------\u0027`------\u0027`------\u0027`------\u0027`------\u0027`------\u0027`------\u0027`------\u0027`------\u0027`------\u0027\\n\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"        System.out.println(\"Start splitting your expenses now!\");","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"mukund1403"},"content":"        Help.printHelp();","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Cohii2"},"content":"        while(in.hasNextLine()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Cohii2"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Cohii2"},"content":"            Parser parser \u003d new Parser(userInput);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Cohii2"},"content":"            try {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Cohii2"},"content":"                parser.handleUserInput();","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Cohii2"},"content":"            } catch (Parser.EndProgramException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"mukund1403"},"content":"                break;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"mukund1403"},"content":"            } catch (ExpensesException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"mukund1403"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"mukund1403"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"Cohii2"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"MonkeScripts":8,"hafizuddin-a":2,"Cohii2":9,"-":14,"mukund1403":8}},{"path":"src/main/java/seedu/duke/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mukund1403"},"content":"//@@author mukund1403","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"mukund1403"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.exceptions.ExpensesException;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.storage.GroupStorage;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"mukund1403"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"mukund1403"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"mukund1403"},"content":" * A class to add a new expense","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"mukund1403"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"mukund1403"},"content":"public class Expense {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"mukund1403"},"content":"    private String payerName;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"mukund1403"},"content":"    private Money totalAmount;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"mukund1403"},"content":"    private ArrayList\u003cPair\u003cString, Money\u003e\u003e payees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"mukund1403"},"content":"    private String description;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"mukund1403"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"mukund1403"},"content":"     * Constructor to create new Unequal Expense","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"mukund1403"},"content":"     * @param isUnequal : Boolean showing whether expense is split unequally or not","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"mukund1403"},"content":"     * @param payerName   : The name of the user who paid for the Expense","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"mukund1403"},"content":"     * @param description : Description of the expense","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"mukund1403"},"content":"     * @param totalAmount : The total amount before being divided","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"mukund1403"},"content":"     * @param payees      : ArrayList of pairs containing names of people who are involved in the transaction and","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"mukund1403"},"content":"     *                    the amount they owe","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"mukund1403"},"content":"     *                    (Index 0 is the payer and will also be added to the payees but as last index)","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"mukund1403"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"mukund1403"},"content":"    public Expense(boolean isUnequal, String payerName, String description,","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"mukund1403"},"content":"                   Money totalAmount, ArrayList\u003cPair\u003cString,Money\u003e\u003e payees) throws ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"mukund1403"},"content":"        this.payees \u003d payees;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"mukund1403"},"content":"        this.payerName \u003d payerName;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"mukund1403"},"content":"        this.totalAmount \u003d totalAmount;","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"mukund1403"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"mukund1403"},"content":"        printSuccessMessage();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"mukund1403"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"mukund1403"},"content":"     * Constructor to create new Equal Expense","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"mukund1403"},"content":"     * @param payerName : The name of the user who paid for the Expense","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"mukund1403"},"content":"     * @param description : Description of the expense","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"mukund1403"},"content":"     * @param totalAmount : The total amount before being divided","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"mukund1403"},"content":"     * @param payees : ArrayList of pairs containing names of people who are involved in the transaction and","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"mukund1403"},"content":"     *                the amount they owe (Index 0 is the payer and will also be added to the payees but as last index)","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"mukund1403"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"mukund1403"},"content":"    public Expense(String payerName, String description, Money totalAmount, ArrayList\u003cPair\u003cString, Money\u003e\u003e payees){","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"mukund1403"},"content":"        this.payees \u003d payees;","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"mukund1403"},"content":"        this.payerName \u003d payerName;","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"mukund1403"},"content":"        this.totalAmount \u003d totalAmount;","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"mukund1403"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"mukund1403"},"content":"        printSuccessMessage();","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Cohii2"},"content":"    //@@author Cohii2","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Cohii2"},"content":"    public String getPayerName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Cohii2"},"content":"        return payerName;","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"Cohii2"},"content":"     * @return : float showing the total amount before division","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"Cohii2"},"content":"    public float getTotalAmount() {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"Cohii2"},"content":"        return totalAmount.getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"Cohii2"},"content":"    public ArrayList\u003cPair\u003cString, Money\u003e\u003e getPayees() {","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Cohii2"},"content":"        return payees;","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"mukund1403"},"content":"    //@@author mukund1403","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"mukund1403"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"mukund1403"},"content":"        return description;","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"mukund1403"},"content":"    public CurrencyConversions getCurrency() {","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"mukund1403"},"content":"        return totalAmount.getCurrency();","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"mukund1403"},"content":"    public void clearPayeeValue(String payeeName) {","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"mukund1403"},"content":"        // replace the value of the payee with 0","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"mukund1403"},"content":"        for (int i \u003d 0; i \u003c payees.size(); i++) {","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"mukund1403"},"content":"            if (payees.get(i).getKey().equals(payeeName)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"mukund1403"},"content":"                Money amount \u003d new Money(0, payees.get(i).getValue().getCurrency());","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"mukund1403"},"content":"                payees.set(i, new Pair\u003c\u003e(payeeName, amount));","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"mukund1403"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"mukund1403"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"mukund1403"},"content":"     * Converts the Expense to string form containing all the expense details","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"mukund1403"},"content":"     * @return : A string containing expense details in a tabular format","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"mukund1403"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"mukund1403"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"mukund1403"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"mukund1403"},"content":"        StringBuilder expensesDetails \u003d new StringBuilder();","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"mukund1403"},"content":"        expensesDetails.append(\"description: \").append(description).append(\"\\n\\tamount: \")","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"mukund1403"},"content":"                .append(totalAmount.getCurrency())","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"mukund1403"},"content":"                .append(String.format(\" %.2f\", totalAmount.getAmount())).append(\"\\n\\tpaid by: \")","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"mukund1403"},"content":"                .append(payerName).append(\"\\n\\tThe split is:\\n\");","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"mukund1403"},"content":"        for (Pair\u003cString, Money\u003e payee : payees) {","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"mukund1403"},"content":"            expensesDetails.append(\"\\t\\t\").append(payee.getKey()).append(\" : \")","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"mukund1403"},"content":"                    .append(payee.getValue().getCurrency())","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"mukund1403"},"content":"                    .append(String.format(\" %.2f\", payee.getValue().getAmount())).append(\"\\n\");","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"mukund1403"},"content":"        return expensesDetails.toString();","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"mukund1403"},"content":"    void printSuccessMessage() {","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"mukund1403"},"content":"        if (!(GroupStorage.isLoading) \u0026\u0026 !(this instanceof Settle)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"mukund1403"},"content":"            System.out.println(\"Added new expense with description \" + description + \" and amount \"","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"mukund1403"},"content":"                    + String.format(totalAmount.getCurrency() + \" %.2f\",totalAmount.getAmount()) +","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"mukund1403"},"content":"                    \" paid by \" + payerName + \". The split is:\");","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"mukund1403"},"content":"            for (Pair\u003cString, Money\u003e payee : payees) {","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"mukund1403"},"content":"                System.out.println(payee.getKey() + \" : \" + String.format(payee.getValue().getCurrency() +","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"mukund1403"},"content":"                        \" %.2f\", payee.getValue().getAmount()));","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"mukund1403"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"mukund1403"},"content":"    public void clear() {","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"mukund1403"},"content":"        float amount \u003d totalAmount.getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"mukund1403"},"content":"        CurrencyConversions currency \u003d totalAmount.getCurrency();","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"mukund1403"},"content":"        totalAmount \u003d new Money(amount, currency);","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"mukund1403"},"content":"        payees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"mukund1403"},"content":"    public String getPayer() {","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"mukund1403"},"content":"        return payerName;","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"mukund1403"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Cohii2":16,"mukund1403":122}},{"path":"src/main/java/seedu/duke/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"//@@author avrilgk","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"import seedu.duke.exceptions.GroupLoadException;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"import seedu.duke.exceptions.GroupSaveException;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"import seedu.duke.storage.GroupNameChecker;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"import seedu.duke.storage.GroupStorage;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"import seedu.duke.storage.FileIOImpl;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"public class Group {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"    static Map\u003cString, Group\u003e groups \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"    static Optional\u003cString\u003e currentGroupName \u003d Optional.empty();","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"    private static final GroupStorage groupStorage \u003d new GroupStorage(new FileIOImpl());","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"    private static GroupNameChecker groupNameChecker \u003d new GroupNameChecker();","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"    private static List\u003cUser\u003e members \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"    private final String groupName;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"    private final List\u003cExpense\u003e expenseList;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"    public Group(String groupName) {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"        this.members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"        this.expenseList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"     * Retrieves an existing group by its name or creates a new one if it does not exist.","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"     * It ensures that a user cannot create or join a new group without exiting their current group.","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"     * @param groupName The name of the group to get or create.","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"avrilgk"},"content":"     * @return The existing or newly created group.","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"     * @throws IllegalStateException If trying to create or join a new group while already in another group.","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"avrilgk"},"content":"    //@@ author avrilgk","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"    public static Optional\u003cGroup\u003e getOrCreateGroup(String groupName) {","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"        // Check if group name is empty","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"        if (groupName \u003d\u003d null || groupName.trim().isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Group name cannot be empty. Please try again.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"avrilgk"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"avrilgk"},"content":"        if (currentGroupName.isPresent()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"You are currently in \" + currentGroupName.get() +","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"avrilgk"},"content":"                    \". Exit current group before creating another one.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"avrilgk"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"avrilgk"},"content":"        Optional\u003cGroup\u003e group \u003d Optional.ofNullable(groups.get(groupName));","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"avrilgk"},"content":"        // Check if user is accessing a group they are already in","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"avrilgk"},"content":"        if (group.isPresent() \u0026\u0026 getCurrentGroup().isPresent() \u0026\u0026 getCurrentGroup().get().equals(group.get())) {","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"You are already in \" + groupName);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"avrilgk"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"avrilgk"},"content":"        // Create a new group if it doesn\u0027t exist","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"avrilgk"},"content":"        if (group.isEmpty() \u0026\u0026 !groupNameChecker.doesGroupNameExist(groupName)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"avrilgk"},"content":"            Group newGroup \u003d new Group(groupName);","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"avrilgk"},"content":"            groups.put(groupName, newGroup);","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"avrilgk"},"content":"            System.out.println(groupName + \" created.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"avrilgk"},"content":"            currentGroupName \u003d Optional.of(groupName);","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"avrilgk"},"content":"            group \u003d Optional.of(newGroup);","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"You are now in \" + groupName);","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"avrilgk"},"content":"        } else if (groupNameChecker.doesGroupNameExist(groupName)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Group already exists. Use \u0027enter \" + groupName + \"\u0027 to enter the group.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"avrilgk"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"avrilgk"},"content":"        assert group.isPresent() : \"Group should be created and present\";","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"avrilgk"},"content":"        assert currentGroupName.isPresent() : \"Current group name should be set\";","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"avrilgk"},"content":"        assert currentGroupName.get().equals(groupName) : \"Current group name should match \" +","lastModifiedDate":"2024-04-11"},{"lineNumber":84,"author":{"gitId":"avrilgk"},"content":"                \"the created or retrieved group\";","lastModifiedDate":"2024-04-11"},{"lineNumber":85,"author":{"gitId":"avrilgk"},"content":"        assert groups.containsKey(groupName) : \"Groups map should contain the new or retrieved group\";","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"avrilgk"},"content":"        return group;","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"avrilgk"},"content":"     * Enter existing group.","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"avrilgk"},"content":"     * @param groupName The name of the group to enter.","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"avrilgk"},"content":"     * @return The existing group.","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"avrilgk"},"content":"    public static Optional\u003cGroup\u003e enterGroup(String groupName) {","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"avrilgk"},"content":"        if (groupName \u003d\u003d null || groupName.trim().isEmpty()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Group name cannot be empty. Please try again.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"avrilgk"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"avrilgk"},"content":"        if (currentGroupName.isPresent()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"You are currently in \" + currentGroupName.get() +","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"avrilgk"},"content":"                    \". Exit current group before entering another one.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"avrilgk"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"avrilgk"},"content":"        Optional\u003cGroup\u003e group \u003d Optional.ofNullable(groups.get(groupName));","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"avrilgk"},"content":"        if (group.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"hafizuddin-a"},"content":"            //@@author hafizuddin-a","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"hafizuddin-a"},"content":"            GroupNameChecker groupNameChecker \u003d new GroupNameChecker();","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"hafizuddin-a"},"content":"            if (!groupNameChecker.doesGroupNameExist(groupName)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"hafizuddin-a"},"content":"                System.out.println(\"Group does not exist.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"hafizuddin-a"},"content":"                return Optional.empty();","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"hafizuddin-a"},"content":"            try {","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"hafizuddin-a"},"content":"                // If the group doesn\u0027t exist in memory, try loading it from file","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"hafizuddin-a"},"content":"                Optional\u003cGroup\u003e loadedGroup \u003d Optional.ofNullable(groupStorage.loadGroupFromFile(groupName));","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"hafizuddin-a"},"content":"                if (loadedGroup.isPresent()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"hafizuddin-a"},"content":"                    groups.put(groupName, loadedGroup.get());","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"hafizuddin-a"},"content":"                    group \u003d loadedGroup;","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"hafizuddin-a"},"content":"                } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"hafizuddin-a"},"content":"                    //@@ author avrilgk","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"hafizuddin-a"},"content":"                    System.out.println(\"Unable to load group from file.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"hafizuddin-a"},"content":"                    return Optional.empty();","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"hafizuddin-a"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"hafizuddin-a"},"content":"                // @@author hafizuddin-a","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"hafizuddin-a"},"content":"            } catch (GroupLoadException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"hafizuddin-a"},"content":"                String errorMessage \u003d e.getMessage();","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"hafizuddin-a"},"content":"                if (errorMessage \u003d\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"hafizuddin-a"},"content":"                    errorMessage \u003d \"Failed to load group from file.\";","lastModifiedDate":"2024-04-13"},{"lineNumber":134,"author":{"gitId":"hafizuddin-a"},"content":"                }","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"hafizuddin-a"},"content":"                System.out.println(errorMessage);","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"hafizuddin-a"},"content":"                return Optional.empty();","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"avrilgk"},"content":"        //@@author avrilgk","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"avrilgk"},"content":"        currentGroupName \u003d Optional.of(groupName);","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"avrilgk"},"content":"        System.out.println(\"You are now in \" + groupName);","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"avrilgk"},"content":"        return group;","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"avrilgk"},"content":"     * Exits the current group.","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"avrilgk"},"content":"     * If the user is not in any group, it displays a message asking the user to try again.","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"avrilgk"},"content":"    public static void exitGroup(String groupName) {","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"avrilgk"},"content":"        if (currentGroupName.isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"avrilgk"},"content":"            if (!currentGroupName.get().equals(groupName)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\"Invalid group name. Please enter the correct group name.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"avrilgk"},"content":"                return;","lastModifiedDate":"2024-04-13"},{"lineNumber":155,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":156,"author":{"gitId":"hafizuddin-a"},"content":"            //@@author hafizuddin-a","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"hafizuddin-a"},"content":"            try {","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"hafizuddin-a"},"content":"                groupStorage.saveGroupToFile(groups.get(currentGroupName.get()));","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"hafizuddin-a"},"content":"                System.out.println(\"Group data saved successfully.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"hafizuddin-a"},"content":"            } catch (GroupSaveException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"hafizuddin-a"},"content":"                System.out.println(\"Error saving group: \" + e.getMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"avrilgk"},"content":"            //@@author avrilgk","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"You have exited \" + currentGroupName.get() + \".\");","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"avrilgk"},"content":"            currentGroupName \u003d Optional.empty();","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"avrilgk"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"You are not currently in a group.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"avrilgk"},"content":"     * Retrieves the current group.","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"avrilgk"},"content":"     * @return The current group, or null if the user is not in any group.","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"avrilgk"},"content":"    public static Optional\u003cGroup\u003e getCurrentGroup() {","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"avrilgk"},"content":"        return currentGroupName.map(groups::get);","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"avrilgk"},"content":"     * Checks if the user is currently in a group.","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"avrilgk"},"content":"     * @return true if the user is in a group, false otherwise.","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"avrilgk"},"content":"    public static boolean isInGroup() {","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"avrilgk"},"content":"        return currentGroupName.isPresent();","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":189,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":190,"author":{"gitId":"avrilgk"},"content":"     * Checks if a user with the given name is a member of the group.","lastModifiedDate":"2024-03-24"},{"lineNumber":191,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":192,"author":{"gitId":"avrilgk"},"content":"     * @param memberName The name of the member to check.","lastModifiedDate":"2024-03-24"},{"lineNumber":193,"author":{"gitId":"avrilgk"},"content":"     * @return true if the user is a member of the group, false otherwise.","lastModifiedDate":"2024-03-24"},{"lineNumber":194,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":195,"author":{"gitId":"avrilgk"},"content":"    public static boolean isMember(String memberName) {","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"avrilgk"},"content":"        for (User member : members) {","lastModifiedDate":"2024-03-24"},{"lineNumber":197,"author":{"gitId":"avrilgk"},"content":"            if (member.getName().equalsIgnoreCase(memberName)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":198,"author":{"gitId":"avrilgk"},"content":"                return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":199,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":200,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":201,"author":{"gitId":"avrilgk"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":202,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":203,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":204,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":205,"author":{"gitId":"avrilgk"},"content":"     * Adds a new member to the group.","lastModifiedDate":"2024-03-24"},{"lineNumber":206,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":207,"author":{"gitId":"avrilgk"},"content":"     * @param memberName The name of the member to add.","lastModifiedDate":"2024-03-24"},{"lineNumber":208,"author":{"gitId":"avrilgk"},"content":"     * @return The newly added user, or null if the user is already a member of the group.","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":210,"author":{"gitId":"avrilgk"},"content":"    public User addMember(String memberName) {","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"avrilgk"},"content":"        if (memberName \u003d\u003d null || memberName.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":212,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Please provide a valid member name.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":213,"author":{"gitId":"avrilgk"},"content":"            return null;","lastModifiedDate":"2024-03-30"},{"lineNumber":214,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":215,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":216,"author":{"gitId":"avrilgk"},"content":"        if (isMember(memberName)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":217,"author":{"gitId":"avrilgk"},"content":"            System.out.println(memberName + \" is already a member of \" + groupName + \".\");","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"avrilgk"},"content":"            return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":220,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"avrilgk"},"content":"        User newMember \u003d new User(memberName);","lastModifiedDate":"2024-03-24"},{"lineNumber":222,"author":{"gitId":"avrilgk"},"content":"        members.add(newMember);","lastModifiedDate":"2024-03-24"},{"lineNumber":223,"author":{"gitId":"avrilgk"},"content":"        if (!GroupStorage.isLoading) {","lastModifiedDate":"2024-04-12"},{"lineNumber":224,"author":{"gitId":"avrilgk"},"content":"            System.out.println(memberName + \" has been added to \" + groupName + \".\");","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":226,"author":{"gitId":"avrilgk"},"content":"        return newMember;","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":228,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":229,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"avrilgk"},"content":"     * Adds a new expense to the group.","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"avrilgk"},"content":"     * @param expense The Expense object to add.","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"avrilgk"},"content":"    public void addExpense(Expense expense) {","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"avrilgk"},"content":"        expenseList.add(expense);","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"avrilgk"},"content":"    public void deleteExpense(int expenseIndex){","lastModifiedDate":"2024-04-14"},{"lineNumber":239,"author":{"gitId":"avrilgk"},"content":"        expenseList.remove(expenseIndex);","lastModifiedDate":"2024-04-14"},{"lineNumber":240,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":241,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":242,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":243,"author":{"gitId":"avrilgk"},"content":"     * Retrieves the name of the group.","lastModifiedDate":"2024-03-24"},{"lineNumber":244,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":245,"author":{"gitId":"avrilgk"},"content":"     * @return The name of the group.","lastModifiedDate":"2024-03-24"},{"lineNumber":246,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":247,"author":{"gitId":"avrilgk"},"content":"    public String getGroupName() {","lastModifiedDate":"2024-03-24"},{"lineNumber":248,"author":{"gitId":"avrilgk"},"content":"        return groupName;","lastModifiedDate":"2024-03-24"},{"lineNumber":249,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":250,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":251,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":252,"author":{"gitId":"avrilgk"},"content":"     * Retrieves the list of members in the group.","lastModifiedDate":"2024-03-24"},{"lineNumber":253,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":254,"author":{"gitId":"avrilgk"},"content":"     * @return The list of members in the group.","lastModifiedDate":"2024-03-24"},{"lineNumber":255,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":256,"author":{"gitId":"avrilgk"},"content":"    public List\u003cUser\u003e getMembers() {","lastModifiedDate":"2024-03-24"},{"lineNumber":257,"author":{"gitId":"avrilgk"},"content":"        return new ArrayList\u003c\u003e(members);","lastModifiedDate":"2024-03-24"},{"lineNumber":258,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":259,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"avrilgk"},"content":"     * Retrieves the list of expenses in the group.","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":263,"author":{"gitId":"avrilgk"},"content":"     * @return The list of expenses in the group.","lastModifiedDate":"2024-03-28"},{"lineNumber":264,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":265,"author":{"gitId":"avrilgk"},"content":"    public List\u003cExpense\u003e getExpenseList() {","lastModifiedDate":"2024-03-28"},{"lineNumber":266,"author":{"gitId":"avrilgk"},"content":"        return new ArrayList\u003c\u003e(expenseList);","lastModifiedDate":"2024-03-28"},{"lineNumber":267,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":268,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":269,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":270,"author":{"gitId":"avrilgk"},"content":"     * Settles the outstanding amount between two users.","lastModifiedDate":"2024-04-14"},{"lineNumber":271,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":272,"author":{"gitId":"avrilgk"},"content":"     * @param payerName The name of the user who will pay the outstanding amount.","lastModifiedDate":"2024-04-14"},{"lineNumber":273,"author":{"gitId":"avrilgk"},"content":"     * @param payeeName The name of the user who will receive the outstanding amount.","lastModifiedDate":"2024-04-14"},{"lineNumber":274,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":275,"author":{"gitId":"avrilgk"},"content":"    public void settle(String payerName, String payeeName) {","lastModifiedDate":"2024-03-31"},{"lineNumber":276,"author":{"gitId":"avrilgk"},"content":"        User payer \u003d findUser(payerName);","lastModifiedDate":"2024-03-31"},{"lineNumber":277,"author":{"gitId":"avrilgk"},"content":"        User payee \u003d findUser(payeeName);","lastModifiedDate":"2024-03-31"},{"lineNumber":278,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":279,"author":{"gitId":"avrilgk"},"content":"        if (payer \u003d\u003d null || payee \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":280,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"User not found.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":281,"author":{"gitId":"avrilgk"},"content":"            return;","lastModifiedDate":"2024-03-31"},{"lineNumber":282,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":283,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":284,"author":{"gitId":"avrilgk"},"content":"        double amount \u003d calculateOutstandingAmount(payee, payer);","lastModifiedDate":"2024-03-31"},{"lineNumber":285,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":286,"author":{"gitId":"avrilgk"},"content":"        if (amount \u003e 0) {","lastModifiedDate":"2024-03-31"},{"lineNumber":287,"author":{"gitId":"avrilgk"},"content":"            System.out.println(payerName + \" should pay \" + payeeName + \" \" + String.format(\"%.2f\", amount));","lastModifiedDate":"2024-03-31"},{"lineNumber":288,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":289,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":290,"author":{"gitId":"avrilgk"},"content":"        updateBalancesAfterSettlement(payerName, payeeName);","lastModifiedDate":"2024-04-14"},{"lineNumber":291,"author":{"gitId":"avrilgk"},"content":"        System.out.println(payerName + \" has settled the full amount with \" + payeeName);","lastModifiedDate":"2024-04-14"},{"lineNumber":292,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":293,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":294,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":295,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":296,"author":{"gitId":"avrilgk"},"content":"     * Updates the balances of the users after a settlement.","lastModifiedDate":"2024-04-14"},{"lineNumber":297,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":298,"author":{"gitId":"avrilgk"},"content":"     * @param payerName The name of the user who will pay the outstanding amount.","lastModifiedDate":"2024-04-14"},{"lineNumber":299,"author":{"gitId":"avrilgk"},"content":"     * @param payeeName The name of the user who will receive the outstanding amount.","lastModifiedDate":"2024-04-14"},{"lineNumber":300,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":301,"author":{"gitId":"avrilgk"},"content":"    private void updateBalancesAfterSettlement(String payerName, String payeeName) {","lastModifiedDate":"2024-04-14"},{"lineNumber":302,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":303,"author":{"gitId":"avrilgk"},"content":"        ArrayList\u003cExpense\u003e payeeExpense \u003d getPayerExpense(payeeName);","lastModifiedDate":"2024-04-14"},{"lineNumber":304,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":305,"author":{"gitId":"avrilgk"},"content":"        if (payeeExpense.size() \u003d\u003d 0) {","lastModifiedDate":"2024-04-14"},{"lineNumber":306,"author":{"gitId":"avrilgk"},"content":"            return;","lastModifiedDate":"2024-04-14"},{"lineNumber":307,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":308,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":309,"author":{"gitId":"avrilgk"},"content":"        ArrayList\u003cExpense\u003e payerExpense \u003d getPayerExpense(payerName);","lastModifiedDate":"2024-04-14"},{"lineNumber":310,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":311,"author":{"gitId":"avrilgk"},"content":"        float balance \u003d calculateBalance(payerName, payeeName);","lastModifiedDate":"2024-04-14"},{"lineNumber":312,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":313,"author":{"gitId":"avrilgk"},"content":"        if (balance \u003c 0) {","lastModifiedDate":"2024-04-14"},{"lineNumber":314,"author":{"gitId":"avrilgk"},"content":"            return;","lastModifiedDate":"2024-04-14"},{"lineNumber":315,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":316,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":317,"author":{"gitId":"avrilgk"},"content":"        for (Expense expense : payeeExpense) {","lastModifiedDate":"2024-04-14"},{"lineNumber":318,"author":{"gitId":"avrilgk"},"content":"            expense.clear();","lastModifiedDate":"2024-04-14"},{"lineNumber":319,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":320,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":321,"author":{"gitId":"avrilgk"},"content":"        if (!payerExpense.isEmpty()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":322,"author":{"gitId":"avrilgk"},"content":"            for (Expense expense : payerExpense) {","lastModifiedDate":"2024-04-14"},{"lineNumber":323,"author":{"gitId":"avrilgk"},"content":"                expense.clearPayeeValue(payeeName);","lastModifiedDate":"2024-04-14"},{"lineNumber":324,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":325,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":326,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":327,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":328,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":329,"author":{"gitId":"avrilgk"},"content":"     * Calculates the balance between two users.","lastModifiedDate":"2024-04-14"},{"lineNumber":330,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":331,"author":{"gitId":"avrilgk"},"content":"     * @param payerName The name of the user who will pay the outstanding amount.","lastModifiedDate":"2024-04-14"},{"lineNumber":332,"author":{"gitId":"avrilgk"},"content":"     * @param payeeName The name of the user who will receive the outstanding amount.","lastModifiedDate":"2024-04-14"},{"lineNumber":333,"author":{"gitId":"avrilgk"},"content":"     * @return The balance between the two users.","lastModifiedDate":"2024-04-14"},{"lineNumber":334,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":335,"author":{"gitId":"avrilgk"},"content":"    private float calculateBalance(String payerName, String payeeName) {","lastModifiedDate":"2024-04-14"},{"lineNumber":336,"author":{"gitId":"avrilgk"},"content":"        ArrayList\u003cExpense\u003e payeeExpense \u003d getPayerExpense(payeeName);","lastModifiedDate":"2024-04-14"},{"lineNumber":337,"author":{"gitId":"avrilgk"},"content":"        ArrayList\u003cExpense\u003e payerExpense \u003d getPayerExpense(payerName);","lastModifiedDate":"2024-04-14"},{"lineNumber":338,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":339,"author":{"gitId":"avrilgk"},"content":"        float balance \u003d 0;","lastModifiedDate":"2024-04-14"},{"lineNumber":340,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":341,"author":{"gitId":"avrilgk"},"content":"        for (Expense expense : payeeExpense) {","lastModifiedDate":"2024-04-14"},{"lineNumber":342,"author":{"gitId":"avrilgk"},"content":"            for (Pair\u003cString, Money\u003e payee : expense.getPayees()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":343,"author":{"gitId":"avrilgk"},"content":"                if (payee.getKey().equals(payerName)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":344,"author":{"gitId":"avrilgk"},"content":"                    balance +\u003d payee.getValue().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":345,"author":{"gitId":"avrilgk"},"content":"                }","lastModifiedDate":"2024-04-14"},{"lineNumber":346,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":347,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":348,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":349,"author":{"gitId":"avrilgk"},"content":"        for (Expense expense : payerExpense) {","lastModifiedDate":"2024-04-14"},{"lineNumber":350,"author":{"gitId":"avrilgk"},"content":"            for (Pair\u003cString, Money\u003e payee : expense.getPayees()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":351,"author":{"gitId":"avrilgk"},"content":"                if (payee.getKey().equals(payeeName)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":352,"author":{"gitId":"avrilgk"},"content":"                    balance -\u003d payee.getValue().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":353,"author":{"gitId":"avrilgk"},"content":"                }","lastModifiedDate":"2024-04-14"},{"lineNumber":354,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":355,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":356,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":357,"author":{"gitId":"avrilgk"},"content":"        return balance;","lastModifiedDate":"2024-04-14"},{"lineNumber":358,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":359,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":360,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":361,"author":{"gitId":"avrilgk"},"content":"     * Retrieves the expenses paid by a user.","lastModifiedDate":"2024-04-14"},{"lineNumber":362,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":363,"author":{"gitId":"avrilgk"},"content":"     * @param payerName The name of the user to retrieve expenses for.","lastModifiedDate":"2024-04-14"},{"lineNumber":364,"author":{"gitId":"avrilgk"},"content":"     * @return The list of expenses paid by the user.","lastModifiedDate":"2024-04-14"},{"lineNumber":365,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":366,"author":{"gitId":"avrilgk"},"content":"    public ArrayList\u003cExpense\u003e getPayerExpense(String payerName) {","lastModifiedDate":"2024-04-14"},{"lineNumber":367,"author":{"gitId":"avrilgk"},"content":"        ArrayList\u003cExpense\u003e payerExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":368,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":369,"author":{"gitId":"avrilgk"},"content":"        for (Expense expense : expenseList) {","lastModifiedDate":"2024-04-14"},{"lineNumber":370,"author":{"gitId":"avrilgk"},"content":"            if (expense.getPayerName().equals(payerName)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":371,"author":{"gitId":"avrilgk"},"content":"                payerExpenses.add(expense);","lastModifiedDate":"2024-04-14"},{"lineNumber":372,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":373,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":374,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":375,"author":{"gitId":"avrilgk"},"content":"        return payerExpenses;","lastModifiedDate":"2024-04-14"},{"lineNumber":376,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":377,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":378,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":379,"author":{"gitId":"avrilgk"},"content":"     * Finds a user by their name.","lastModifiedDate":"2024-04-03"},{"lineNumber":380,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":381,"author":{"gitId":"avrilgk"},"content":"     * @param userName The name of the user to find.","lastModifiedDate":"2024-04-03"},{"lineNumber":382,"author":{"gitId":"avrilgk"},"content":"     * @return The user with the given name, or null if the user is not found.","lastModifiedDate":"2024-04-03"},{"lineNumber":383,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":384,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":385,"author":{"gitId":"avrilgk"},"content":"    private User findUser(String userName) {","lastModifiedDate":"2024-03-31"},{"lineNumber":386,"author":{"gitId":"avrilgk"},"content":"        for (User user : members) {","lastModifiedDate":"2024-03-31"},{"lineNumber":387,"author":{"gitId":"avrilgk"},"content":"            if (user.getName().equals(userName)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":388,"author":{"gitId":"avrilgk"},"content":"                return user;","lastModifiedDate":"2024-03-31"},{"lineNumber":389,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":390,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":391,"author":{"gitId":"avrilgk"},"content":"        return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":392,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":393,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":394,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":395,"author":{"gitId":"avrilgk"},"content":"     * Calculates the outstanding amount between two users.","lastModifiedDate":"2024-04-03"},{"lineNumber":396,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":397,"author":{"gitId":"avrilgk"},"content":"     * @param payer The user who paid the expense.","lastModifiedDate":"2024-04-03"},{"lineNumber":398,"author":{"gitId":"avrilgk"},"content":"     * @param payee The user who owes money for the expense.","lastModifiedDate":"2024-04-03"},{"lineNumber":399,"author":{"gitId":"avrilgk"},"content":"     * @return The outstanding amount between the two users.","lastModifiedDate":"2024-04-03"},{"lineNumber":400,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":401,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":402,"author":{"gitId":"avrilgk"},"content":"    private double calculateOutstandingAmount(User payer, User payee) {","lastModifiedDate":"2024-03-31"},{"lineNumber":403,"author":{"gitId":"avrilgk"},"content":"        double totalAmount \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":404,"author":{"gitId":"avrilgk"},"content":"        for (Expense expense : expenseList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":405,"author":{"gitId":"avrilgk"},"content":"            if (!isRelevantExpense(expense, payer, payee)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":406,"author":{"gitId":"avrilgk"},"content":"                continue;","lastModifiedDate":"2024-04-03"},{"lineNumber":407,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":408,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":409,"author":{"gitId":"avrilgk"},"content":"            // Process the relevant expense","lastModifiedDate":"2024-04-03"},{"lineNumber":410,"author":{"gitId":"avrilgk"},"content":"            for (Pair\u003cString, Money\u003e userExpense : expense.getPayees()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":411,"author":{"gitId":"avrilgk"},"content":"                totalAmount +\u003d calculateAdjustedAmount(expense, payer, payee, userExpense);","lastModifiedDate":"2024-04-03"},{"lineNumber":412,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":413,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":414,"author":{"gitId":"avrilgk"},"content":"        return totalAmount;","lastModifiedDate":"2024-04-03"},{"lineNumber":415,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":416,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":417,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":418,"author":{"gitId":"avrilgk"},"content":"     * Checks if an expense is relevant to the payer and payee.","lastModifiedDate":"2024-04-03"},{"lineNumber":419,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":420,"author":{"gitId":"avrilgk"},"content":"     * @param expense The expense to check.","lastModifiedDate":"2024-04-03"},{"lineNumber":421,"author":{"gitId":"avrilgk"},"content":"     * @param payer   The user who paid the expense.","lastModifiedDate":"2024-04-03"},{"lineNumber":422,"author":{"gitId":"avrilgk"},"content":"     * @param payee   The user who owes money for the expense.","lastModifiedDate":"2024-04-03"},{"lineNumber":423,"author":{"gitId":"avrilgk"},"content":"     * @return true if the expense is relevant to the payer and payee, false otherwise.","lastModifiedDate":"2024-04-03"},{"lineNumber":424,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":425,"author":{"gitId":"avrilgk"},"content":"    private boolean isRelevantExpense(Expense expense, User payer, User payee) {","lastModifiedDate":"2024-04-03"},{"lineNumber":426,"author":{"gitId":"avrilgk"},"content":"        String payerName \u003d payer.getName();","lastModifiedDate":"2024-04-03"},{"lineNumber":427,"author":{"gitId":"avrilgk"},"content":"        String payeeName \u003d payee.getName();","lastModifiedDate":"2024-04-03"},{"lineNumber":428,"author":{"gitId":"avrilgk"},"content":"        String expensePayer \u003d expense.getPayer();","lastModifiedDate":"2024-04-03"},{"lineNumber":429,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":430,"author":{"gitId":"avrilgk"},"content":"        return expensePayer.equals(payerName) || expensePayer.equals(payeeName);","lastModifiedDate":"2024-04-03"},{"lineNumber":431,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":432,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":433,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":434,"author":{"gitId":"avrilgk"},"content":"     * Calculates the adjusted amount for a user in an expense.","lastModifiedDate":"2024-04-03"},{"lineNumber":435,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":436,"author":{"gitId":"avrilgk"},"content":"     * @param expense     The expense to calculate the adjusted amount for.","lastModifiedDate":"2024-04-03"},{"lineNumber":437,"author":{"gitId":"avrilgk"},"content":"     * @param payer       The user who paid the expense.","lastModifiedDate":"2024-04-03"},{"lineNumber":438,"author":{"gitId":"avrilgk"},"content":"     * @param payee       The user who owes money for the expense.","lastModifiedDate":"2024-04-03"},{"lineNumber":439,"author":{"gitId":"avrilgk"},"content":"     * @param userExpense The user and the amount they owe for the expense.","lastModifiedDate":"2024-04-03"},{"lineNumber":440,"author":{"gitId":"avrilgk"},"content":"     * @return The adjusted amount for the user in the expense.","lastModifiedDate":"2024-04-03"},{"lineNumber":441,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":442,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":443,"author":{"gitId":"avrilgk"},"content":"    private double calculateAdjustedAmount(Expense expense, User payer, User payee, Pair\u003cString, Money\u003e userExpense) {","lastModifiedDate":"2024-04-14"},{"lineNumber":444,"author":{"gitId":"avrilgk"},"content":"        String payerName \u003d payer.getName();","lastModifiedDate":"2024-04-03"},{"lineNumber":445,"author":{"gitId":"avrilgk"},"content":"        String payeeName \u003d payee.getName();","lastModifiedDate":"2024-04-03"},{"lineNumber":446,"author":{"gitId":"avrilgk"},"content":"        String expensePayer \u003d expense.getPayer();","lastModifiedDate":"2024-04-03"},{"lineNumber":447,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":448,"author":{"gitId":"avrilgk"},"content":"        if (userExpense.getKey().equals(payeeName) \u0026\u0026 expensePayer.equals(payerName)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":449,"author":{"gitId":"avrilgk"},"content":"            return userExpense.getValue().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":450,"author":{"gitId":"avrilgk"},"content":"        } else if (userExpense.getKey().equals(payerName) \u0026\u0026 expensePayer.equals(payeeName)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":451,"author":{"gitId":"avrilgk"},"content":"            return -userExpense.getValue().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":452,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":453,"author":{"gitId":"avrilgk"},"content":"        return 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":454,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":455,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"avrilgk":420,"hafizuddin-a":35}},{"path":"src/main/java/seedu/duke/GroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"//@@author hafizuddin-a","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.exceptions.GroupDeleteException;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.storage.FileIO;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.storage.FileIOImpl;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.storage.GroupNameChecker;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.storage.GroupStorage;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":" * Represents a command handler for group-related operations.","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":" * Provides static methods to create groups, add members to groups, and exit groups.","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"public class GroupCommand {","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"     * Creates a new group or retrieves an existing group with the specified name.","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"     * @param groupName the name of the group to create or retrieve","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"    public static void createGroup(String groupName) {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"            Group.getOrCreateGroup(groupName);","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (IllegalStateException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"    //@@author avrilgk","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"     * Deletes the current group.","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"     * If the user is not currently in a group, prints a message indicating so.","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"     * @param groupName the name of the group to delete","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"    public static void deleteGroup(String groupName) {","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"        try {","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"avrilgk"},"content":"            FileIO fileIO \u003d new FileIOImpl();","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"            GroupStorage groupStorage \u003d new GroupStorage(fileIO);","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"avrilgk"},"content":"            GroupNameChecker groupNameChecker \u003d new GroupNameChecker();","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"            if (groupNameChecker.doesGroupNameExist(groupName)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"avrilgk"},"content":"                groupStorage.deleteGroupFile(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"                Group.groups.remove(groupName);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\"The group \" + groupName + \" has been deleted.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\"The group \" + groupName + \" does not exist.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"avrilgk"},"content":"        } catch (GroupDeleteException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"avrilgk"},"content":"            System.out.println(\"Failed to delete the group: \" + e.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"avrilgk"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"    //@@author hafizuddin-a","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"hafizuddin-a"},"content":"     * Adds a member with the specified name to the current group.","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"hafizuddin-a"},"content":"     * If the user is not currently in a group, prints a message asking them to create or join a group first.","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"hafizuddin-a"},"content":"     * @param memberName the name of the member to add","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"hafizuddin-a"},"content":"    public static void addMember(String memberName) {","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"hafizuddin-a"},"content":"        Optional\u003cGroup\u003e currentGroup \u003d Group.getCurrentGroup();","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"hafizuddin-a"},"content":"        if (currentGroup.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"hafizuddin-a"},"content":"            System.out.println(\"Please create or join a group first.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"hafizuddin-a"},"content":"            return;","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"hafizuddin-a"},"content":"        currentGroup.get().addMember(memberName);","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"hafizuddin-a"},"content":"     * Enters an existing group with the specified name.","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"hafizuddin-a"},"content":"     * @param groupName the name of the group to enter","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"hafizuddin-a"},"content":"    public static void enterGroup(String groupName) {","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"hafizuddin-a"},"content":"        Group.enterGroup(groupName);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"hafizuddin-a"},"content":"     * Exits the current group.","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"hafizuddin-a"},"content":"     * If the user is not currently in a group, prints a message indicating so.","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"hafizuddin-a"},"content":"    public static void exitGroup(String groupName) {","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"hafizuddin-a"},"content":"        Group.exitGroup(groupName);","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"avrilgk":24,"hafizuddin-a":66}},{"path":"src/main/java/seedu/duke/Help.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MonkeScripts"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"MonkeScripts"},"content":"public class Help {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"MonkeScripts"},"content":"    private static final String prompt \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"mukund1403"},"content":"            \"Welcome, here is a list of commands:\\n\" +","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"MonkeScripts"},"content":"                    \"help: Access help menu.\\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"                    \"create \u003cname\u003e: Create a group.\\n\" +","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"                    \"exit \u003cname\u003e: Exit current group.\\n\" +","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"                    \"member \u003cname\u003e : Add a member to the group.\\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"mukund1403"},"content":"                    \"expense \u003cdescription\u003e /amount \u003camount\u003e /paid \u003cpaid_by\u003e /user \u003cuser_1\u003e /user \u003cuser_2\u003e ...: \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"mukund1403"},"content":"                    \"Add an expense SPLIT EQUALLY.\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"mukund1403"},"content":"                    \"expense \u003cdescription\u003e /unequal /amount \u003camount\u003e /paid \u003cpaid_by\u003e \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"mukund1403"},"content":"                    \"/user \u003cuser_1\u003e \u003camount_owed\u003e /user \u003cuser_2\u003e \u003camount owed\u003e ...: Add an expense SPLIT UNEQUALLY.\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"MonkeScripts"},"content":"                    \"list: List all expenses in the group.\\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"MonkeScripts"},"content":"                    \"balance \u003cuser_name\u003e: Show user\u0027s balance.\\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"                    \"settle \u003cpayer_name\u003e /user \u003cpayee_name\u003e: Settle the amount between two users.\\n\" +","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"MonkeScripts"},"content":"                    \"luck : luck is in the air tonight\";","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"MonkeScripts"},"content":"    static void printHelp() {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"MonkeScripts"},"content":"        System.out.println(prompt);","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"MonkeScripts"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"MonkeScripts":13,"avrilgk":3,"hafizuddin-a":1,"mukund1403":5}},{"path":"src/main/java/seedu/duke/Luck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MonkeScripts"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"MonkeScripts"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"MonkeScripts"},"content":"public class Luck {","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"MonkeScripts"},"content":"    private static final String icon \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"MonkeScripts"},"content":"            \"                   .\u003d*+::.                          \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"MonkeScripts"},"content":"            \"                   \u003d*\u003d-:::.                         \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"MonkeScripts"},"content":"            \"             .:\u003d+**#***####*+\u003d-:.                   \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"MonkeScripts"},"content":"            \"          :+#%%%%###%########%%%%*\u003d:                \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"MonkeScripts"},"content":"            \"       .\u003d#%%%####################%%%#\u003d.             \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"MonkeScripts"},"content":"            \"      +#%%%####%%%###%%%###%%%%#*###%%#\u003d            \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"MonkeScripts"},"content":"            \"    :##%%########%%###%%###%%#########%%#:          \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"MonkeScripts"},"content":"            \"   .##%#*#%%%%#######*##*#######%%%##*#%%#:         \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"MonkeScripts"},"content":"            \"   *%%%##%%###%%%############%%%%%%%%##%%%#.        \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"MonkeScripts"},"content":"            \"  .%#*****+*****++*++*****+**++***********%\u003d        \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"MonkeScripts"},"content":"            \"  :%*-::.-\u003d-:::-\u003d\u003d:\u003d\u003d-:::-\u003d:-\u003d\u003d\u003d---\u003d\u003d-.::+%+        \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"MonkeScripts"},"content":"            \"  :%*\u003d:.+@@@%%@@@*\u003d@@@#%%@@%-@@@@%@@@@-.-+#+ .\u003d-..  \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"MonkeScripts"},"content":"            \"  :%*\u003d.\u003d%+*\u003d+***@-%%+*\u003d+##*@\u003d*%++\u003d\u003d**+%::+#\u003d.##---  \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"MonkeScripts"},"content":"            \"  :%*\u003d.#%-++\u003d--*%-@#-++\u003d--*@+\u003d%-+*\u003d--*@\u003d:+#+ -::-:  \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"MonkeScripts"},"content":"            \"  :%*\u003d.#@%@%\u003d-*@%-@@%@%\u003d-#@@+\u003d@%@%\u003d-#@@\u003d:+#+  -+:   \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"MonkeScripts"},"content":"            \"  -%*\u003d:\u003d@@%---%@@:%@@%---%@@\u003d*@@%---%@@::+#+  \u003d*:   \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"MonkeScripts"},"content":"            \"  -%*\u003d:.#@@###@@@*+@@@###@@@-@@@@###@@\u003d.-+#+  -+:   \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"MonkeScripts"},"content":"            \"  -%*\u003d:.:*##**+***:********+:***\u003d+\u003d**-..:+%*--+*:   \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"MonkeScripts"},"content":"            \"  :%*+\u003d\u003d\u003d\u003d\u003d-\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d-\u003d-\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+*%*----    \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"MonkeScripts"},"content":"            \"  +##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%##*.       \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"MonkeScripts"},"content":"            \" \u003d*******************************************       \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"MonkeScripts"},"content":"            \" \u003d++\u003d++++++++++++++++++++++++++++++++++++++++       \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"MonkeScripts"},"content":"            \" \u003d*++++++++++++++++++++++++++++++++++++++++*+       \\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"MonkeScripts"},"content":"            \" :----------------------------------------::.  \";","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"MonkeScripts"},"content":"    private static final String welcome \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"MonkeScripts"},"content":"            \"Gamble Gamble Gamble! Crazy Slots!!!\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"MonkeScripts"},"content":"                    + \"Win if all 3 middle slots are the same!!\";","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"MonkeScripts"},"content":"    static void printWelcome() {","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"MonkeScripts"},"content":"        System.out.println(icon);","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"MonkeScripts"},"content":"        System.out.println(welcome);","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"MonkeScripts"},"content":"    static void startGambling() {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"MonkeScripts"},"content":"        SlotMachine slotMachine \u003d new SlotMachine(9, 9);","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"MonkeScripts"},"content":"        System.out.println(slotMachine);","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"MonkeScripts"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"MonkeScripts"},"content":"        System.out.println(\"/exit to leave. /reroll to roll again\");","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"MonkeScripts"},"content":"        while (in.hasNextLine()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"MonkeScripts"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"MonkeScripts"},"content":"            switch (userInput) {","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"MonkeScripts"},"content":"            case \"/exit\":","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"MonkeScripts"},"content":"                System.out.println(\"leaving the gambling den\");","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"MonkeScripts"},"content":"                return;","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"MonkeScripts"},"content":"            case \"/reroll\":","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"MonkeScripts"},"content":"                System.out.println(\"/exit to leave. /reroll to roll again\");","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"MonkeScripts"},"content":"                slotMachine.reroll();","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"MonkeScripts"},"content":"                System.out.println(slotMachine);","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"MonkeScripts"},"content":"                if (slotMachine.isWin()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"MonkeScripts"},"content":"                    System.out.println(\"All debts clear!!\");","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"MonkeScripts"},"content":"                } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"MonkeScripts"},"content":"                    System.out.println(\"Poor, reroll again to win\");","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"MonkeScripts"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"MonkeScripts"},"content":"                break;","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"MonkeScripts"},"content":"            default:","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"MonkeScripts"},"content":"                break;","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"MonkeScripts"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"MonkeScripts"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"MonkeScripts"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"MonkeScripts":69}},{"path":"src/main/java/seedu/duke/MessageType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cohii2"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Cohii2"},"content":"public enum MessageType {","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Cohii2"},"content":"    SUCCESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Cohii2"},"content":"    ERROR;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Cohii2"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Cohii2":6}},{"path":"src/main/java/seedu/duke/Money.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MonkeScripts"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"MonkeScripts"},"content":"//@@author MonkeScripts","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"MonkeScripts"},"content":"public class Money {","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"MonkeScripts"},"content":"    private final float amount;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"MonkeScripts"},"content":"    private final CurrencyConversions currency;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"MonkeScripts"},"content":"    public Money(float amount, CurrencyConversions currency) {","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"MonkeScripts"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"MonkeScripts"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"MonkeScripts"},"content":"    Money convertToSGD() {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"MonkeScripts"},"content":"        float amountInSGD \u003d this.amount * this.currency.getInverseRate();","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"MonkeScripts"},"content":"        return new Money(amountInSGD, CurrencyConversions.SGD);","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"MonkeScripts"},"content":"    Money convertToOther(CurrencyConversions resultCurrency) {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"MonkeScripts"},"content":"        float amountInSGD \u003d this.amount * this.currency.getInverseRate();","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"MonkeScripts"},"content":"        float foreignAmount \u003d amountInSGD * resultCurrency.getRate();","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"MonkeScripts"},"content":"        return new Money(foreignAmount, resultCurrency);","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"MonkeScripts"},"content":"    Money addition(Money other, CurrencyConversions resultCurrency) {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"MonkeScripts"},"content":"        float amountInSGD \u003d this.convertToSGD().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"MonkeScripts"},"content":"        float otherAmountInSGD \u003d other.convertToSGD().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"MonkeScripts"},"content":"        float foreignAmount \u003d (amountInSGD + otherAmountInSGD)","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"MonkeScripts"},"content":"                * resultCurrency.getRate();","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"MonkeScripts"},"content":"        return new Money(foreignAmount, resultCurrency);","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"MonkeScripts"},"content":"    Money subtraction(Money other, CurrencyConversions resultCurrency) {","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"MonkeScripts"},"content":"        float amountInSGD \u003d this.convertToSGD().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"MonkeScripts"},"content":"        float otherAmountInSGD \u003d other.convertToSGD().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"MonkeScripts"},"content":"        float foreignAmount \u003d (amountInSGD - otherAmountInSGD)","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"MonkeScripts"},"content":"                * resultCurrency.getRate();","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"MonkeScripts"},"content":"        return new Money(foreignAmount, resultCurrency);","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"MonkeScripts"},"content":"    Money multiplication(float constant, CurrencyConversions resultCurrency) {","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"MonkeScripts"},"content":"        float amountInSGD \u003d this.convertToSGD().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"MonkeScripts"},"content":"        float foreignAmount \u003d (amountInSGD * constant)","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"MonkeScripts"},"content":"                * resultCurrency.getRate();","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"MonkeScripts"},"content":"        return new Money(foreignAmount, resultCurrency);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"MonkeScripts"},"content":"    Money division(float constant, CurrencyConversions resultCurrency) {","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"MonkeScripts"},"content":"        float amountInSGD \u003d this.convertToSGD().getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"MonkeScripts"},"content":"        float foreignAmount \u003d (amountInSGD / constant)","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"MonkeScripts"},"content":"                * resultCurrency.getRate();","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"MonkeScripts"},"content":"        return new Money(foreignAmount, resultCurrency);","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"MonkeScripts"},"content":"    public float getAmount() {","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"MonkeScripts"},"content":"        return this.amount;","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"MonkeScripts"},"content":"    public CurrencyConversions getCurrency() {","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"MonkeScripts"},"content":"        return this.currency;","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"MonkeScripts"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"MonkeScripts"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"MonkeScripts"},"content":"        return String.format(\"%.2f%s\", this.amount, this.currency);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"MonkeScripts"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"MonkeScripts":63}},{"path":"src/main/java/seedu/duke/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cohii2"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//@@author cs2030-reused","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"//Utility class for Java Pair given in cs2030 module","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Pair\u003cT, U\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    private final T t;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private final U u;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public Pair(T t, U u) {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        this.t \u003d t;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.u \u003d u;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public T getKey() {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return this.t;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public U getValue() {","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return this.u;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return \"(\" + this.t + \", \" + this.u + \")\";","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Cohii2":2,"-":25}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cohii2"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Cohii2"},"content":"import seedu.duke.commands.BalanceCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.commands.ExpenseCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.exceptions.ExpensesException;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"MonkeScripts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"MonkeScripts"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"MonkeScripts"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Cohii2"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Cohii2"},"content":"public class Parser {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Cohii2"},"content":"     * List of parameters to extract from user input.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Cohii2"},"content":"     * For example, \"/amount (amount)\".","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Cohii2"},"content":"     * Add new Keys to extract additional user parameters for future functionality.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mukund1403"},"content":"    private static final String[] paramKeys \u003d {\"amount\", \"paid\", \"user\", \"currency\"};","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"MonkeScripts"},"content":"    private final String userInput;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Cohii2"},"content":"     * First word of user input.","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Cohii2"},"content":"    private String command \u003d null;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Cohii2"},"content":"     * Input between first word and \u0027/\u0027 character.","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Cohii2"},"content":"     * For example, \"(command) (argument) /(parameter) (parameter input)...\".","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Cohii2"},"content":"    private String argument \u003d null;","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Cohii2"},"content":"     * Additional parameters provided by user.","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Cohii2"},"content":"    private HashMap\u003cString, ArrayList\u003cString\u003e\u003e params \u003d createParams();","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Cohii2"},"content":"    public static class EndProgramException extends Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Cohii2"},"content":"     * Constructor for Test purposes.","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Cohii2"},"content":"    public Parser(String userInput, String command, String argument,","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Cohii2"},"content":"                  String[] amount, String[] paid, String[] user) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Cohii2"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Cohii2"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Cohii2"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Cohii2"},"content":"        this.params.put(\"amount\", new ArrayList\u003c\u003e(List.of(amount)));","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Cohii2"},"content":"        this.params.put(\"paid\", new ArrayList\u003c\u003e(List.of(paid)));","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Cohii2"},"content":"        this.params.put(\"user\", new ArrayList\u003c\u003e(List.of(user)));","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"mukund1403"},"content":"        this.params.put(\"currency\", new ArrayList\u003c\u003e(List.of(user)));","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Cohii2"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Cohii2"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Cohii2"},"content":"        this.parseUserInput();","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Cohii2"},"content":"     * Creates a new HashMap with Keys equal to additional parameters users might input.","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Cohii2"},"content":"     * Values are arrays that store user input.","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Cohii2"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Cohii2"},"content":"     * @return HashMap with Keys in \u0027additionalFields\u0027 and empty array Values.","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Cohii2"},"content":"    private HashMap\u003cString, ArrayList\u003cString\u003e\u003e createParams() {","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Cohii2"},"content":"        HashMap\u003cString, ArrayList\u003cString\u003e\u003e additionalInfo \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Cohii2"},"content":"        for (String paramKey : paramKeys) {","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Cohii2"},"content":"            additionalInfo.put(paramKey, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Cohii2"},"content":"        return additionalInfo;","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"MonkeScripts"},"content":"     * Process the String userInput and populates corresponding fields of Parser object.","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Cohii2"},"content":"    public void parseUserInput() {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Cohii2"},"content":"        String[] tokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"Cohii2"},"content":"        this.command \u003d tokens[0].toLowerCase().trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Cohii2"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Cohii2"},"content":"            return;","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"Cohii2"},"content":"        String[] arguments \u003d tokens[1].split(\"/\");","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Cohii2"},"content":"        this.argument \u003d arguments[0].trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Cohii2"},"content":"        for (int i \u003d 1; i \u003c arguments.length; i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Cohii2"},"content":"            String[] subTokens \u003d arguments[i].split(\" \", 2);","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"Cohii2"},"content":"            if (subTokens.length \u003d\u003d 1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"Cohii2"},"content":"                continue;","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Cohii2"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"Cohii2"},"content":"            String subCommand \u003d subTokens[0].toLowerCase().trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"Cohii2"},"content":"            String subArgument \u003d subTokens[1].trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"MonkeScripts"},"content":"            if (!subArgument.isEmpty() \u0026\u0026 params.containsKey(subCommand)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"Cohii2"},"content":"                params.get(subCommand).add(subArgument);","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"Cohii2"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"Cohii2"},"content":"     * Returns String summarising contents of Parser object.","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"Cohii2"},"content":"     * For easier debug printing.","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"Cohii2"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"Cohii2"},"content":"     * @return Contents of Parser object.","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"Cohii2"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"Cohii2"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"Cohii2"},"content":"        StringBuilder parser \u003d new StringBuilder();","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"Cohii2"},"content":"        parser.append(\"command: \").append(command).append(\"\\n\");","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"Cohii2"},"content":"        parser.append(\"argument: \").append(argument).append(\"\\n\");","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"Cohii2"},"content":"        for (String paramKey : paramKeys) {","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"Cohii2"},"content":"            parser.append(paramKey).append(\": \");","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"Cohii2"},"content":"            for (String item : params.get(paramKey)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"Cohii2"},"content":"                parser.append(item).append(\" \");","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"Cohii2"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"Cohii2"},"content":"            parser.append(\"\\n\");","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"Cohii2"},"content":"        return parser.toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"MonkeScripts"},"content":"    public void handleUserInput() throws EndProgramException, ExpensesException {","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"Cohii2"},"content":"        switch (command) {","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"Cohii2"},"content":"        case \"bye\":","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"hafizuddin-a"},"content":"            if (Group.isInGroup()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":135,"author":{"gitId":"hafizuddin-a"},"content":"                argument \u003d Group.getCurrentGroup().get().getGroupName();","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"avrilgk"},"content":"                GroupCommand.exitGroup(argument);","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-04-12"},{"lineNumber":138,"author":{"gitId":"Cohii2"},"content":"            throw new EndProgramException();","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"Cohii2"},"content":"        case \"help\":","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"Cohii2"},"content":"            // Help code here","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"MonkeScripts"},"content":"            Help.printHelp();","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"MonkeScripts"},"content":"            assert (true);","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"Cohii2"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"avrilgk"},"content":"        case \"create\":","lastModifiedDate":"2024-03-22"},{"lineNumber":145,"author":{"gitId":"MonkeScripts"},"content":"            GroupCommand.createGroup(argument);","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"Cohii2"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"avrilgk"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"mukund1403"},"content":"            String[] deleteTypeAndValue \u003d argument.split(\" \");","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"mukund1403"},"content":"            String deleteType \u003d deleteTypeAndValue[0];","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"mukund1403"},"content":"            String deleteValue;","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"mukund1403"},"content":"            try{","lastModifiedDate":"2024-04-14"},{"lineNumber":152,"author":{"gitId":"mukund1403"},"content":"                deleteValue \u003d deleteTypeAndValue[1];","lastModifiedDate":"2024-04-14"},{"lineNumber":153,"author":{"gitId":"mukund1403"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"mukund1403"},"content":"                throw new ExpensesException(\"Mention if you want to delete an expense or group\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"mukund1403"},"content":"                        \" and which group or expense you want to delete.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"mukund1403"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"mukund1403"},"content":"            if(deleteType.equals(\"group\")){","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"mukund1403"},"content":"                GroupCommand.deleteGroup(deleteValue);","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"mukund1403"},"content":"            } else if(deleteType.equals(\"expense\")){","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"mukund1403"},"content":"                ExpenseCommand.deleteExpense(deleteValue);","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"mukund1403"},"content":"            } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"mukund1403"},"content":"                throw new ExpensesException(\"Mention if you want to delete an expense or group.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"mukund1403"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"avrilgk"},"content":"            break;","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"Cohii2"},"content":"        case \"member\":","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"MonkeScripts"},"content":"            GroupCommand.addMember(argument);","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"MonkeScripts"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"avrilgk"},"content":"        case \"enter\":","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"avrilgk"},"content":"            GroupCommand.enterGroup(argument);","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"avrilgk"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"MonkeScripts"},"content":"        case \"exit\":","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"avrilgk"},"content":"            GroupCommand.exitGroup(argument);","lastModifiedDate":"2024-04-13"},{"lineNumber":175,"author":{"gitId":"Cohii2"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"Cohii2"},"content":"        case \"expense\":","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"mukund1403"},"content":"            ExpenseCommand.addExpense(params, argument, userInput);","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"avrilgk"},"content":"            break;","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"avrilgk"},"content":"        case \"settle\":","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"avrilgk"},"content":"            String[] commandParts \u003d userInput.split(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"avrilgk"},"content":"            if (commandParts.length \u003c 4 || !commandParts[2].equals(\"/user\")) {","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"avrilgk"},"content":"                System.out.println(\"Invalid command. Syntax: settle payerName /user payeeName\");","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"avrilgk"},"content":"                return;","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"avrilgk"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":186,"author":{"gitId":"avrilgk"},"content":"            String payer \u003d commandParts[1];","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"avrilgk"},"content":"            String payee \u003d commandParts[3];","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":189,"author":{"gitId":"avrilgk"},"content":"            Group.getCurrentGroup().ifPresent(group -\u003e group.settle(payer, payee));","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":191,"author":{"gitId":"MonkeScripts"},"content":"            break;","lastModifiedDate":"2024-03-31"},{"lineNumber":192,"author":{"gitId":"MonkeScripts"},"content":"        case \"luck\":","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"MonkeScripts"},"content":"            Luck.printWelcome();","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"MonkeScripts"},"content":"            Luck.startGambling();","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"Cohii2"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"Cohii2"},"content":"        case \"list\":","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"mukund1403"},"content":"            ListCommand.printList();","lastModifiedDate":"2024-04-01"},{"lineNumber":198,"author":{"gitId":"Cohii2"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"Cohii2"},"content":"        case \"balance\":","lastModifiedDate":"2024-03-30"},{"lineNumber":200,"author":{"gitId":"Cohii2"},"content":"            BalanceCommand.handleBalance(argument);","lastModifiedDate":"2024-04-14"},{"lineNumber":201,"author":{"gitId":"Cohii2"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":202,"author":{"gitId":"Cohii2"},"content":"        default:","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"mukund1403"},"content":"            System.out.println(\"That is not a command. \" +","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"mukund1403"},"content":"                    \"Please use one of the commands given here\");","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"mukund1403"},"content":"            Help.printHelp();","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"Cohii2"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":210,"author":{"gitId":"Cohii2"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"MonkeScripts":20,"avrilgk":22,"hafizuddin-a":3,"Cohii2":135,"mukund1403":30}},{"path":"src/main/java/seedu/duke/Settle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"//@@author avrilgk","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":" * The Settle class represents a transaction between two users.","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":" * It extends the Expense class and has a payer, payee and amount.","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":" * Each Settle object represents a single transaction where one user (the payer)","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":" * pays another user (the payee) a certain amount.","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"public class Settle extends Expense {","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"    private final User payer;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"    private final User payee;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"    private final double amount;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"     * Constructs a new Settle object.","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"     * @param payer  The user who is making the payment","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"     * @param payee  The user who is receiving the payment","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"     * @param amount The amount of the payment","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"    public Settle(User payer, User payee, float amount) {","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"        super(payer.getName(), \"\", new Money(amount , CurrencyConversions.SGD), new ArrayList\u003c\u003e());","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"        this.payer \u003d payer;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"        this.payee \u003d payee;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"    public String getPayer() {","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"        return payer.getName();","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"    public String toString() {","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"avrilgk"},"content":"        return payer.getName() + \" paid \" + payee.getName() + \" \" + amount;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"avrilgk":43}},{"path":"src/main/java/seedu/duke/SlotMachine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MonkeScripts"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"MonkeScripts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"MonkeScripts"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"MonkeScripts"},"content":"import java.util.Random;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"MonkeScripts"},"content":"import java.util.concurrent.ThreadLocalRandom;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"MonkeScripts"},"content":"public class SlotMachine {","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"MonkeScripts"},"content":"    private static final String slotOutputs \u003d \"%^#@$*!~\";","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"MonkeScripts"},"content":"    private List\u003cList\u003cCharacter\u003e\u003e slotMachine;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"MonkeScripts"},"content":"    SlotMachine(int numRows, int numCols) {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"MonkeScripts"},"content":"        // create slot machine matrix","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"MonkeScripts"},"content":"        slotMachine \u003d new ArrayList\u003c\u003e(numRows);","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"MonkeScripts"},"content":"        for (int row \u003d 0; row \u003c numRows; row++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"MonkeScripts"},"content":"            List\u003cCharacter\u003e currentRow \u003d new ArrayList\u003c\u003e(numCols);","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"MonkeScripts"},"content":"            for (int j \u003d 0; j \u003c numCols; j++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"MonkeScripts"},"content":"                // Initialize each cell with empty char","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"MonkeScripts"},"content":"                currentRow.add(\u0027 \u0027);","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"MonkeScripts"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"MonkeScripts"},"content":"            slotMachine.add(currentRow);","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"MonkeScripts"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"MonkeScripts"},"content":"        // randomise each slot","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"MonkeScripts"},"content":"        fillSlots();","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"MonkeScripts"},"content":"    // Fill each slot [3x3] with random characters","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"MonkeScripts"},"content":"    private void fillSlots() {","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"MonkeScripts"},"content":"        Random rand \u003d ThreadLocalRandom.current();","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"MonkeScripts"},"content":"        for (int row \u003d 0; row \u003c slotMachine.size(); row +\u003d 3) {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"MonkeScripts"},"content":"            for (int col \u003d 0; col \u003c slotMachine.get(0).size(); col +\u003d 3) {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"MonkeScripts"},"content":"                char randomChar \u003d slotOutputs.charAt(rand.nextInt(slotOutputs.length()));","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"MonkeScripts"},"content":"                //one char in each slot","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"MonkeScripts"},"content":"                fillSlot(row, col, randomChar);","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"MonkeScripts"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"MonkeScripts"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"MonkeScripts"},"content":"    // Fill one slot with the same random character","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"MonkeScripts"},"content":"    private void fillSlot(int startRow, int startCol, char character) {","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"MonkeScripts"},"content":"        for (int i \u003d startRow; i \u003c startRow + 3; i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"MonkeScripts"},"content":"            for (int j \u003d startCol; j \u003c startCol + 3; j++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"MonkeScripts"},"content":"                slotMachine.get(i).set(j, character);","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"MonkeScripts"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"MonkeScripts"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"MonkeScripts"},"content":"    // randomise characters","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"MonkeScripts"},"content":"    void reroll() {","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"MonkeScripts"},"content":"        fillSlots();","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"MonkeScripts"},"content":"    // Override toString method to print the slot machine","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"MonkeScripts"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"MonkeScripts"},"content":"    public String toString() {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"MonkeScripts"},"content":"        StringBuilder matrix \u003d new StringBuilder();","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"MonkeScripts"},"content":"        // Draw the slot machine","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"MonkeScripts"},"content":"        for (int i \u003d 0; i \u003c slotMachine.size(); i +\u003d 3) {","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"MonkeScripts"},"content":"            // Draw the top of the boxes","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"MonkeScripts"},"content":"            for (int j \u003d 0; j \u003c slotMachine.get(0).size(); j +\u003d 3) {","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"MonkeScripts"},"content":"                matrix.append(\"┌───┐\");","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"MonkeScripts"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"MonkeScripts"},"content":"            matrix.append(\"\\n\");","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"MonkeScripts"},"content":"            // Draw the content of each slot","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"MonkeScripts"},"content":"            for (int row \u003d i; row \u003c i + 3; row++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"MonkeScripts"},"content":"                for (int j \u003d 0; j \u003c slotMachine.get(0).size(); j +\u003d 3) {","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"MonkeScripts"},"content":"                    matrix.append(\"│\");","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"MonkeScripts"},"content":"                    for (int col \u003d j; col \u003c j + 3; col++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"MonkeScripts"},"content":"                        matrix.append(slotMachine.get(row).get(col));","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"MonkeScripts"},"content":"                    }","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"MonkeScripts"},"content":"                    matrix.append(\"│\");","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"MonkeScripts"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"MonkeScripts"},"content":"                matrix.append(\"\\n\");","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"MonkeScripts"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"MonkeScripts"},"content":"            // Draw the bottom of the boxes","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"MonkeScripts"},"content":"            for (int j \u003d 0; j \u003c slotMachine.get(0).size(); j +\u003d 3) {","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"MonkeScripts"},"content":"                matrix.append(\"└───┘\");","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"MonkeScripts"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"MonkeScripts"},"content":"            matrix.append(\"\\n\");","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"MonkeScripts"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"MonkeScripts"},"content":"        return matrix.toString();","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"MonkeScripts"},"content":"    // Check if all characters in the middle rows are the same","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"MonkeScripts"},"content":"    boolean isWin() {","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"MonkeScripts"},"content":"        for (int i \u003d slotMachine.size() / 2 - 1; i \u003c\u003d slotMachine.size() / 2 + 1; i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"MonkeScripts"},"content":"            char firstChar \u003d slotMachine.get(i).get(0);","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"MonkeScripts"},"content":"            for (int j \u003d 1; j \u003c slotMachine.get(i).size(); j++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"MonkeScripts"},"content":"                if (slotMachine.get(i).get(j) !\u003d firstChar) {","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"MonkeScripts"},"content":"                    return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"MonkeScripts"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"MonkeScripts"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"MonkeScripts"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"MonkeScripts"},"content":"        return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"MonkeScripts"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"MonkeScripts":96}},{"path":"src/main/java/seedu/duke/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"public class User {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"    private String userName;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"    public User(String userName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"        this.userName \u003d userName;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"    public String getName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"        return userName;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hafizuddin-a":13}},{"path":"src/main/java/seedu/duke/UserInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cohii2"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Cohii2"},"content":"public class UserInterface {","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Cohii2"},"content":"    private static final String SUCCESS_BORDER \u003d \"\u003c----------SUCCESS-----------\u003e\";","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Cohii2"},"content":"    private static final String ERROR_BORDER \u003d \"\u003c-----------ERROR------------\u003e\";","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Cohii2"},"content":"    private static final String DEFAULT_BORDER \u003d \"\u003c----------------------------\u003e\";","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Cohii2"},"content":"    private static final String HAPPY_CAT \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Cohii2"},"content":"            \"  /\\\\_/\\\\\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Cohii2"},"content":"                    \" ( ^.^ )\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Cohii2"},"content":"                    \"  \u003e ^ \u003c\";","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Cohii2"},"content":"    private static final String GRUMPY_CAT \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Cohii2"},"content":"            \"  /\\\\_/\\\\\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Cohii2"},"content":"                    \" ( \u003e_\u003c )\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Cohii2"},"content":"                    \"  \u003e ^ \u003c\";","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Cohii2"},"content":"    private static final String SAD_CAT \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Cohii2"},"content":"            \"  /\\\\_/\\\\\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Cohii2"},"content":"                    \" ( ._. )\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Cohii2"},"content":"                    \"  \u003e ^ \u003c\";","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Cohii2"},"content":"    public static void printMessage(String message, MessageType type) {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Cohii2"},"content":"        switch (type) {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Cohii2"},"content":"        case SUCCESS:","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Cohii2"},"content":"            System.out.println(HAPPY_CAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Cohii2"},"content":"            System.out.println(SUCCESS_BORDER);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Cohii2"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Cohii2"},"content":"        case ERROR:","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Cohii2"},"content":"            System.out.println(GRUMPY_CAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Cohii2"},"content":"            System.out.println(ERROR_BORDER);","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Cohii2"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"mukund1403"},"content":"        default:","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"mukund1403"},"content":"            break;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Cohii2"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Cohii2"},"content":"        System.out.println(DEFAULT_BORDER);","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Cohii2"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Cohii2"},"content":"        System.out.println(SAD_CAT);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Cohii2"},"content":"        System.out.println(DEFAULT_BORDER);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Cohii2"},"content":"        System.out.println(message);","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Cohii2"},"content":"        System.out.println(DEFAULT_BORDER);","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Cohii2"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Cohii2":45,"mukund1403":2}},{"path":"src/main/java/seedu/duke/commands/BalanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cohii2"},"content":"package seedu.duke.commands;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Cohii2"},"content":"import seedu.duke.Balance;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Cohii2"},"content":"import seedu.duke.Group;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Cohii2"},"content":"import seedu.duke.exceptions.ExpensesException;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Cohii2"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Cohii2"},"content":"public class BalanceCommand {","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Cohii2"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Cohii2"},"content":"     * Checks if user is currently in a Group, and if User specified is in said Group.","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Cohii2"},"content":"     * Creates a Balance object and prints User\u0027s balance if so.","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Cohii2"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Cohii2"},"content":"     * @param argument The name of User to print the balance of.","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Cohii2"},"content":"     * @throws ExpensesException If user is not in a Group, or specified User is not in said Group.","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Cohii2"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Cohii2"},"content":"    public static void handleBalance(String argument) throws ExpensesException{","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Cohii2"},"content":"        // Checks if user is currently in a Group","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Cohii2"},"content":"        // named \u0027currentGroup1\u0027 to prevent conflict with previous declaration","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Cohii2"},"content":"        Optional\u003cGroup\u003e currentGroup \u003d Group.getCurrentGroup();","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Cohii2"},"content":"        if (currentGroup.isEmpty()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Cohii2"},"content":"            String exceptionMessage \u003d \"Not signed in to a Group! Use \u0027create \u003cname\u003e\u0027 to create Group\";","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Cohii2"},"content":"            throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Cohii2"},"content":"        assert currentGroup.isPresent()  : \"Group should be created and present\";","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Cohii2"},"content":"        // Checks if user specified is in Current Group","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Cohii2"},"content":"        if (!currentGroup.get().isMember(argument)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Cohii2"},"content":"            String exceptionMessage \u003d argument + \" is not in current Group!\";","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Cohii2"},"content":"            throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Cohii2"},"content":"        Balance balance \u003d new Balance(argument, currentGroup.get());","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Cohii2"},"content":"        balance.printBalance();","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Cohii2"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Cohii2":36}},{"path":"src/main/java/seedu/duke/commands/ExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mukund1403"},"content":"package seedu.duke.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"mukund1403"},"content":"//@@author mukund1403","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.Group;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.Pair;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.CurrencyConversions;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.Money;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.Expense;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.exceptions.ExpensesException;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"mukund1403"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"mukund1403"},"content":"import java.util.List;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"mukund1403"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"mukund1403"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"mukund1403"},"content":"public class ExpenseCommand {","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"Cohii2"},"content":"    //@@author Cohii2","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Cohii2"},"content":"    public static void addExpense(HashMap \u003cString, ArrayList\u003cString\u003e\u003e params,String argument, String userInput)","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Cohii2"},"content":"            throws ExpensesException {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Cohii2"},"content":"        Optional\u003cGroup\u003e currentGroup \u003d Group.getCurrentGroup();","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Cohii2"},"content":"        if (currentGroup.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"Cohii2"},"content":"            throw new ExpensesException(\"Not signed in to a Group! Use \u0027create \u003cname\u003e\u0027 to create Group\");","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"Cohii2"},"content":"        String[] expenseParams \u003d {\"amount\", \"paid\", \"user\"};","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"Cohii2"},"content":"        for (String expenseParam : expenseParams) {","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"Cohii2"},"content":"            if (params.get(expenseParam).isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"Cohii2"},"content":"                throw new ExpensesException(\"No \" + expenseParam + \" for expenses! Add /\" + expenseParam);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"Cohii2"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Cohii2"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"mukund1403"},"content":"        //@@author mukund1403","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"mukund1403"},"content":"        float totalAmount \u003d getTotal(params);","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"mukund1403"},"content":"        String currencyString;","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"mukund1403"},"content":"        if(params.get(\"currency\").isEmpty()){","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"mukund1403"},"content":"            currencyString \u003d \"\";","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"mukund1403"},"content":"        } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"mukund1403"},"content":"            currencyString \u003d params.get(\"currency\").get(0);","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"mukund1403"},"content":"        CurrencyConversions currency \u003d getCurrency(currencyString);","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"mukund1403"},"content":"        Money amountAndCurrency \u003d new Money(totalAmount, currency);","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"mukund1403"},"content":"        ArrayList\u003cString\u003e payeeList \u003d params.get(\"user\");","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"mukund1403"},"content":"        String payerName \u003d params.get(\"paid\").get(0);","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"mukund1403"},"content":"        checkDescription(argument);","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"mukund1403"},"content":"        Expense newTransaction;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"mukund1403"},"content":"        ArrayList\u003cPair\u003cString, Money\u003e\u003e payees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"mukund1403"},"content":"        if(userInput.contains(\"/unequal\")){","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"mukund1403"},"content":"            newTransaction \u003d addUnequalExpense(payeeList, payees, amountAndCurrency, payerName, argument);","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"mukund1403"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"mukund1403"},"content":"            newTransaction \u003d addEqualExpense(payeeList, payees, amountAndCurrency, payerName, argument);","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"mukund1403"},"content":"        currentGroup.get().addExpense(newTransaction);","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"mukund1403"},"content":"    //@@author mukund1403","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"mukund1403"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"mukund1403"},"content":"     * The method deletes expense from the expenses list","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"mukund1403"},"content":"     * @param listIndex : The index from the list, the user wishes to delete (will be 1 indexed)","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"mukund1403"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"mukund1403"},"content":"    public static void deleteExpense(String listIndex) throws ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"mukund1403"},"content":"        Optional\u003cGroup\u003e currentGroup \u003d Group.getCurrentGroup();","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"mukund1403"},"content":"        if (currentGroup.isEmpty()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"mukund1403"},"content":"            String exceptionMessage \u003d \"Not signed in to a Group! Use \u0027create \u003cname\u003e\u0027 to create Group\";","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"mukund1403"},"content":"            throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"mukund1403"},"content":"        List\u003cExpense\u003e expenseList \u003d currentGroup.get().getExpenseList();","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"mukund1403"},"content":"        int listSize \u003d expenseList.size();","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"mukund1403"},"content":"        int index \u003d getListIndex(listIndex, listSize) - 1;","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"mukund1403"},"content":"        String deletedExpenseDescription \u003d expenseList.get(index).toString();","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"mukund1403"},"content":"        currentGroup.get().deleteExpense(index);","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"mukund1403"},"content":"        System.out.println(\"Deleted expense:\\n\" + deletedExpenseDescription);","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"mukund1403"},"content":"    public static Float getTotal(HashMap\u003cString, ArrayList\u003cString\u003e\u003e params) throws ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"mukund1403"},"content":"        float totalAmount;","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"mukund1403"},"content":"        String amount \u003d params.get(\"amount\").get(0);","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"mukund1403"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"mukund1403"},"content":"            totalAmount \u003d Float.parseFloat(amount);","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"mukund1403"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"mukund1403"},"content":"            String exceptionMessage \u003d \"Re-enter expense with amount as a proper number. (Good bug to start with tbh!)\";","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"mukund1403"},"content":"            throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"mukund1403"},"content":"        int maxNumberHandled \u003d 2000000000;","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"mukund1403"},"content":"        if(totalAmount \u003c\u003d 0){","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"mukund1403"},"content":"            String exceptionMessage \u003d \"Expense amount cannot be 0 or a negative number \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"mukund1403"},"content":"                    \"(Can try using special characters. I have not handled that!)\";","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"mukund1403"},"content":"            throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"mukund1403"},"content":"        } else if(totalAmount \u003e maxNumberHandled) {","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"mukund1403"},"content":"            String exceptionMessage \u003d \"This amount is too big for a small computer like me to handle :(. \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"mukund1403"},"content":"                    \"Please use a smaller amount\";","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"mukund1403"},"content":"            throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"mukund1403"},"content":"        return totalAmount;","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"mukund1403"},"content":"    public static CurrencyConversions getCurrency(String currencyString)","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"mukund1403"},"content":"            throws ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"mukund1403"},"content":"        if(currencyString.isEmpty()){","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"mukund1403"},"content":"            return CurrencyConversions.SGD;","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"mukund1403"},"content":"        } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"mukund1403"},"content":"            switch(currencyString.toUpperCase()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"mukund1403"},"content":"            case \"USD\":","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"mukund1403"},"content":"                return CurrencyConversions.USD;","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"mukund1403"},"content":"            case \"RMB\":","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"mukund1403"},"content":"                return CurrencyConversions.RMB;","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"mukund1403"},"content":"            case \"EUR\":","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"mukund1403"},"content":"                return CurrencyConversions.EUR;","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"mukund1403"},"content":"            case \"JPY\":","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"mukund1403"},"content":"                return CurrencyConversions.JPY;","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"mukund1403"},"content":"            case \"AUD\":","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"mukund1403"},"content":"                return CurrencyConversions.AUD;","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"mukund1403"},"content":"            case \"MYR\":","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"mukund1403"},"content":"                return CurrencyConversions.MYR;","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"mukund1403"},"content":"            case \"SGD\":","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"mukund1403"},"content":"                return CurrencyConversions.SGD;","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"mukund1403"},"content":"            default:","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"mukund1403"},"content":"                throw new ExpensesException(\"Sorry! Either you have entered the currency name incorrectly or\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"mukund1403"},"content":"                        \" the app does not currently support this currency :(\");","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"mukund1403"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"mukund1403"},"content":"    public static int getListIndex(String listIndex, int listSize) throws ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"mukund1403"},"content":"        int index;","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"mukund1403"},"content":"        try{","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"mukund1403"},"content":"            index \u003d Integer.parseInt(listIndex);","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"mukund1403"},"content":"        } catch(NumberFormatException e){","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"mukund1403"},"content":"            String exceptionMessage \u003d \"Enter a list index that is an Integer\";","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"mukund1403"},"content":"            throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"mukund1403"},"content":"        if(index \u003e listSize){","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"mukund1403"},"content":"            String exceptionMessage \u003d \"List index is greater than list size\";","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"mukund1403"},"content":"            throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"mukund1403"},"content":"        } else if (index \u003c\u003d 0){","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"mukund1403"},"content":"            String exceptionMessage \u003d \"List index cannot be 0 or negative\";","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"mukund1403"},"content":"            throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"mukund1403"},"content":"        return index;","lastModifiedDate":"2024-04-14"},{"lineNumber":145,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":146,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":147,"author":{"gitId":"mukund1403"},"content":"    public static Expense addUnequalExpense(ArrayList\u003cString\u003e payeeList, ArrayList\u003cPair\u003cString, Money\u003e\u003e payees,","lastModifiedDate":"2024-04-14"},{"lineNumber":148,"author":{"gitId":"mukund1403"},"content":"                                            Money totalAmountAndCurrency,","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"mukund1403"},"content":"                                            String payerName, String argument) throws ExpensesException{","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"mukund1403"},"content":"        float totalAmount \u003d totalAmountAndCurrency.getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"mukund1403"},"content":"        float amountDueByPayees \u003d 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"mukund1403"},"content":"        int payeeInfoMinLength \u003d 2;","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"mukund1403"},"content":"        CurrencyConversions currency \u003d totalAmountAndCurrency.getCurrency();","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"mukund1403"},"content":"        for (String payee : payeeList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"mukund1403"},"content":"            String[] payeeInfo \u003d payee.split(\" \");","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"mukund1403"},"content":"            if (payeeInfo.length \u003c payeeInfoMinLength) {","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"mukund1403"},"content":"                String exceptionMessage \u003d \"Amount due for payee with name \"","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"mukund1403"},"content":"                        + payeeInfo[0] + \" is empty. Enter it and try again\";","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"mukund1403"},"content":"                throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"mukund1403"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"mukund1403"},"content":"            String payeeName \u003d mergeBack(payeeInfo);","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"mukund1403"},"content":"            checkPayeeInGroup(payeeName);","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"mukund1403"},"content":"            try {","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"mukund1403"},"content":"                float amountDue \u003d Float.parseFloat(payeeInfo[payeeInfo.length - 1]);","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"mukund1403"},"content":"                amountDueByPayees +\u003d amountDue;","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"mukund1403"},"content":"                Money amountDueAndCurrency \u003d new Money(amountDue, currency);","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"mukund1403"},"content":"                payees.add(new Pair\u003c\u003e(payeeName, amountDueAndCurrency));","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"mukund1403"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"mukund1403"},"content":"                String exceptionMessage \u003d \"Re-enter amount due for payee with name \"","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"mukund1403"},"content":"                        + payeeName + \" as a proper number.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"mukund1403"},"content":"                throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"mukund1403"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"mukund1403"},"content":"        if (amountDueByPayees \u003e totalAmount) {","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"mukund1403"},"content":"            String exceptionMessage \u003d \"The amount split between users is greater than total amount. Try again.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"mukund1403"},"content":"            throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"mukund1403"},"content":"        float amountDueForPayer \u003d totalAmount - amountDueByPayees;","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"mukund1403"},"content":"        Money amountDueAndCurrency \u003d new Money(amountDueForPayer, currency);","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"mukund1403"},"content":"        payees.add(new Pair\u003c\u003e(payerName, amountDueAndCurrency));","lastModifiedDate":"2024-04-14"},{"lineNumber":182,"author":{"gitId":"mukund1403"},"content":"        return new Expense(true, payerName, argument, totalAmountAndCurrency, payees);","lastModifiedDate":"2024-04-14"},{"lineNumber":183,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":186,"author":{"gitId":"mukund1403"},"content":"    public static Expense addEqualExpense(ArrayList\u003cString\u003e payeeList, ArrayList\u003cPair\u003cString, Money\u003e\u003e payees,","lastModifiedDate":"2024-04-14"},{"lineNumber":187,"author":{"gitId":"mukund1403"},"content":"                                           Money totalAmountAndCurrency,","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"mukund1403"},"content":"                                          String payerName,String argument)throws ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"mukund1403"},"content":"        float totalAmount \u003d totalAmountAndCurrency.getAmount();","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"mukund1403"},"content":"        CurrencyConversions currency \u003d totalAmountAndCurrency.getCurrency();","lastModifiedDate":"2024-04-14"},{"lineNumber":191,"author":{"gitId":"mukund1403"},"content":"        float amountDue \u003d totalAmount / (payeeList.size() + 1);","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"mukund1403"},"content":"        Money amountDueAndCurrency \u003d new Money(amountDue, currency);","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"mukund1403"},"content":"        for (String payee : payeeList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":194,"author":{"gitId":"mukund1403"},"content":"            checkPayeeInGroup(payee);","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"mukund1403"},"content":"            payees.add(new Pair\u003c\u003e(payee, amountDueAndCurrency));","lastModifiedDate":"2024-04-14"},{"lineNumber":196,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":197,"author":{"gitId":"mukund1403"},"content":"        checkPayeeInGroup(payerName);","lastModifiedDate":"2024-04-14"},{"lineNumber":198,"author":{"gitId":"mukund1403"},"content":"        payees.add(new Pair\u003c\u003e(payerName, amountDueAndCurrency));","lastModifiedDate":"2024-04-14"},{"lineNumber":199,"author":{"gitId":"mukund1403"},"content":"        return new Expense(payerName, argument, totalAmountAndCurrency, payees);","lastModifiedDate":"2024-04-14"},{"lineNumber":200,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":201,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":202,"author":{"gitId":"mukund1403"},"content":"    private static void checkDescription(String argument) throws ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":203,"author":{"gitId":"mukund1403"},"content":"        if(argument.isEmpty()){","lastModifiedDate":"2024-04-14"},{"lineNumber":204,"author":{"gitId":"mukund1403"},"content":"            System.out.println(\"Warning! Empty description\");","lastModifiedDate":"2024-04-14"},{"lineNumber":205,"author":{"gitId":"mukund1403"},"content":"        } else if(argument.contains(\"◇\")){","lastModifiedDate":"2024-04-14"},{"lineNumber":206,"author":{"gitId":"mukund1403"},"content":"            throw new ExpensesException(\"Special characters not allowed in description! \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":207,"author":{"gitId":"mukund1403"},"content":"                    \"(Good try trynna catch a bug!)\");","lastModifiedDate":"2024-04-14"},{"lineNumber":208,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":209,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"mukund1403"},"content":"    private static void checkPayeeInGroup(String payee)","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"mukund1403"},"content":"            throws ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":213,"author":{"gitId":"mukund1403"},"content":"        if(!Group.isMember(payee)){","lastModifiedDate":"2024-04-14"},{"lineNumber":214,"author":{"gitId":"mukund1403"},"content":"            throw new ExpensesException(payee + \" is not a member of the group!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":216,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":217,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":218,"author":{"gitId":"mukund1403"},"content":"    private static String mergeBack(String[] splitArray){","lastModifiedDate":"2024-04-01"},{"lineNumber":219,"author":{"gitId":"mukund1403"},"content":"        String mergedString \u003d \"\";","lastModifiedDate":"2024-04-01"},{"lineNumber":220,"author":{"gitId":"mukund1403"},"content":"        for(int i \u003d 0; i \u003c splitArray.length-2; i++){","lastModifiedDate":"2024-04-01"},{"lineNumber":221,"author":{"gitId":"mukund1403"},"content":"            mergedString +\u003d splitArray[i].trim() + \" \";","lastModifiedDate":"2024-04-01"},{"lineNumber":222,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":223,"author":{"gitId":"mukund1403"},"content":"        mergedString +\u003d splitArray[splitArray.length-2];","lastModifiedDate":"2024-04-01"},{"lineNumber":224,"author":{"gitId":"mukund1403"},"content":"        return mergedString;","lastModifiedDate":"2024-04-01"},{"lineNumber":225,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":226,"author":{"gitId":"mukund1403"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"Cohii2":14,"mukund1403":212}},{"path":"src/main/java/seedu/duke/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mukund1403"},"content":"package seedu.duke.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"mukund1403"},"content":"//@@author mukund1403","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.Expense;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.exceptions.ExpensesException;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.Group;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"mukund1403"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"mukund1403"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"mukund1403"},"content":"public class ListCommand {","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"mukund1403"},"content":"    public static void printList() throws ExpensesException {","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"mukund1403"},"content":"        Optional\u003cGroup\u003e currentGroup \u003d Group.getCurrentGroup();","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"mukund1403"},"content":"        if (currentGroup.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"mukund1403"},"content":"            String exceptionMessage \u003d \"Not signed in to a Group! Use \u0027create \u003cname\u003e\u0027 to create Group\";","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"mukund1403"},"content":"            throw new ExpensesException(exceptionMessage);","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"mukund1403"},"content":"        List\u003cExpense\u003e expenses \u003d currentGroup.get().getExpenseList();","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"mukund1403"},"content":"        System.out.println(\"The expenses for this group are:\\n\");","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"mukund1403"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"mukund1403"},"content":"        for(Expense expense : expenses){","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"mukund1403"},"content":"            System.out.println(i + \". \" + expense.toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"mukund1403"},"content":"            i++;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"mukund1403"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"mukund1403"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"mukund1403":25}},{"path":"src/main/java/seedu/duke/exceptions/ExpensesException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mukund1403"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"mukund1403"},"content":"public class ExpensesException extends Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"mukund1403"},"content":"    public ExpensesException(String s, Throwable err){","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"mukund1403"},"content":"        super(s,err);","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"mukund1403"},"content":"    public ExpensesException(String s){","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"mukund1403"},"content":"        super(s);","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"mukund1403"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"mukund1403":11}},{"path":"src/main/java/seedu/duke/exceptions/GroupDeleteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":" * Represents an exception that occurs during the deletion of a group.","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":" * This exception is thrown when there is an error or failure in the group deletion process.","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"public class GroupDeleteException extends UniversalExceptions {","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"     * Constructs a new GroupDeleteException with the specified detail message.","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"     * @param message the detail message describing the exception","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"    public GroupDeleteException(String message) {","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"        super(message);","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"hafizuddin-a":16}},{"path":"src/main/java/seedu/duke/exceptions/GroupLoadException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":" * Represents an exception that occurs when loading group information fails.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":" * This exception is thrown when an error occurs while loading a group from a file.","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"public class GroupLoadException extends UniversalExceptions {","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"     * Constructs a new GroupLoadException with the specified detail message.","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"    public GroupLoadException(String message) {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"        super(message);","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"hafizuddin-a":16}},{"path":"src/main/java/seedu/duke/exceptions/GroupSaveException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":" * Represents an exception that occurs when saving group information fails.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":" * This exception is thrown when an error occurs while saving a group to a file.","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"public class GroupSaveException extends UniversalExceptions {","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"     * Constructs a new GroupSaveException with the specified detail message.","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"    public GroupSaveException(String message) {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"        super(message);","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"hafizuddin-a":16}},{"path":"src/main/java/seedu/duke/exceptions/UniversalExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"MonkeScripts"},"content":"public class UniversalExceptions extends Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"MonkeScripts"},"content":"    private final String errorMessage;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"MonkeScripts"},"content":"    UniversalExceptions(String errorMessage) {","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"MonkeScripts"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"MonkeScripts"},"content":"    String getErrorMessage() {","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"MonkeScripts"},"content":"        return this.errorMessage;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"MonkeScripts"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"MonkeScripts"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"MonkeScripts"},"content":"        return this.errorMessage;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"MonkeScripts"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"MonkeScripts":16,"hafizuddin-a":1}},{"path":"src/main/java/seedu/duke/storage/FileIO.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke.storage;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":" * Represents the file I/O operations.","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":" * Defines methods for reading from and writing to files.","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"public interface FileIO {","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns a BufferedReader for reading from the specified file.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"     * @param filePath The path of the file to read from.","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"     * @return A BufferedReader for reading from the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException If an I/O error occurs while creating the reader.","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"    BufferedReader getFileReader(String filePath) throws IOException;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns a BufferedWriter for writing to the specified file.","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"     * @param filePath The path of the file to write to.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"     * @return A BufferedWriter for writing to the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException If an I/O error occurs while creating the writer.","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"    BufferedWriter getFileWriter(String filePath) throws IOException;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"     * Deletes the file at the specified file path.","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"     * @param filePath The path of the file to be deleted.","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"     * @return true if the file was successfully deleted, false otherwise.","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException If an I/O error occurs while deleting the file.","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"    boolean deleteFile(String filePath) throws IOException;","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"hafizuddin-a":38}},{"path":"src/main/java/seedu/duke/storage/FileIOImpl.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke.storage;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.File;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"mukund1403"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":" * Implements the FileIO interface.","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":" * Provides concrete implementations for file I/O operations using BufferedReader and BufferedWriter.","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"public class FileIOImpl implements FileIO {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns a BufferedReader for reading from the specified file.","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"     * @param filePath The path of the file to read from.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"     * @return A BufferedReader for reading from the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException If an I/O error occurs while creating the reader.","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"    public BufferedReader getFileReader(String filePath) throws IOException {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"        return new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns a BufferedWriter for writing to the specified file.","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"     * @param filePath The path of the file to write to.","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"     * @return A BufferedWriter for writing to the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException If an I/O error occurs while creating the writer.","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"    public BufferedWriter getFileWriter(String filePath) throws IOException {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"        return new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"     * Deletes the file at the specified file path.","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"     * @param filePath The path of the file to be deleted.","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"     * @return true if the file was successfully deleted, false otherwise.","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException If an I/O error occurs while deleting the file.","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"    @Override","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"    public boolean deleteFile(String filePath) throws IOException {","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"        return file.delete();","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"hafizuddin-a":50,"mukund1403":2}},{"path":"src/main/java/seedu/duke/storage/GroupFilePath.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke.storage;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":" * Represents the file path management for group files.","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":" * Provides methods to get the file path for a group and create the groups directory.","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"public class GroupFilePath {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"    private static String groupsDirectory \u003d \"data/groups\";","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"    private static final String GROUP_FILE_EXTENSION \u003d \".txt\";","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"     * Returns the file path for the group file.","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"     * @param groupName The name of the group.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"     * @return The file path for the group file.","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"    public static String getFilePath(String groupName) {","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"        assert groupName !\u003d null \u0026\u0026 !groupName.isEmpty() : \"Group name cannot be null or empty\";","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"        return groupsDirectory + \"/\" + groupName + GROUP_FILE_EXTENSION;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"     * Creates the groups directory if it does not exist.","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException If an I/O error occurs while creating the directory.","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"    public static void createGroupDirectory() throws IOException {","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"        Path path \u003d Paths.get(groupsDirectory);","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"     * Sets the directory where group files are stored.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"     * This method allows changing the default groups directory to a custom directory.","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"     * It is useful for testing purposes or when the groups need to be stored in a different location.","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"     * Assertions are used to check that the provided directory is not null or empty.","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"     * If the assertion fails, an {@code AssertionError} will be thrown, indicating a programming error.","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"     * @param directory the directory where group files should be stored","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws AssertionError if the provided directory is null or empty","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"hafizuddin-a"},"content":"    public static void setGroupsDirectory(String directory) {","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"        assert directory !\u003d null \u0026\u0026 !directory.isEmpty() : \"Groups directory cannot be null or empty\";","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"hafizuddin-a"},"content":"        groupsDirectory \u003d directory;","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"hafizuddin-a"},"content":"    public static String getGroupsDirectory() {","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"hafizuddin-a"},"content":"        return groupsDirectory;","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"hafizuddin-a":59}},{"path":"src/main/java/seedu/duke/storage/GroupNameChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke.storage;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"import java.nio.file.DirectoryStream;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"public class GroupNameChecker {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"     * Checks if a specific group name exists in the saved files.","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"     * @param groupNameToCheck the group name to check for","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"     * @return true if the group name exists, false otherwise","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"    public boolean doesGroupNameExist(String groupNameToCheck) {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"        Path groupsDirectory \u003d getGroupsDirectoryPath();","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"        if (groupsDirectory \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"        return checkGroupNameInDirectory(groupsDirectory, groupNameToCheck);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"     * Gets the Path object for the groups directory.","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"     * @return the Path object for the groups directory, or null if an error occurs","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"    private Path getGroupsDirectoryPath() {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"            return Paths.get(GroupFilePath.getGroupsDirectory());","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"            System.out.println(\"An error occurred while getting the groups directory: \" + e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"            return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"     * Checks if the given group name exists within the specified directory.","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"     * @param directoryPath    the path to the directory containing group files","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"     * @param groupNameToCheck the group name to check for","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"     * @return true if the group name exists, false otherwise","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"    private boolean checkGroupNameInDirectory(Path directoryPath, String groupNameToCheck) {","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"        try (DirectoryStream\u003cPath\u003e stream \u003d Files.newDirectoryStream(directoryPath, \"*.txt\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"            for (Path file : stream) {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"                if (extractGroupNameFromFile(file).equals(groupNameToCheck)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"                    return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"hafizuddin-a"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"hafizuddin-a"},"content":"            System.out.println(\"An error occurred while checking for the group name: \" + e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"hafizuddin-a"},"content":"        return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"hafizuddin-a"},"content":"     * Extracts the group name from a file path.","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"hafizuddin-a"},"content":"     * @param file the Path object of the file","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"hafizuddin-a"},"content":"     * @return the extracted group name","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"hafizuddin-a"},"content":"    private String extractGroupNameFromFile(Path file) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"hafizuddin-a"},"content":"        String fileName \u003d file.getFileName().toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"hafizuddin-a"},"content":"        return fileName.substring(0, fileName.lastIndexOf(\u0027.\u0027));","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"hafizuddin-a":71}},{"path":"src/main/java/seedu/duke/storage/GroupStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke.storage;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.Group;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.Money;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.User;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.Expense;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.Pair;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.CurrencyConversions;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.commands.ExpenseCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.exceptions.ExpensesException;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.exceptions.GroupDeleteException;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.exceptions.GroupLoadException;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.exceptions.GroupSaveException;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":" * Represents the storage manager for group data.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":" * Handles the saving and loading of group information to and from files.","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"public class GroupStorage {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"    public static boolean isLoading \u003d false;","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"    private static final String MEMBERS_HEADER \u003d \"Members:\";","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"    private static final String EXPENSES_HEADER \u003d \"Expenses:\";","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"mukund1403"},"content":"    private static final String EXPENSE_DELIMITER \u003d \"◇\";","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"    private static final String PAYEE_DELIMITER \u003d \":\";","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"    private static final String PAYEE_DATA_DELIMITER \u003d \",\";","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"    private final FileIO fileIO;","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"     * Constructs a GroupStorage object with the specified FileIO dependency.","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"     * @param fileIO the FileIO instance for file input/output operations","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"    public GroupStorage(FileIO fileIO) {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"        this.fileIO \u003d fileIO;","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"     * Saves the group information to a file.","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"     * @param group the group to save","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws GroupSaveException if an error occurs while saving the group information","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"hafizuddin-a"},"content":"    public void saveGroupToFile(Group group) throws GroupSaveException {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"hafizuddin-a"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"            GroupFilePath.createGroupDirectory();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"hafizuddin-a"},"content":"            String filePath \u003d GroupFilePath.getFilePath(group.getGroupName());","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"hafizuddin-a"},"content":"            BufferedWriter writer \u003d fileIO.getFileWriter(filePath);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"hafizuddin-a"},"content":"            saveGroupName(writer, group.getGroupName());","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"hafizuddin-a"},"content":"            saveMembers(writer, group.getMembers());","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"hafizuddin-a"},"content":"            saveExpenses(writer, group.getExpenseList());","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"hafizuddin-a"},"content":"            writer.close();","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"hafizuddin-a"},"content":"            throw new GroupSaveException(\"An error occurred while saving the group information.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"hafizuddin-a"},"content":"     * Saves the group name to the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"hafizuddin-a"},"content":"     * @param writer    the BufferedWriter for writing to the file","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"hafizuddin-a"},"content":"     * @param groupName the name of the group","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException if an I/O error occurs while writing to the file","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"hafizuddin-a"},"content":"    private void saveGroupName(BufferedWriter writer, String groupName) throws IOException {","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"hafizuddin-a"},"content":"        writer.write(groupName);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"hafizuddin-a"},"content":"        writer.newLine();","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"hafizuddin-a"},"content":"     * Saves the group members to the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"hafizuddin-a"},"content":"     * @param writer  the BufferedWriter for writing to the file","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"hafizuddin-a"},"content":"     * @param members the list of members in the group","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException if an I/O error occurs while writing to the file","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"hafizuddin-a"},"content":"    private void saveMembers(BufferedWriter writer, List\u003cUser\u003e members) throws IOException {","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"hafizuddin-a"},"content":"        writer.write(MEMBERS_HEADER);","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"hafizuddin-a"},"content":"        writer.newLine();","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"hafizuddin-a"},"content":"        for (User member : members) {","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"hafizuddin-a"},"content":"            writer.write(member.getName());","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"hafizuddin-a"},"content":"            writer.newLine();","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"hafizuddin-a"},"content":"     * Saves the group expenses to the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"hafizuddin-a"},"content":"     * @param writer   the BufferedWriter for writing to the file","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"hafizuddin-a"},"content":"     * @param expenses the list of expenses in the group","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException if an I/O error occurs while writing to the file","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"hafizuddin-a"},"content":"    private void saveExpenses(BufferedWriter writer, List\u003cExpense\u003e expenses) throws IOException {","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"hafizuddin-a"},"content":"        writer.write(EXPENSES_HEADER);","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"hafizuddin-a"},"content":"        writer.newLine();","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"hafizuddin-a"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"hafizuddin-a"},"content":"            StringBuilder expenseData \u003d new StringBuilder();","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"hafizuddin-a"},"content":"            expenseData.append(expense.getTotalAmount()).append(EXPENSE_DELIMITER)","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"mukund1403"},"content":"                    .append(expense.getCurrency()).append(EXPENSE_DELIMITER)","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"hafizuddin-a"},"content":"                    .append(expense.getPayerName()).append(EXPENSE_DELIMITER)","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"hafizuddin-a"},"content":"                    .append(expense.getDescription()).append(EXPENSE_DELIMITER);","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"hafizuddin-a"},"content":"            List\u003cString\u003e payeeData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"mukund1403"},"content":"            for (Pair\u003cString, Money\u003e payee : expense.getPayees()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"mukund1403"},"content":"                payeeData.add(payee.getKey() + PAYEE_DELIMITER + payee.getValue().getAmount()","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"mukund1403"},"content":"                        + PAYEE_DELIMITER + payee.getValue().getCurrency());","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"hafizuddin-a"},"content":"            expenseData.append(String.join(PAYEE_DATA_DELIMITER, payeeData));","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"hafizuddin-a"},"content":"            writer.write(expenseData.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"hafizuddin-a"},"content":"            writer.newLine();","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"hafizuddin-a"},"content":"     * Loads the group information from a file.","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"hafizuddin-a"},"content":"     * @param groupName the name of the group to load","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"hafizuddin-a"},"content":"     * @return the loaded group","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws GroupLoadException if an error occurs while loading the group information","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"hafizuddin-a"},"content":"    public Group loadGroupFromFile(String groupName) throws GroupLoadException {","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"hafizuddin-a"},"content":"        isLoading \u003d true;","lastModifiedDate":"2024-04-12"},{"lineNumber":135,"author":{"gitId":"hafizuddin-a"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"hafizuddin-a"},"content":"            String filePath \u003d GroupFilePath.getFilePath(groupName);","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"hafizuddin-a"},"content":"            BufferedReader reader \u003d fileIO.getFileReader(filePath);","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"hafizuddin-a"},"content":"            Group group \u003d loadGroupName(reader);","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"hafizuddin-a"},"content":"            if (group \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"hafizuddin-a"},"content":"                throw new GroupLoadException(\"Invalid group data file. Unable to load group name.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":142,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"hafizuddin-a"},"content":"            try {","lastModifiedDate":"2024-04-13"},{"lineNumber":145,"author":{"gitId":"hafizuddin-a"},"content":"                loadMembers(reader, group);","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"hafizuddin-a"},"content":"                loadExpenses(reader, group);","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"hafizuddin-a"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":148,"author":{"gitId":"hafizuddin-a"},"content":"                throw new GroupLoadException(\"Error loading group members or expenses: \" + e.getMessage());","lastModifiedDate":"2024-04-13"},{"lineNumber":149,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"hafizuddin-a"},"content":"            reader.close();","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"hafizuddin-a"},"content":"            return group;","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"hafizuddin-a"},"content":"            throw new GroupLoadException(\"An error occurred while loading the group: \" + e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"hafizuddin-a"},"content":"            throw new GroupLoadException(\"An unexpected error occurred while loading the group: \" + e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"hafizuddin-a"},"content":"        } finally {","lastModifiedDate":"2024-04-12"},{"lineNumber":158,"author":{"gitId":"hafizuddin-a"},"content":"            isLoading \u003d false;","lastModifiedDate":"2024-04-12"},{"lineNumber":159,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"hafizuddin-a"},"content":"     * Loads the group name from the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"hafizuddin-a"},"content":"     * @param reader the BufferedReader for reading from the file","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"hafizuddin-a"},"content":"     * @return the loaded group","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException if an I/O error occurs while reading from the file","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"hafizuddin-a"},"content":"    private Group loadGroupName(BufferedReader reader) throws IOException {","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"hafizuddin-a"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"hafizuddin-a"},"content":"        if (line !\u003d null \u0026\u0026 !line.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"hafizuddin-a"},"content":"            return new Group(line.trim());","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"hafizuddin-a"},"content":"        return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"hafizuddin-a"},"content":"     * Loads the group members from the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":179,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":180,"author":{"gitId":"hafizuddin-a"},"content":"     * @param reader the BufferedReader for reading from the file","lastModifiedDate":"2024-03-30"},{"lineNumber":181,"author":{"gitId":"hafizuddin-a"},"content":"     * @param group  the group to add the loaded members to","lastModifiedDate":"2024-03-30"},{"lineNumber":182,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException if an I/O error occurs while reading from the file","lastModifiedDate":"2024-03-30"},{"lineNumber":183,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":184,"author":{"gitId":"hafizuddin-a"},"content":"    private void loadMembers(BufferedReader reader, Group group) throws IOException {","lastModifiedDate":"2024-03-30"},{"lineNumber":185,"author":{"gitId":"hafizuddin-a"},"content":"        String header \u003d reader.readLine();","lastModifiedDate":"2024-04-13"},{"lineNumber":186,"author":{"gitId":"hafizuddin-a"},"content":"        if (header \u003d\u003d null || !header.equals(MEMBERS_HEADER)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":187,"author":{"gitId":"hafizuddin-a"},"content":"            throw new IOException(\"Invalid group data file. Missing or invalid \u0027Members:\u0027 header.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":188,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":189,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"hafizuddin-a"},"content":"        String line;","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"hafizuddin-a"},"content":"        while ((line \u003d reader.readLine()) !\u003d null \u0026\u0026 !line.equals(EXPENSES_HEADER)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"hafizuddin-a"},"content":"            group.addMember(line);","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":195,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":197,"author":{"gitId":"hafizuddin-a"},"content":"     * Loads the group expenses from the file.","lastModifiedDate":"2024-03-30"},{"lineNumber":198,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":199,"author":{"gitId":"hafizuddin-a"},"content":"     * @param reader the BufferedReader for reading from the file","lastModifiedDate":"2024-03-30"},{"lineNumber":200,"author":{"gitId":"hafizuddin-a"},"content":"     * @param group  the group to add the loaded expenses to","lastModifiedDate":"2024-03-30"},{"lineNumber":201,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws IOException if an I/O error occurs while reading from the file","lastModifiedDate":"2024-03-30"},{"lineNumber":202,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":203,"author":{"gitId":"mukund1403"},"content":"    private void loadExpenses(BufferedReader reader, Group group) throws IOException, ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":204,"author":{"gitId":"hafizuddin-a"},"content":"        String line;","lastModifiedDate":"2024-03-30"},{"lineNumber":205,"author":{"gitId":"hafizuddin-a"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"mukund1403"},"content":"            String[] expenseData \u003d line.split(EXPENSE_DELIMITER, 5);","lastModifiedDate":"2024-04-14"},{"lineNumber":207,"author":{"gitId":"hafizuddin-a"},"content":"            float totalAmount \u003d Float.parseFloat(expenseData[0]);","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"mukund1403"},"content":"            String currencyString \u003d expenseData[1];","lastModifiedDate":"2024-04-14"},{"lineNumber":209,"author":{"gitId":"mukund1403"},"content":"            String payerName \u003d expenseData[2];","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"mukund1403"},"content":"            String description \u003d expenseData[3];","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"mukund1403"},"content":"            String[] payeeData \u003d expenseData[4].split(PAYEE_DATA_DELIMITER);","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":213,"author":{"gitId":"mukund1403"},"content":"            CurrencyConversions currency \u003d ExpenseCommand.getCurrency(currencyString);","lastModifiedDate":"2024-04-14"},{"lineNumber":214,"author":{"gitId":"mukund1403"},"content":"            ArrayList\u003cPair\u003cString, Money\u003e\u003e payeeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"hafizuddin-a"},"content":"            for (String payee : payeeData) {","lastModifiedDate":"2024-03-30"},{"lineNumber":216,"author":{"gitId":"hafizuddin-a"},"content":"                String[] payeeInfo \u003d payee.split(PAYEE_DELIMITER);","lastModifiedDate":"2024-03-30"},{"lineNumber":217,"author":{"gitId":"hafizuddin-a"},"content":"                String payeeName \u003d payeeInfo[0];","lastModifiedDate":"2024-03-30"},{"lineNumber":218,"author":{"gitId":"hafizuddin-a"},"content":"                float amountDue \u003d Float.parseFloat(payeeInfo[1]);","lastModifiedDate":"2024-03-30"},{"lineNumber":219,"author":{"gitId":"mukund1403"},"content":"                Money amountAndCurrency \u003d new Money(amountDue, currency);","lastModifiedDate":"2024-04-14"},{"lineNumber":220,"author":{"gitId":"mukund1403"},"content":"                payeeList.add(new Pair\u003c\u003e(payeeName, amountAndCurrency));","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":222,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":223,"author":{"gitId":"hafizuddin-a"},"content":"            try {","lastModifiedDate":"2024-03-30"},{"lineNumber":224,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"mukund1403"},"content":"                Money amountAndCurrency \u003d new Money(totalAmount, currency);","lastModifiedDate":"2024-04-14"},{"lineNumber":226,"author":{"gitId":"mukund1403"},"content":"                Expense expense \u003d new Expense(false, payerName, description, amountAndCurrency, payeeList);","lastModifiedDate":"2024-04-14"},{"lineNumber":227,"author":{"gitId":"hafizuddin-a"},"content":"                group.addExpense(expense);","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"hafizuddin-a"},"content":"            } catch (ExpensesException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":229,"author":{"gitId":"hafizuddin-a"},"content":"                System.out.println(\"Error loading expense: \" + e.getMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":230,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":231,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":234,"author":{"gitId":"hafizuddin-a"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":235,"author":{"gitId":"hafizuddin-a"},"content":"     * Deletes the group file for the specified group name.","lastModifiedDate":"2024-04-14"},{"lineNumber":236,"author":{"gitId":"hafizuddin-a"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":237,"author":{"gitId":"hafizuddin-a"},"content":"     * @param groupName the name of the group whose file needs to be deleted","lastModifiedDate":"2024-04-14"},{"lineNumber":238,"author":{"gitId":"hafizuddin-a"},"content":"     * @throws GroupDeleteException if an error occurs while deleting the group file","lastModifiedDate":"2024-04-14"},{"lineNumber":239,"author":{"gitId":"hafizuddin-a"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":240,"author":{"gitId":"hafizuddin-a"},"content":"    public void deleteGroupFile(String groupName) throws GroupDeleteException {","lastModifiedDate":"2024-04-14"},{"lineNumber":241,"author":{"gitId":"hafizuddin-a"},"content":"        try {","lastModifiedDate":"2024-04-14"},{"lineNumber":242,"author":{"gitId":"hafizuddin-a"},"content":"            String filePath \u003d GroupFilePath.getFilePath(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":243,"author":{"gitId":"hafizuddin-a"},"content":"            boolean deleted \u003d fileIO.deleteFile(filePath);","lastModifiedDate":"2024-04-14"},{"lineNumber":244,"author":{"gitId":"hafizuddin-a"},"content":"            if (!deleted) {","lastModifiedDate":"2024-04-14"},{"lineNumber":245,"author":{"gitId":"hafizuddin-a"},"content":"                throw new GroupDeleteException(\"Failed to delete the group file.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":246,"author":{"gitId":"hafizuddin-a"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":247,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":248,"author":{"gitId":"hafizuddin-a"},"content":"            throw new GroupDeleteException(\"An error occurred while deleting the group file: \" + e.getMessage());","lastModifiedDate":"2024-04-14"},{"lineNumber":249,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":250,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":251,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"hafizuddin-a":225,"mukund1403":26}},{"path":"src/test/java/seedu/duke/AddUserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"MonkeScripts"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"public class AddUserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"    public void testUser() {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"            User user \u003d new User(\"John\");","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"            assertEquals(\"John\", user.getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"MonkeScripts"},"content":"            fail(\"Exception occurred while creating a User object: \" + e.getMessage());","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"    public void testAddUserToGroup() {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"MonkeScripts"},"content":"        String groupName \u003d \"TestGroup\";","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"MonkeScripts"},"content":"        Optional\u003cGroup\u003e group \u003d Group.getOrCreateGroup(groupName);","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"MonkeScripts"},"content":"        if (group.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"MonkeScripts"},"content":"            System.out.println(\"Group does not exist.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"MonkeScripts"},"content":"            return;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"MonkeScripts"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"MonkeScripts"},"content":"        User user \u003d group.get().addMember(\"TestUser\");","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"MonkeScripts"},"content":"        assertTrue(group.get().getMembers().contains(user), \"User was not added to the group\");","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"MonkeScripts":12,"avrilgk":3,"hafizuddin-a":23}},{"path":"src/test/java/seedu/duke/BalanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cohii2"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Cohii2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.exceptions.ExpensesException;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"Cohii2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Cohii2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Cohii2"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"Cohii2"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Cohii2"},"content":"//@@author Cohii2","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Cohii2"},"content":"public class BalanceTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Cohii2"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Cohii2"},"content":"    public void testConstructor() throws ExpensesException {","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Cohii2"},"content":"        List\u003cUser\u003e users \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Cohii2"},"content":"        users.add(new User(\"member1\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Cohii2"},"content":"        users.add(new User(\"member2\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Cohii2"},"content":"        users.add(new User(\"member3\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Cohii2"},"content":"        List\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Cohii2"},"content":"        expenses.add(new Expense(true, \"member1\", \"expense1\", 20f,","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"Cohii2"},"content":"                new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"Cohii2"},"content":"                        new Pair\u003c\u003e(\"member2\", 5.0f),","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"Cohii2"},"content":"                        new Pair\u003c\u003e(\"member3\", 10.0f)","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"Cohii2"},"content":"                ))));","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"Cohii2"},"content":"        expenses.add(new Expense(\"member2\", \"expense2\", 30f,","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"Cohii2"},"content":"                new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"Cohii2"},"content":"                        new Pair\u003c\u003e(\"member1\", 10.0f),","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"Cohii2"},"content":"                        new Pair\u003c\u003e(\"member3\", 10.0f)","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"Cohii2"},"content":"                ))));","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"Cohii2"},"content":"        expenses.add(new Expense(\"member3\", \"expense3\", 100f,","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Cohii2"},"content":"                new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"Cohii2"},"content":"                        new Pair\u003c\u003e(\"member1\", 100.0f)","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"Cohii2"},"content":"                ))));","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Cohii2"},"content":"        Balance member1Balance \u003d new Balance(\"member1\", expenses, users);","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Cohii2"},"content":"        member1Balance.printBalance();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Cohii2"},"content":"        Balance member2Balance \u003d new Balance(\"member2\", expenses, users);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Cohii2"},"content":"        member2Balance.printBalance();","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Cohii2"},"content":"        Balance member3Balance \u003d new Balance(\"member3\", expenses, users);","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Cohii2"},"content":"        member3Balance.printBalance();","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Cohii2"},"content":"        assertEquals(-5.0f, member1Balance.getBalanceList().get(\"member2\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"Cohii2"},"content":"        assertEquals(-90.0f, member1Balance.getBalanceList().get(\"member3\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Cohii2"},"content":"        assertEquals(5.0f, member2Balance.getBalanceList().get(\"member1\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"Cohii2"},"content":"        assertEquals(10.0f, member2Balance.getBalanceList().get(\"member3\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Cohii2"},"content":"        assertEquals(90.0f, member3Balance.getBalanceList().get(\"member1\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"Cohii2"},"content":"        assertEquals(-10.0f, member3Balance.getBalanceList().get(\"member2\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Cohii2"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Cohii2":51,"mukund1403":2}},{"path":"src/test/java/seedu/duke/CurrencyConversionsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MonkeScripts"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"MonkeScripts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"MonkeScripts"},"content":"public class CurrencyConversionsTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"MonkeScripts"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"MonkeScripts"},"content":"    void testCurrencyConversions() {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.AUD.getName().equals(\"AUD\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.AUD.getRate() \u003d\u003d 1.12);","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.AUD.getInverseRate() \u003d\u003d 1.00 / 1.12);","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.USD.getName().equals(\"USD\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.USD.getRate() \u003d\u003d 0.74);","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.RMB.getName().equals(\"RMB\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.RMB.getRate() \u003d\u003d 5.35);","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.EUR.getName().equals(\"EUR\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.EUR.getRate() \u003d\u003d 0.687);","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.JPY.getName().equals(\"JPY\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.JPY.getRate() \u003d\u003d 112.12);","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.MYR.getName().equals(\"MYR\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.MYR.getRate() \u003d\u003d 3.50);","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.SGD.getName().equals(\"SGD\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"MonkeScripts"},"content":"        assert (CurrencyConversions.SGD.getRate() \u003d\u003d 1.00);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"MonkeScripts"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"MonkeScripts":24}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"public class DukeTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"    public void groupTest() {","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"        // test code here","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"avrilgk":3,"-":7}},{"path":"src/test/java/seedu/duke/ExpenseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mukund1403"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"mukund1403"},"content":"//@@author mukund1403","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"mukund1403"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"mukund1403"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.commands.ExpenseCommand;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"mukund1403"},"content":"import seedu.duke.exceptions.ExpensesException;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"mukund1403"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"mukund1403"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"mukund1403"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"mukund1403"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"mukund1403"},"content":"class ExpenseTest{","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"mukund1403"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"mukund1403"},"content":"    void newExpenseTest() throws ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"mukund1403"},"content":"        ArrayList\u003cPair\u003cString, Money\u003e\u003e payees \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"mukund1403"},"content":"                new Pair\u003c\u003e(\"cohii\", new Money(2.0f, CurrencyConversions.SGD)),","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"mukund1403"},"content":"                new Pair\u003c\u003e(\"shao\",  new Money(3.2f, CurrencyConversions.SGD)),","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"mukund1403"},"content":"                new Pair\u003c\u003e(\"avril\", new Money(1.0f, CurrencyConversions.SGD)),","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"mukund1403"},"content":"                new Pair\u003c\u003e(\"hafiz\", new Money(2.0f, CurrencyConversions.SGD)),","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"mukund1403"},"content":"                new Pair\u003c\u003e(\"mukund\", new Money(1.8f, CurrencyConversions.SGD))","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"mukund1403"},"content":"        ));","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"mukund1403"},"content":"        Money totalAmountAndCurrency \u003d new Money(10,CurrencyConversions.SGD);","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"mukund1403"},"content":"        Expense testExpense1 \u003d new Expense(true,\"mukund\",\"disneyland\",","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"mukund1403"},"content":"                totalAmountAndCurrency, payees);","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"mukund1403"},"content":"        assertEquals(testExpense1.getPayees(),payees);","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"mukund1403"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"mukund1403"},"content":"    public void amountNotFloatTest() {","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"mukund1403"},"content":"        ArrayList\u003cString\u003e amountArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"mukund1403"},"content":"        amountArrayList.add(\"b\");","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"mukund1403"},"content":"        HashMap\u003cString,ArrayList\u003cString\u003e\u003e params \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"mukund1403"},"content":"        params.put(\"amount\",amountArrayList);","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"mukund1403"},"content":"        Exception e \u003d Assertions.assertThrows(ExpensesException.class,","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"mukund1403"},"content":"                () -\u003e ExpenseCommand.getTotal(params),","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"mukund1403"},"content":"                \"Function should throw Expenses exception since exception occured in expenses class.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"mukund1403"},"content":"        assertEquals(\"Re-enter expense with amount as a proper number. \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"mukund1403"},"content":"                \"(Good bug to start with tbh!)\", e.getMessage(),","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"mukund1403"},"content":"                \"Exception message should indicate that amount entered was not a number\");","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"mukund1403"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"mukund1403"},"content":"    public void listIndexGreaterTest(){","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"mukund1403"},"content":"        String listIndex \u003d \"20\";","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"mukund1403"},"content":"        int listSize \u003d 2;","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"mukund1403"},"content":"        Exception e \u003d Assertions.assertThrows(ExpensesException.class,","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"mukund1403"},"content":"                () -\u003e ExpenseCommand.getListIndex(listIndex, listSize),","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"mukund1403"},"content":"                \"Function should throw ExpensesException\");","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"mukund1403"},"content":"        assertEquals(\"List index is greater than list size\",e.getMessage(),","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"mukund1403"},"content":"                \"Exception message should indicate that listIndex entered was greater than list size.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"mukund1403"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"mukund1403"},"content":"    public void listIndexNegativeTest(){","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"mukund1403"},"content":"        String listIndex \u003d \"-1\";","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"mukund1403"},"content":"        int listSize \u003d 2;","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"mukund1403"},"content":"        Exception e \u003d Assertions.assertThrows(ExpensesException.class,","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"mukund1403"},"content":"                () -\u003e ExpenseCommand.getListIndex(listIndex, listSize),","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"mukund1403"},"content":"                \"Function should throw ExpensesException\");","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"mukund1403"},"content":"        assertEquals(\"List index cannot be 0 or negative\",e.getMessage(),","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"mukund1403"},"content":"                \"Exception message should indicate that listIndex entered was less than or equal to 0.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"mukund1403"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"mukund1403"},"content":"    public void listIndexNotIntegerTest(){","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"mukund1403"},"content":"        String listIndex1 \u003d \"a\";","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"mukund1403"},"content":"        int listSize \u003d 2;","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"mukund1403"},"content":"        Exception e1 \u003d Assertions.assertThrows(ExpensesException.class,","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"mukund1403"},"content":"                () -\u003e ExpenseCommand.getListIndex(listIndex1, listSize),","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"mukund1403"},"content":"                \"Function should throw ExpensesException\");","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"mukund1403"},"content":"        assertEquals(\"Enter a list index that is an Integer\",e1.getMessage(),","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"mukund1403"},"content":"                \"Exception message should indicate that listIndex entered was not an integer.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"mukund1403"},"content":"        String listIndex2 \u003d \"5.0\";","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"mukund1403"},"content":"        Exception e2 \u003d Assertions.assertThrows(ExpensesException.class,","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"mukund1403"},"content":"                () -\u003e ExpenseCommand.getListIndex(listIndex1, listSize),","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"mukund1403"},"content":"                \"Function should throw ExpensesException\");","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"mukund1403"},"content":"        assertEquals(\"Enter a list index that is an Integer\",e2.getMessage(),","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"mukund1403"},"content":"                \"Exception message should indicate that listIndex entered was not an integer.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"mukund1403"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"mukund1403"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"mukund1403"},"content":"    public void unequalExpenseTest() throws ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"mukund1403"},"content":"        ArrayList\u003cString\u003e payeeList \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"mukund1403"},"content":"                (\"cohii\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"mukund1403"},"content":"                (\"shao 1\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"mukund1403"},"content":"                (\"avril 5.5\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"mukund1403"},"content":"                (\"hafiz\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"mukund1403"},"content":"                (\"mukund 2\")","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"mukund1403"},"content":"        ));","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"mukund1403"},"content":"        ArrayList\u003cPair\u003cString, Money\u003e\u003e payees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"mukund1403"},"content":"        Money totalAmount \u003d new Money(10,CurrencyConversions.SGD);","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"mukund1403"},"content":"        String payerName \u003d \"mukund\";","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"mukund1403"},"content":"        String argument \u003d \"disneyland\";","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"mukund1403"},"content":"        Exception e \u003d Assertions.assertThrows(ExpensesException.class,","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"mukund1403"},"content":"                () -\u003e ExpenseCommand.addUnequalExpense(payeeList, payees, totalAmount, payerName, argument),","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"mukund1403"},"content":"                \"Function should throw ExpensesException\");","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"mukund1403"},"content":"        assertEquals(\"Amount due for payee with name cohii\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"mukund1403"},"content":"                \" is empty. Enter it and try again\", e.getMessage(),","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"mukund1403"},"content":"                \"Exception message should indicate that amount for user has not been entered\");","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"mukund1403"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"mukund1403"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"mukund1403":109}},{"path":"src/test/java/seedu/duke/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"//@@author avrilgk","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"public class GroupTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"    public void setup() {","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"        // Clear all groups and reset the current group name before each test","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"        Group.groups.clear();","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"        Group.currentGroupName \u003d Optional.empty();","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"    public void testGetOrCreateGroup() {","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"        String groupName \u003d \"TestGroup\";","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"        Optional\u003cGroup\u003e group \u003d Group.getOrCreateGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"        assertTrue(group.isPresent(), \"Group should be created\");","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"        assertEquals(groupName, group.get().getGroupName(), \"Group name should match the expected name\");","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"    public void testEnterGroup() {","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"        String groupName \u003d \"TestGroup\";","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"        Group.getOrCreateGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"        Group.enterGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"        assertEquals(groupName, Group.currentGroupName.get(), \"Current group name should match the expected name\");","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"    public void testExitGroup() {","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"        String groupName \u003d \"TestGroup\";","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"        Group.getOrCreateGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"avrilgk"},"content":"        Group.enterGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"        Group.exitGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"avrilgk"},"content":"        assertTrue(Group.currentGroupName.isEmpty(), \"Current group name should be empty\");","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"    public void testNullGroup() {","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"        String groupName \u003d \"TestGroup\";","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"        Group.getOrCreateGroup(groupName);","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"avrilgk"},"content":"        Group.enterGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"avrilgk"},"content":"        Group.exitGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"avrilgk"},"content":"        Group.exitGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"avrilgk"},"content":"        assertTrue(Group.currentGroupName.isEmpty(), \"Current group name should be empty\");","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"avrilgk"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"avrilgk"},"content":"    public void testAddMember() {","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"avrilgk"},"content":"        String groupName \u003d \"TestGroup\";","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"avrilgk"},"content":"        Group.getOrCreateGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"avrilgk"},"content":"        Group.enterGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"avrilgk"},"content":"        Group.getCurrentGroup().get().addMember(\"Alice\");","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"avrilgk"},"content":"        assertTrue(Group.getCurrentGroup().get().isMember(\"Alice\"), \"Alice should be a member of the group\");","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"avrilgk"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"avrilgk"},"content":"    public void testAddMultipleMembers() {","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"avrilgk"},"content":"        String groupName \u003d \"TestGroup\";","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"avrilgk"},"content":"        Group.getOrCreateGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"avrilgk"},"content":"        Group.enterGroup(groupName);","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"avrilgk"},"content":"        Group.getCurrentGroup().get().addMember(\"Alice\");","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"avrilgk"},"content":"        Group.getCurrentGroup().get().addMember(\"Bob\");","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"avrilgk"},"content":"        assertTrue(Group.getCurrentGroup().get().isMember(\"Alice\"), \"Alice should be a member of the group\");","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"avrilgk"},"content":"        assertTrue(Group.getCurrentGroup().get().isMember(\"Bob\"), \"Bob should be a member of the group\");","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"avrilgk":75}},{"path":"src/test/java/seedu/duke/HelpTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MonkeScripts"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"MonkeScripts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"MonkeScripts"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"MonkeScripts"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"MonkeScripts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"MonkeScripts"},"content":"public class HelpTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"MonkeScripts"},"content":"    private static final String prompt \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"MonkeScripts"},"content":"            \"Welcome, here is a list of commands:\\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"MonkeScripts"},"content":"                    \"help: Access help menu.\\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"MonkeScripts"},"content":"                    \"create \u003cname\u003e: Create a group.\\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"MonkeScripts"},"content":"                    \"exit \u003cname\u003e: Exit current group.\\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"MonkeScripts"},"content":"                    \"member \u003cname\u003e : Add a member to the group.\\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"MonkeScripts"},"content":"                    \"expense \u003cdescription\u003e /amount \u003camount\u003e /paid \u003cpaid_by\u003e /user \u003cuser_1\u003e /user \u003cuser_2\u003e ...: \" +","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"MonkeScripts"},"content":"                    \"Add an expense SPLIT EQUALLY.\\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"MonkeScripts"},"content":"                    \"expense \u003cdescription\u003e /unequal /amount \u003camount\u003e /paid \u003cpaid_by\u003e \" +","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"MonkeScripts"},"content":"                    \"/user \u003cuser_1\u003e \u003camount_owed\u003e /user \u003cuser_2\u003e \u003camount owed\u003e ...: Add an expense SPLIT UNEQUALLY.\\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"MonkeScripts"},"content":"                    \"list: List all expenses in the group.\\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"MonkeScripts"},"content":"                    \"balance \u003cuser_name\u003e: Show user\u0027s balance.\\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"MonkeScripts"},"content":"                    \"luck : luck is in the air tonight\";","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"MonkeScripts"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"MonkeScripts"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"MonkeScripts"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"MonkeScripts"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"MonkeScripts"},"content":"    public void testPrint() {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"MonkeScripts"},"content":"        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"MonkeScripts"},"content":"        PrintStream ps \u003d new PrintStream(baos);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"MonkeScripts"},"content":"        System.setOut(ps);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"MonkeScripts"},"content":"        printHelp();","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"MonkeScripts"},"content":"        String output \u003d baos.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"MonkeScripts"},"content":"        assertEquals(prompt, output);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"MonkeScripts"},"content":"    static void printHelp() {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"MonkeScripts"},"content":"        System.out.print(prompt);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"MonkeScripts"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"MonkeScripts":40}},{"path":"src/test/java/seedu/duke/MoneyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MonkeScripts"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"MonkeScripts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"MonkeScripts"},"content":"//@@author MonkeScripts","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"MonkeScripts"},"content":"public class MoneyTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"MonkeScripts"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"MonkeScripts"},"content":"    void testMoney() {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"MonkeScripts"},"content":"        Money a \u003d new Money(10.00F, CurrencyConversions.MYR);","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"MonkeScripts"},"content":"        assert(a.getAmount() \u003d\u003d 10.00);","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"MonkeScripts"},"content":"        assert(a.getCurrency().equals(CurrencyConversions.MYR)) ;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"MonkeScripts"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"MonkeScripts"},"content":"    void testAddition() {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"MonkeScripts"},"content":"        Money sg \u003d new Money(10.00F, CurrencyConversions.SGD);","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"MonkeScripts"},"content":"        Money malaysia \u003d new Money(10.00F, CurrencyConversions.MYR);","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"MonkeScripts"},"content":"        //total in SGD","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"MonkeScripts"},"content":"        Money total \u003d sg.addition(malaysia, CurrencyConversions.SGD);","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"MonkeScripts"},"content":"        System.out.println(total.getAmount());","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"MonkeScripts"},"content":"        assert(total.getAmount() \u003d\u003d 10.00F * CurrencyConversions.SGD.getRate()","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"MonkeScripts"},"content":"                + 10.00F * CurrencyConversions.MYR.getInverseRate());","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"MonkeScripts"},"content":"        assert(total.getCurrency().equals(CurrencyConversions.SGD));","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"MonkeScripts"},"content":"        assert(total.getAmount() \u003d\u003d sg.convertToSGD().getAmount()","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"MonkeScripts"},"content":"                + malaysia.convertToSGD().getAmount());","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"MonkeScripts"},"content":"        assert(total.getCurrency().equals(CurrencyConversions.SGD));","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"MonkeScripts"},"content":"        //total in MYR","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"MonkeScripts"},"content":"        total \u003d sg.addition(malaysia, CurrencyConversions.MYR);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"MonkeScripts"},"content":"        assert(total.getAmount() \u003d\u003d 10.00 * CurrencyConversions.MYR.getRate()","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"MonkeScripts"},"content":"                + 10.00);","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"MonkeScripts"},"content":"        assert(total.getAmount() \u003d\u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"MonkeScripts"},"content":"                sg.convertToOther(CurrencyConversions.MYR).getAmount() + malaysia.getAmount());","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"MonkeScripts"},"content":"        assert(total.getCurrency().equals(CurrencyConversions.MYR));","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"MonkeScripts"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"MonkeScripts"},"content":"    void testMultiplication() {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"MonkeScripts"},"content":"        Money jap \u003d new Money(10000.00F, CurrencyConversions.JPY);","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"MonkeScripts"},"content":"        //multiplied by 3-fold and then converted to euro","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"MonkeScripts"},"content":"        Money multiplied \u003d jap.multiplication(3, CurrencyConversions.EUR);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"MonkeScripts"},"content":"        assert(multiplied.getAmount() \u003d\u003d new Money(","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"MonkeScripts"},"content":"                30000.00F, CurrencyConversions.JPY).","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"MonkeScripts"},"content":"                convertToOther(CurrencyConversions.EUR).getAmount());","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"MonkeScripts"},"content":"        assert(multiplied.getCurrency().equals(CurrencyConversions.EUR));","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"MonkeScripts"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"MonkeScripts"},"content":"    void testAdditionAndMultiplication() {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"MonkeScripts"},"content":"        Money sg \u003d new Money(10.00F, CurrencyConversions.SGD);","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"MonkeScripts"},"content":"        Money malaysia \u003d new Money(10.00F, CurrencyConversions.MYR);","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"MonkeScripts"},"content":"        //compute total \u003d sg + 3 * malaysia, converted to euro;","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"MonkeScripts"},"content":"        Money total \u003d sg.addition(malaysia.multiplication(","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"MonkeScripts"},"content":"                3, CurrencyConversions.MYR), CurrencyConversions.EUR);","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"MonkeScripts"},"content":"        assert(total.getAmount() \u003d\u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"MonkeScripts"},"content":"                sg.addition(new Money(30.00F, CurrencyConversions.MYR),","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"MonkeScripts"},"content":"                        CurrencyConversions.EUR).getAmount());","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"MonkeScripts"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"MonkeScripts"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"MonkeScripts"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"MonkeScripts":58}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cohii2"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Cohii2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Cohii2"},"content":"public class ParserTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Cohii2"},"content":"    public void testParser(String userInput, String command, String argument,","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Cohii2"},"content":"                           String[] amount, String[] paid, String[] user){","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Cohii2"},"content":"        Parser parserFromInput \u003d new Parser(userInput);","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Cohii2"},"content":"        System.out.println(parserFromInput);","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Cohii2"},"content":"        Parser parserFromParams \u003d new Parser(userInput, command, argument, amount, paid, user);","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Cohii2"},"content":"        System.out.println(parserFromParams);","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Cohii2"},"content":"        assert parserFromInput.toString().equals(parserFromParams.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Cohii2"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Cohii2"},"content":"    public void test1(){","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Cohii2"},"content":"        testParser(\"command argument /amount amount /paid paid /user user1 /user user2\",","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Cohii2"},"content":"                \"command\", \"argument\",","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Cohii2"},"content":"                new String[]{\"amount\"},","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Cohii2"},"content":"                new String[]{\"paid\"},","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Cohii2"},"content":"                new String[]{\"user1\", \"user2\"});","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Cohii2"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Cohii2":27}},{"path":"src/test/java/seedu/duke/SettleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"avrilgk"},"content":"//@@author avrilgk","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"avrilgk"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"avrilgk"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"avrilgk"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"avrilgk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"avrilgk"},"content":"import seedu.duke.exceptions.ExpensesException;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"avrilgk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"avrilgk"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"avrilgk"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"avrilgk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"avrilgk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"avrilgk"},"content":"public class SettleTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"avrilgk"},"content":"    private Group group;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"avrilgk"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"avrilgk"},"content":"    public void setup() throws ExpensesException {","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"avrilgk"},"content":"        group \u003d new Group(\"Test Group\");","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"avrilgk"},"content":"        User payer \u003d new User(\"Alice\");","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"avrilgk"},"content":"        User payee \u003d new User(\"Bob\");","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"avrilgk"},"content":"        group.addMember(payer.getName());","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"avrilgk"},"content":"        group.addMember(payee.getName());","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"avrilgk"},"content":"        ArrayList\u003cPair\u003cString, Money\u003e\u003e payees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"avrilgk"},"content":"        Money payeeAmount \u003d new Money(50.0f,CurrencyConversions.SGD);","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"avrilgk"},"content":"        payees.add(new Pair\u003c\u003e(payee.getName(), payeeAmount));","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"avrilgk"},"content":"        Money totalAmount \u003d new Money(100.0f,CurrencyConversions.SGD);","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"avrilgk"},"content":"        Expense expense \u003d new Expense(false, payer.getName(), \"Test Expense\", totalAmount, payees);","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"avrilgk"},"content":"        group.addExpense(expense);","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"avrilgk"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"avrilgk"},"content":"    public void testSettleCreation() {","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"avrilgk"},"content":"        User payer \u003d new User(\"Alice\");","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"avrilgk"},"content":"        User payee \u003d new User(\"Bob\");","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"avrilgk"},"content":"        Settle settle \u003d new Settle(payer, payee, 50.0F);","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"avrilgk"},"content":"        assertEquals(\"Alice\", settle.getPayer());","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"avrilgk"},"content":"        assertEquals(\"Alice paid Bob 50.0\", settle.toString());","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"avrilgk"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"avrilgk"},"content":"    public void testSettleCreationWithNegativeAmount() {","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"avrilgk"},"content":"        User payer \u003d new User(\"Alice\");","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"avrilgk"},"content":"        User payee \u003d new User(\"Bob\");","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"avrilgk"},"content":"        Settle settle \u003d new Settle(payer, payee, -50.0F);","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"avrilgk"},"content":"        assertEquals(\"Alice\", settle.getPayer());","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"avrilgk"},"content":"        assertEquals(\"Alice paid Bob -50.0\", settle.toString());","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"avrilgk"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"avrilgk"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"avrilgk"},"content":"    public void testSettleCreationWithZeroAmount() {","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"avrilgk"},"content":"        User payer \u003d new User(\"Alice\");","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"avrilgk"},"content":"        User payee \u003d new User(\"Bob\");","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"avrilgk"},"content":"        Settle settle \u003d new Settle(payer, payee, 0.0F);","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"avrilgk"},"content":"        assertEquals(\"Alice\", settle.getPayer());","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"avrilgk"},"content":"        assertEquals(\"Alice paid Bob 0.0\", settle.toString());","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"avrilgk"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"avrilgk"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"avrilgk":62}},{"path":"src/test/java/seedu/duke/UserInterfaceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cohii2"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Cohii2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Cohii2"},"content":"public class UserInterfaceTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Cohii2"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Cohii2"},"content":"    public void printTest() {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Cohii2"},"content":"        UserInterface.printMessage(\"Success\", MessageType.SUCCESS);","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Cohii2"},"content":"        UserInterface.printMessage(\"Message\");","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Cohii2"},"content":"        UserInterface.printMessage(\"Error\", MessageType.ERROR);","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Cohii2"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Cohii2"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Cohii2"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Cohii2":13}},{"path":"src/test/java/seedu/duke/storage/GroupStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hafizuddin-a"},"content":"package seedu.duke.storage;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"hafizuddin-a"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"hafizuddin-a"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"hafizuddin-a"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.exceptions.GroupLoadException;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.exceptions.GroupSaveException;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"hafizuddin-a"},"content":"import seedu.duke.Group;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"hafizuddin-a"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"hafizuddin-a"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"hafizuddin-a"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"hafizuddin-a"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"hafizuddin-a"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"hafizuddin-a"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"hafizuddin-a"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"hafizuddin-a"},"content":"class GroupStorageTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"hafizuddin-a"},"content":"    private static final String TEST_GROUPS_DIRECTORY \u003d \"src/test/data/groups\";","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"hafizuddin-a"},"content":"    private GroupStorage groupStorage;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"hafizuddin-a"},"content":"    @BeforeAll","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"hafizuddin-a"},"content":"    static void setUpTestDirectory() {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"hafizuddin-a"},"content":"        GroupFilePath.setGroupsDirectory(TEST_GROUPS_DIRECTORY);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"hafizuddin-a"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"hafizuddin-a"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"hafizuddin-a"},"content":"        FileIO fileIO \u003d new FileIOImpl();","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"hafizuddin-a"},"content":"        groupStorage \u003d new GroupStorage(fileIO);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"hafizuddin-a"},"content":"        // Create the test groups directory if it doesn\u0027t exist","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"hafizuddin-a"},"content":"        Files.createDirectories(Path.of(TEST_GROUPS_DIRECTORY));","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"hafizuddin-a"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"hafizuddin-a"},"content":"    void saveGroupToFile_validGroup_successfullySaves() throws GroupSaveException {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"hafizuddin-a"},"content":"        Group group \u003d createSampleGroup();","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"hafizuddin-a"},"content":"        groupStorage.saveGroupToFile(group);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"hafizuddin-a"},"content":"        Path filePath \u003d Path.of(TEST_GROUPS_DIRECTORY, \"sample_group.txt\");","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"hafizuddin-a"},"content":"        assertTrue(Files.exists(filePath));","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"hafizuddin-a"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"hafizuddin-a"},"content":"    void loadGroupFromFile_validFile_successfullyLoads() throws IOException, GroupLoadException {","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"hafizuddin-a"},"content":"        createSampleGroupFile();","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"hafizuddin-a"},"content":"        Group loadedGroup \u003d groupStorage.loadGroupFromFile(\"sample_group\");","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"hafizuddin-a"},"content":"        assertNotNull(loadedGroup);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"hafizuddin-a"},"content":"        assertEquals(\"sample_group\", loadedGroup.getGroupName());","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"hafizuddin-a"},"content":"        assertEquals(2, loadedGroup.getMembers().size());","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"hafizuddin-a"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"hafizuddin-a"},"content":"    void loadGroupFromFile_nonExistentFile_throwsGroupLoadException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"hafizuddin-a"},"content":"        assertThrows(GroupLoadException.class, () -\u003e groupStorage.loadGroupFromFile(\"nonexistent_group\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"hafizuddin-a"},"content":"    private Group createSampleGroup() {","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"hafizuddin-a"},"content":"        Group group \u003d Group.getOrCreateGroup(\"sample_group\").get();","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"hafizuddin-a"},"content":"        group.addMember(\"user1\");","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"hafizuddin-a"},"content":"        group.addMember(\"user2\");","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"hafizuddin-a"},"content":"        return group;","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"hafizuddin-a"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"hafizuddin-a"},"content":"    private void createSampleGroupFile() throws IOException {","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"hafizuddin-a"},"content":"        Path filePath \u003d Path.of(TEST_GROUPS_DIRECTORY, \"sample_group.txt\");","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"hafizuddin-a"},"content":"        String fileContent \u003d \"sample_group\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"hafizuddin-a"},"content":"                \"Members:\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"hafizuddin-a"},"content":"                \"user1\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"hafizuddin-a"},"content":"                \"user2\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"hafizuddin-a"},"content":"                \"Expenses:\\n\";","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"hafizuddin-a"},"content":"        Files.writeString(filePath, fileContent);","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"hafizuddin-a"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"hafizuddin-a"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"hafizuddin-a":80}}]
