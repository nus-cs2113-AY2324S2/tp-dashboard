[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"# Active Edge","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SuveenE":1,"-":63}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"SuveenE"},"content":"    mainClass.set(\"ActiveEdge.ActiveEdge\")","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"SuveenE"},"content":"    archiveBaseName.set(\"ActiveEdge\")","lastModifiedDate":"2024-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SuveenE":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Praneet-25"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Seenivasaragavan Praneet |   [Github](https://github.com/Praneet-25)   | [Portfolio](docs/team/praneet25.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Manimaran Pradeep | [Github](https://github.com/pradeep-cod) | [Portfolio](docs/team/pradeep-cod.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alvin Wong | [Github](https://github.com/alvinnnnnnnnnn) | [Portfolio](docs/team/alvinnnnnnnnnn.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Suveen Ellawela | [Github](https://github.com/SuveenE) | [Portfolio](docs/team/suveene.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nikhil Babu | [Github](https://github.com/nikhil-2101) | [Portfolio](docs/team/nikhil-2101.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Praneet-25":2,"pradeep-cod":1,"alvinnnnnnnnnn":1,"nikhil-2101":2,"SuveenE":1,"-":4}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format.","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* The `TODO_NAME` cannot contain punctuation.  ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"SuveenE"},"content":"## ActiveEdge.Command Summary","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SuveenE":1,"-":41}},{"path":"src/main/java/ActiveEdge/ActiveEdge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package ActiveEdge;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Command.ActiveEdgeException;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"import ActiveEdge.Parser.Parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"import ActiveEdge.Ui.ByeUi;","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-10"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"public class ActiveEdge {","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"    public static void run() throws ActiveEdgeException {","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"        String logo \u003d \"ACTIVE EDGE\";","lastModifiedDate":"2024-03-10"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Hello from\\n\" + logo + \" AI assistant!\");","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"How can I help you today?\");","lastModifiedDate":"2024-03-10"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2024-03-10"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"        while(!input.equals(\"bye\")) {","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"SuveenE"},"content":"            parser.handleInput(input);","lastModifiedDate":"2024-03-10"},{"lineNumber":25,"author":{"gitId":"SuveenE"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2024-03-10"},{"lineNumber":26,"author":{"gitId":"SuveenE"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":27,"author":{"gitId":"SuveenE"},"content":"        ByeUi.printByeMessage();","lastModifiedDate":"2024-03-10"},{"lineNumber":28,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":29,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"    public static void main(String[] args) throws ActiveEdgeException {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"SuveenE"},"content":"        new ActiveEdge().run();","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"nikhil-2101":3,"SuveenE":30}},{"path":"src/main/java/ActiveEdge/Command/ActiveEdgeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"public class ActiveEdgeException extends Exception{","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"    public String warning;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"    public ActiveEdgeException(String warning) {","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"        this.warning \u003d warning;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"nikhil-2101":7}},{"path":"src/main/java/ActiveEdge/Command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.TaskList;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Ui.CommandUi;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"    public abstract void execute(TaskList tasks, CommandUi ui, Storage storage) throws ActiveEdgeException;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"    public abstract void execute();","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public abstract void execute(TaskList meal);","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alvinnnnnnnnnn":1,"nikhil-2101":12}},{"path":"src/main/java/ActiveEdge/Command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"import ActiveEdge.Ui.HelpUi;","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"public class HelpCommand {","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"    public HelpCommand() {","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"        HelpUi.printHelpMessage();","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"SuveenE":8}},{"path":"src/main/java/ActiveEdge/Command/ListMealsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import ActiveEdge.Ui.CommandUi;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class ListMealsCommand {","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public ListMealsCommand() {","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        CommandUi.printMealList();","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"alvinnnnnnnnnn":9}},{"path":"src/main/java/ActiveEdge/Command/LogMealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import ActiveEdge.Ui.CommandUi;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import ActiveEdge.Task.LogMeals;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import ActiveEdge.FoodData;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static ActiveEdge.Task.TaskList.tasksList;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogMealCommand {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public LogMealCommand(String input) {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if(input.trim().length() \u003e 4 \u0026\u0026 input.contains(\"m/\") \u0026\u0026 input.contains(\"s/\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            String[] parts \u003d input.substring(4).split(\"m/ | s/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            String servings \u003d parts[1].trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            String calories \u003d findCalories(description);","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            LogMeals newMeal \u003d new LogMeals(description, servings, calories);","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            tasksList.add(newMeal);","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            CommandUi.printLogMessage(newMeal, tasksList.size());","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String findCalories(String description) {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String calorieOfFood \u003d null;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (String[] food : FoodData.foodItems) {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (food[1].equalsIgnoreCase(description)) { // Match description ignoring case","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                calorieOfFood \u003d food[2];","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                break; // Stop searching once found","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return calorieOfFood;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"alvinnnnnnnnnn":35}},{"path":"src/main/java/ActiveEdge/Command/LogWaterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.LogWaterTask;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.TaskList;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Ui.CommandUi;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"public class LogWaterCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"    private int quantity;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"    public LogWaterCommand(int quantity) {","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList tasks, CommandUi ui, Storage storage) throws ActiveEdgeException {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"        if (quantity \u003c\u003d 0) {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"            throw new ActiveEdgeException(\"Invalid water quantity. Please enter a positive value.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"        LogWaterTask logWaterTask \u003d new LogWaterTask(quantity);","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"        tasks.addTask(logWaterTask);","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"        CommandUi.printWaterLogMessage(logWaterTask);","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"        // Empty implementation for the execute method inherited from Command","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList meal) {","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"        // Empty implementation for the execute method inherited from Command","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"nikhil-2101":36}},{"path":"src/main/java/ActiveEdge/Command/ShowCaloriesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import ActiveEdge.Ui.CommandUi;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class ShowCaloriesCommand {","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public ShowCaloriesCommand() {","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        CommandUi.printShowCalMessage();","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"alvinnnnnnnnnn":9}},{"path":"src/main/java/ActiveEdge/Command/ViewWaterIntakeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.TaskList;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Ui.CommandUi;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.ViewWaterTask;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"public class ViewWaterIntakeCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList tasks, CommandUi ui, Storage storage) throws ActiveEdgeException {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"        int totalWaterIntake \u003d ViewWaterTask.getTotalWaterIntake(tasks.tasksList);","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"        CommandUi.printWaterIntakeMessage(totalWaterIntake);","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"        // Empty implementation for the execute method inherited from Command","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(TaskList meal) {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"        // Empty implementation for the execute method inherited from Command","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"nikhil-2101":24}},{"path":"src/main/java/ActiveEdge/FoodData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package ActiveEdge;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class FoodData {","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    // Define the data for each food item","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    //category, food name, calories","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static String[][] foodItems \u003d {","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                {\"western\", \"fried chicken\", \"543\"},","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                {\"western\", \"chicken burger\", \"357\"},","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                {\"japanese\", \"katsu don\", \"700\"},","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                {\"japanese\", \"sushi\", \"350\"},","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                {\"korean\", \"kimchi\", \"25\"},","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                {\"indian\", \"rasam\", \"151\"}","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                //praneet pls add the rest","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    };","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"alvinnnnnnnnnn":15}},{"path":"src/main/java/ActiveEdge/Parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package ActiveEdge.Parser;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Command.ActiveEdgeException;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"import ActiveEdge.Command.HelpCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Command.LogWaterCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Command.ViewWaterIntakeCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.Task;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.TaskList;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import ActiveEdge.Command.*;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"public class Parser {","lastModifiedDate":"2024-03-10"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"    public void handleInput(String input) throws ActiveEdgeException {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"        String inputTrimmed;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"        if (input.contains(\"help\")) {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"            new HelpCommand();","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else if (input.startsWith(\"log\")) {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"            String[] parts \u003d input.substring(4).split(\" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"            inputTrimmed \u003d parts[1].trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"            if (inputTrimmed.startsWith(\"w\")) {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"                if (parts.length \u003c 3) {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"                    System.out.println(\"Invalid log water command format. Example: log w/500\");","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"                    return;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"                String quantityString \u003d parts[2];","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"                try {","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"                    int quantity \u003d Integer.parseInt(quantityString);","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"                    if (quantity \u003c\u003d 0) {","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"                        System.out.println(\"Water quantity must be a positive integer.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"                        return;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"                    }","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"                    LogWaterCommand logWaterCommand \u003d new LogWaterCommand(quantity);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"                    logWaterCommand.execute(new TaskList(), null, null);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"                    System.out.println(\"Invalid water quantity. Please provide a valid integer.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            new LogMealCommand(input);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }       else if (input.startsWith(\"list\")) {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                if (input.trim().length() \u003e 4) { //list meals","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    new ListMealsCommand();","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } else { //list both","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else if (input.startsWith(\"show\")) { //show calories, water, and goals","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            String[] parts \u003d input.split(\" \");","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"            inputTrimmed \u003d input.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (inputTrimmed.startsWith(\"c\")) { //shows calorie","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                new ShowCaloriesCommand();","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } else if (inputTrimmed.startsWith(\"w\")) { //shows water","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"                ViewWaterIntakeCommand viewWaterIntakeCommand \u003d new ViewWaterIntakeCommand();","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"nikhil-2101"},"content":"                viewWaterIntakeCommand.execute(new TaskList(), null, null);","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } else if (inputTrimmed.startsWith(\"g\")) {  //shows goals","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"SuveenE"},"content":"            } else {","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"SuveenE"},"content":"                System.out.println(\"Hello!\\n\");","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"SuveenE"},"content":"            }","lastModifiedDate":"2024-03-10"},{"lineNumber":64,"author":{"gitId":"SuveenE"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":65,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":66,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alvinnnnnnnnnn":19,"nikhil-2101":37,"SuveenE":11}},{"path":"src/main/java/ActiveEdge/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package ActiveEdge;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import ActiveEdge.Task.Task;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.io.File;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static ActiveEdge.Task.TaskList.tasksList;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class Storage {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void ensureDirectoryExists(String filePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        File file \u003d new java.io.File(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (!parentDir.exists()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void createFile(String filePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        ensureDirectoryExists(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            FileWriter file \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            file.close();","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(\" An error occurred while creating file: \" + e.getMessage());","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void saveLogsToFile(String filePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                String out \u003d tasksList.get(i).getDescription();","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                fw.write(out + \"\\n\");","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(\" An error occurred while saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void fetchData() {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String filePath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"data.txt\").toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        java.io.File file \u003d new java.io.File(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            createFile(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        try{","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                String description \u003d s.nextLine();","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                Task newTask \u003d new Task(description);","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                tasksList.add(newTask);","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(e);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"alvinnnnnnnnnn":62}},{"path":"src/main/java/ActiveEdge/Task/LogMeals.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package ActiveEdge.Task;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static ActiveEdge.Task.TaskList.tasksList;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import ActiveEdge.Task.Task;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogMeals extends Task {","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String servings;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String calories;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public LogMeals(String description, String servings, String calories) {","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        super(description);","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.servings \u003d servings;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    int servingsNum \u003d Integer.parseInt(servings);","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    int caloriesNum \u003d Integer.parseInt(calories);","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    int mealCalories \u003d servingsNum * caloriesNum;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static int totalCalories;","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public int addCalories() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if(tasksList.size()\u003d\u003d0) {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            totalCalories \u003d 0;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            totalCalories +\u003d mealCalories;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return totalCalories;","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return \"You\u0027ve logged \" + servings + \" serving of \" + super.getDescription() + \".\\n\" +","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                \"Estimated calories: \" + mealCalories +\"\\n\" +","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                \"Total calories: \" + totalCalories;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"alvinnnnnnnnnn":39}},{"path":"src/main/java/ActiveEdge/Task/LogWaterTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package ActiveEdge.Task;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"public class LogWaterTask extends Task {","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"    private int quantity;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    public LogWaterTask(int quantity) {","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"        super(\"Water intake\");","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"    public int getQuantity() {","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"        return quantity;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"nikhil-2101":15}},{"path":"src/main/java/ActiveEdge/Task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package ActiveEdge.Task;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"public class Task {","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"    protected String description;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    public Task(String description) {","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"        return this.description;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"nikhil-2101":15}},{"path":"src/main/java/ActiveEdge/Task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package ActiveEdge.Task;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"public class TaskList {","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"    // Static constant ArrayList to store Task objects","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    public static final ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public Task getTask(int index) { return tasksList.get(index); }","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public void addTask(Task task) { tasksList.add(task); }","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"        tasksList.add(task);","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasksList.size()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"            return tasksList.get(index);","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"        } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"            // Handle index out of bounds, you can throw an exception or return null","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"            throw new IndexOutOfBoundsException(\"Index is out of bounds.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"    public static int size() {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"        return tasksList.size();","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"        return null;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alvinnnnnnnnnn":4,"nikhil-2101":30}},{"path":"src/main/java/ActiveEdge/Task/ViewWaterTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package ActiveEdge.Task;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"public class ViewWaterTask {","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    public static int getTotalWaterIntake(ArrayList\u003cTask\u003e tasksList) {","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"        int totalWaterIntake \u003d 0;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"        for (Task task : tasksList) {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"            if (task instanceof LogWaterTask) {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"                totalWaterIntake +\u003d ((LogWaterTask) task).getQuantity();","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"        return totalWaterIntake;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"nikhil-2101":15}},{"path":"src/main/java/ActiveEdge/Ui/ByeUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package ActiveEdge.Ui;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"public class ByeUi {","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\" );","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"SuveenE":7}},{"path":"src/main/java/ActiveEdge/Ui/CommandUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package ActiveEdge.Ui;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static ActiveEdge.Task.TaskList.tasksList;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.LogWaterTask;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import ActiveEdge.Task.Task;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import ActiveEdge.Task.LogMeals;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class CommandUi {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void printMealList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if(tasksList.size() \u003e 0) {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(\"Here are your logged meals for today\");","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                int index \u003d 1 + i;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.println(index + \". \" + tasksList.get(i));","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(\"You have not logged any meals for today.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void printLogMessage(Task newMeal, int size) {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(newMeal);","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void printShowCalMessage() {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Today calories consumed today: \" + LogMeals.totalCalories);","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"    public static void printWaterLogMessage(LogWaterTask newWaterTask) {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Successfully logged \" + newWaterTask.getQuantity() + \" ml of water.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"    public static void printWaterIntakeMessage(int totalWaterIntake) {","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"Total water intake: \" + totalWaterIntake + \" ml\");","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alvinnnnnnnnnn":30,"nikhil-2101":12}},{"path":"src/main/java/ActiveEdge/Ui/HelpUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package ActiveEdge.Ui;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"public class HelpUi {","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\" Welcome to the Health Tracker Bot! Here are the available commands:\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"                \"\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"                \"1. Calorie Intake Tracker:\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"                \"   - log m/MEAL_NAME s/number of servings: log meals\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"                \"     Example: log m/chicken rice s/1\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"                \"   - list meals: view meals\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"                \"   - show c: view daily calories: \\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"                \"   - set goal c/NUMBER: set daily calorie goal: \\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"                \"     Example: set goal c/2000\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"                \"\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"                \"2. Water Intake Tracker:\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"                \"   - add w/QUANTITY: log water\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"                \"     Example: add w/500 (logs 500ml of water)\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"                \"   - show water intake: view water intake\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"                \"   - set goal w/NUMBER: set daily water goal\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"                \"     Example: set goal w/2000\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"                \"\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"                \"3. Goal Setting:\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"                \"   - show goals: view goals\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"SuveenE"},"content":"                \"\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"SuveenE"},"content":"                \"Additional Commands:\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"SuveenE"},"content":"                \"   - help: Shows this user guide.\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"SuveenE"},"content":"                \"   - list: Lists all logged data for the day (meals and water).\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"SuveenE"},"content":"                \"   - clear: Clears all data for the current day.\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"SuveenE"},"content":"                \"\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"SuveenE"},"content":"                \"Start tracking your health goals now! If you have any questions, feel free to ask.\" );","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"alvinnnnnnnnnn":1,"SuveenE":32}},{"path":"src/test/java/ActiveEdge/Command/AddGoalsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pradeep-cod"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"class AddGoalsCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"    void testExecute_AddCalorieGoal() {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"        AddGoalsCommand addGoalsCommand \u003d new AddGoalsCommand();","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"        String resultMessage \u003d addGoalsCommand.execute(\"calorie\", 2000);","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"        assertEquals(\"Calorie goal added: 2000\", resultMessage);","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"        // Assuming you have a method to check if the calorie goal was set correctly","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"        assertTrue(checkCalorieGoal(2000));","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"    void testExecute_AddWaterGoal() {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"        AddGoalsCommand addGoalsCommand \u003d new AddGoalsCommand();","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"        String resultMessage \u003d addGoalsCommand.execute(\"water\", 2500);","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"        assertEquals(\"Water goal added: 2500 ml\", resultMessage);","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"pradeep-cod"},"content":"        // Assuming you have a method to check if the water goal was set correctly","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"pradeep-cod"},"content":"        assertTrue(checkWaterGoal(2500));","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"pradeep-cod"},"content":"    boolean checkCalorieGoal(int expectedCalorieGoal) {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"        // Assuming there\u0027s a class or storage mechanism responsible for managing goals","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"        int storedCalorieGoal \u003d Goals.getCalorieGoal(); // Retrieve the stored calorie goal","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"        return storedCalorieGoal \u003d\u003d expectedCalorieGoal;","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"pradeep-cod":31}},{"path":"src/test/java/ActiveEdge/Command/LogMealsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import ActiveEdge.Task.LogMeals;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogMealsTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public void testAddCalories() {","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogMeals logMeals \u003d new LogMeals(\"Test Meal\", \"2\", \"100\");","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int totalCalories \u003d logMeals.addCalories();","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        assertEquals(200, totalCalories);","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public void testToString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogMeals logMeals \u003d new LogMeals(\"Test Meal\", \"2\", \"100\");","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String result \u003d logMeals.toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String expected \u003d \"You\u0027ve logged 2 serving of Test Meal.\\n\" +","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                \"Estimated calories: 200\\n\" +","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                \"Total calories: 0\"; ","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"alvinnnnnnnnnn":29}},{"path":"src/test/java/ActiveEdge/Command/LogWaterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Command.LogWaterCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.LogWaterTask;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.TaskList;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Ui.CommandUi;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"public class LogWaterCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"    private LogWaterCommand logWaterCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"    private CommandUi ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"    private Storage storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"        logWaterCommand \u003d new LogWaterCommand(500);","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"        ui \u003d new CommandUi();","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    public void testExecute() {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"        assertDoesNotThrow(() -\u003e logWaterCommand.execute(taskList, ui, storage));","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"        assertEquals(1, taskList.getTasks().size());","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"        assertTrue(taskList.getTasks().get(0) instanceof LogWaterTask);","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"        assertEquals(500, ((LogWaterTask) taskList.getTasks().get(0)).getQuantity());","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"    public void testNegativeQuantity() {","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"        LogWaterCommand negativeQuantityCommand \u003d new LogWaterCommand(-100);","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"        assertThrows(ActiveEdgeException.class, () -\u003e negativeQuantityCommand.execute(taskList, ui, storage));","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"nikhil-2101":41}},{"path":"src/test/java/ActiveEdge/Command/ShowGoalsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pradeep-cod"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"class ShowGoalsCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"    void testExecute_ShowGoals() {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"        // Assuming ShowGoalsCommand has a method `execute` that shows both calorie and water goals","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"        ShowGoalsCommand showGoalsCommand \u003d new ShowGoalsCommand();","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"        String resultMessage \u003d showGoalsCommand.execute();","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"        // Assuming the expected message format is \"Calorie goal: [calorie goal], Water goal: [water goal] ml\"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"        assertEquals(\"Calorie goal: 2000, Water goal: 2500 ml\", resultMessage);","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"pradeep-cod":16}},{"path":"src/test/java/ActiveEdge/Command/ViewWaterIntakeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package ActiveEdge.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Command.ViewWaterIntakeCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.LogWaterTask;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Task.TaskList;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Ui.CommandUi;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"import ActiveEdge.Storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"public class ViewWaterIntakeCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"    private ViewWaterIntakeCommand viewWaterIntakeCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"    private CommandUi ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"    private Storage storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"        viewWaterIntakeCommand \u003d new ViewWaterIntakeCommand();","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"        ui \u003d new CommandUi();","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    public void testExecute() {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"        taskList.addTask(new LogWaterTask(200));","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"        assertDoesNotThrow(() -\u003e viewWaterIntakeCommand.execute(taskList, ui, storage));","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"nikhil-2101":32}},{"path":"src/test/java/ActiveEdge/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package ActiveEdge;","lastModifiedDate":"2024-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SuveenE":1,"-":11}},{"path":"src/test/java/Parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package Parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"import ActiveEdge.Parser.Parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"public class ParserTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"    public void testHelpCommandPrintsHelpMessage() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"        parser.handleInput(\"help\");","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"        String expectedOutputPart \u003d \"Welcome to the Health Tracker Bot\";","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"        assertTrue(outContent.toString().contains(expectedOutputPart));","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"SuveenE":25}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"REM FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"ECHO Test passed!","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"SuveenE":2,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"#dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"#diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"#if [ $? -eq 0 ]","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"#then","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"#    echo \"Test passed!\"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"#    exit 0","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"#else","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"#    echo \"Test failed!\"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"#    exit 1","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"#fi","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     exit 0","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SuveenE":11,"-":14}}]
