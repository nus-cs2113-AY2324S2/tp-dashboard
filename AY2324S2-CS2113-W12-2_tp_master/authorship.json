[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"# ActiveEdge ü•¶üèÉ‚Äç‚ôÇ","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"Welcome aboard!","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"**ActiveEdge** is a program for a university students to manage their food intake, water intake and exercises via the Command Line Interface (CLI).","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"The purpose of this user guide is to familiarize you with the program and help you when you face a problem using it.","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"Its main job is to store and present your logs which makes maintaining a healthy lifestyle so much more convenient!","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"Useful links:","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"* [User Guide](/docs/UserGuide.md)","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"* [Developer Guide](/docs/DeveloperGuide.md)","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"* [About Us](/docs.AboutUs.md)","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"SuveenE":9,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"SuveenE"},"content":"    mainClass.set(\"ActiveEdge.ActiveEdge\")","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"    applicationDefaultJvmArgs \u003d [\"-ea\"] // Enable assertions for running the application","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"SuveenE"},"content":"    archiveBaseName.set(\"ActiveEdge\")","lastModifiedDate":"2024-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"run {","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"pradeep-cod":1,"nikhil-2101":8,"SuveenE":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Praneet-25"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Seenivasaragavan Praneet |   [Github](https://github.com/Praneet-25)   | [Portfolio](docs/team/praneet25.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"![](https://github.com/pradeep-cod/tp/blob/master/images/Pradeep.png?raw\u003dtrue) | Manimaran Pradeep | [Github](https://github.com/pradeep-cod) | [Portfolio](docs/team/pradeep-cod.md)","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Alvin Wong | [Github](https://github.com/alvinnnnnnnnnn) | [Portfolio](docs/team/alvinnnnnnnnnn.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"![](https://media.licdn.com/dms/image/C5603AQE2U6G6puOMlg/profile-displayphoto-shrink_400_400/0/1649084916125?e\u003d1717632000\u0026v\u003dbeta\u0026t\u003dZWkWIG_fmjEStiLaTS60f-LxpY21RTOuOj60HkPZiW0) | Suveen Ellawela | [Github](https://github.com/SuveenE) | [Portfolio](docs/team/suveene.md)","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nikhil Babu | [Github](https://github.com/nikhil-2101) | [Portfolio](docs/team/nikhil-2101.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Praneet-25":2,"pradeep-cod":1,"alvinnnnnnnnnn":1,"nikhil-2101":2,"SuveenE":1,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"# ActiveEdge Developer Guide ü•¶üèÉ‚Äç‚ôÇÔ∏è","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"## Table of Contents","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"    - [Purpose](#purpose)","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"    - [How to use the Developer Guide](#how-to-use-the-developer-guide)","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"- [Design \u0026 Implementation](#design--implementation)","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"    - [System Architecture](#system-architecture)","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"    - [Main Component](#main-component)","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"    - [UI Package](#ui-package)","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"    - [Parser Package](#parser-package)","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"    - [Command Package](#command-package)","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"    - [LogList Package](#entrylist-package)","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"    - [Storage Package](#storage-package)","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"- [Product Scope](#product-scope)","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"    - [Target User Profile](#target-user-profile)","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"    - [Value Proposition](#value-proposition)","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"- [User Stories](#user-stories)","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"- [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"- [Manual Testing](#instructions-for-manual-testing)","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"SuveenE"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"SuveenE"},"content":"## Introduction","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"SuveenE"},"content":"**ActiveEdge** is a program for a university students to manage their food intake, water intake and exercises via the Command Line Interface (CLI).","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"SuveenE"},"content":"### Purpose","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"SuveenE"},"content":"This document specifies the architectural and software design decisions in the implementation of **ActiveEdge**.","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"Praneet-25"},"content":"### How to Use a Developer Guide","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"Praneet-25"},"content":"Are you a newcomer?","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"Praneet-25"},"content":"No problem, navigate to the Quick Start section.","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"Praneet-25"},"content":"Feeling disoriented within the content?","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"Praneet-25"},"content":"Refer to the Table of Contents to find the appropriate pages.","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"Praneet-25"},"content":"Require assistance with the features?","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"Praneet-25"},"content":"Consult the Features section in the User Guide for thorough guidance.","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"Praneet-25"},"content":"Have inquiries for us?","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"Praneet-25"},"content":"Visit the FAQ section in the User Guide.","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"Praneet-25"},"content":"Seeking a brief overview of all features?","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"Praneet-25"},"content":"Check out the Command Summary page for a summary of all commands.","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"Praneet-25"},"content":"Uncertain about a specific term\u0027s meaning?","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"Praneet-25"},"content":"Refer to the Glossary page for clarification.","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"SuveenE"},"content":"## Quick Start","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"SuveenE"},"content":"To get started quickly with ActiveEdge,","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"SuveenE"},"content":"follow these simple steps:","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"SuveenE"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"SuveenE"},"content":"2. Down the latest version of `ActiveEdge` from [here](https://github.com/AY2324S2-CS2113-W12-2/tp/releases). ","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"SuveenE"},"content":"3. Copy the file into the folder you want to use as the home folder for your ActiveEdge.","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"SuveenE"},"content":"4. Open a command terminal, cd into the home folder you put the jar file in, and run the following command: java -jar ActiveEdge.jar. You should see a welcome screen.","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"SuveenE"},"content":"5. Type commands beside \u003e\u003e\u003e and press Enter to execute it.","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"SuveenE"},"content":"(e.g. typing ```help``` and pressing Enter will show the help page).","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"SuveenE"},"content":"## Design \u0026 implementation üèπ  ","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"SuveenE"},"content":"### System Architecture","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"SuveenE"},"content":"![System Architecture](https://github.com/SuveenE/tp/blob/master/images/System-Architecture.png?raw\u003dtrue)","lastModifiedDate":"2024-04-08"},{"lineNumber":62,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"SuveenE"},"content":"The Architecture Diagram above shows a high-level overview of the architectural design of ActiveEdge.","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"SuveenE"},"content":"Active Edge is comprised of 8 major components:","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"SuveenE"},"content":"```Main```: The entry point of the application.\\","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"SuveenE"},"content":"```UI```: A package responsible for handling user interactions, both capturing input and displaying output.\\","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"SuveenE"},"content":"```Parser```: A package that analyzes and interprets the user\u0027s input commands.\\","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"SuveenE"},"content":"```Command```: A package tasked with executing specific actions based on the user\u0027s commands.\\","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"SuveenE"},"content":"```Storage```: A package focused on persisting and retrieving all relevant data from the application\u0027s local storage system, ensuring data continuity and integrity.\\","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"SuveenE"},"content":"```LogList```: Maintains logged data throughout the application\u0027s runtime.\\","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"SuveenE"},"content":"```FoodData```: Active Edge\u0027s food database\\","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"SuveenE"},"content":"```ExerciseData```: Active Edge\u0027s exercise database\\","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"pradeep-cod"},"content":"### Generic Sequence Diagram","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"nikhil-2101"},"content":"The generic sequence diagram provides a visual representation of the interactions between various components within the","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"nikhil-2101"},"content":"ActiveEdge application. It illustrates how user commands are parsed, executed, and interact with different modules such","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"nikhil-2101"},"content":"as user interface, data storage, and task management.","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"SuveenE"},"content":"![Generic Sequence Diagram](https://github.com/SuveenE/tp/blob/master/images/Generic-Sequence-Diagram.png?raw\u003dtrue)","lastModifiedDate":"2024-04-08"},{"lineNumber":81,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"Praneet-25"},"content":"### Parser","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"Praneet-25"},"content":"The Parser components can be found within the Parser package.","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"Praneet-25"},"content":"It is responsible for parsing the input String of the user, and returning an appropriate XYZCommand class.","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"Praneet-25"},"content":"If the input is invalid, it throws exceptions to the Error package for error handling.","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"Praneet-25"},"content":"The Parser Class Diagram below shows how Execute, Parser, Error, Command classes of their respective packages work together.","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"pradeep-cod"},"content":"![Parser](https://github.com/SuveenE/tp/blob/master/images/Parser.png?raw\u003dtrue)","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"nikhil-2101"},"content":"### Command","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"nikhil-2101"},"content":"In the provided code, commands are represented as individual classes, each encapsulating a specific action or operation ","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"nikhil-2101"},"content":"within the ActiveEdge application, promoting modularity and separation of concerns.","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"SuveenE"},"content":"![Command](https://github.com/SuveenE/tp/blob/master/images/Command-Class.png?raw\u003dtrue)","lastModifiedDate":"2024-04-08"},{"lineNumber":96,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"Praneet-25"},"content":"### Storage","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"Praneet-25"},"content":"Storage is the main class responsible for file operations and data management.","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"Praneet-25"},"content":"UserDetailsList, LogHeight, and LogWeight handle user details such as height and weight logs.","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"Praneet-25"},"content":"TaskList manages various types of tasks including goals, meals, water intake, and exercises.","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"Praneet-25"},"content":"GoalTask, MealTask, WaterTask, and ExerciseTask are specific task types with their attributes.","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"Praneet-25"},"content":"AddBMICommand, AddHeightCommand, and AddWeightCommand are commands for adding BMI, height, and weight respectively.","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"Praneet-25"},"content":"The relationships depicted in the diagram are primarily composition and inheritance:","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"pradeep-cod"},"content":"![Storage](https://github.com/SuveenE/tp/blob/master/images/Storage.png?raw\u003dtrue)","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"Praneet-25"},"content":"Storage has composition relationships with UserDetailsList and TaskList as it manages instances of these classes.","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"Praneet-25"},"content":"UserDetailsList and TaskList have a composition relationship with their respective contained classes (LogHeight, LogWeight, GoalTask, MealTask, WaterTask, ExerciseTask) ","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"Praneet-25"},"content":"as they hold lists of instances of these classes. AddBMICommand, AddHeightCommand, and AddWeightCommand are standalone commands ","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"Praneet-25"},"content":"used within the Storage class but don\u0027t directly interact with the other classes in the diagram.","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"pradeep-cod"},"content":"### Main Component","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"pradeep-cod"},"content":"The ActiveEdge class serves as the main entry point for the ActiveEdge application, handling user input parsing and interaction through a command-line interface.","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"pradeep-cod"},"content":"![Main Component](https://github.com/AY2324S2-CS2113-W12-2/tp/blob/master/images/Main-component2%20UML.png?raw\u003dtrue)","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"pradeep-cod"},"content":"### UI Package","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"pradeep-cod"},"content":"The activeedge.ui package encapsulates the user interface components of the ActiveEdge application, facilitating interactions such as printing welcome messages, ","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"pradeep-cod"},"content":"logging meal and exercise data, displaying goal information, providing help instructions, and managing user queries and commands for health tracking and goal setting.","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"pradeep-cod"},"content":"![Ui Package](https://github.com/AY2324S2-CS2113-W12-2/tp/blob/master/images/Ui.png?raw\u003dtrue)","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"Praneet-25"},"content":"Under commands, there are 17 sub-components:","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"Praneet-25"},"content":"```AddBMICommand```: A command responsible for calculating and adding Body Mass Index (BMI) information.","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"Praneet-25"},"content":"```AddGoalsCommand```: A command responsible for users to set and track their fitness goals.","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"Praneet-25"},"content":"```AddHeightCommand```: A command responsible for users to input and track their height information for comprehensive health tracking.","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"Praneet-25"},"content":"```AddWeightCommand```: A command responsible for users to input and track their weight measurements to monitor their progress and achievements.","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"Praneet-25"},"content":"```ClearCommand```: A command responsible for users to clear or delete entries, such as meals, from their tracking history.","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"Praneet-25"},"content":"```DeleteTaskCommand```: A command responsible for users to delete or remove exercise tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"Praneet-25"},"content":"```FindCommand```: A command responsible for users to search specific keywords.","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"Praneet-25"},"content":"```ShowSummaryCommand```: A command responsible for users to view a summary or overview of their calorie intake,calorie burnt during exercise .","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"Praneet-25"},"content":"```ViewWaterIntakeCommand```: A command responsible for users to view and track their water intake levels.","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"alvinnnnnnnnnn"},"content":"### Task Package","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"alvinnnnnnnnnn"},"content":"This package is structured to manage and represent various types of tasks within an application, potentially for goal tracking, ","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"alvinnnnnnnnnn"},"content":"exercise logging, meal recording, and water intake monitoring. There are 3 main components of this package.","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"SuveenE"},"content":"![Ui](https://github.com/SuveenE/tp/blob/master/images/Task_package.png?raw\u003dtrue)","lastModifiedDate":"2024-04-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"alvinnnnnnnnnn"},"content":"**Base class:`Task`**","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Purpose**: Serves as the foundational class for all types of tasks. It encapsulates the common","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"alvinnnnnnnnnn"},"content":"attribute all tasks share, which is a description","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Attributes**: `description`: A `String` that provides a brief description of the task.","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Methods**: ","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"alvinnnnnnnnnn"},"content":"  + `getDescription()`","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"alvinnnnnnnnnn"},"content":"  + `toString()`","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"alvinnnnnnnnnn"},"content":"**Derived class:`GoalTask`**","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Attributes**: Stores information about goals","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Functionality**: Allows users to log their goals","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"alvinnnnnnnnnn"},"content":"**Derived class:`LogExercise`**","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Attributes**: Stores information about exercises, such as the name of food, duration, and calories burnt ","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Functionality**: Allows users to log their exercsies","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"alvinnnnnnnnnn"},"content":"**Derived class:`MealTask`**","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Attributes**: Stores information about meals, such as the name of food, number of servings, and calories","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Functionality**: Allows users to log their meals ","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"alvinnnnnnnnnn"},"content":"**Derived class:`WaterTask`**","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Attributes**: Stores information about water intake, such as the amount of water","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Functionality**: Allows users to log their water intake","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"alvinnnnnnnnnn"},"content":"**Utility class:`TaskList`**","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Purpose**: Manages a collection of `Task` objects (including all derived types).","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Attributes**: `tasksList`: A static ArrayList that stores instances of `Task` and its subclasses.","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"alvinnnnnnnnnn"},"content":"+ **Methods**:","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"alvinnnnnnnnnn"},"content":"  + `add(Task task)`","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"alvinnnnnnnnnn"},"content":"  + `delete(int index)`","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"alvinnnnnnnnnn"},"content":"  + `get()`","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"alvinnnnnnnnnn"},"content":"  + `clearTasks()`","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"alvinnnnnnnnnn"},"content":"  ","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"pradeep-cod"},"content":"Our target users are NUS university students, including fitness enthusiasts and those striving for a healthier","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"pradeep-cod"},"content":"lifestyle. They struggle with time constraints due to academic and social commitments, making it difficult to ","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"pradeep-cod"},"content":"manage nutrition and exercise. Our app aims to provide convenient calorie tracking and personalized exercise routines ","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"pradeep-cod"},"content":"tailored to their individual needs, helping them achieve their fitness goals amidst the challenges of university life.","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"nikhil-2101"},"content":"**Comprehensive Health Tracking:** Users can log various aspects of their health, including meals, water intake, exercise activities, height, and weight. This comprehensive tracking enables users to maintain a holistic view of their health behaviors.","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"nikhil-2101"},"content":"**Goal Setting and Monitoring:** The application allows users to set personalized goals for calorie intake, water consumption, and other health-related metrics. Users can track their progress towards these goals over time, fostering motivation and accountability.","lastModifiedDate":"2024-03-25"},{"lineNumber":187,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"nikhil-2101"},"content":"**Customized Logging:** Users can log specific details about their meals, exercise routines, and water intake, providing granular insights into their health habits. This customization allows for tailored tracking based on individual preferences and requirements.","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"nikhil-2101"},"content":"**Error Handling and User Guidance:** The application includes error handling mechanisms and user guidance to ensure smooth interaction and data input. This feature enhances user experience by reducing frustration and confusion during usage.","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":192,"author":{"gitId":"nikhil-2101"},"content":"**Data Persistence and Accessibility:** The application stores user data securely, allowing for easy access and retrieval across multiple sessions. This ensures that users can review their health history and progress over time, facilitating informed decision-making and goal adjustment.","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"nikhil-2101"},"content":"**Clear User Interface:** The user interface of the application is designed to be intuitive and user-friendly, enabling users to navigate and interact with the app effortlessly. This simplicity enhances user engagement and satisfaction with the overall experience.","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":201,"author":{"gitId":"pradeep-cod"},"content":"|---------|----------|---------------|------------------|","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"SuveenE"},"content":"| v1.0    |new user|see usage instructions of the app|refer to them when I forget how to use the application|","lastModifiedDate":"2024-03-23"},{"lineNumber":203,"author":{"gitId":"SuveenE"},"content":"| v1.0    |returning user|see my previous logs|see my daily logs and progress|","lastModifiedDate":"2024-03-23"},{"lineNumber":204,"author":{"gitId":"pradeep-cod"},"content":"| v1.0    |user|log calorie intake|record daily consumption to monitor deitary habits|","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"pradeep-cod"},"content":"| v1.0    | user|Log water intake|Track hydration levels throughout the day|","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"pradeep-cod"},"content":"| v2.0    |user|Search for keywords|Quickly find specific information or entries within logs|","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"pradeep-cod"},"content":"| v2.0    |user|\tDelete entries from log|\tRemove incorrect or unnecessary data from records|","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"SuveenE"},"content":"| v2.0    |user|log exercises|keep track of my physical activities|","lastModifiedDate":"2024-03-23"},{"lineNumber":209,"author":{"gitId":"pradeep-cod"},"content":"| v2.0    |user|View daily summary|Access a summary of exercise, nutrition, and hydration for the day|","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| v2.0    |new user|log in my height and weight|see what range my weight is in|","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":216,"author":{"gitId":"Praneet-25"},"content":"1. Should be portable and working on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"Praneet-25"},"content":"2. Should be able to hold up to 100 food items or list of exercises without any lag in the performance of the app  for typical usage.","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"Praneet-25"},"content":"3. The average keyboard user should complete tasks more quickly using ActiveEdge compared to a standard GUI application.","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":222,"author":{"gitId":"pradeep-cod"},"content":"* *Log* - Entering your food, water and exercise data into the tracker.","lastModifiedDate":"2024-04-13"},{"lineNumber":223,"author":{"gitId":"pradeep-cod"},"content":"* *Add* - Adding new exercises and food items to existing food and exercise database.","lastModifiedDate":"2024-04-13"},{"lineNumber":224,"author":{"gitId":"pradeep-cod"},"content":"* *List* - Listing down the users\u0027 logged entries.","lastModifiedDate":"2024-04-13"},{"lineNumber":225,"author":{"gitId":"pradeep-cod"},"content":"* *Summary* - Summarises the logged data of total water, calorie intake comparing it to the goals of the users.","lastModifiedDate":"2024-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"pradeep-cod"},"content":"1. Launching the App ","lastModifiedDate":"2024-04-13"},{"lineNumber":229,"author":{"gitId":"pradeep-cod"},"content":"    - Refer to the [Quick Start](#quick-start) to get ActiveEdge set up and running.","lastModifiedDate":"2024-04-13"},{"lineNumber":230,"author":{"gitId":"pradeep-cod"},"content":"    - Enter your height, weight, calorie and water goals when prompted.","lastModifiedDate":"2024-04-13"},{"lineNumber":231,"author":{"gitId":"pradeep-cod"},"content":"   ","lastModifiedDate":"2024-04-13"},{"lineNumber":232,"author":{"gitId":"pradeep-cod"},"content":"2. Getting help","lastModifiedDate":"2024-04-13"},{"lineNumber":233,"author":{"gitId":"pradeep-cod"},"content":"    - Run the `help` command by typing `help` and hitting `Enter` key on your keyboard.","lastModifiedDate":"2024-04-13"},{"lineNumber":234,"author":{"gitId":"pradeep-cod"},"content":"   ","lastModifiedDate":"2024-04-13"},{"lineNumber":235,"author":{"gitId":"pradeep-cod"},"content":"3. With the help guide, you can `log` or `add` meal, exercises and water to your tracker.","lastModifiedDate":"2024-04-13"},{"lineNumber":236,"author":{"gitId":"pradeep-cod"},"content":"    - Run the following commands `log m/chicken rice s/1`/ `log e/running d/1` /","lastModifiedDate":"2024-04-13"},{"lineNumber":237,"author":{"gitId":"pradeep-cod"},"content":"      `add m/[FOOD] c/[CALORIES_PER_ERVING] s/[SERVINGS]`/ ","lastModifiedDate":"2024-04-13"},{"lineNumber":238,"author":{"gitId":"pradeep-cod"},"content":"      `add e/[EXERCISES] c/[CALORIES_BURNT_PER _MIN] d/[DURATION_IN_MINUTES]`","lastModifiedDate":"2024-04-13"},{"lineNumber":239,"author":{"gitId":"pradeep-cod"},"content":"   ","lastModifiedDate":"2024-04-13"},{"lineNumber":240,"author":{"gitId":"pradeep-cod"},"content":"4. Run `list` to see your logged data.","lastModifiedDate":"2024-04-13"},{"lineNumber":241,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":242,"author":{"gitId":"pradeep-cod"},"content":"5. Use `delete` command with help of User Guide to delete any logged entries.","lastModifiedDate":"2024-04-13"},{"lineNumber":243,"author":{"gitId":"pradeep-cod"},"content":"    - Run the following commands `delete chicken rice` / `delete running`","lastModifiedDate":"2024-04-13"},{"lineNumber":244,"author":{"gitId":"pradeep-cod"},"content":"   ","lastModifiedDate":"2024-04-13"},{"lineNumber":245,"author":{"gitId":"pradeep-cod"},"content":"6. Run `summary` to track your calorie and water intake.","lastModifiedDate":"2024-04-13"},{"lineNumber":246,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":247,"author":{"gitId":"pradeep-cod"},"content":"7. Run the `bye` command to exit app","lastModifiedDate":"2024-04-13"},{"lineNumber":248,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":249,"author":{"gitId":"alvinnnnnnnnnn"},"content":"## Command Summary","lastModifiedDate":"2024-03-25"},{"lineNumber":250,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":251,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Action                              | Format                                                            |","lastModifiedDate":"2024-03-25"},{"lineNumber":252,"author":{"gitId":"alvinnnnnnnnnn"},"content":"|-------------------------------------|-------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":253,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Log meal                            | `log m/\u003cMEAL_NAME\u003e s/\u003cNUMBER_OF_SERVINGS\u003e`                        |","lastModifiedDate":"2024-04-10"},{"lineNumber":254,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Log water intake                    | `log w/\u003cAMOUNT_OF_WATER\u003e`                                         |","lastModifiedDate":"2024-04-10"},{"lineNumber":255,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Log exercises                       | `log e/\u003cEXERCISE_NAME\u003e d/\u003cDURATION\u003e`                              |","lastModifiedDate":"2024-04-10"},{"lineNumber":256,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| View daily goals                    | `show g`                                                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":257,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| View daily calorie intake           | `show c`                                                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":258,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| View daily water intake             | `show w`                                                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":259,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| View all logged entries             | `list`                                                            |","lastModifiedDate":"2024-04-10"},{"lineNumber":260,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| View all food items in the database | `foodData`                                                        |","lastModifiedDate":"2024-04-10"},{"lineNumber":261,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| View all exercises in the database  | `exerciseData`                                                    |","lastModifiedDate":"2024-04-10"},{"lineNumber":262,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Delete meal logs                    | `delete \u003cMEAL_NAME\u003e`                                              |","lastModifiedDate":"2024-04-10"},{"lineNumber":263,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Delete water logs                   | `delete \u003cQUANTITY_OF_WATER\u003e`                                      |","lastModifiedDate":"2024-04-10"},{"lineNumber":264,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Delete exercise logs                | `delete \u003cEXERCISE_NAME\u003e`                                          |  ","lastModifiedDate":"2024-04-10"},{"lineNumber":265,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Log a meal not in the database      | `add m/\u003cMEAL_NAME\u003e c/CALORIES_PER_SERVING s/\u003cNUMBER_OF_SERVINGS\u003e` | ","lastModifiedDate":"2024-04-10"},{"lineNumber":266,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Log an exercise not in the database | `add e/\u003cEXERCISE\u003e c/\u003cCALORIES_BURNT_PER_MIN\u003e d/\u003cDURATION_IN_MIN\u003e` |","lastModifiedDate":"2024-04-10"},{"lineNumber":267,"author":{"gitId":"SuveenE"},"content":"| Change height input                 | `change h`                                                        |","lastModifiedDate":"2024-04-11"},{"lineNumber":268,"author":{"gitId":"SuveenE"},"content":"| Change weight input                 | `change w`                                                        |","lastModifiedDate":"2024-04-11"},{"lineNumber":269,"author":{"gitId":"SuveenE"},"content":"| Change daily calorie intake goal                | `change cg`                                                        |","lastModifiedDate":"2024-04-11"},{"lineNumber":270,"author":{"gitId":"SuveenE"},"content":"| Change daily water intake goal                | `change wg`                                                        |","lastModifiedDate":"2024-04-11"},{"lineNumber":271,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Show daily summary                  | `summary`                                                         |","lastModifiedDate":"2024-04-10"},{"lineNumber":272,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Search for entries                  | `find`                                                            |","lastModifiedDate":"2024-04-10"},{"lineNumber":273,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Get help                            | `help`                                                            |","lastModifiedDate":"2024-04-10"},{"lineNumber":274,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Clear all logged entries            | `clear`                                                           |","lastModifiedDate":"2024-04-10"},{"lineNumber":275,"author":{"gitId":"alvinnnnnnnnnn"},"content":"| Exit the program                    | `bye`                                                             |","lastModifiedDate":"2024-04-10"},{"lineNumber":276,"author":{"gitId":"SuveenE"},"content":"                                                      |","lastModifiedDate":"2024-04-11"},{"lineNumber":277,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":278,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":279,"author":{"gitId":"SuveenE"},"content":"## Acknowledgements","lastModifiedDate":"2024-03-30"},{"lineNumber":280,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":281,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"Praneet-25":49,"pradeep-cod":50,"alvinnnnnnnnnn":59,"nikhil-2101":22,"SuveenE":71,"-":30}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"# ActiveEdge ü•¶üèÉ‚Äç‚ôÇ","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"Welcome aboard!","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"**ActiveEdge** is a program for a university students to manage their food intake, water intake and exercises via the Command Line Interface (CLI).","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"The purpose of this user guide is to familiarize you with the program and help you when you face a problem using it.","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"Its main job is to store and present your logs which makes maintaining a healthy lifestyle so much more convenient!","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"SuveenE":6,"-":6}},{"path":"docs/UML diagrams/Main.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pradeep-cod"},"content":"@startuml","lastModifiedDate":"2024-04-06"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-04-06"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":"autonumber","lastModifiedDate":"2024-04-06"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"User -\u003e \": ActiveEdge\": Run()","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"activate \": ActiveEdge\"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"\": ActiveEdge\" -\u003e \":CommandUi\": PrintWelcomeMessage()","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"activate \":CommandUi\"","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"\":CommandUi\"--\u003e \": ActiveEdge\": Welcome message printed","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"deactivate \":CommandUi\"","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"\": ActiveEdge\"-\u003e \":Parser\": Create Parser object","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"activate \":Parser\"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"\":Parser\" --\u003e \": ActiveEdge\": Parser object created","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"deactivate \":Parser\"","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"\": ActiveEdge\" -\u003e \":Storage\": FetchData()","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"activate \":Storage\"","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"\":Storage\" --\u003e \": ActiveEdge\": Data fetched from storage","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"deactivate \":Storage\"","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"\": ActiveEdge\" -\u003e \":Scanner\": NextLine()","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"activate \":Scanner\"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"\":Scanner\" --\u003e \": ActiveEdge\": Input received","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"pradeep-cod"},"content":"deactivate \":Scanner\"","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"loop until \"bye\" is entered","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"pradeep-cod"},"content":"    \": ActiveEdge\" -\u003e \":Parser\": HandleInput(input)","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"pradeep-cod"},"content":"    activate \":Parser\"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"    \":Parser\" --\u003e \": ActiveEdge\": Input handled","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"    deactivate \":Parser\"","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"    \": ActiveEdge\" -\u003e \":Scanner\": NextLine()","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"pradeep-cod"},"content":"    activate \":Scanner\"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"pradeep-cod"},"content":"    \":Scanner\"--\u003e \": ActiveEdge\": Next input received","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"pradeep-cod"},"content":"    deactivate \":Scanner\"","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"pradeep-cod"},"content":"end loop","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"pradeep-cod"},"content":"\": ActiveEdge\"-\u003e \":ByeUi\" : PrintByeMessage()","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"pradeep-cod"},"content":"activate \":ByeUi\"","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"\":ByeUi\" --\u003e\": ActiveEdge\": Bye message printed","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"pradeep-cod"},"content":"deactivate \":ByeUi\"","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":40,"author":{"gitId":"pradeep-cod"},"content":"@enduml","lastModifiedDate":"2024-04-06"}],"authorContributionMap":{"pradeep-cod":40}},{"path":"docs/UML diagrams/Ui.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pradeep-cod"},"content":"@startuml","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"class CommandUi {","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"    - LINE: String","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"    - DATE_TIME_FORMATTER: DateTimeFormatter","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"    + printWelcomeMessage(): void","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"    + printMealLogMessage(mealTask: MealTask): void","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"    + printExerciseLogMessage(logExercise: LogExercise): void","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"    + printShowCalMessage(): void","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"    + printWaterLogMessage(newWaterTask: WaterTask): void","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"    + printWaterIntakeMessage(totalWaterIntake: int, waterGoal: int): void","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"    + printMatchingTasks(word: String): void","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"    + printTaskDeletedMessage(deletedTask: Task): void","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"    + printFoodItemNotFoundMessage(description: String): void","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"    + printExerciseItemNotFoundMessage(exerciseName: String): void","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"    + printAddFoodItemMessage(description: String): void","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"    + printAddExerciseMessage(exerciseName: String): void","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"    + promptLogExerciseMessage(exerciseName: String): void","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"    + promptLogFoodMessage(foodItemName: String): void","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"class LogMeal {","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"pradeep-cod"},"content":"    - servings: int","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"pradeep-cod"},"content":"    - foodName: String","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"    - mealCalories: int","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"    + getServings(): int","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"    + getFoodName(): String","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"pradeep-cod"},"content":"    + getMealCalories(): int","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"pradeep-cod"},"content":"class LogExercise {","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"    - duration: int","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"pradeep-cod"},"content":"    - exerciseName: String","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"pradeep-cod"},"content":"    - caloriesBurnt: int","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"    + getDuration(): int","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"pradeep-cod"},"content":"    + getExerciseName(): String","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"pradeep-cod"},"content":"    + getCaloriesBurnt(): int","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"pradeep-cod"},"content":"class LogWater {","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"pradeep-cod"},"content":"    - quantity: int","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"pradeep-cod"},"content":"    + getQuantity(): int","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"pradeep-cod"},"content":"class Log {","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"pradeep-cod"},"content":"    - description: String","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"pradeep-cod"},"content":"    + getDescription(): String","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"pradeep-cod"},"content":"CommandUi --\u003e LogMeal : uses","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"pradeep-cod"},"content":"CommandUi --\u003e LogExercise : uses","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"pradeep-cod"},"content":"CommandUi --\u003e LogWater : uses","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"pradeep-cod"},"content":"CommandUi --\u003e Log : uses","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"pradeep-cod"},"content":"@enduml","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"pradeep-cod":59}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"# Active Edge User Guide üí™","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"Welcome to ActiveEdge! ActiveEdge is a productivity tool ","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"designed to help you track your health and fitness goals","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"effectively. Whether you want to manage your calorie ","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"intake, track your water consumption, set daily goals,","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"or keep a record of your exercises, ActiveEdge has got","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"you covered.","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"To get started quickly with ActiveEdge, ","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"follow these simple steps:","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"2. Download the latest version of `ActiveEdge` from [here](https://github.com/AY2324S2-CS2113-W12-2/tp/releases).","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"3. Copy the file into the folder you want to use as the home folder for your `ActiveEdge`.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"4. Open a command terminal, cd into the home folder you put the jar file in, and run the following command: `java -jar ActiveEdge.jar`. You should see a welcome screen.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"Welcome to ACTIVE EDGE!","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"Take the next step in your Healthy Lifestyle!","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"SuveenE"},"content":"## Table of Contents","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"SuveenE"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"SuveenE"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"SuveenE"},"content":"- [Features](#features)","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"SuveenE"},"content":"    - [Log meal: `log`](#log-meal--log)","lastModifiedDate":"2024-04-09"},{"lineNumber":30,"author":{"gitId":"SuveenE"},"content":"    - [Log water intake : `log`](#log-water-intake--log)","lastModifiedDate":"2024-04-09"},{"lineNumber":31,"author":{"gitId":"SuveenE"},"content":"    - [Log exercises: `log`](#log-exercises-log)","lastModifiedDate":"2024-04-09"},{"lineNumber":32,"author":{"gitId":"SuveenE"},"content":"    - [View daily goals: `show`](#view-daily-goals-show)","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"SuveenE"},"content":"    - [View daily calorie intake: `show`](#view-daily-calorie-intake-show)","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"SuveenE"},"content":"    - [View daily water intake: `show`](#view-daily-water-intake-show)","lastModifiedDate":"2024-04-09"},{"lineNumber":35,"author":{"gitId":"SuveenE"},"content":"    - [View all logged entries: `list`](#view-all-logged-entries-list)","lastModifiedDate":"2024-04-09"},{"lineNumber":36,"author":{"gitId":"SuveenE"},"content":"    - [View all food items in the database: `foodData`](#view-all-food-items-in-the-database-fooddata)","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"SuveenE"},"content":"    - [View all exercises in the database: `exerciseData`](#view-all-exercises-in-the-database-exercisedata)  ","lastModifiedDate":"2024-04-09"},{"lineNumber":38,"author":{"gitId":"SuveenE"},"content":"    - [Delete meal logs: `delete`](#delete-meal-logs-delete)","lastModifiedDate":"2024-04-09"},{"lineNumber":39,"author":{"gitId":"SuveenE"},"content":"    - [Delete water logs: `delete`](#delete-water-logs-delete)","lastModifiedDate":"2024-04-09"},{"lineNumber":40,"author":{"gitId":"SuveenE"},"content":"    - [Delete exercise logs: `delete`](#delete-exercise-logs-delete)","lastModifiedDate":"2024-04-09"},{"lineNumber":41,"author":{"gitId":"SuveenE"},"content":"    - [Log a meal not in the database: `add`](#log-a-meal-not-in-the-database-add)","lastModifiedDate":"2024-04-09"},{"lineNumber":42,"author":{"gitId":"SuveenE"},"content":"    - [Log an exercise not in the database: `add`](#log-an-exercise-not-in-the-database-add)","lastModifiedDate":"2024-04-09"},{"lineNumber":43,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    - [Change height input: `change`](#change-user-height-change)","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    - [Change weight input: `change`](#change-user-weight-change)","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"SuveenE"},"content":"    - [Change daily calorie intake goal: `change`](#change-daily-calorie-intake-goal-change)","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"SuveenE"},"content":"    - [Change daily water intake goal: `change`](#change-daily-water-intake-goal-change)  ","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"SuveenE"},"content":"    - [Show daily summary: `summary`](#show-daily-summary-summary)","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"SuveenE"},"content":"    - [Search for entries: `find`](#search-for-entries-find)","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"SuveenE"},"content":"    - [Get help: `help`](#get-help-help)","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"SuveenE"},"content":"    - [Clear all logged entries: `clear`](#clear-all-logged-entries-clear)","lastModifiedDate":"2024-04-09"},{"lineNumber":51,"author":{"gitId":"SuveenE"},"content":"    - [Exit the program: `bye`](#exit-the-program-bye)","lastModifiedDate":"2024-04-09"},{"lineNumber":52,"author":{"gitId":"SuveenE"},"content":"    ","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"SuveenE"},"content":"- [Frequently Asked Questions](#faq-)","lastModifiedDate":"2024-04-09"},{"lineNumber":54,"author":{"gitId":"SuveenE"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2024-04-09"},{"lineNumber":55,"author":{"gitId":"SuveenE"},"content":"    ","lastModifiedDate":"2024-04-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"SuveenE"},"content":"At the start of the application, new users are prompted to enter the following information.","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"SuveenE"},"content":"1. **Height** in centimeters (cm)","lastModifiedDate":"2024-04-11"},{"lineNumber":63,"author":{"gitId":"SuveenE"},"content":"2. **Weight** in Kilograms (kg)","lastModifiedDate":"2024-04-11"},{"lineNumber":64,"author":{"gitId":"SuveenE"},"content":"3. **Daily calorie goal** in calories","lastModifiedDate":"2024-04-11"},{"lineNumber":65,"author":{"gitId":"SuveenE"},"content":"4. **Daily water intake goal** in millimeters (ml)","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":67,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"SuveenE"},"content":"Since you are new here or your details are missing,","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"SuveenE"},"content":"let\u0027s start with a few questions to set things up!","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"SuveenE"},"content":"Please input your height (in cm): ","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":74,"author":{"gitId":"SuveenE"},"content":"### Log meal : `log`","lastModifiedDate":"2024-04-09"},{"lineNumber":75,"author":{"gitId":"alvinnnnnnnnnn"},"content":"Logs the meals consumed along with the number of servings.","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"SuveenE"},"content":"Format: `log m/\u003cMEAL_NAME\u003e s/\u003cNUMBER_OF_SERVINGS\u003e`","lastModifiedDate":"2024-04-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"SuveenE"},"content":"* The `\u003cMEAL_NAME\u003e` is a meal name that exists in our food database. Check here to add a new meal that","lastModifiedDate":"2024-04-09"},{"lineNumber":80,"author":{"gitId":"SuveenE"},"content":"* The `\u003cNUMBER_OF_SERVINGS\u003e` can be any positive integer value.  ","lastModifiedDate":"2024-04-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"SuveenE"},"content":"Sample input: `log m/chicken rice s/1`  ","lastModifiedDate":"2024-04-09"},{"lineNumber":83,"author":{"gitId":"SuveenE"},"content":"Expected output: ","lastModifiedDate":"2024-04-09"},{"lineNumber":84,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"SuveenE"},"content":"You\u0027ve logged 1 servings of chicken rice.","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"SuveenE"},"content":"Estimated calories: 450 cal","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":90,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"SuveenE"},"content":"### Log water intake : `log`","lastModifiedDate":"2024-04-09"},{"lineNumber":92,"author":{"gitId":"SuveenE"},"content":"Logs the quantity of water consumed.","lastModifiedDate":"2024-04-09"},{"lineNumber":93,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"SuveenE"},"content":"Format: `log w/\u003cAMOUNT_OF_WATER\u003e`","lastModifiedDate":"2024-04-09"},{"lineNumber":95,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"SuveenE"},"content":"* The `\u003cAMOUNT_OF_WATER\u003e` is the volume of water intake in milliliters(**ml**).","lastModifiedDate":"2024-04-09"},{"lineNumber":97,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"SuveenE"},"content":"Sample input: `log w/1000`   ","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":100,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"SuveenE"},"content":"Successfully logged 1000 ml of water.","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":105,"author":{"gitId":"SuveenE"},"content":"### Log exercises: `log`","lastModifiedDate":"2024-04-09"},{"lineNumber":106,"author":{"gitId":"SuveenE"},"content":"Logs the exercises performed.","lastModifiedDate":"2024-04-09"},{"lineNumber":107,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"SuveenE"},"content":"Format: `log e/\u003cEXERCISE_NAME\u003e d/\u003cDURATION\u003e`","lastModifiedDate":"2024-04-09"},{"lineNumber":109,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":110,"author":{"gitId":"SuveenE"},"content":"* The `EXERCISE_NAME` is the form of exercise done.","lastModifiedDate":"2024-04-09"},{"lineNumber":111,"author":{"gitId":"SuveenE"},"content":"* The `DURATION` is the number of **minutes** the exercise has been done.","lastModifiedDate":"2024-04-09"},{"lineNumber":112,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":113,"author":{"gitId":"SuveenE"},"content":"Sample input: `log e/running d/10`  ","lastModifiedDate":"2024-04-09"},{"lineNumber":114,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":115,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"SuveenE"},"content":"You\u0027ve logged 10 minutes of running.","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"SuveenE"},"content":"Estimated calories burnt: 100 cal","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":120,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":121,"author":{"gitId":"SuveenE"},"content":"### View daily goals: `show`","lastModifiedDate":"2024-04-09"},{"lineNumber":122,"author":{"gitId":"SuveenE"},"content":"Displays the current daily calorie goal, and the water intake target.","lastModifiedDate":"2024-04-09"},{"lineNumber":123,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"SuveenE"},"content":"Sample input: `show g`  ","lastModifiedDate":"2024-04-09"},{"lineNumber":125,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":126,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"SuveenE"},"content":"Current goals ","lastModifiedDate":"2024-04-13"},{"lineNumber":128,"author":{"gitId":"SuveenE"},"content":"Daily calories intake goal: 2800 cal","lastModifiedDate":"2024-04-13"},{"lineNumber":129,"author":{"gitId":"SuveenE"},"content":"Daily water intake goal: 3000 ml","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":131,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":132,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"SuveenE"},"content":"### View daily calorie intake: `show`","lastModifiedDate":"2024-04-09"},{"lineNumber":134,"author":{"gitId":"SuveenE"},"content":"Displays the total calorie intake, the total amount of calories burnt and where you stand in regard to your goals.","lastModifiedDate":"2024-04-09"},{"lineNumber":135,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"SuveenE"},"content":"Sample input: `show c`  ","lastModifiedDate":"2024-04-09"},{"lineNumber":137,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":138,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"SuveenE"},"content":"You have burned 100 today!","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"SuveenE"},"content":"You have consumed 450 cal out of 2800 kcal","lastModifiedDate":"2024-04-13"},{"lineNumber":141,"author":{"gitId":"SuveenE"},"content":"You\u0027re doing an excellent job of managing your calorie intake!","lastModifiedDate":"2024-04-13"},{"lineNumber":142,"author":{"gitId":"SuveenE"},"content":"Calorie deficit at the moment --\u003e 2450","lastModifiedDate":"2024-04-13"},{"lineNumber":143,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":144,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":145,"author":{"gitId":"SuveenE"},"content":"### View daily water intake: `show`","lastModifiedDate":"2024-04-09"},{"lineNumber":146,"author":{"gitId":"SuveenE"},"content":"Displays the total water intake, and the percentage of water","lastModifiedDate":"2024-04-09"},{"lineNumber":147,"author":{"gitId":"SuveenE"},"content":"that has been consumed in comparison to the daily water intake goal.","lastModifiedDate":"2024-04-09"},{"lineNumber":148,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"SuveenE"},"content":"Sample input: `show w`  ","lastModifiedDate":"2024-04-09"},{"lineNumber":150,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":151,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":152,"author":{"gitId":"SuveenE"},"content":"Total water consumed today: 1000 ml (33% of 3000ml goal).","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":154,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":155,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"SuveenE"},"content":"### View all logged entries: `list`","lastModifiedDate":"2024-04-09"},{"lineNumber":157,"author":{"gitId":"SuveenE"},"content":"Displays entries logged throughout the application usage period.","lastModifiedDate":"2024-04-09"},{"lineNumber":158,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"SuveenE"},"content":"Sample input: `list`    ","lastModifiedDate":"2024-04-09"},{"lineNumber":160,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":161,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"SuveenE"},"content":"Logged data for today:","lastModifiedDate":"2024-04-13"},{"lineNumber":163,"author":{"gitId":"SuveenE"},"content":"Food: ","lastModifiedDate":"2024-04-13"},{"lineNumber":164,"author":{"gitId":"SuveenE"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-13"},{"lineNumber":165,"author":{"gitId":"SuveenE"},"content":"1. chicken rice | 1 servings | 450 cal (Recorded on: 2024-04-13 15:17)","lastModifiedDate":"2024-04-13"},{"lineNumber":166,"author":{"gitId":"SuveenE"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-13"},{"lineNumber":167,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"SuveenE"},"content":"Water:","lastModifiedDate":"2024-04-13"},{"lineNumber":169,"author":{"gitId":"SuveenE"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-13"},{"lineNumber":170,"author":{"gitId":"SuveenE"},"content":"1. 1000 ml (Recorded on: 2024-04-13 15:18)","lastModifiedDate":"2024-04-13"},{"lineNumber":171,"author":{"gitId":"SuveenE"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-13"},{"lineNumber":172,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":173,"author":{"gitId":"SuveenE"},"content":"Exercises:","lastModifiedDate":"2024-04-13"},{"lineNumber":174,"author":{"gitId":"SuveenE"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-13"},{"lineNumber":175,"author":{"gitId":"SuveenE"},"content":"1. running | 10 mins | 100 cal (Recorded on: 2024-04-13 15:18)","lastModifiedDate":"2024-04-13"},{"lineNumber":176,"author":{"gitId":"SuveenE"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-13"},{"lineNumber":177,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":178,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":179,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":180,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"SuveenE"},"content":"### View all food items in the database: `foodData`","lastModifiedDate":"2024-04-09"},{"lineNumber":182,"author":{"gitId":"SuveenE"},"content":"Displays all the food items in the application database.","lastModifiedDate":"2024-04-09"},{"lineNumber":183,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"SuveenE"},"content":"Sample input: `foodData`    ","lastModifiedDate":"2024-04-09"},{"lineNumber":185,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":186,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":187,"author":{"gitId":"SuveenE"},"content":"Meal: fried chicken | Calories per serving: 543 kcal","lastModifiedDate":"2024-04-13"},{"lineNumber":188,"author":{"gitId":"SuveenE"},"content":"Meal: chicken burger | Calories per serving: 357 kcal","lastModifiedDate":"2024-04-13"},{"lineNumber":189,"author":{"gitId":"SuveenE"},"content":"Meal: beef burger | Calories per serving: 500 kcal","lastModifiedDate":"2024-04-13"},{"lineNumber":190,"author":{"gitId":"SuveenE"},"content":"Meal: fish burger | Calories per serving: 379 kcal","lastModifiedDate":"2024-04-13"},{"lineNumber":191,"author":{"gitId":"SuveenE"},"content":"Meal: cheese pizza | Calories per serving: 220 kcal","lastModifiedDate":"2024-04-13"},{"lineNumber":192,"author":{"gitId":"SuveenE"},"content":"...","lastModifiedDate":"2024-04-13"},{"lineNumber":193,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":194,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":195,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"SuveenE"},"content":"### View all exercises in the database: `exerciseData`","lastModifiedDate":"2024-04-09"},{"lineNumber":197,"author":{"gitId":"SuveenE"},"content":"Displays all forms of exercises in the application database.","lastModifiedDate":"2024-04-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"SuveenE"},"content":"Sample input: `exerciseData`    ","lastModifiedDate":"2024-04-09"},{"lineNumber":200,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":201,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":202,"author":{"gitId":"SuveenE"},"content":"Exercise: running | Calories burnt per minute: 10 kcal","lastModifiedDate":"2024-04-13"},{"lineNumber":203,"author":{"gitId":"SuveenE"},"content":"Exercise: cycling | Calories burnt per minute: 8 kcal","lastModifiedDate":"2024-04-13"},{"lineNumber":204,"author":{"gitId":"SuveenE"},"content":"Exercise: swimming | Calories burnt per minute: 8 kcal","lastModifiedDate":"2024-04-13"},{"lineNumber":205,"author":{"gitId":"SuveenE"},"content":"Exercise: jumping jacks | Calories burnt per minute: 10 kcal","lastModifiedDate":"2024-04-13"},{"lineNumber":206,"author":{"gitId":"SuveenE"},"content":"Exercise: walking | Calories burnt per minute: 4 kcal","lastModifiedDate":"2024-04-13"},{"lineNumber":207,"author":{"gitId":"SuveenE"},"content":"...","lastModifiedDate":"2024-04-13"},{"lineNumber":208,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":209,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":210,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"SuveenE"},"content":"### Delete meal logs: `delete`","lastModifiedDate":"2024-04-08"},{"lineNumber":212,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"SuveenE"},"content":"Deletes a meal from the logs list. By default, it deletes the oldest log.","lastModifiedDate":"2024-04-09"},{"lineNumber":214,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"SuveenE"},"content":"Format:  `delete \u003cMEAL_NAME\u003e`","lastModifiedDate":"2024-04-08"},{"lineNumber":216,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"SuveenE"},"content":"If you have **multiple logs with the same meal name**, use the additional parameter N to specify which log to delete.","lastModifiedDate":"2024-04-12"},{"lineNumber":218,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":219,"author":{"gitId":"SuveenE"},"content":"Format: `delete \u003cMEAL_NAME\u003e i/\u003cN\u003e`","lastModifiedDate":"2024-04-08"},{"lineNumber":220,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":221,"author":{"gitId":"SuveenE"},"content":"* The `MEAL_NAME` is the name of the meal the user","lastModifiedDate":"2024-04-08"},{"lineNumber":222,"author":{"gitId":"nikhil-2101"},"content":"  previously logged in and wishes to delete.","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"SuveenE"},"content":"* The `N` is the N\u003csup\u003eth\u003c/sup\u003e log from the same meal that the user wishes to delete. Note: `N` starts with 1.","lastModifiedDate":"2024-04-08"},{"lineNumber":224,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":225,"author":{"gitId":"SuveenE"},"content":"If you are unsure about the index, try `list` command and figure out the index first.","lastModifiedDate":"2024-04-09"},{"lineNumber":226,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":227,"author":{"gitId":"SuveenE"},"content":"Sample input: `delete chicken rice i/2`   ","lastModifiedDate":"2024-04-13"},{"lineNumber":228,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-13"},{"lineNumber":229,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":230,"author":{"gitId":"SuveenE"},"content":"Log deleted: Meal | chicken rice | 4 servings | 1800 cal (Recorded on: 2024-04-13 15:22)","lastModifiedDate":"2024-04-13"},{"lineNumber":231,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":232,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":233,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":234,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":235,"author":{"gitId":"SuveenE"},"content":"### Delete water logs: `delete`","lastModifiedDate":"2024-04-08"},{"lineNumber":236,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":237,"author":{"gitId":"SuveenE"},"content":"Deletes a water log from the logs list. By default, it deletes the oldest log.","lastModifiedDate":"2024-04-09"},{"lineNumber":238,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":239,"author":{"gitId":"SuveenE"},"content":"Format:  `delete \u003cQUANTITY_OF_WATER\u003e ml`","lastModifiedDate":"2024-04-09"},{"lineNumber":240,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":241,"author":{"gitId":"SuveenE"},"content":"If you have **multiple logs with the same water quantity**, use the additional parameter N to specify which log to ","lastModifiedDate":"2024-04-12"},{"lineNumber":242,"author":{"gitId":"pradeep-cod"},"content":"delete.","lastModifiedDate":"2024-04-12"},{"lineNumber":243,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":244,"author":{"gitId":"SuveenE"},"content":"Format: `delete \u003cQUANTITY_OF_WATER\u003e ml i/2`","lastModifiedDate":"2024-04-09"},{"lineNumber":245,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":246,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":247,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"SuveenE"},"content":"* The `QUANTITY_OF_WATER` can be the quantity of water the","lastModifiedDate":"2024-04-08"},{"lineNumber":249,"author":{"gitId":"SuveenE"},"content":"  user logged previously and wishes to delete.","lastModifiedDate":"2024-04-08"},{"lineNumber":250,"author":{"gitId":"SuveenE"},"content":"* The `N` is the N\u003csup\u003eth\u003c/sup\u003e log from the same meal that the user wishes to delete. Note: `N` starts with 1. ","lastModifiedDate":"2024-04-08"},{"lineNumber":251,"author":{"gitId":"Praneet-25"},"content":"  ","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"SuveenE"},"content":"If you are unsure about the index, try `list` command and figure out the index first.","lastModifiedDate":"2024-04-09"},{"lineNumber":253,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":254,"author":{"gitId":"SuveenE"},"content":"Sample input: `delete 1000 ml`    ","lastModifiedDate":"2024-04-13"},{"lineNumber":255,"author":{"gitId":"SuveenE"},"content":"Expected output:  ","lastModifiedDate":"2024-04-13"},{"lineNumber":256,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":257,"author":{"gitId":"SuveenE"},"content":"Log deleted: Water | 1000 ml (Recorded on: 2024-04-13 15:18)","lastModifiedDate":"2024-04-13"},{"lineNumber":258,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":259,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":260,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":261,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":262,"author":{"gitId":"SuveenE"},"content":"### Delete exercise logs: `delete`","lastModifiedDate":"2024-04-09"},{"lineNumber":263,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":264,"author":{"gitId":"SuveenE"},"content":"Deletes an exercise log from the logs list.  By default, it deletes the oldest log.","lastModifiedDate":"2024-04-09"},{"lineNumber":265,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":266,"author":{"gitId":"SuveenE"},"content":"Format:  `delete \u003cEXERCISE_NAME\u003e`","lastModifiedDate":"2024-04-09"},{"lineNumber":267,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":268,"author":{"gitId":"SuveenE"},"content":"If you have **multiple logs with the same exercise**, use the additional parameter N to specify which log to delete.","lastModifiedDate":"2024-04-12"},{"lineNumber":269,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":270,"author":{"gitId":"SuveenE"},"content":"Format: `delete \u003cEXERCISE_NAME\u003e i/\u003cN\u003e`","lastModifiedDate":"2024-04-09"},{"lineNumber":271,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":272,"author":{"gitId":"SuveenE"},"content":"* The `EXERCISE_NAME` is the form of exercise","lastModifiedDate":"2024-04-09"},{"lineNumber":273,"author":{"gitId":"SuveenE"},"content":"  previously logged in, and the user wishes to delete.","lastModifiedDate":"2024-04-12"},{"lineNumber":274,"author":{"gitId":"SuveenE"},"content":"* The `N` is the N\u003csup\u003eth\u003c/sup\u003e log from the exercise that the user wishes to delete. Note: `N` starts with 1.","lastModifiedDate":"2024-04-09"},{"lineNumber":275,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":276,"author":{"gitId":"SuveenE"},"content":"If you are unsure about the index, try `list` command and figure out the index first.","lastModifiedDate":"2024-04-09"},{"lineNumber":277,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":278,"author":{"gitId":"SuveenE"},"content":"Sample input: `delete running i/1`   ","lastModifiedDate":"2024-04-13"},{"lineNumber":279,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-13"},{"lineNumber":280,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":281,"author":{"gitId":"SuveenE"},"content":"Log deleted: Exercise | running | 10 mins | 100 cal (Recorded on: 2024-04-13 15:18)","lastModifiedDate":"2024-04-13"},{"lineNumber":282,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":283,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":284,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":285,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":286,"author":{"gitId":"SuveenE"},"content":"### Log a meal not in the database: `add`","lastModifiedDate":"2024-04-09"},{"lineNumber":287,"author":{"gitId":"SuveenE"},"content":"Logs a new meal that is not available in the food database.","lastModifiedDate":"2024-04-09"},{"lineNumber":288,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":289,"author":{"gitId":"SuveenE"},"content":"Format: `add m/\u003cMEAL_NAME\u003e c/CALORIES_PER_SERVING s/\u003cNUMBER_OF_SERVINGS\u003e`","lastModifiedDate":"2024-04-09"},{"lineNumber":290,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":291,"author":{"gitId":"SuveenE"},"content":"* The `\u003cMEAL_NAME\u003e` is any food item.","lastModifiedDate":"2024-04-09"},{"lineNumber":292,"author":{"gitId":"SuveenE"},"content":"* The `CALORIES_PER_SERVING` is the calorie amount of the food item","lastModifiedDate":"2024-04-09"},{"lineNumber":293,"author":{"gitId":"SuveenE"},"content":"* The `\u003cNUMBER_OF_SERVINGS\u003e` can be any positive integer value.","lastModifiedDate":"2024-04-09"},{"lineNumber":294,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":295,"author":{"gitId":"SuveenE"},"content":"Sample input: `add m/carrot cake c/500 s/2`     ","lastModifiedDate":"2024-04-09"},{"lineNumber":296,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":297,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":298,"author":{"gitId":"SuveenE"},"content":"carrot cake has been added to the food database.","lastModifiedDate":"2024-04-13"},{"lineNumber":299,"author":{"gitId":"SuveenE"},"content":"logging your meal.......","lastModifiedDate":"2024-04-13"},{"lineNumber":300,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":301,"author":{"gitId":"SuveenE"},"content":"You\u0027ve logged 2 servings of carrot cake.","lastModifiedDate":"2024-04-13"},{"lineNumber":302,"author":{"gitId":"SuveenE"},"content":"Estimated calories: 1000 cal","lastModifiedDate":"2024-04-13"},{"lineNumber":303,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":304,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":305,"author":{"gitId":"SuveenE"},"content":"### Log an exercise not in the database: `add`","lastModifiedDate":"2024-04-09"},{"lineNumber":306,"author":{"gitId":"SuveenE"},"content":"Adds a new exercise item to the existing list of exercises.","lastModifiedDate":"2024-04-09"},{"lineNumber":307,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":308,"author":{"gitId":"pradeep-cod"},"content":"Format: `add e/\u003cEXERCISE\u003e c/\u003cCALORIES_BURNT_PER_MIN\u003e d/\u003cDURATION_IN_MIN\u003e`","lastModifiedDate":"2024-04-01"},{"lineNumber":309,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":310,"author":{"gitId":"SuveenE"},"content":"* The `\u003cEXERCISE\u003e` is the form of exercise.","lastModifiedDate":"2024-04-09"},{"lineNumber":311,"author":{"gitId":"SuveenE"},"content":"* The `\u003cCALORIES_BURNT_PER_MIN\u003e` can be a rough gauge of calories being burnt.","lastModifiedDate":"2024-04-09"},{"lineNumber":312,"author":{"gitId":"SuveenE"},"content":"* The `\u003cDURATION_IN_MIN\u003e` can be any positive integer value.","lastModifiedDate":"2024-04-09"},{"lineNumber":313,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":314,"author":{"gitId":"SuveenE"},"content":"Sample input: `add e/calisthenics c/10 d/30`     ","lastModifiedDate":"2024-04-13"},{"lineNumber":315,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":316,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":317,"author":{"gitId":"SuveenE"},"content":"calisthenics has been added to the exercise database.","lastModifiedDate":"2024-04-13"},{"lineNumber":318,"author":{"gitId":"SuveenE"},"content":"logging your exercise.......","lastModifiedDate":"2024-04-13"},{"lineNumber":319,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":320,"author":{"gitId":"SuveenE"},"content":"You\u0027ve logged 30 minutes of calisthenics.","lastModifiedDate":"2024-04-13"},{"lineNumber":321,"author":{"gitId":"SuveenE"},"content":"Estimated calories burnt: 300 cal","lastModifiedDate":"2024-04-13"},{"lineNumber":322,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":323,"author":{"gitId":"alvinnnnnnnnnn"},"content":"---","lastModifiedDate":"2024-04-10"},{"lineNumber":324,"author":{"gitId":"alvinnnnnnnnnn"},"content":"### Change user height: `change`","lastModifiedDate":"2024-04-10"},{"lineNumber":325,"author":{"gitId":"SuveenE"},"content":"Changes user height and updates the BMI value.","lastModifiedDate":"2024-04-13"},{"lineNumber":326,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":327,"author":{"gitId":"alvinnnnnnnnnn"},"content":"Format: `change h`","lastModifiedDate":"2024-04-10"},{"lineNumber":328,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":329,"author":{"gitId":"SuveenE"},"content":"user: change h","lastModifiedDate":"2024-04-13"},{"lineNumber":330,"author":{"gitId":"SuveenE"},"content":"Please input your height (in cm):","lastModifiedDate":"2024-04-13"},{"lineNumber":331,"author":{"gitId":"SuveenE"},"content":"user: 174","lastModifiedDate":"2024-04-13"},{"lineNumber":332,"author":{"gitId":"SuveenE"},"content":"You have successfully changed your height!","lastModifiedDate":"2024-04-13"},{"lineNumber":333,"author":{"gitId":"SuveenE"},"content":"Your BMI is 23","lastModifiedDate":"2024-04-13"},{"lineNumber":334,"author":{"gitId":"SuveenE"},"content":"You are in the healthy weight range.","lastModifiedDate":"2024-04-13"},{"lineNumber":335,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":336,"author":{"gitId":"alvinnnnnnnnnn"},"content":"---","lastModifiedDate":"2024-04-10"},{"lineNumber":337,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":338,"author":{"gitId":"alvinnnnnnnnnn"},"content":"### Change user weight: `change`","lastModifiedDate":"2024-04-10"},{"lineNumber":339,"author":{"gitId":"alvinnnnnnnnnn"},"content":"Changes user weight and updates the BMI value","lastModifiedDate":"2024-04-10"},{"lineNumber":340,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":341,"author":{"gitId":"alvinnnnnnnnnn"},"content":"Format: `change w`","lastModifiedDate":"2024-04-10"},{"lineNumber":342,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":343,"author":{"gitId":"SuveenE"},"content":"user: change w","lastModifiedDate":"2024-04-13"},{"lineNumber":344,"author":{"gitId":"SuveenE"},"content":"Please input your weight (in kg): ","lastModifiedDate":"2024-04-13"},{"lineNumber":345,"author":{"gitId":"SuveenE"},"content":"user: 85","lastModifiedDate":"2024-04-13"},{"lineNumber":346,"author":{"gitId":"SuveenE"},"content":"You have successfully changed your height!","lastModifiedDate":"2024-04-13"},{"lineNumber":347,"author":{"gitId":"SuveenE"},"content":"Your BMI is 28","lastModifiedDate":"2024-04-13"},{"lineNumber":348,"author":{"gitId":"SuveenE"},"content":"You are in the overweight range.","lastModifiedDate":"2024-04-13"},{"lineNumber":349,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":350,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":351,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":352,"author":{"gitId":"SuveenE"},"content":"### Change daily calorie intake goal: `change`","lastModifiedDate":"2024-04-11"},{"lineNumber":353,"author":{"gitId":"SuveenE"},"content":"Changes the daily calorie intake goal.","lastModifiedDate":"2024-04-11"},{"lineNumber":354,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":355,"author":{"gitId":"SuveenE"},"content":"Format: `change cg`","lastModifiedDate":"2024-04-11"},{"lineNumber":356,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":357,"author":{"gitId":"SuveenE"},"content":"user: change cg","lastModifiedDate":"2024-04-13"},{"lineNumber":358,"author":{"gitId":"SuveenE"},"content":"Please input your new daily calorie goal: ","lastModifiedDate":"2024-04-13"},{"lineNumber":359,"author":{"gitId":"SuveenE"},"content":"user: 3200","lastModifiedDate":"2024-04-13"},{"lineNumber":360,"author":{"gitId":"SuveenE"},"content":"You have successfully changed your calorie goal! ","lastModifiedDate":"2024-04-13"},{"lineNumber":361,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":362,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":363,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":364,"author":{"gitId":"SuveenE"},"content":"### Change daily water intake goal: `change`","lastModifiedDate":"2024-04-11"},{"lineNumber":365,"author":{"gitId":"SuveenE"},"content":"Changes user weight and updates the BMI value","lastModifiedDate":"2024-04-11"},{"lineNumber":366,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":367,"author":{"gitId":"SuveenE"},"content":"Format: `change wg`","lastModifiedDate":"2024-04-11"},{"lineNumber":368,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":369,"author":{"gitId":"SuveenE"},"content":"user: change wg","lastModifiedDate":"2024-04-13"},{"lineNumber":370,"author":{"gitId":"SuveenE"},"content":"Please set your new daily water goal (in ml): ","lastModifiedDate":"2024-04-13"},{"lineNumber":371,"author":{"gitId":"SuveenE"},"content":"user: 3500","lastModifiedDate":"2024-04-13"},{"lineNumber":372,"author":{"gitId":"SuveenE"},"content":"You have successfully changed your water goal!","lastModifiedDate":"2024-04-13"},{"lineNumber":373,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":374,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":375,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":376,"author":{"gitId":"SuveenE"},"content":"### Show daily summary: `summary`","lastModifiedDate":"2024-04-09"},{"lineNumber":377,"author":{"gitId":"SuveenE"},"content":"Shows a daily summary of food, water intake, and goals.","lastModifiedDate":"2024-04-09"},{"lineNumber":378,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":379,"author":{"gitId":"SuveenE"},"content":"Sample input: `summary`  ","lastModifiedDate":"2024-04-09"},{"lineNumber":380,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":381,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":382,"author":{"gitId":"SuveenE"},"content":"Daily Summary:","lastModifiedDate":"2024-04-13"},{"lineNumber":383,"author":{"gitId":"SuveenE"},"content":"Height: 174 cm","lastModifiedDate":"2024-04-13"},{"lineNumber":384,"author":{"gitId":"SuveenE"},"content":"Weight: 85 kg","lastModifiedDate":"2024-04-13"},{"lineNumber":385,"author":{"gitId":"SuveenE"},"content":"BMI: 28","lastModifiedDate":"2024-04-13"},{"lineNumber":386,"author":{"gitId":"SuveenE"},"content":"Total calories consumed: 1000 cal","lastModifiedDate":"2024-04-13"},{"lineNumber":387,"author":{"gitId":"SuveenE"},"content":"Total water consumed: 0 ml","lastModifiedDate":"2024-04-13"},{"lineNumber":388,"author":{"gitId":"SuveenE"},"content":"Total calories burnt: 300 cal","lastModifiedDate":"2024-04-13"},{"lineNumber":389,"author":{"gitId":"SuveenE"},"content":"Calorie goal: 3200 cal","lastModifiedDate":"2024-04-13"},{"lineNumber":390,"author":{"gitId":"SuveenE"},"content":"Water goal: 3500 ml","lastModifiedDate":"2024-04-13"},{"lineNumber":391,"author":{"gitId":"SuveenE"},"content":"Net calories: 700 cal","lastModifiedDate":"2024-04-13"},{"lineNumber":392,"author":{"gitId":"SuveenE"},"content":"Calorie status: Calories Deficit","lastModifiedDate":"2024-04-13"},{"lineNumber":393,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":394,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":395,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":396,"author":{"gitId":"SuveenE"},"content":"### Search for entries: `find`","lastModifiedDate":"2024-04-09"},{"lineNumber":397,"author":{"gitId":"SuveenE"},"content":"Searches for entries with a specified keyword.","lastModifiedDate":"2024-04-09"},{"lineNumber":398,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":399,"author":{"gitId":"SuveenE"},"content":"Format:  `find \u003cKEY_WORD\u003e`","lastModifiedDate":"2024-04-09"},{"lineNumber":400,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":401,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":402,"author":{"gitId":"SuveenE"},"content":"Sample input: `find sushi`  ","lastModifiedDate":"2024-04-09"},{"lineNumber":403,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":404,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":405,"author":{"gitId":"SuveenE"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-13"},{"lineNumber":406,"author":{"gitId":"SuveenE"},"content":"Here are the matching logs in your list:","lastModifiedDate":"2024-04-13"},{"lineNumber":407,"author":{"gitId":"SuveenE"},"content":"1. sushi | 4 servings | 1400 cal (Recorded on: 2024-04-13 15:35)","lastModifiedDate":"2024-04-13"},{"lineNumber":408,"author":{"gitId":"SuveenE"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-13"},{"lineNumber":409,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":410,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":411,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":412,"author":{"gitId":"SuveenE"},"content":"### Get help: `help`","lastModifiedDate":"2024-04-09"},{"lineNumber":413,"author":{"gitId":"SuveenE"},"content":"Provides all the possible commands inside ActiveEdge application.","lastModifiedDate":"2024-04-09"},{"lineNumber":414,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":415,"author":{"gitId":"SuveenE"},"content":"Format: `help`  ","lastModifiedDate":"2024-04-09"},{"lineNumber":416,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":417,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":418,"author":{"gitId":"SuveenE"},"content":"Welcome to Active Edge! Here are the available commands:","lastModifiedDate":"2024-04-13"},{"lineNumber":419,"author":{"gitId":"SuveenE"},"content":"1. Log meal: `log m/\u003cMEAL_NAME\u003e s/\u003cNUMBER_OF_SERVINGS\u003e`","lastModifiedDate":"2024-04-13"},{"lineNumber":420,"author":{"gitId":"SuveenE"},"content":"2. Log water intake : `log w/\u003cAMOUNT_OF_WATER\u003e`","lastModifiedDate":"2024-04-13"},{"lineNumber":421,"author":{"gitId":"SuveenE"},"content":"3. Log exercises: `log e/\u003cEXERCISE_NAME\u003e d/\u003cDURATION\u003e`","lastModifiedDate":"2024-04-13"},{"lineNumber":422,"author":{"gitId":"SuveenE"},"content":"4. View daily goals: `show g`","lastModifiedDate":"2024-04-13"},{"lineNumber":423,"author":{"gitId":"SuveenE"},"content":"5. View daily calorie intake: `show c`","lastModifiedDate":"2024-04-13"},{"lineNumber":424,"author":{"gitId":"SuveenE"},"content":".","lastModifiedDate":"2024-04-13"},{"lineNumber":425,"author":{"gitId":"SuveenE"},"content":".","lastModifiedDate":"2024-04-13"},{"lineNumber":426,"author":{"gitId":"SuveenE"},"content":".","lastModifiedDate":"2024-04-13"},{"lineNumber":427,"author":{"gitId":"SuveenE"},"content":"Start tracking your health goals now!","lastModifiedDate":"2024-04-13"},{"lineNumber":428,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":429,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":430,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":431,"author":{"gitId":"SuveenE"},"content":"### Clear all logged entries: `clear`","lastModifiedDate":"2024-04-09"},{"lineNumber":432,"author":{"gitId":"SuveenE"},"content":"Deletes all the logs entered throughout the usage time period.","lastModifiedDate":"2024-04-09"},{"lineNumber":433,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":434,"author":{"gitId":"SuveenE"},"content":"Sample input: `clear`       ","lastModifiedDate":"2024-04-09"},{"lineNumber":435,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":436,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":437,"author":{"gitId":"SuveenE"},"content":"All logged data has been cleared.","lastModifiedDate":"2024-04-13"},{"lineNumber":438,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":439,"author":{"gitId":"SuveenE"},"content":"Since you are new here or your details are missing,","lastModifiedDate":"2024-04-13"},{"lineNumber":440,"author":{"gitId":"SuveenE"},"content":"let\u0027s start with a few questions to set things up!","lastModifiedDate":"2024-04-13"},{"lineNumber":441,"author":{"gitId":"SuveenE"},"content":"Please input your height (in cm): ","lastModifiedDate":"2024-04-13"},{"lineNumber":442,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":443,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":444,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":445,"author":{"gitId":"SuveenE"},"content":"### Exit the program: `bye`","lastModifiedDate":"2024-04-09"},{"lineNumber":446,"author":{"gitId":"SuveenE"},"content":"Exits the ActiveEdge application.","lastModifiedDate":"2024-04-09"},{"lineNumber":447,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":448,"author":{"gitId":"SuveenE"},"content":"Sample input: `bye`     ","lastModifiedDate":"2024-04-09"},{"lineNumber":449,"author":{"gitId":"SuveenE"},"content":"Expected output:","lastModifiedDate":"2024-04-09"},{"lineNumber":450,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":451,"author":{"gitId":"SuveenE"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-04-13"},{"lineNumber":452,"author":{"gitId":"SuveenE"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":453,"author":{"gitId":"SuveenE"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":454,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":455,"author":{"gitId":"SuveenE"},"content":"## FAQ ‚ùì","lastModifiedDate":"2024-03-27"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":457,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":459,"author":{"gitId":"SuveenE"},"content":"**A**:","lastModifiedDate":"2024-03-27"},{"lineNumber":460,"author":{"gitId":"SuveenE"},"content":"Create a \"data\" folder within the ActiveEdge application directory, ","lastModifiedDate":"2024-03-27"},{"lineNumber":461,"author":{"gitId":"SuveenE"},"content":"and then copy the \"data.txt\" file into this newly created folder.","lastModifiedDate":"2024-03-27"},{"lineNumber":462,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":463,"author":{"gitId":"SuveenE"},"content":"**Q**: I accidentally deleted a log. Is there a way to recover it?","lastModifiedDate":"2024-04-12"},{"lineNumber":464,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":465,"author":{"gitId":"SuveenE"},"content":"**A**: Unfortunately, deleted logs are not recoverable, so it\u0027s ","lastModifiedDate":"2024-04-12"},{"lineNumber":466,"author":{"gitId":"SuveenE"},"content":"important to be careful when using the delete command.","lastModifiedDate":"2024-03-27"},{"lineNumber":467,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":468,"author":{"gitId":"pradeep-cod"},"content":"**Q**: I accidentally cleared the data. Is there a way to recover it?","lastModifiedDate":"2024-03-31"},{"lineNumber":469,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":470,"author":{"gitId":"pradeep-cod"},"content":"**A**: Unfortunately, cleared data are not recoverable, so it\u0027s","lastModifiedDate":"2024-03-31"},{"lineNumber":471,"author":{"gitId":"pradeep-cod"},"content":"important to be careful when using the clear command.","lastModifiedDate":"2024-03-31"},{"lineNumber":472,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":474,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2024-03-27"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":476,"author":{"gitId":"SuveenE"},"content":"Here\u0027s a quick summary of commands available in **ActiveEdge**:","lastModifiedDate":"2024-04-09"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":478,"author":{"gitId":"SuveenE"},"content":"1. Log meal: `log m/\u003cMEAL_NAME\u003e s/\u003cNUMBER_OF_SERVINGS\u003e`    ","lastModifiedDate":"2024-04-09"},{"lineNumber":479,"author":{"gitId":"SuveenE"},"content":"2. Log water intake : `log w/\u003cAMOUNT_OF_WATER\u003e`    ","lastModifiedDate":"2024-04-09"},{"lineNumber":480,"author":{"gitId":"SuveenE"},"content":"3. Log exercises: `log e/\u003cEXERCISE_NAME\u003e d/\u003cDURATION\u003e`     ","lastModifiedDate":"2024-04-09"},{"lineNumber":481,"author":{"gitId":"SuveenE"},"content":"4. View daily goals: `show g`  ","lastModifiedDate":"2024-04-09"},{"lineNumber":482,"author":{"gitId":"SuveenE"},"content":"5. View daily calorie intake: `show c`     ","lastModifiedDate":"2024-04-09"},{"lineNumber":483,"author":{"gitId":"SuveenE"},"content":"6. View daily water intake: `show w`      ","lastModifiedDate":"2024-04-09"},{"lineNumber":484,"author":{"gitId":"SuveenE"},"content":"7. View all logged entries: `list`     ","lastModifiedDate":"2024-04-09"},{"lineNumber":485,"author":{"gitId":"SuveenE"},"content":"8. View all food items in the database: `foodData`     ","lastModifiedDate":"2024-04-09"},{"lineNumber":486,"author":{"gitId":"SuveenE"},"content":"9. View all exercises in the database: `exerciseData`  ","lastModifiedDate":"2024-04-09"},{"lineNumber":487,"author":{"gitId":"SuveenE"},"content":"10. Delete meal logs: `delete \u003cMEAL_NAME\u003e`. [Click here](#delete-meal-logs-delete) if you have multiple meal logs from the same meal.","lastModifiedDate":"2024-04-09"},{"lineNumber":488,"author":{"gitId":"SuveenE"},"content":"11. Delete water logs: `delete \u003cQUANTITY_OF_WATER\u003e ml` [Click here](#delete-water-logs-delete) if you have multiple water intake logs with the same amount.    ","lastModifiedDate":"2024-04-09"},{"lineNumber":489,"author":{"gitId":"SuveenE"},"content":"12. Delete exercise logs: `delete \u003cEXERCISE_NAME\u003e` [Click here](#delete-exercise-logs-delete) if you have multiple exercise logs from the same exercise.    ","lastModifiedDate":"2024-04-09"},{"lineNumber":490,"author":{"gitId":"SuveenE"},"content":"13. Log a meal not in the database: `add m/\u003cMEAL_NAME\u003e c/CALORIES_PER_SERVING s/\u003cNUMBER_OF_SERVINGS\u003e`   ","lastModifiedDate":"2024-04-09"},{"lineNumber":491,"author":{"gitId":"SuveenE"},"content":"14. Log an exercise not in the database: `add e/\u003cEXERCISE\u003e c/\u003cCALORIES_BURNT_PER_MIN\u003e d/\u003cDURATION_IN_MIN\u003e`  ","lastModifiedDate":"2024-04-09"},{"lineNumber":492,"author":{"gitId":"SuveenE"},"content":"15. Change user height: `change h`  ","lastModifiedDate":"2024-04-11"},{"lineNumber":493,"author":{"gitId":"SuveenE"},"content":"16. Change user weight: `change w`  ","lastModifiedDate":"2024-04-11"},{"lineNumber":494,"author":{"gitId":"SuveenE"},"content":"17. Change daily calorie intake goal: `change cg`","lastModifiedDate":"2024-04-11"},{"lineNumber":495,"author":{"gitId":"SuveenE"},"content":"18. Change daily water intake goal: `change wg`    ","lastModifiedDate":"2024-04-11"},{"lineNumber":496,"author":{"gitId":"SuveenE"},"content":"19. Show daily summary: `summary`   ","lastModifiedDate":"2024-04-11"},{"lineNumber":497,"author":{"gitId":"SuveenE"},"content":"20. Search for entries: `find`  ","lastModifiedDate":"2024-04-11"},{"lineNumber":498,"author":{"gitId":"SuveenE"},"content":"21. Get help: `help`    ","lastModifiedDate":"2024-04-11"},{"lineNumber":499,"author":{"gitId":"SuveenE"},"content":"22. Clear all logged entries: `clear`   ","lastModifiedDate":"2024-04-11"},{"lineNumber":500,"author":{"gitId":"SuveenE"},"content":"23. Exit the program: `bye`","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"pradeep-cod":37,"Praneet-25":8,"alvinnnnnnnnnn":13,"nikhil-2101":8,"SuveenE":408,"-":26}},{"path":"docs/team/alvinnnnnnnnnn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"# Wong Quan Wei Alvin - Project Portfolio Page","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"## Overview","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"#### Enhancements Implemented ","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"To view the code that I have contributed: https://encr.pw/reposenselink","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"#### Enhancements Implemented","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"1. Created `change` command to change height and weight","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"2. Created `log` command to log meals ","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"3. Created `LogBMI`, `LogHeight`, `LogWeight`, `UserDetails`, `UserDetailsList` inside","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"`userdetails` package, so users can log their height and weight, and will be given their ","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"BMI","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"4. Improved `MealTask` and `LogExercise` class to make easier for the user to understand","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"the contents when they input the command `list`","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"#### Contributions to Team-Based Tasks","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"alvinnnnnnnnnn":20}},{"path":"docs/team/nikhil-2101.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"## Nikhil Babu  - Project Portfolio Page","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"## Overview","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"This chatbot, known as ActiveEdge, simplifies students\u0027 ability to track their calorie and water intake which","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"incentivises and promotes a healthy lifestyle amid their busy and rigid schedules. ","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"####Enhancements Implemented","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"To view the code that I have contributed:","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"`DeleteTaskCommand` class to delete specific logs.   ","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"`LogWaterCommand` class to log water entries.   ","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"`ViewWaterIntakeCommand` class to view all water entries.","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"Created `LogWater` class.","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"####Contributions to Team-Based Tasks","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"nikhil-2101":16}},{"path":"docs/team/pradeep-cod.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pradeep-cod"},"content":"## Manimaran Pradeep  - Project Portfolio Page","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"## Overview","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":"Active Edge Fitness Tracker is a comprehensive health monitoring tool that meticulously tracks calorie intake,","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"water consumption, and exercise routines. It ensures users stay aligned with their goals by monitoring their progress","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"in real-time, allowing adjustments to be made to maintain consistency and achieve optimal fitness levels.","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"**Code contributed:** https://shorturl.at/msvFP","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"**Enhancements implemented:** I spearheaded the implementation of critical enhancements, including the goal-setting and","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"find features, along with the functionality for users to add new exercises and the clear function in order to clear all ","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"the data and start application from begin. Moreover, I implemented the change water goal command in order for users ","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"to change their water goal for the day. These enhancements significantly improved the functionality ","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"and usability of our application.","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"**Contributions to the UG:** My contributions to the User Guide were substantial. I authored the sections outlining the","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"basic features of our program and played a key role in refining the user guide format to ensure clarity and ","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"completeness and also implemented the FAQs. My team members built upon the basic structure of the UG I have created ","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"initially.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"pradeep-cod"},"content":"**Contributions to the DG:** I took the lead in creating comprehensive sequence diagrams for both the main component ","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"pradeep-cod"},"content":"and UI package, amended the target user profile and filled up the part on how a user can do manual testing. These ","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"diagrams provided invaluable insights into system interactions, facilitating better understanding and development.","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"pradeep-cod"},"content":"**Contributions to team-based tasks:** Within our team, I took on the responsibility of ensuring equitable distribution","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"of work among team members, ensuring that each member had an appropriate workload to maintain balance and productivity.","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"We split the work equally, and I actively monitored progress to address any discrepancies. Whenever help was needed, I ","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"provided support and guidance to my teammates, offering assistance and sharing knowledge to empower them in carrying","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"pradeep-cod"},"content":"out their tasks effectively. This collaborative approach fostered a supportive team environment and facilitated smooth ","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"pradeep-cod"},"content":"project execution. Moreover, I was proactive in fixing bugs whenever someone found a bug in our application and made ","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"pradeep-cod"},"content":"sure I reported bugs proactively when I find one as well.","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"**Review/mentoring contributions:**  I effectively delegated tasks, ensured alignment, and conducted thorough reviews ","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"pradeep-cod"},"content":"of team members\u0027 work. I provided extensive feedback and guidance on Pull Requests (PRs), ensuring adherence to ","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"pradeep-cod"},"content":"standards and fostering continuous improvement. Additionally, I ensured that the 3 tests passed in GitHub before ","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"approving PRs and made sure respective issues were solved with the code.","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"pradeep-cod"},"content":"**Contributions beyond the project team:** Beyond our project, I actively engaged with the broader community by sharing ","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"pradeep-cod"},"content":"insights and offering support on the forum. I reported bugs and provided assistance in resolving issues in other team\u0027s ","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"pradeep-cod"},"content":"products, showcasing my helping tendency and commitment to collaboration.","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"pradeep-cod"},"content":"My leadership, dedication, and technical expertise have been instrumental in the success of our project. I believe my ","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"pradeep-cod"},"content":"contributions warrant a favorable evaluation and recognition for my efforts.","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"pradeep-cod":44}},{"path":"docs/team/praneet-25.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Praneet-25"},"content":"## Seenivasaragavan Praneet  - Project Portfolio Page","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"Praneet-25"},"content":"## Overview","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"Praneet-25"},"content":"I am known for meeting my deadlines despite other commitments along my way and I also engage in meaningful","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"Praneet-25"},"content":"interactions with the team in attempt to provide useful insights to our end product, making constant improvements to the product.","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"Praneet-25"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"Praneet-25"},"content":"**Code contributed:** https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dPraneet\u0026sort\u003d","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"Praneet-25"},"content":"groupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"Praneet-25"},"content":"\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"Praneet-25"},"content":"**Enhancements implemented:** I took charge of implementing the calorie tracker feature and included the calorie deficit and surplus","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"Praneet-25"},"content":"feature so that users can get a good gauge if their exercise burnt down the calories of their meal intake or not.","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"Praneet-25"},"content":"**Contributions to the UG:** I included the testing data for the food items and exercises. In addition, I made contributions to ","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"Praneet-25"},"content":"the command summary list.","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"Praneet-25"},"content":"**Contributions to the DG:** I was in charge of crafting the sequence diagrams for the storage and parser package","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"Praneet-25"},"content":"and amended the command summary. The diagrams provide insight the interactions within the system, ensuring the users","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"Praneet-25"},"content":"can better understand the software development process.","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"Praneet-25":20}},{"path":"docs/team/suveene.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"## Suveen Ellawela  - Project Portfolio Page","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"## Overview","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"**ActiveEdge**, simplifies students\u0027 ability to track their calorie and water intake which","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"incentivises and promotes a healthy lifestyle amid their busy and rigid schedules.","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"[Click here](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dsuveene\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2024-02-23\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other) to view the code that I have contributed.","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"####Enhancements Implemented","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"1. Implemented `Exercise` class to log exercise entries.   ","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"2. Implemented `addNewMeals` feature to add meals that are not in the database.     ","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"3. Implemented `Storage` class to store logs locally and retrieve them when","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"the user returns.   ","lastModifiedDate":"2024-04-08"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"4. Created`Loglist` class.    ","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"5. Implemented `Help` command.","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"6. Created `CommandUI` class.","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"7. Improved all `delete` commands to delete logs by the index addressing PE dry run issues.   ","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"8. Improved the `Parser` class to reduce the rigidness and account small human errors.     ","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"9. Updated the `README.md` page from Duke to ActiveEdge appropriately.     ","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"10. Compiled the majority of the `UserGuide`.     ","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"11. Wrote tests for `addNewMeal`, `addNewExercise` and `Help` commands.","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"SuveenE"},"content":"####Contributions to Team-Based Tasks","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"SuveenE"},"content":"Set up GitHub team organization and upstream repository.    ","lastModifiedDate":"2024-04-08"},{"lineNumber":26,"author":{"gitId":"SuveenE"},"content":"Set up the skeleton code for the project with Parser, Command and UI packages.","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"SuveenE"},"content":"Worked on fixing bugs found from PE dry run and internal testing.","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"SuveenE":27}},{"path":"src/main/java/activeedge/ActiveEdge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package activeedge;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"import command.ActiveEdgeException;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"import activeedge.parser.Parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"import activeedge.ui.ByeUi;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"import command.Command;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-10"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"public class ActiveEdge {","lastModifiedDate":"2024-03-10"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"    /**","lastModifiedDate":"2024-03-10"},{"lineNumber":13,"author":{"gitId":"Praneet-25"},"content":"     * Main entry-point for the ActiveEdge application.","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"     */","lastModifiedDate":"2024-03-10"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"    public static void run() throws ActiveEdgeException {","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-10"},{"lineNumber":17,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"        CommandUi.printWelcomeMessage();","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-03-10"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"        Storage.fetchData();","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2024-03-10"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        while (!input.toLowerCase().contains(\"bye\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"            Command command \u003d parser.handleInput(input);","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"            if (command !\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"                command.execute();","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"                Storage.saveLogsToFile(\"data/data.txt\");","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"            } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"Unknown command.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"SuveenE"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2024-03-10"},{"lineNumber":33,"author":{"gitId":"SuveenE"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":34,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"Praneet-25"},"content":"        ByeUi.printByeMessage();","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"    public static void main(String[] args) throws ActiveEdgeException {","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"SuveenE"},"content":"        new ActiveEdge().run();","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"Praneet-25":3,"alvinnnnnnnnnn":2,"nikhil-2101":10,"SuveenE":27}},{"path":"src/main/java/activeedge/ExerciseData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"Praneet-25"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Praneet-25"},"content":" * The ExerciseData class stores information about various exercise activities.","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Praneet-25"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class ExerciseData {","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"Praneet-25"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Praneet-25"},"content":"     * An array containing data for each exercise activity.","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Praneet-25"},"content":"     * Each element is an array with two elements: exercise name and calories burnt per minute (as integers).","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Praneet-25"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"    public static String[][] exercisesList \u003d {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Praneet-25"},"content":"            {\"running\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Praneet-25"},"content":"            {\"cycling\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Praneet-25"},"content":"            {\"swimming\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Praneet-25"},"content":"            {\"jumping jacks\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Praneet-25"},"content":"            {\"walking\", \"4\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Praneet-25"},"content":"            {\"yoga\", \"3\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Praneet-25"},"content":"            {\"pilates\", \"6\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Praneet-25"},"content":"            {\"weightlifting\", \"5\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"Praneet-25"},"content":"            {\"aerobics\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Praneet-25"},"content":"            {\"dancing\", \"9\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Praneet-25"},"content":"            {\"kickboxing\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Praneet-25"},"content":"            {\"zumba\", \"9\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Praneet-25"},"content":"            {\"HIIT\", \"11\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Praneet-25"},"content":"            {\"rowing\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Praneet-25"},"content":"            {\"skiing\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Praneet-25"},"content":"            {\"snowboarding\", \"7\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Praneet-25"},"content":"            {\"hiking\", \"6\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Praneet-25"},"content":"            {\"climbing\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Praneet-25"},"content":"            {\"jogging\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"Praneet-25"},"content":"            {\"basketball\", \"9\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"Praneet-25"},"content":"            {\"tennis\", \"7\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"Praneet-25"},"content":"            {\"badminton\", \"6\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"Praneet-25"},"content":"            {\"squash\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"Praneet-25"},"content":"            {\"golf\", \"3\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"Praneet-25"},"content":"            {\"table tennis\", \"3\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"Praneet-25"},"content":"            {\"volleyball\", \"4\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"Praneet-25"},"content":"            {\"football\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"Praneet-25"},"content":"            {\"rugby\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"Praneet-25"},"content":"            {\"cricket\", \"6\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"Praneet-25"},"content":"            {\"baseball\", \"4\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"Praneet-25"},"content":"            {\"softball\", \"6\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"Praneet-25"},"content":"            {\"surfing\", \"4\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"Praneet-25"},"content":"            {\"skateboarding\", \"5\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"Praneet-25"},"content":"            {\"rock climbing\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"Praneet-25"},"content":"            {\"bouldering\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"Praneet-25"},"content":"            {\"circuit training\", \"9\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"Praneet-25"},"content":"            {\"paddleboarding\", \"6\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"Praneet-25"},"content":"            {\"kayaking\", \"6\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"Praneet-25"},"content":"            {\"canoeing\", \"5\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"Praneet-25"},"content":"            {\"martial arts\", \"9\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"Praneet-25"},"content":"            {\"boxing\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"Praneet-25"},"content":"            {\"karate\", \"9\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"Praneet-25"},"content":"            {\"taekwondo\", \"9\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"Praneet-25"},"content":"            {\"judo\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"Praneet-25"},"content":"            {\"wrestling\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"Praneet-25"},"content":"            {\"muay thai\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"Praneet-25"},"content":"            {\"aikido\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"Praneet-25"},"content":"            {\"jiu-jitsu\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"Praneet-25"},"content":"            {\"piloxing\", \"9\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"Praneet-25"},"content":"            {\"barre\", \"7\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"Praneet-25"},"content":"            {\"spinning\", \"7\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"Praneet-25"},"content":"            {\"ballet\", \"4\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"Praneet-25"},"content":"            {\"salsa dancing\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"Praneet-25"},"content":"            {\"ballroom dancing\", \"5\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"Praneet-25"},"content":"            {\"tango\", \"6\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"Praneet-25"},"content":"            {\"flamenco\", \"7\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"Praneet-25"},"content":"            {\"belly dancing\", \"7\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"Praneet-25"},"content":"            {\"capoeira\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"Praneet-25"},"content":"            {\"pole dancing\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"Praneet-25"},"content":"            {\"circus arts\", \"7\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"Praneet-25"},"content":"            {\"parkour\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"Praneet-25"},"content":"            {\"freerunning\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"Praneet-25"},"content":"            {\"tricking\", \"9\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"Praneet-25"},"content":"            {\"slacklining\", \"5\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"Praneet-25"},"content":"            {\"bungee jumping\", \"13\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"Praneet-25"},"content":"            {\"skydiving\", \"10\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"Praneet-25"},"content":"            {\"paragliding\", \"7\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"Praneet-25"},"content":"            {\"kitesurfing\", \"7\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"Praneet-25"},"content":"            {\"wakeboarding\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"Praneet-25"},"content":"            {\"snowmobiling\", \"6\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"Praneet-25"},"content":"            {\"sledding\", \"8\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"Praneet-25"},"content":"            {\"ice skating\", \"4\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"Praneet-25"},"content":"            {\"roller skating\", \"5\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"Praneet-25"},"content":"            {\"skateboarding\", \"5\"},","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"Praneet-25"},"content":"            {\"biking\", \"4\"}","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    };","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"Praneet-25"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"Praneet-25"},"content":"     * Prints the exercise details for each exercise activity in the exerciseList array.","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"Praneet-25"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"Praneet-25"},"content":"    // In ExerciseData class","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"Praneet-25"},"content":"    public static void printExercises() {","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"Praneet-25"},"content":"        for (int i \u003d 0; i \u003c exercisesList.length; i++) {","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"Praneet-25"},"content":"            // Concatenate the exercise name and calories burnt per minute in the same line","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"SuveenE"},"content":"            String exerciseInfo \u003d \"Exercise: \" + exercisesList[i][0] + \" | Calories burnt per minute: \"","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"SuveenE"},"content":"                    + exercisesList[i][1] +\" kcal\";","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"Praneet-25"},"content":"            System.out.println(exerciseInfo);","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"Praneet-25"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"Praneet-25"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"Praneet-25"},"content":"     * Asserts that the exercise data is valid.","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"Praneet-25"},"content":"     * For example, it checks that each exercise has a non-empty name and a positive calories burnt value.","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"Praneet-25"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"Praneet-25"},"content":"    public static void assertExerciseData() {","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"Praneet-25"},"content":"        for (String[] exercise : exercisesList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"Praneet-25"},"content":"            assert !exercise[0].isEmpty() : \"Exercise name cannot be empty\";","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"Praneet-25"},"content":"            int caloriesBurnt \u003d Integer.parseInt(exercise[1]);","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"Praneet-25"},"content":"            assert caloriesBurnt \u003e 0 : \"Calories burnt per minute must be positive\";","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"Praneet-25"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"nikhil-2101"},"content":"     * Checks if an exercise with the given exercise name already exists in the list of exercises.","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"nikhil-2101"},"content":"     * @param exerciseName The name of the exercise to check.","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"nikhil-2101"},"content":"     * @return true if the exercise exists, false otherwise.","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"nikhil-2101"},"content":"    public static boolean exerciseExists(String exerciseName) {","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"nikhil-2101"},"content":"        for (String[] exercise : exercisesList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"nikhil-2101"},"content":"            if (exercise[0].equalsIgnoreCase(exerciseName)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"nikhil-2101"},"content":"                return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"nikhil-2101"},"content":"        return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"Praneet-25"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"Praneet-25"},"content":"     * The main method checks the exercise data validity and prints the exercises.","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"Praneet-25"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"Praneet-25"},"content":"     * @param args The command-line arguments (not used in this method).","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"Praneet-25"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"Praneet-25"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"Praneet-25"},"content":"        // Check exercise data validity","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"Praneet-25"},"content":"        assertExerciseData();","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"Praneet-25"},"content":"        // Print exercises","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"Praneet-25"},"content":"        printExercises();","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"Praneet-25":118,"alvinnnnnnnnnn":5,"nikhil-2101":15,"SuveenE":3}},{"path":"src/main/java/activeedge/FoodData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package activeedge;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Praneet-25"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Praneet-25"},"content":" * The FoodData class stores information about various food items.","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Praneet-25"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class FoodData {","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Praneet-25"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Praneet-25"},"content":"     * An array containing data for each food item.","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Praneet-25"},"content":"     * Each element is an array with two elements: food name and calories.","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Praneet-25"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static String[][] foodItems \u003d {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Praneet-25"},"content":"            {\"fried chicken\", \"543\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Praneet-25"},"content":"            {\"chicken burger\", \"357\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Praneet-25"},"content":"            {\"beef burger\", \"500\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Praneet-25"},"content":"            {\"fish burger\", \"379\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"Praneet-25"},"content":"            {\"cheese pizza\", \"220\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Praneet-25"},"content":"            {\"chicken pizza\", \"310\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Praneet-25"},"content":"            {\"vegeterian pizza\", \"280\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Praneet-25"},"content":"            {\"french fries\", \"365\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"Praneet-25"},"content":"            {\"potato wedges\", \"123\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Praneet-25"},"content":"            {\"steak\", \"679\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"Praneet-25"},"content":"            {\"tomato sauce pasta\", \"380\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Praneet-25"},"content":"            {\"carbonara pasta\", \"574\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Praneet-25"},"content":"            {\"alfredo pasta\", \"500\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"Praneet-25"},"content":"            {\"chicken chop\", \"202\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Praneet-25"},"content":"            {\"lamb chop\", \"294\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Praneet-25"},"content":"            {\"fish and chips\", \"765\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Praneet-25"},"content":"            {\"caeser salad\", \"94\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Praneet-25"},"content":"            {\"garden salad\", \"20\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Praneet-25"},"content":"            {\"BLT sandwich\", \"344\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Praneet-25"},"content":"            {\"egg mayo sandwich\", \"485\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"Praneet-25"},"content":"            {\"ham and cheese sandwich\", \"352\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Praneet-25"},"content":"            {\"roast beef sandwich\", \"351\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Praneet-25"},"content":"            {\"chicken wings\", \"400\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Praneet-25"},"content":"            {\"pancakes\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Praneet-25"},"content":"            {\"hotdog\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Praneet-25"},"content":"            {\"cheese baked rice\", \"450\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Praneet-25"},"content":"            {\"idly\", \"58\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Praneet-25"},"content":"            {\"dosa\", \"123\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Praneet-25"},"content":"            {\"sambar rice\", \"187\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Praneet-25"},"content":"            {\"rasam rice\", \"151\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Praneet-25"},"content":"            {\"samosa\", \"222\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Praneet-25"},"content":"            {\"medu vadai\", \"108\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Praneet-25"},"content":"            {\"paneer masala\", \"360\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Praneet-25"},"content":"            {\"chicken masala\", \"650\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Praneet-25"},"content":"            {\"channa masala\", \"193\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Praneet-25"},"content":"            {\"chapati\", \"169\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Praneet-25"},"content":"            {\"prata\", \"122\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Praneet-25"},"content":"            {\"egg prata\", \"289\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Praneet-25"},"content":"            {\"egg biryani\", \"580\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Praneet-25"},"content":"            {\"chicken biryani\", \"753\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Praneet-25"},"content":"            {\"vegeterian biryani\", \"532\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Praneet-25"},"content":"            {\"mutton biryani\", \"927\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Praneet-25"},"content":"            {\"fish biryani\", \"599\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Praneet-25"},"content":"            {\"prawn biryani\", \"585\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Praneet-25"},"content":"            {\"plain naan\", \"262\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"Praneet-25"},"content":"            {\"butter naan\", \"303\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"Praneet-25"},"content":"            {\"fish curry\", \"309\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Praneet-25"},"content":"            {\"pulao\", \"510\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Praneet-25"},"content":"            {\"lemon rice\", \"516\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"Praneet-25"},"content":"            {\"curd rice\", \"310\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"Praneet-25"},"content":"            {\"katsu don\", \"700\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"Praneet-25"},"content":"            {\"sushi\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"Praneet-25"},"content":"            {\"sashimi\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"Praneet-25"},"content":"            {\"miso soup\", \"70\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"Praneet-25"},"content":"            {\"yakitori\", \"160\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"Praneet-25"},"content":"            {\"gyoza\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"Praneet-25"},"content":"            {\"tempura\", \"400\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"Praneet-25"},"content":"            {\"takoyaki\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"Praneet-25"},"content":"            {\"okonomiyaki\", \"650\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"Praneet-25"},"content":"            {\"yakisoba\", \"500\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Praneet-25"},"content":"            {\"nikujaga\", \"400\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"Praneet-25"},"content":"            {\"sukiyaki\", \"500\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"Praneet-25"},"content":"            {\"tonkatsu\", \"600\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"Praneet-25"},"content":"            {\"curry rice\", \"600\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Praneet-25"},"content":"            {\"ramen\", \"600\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"Praneet-25"},"content":"            {\"udon\", \"400\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"Praneet-25"},"content":"            {\"soba\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"Praneet-25"},"content":"            {\"edamame\", \"120\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"Praneet-25"},"content":"            {\"kung pao shrimp\", \"500\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"Praneet-25"},"content":"            {\"dan dan noodles\", \"450\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"Praneet-25"},"content":"            {\"char siu bao\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"Praneet-25"},"content":"            {\"twice cooked pork\", \"600\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"Praneet-25"},"content":"            {\"egg fried rice\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"Praneet-25"},"content":"            {\"wontons in spicy sauce\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Praneet-25"},"content":"            {\"chow mein\", \"400\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"Praneet-25"},"content":"            {\"kung pao chicken\", \"500\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"Praneet-25"},"content":"            {\"dumplings\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"Praneet-25"},"content":"            {\"peking duck\", \"600\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"Praneet-25"},"content":"            {\"xiao long bao\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"Praneet-25"},"content":"            {\"yangzhou fried rice\", \"450\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"Praneet-25"},"content":"            {\"congee\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"Praneet-25"},"content":"            {\"stir fried eggplant with garlic sauce\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"Praneet-25"},"content":"            {\"spring rolls\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"Praneet-25"},"content":"            {\"sweet and sour pork\", \"500\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"Praneet-25"},"content":"            {\"kung pao beef\", \"500\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"Praneet-25"},"content":"            {\"chinese broccoli with oyster sauce\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"Praneet-25"},"content":"            {\"stir fried greens with garlic\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"Praneet-25"},"content":"            {\"Moo Shu Pork\", \"500\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"Praneet-25"},"content":"            {\"nasi lemak\", \"650\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"Praneet-25"},"content":"            {\"rendang\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"Praneet-25"},"content":"            {\"satay\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"Praneet-25"},"content":"            {\"mee goreng\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"Praneet-25"},"content":"            {\"nasi goreng\", \"450\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"Praneet-25"},"content":"            {\"laksa\", \"450\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"Praneet-25"},"content":"            {\"otak otak\", \"150\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"Praneet-25"},"content":"            {\"ayam goreng\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"Praneet-25"},"content":"            {\"sambal belacan\", \"75\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"Praneet-25"},"content":"            {\"ikan bilis sambal\", \"100\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"Praneet-25"},"content":"            {\"acar\", \"75\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"Praneet-25"},"content":"            {\"roti jala\", \"90\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"Praneet-25"},"content":"            {\"sayur goreng\", \"75\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"Praneet-25"},"content":"            {\"sambal tempeh\", \"125\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"Praneet-25"},"content":"            {\"telur masin\", \"85\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"Praneet-25"},"content":"            {\"goreng pisang\", \"125\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"Praneet-25"},"content":"            {\"keopok goreng\", \"125\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"Praneet-25"},"content":"            {\"tahu goreng\", \"125\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"Praneet-25"},"content":"            {\"fish curry\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"Praneet-25"},"content":"            {\"chicken curry\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"Praneet-25"},"content":"            {\"bergedil\", \"120\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"Praneet-25"},"content":"            {\"samosa\", \"100\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"Praneet-25"},"content":"            {\"curry puff\", \"150\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"Praneet-25"},"content":"            {\"mee siam\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"Praneet-25"},"content":"            {\"ayam penyet\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"Praneet-25"},"content":"            {\"sambal goreng\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"Praneet-25"},"content":"            {\"udang sambal\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"Praneet-25"},"content":"            {\"kimchi\", \"25\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"Praneet-25"},"content":"            {\"bibimbap\", \"600\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"Praneet-25"},"content":"            {\"bulgogi\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"Praneet-25"},"content":"            {\"japchae\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"Praneet-25"},"content":"            {\"kimchi jjigae\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"Praneet-25"},"content":"            {\"tteokbokki\", \"275\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"Praneet-25"},"content":"            {\"samgyeopsal\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"Praneet-25"},"content":"            {\"korean sweet potato\", \"90\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"Praneet-25"},"content":"            {\"korean radish\", \"20\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"Praneet-25"},"content":"            {\"seaweed\", \"25\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"Praneet-25"},"content":"            {\"soy sauce tofu\", \"65\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"Praneet-25"},"content":"            {\"korean fried chicken\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"Praneet-25"},"content":"            {\"kimbap\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"Praneet-25"},"content":"            {\"tangsuyuk\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"Praneet-25"},"content":"            {\"gimbap\", \"175\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"Praneet-25"},"content":"            {\"galbi\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"Praneet-25"},"content":"            {\"soybean sprouts\", \"35\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"Praneet-25"},"content":"            {\"anchovy\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"Praneet-25"},"content":"            {\"perilla leaves\", \"45\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"Praneet-25"},"content":"            {\"korean chilli peppers\", \"45\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"Praneet-25"},"content":"            {\"gyeran jjim\", \"125\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"Praneet-25"},"content":"            {\"gyeran mari\", \"125\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"Praneet-25"},"content":"            {\"pajeon\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"Praneet-25"},"content":"            {\"black coffee\", \"0\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"Praneet-25"},"content":"            {\"diet soda\", \"10\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"Praneet-25"},"content":"            {\"almond milk\", \"45\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"Praneet-25"},"content":"            {\"soy milk\", \"95\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"Praneet-25"},"content":"            {\"skim plain milk\", \"80\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"Praneet-25"},"content":"            {\"orange juice\", \"115\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"Praneet-25"},"content":"            {\"apple juice\", \"115\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"Praneet-25"},"content":"            {\"craneberry juice\", \"115\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"Praneet-25"},"content":"            {\"lemonade\", \"125\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"Praneet-25"},"content":"            {\"energy drink\", \"150\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"Praneet-25"},"content":"            {\"wine\", \"120\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"Praneet-25"},"content":"            {\"hot chocolate\", \"175\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"Praneet-25"},"content":"            {\"tea\", \"85\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"Praneet-25"},"content":"            {\"coffee\", \"75\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"Praneet-25"},"content":"            {\"oat milk\", \"130\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"Praneet-25"},"content":"            {\"frappucino\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"Praneet-25"},"content":"            {\"smoothie\", \"225\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"Praneet-25"},"content":"            {\"protein shake\", \"175\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"Praneet-25"},"content":"            {\"mango juice\", \"125\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"Praneet-25"},"content":"            {\"milkshake\", \"115\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"Praneet-25"},"content":"            {\"beer\", \"150\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"Praneet-25"},"content":"            {\"peking duck\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"Praneet-25"},"content":"            {\"sichuan hotpot beef\", \"450\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"Praneet-25"},"content":"            {\"steamed dumplings\", \"80\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"Praneet-25"},"content":"            {\"chicken rice\", \"450\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"Praneet-25"},"content":"            {\"chow fun\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"Praneet-25"},"content":"            {\"fried rice\", \"450\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"Praneet-25"},"content":"            {\"steamed fish\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"Praneet-25"},"content":"            {\"char siu\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"Praneet-25"},"content":"            {\"mapo tofu\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"Praneet-25"},"content":"            {\"rice with vegetables\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"Praneet-25"},"content":"            {\"rice with meat\", \"400\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"Praneet-25"},"content":"            {\"scallion pancakes\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"Praneet-25"},"content":"            {\"pork barbeque ribs\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"Praneet-25"},"content":"            {\"fishball noodle\", \"150\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"Praneet-25"},"content":"            {\"mushroom minced meat noodle\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"Praneet-25"},"content":"            {\"wanton mee\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"Praneet-25"},"content":"            {\"red chilli crab\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"Praneet-25"},"content":"            {\"abalone\", \"400\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"Praneet-25"},"content":"            {\"mee soup\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"Praneet-25"},"content":"            {\"pakoras\", \"282\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"Praneet-25"},"content":"            {\"aloo tikki\", \"183\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"Praneet-25"},"content":"            {\"bhel puri\", \"198\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"Praneet-25"},"content":"            {\"pani puri\", \"127\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"Praneet-25"},"content":"            {\"bhajiya\", \"228\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"Praneet-25"},"content":"            {\"kachori\", \"307\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"Praneet-25"},"content":"            {\"dhokla\", \"129\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"Praneet-25"},"content":"            {\"masala papad\", \"87\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"Praneet-25"},"content":"            {\"chole bhature\", \"614\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"Praneet-25"},"content":"            {\"pav bhaji\", \"458\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"Praneet-25"},"content":"            {\"vada pav\", \"358\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"Praneet-25"},"content":"            {\"misal pav\", \"389\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"Praneet-25"},"content":"            {\"chakli\", \"77\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"Praneet-25"},"content":"            {\"upma\", \"287\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"Praneet-25"},"content":"            {\"masala dosa\", \"409\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"Praneet-25"},"content":"            {\"bread pakora\", \"257\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"Praneet-25"},"content":"            {\"samosa chaat\", \"328\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"Praneet-25"},"content":"            {\"momo\", \"278\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"Praneet-25"},"content":"            {\"sev puri\", \"229\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":209,"author":{"gitId":"Praneet-25"},"content":"            {\"khandvi\", \"137\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"Praneet-25"},"content":"            {\"lontong\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"Praneet-25"},"content":"            {\"murtabak\", \"400\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"Praneet-25"},"content":"            {\"nasi kerabu\", \"450\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"Praneet-25"},"content":"            {\"pulut panggang\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"Praneet-25"},"content":"            {\"kuih lapis\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"Praneet-25"},"content":"            {\"rojak\", \"250\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"Praneet-25"},"content":"            {\"ketupat\", \"150\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"Praneet-25"},"content":"            {\"sambal udang\", \"180\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"Praneet-25"},"content":"            {\"ikan bakar\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"Praneet-25"},"content":"            {\"nasi dagang\", \"400\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"Praneet-25"},"content":"            {\"pecal\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"Praneet-25"},"content":"            {\"lemang\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"Praneet-25"},"content":"            {\"pisang goreng cheese\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"Praneet-25"},"content":"            {\"roti canai\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"Praneet-25"},"content":"            {\"kuih dadar\", \"150\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"Praneet-25"},"content":"            {\"asam pedas\", \"200\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":226,"author":{"gitId":"Praneet-25"},"content":"            {\"soto ayam\", \"300\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"Praneet-25"},"content":"            {\"ayam percik\", \"350\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"Praneet-25"},"content":"            {\"sambal telur\", \"120\"},","lastModifiedDate":"2024-03-18"},{"lineNumber":229,"author":{"gitId":"Praneet-25"},"content":"            {\"kuih keria\", \"250\"}","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    };","lastModifiedDate":"2024-03-12"},{"lineNumber":231,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"Praneet-25"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":233,"author":{"gitId":"Praneet-25"},"content":"     * Prints the calories of each food item in the foodItems array.","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"Praneet-25"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":235,"author":{"gitId":"Praneet-25"},"content":"    // In FoodData class","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"Praneet-25"},"content":"    public static void printFood() {","lastModifiedDate":"2024-03-18"},{"lineNumber":237,"author":{"gitId":"Praneet-25"},"content":"        for (int i \u003d 0; i \u003c foodItems.length; i++) {","lastModifiedDate":"2024-03-18"},{"lineNumber":238,"author":{"gitId":"Praneet-25"},"content":"            // Concatenate the food name, calories, and \"kcal\" in the same line","lastModifiedDate":"2024-04-01"},{"lineNumber":239,"author":{"gitId":"SuveenE"},"content":"            String foodInfo \u003d \"Meal: \" + foodItems[i][0] + \" | Calories per serving: \" + foodItems[i][1] + \" kcal\";","lastModifiedDate":"2024-04-13"},{"lineNumber":240,"author":{"gitId":"Praneet-25"},"content":"            System.out.println(foodInfo);","lastModifiedDate":"2024-04-01"},{"lineNumber":241,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":242,"author":{"gitId":"Praneet-25"},"content":"            // Assert that the calorie value is a valid integer","lastModifiedDate":"2024-03-22"},{"lineNumber":243,"author":{"gitId":"Praneet-25"},"content":"            try {","lastModifiedDate":"2024-03-22"},{"lineNumber":244,"author":{"gitId":"Praneet-25"},"content":"                int calorieValue \u003d Integer.parseInt(foodItems[i][1]);","lastModifiedDate":"2024-03-22"},{"lineNumber":245,"author":{"gitId":"Praneet-25"},"content":"                assert calorieValue \u003e\u003d 0 : \"Calorie value must be non-negative\";","lastModifiedDate":"2024-03-22"},{"lineNumber":246,"author":{"gitId":"Praneet-25"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-22"},{"lineNumber":247,"author":{"gitId":"Praneet-25"},"content":"                System.err.println(\"Invalid calorie value for food item: \" + foodItems[i][0]);","lastModifiedDate":"2024-03-22"},{"lineNumber":248,"author":{"gitId":"Praneet-25"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":249,"author":{"gitId":"Praneet-25"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":250,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":251,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":252,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":253,"author":{"gitId":"nikhil-2101"},"content":"     * Checks if a food item with the given description already exists in the list of food items.","lastModifiedDate":"2024-04-01"},{"lineNumber":254,"author":{"gitId":"nikhil-2101"},"content":"     * @param description The description of the food item to check.","lastModifiedDate":"2024-04-01"},{"lineNumber":255,"author":{"gitId":"nikhil-2101"},"content":"     * @return true if the food item exists, false otherwise.","lastModifiedDate":"2024-04-01"},{"lineNumber":256,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":257,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":258,"author":{"gitId":"nikhil-2101"},"content":"    public static boolean foodItemExists(String description) {","lastModifiedDate":"2024-04-01"},{"lineNumber":259,"author":{"gitId":"nikhil-2101"},"content":"        for (String[] foodItem : foodItems) {","lastModifiedDate":"2024-04-01"},{"lineNumber":260,"author":{"gitId":"nikhil-2101"},"content":"            if (foodItem[0].equalsIgnoreCase(description)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":261,"author":{"gitId":"nikhil-2101"},"content":"                return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":262,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":263,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":264,"author":{"gitId":"nikhil-2101"},"content":"        return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":265,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":266,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":267,"author":{"gitId":"Praneet-25"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":268,"author":{"gitId":"Praneet-25"},"content":"     * Appends a new item to the original array.","lastModifiedDate":"2024-03-31"},{"lineNumber":269,"author":{"gitId":"Praneet-25"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":270,"author":{"gitId":"Praneet-25"},"content":"     * @param originalArray The original array to which the new item will be appended.","lastModifiedDate":"2024-03-31"},{"lineNumber":271,"author":{"gitId":"Praneet-25"},"content":"     * @param newItem       The new item to be appended in the format [food name, calories].","lastModifiedDate":"2024-03-31"},{"lineNumber":272,"author":{"gitId":"Praneet-25"},"content":"     * @return The new array with the new item appended.","lastModifiedDate":"2024-03-31"},{"lineNumber":273,"author":{"gitId":"Praneet-25"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":274,"author":{"gitId":"SuveenE"},"content":"    public static String[][] appendItem(String[][] originalArray, String[] newItem) {","lastModifiedDate":"2024-03-30"},{"lineNumber":275,"author":{"gitId":"SuveenE"},"content":"        // Create a new array with one more row than the original","lastModifiedDate":"2024-03-30"},{"lineNumber":276,"author":{"gitId":"SuveenE"},"content":"        String[][] newArray \u003d new String[originalArray.length + 1][2]; // Assuming each item has 2 elements","lastModifiedDate":"2024-03-30"},{"lineNumber":277,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":278,"author":{"gitId":"SuveenE"},"content":"        // Copy the contents of the original array to the new array","lastModifiedDate":"2024-03-30"},{"lineNumber":279,"author":{"gitId":"SuveenE"},"content":"        for (int i \u003d 0; i \u003c originalArray.length; i++) {","lastModifiedDate":"2024-03-30"},{"lineNumber":280,"author":{"gitId":"SuveenE"},"content":"            newArray[i] \u003d originalArray[i];","lastModifiedDate":"2024-03-30"},{"lineNumber":281,"author":{"gitId":"SuveenE"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":282,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":283,"author":{"gitId":"SuveenE"},"content":"        // Add the new item to the last position of the new array","lastModifiedDate":"2024-03-30"},{"lineNumber":284,"author":{"gitId":"SuveenE"},"content":"        newArray[newArray.length - 1] \u003d newItem;","lastModifiedDate":"2024-03-30"},{"lineNumber":285,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":286,"author":{"gitId":"SuveenE"},"content":"        return newArray;","lastModifiedDate":"2024-03-30"},{"lineNumber":287,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":288,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Praneet-25":251,"alvinnnnnnnnnn":5,"nikhil-2101":15,"SuveenE":17}},{"path":"src/main/java/activeedge/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package activeedge;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogGoals;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogMeal;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogList;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogExercise;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogWater;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.LogBMI;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.LogHeight;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.LogWeight;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.UserDetailsList;","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import command.AddBMICommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import command.AddHeightCommand;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import command.AddWeightCommand;","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"import command.AddCalorieGoalCommand;","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"import command.AddWaterGoalCommand;","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.io.File;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"SuveenE"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"SuveenE"},"content":" * The {@code Storage} class handles file operations for the Health Tracker application.","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"SuveenE"},"content":" * It includes methods for ensuring directory existence, creating files, saving logs to files,","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"SuveenE"},"content":" * and fetching data from files.","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"SuveenE"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class Storage {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"SuveenE"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"SuveenE"},"content":"     * Ensures that the directory for a given file path exists.","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"SuveenE"},"content":"     * If the directory does not exist, it creates all necessary parent directories.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"SuveenE"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"SuveenE"},"content":"     * @param filePath The file path for which to ensure directory existence.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"SuveenE"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void ensureDirectoryExists(String filePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (!parentDir.exists()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            parentDir.mkdirs();","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"SuveenE"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"SuveenE"},"content":"     * Creates a new file at the specified file path.","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"SuveenE"},"content":"     * If the file\u0027s directory does not exist, it ensures the creation of the directory structure.","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"SuveenE"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"SuveenE"},"content":"     * @param filePath The path of the file to be created.","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"SuveenE"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void createFile(String filePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        ensureDirectoryExists(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            FileWriter file \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            file.close();","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(\"An error occurred while creating file: \" + e.getMessage());","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"SuveenE"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * Saves the current logs from {@code LogList} to a file at the given file path.","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * Each log is converted to a string and written to the file, one log per line.","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"SuveenE"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"SuveenE"},"content":"     * @param filePath The path of the file where logs should be saved.","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"SuveenE"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void saveLogsToFile(String filePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"SuveenE"},"content":"        ensureDirectoryExists(filePath);","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"SuveenE"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath, false)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            for (int i \u003d 0; i \u003c UserDetailsList.detailsList.size(); i++) {","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                String out \u003d UserDetailsList.detailsList.get(i).toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                fw.write(out + \"\\n\");","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            for (int i \u003d 0; i \u003c LogList.logList.size(); i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                String out \u003d LogList.logList.get(i).toString();","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"SuveenE"},"content":"                fw.write(out + \"\\n\");","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(\"An error occurred while saving logs to file: \" + e.getMessage());","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void listEmpty() {","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-04-09"},{"lineNumber":88,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-09"},{"lineNumber":89,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-09"},{"lineNumber":90,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String date \u003d currentDateTime.format(dateFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":91,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String time \u003d currentDateTime.format(timeFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":92,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2024-03-22"},{"lineNumber":93,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int j \u003d 0;","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"pradeep-cod"},"content":"        int k \u003d 0;","lastModifiedDate":"2024-04-08"},{"lineNumber":96,"author":{"gitId":"pradeep-cod"},"content":"        int l \u003d 0;","lastModifiedDate":"2024-04-08"},{"lineNumber":97,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Since you are new here or your details are missing,\\nlet\u0027s start with a few questions \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"SuveenE"},"content":"                \"to set things up!\");","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"pradeep-cod"},"content":"        Scanner scanner \u003d new Scanner(System.in); // Create Scanner object outside the loop","lastModifiedDate":"2024-04-08"},{"lineNumber":100,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":101,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        try {","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            int heightInput \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            int weightInput \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"pradeep-cod"},"content":"            int calorieGoal \u003d 0;","lastModifiedDate":"2024-04-08"},{"lineNumber":105,"author":{"gitId":"pradeep-cod"},"content":"            int waterGoal \u003d 0;","lastModifiedDate":"2024-04-08"},{"lineNumber":106,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            while (j \u003c 1) {","lastModifiedDate":"2024-03-22"},{"lineNumber":107,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.println(\"Please input your height (in cm): \");","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                try {","lastModifiedDate":"2024-03-22"},{"lineNumber":109,"author":{"gitId":"pradeep-cod"},"content":"                    heightInput \u003d Integer.parseInt(scanner.nextLine());","lastModifiedDate":"2024-04-08"},{"lineNumber":110,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    if (heightInput \u003e\u003d 50 \u0026\u0026 heightInput \u003c\u003d 300) {","lastModifiedDate":"2024-04-08"},{"lineNumber":111,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        AddHeightCommand addHeightCommand \u003d new","lastModifiedDate":"2024-04-08"},{"lineNumber":112,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                                AddHeightCommand(heightInput, date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":113,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        addHeightCommand.execute();","lastModifiedDate":"2024-03-22"},{"lineNumber":114,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        saveLogsToFile(\"data/data.txt\");","lastModifiedDate":"2024-03-22"},{"lineNumber":115,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        j++;","lastModifiedDate":"2024-03-22"},{"lineNumber":116,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":117,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        System.out.println(\"Please input a whole number between 50 and 300!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":118,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    }","lastModifiedDate":"2024-04-08"},{"lineNumber":119,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-22"},{"lineNumber":120,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    System.out.println(\"Please input a whole number between 50 and 300!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":121,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-03-22"},{"lineNumber":122,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":123,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            while (i \u003c 1) {","lastModifiedDate":"2024-03-22"},{"lineNumber":124,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.println(\"Please input your weight (in kg): \");","lastModifiedDate":"2024-03-22"},{"lineNumber":125,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                try {","lastModifiedDate":"2024-03-22"},{"lineNumber":126,"author":{"gitId":"pradeep-cod"},"content":"                    weightInput \u003d Integer.parseInt(scanner.nextLine());","lastModifiedDate":"2024-04-08"},{"lineNumber":127,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    if (weightInput \u003e\u003d 1 \u0026\u0026 weightInput \u003c\u003d 700) {","lastModifiedDate":"2024-04-08"},{"lineNumber":128,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        AddWeightCommand addWeightCommand \u003d new","lastModifiedDate":"2024-04-08"},{"lineNumber":129,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                                AddWeightCommand(weightInput, date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":130,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        addWeightCommand.execute();","lastModifiedDate":"2024-03-22"},{"lineNumber":131,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        saveLogsToFile(\"data/data.txt\");","lastModifiedDate":"2024-03-22"},{"lineNumber":132,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        i++;","lastModifiedDate":"2024-03-22"},{"lineNumber":133,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":134,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        System.out.println(\"Please input a whole number between 1 and 700!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":135,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    }","lastModifiedDate":"2024-04-08"},{"lineNumber":136,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-22"},{"lineNumber":137,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    System.out.println(\"Please input a whole number between 1 and 700!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":138,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-03-22"},{"lineNumber":139,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":140,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            AddBMICommand addBMICommand \u003d new AddBMICommand(heightInput, weightInput, date, time);","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            addBMICommand.execute();","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            saveLogsToFile(\"data/data.txt\");","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":145,"author":{"gitId":"pradeep-cod"},"content":"            // Prompt for setting daily calorie goal","lastModifiedDate":"2024-04-08"},{"lineNumber":146,"author":{"gitId":"pradeep-cod"},"content":"            while (k \u003c 1) {","lastModifiedDate":"2024-04-08"},{"lineNumber":147,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.println(\"Please set your daily calorie goal (in cal): \");","lastModifiedDate":"2024-04-08"},{"lineNumber":148,"author":{"gitId":"pradeep-cod"},"content":"                try {","lastModifiedDate":"2024-04-08"},{"lineNumber":149,"author":{"gitId":"pradeep-cod"},"content":"                    calorieGoal \u003d Integer.parseInt(scanner.nextLine());","lastModifiedDate":"2024-04-08"},{"lineNumber":150,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    if (calorieGoal \u003e\u003d 1 \u0026\u0026 calorieGoal \u003c\u003d 50000) {","lastModifiedDate":"2024-04-08"},{"lineNumber":151,"author":{"gitId":"pradeep-cod"},"content":"                        AddCalorieGoalCommand addCalorieGoalCommand \u003d new","lastModifiedDate":"2024-04-08"},{"lineNumber":152,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                                AddCalorieGoalCommand(calorieGoal, date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":153,"author":{"gitId":"pradeep-cod"},"content":"                        addCalorieGoalCommand.execute();","lastModifiedDate":"2024-04-08"},{"lineNumber":154,"author":{"gitId":"pradeep-cod"},"content":"                        saveLogsToFile(\"data/data.txt\");","lastModifiedDate":"2024-04-08"},{"lineNumber":155,"author":{"gitId":"pradeep-cod"},"content":"                        k++;","lastModifiedDate":"2024-04-08"},{"lineNumber":156,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":157,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        System.out.println(\"Please input a whole number between 1 and 50000!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":158,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    }","lastModifiedDate":"2024-04-08"},{"lineNumber":159,"author":{"gitId":"pradeep-cod"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-08"},{"lineNumber":160,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    System.out.println(\"Please input a whole number between 1 and 50000!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":161,"author":{"gitId":"pradeep-cod"},"content":"                }","lastModifiedDate":"2024-04-08"},{"lineNumber":162,"author":{"gitId":"pradeep-cod"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":163,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":164,"author":{"gitId":"pradeep-cod"},"content":"            // Prompt for setting daily water goal","lastModifiedDate":"2024-04-08"},{"lineNumber":165,"author":{"gitId":"pradeep-cod"},"content":"            while (l \u003c 1) {","lastModifiedDate":"2024-04-08"},{"lineNumber":166,"author":{"gitId":"pradeep-cod"},"content":"                System.out.println(\"Please set your daily water goal (in ml): \");","lastModifiedDate":"2024-04-08"},{"lineNumber":167,"author":{"gitId":"pradeep-cod"},"content":"                try {","lastModifiedDate":"2024-04-08"},{"lineNumber":168,"author":{"gitId":"pradeep-cod"},"content":"                    waterGoal \u003d Integer.parseInt(scanner.nextLine());","lastModifiedDate":"2024-04-08"},{"lineNumber":169,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    if (waterGoal \u003e\u003d 1 \u0026\u0026 waterGoal \u003c\u003d 6000) {","lastModifiedDate":"2024-04-08"},{"lineNumber":170,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        AddWaterGoalCommand addWaterGoalCommand \u003d new","lastModifiedDate":"2024-04-08"},{"lineNumber":171,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                                AddWaterGoalCommand(waterGoal, date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":172,"author":{"gitId":"pradeep-cod"},"content":"                        addWaterGoalCommand.execute();","lastModifiedDate":"2024-04-08"},{"lineNumber":173,"author":{"gitId":"pradeep-cod"},"content":"                        saveLogsToFile(\"data/data.txt\");","lastModifiedDate":"2024-04-08"},{"lineNumber":174,"author":{"gitId":"pradeep-cod"},"content":"                        l++;","lastModifiedDate":"2024-04-08"},{"lineNumber":175,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":176,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        System.out.println(\"Please input a whole number between 1 and 6000!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":177,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    }","lastModifiedDate":"2024-04-08"},{"lineNumber":178,"author":{"gitId":"pradeep-cod"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-08"},{"lineNumber":179,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    System.out.println(\"Please input a whole number between 1 and 6000!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":180,"author":{"gitId":"pradeep-cod"},"content":"                }","lastModifiedDate":"2024-04-08"},{"lineNumber":181,"author":{"gitId":"pradeep-cod"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":182,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-22"},{"lineNumber":183,"author":{"gitId":"pradeep-cod"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-04-08"},{"lineNumber":184,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":185,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":186,"author":{"gitId":"pradeep-cod"},"content":"        System.out.println(\"You can now start logging data! Type \u0027help\u0027 \" +","lastModifiedDate":"2024-04-08"},{"lineNumber":187,"author":{"gitId":"SuveenE"},"content":"                \"if you are not sure how to use ActiveEdge.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":189,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":190,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":191,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":192,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":193,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":194,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":195,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":196,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * Fetches and loads data from a specified data file into the application\u0027s memory.","lastModifiedDate":"2024-04-01"},{"lineNumber":197,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * This method attempts to read tasks from the file, parsing each line to recreate","lastModifiedDate":"2024-04-01"},{"lineNumber":198,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * the appropriate {@code Task} objects. The tasks are then added to the {@code TaskList}.","lastModifiedDate":"2024-04-01"},{"lineNumber":199,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":200,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void fetchData() {","lastModifiedDate":"2024-04-01"},{"lineNumber":201,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String filePath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"data.txt\").toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":202,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":203,"author":{"gitId":"SuveenE"},"content":"        ensureDirectoryExists(filePath);","lastModifiedDate":"2024-04-13"},{"lineNumber":204,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":205,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            createFile(filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":206,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":207,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (file.length() \u003d\u003d 0 ) {","lastModifiedDate":"2024-04-01"},{"lineNumber":208,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            listEmpty();","lastModifiedDate":"2024-04-01"},{"lineNumber":209,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":210,"author":{"gitId":"nikhil-2101"},"content":"            try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"nikhil-2101"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    String log \u003d scanner.nextLine();","lastModifiedDate":"2024-04-12"},{"lineNumber":213,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    String dateTimeStr \u003d extractDateTimeString(log);","lastModifiedDate":"2024-04-12"},{"lineNumber":214,"author":{"gitId":"nikhil-2101"},"content":"                    LocalDateTime dateTime \u003d parseDateTime(dateTimeStr);","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-09"},{"lineNumber":216,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-09"},{"lineNumber":217,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    String date \u003d dateTime.format(dateFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":218,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    String time \u003d dateTime.format(timeFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":219,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    if (log.startsWith(\"Meal\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":220,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        //replaces parentheses with a white space","lastModifiedDate":"2024-04-09"},{"lineNumber":221,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        log \u003d log.replace(\"(\", \"\").replace(\")\", \"\");","lastModifiedDate":"2024-04-12"},{"lineNumber":222,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        //splits string by \"|\" and white spaces","lastModifiedDate":"2024-04-09"},{"lineNumber":223,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        String[] items \u003d log.split(\"\\\\s*\\\\|\\\\s*|\\\\s+\");","lastModifiedDate":"2024-04-12"},{"lineNumber":224,"author":{"gitId":"SuveenE"},"content":"                        int len \u003d items.length;","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        assert len \u003e\u003d 10;","lastModifiedDate":"2024-04-09"},{"lineNumber":226,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":227,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        String mealName \u003d \"\";","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        //len-7 is the last item[] of the mealname. if mealname is fried chicken","lastModifiedDate":"2024-03-27"},{"lineNumber":229,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        // then item[len-7] \u003d chicken","lastModifiedDate":"2024-03-27"},{"lineNumber":230,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        for(int i \u003d 1; i \u003c\u003d len-9; i++) {","lastModifiedDate":"2024-04-09"},{"lineNumber":231,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            if( i \u003c len-9 ) {","lastModifiedDate":"2024-04-09"},{"lineNumber":232,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                                mealName \u003d mealName + items[i] + \" \";","lastModifiedDate":"2024-03-27"},{"lineNumber":233,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                                mealName \u003d mealName + items[i];","lastModifiedDate":"2024-03-27"},{"lineNumber":235,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            }","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        }","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        int servings \u003d Integer.parseInt(items[len-8]);","lastModifiedDate":"2024-04-09"},{"lineNumber":238,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        int mealCalories \u003d Integer.parseInt(items[len-6]);","lastModifiedDate":"2024-04-09"},{"lineNumber":239,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        LogMeal newLog \u003d new LogMeal(mealName, servings, mealCalories, date, time);","lastModifiedDate":"2024-04-12"},{"lineNumber":240,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        LogList.logList.add(newLog);","lastModifiedDate":"2024-04-12"},{"lineNumber":241,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    } else if (log.startsWith(\"Goal\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":242,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        String[] items \u003d log.trim().split(\" \");","lastModifiedDate":"2024-04-12"},{"lineNumber":243,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        LogGoals newLog \u003d new LogGoals(items[1], Integer.parseInt(items[2]), date, time);","lastModifiedDate":"2024-04-12"},{"lineNumber":244,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        LogList.logList.add(newLog);","lastModifiedDate":"2024-04-12"},{"lineNumber":245,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    } else if (log.startsWith(\"Water\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":246,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        log \u003d log.replace(\"(\", \"\").replace(\")\", \"\");","lastModifiedDate":"2024-04-12"},{"lineNumber":247,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        String[] items \u003d log.split(\"\\\\s*\\\\|\\\\s*|\\\\s+\");","lastModifiedDate":"2024-04-12"},{"lineNumber":248,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        LogWater newLog \u003d new LogWater(Integer.parseInt(items[1]), date, time);","lastModifiedDate":"2024-04-12"},{"lineNumber":249,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        LogList.logList.add(newLog);","lastModifiedDate":"2024-04-12"},{"lineNumber":250,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    } else if (log.startsWith(\"Height\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":251,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        String[] items \u003d log.trim().split(\" \");","lastModifiedDate":"2024-04-12"},{"lineNumber":252,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        LogHeight newHeight \u003d new LogHeight(Integer.parseInt(items[1]), date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":253,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        UserDetailsList.detailsList.add(newHeight);","lastModifiedDate":"2024-03-27"},{"lineNumber":254,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    } else if (log.startsWith(\"Weight\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":255,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        String[] items \u003d log.trim().split(\" \");","lastModifiedDate":"2024-04-12"},{"lineNumber":256,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        LogWeight newWeight \u003d new LogWeight(Integer.parseInt(items[1]), date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":257,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        UserDetailsList.detailsList.add(newWeight);","lastModifiedDate":"2024-03-27"},{"lineNumber":258,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    } else if (log.startsWith(\"BMI\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":259,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        String[] items \u003d log.trim().split(\" \");","lastModifiedDate":"2024-04-12"},{"lineNumber":260,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        LogBMI newBMI \u003d new LogBMI(Integer.parseInt(items[1]), date, time);","lastModifiedDate":"2024-04-10"},{"lineNumber":261,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        UserDetailsList.detailsList.add(newBMI);","lastModifiedDate":"2024-04-10"},{"lineNumber":262,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    } else if (log.startsWith(\"Exercise\")){","lastModifiedDate":"2024-04-12"},{"lineNumber":263,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        log \u003d log.replace(\"(\", \"\").replace(\")\", \"\");","lastModifiedDate":"2024-04-12"},{"lineNumber":264,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        String[] items \u003d log.split(\"\\\\s*\\\\|\\\\s*|\\\\s+\");","lastModifiedDate":"2024-04-12"},{"lineNumber":265,"author":{"gitId":"SuveenE"},"content":"                        int len \u003d items.length;","lastModifiedDate":"2024-03-23"},{"lineNumber":266,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        assert len \u003e\u003d 10;","lastModifiedDate":"2024-04-09"},{"lineNumber":267,"author":{"gitId":"SuveenE"},"content":"                        String exerciseName \u003d \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":268,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        for(int i \u003d 1; i \u003c\u003d len-9; i++) {","lastModifiedDate":"2024-04-09"},{"lineNumber":269,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            if( i \u003c len-9 ) {","lastModifiedDate":"2024-04-09"},{"lineNumber":270,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                                exerciseName \u003d exerciseName + items[i] + \" \";","lastModifiedDate":"2024-03-30"},{"lineNumber":271,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":272,"author":{"gitId":"SuveenE"},"content":"                                exerciseName \u003d exerciseName + items[i];","lastModifiedDate":"2024-03-23"},{"lineNumber":273,"author":{"gitId":"SuveenE"},"content":"                            }","lastModifiedDate":"2024-03-23"},{"lineNumber":274,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        }","lastModifiedDate":"2024-03-30"},{"lineNumber":275,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        LogExercise newLog \u003d new LogExercise(exerciseName,","lastModifiedDate":"2024-04-12"},{"lineNumber":276,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                                Integer.parseInt(items[len - 8]),","lastModifiedDate":"2024-04-09"},{"lineNumber":277,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                                Integer.parseInt(items[len - 6]), date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":278,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        LogList.logList.add(newLog);","lastModifiedDate":"2024-04-12"},{"lineNumber":279,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    }","lastModifiedDate":"2024-03-14"},{"lineNumber":280,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-03-22"},{"lineNumber":281,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":282,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-03-16"},{"lineNumber":283,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":284,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":285,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":286,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":287,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private static String extractDateTimeString(String log) {","lastModifiedDate":"2024-04-12"},{"lineNumber":288,"author":{"gitId":"nikhil-2101"},"content":"        // Extracting date-time string between \"Recorded on: \" and \")\"","lastModifiedDate":"2024-03-27"},{"lineNumber":289,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int startIndex \u003d log.indexOf(\"Recorded on: \") + \"Recorded on: \".length();","lastModifiedDate":"2024-04-12"},{"lineNumber":290,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int endIndex \u003d log.lastIndexOf(\")\");","lastModifiedDate":"2024-04-12"},{"lineNumber":291,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return log.substring(startIndex, endIndex);","lastModifiedDate":"2024-04-12"},{"lineNumber":292,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":293,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":294,"author":{"gitId":"nikhil-2101"},"content":"    private static LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2024-03-27"},{"lineNumber":295,"author":{"gitId":"nikhil-2101"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":296,"author":{"gitId":"nikhil-2101"},"content":"            // Use the correct DateTimeFormatter for your date-time strings","lastModifiedDate":"2024-03-27"},{"lineNumber":297,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-04-09"},{"lineNumber":298,"author":{"gitId":"nikhil-2101"},"content":"            return LocalDateTime.parse(dateTimeStr, formatter);","lastModifiedDate":"2024-03-27"},{"lineNumber":299,"author":{"gitId":"nikhil-2101"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":300,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"Error parsing date-time: \" + e.getMessage());","lastModifiedDate":"2024-03-27"},{"lineNumber":301,"author":{"gitId":"nikhil-2101"},"content":"            // Handle the error, e.g., by returning a default date-time or logging the error","lastModifiedDate":"2024-03-27"},{"lineNumber":302,"author":{"gitId":"nikhil-2101"},"content":"            return LocalDateTime.now(); // Default to the current date-time","lastModifiedDate":"2024-03-27"},{"lineNumber":303,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":304,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":305,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":306,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"pradeep-cod":43,"alvinnnnnnnnnn":205,"nikhil-2101":23,"SuveenE":35}},{"path":"src/main/java/activeedge/log/Log.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge.log;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class Log {","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"    protected Integer value;","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    protected String description;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public Log (String description) {","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"        return this.description;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"        return this.getDescription();","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"pradeep-cod":3,"alvinnnnnnnnnn":3,"nikhil-2101":11,"SuveenE":4}},{"path":"src/main/java/activeedge/log/LogExercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge.log;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":" * Represents an exercise task that extends the functionality of a basic task","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":" * to include exercise-specific details. It captures the name, duration, and","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":" * calories burnt of an exercise activity.","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogExercise extends Log {","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"    protected String exerciseName;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"    protected int duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"    protected Integer caloriesBurnt;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"     * Constructs a new exercise log with the specified exercise name, duration, and calories burnt.","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"     * @param exerciseName the name of the exercise","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"     * @param duration the duration of the exercise, in minutes","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"     * @param caloriesBurnt the number of calories burnt during the exercise","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public LogExercise(String exerciseName, int duration, int caloriesBurnt, String date , String time){","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"SuveenE"},"content":"        super(exerciseName);","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"SuveenE"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"SuveenE"},"content":"        this.caloriesBurnt \u003d caloriesBurnt;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"    public String getExerciseName() {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"        return description;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"SuveenE"},"content":"    public int getDuration(){","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"SuveenE"},"content":"        return duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"SuveenE"},"content":"    public int getCaloriesBurnt(){","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"SuveenE"},"content":"        return caloriesBurnt;","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"SuveenE"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"SuveenE"},"content":"     * Returns a string representation of the exercise task, including its name,","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"SuveenE"},"content":"     * duration, and calories burnt.","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"SuveenE"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"SuveenE"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"SuveenE"},"content":"    public String toString() {","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return \"Exercise\" + \" | \" + this.getExerciseName() + \" | \" + this.getDuration() + \" mins | \" +","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                this.getCaloriesBurnt() + \" cal (Recorded on: \" + date + \" \" + time + \")\";","lastModifiedDate":"2024-04-09"},{"lineNumber":51,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"alvinnnnnnnnnn":9,"nikhil-2101":5,"SuveenE":38}},{"path":"src/main/java/activeedge/log/LogGoals.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge.log;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":" * Represents a task with a specific goal amount.","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":" * Extends the Task class.","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogGoals extends Log {","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"    private int goalAmount; // The amount associated with the goal task.","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"     * Constructs a GoalTask object with the provided description and goal amount.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"     * @param description The description of the goal task.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"     * @param goalAmount  The amount associated with the goal task.","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public LogGoals(String description, int goalAmount, String date, String time) {","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"        super(description); // Calls the constructor of the superclass (Task) with the provided description.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"        this.goalAmount \u003d goalAmount; // Initializes the goal amount.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"pradeep-cod"},"content":"     * Retrieves the goal amount associated with the task.","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"     * @return The goal amount.","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"pradeep-cod"},"content":"    public int getGoalAmount() {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"pradeep-cod"},"content":"        return goalAmount;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"pradeep-cod"},"content":"     * Overrides the toString method to provide a custom string representation of the GoalTask object.","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"     * @return A string representation of the GoalTask object, including its description and goal amount.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"SuveenE"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"SuveenE"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"        return \"Goal \" + this.getDescription() + \" \"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                + this.getGoalAmount() + \" (Recorded on: \" + date + \" \" + time + \")\";","lastModifiedDate":"2024-04-09"},{"lineNumber":43,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"pradeep-cod":31,"alvinnnnnnnnnn":8,"nikhil-2101":1,"SuveenE":4}},{"path":"src/main/java/activeedge/log/LogList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge.log;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogList {","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    // Static constant ArrayList to store Task objects","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static final ArrayList\u003cLog\u003e logList \u003d new ArrayList\u003cLog\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static Log delete (int index) {","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c logList.size()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            return logList.remove(index);","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            throw new IndexOutOfBoundsException(\"Index is out of bounds.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void add(Log log) {","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        logList.add(log);","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static Log get() {","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c logList.size()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            return logList.get(index);","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            // Handle index out of bounds, you can throw an exception or return null","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            throw new IndexOutOfBoundsException(\"Index is out of bounds.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void clearLogs() {","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        logList.clear();","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"alvinnnnnnnnnn":34}},{"path":"src/main/java/activeedge/log/LogMeal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge.log;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogMeal extends Log {","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected Integer servings;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"    protected Integer mealCalories;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public LogMeal (String meal, int servings, int mealCalories, String date, String time){","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"        super(meal);","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"        this.servings \u003d Optional.ofNullable(servings).orElse(0);","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"        this.mealCalories \u003d Optional.ofNullable(mealCalories).orElse(0);","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"    public String getFoodName() {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"        return description;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"    public int getServings(){","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"SuveenE"},"content":"        return servings;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    public int getMealCalories() {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"        return mealCalories;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"SuveenE"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"SuveenE"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return \"Meal\" + \" | \" + this.getDescription() + \" | \" + this.getServings() + \" servings | \" +","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                this.getMealCalories() + \" cal (Recorded on: \" + date + \" \" + time + \")\";","lastModifiedDate":"2024-04-09"},{"lineNumber":35,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"alvinnnnnnnnnn":17,"nikhil-2101":10,"SuveenE":9}},{"path":"src/main/java/activeedge/log/LogWater.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge.log;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":" * Represents a task related to water intake.","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":" * */","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogWater extends Log {","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"    private int quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"     * Constructs a LogWater object with the specified quantity.","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"     * @param quantity The quantity of water intake.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"    public LogWater (int quantity, String date, String time) {","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"        super(\"Water intake\");","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"     * Gets the quantity of water intake.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"     * @return The quantity of water intake.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"    public int getQuantity() {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"        return quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"     * Returns a string representation of the LogWater object.","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"     * @return A string representing the water task and its quantity.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return \"Water\" + \" | \" +this.getQuantity() + \" ml\"","lastModifiedDate":"2024-04-09"},{"lineNumber":41,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                + \" (Recorded on: \" + date + \" \" + time + \")\";","lastModifiedDate":"2024-04-09"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alvinnnnnnnnnn":9,"nikhil-2101":34}},{"path":"src/main/java/activeedge/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package activeedge.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"import activeedge.Storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"import command.Command;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"import command.ListFullCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"import command.DeleteLogCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"import command.FindCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"import command.ShowSummaryCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"import command.HelpCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"import command.PrintFoodCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"import command.PrintExercisesCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"import command.ClearCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"import command.InvalidCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"import command.LogWaterCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"import command.LogMealCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"import command.LogExerciseCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"import command.ShowCaloriesCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"import command.ViewWaterIntakeCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"import command.ShowGoalsCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"import command.AddFoodItemCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"import command.AddExerciseItemCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"import command.ChangeHeightCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"import command.ChangeWeightCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"import command.ChangeWaterGoalCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"import command.ChangeCalorieGoalCommand;","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"SuveenE"},"content":"import static activeedge.FoodData.foodItems;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"SuveenE"},"content":"import static activeedge.ExerciseData.exercisesList;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-09"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"SuveenE"},"content":"public class Parser {","lastModifiedDate":"2024-03-10"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"    public Command handleInput(String input) {","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"SuveenE"},"content":"        String[] inputSplit \u003d input.trim().split(\" \");","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-09"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String date \u003d currentDateTime.format(dateFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":39,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String time \u003d currentDateTime.format(timeFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (inputSplit[0].equalsIgnoreCase(\"log\")) {","lastModifiedDate":"2024-04-09"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"            return parseLogCommand(input, date, time);","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"        } else if (inputSplit[0].trim().equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"            return new ListFullCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"        } else if (inputSplit[0].trim().equalsIgnoreCase(\"show\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"            return parseShowCommand(input);","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"        } else if (inputSplit[0].trim().equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"SuveenE"},"content":"            return new DeleteLogCommand(input);","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"        } else if (inputSplit[0].trim().equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"            return new FindCommand(input);","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"        } else if (input.trim().equalsIgnoreCase(\"summary\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"            return new ShowSummaryCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"nikhil-2101"},"content":"        } else if (input.trim().equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"nikhil-2101"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"        } else if (input.trim().equalsIgnoreCase(\"FoodData\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"nikhil-2101"},"content":"            return new PrintFoodCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"nikhil-2101"},"content":"        } else if (input.trim().equalsIgnoreCase(\"ExerciseData\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"nikhil-2101"},"content":"            return new PrintExercisesCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"nikhil-2101"},"content":"        } else if (input.trim().equalsIgnoreCase(\"clear\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"nikhil-2101"},"content":"            return new ClearCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"nikhil-2101"},"content":"        } else if (input.trim().startsWith(\"add\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"nikhil-2101"},"content":"            return parseAddCommand(input, date, time); // Call parseAddCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"nikhil-2101"},"content":"        } else if (inputSplit[0].trim().equalsIgnoreCase(\"change\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"nikhil-2101"},"content":"            return parseChangeCommand(input);","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"nikhil-2101"},"content":"        } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"SuveenE"},"content":"            System.out.println(\"Unknown command. Please enter \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"nikhil-2101"},"content":"        Storage.saveLogsToFile(\"data/data.txt\");","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"nikhil-2101"},"content":"        return null;","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"nikhil-2101"},"content":"    private Command parseLogCommand(String input, String date, String time) {","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"nikhil-2101"},"content":"        String[] inputSplit \u003d input.trim().split(\" \");","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (inputSplit.length \u003d\u003d 1 ) {","lastModifiedDate":"2024-04-09"},{"lineNumber":75,"author":{"gitId":"nikhil-2101"},"content":"            return new InvalidCommand(\"Please specify what you wish to log:\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"nikhil-2101"},"content":"                    \"1. \u0027log w/[QUANTITY_OF_WATER]\u0027 to log your water intake\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"nikhil-2101"},"content":"                    \"2. \u0027log m/[MEAL_NAME] s/[NUMBER_OF_SERVINGS]\u0027 to log your meals\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"nikhil-2101"},"content":"                    \"3. \u0027log e/[EXERCISE_NAME] d/[DURATION_OF_EXERCISE]\u0027 to log your exercises\");","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-04-09"},{"lineNumber":80,"author":{"gitId":"SuveenE"},"content":"            String parts \u003d input.trim().substring(4);","lastModifiedDate":"2024-04-11"},{"lineNumber":81,"author":{"gitId":"nikhil-2101"},"content":"            String[] items \u003d parts.split(\"/\");","lastModifiedDate":"2024-04-08"},{"lineNumber":82,"author":{"gitId":"nikhil-2101"},"content":"            if (items[0].trim().equals(\"w\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"SuveenE"},"content":"                return parseWaterLogCommand(input, date, time);","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"nikhil-2101"},"content":"            } else if (items[0].trim().equals(\"m\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"nikhil-2101"},"content":"                return parseMealLogCommand(input, date, time);","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"nikhil-2101"},"content":"            } else if (items[0].trim().equals(\"e\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"SuveenE"},"content":"                return parseExerciseLogCommand(input, date, time);","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"nikhil-2101"},"content":"            } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"nikhil-2101"},"content":"                return new InvalidCommand(\"Invalid command. Please enter a valid \u0027log\u0027 command.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"SuveenE"},"content":"    private Command parseWaterLogCommand(String input, String date, String time) {","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Normalize input to remove excessive whitespaces around and within the command","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        input \u003d input.replaceAll(\"\\\\s+/\\\\s+\", \"/\").trim();  // Normalize spaces around slashes","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        input \u003d input.replaceAll(\"\\\\s+\", \" \");  // Normalize spaces elsewhere","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Attempt to split the command based on the presence of \"w/\"","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String[] commandParts \u003d input.split(\"\\\\s+w/\");","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Check if the command format is incorrect or the quantity is missing","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (commandParts.length \u003c 2 || commandParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"nikhil-2101"},"content":"            return new InvalidCommand(\"Invalid command. Please enter \u0027log w/[WATER_QUANTITY]\u0027. \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    \"For example, \u0027log w/300\u0027. Enter \u0027help\u0027 for more information.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Extract the quantity and validate it","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String quantityString \u003d commandParts[1].trim();","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (!quantityString.matches(\"\\\\d+\")) {  // Ensure the quantity is a positive number","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            return new InvalidCommand(\"Water quantity must be a positive integer. \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    \"Please input an integer above 0!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":114,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Parse the quantity and check the limits","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int quantity \u003d Integer.parseInt(quantityString);","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (quantity \u003c\u003d 0) {","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            return new InvalidCommand(\"The water quantity must be above 0. Please input a valid integer.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else if (quantity \u003e 6000) {","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            return new InvalidCommand(\"Please enter a water value that is 6000ml or lesser.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Return a valid command if all checks are passed","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return new LogWaterCommand(Integer.toString(quantity), date, time);","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"nikhil-2101"},"content":"    private Command parseMealLogCommand(String input, String date, String time) {","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        input \u003d input.replaceAll(\"\\\\s+/\\\\s+\", \"/\").trim();  // Normalize spaces around slashes","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        input \u003d input.replaceAll(\"\\\\s+\", \" \");  // Normalize spaces elsewhere","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String[] logParts \u003d input.trim().replace(\"/\", \" \").replaceAll(\"\\\\s+\", \" \").","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                split(\" \");","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int length \u003d logParts.length;","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        assert length \u003e\u003d 5;","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String description \u003d \"\";","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (length \u003e\u003d 5) {","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            for (int i \u003d 2; i \u003c\u003d length - 3; i++) {","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                if (i \u003c length - 3) {","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    description \u003d description + logParts[i].trim() + \" \";","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    description \u003d description + logParts[i].trim();","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"SuveenE"},"content":"                }","lastModifiedDate":"2024-04-13"},{"lineNumber":145,"author":{"gitId":"SuveenE"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":146,"author":{"gitId":"SuveenE"},"content":"            if (!description.matches(\"[a-zA-Z0-9 \\\\-]*\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":147,"author":{"gitId":"SuveenE"},"content":"                return new InvalidCommand(\"Meal name must not contain symbols.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":148,"author":{"gitId":"SuveenE"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":149,"author":{"gitId":"nikhil-2101"},"content":"            try {","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                int servings \u003d Integer.parseInt(logParts[length-1].trim());","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                if (logParts[length-1].equalsIgnoreCase(\"s\")) {","lastModifiedDate":"2024-04-14"},{"lineNumber":152,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    return new InvalidCommand(\"Number of servings must not be empty!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":153,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                } else if (servings !\u003d Double.parseDouble(logParts[length-1].trim()) || servings \u003c\u003d 0) {","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    return new InvalidCommand(\"Servings must be a positive integer value. \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            \"Please try again.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"nikhil-2101"},"content":"                } else if (servings \u003e 10) {","lastModifiedDate":"2024-04-13"},{"lineNumber":157,"author":{"gitId":"nikhil-2101"},"content":"                    return new InvalidCommand(\"Please re-enter a value that is 10 or below!\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":158,"author":{"gitId":"nikhil-2101"},"content":"                            \"If you wish to enter a value of more than 10, please do log in\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":159,"author":{"gitId":"nikhil-2101"},"content":"                            \"these meals twice by having the 2 different serving \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":160,"author":{"gitId":"nikhil-2101"},"content":"                            \"values add up to your intended value.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":161,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"nikhil-2101"},"content":"                int mealCalories \u003d 0;","lastModifiedDate":"2024-04-13"},{"lineNumber":163,"author":{"gitId":"SuveenE"},"content":"                boolean isItemPresentInFoodData \u003d false;","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"SuveenE"},"content":"                for (int i \u003d 0; i \u003c foodItems.length; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    if (foodItems[i][0].equals(description)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"nikhil-2101"},"content":"                        mealCalories \u003d Integer.parseInt(foodItems[i][1]) * servings;","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"SuveenE"},"content":"                        isItemPresentInFoodData \u003d true;","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"SuveenE"},"content":"                    }","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"SuveenE"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"nikhil-2101"},"content":"                return new LogMealCommand(description, servings, mealCalories, date, time, isItemPresentInFoodData);","lastModifiedDate":"2024-04-13"},{"lineNumber":172,"author":{"gitId":"nikhil-2101"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"nikhil-2101"},"content":"                return new InvalidCommand(\"Servings must be a positive integer value and 10 or lesser. \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"nikhil-2101"},"content":"                        \"Please try again.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":175,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":177,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (length \u003d\u003d 4 \u0026\u0026 logParts[2].equalsIgnoreCase(\"s\")) {","lastModifiedDate":"2024-04-14"},{"lineNumber":178,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                return new InvalidCommand(\"Meal name must not be empty!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } else if (length \u003d\u003d 4 \u0026\u0026 logParts[3].equalsIgnoreCase(\"s\")) {","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                return new InvalidCommand(\"Number of servings must not be empty!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"nikhil-2101"},"content":"            } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":182,"author":{"gitId":"nikhil-2101"},"content":"                return new InvalidCommand(\"Invalid command. Please enter \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":183,"author":{"gitId":"nikhil-2101"},"content":"                        \"\u0027log m/[FOOD] s/[NUMBER_OF_SERVINGS]\u0027. \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":184,"author":{"gitId":"nikhil-2101"},"content":"                        \"\\\"For example, \u0027log m/chicken rice s/2\u0027. \\\" +\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":185,"author":{"gitId":"nikhil-2101"},"content":"                        \" \\\"Enter \u0027help\u0027 for more information.\\\"\");","lastModifiedDate":"2024-04-13"},{"lineNumber":186,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":187,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":188,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":190,"author":{"gitId":"SuveenE"},"content":"    private Command parseExerciseLogCommand(String input, String date, String time) {","lastModifiedDate":"2024-04-13"},{"lineNumber":191,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        input \u003d input.replaceAll(\"\\\\s+/\\\\s+\", \"/\").trim();  // Normalize spaces around slashes","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        input \u003d input.replaceAll(\"\\\\s+\", \" \");  // Normalize spaces elsewhere","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":194,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String[] logParts \u003d input.trim().replace(\"/\", \" \").replaceAll(\"\\\\s+\", \" \").","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                split(\" \");","lastModifiedDate":"2024-04-14"},{"lineNumber":196,"author":{"gitId":"SuveenE"},"content":"        int length \u003d logParts.length;","lastModifiedDate":"2024-03-30"},{"lineNumber":197,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        assert length \u003e\u003d 5;","lastModifiedDate":"2024-04-14"},{"lineNumber":198,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String exerciseName \u003d \"\";","lastModifiedDate":"2024-04-14"},{"lineNumber":199,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (length \u003e\u003d 5) {","lastModifiedDate":"2024-04-14"},{"lineNumber":200,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            for (int i \u003d 2; i \u003c\u003d length - 3; i++) {","lastModifiedDate":"2024-04-14"},{"lineNumber":201,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                if (i \u003c length - 3) {","lastModifiedDate":"2024-04-14"},{"lineNumber":202,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    exerciseName \u003d exerciseName + logParts[i].trim() + \" \";","lastModifiedDate":"2024-04-14"},{"lineNumber":203,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":204,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    exerciseName \u003d exerciseName + logParts[i].trim();","lastModifiedDate":"2024-04-14"},{"lineNumber":205,"author":{"gitId":"SuveenE"},"content":"                }","lastModifiedDate":"2024-04-13"},{"lineNumber":206,"author":{"gitId":"SuveenE"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":207,"author":{"gitId":"SuveenE"},"content":"            if (!exerciseName.matches(\"[a-zA-Z0-9 \\\\-]*\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":208,"author":{"gitId":"SuveenE"},"content":"                return new InvalidCommand(\"Exercise name must not contain symbols.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":209,"author":{"gitId":"SuveenE"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":210,"author":{"gitId":"pradeep-cod"},"content":"            try {","lastModifiedDate":"2024-04-08"},{"lineNumber":211,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                int duration \u003d Integer.parseInt(logParts[length-1].trim());","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                if (logParts[length-1].equalsIgnoreCase(\"d\")) {","lastModifiedDate":"2024-04-14"},{"lineNumber":213,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    return new InvalidCommand(\"Duration cannot be empty!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":214,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                } else if (duration !\u003d Double.parseDouble(logParts[length-1].trim()) || duration \u003c\u003d 0) {","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    return new InvalidCommand(\"Duration must be a positive integer value. \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":216,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            \"Please try again.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":217,"author":{"gitId":"nikhil-2101"},"content":"                } else if (duration \u003e 200) {","lastModifiedDate":"2024-04-13"},{"lineNumber":218,"author":{"gitId":"nikhil-2101"},"content":"                    return new InvalidCommand(\"Please re-enter a value that is 200 or below!\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":219,"author":{"gitId":"nikhil-2101"},"content":"                            \"If you wish to enter a value of more than 200, please do log in\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":220,"author":{"gitId":"nikhil-2101"},"content":"                            \"these exercises twice by having the 2 different duration \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":221,"author":{"gitId":"nikhil-2101"},"content":"                            \"values add up to your intended value.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":222,"author":{"gitId":"pradeep-cod"},"content":"                }","lastModifiedDate":"2024-04-08"},{"lineNumber":223,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":224,"author":{"gitId":"SuveenE"},"content":"                int caloriesBurnt \u003d 0;","lastModifiedDate":"2024-03-30"},{"lineNumber":225,"author":{"gitId":"pradeep-cod"},"content":"                boolean isItemPresentInExerciseData \u003d false;","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"nikhil-2101"},"content":"                for (String[] exercise : exercisesList) {","lastModifiedDate":"2024-04-13"},{"lineNumber":228,"author":{"gitId":"nikhil-2101"},"content":"                    if (exercise[0].equalsIgnoreCase(exerciseName)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":229,"author":{"gitId":"nikhil-2101"},"content":"                        caloriesBurnt \u003d Integer.parseInt(exercise[1]) * duration;","lastModifiedDate":"2024-04-13"},{"lineNumber":230,"author":{"gitId":"pradeep-cod"},"content":"                        isItemPresentInExerciseData \u003d true;","lastModifiedDate":"2024-03-31"},{"lineNumber":231,"author":{"gitId":"nikhil-2101"},"content":"                        break;","lastModifiedDate":"2024-04-13"},{"lineNumber":232,"author":{"gitId":"SuveenE"},"content":"                    }","lastModifiedDate":"2024-03-30"},{"lineNumber":233,"author":{"gitId":"SuveenE"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":234,"author":{"gitId":"nikhil-2101"},"content":"                return new LogExerciseCommand(exerciseName, duration, caloriesBurnt, date, time,","lastModifiedDate":"2024-04-13"},{"lineNumber":235,"author":{"gitId":"nikhil-2101"},"content":"                        isItemPresentInExerciseData);","lastModifiedDate":"2024-04-13"},{"lineNumber":236,"author":{"gitId":"pradeep-cod"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-08"},{"lineNumber":237,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                return new InvalidCommand(\"Duration must be a positive integer value. \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":238,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        \"Please try again.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":239,"author":{"gitId":"pradeep-cod"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":240,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":241,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (length \u003d\u003d 4 \u0026\u0026 logParts[2].equalsIgnoreCase(\"d\")) {","lastModifiedDate":"2024-04-14"},{"lineNumber":242,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                return new InvalidCommand(\"Exercise name must not be empty!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":243,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } else if (length \u003d\u003d 4 \u0026\u0026 logParts[3].equalsIgnoreCase(\"d\")) {","lastModifiedDate":"2024-04-14"},{"lineNumber":244,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                return new InvalidCommand(\"Duration must not be empty!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":245,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } else {","lastModifiedDate":"2024-04-09"},{"lineNumber":246,"author":{"gitId":"nikhil-2101"},"content":"                return new InvalidCommand(\"Invalid command. Please enter \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":247,"author":{"gitId":"nikhil-2101"},"content":"                        \"\u0027log e/[EXERCISE] D/[DURATION_IN_MINUTES]\u0027. \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":248,"author":{"gitId":"nikhil-2101"},"content":"                        \"\\\"For example, \u0027log e/running d/10\u0027. Enter \u0027help\u0027 for more information.\\\"\");","lastModifiedDate":"2024-04-13"},{"lineNumber":249,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":250,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":251,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":252,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"nikhil-2101"},"content":"    private Command parseShowCommand(String input) {","lastModifiedDate":"2024-04-13"},{"lineNumber":254,"author":{"gitId":"nikhil-2101"},"content":"        String[] inputSplit \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":255,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (inputSplit.length \u003d\u003d 1) {","lastModifiedDate":"2024-04-08"},{"lineNumber":256,"author":{"gitId":"nikhil-2101"},"content":"            return new InvalidCommand(\"Please specify what you wish to view:\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":257,"author":{"gitId":"nikhil-2101"},"content":"                    \"1. \u0027show w\u0027 to display your current water intake\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":258,"author":{"gitId":"nikhil-2101"},"content":"                    \"2. \u0027show c\u0027 to display your current calories intake\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":259,"author":{"gitId":"nikhil-2101"},"content":"                    \"3. \u0027show g\u0027 to display your current goals\");","lastModifiedDate":"2024-04-14"},{"lineNumber":260,"author":{"gitId":"nikhil-2101"},"content":"        } else if (inputSplit[1].equalsIgnoreCase(\"c\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":261,"author":{"gitId":"nikhil-2101"},"content":"            return new ShowCaloriesCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":262,"author":{"gitId":"nikhil-2101"},"content":"        } else if (inputSplit[1].trim().equalsIgnoreCase(\"w\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":263,"author":{"gitId":"nikhil-2101"},"content":"            return new ViewWaterIntakeCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":264,"author":{"gitId":"nikhil-2101"},"content":"        } else if (inputSplit[1].trim().equalsIgnoreCase(\"g\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":265,"author":{"gitId":"nikhil-2101"},"content":"            return new ShowGoalsCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":266,"author":{"gitId":"SuveenE"},"content":"        } else {","lastModifiedDate":"2024-03-11"},{"lineNumber":267,"author":{"gitId":"nikhil-2101"},"content":"            return new InvalidCommand(\"Invalid command. Please enter a valid \u0027show\u0027 command.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":268,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":269,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":270,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":271,"author":{"gitId":"nikhil-2101"},"content":"    public Command parseAddCommand(String input, String date, String time) {","lastModifiedDate":"2024-04-13"},{"lineNumber":272,"author":{"gitId":"SuveenE"},"content":"        if (input.trim().contains(\"add\") \u0026\u0026 input.trim().contains(\"m/\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":273,"author":{"gitId":"nikhil-2101"},"content":"            return parseAddMealCommand(input, date, time);","lastModifiedDate":"2024-04-13"},{"lineNumber":274,"author":{"gitId":"SuveenE"},"content":"        } else if (input.trim().startsWith(\"add\") \u0026\u0026 input.trim().contains(\"e/\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":275,"author":{"gitId":"nikhil-2101"},"content":"            return parseAddExerciseCommand(input, date, time);","lastModifiedDate":"2024-04-13"},{"lineNumber":276,"author":{"gitId":"nikhil-2101"},"content":"        } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":277,"author":{"gitId":"SuveenE"},"content":"            return new InvalidCommand(\"Invalid add command. Type \u0027help\u0027 to see the two valid add commands.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":278,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":279,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":280,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":281,"author":{"gitId":"nikhil-2101"},"content":"    private Command parseAddMealCommand(String input, String date, String time) {","lastModifiedDate":"2024-04-13"},{"lineNumber":282,"author":{"gitId":"SuveenE"},"content":"        String[] logParts \u003d input.trim().split(\"m/|c/|s/\");","lastModifiedDate":"2024-04-11"},{"lineNumber":283,"author":{"gitId":"SuveenE"},"content":"        int length \u003d logParts.length;","lastModifiedDate":"2024-03-30"},{"lineNumber":284,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":285,"author":{"gitId":"SuveenE"},"content":"        if (length \u003d\u003d 3) {","lastModifiedDate":"2024-04-13"},{"lineNumber":286,"author":{"gitId":"SuveenE"},"content":"            return new InvalidCommand(\"The number of servings cannot be empty. Please input a integer above 0!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":287,"author":{"gitId":"SuveenE"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":288,"author":{"gitId":"SuveenE"},"content":"        if (length \u003d\u003d 4) {","lastModifiedDate":"2024-04-13"},{"lineNumber":289,"author":{"gitId":"SuveenE"},"content":"            String description \u003d logParts[1].trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":290,"author":{"gitId":"SuveenE"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":291,"author":{"gitId":"SuveenE"},"content":"                return new InvalidCommand(\"Meal name must not be empty.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":292,"author":{"gitId":"SuveenE"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":293,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":294,"author":{"gitId":"SuveenE"},"content":"            if (!description.matches(\"[a-zA-Z0-9 \\\\-]*\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":295,"author":{"gitId":"SuveenE"},"content":"                return new InvalidCommand(\"Meal name must not contain symbols.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":296,"author":{"gitId":"SuveenE"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":297,"author":{"gitId":"nikhil-2101"},"content":"            try {","lastModifiedDate":"2024-03-31"},{"lineNumber":298,"author":{"gitId":"SuveenE"},"content":"                if (logParts[2].trim().isEmpty()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":299,"author":{"gitId":"SuveenE"},"content":"                    return new InvalidCommand(\"Calories per serving cannot be empty. Please input a integer above 0!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":300,"author":{"gitId":"SuveenE"},"content":"                }","lastModifiedDate":"2024-04-13"},{"lineNumber":301,"author":{"gitId":"SuveenE"},"content":"                int servings \u003d Integer.parseInt(logParts[3].trim());","lastModifiedDate":"2024-03-30"},{"lineNumber":302,"author":{"gitId":"nikhil-2101"},"content":"                int caloriesPerServing \u003d Integer.parseInt(logParts[2].trim());","lastModifiedDate":"2024-03-31"},{"lineNumber":303,"author":{"gitId":"SuveenE"},"content":"                if (servings !\u003d Double.parseDouble(logParts[3].trim()) || servings \u003c\u003d 0) {","lastModifiedDate":"2024-04-13"},{"lineNumber":304,"author":{"gitId":"SuveenE"},"content":"                    return new InvalidCommand(\"Servings must be a positive integer value.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":305,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-04-08"},{"lineNumber":306,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":307,"author":{"gitId":"SuveenE"},"content":"                if (caloriesPerServing !\u003d Double.parseDouble(logParts[2].trim()) || caloriesPerServing \u003c\u003d 0) {","lastModifiedDate":"2024-04-13"},{"lineNumber":308,"author":{"gitId":"SuveenE"},"content":"                    return new InvalidCommand(\"Calories per serving must be a positive integer value.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":309,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-04-08"},{"lineNumber":310,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":311,"author":{"gitId":"nikhil-2101"},"content":"                if (servings \u003d\u003d 0 || caloriesPerServing \u003d\u003d 0) {","lastModifiedDate":"2024-04-08"},{"lineNumber":312,"author":{"gitId":"nikhil-2101"},"content":"                    return new InvalidCommand(\"Please input a value above 0!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":313,"author":{"gitId":"nikhil-2101"},"content":"                } else if (servings \u003e 10) {","lastModifiedDate":"2024-04-13"},{"lineNumber":314,"author":{"gitId":"nikhil-2101"},"content":"                    return new InvalidCommand(\"Please re-enter a value that is 10 or below!\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":315,"author":{"gitId":"nikhil-2101"},"content":"                            \"If you wish to enter a value of more than 10, please do log in\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":316,"author":{"gitId":"nikhil-2101"},"content":"                            \"these meals twice by having the 2 different serving \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":317,"author":{"gitId":"nikhil-2101"},"content":"                            \"values add up to your intended value.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":318,"author":{"gitId":"nikhil-2101"},"content":"                } else if (description.length() \u003e 32) {","lastModifiedDate":"2024-04-13"},{"lineNumber":319,"author":{"gitId":"nikhil-2101"},"content":"                    return new InvalidCommand(\"Please re-enter a food name that is within 32 characters!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":320,"author":{"gitId":"nikhil-2101"},"content":"                } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":321,"author":{"gitId":"nikhil-2101"},"content":"                    return new AddFoodItemCommand(description, servings, caloriesPerServing, date, time);","lastModifiedDate":"2024-04-13"},{"lineNumber":322,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-04-08"},{"lineNumber":323,"author":{"gitId":"nikhil-2101"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":324,"author":{"gitId":"nikhil-2101"},"content":"                return new InvalidCommand(\"Servings and calories per serving must be an integer value. \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":325,"author":{"gitId":"nikhil-2101"},"content":"                        \"Servings need to be 10 or lesser. \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":326,"author":{"gitId":"nikhil-2101"},"content":"                        \"Please try again.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":327,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":328,"author":{"gitId":"pradeep-cod"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":329,"author":{"gitId":"nikhil-2101"},"content":"            return new InvalidCommand(\"Invalid command format.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":330,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":331,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":332,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":333,"author":{"gitId":"nikhil-2101"},"content":"    private Command parseAddExerciseCommand(String input, String date, String time) {","lastModifiedDate":"2024-04-13"},{"lineNumber":334,"author":{"gitId":"SuveenE"},"content":"        String[] logParts \u003d input.trim().split(\"e/|c/|d/\");","lastModifiedDate":"2024-04-11"},{"lineNumber":335,"author":{"gitId":"pradeep-cod"},"content":"        int length \u003d logParts.length;","lastModifiedDate":"2024-03-31"},{"lineNumber":336,"author":{"gitId":"SuveenE"},"content":"        if (length \u003d\u003d 3) {","lastModifiedDate":"2024-04-13"},{"lineNumber":337,"author":{"gitId":"SuveenE"},"content":"            return new InvalidCommand(\"Duration cannot be empty. Please input a integer above 0!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":338,"author":{"gitId":"nikhil-2101"},"content":"        } else if (length \u003e\u003d 4) {","lastModifiedDate":"2024-04-14"},{"lineNumber":339,"author":{"gitId":"pradeep-cod"},"content":"            String description \u003d logParts[1].trim();","lastModifiedDate":"2024-03-31"},{"lineNumber":340,"author":{"gitId":"SuveenE"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":341,"author":{"gitId":"SuveenE"},"content":"                return new InvalidCommand(\"Exercise name must not be empty.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":342,"author":{"gitId":"SuveenE"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":343,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":344,"author":{"gitId":"SuveenE"},"content":"            if (!description.matches(\"[a-zA-Z0-9 \\\\-]*\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":345,"author":{"gitId":"SuveenE"},"content":"                return new InvalidCommand(\"Exercise name must not contain symbols.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":346,"author":{"gitId":"SuveenE"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":347,"author":{"gitId":"nikhil-2101"},"content":"            try {","lastModifiedDate":"2024-03-31"},{"lineNumber":348,"author":{"gitId":"pradeep-cod"},"content":"                int caloriesBurntPerMinute \u003d Integer.parseInt(logParts[2].trim());","lastModifiedDate":"2024-03-31"},{"lineNumber":349,"author":{"gitId":"pradeep-cod"},"content":"                int duration \u003d Integer.parseInt(logParts[3].trim());","lastModifiedDate":"2024-03-31"},{"lineNumber":350,"author":{"gitId":"SuveenE"},"content":"                if (!input.trim().matches(\"add e/[^ ]+ c/\\\\d+ d/\\\\d+\")) {","lastModifiedDate":"2024-04-11"},{"lineNumber":351,"author":{"gitId":"nikhil-2101"},"content":"                    return new InvalidCommand(\"Invalid command format.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":352,"author":{"gitId":"nikhil-2101"},"content":"                } else if (duration \u003e 200) {","lastModifiedDate":"2024-04-13"},{"lineNumber":353,"author":{"gitId":"nikhil-2101"},"content":"                    return new InvalidCommand(\"Please re-enter a value that is 200 or below!\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":354,"author":{"gitId":"nikhil-2101"},"content":"                            \"If you wish to enter a value of more than 200, please do log in\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":355,"author":{"gitId":"nikhil-2101"},"content":"                            \"these exercises twice by having the 2 different duration \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":356,"author":{"gitId":"nikhil-2101"},"content":"                            \"values add up to your intended value.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":357,"author":{"gitId":"nikhil-2101"},"content":"                } else if (description.length() \u003e 48) {","lastModifiedDate":"2024-04-13"},{"lineNumber":358,"author":{"gitId":"nikhil-2101"},"content":"                    return new InvalidCommand(\"Please re-enter a exercise name \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":359,"author":{"gitId":"nikhil-2101"},"content":"                            \"that is within 48 characters!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":360,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-04-08"},{"lineNumber":361,"author":{"gitId":"SuveenE"},"content":"                if (logParts[2].trim().isEmpty()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":362,"author":{"gitId":"SuveenE"},"content":"                    return new InvalidCommand(\"Calories burnt per minute cannot be empty. \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":363,"author":{"gitId":"SuveenE"},"content":"                            \"Please input a integer above 0!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":364,"author":{"gitId":"SuveenE"},"content":"                }","lastModifiedDate":"2024-04-13"},{"lineNumber":365,"author":{"gitId":"SuveenE"},"content":"                if (caloriesBurntPerMinute !\u003d Double.parseDouble(logParts[2].trim()) || caloriesBurntPerMinute \u003c\u003d 0) {","lastModifiedDate":"2024-04-13"},{"lineNumber":366,"author":{"gitId":"nikhil-2101"},"content":"                    return new InvalidCommand(\"Calories burnt per minute must be a positive \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":367,"author":{"gitId":"nikhil-2101"},"content":"                            \"integer value.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":368,"author":{"gitId":"SuveenE"},"content":"                }","lastModifiedDate":"2024-04-13"},{"lineNumber":369,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":370,"author":{"gitId":"SuveenE"},"content":"                if (duration !\u003d Double.parseDouble(logParts[3].trim()) || duration \u003c\u003d 0) {","lastModifiedDate":"2024-04-13"},{"lineNumber":371,"author":{"gitId":"SuveenE"},"content":"                    return new InvalidCommand(\"Duration must be a positive integer value.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":372,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-04-08"},{"lineNumber":373,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":374,"author":{"gitId":"SuveenE"},"content":"                if (duration \u003d\u003d 0 || caloriesBurntPerMinute \u003d\u003d 0) {","lastModifiedDate":"2024-04-13"},{"lineNumber":375,"author":{"gitId":"SuveenE"},"content":"                    return new InvalidCommand(\"Please input a value above 0!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":376,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-04-14"},{"lineNumber":377,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":378,"author":{"gitId":"nikhil-2101"},"content":"                if (description.length() \u003e 32) {","lastModifiedDate":"2024-04-14"},{"lineNumber":379,"author":{"gitId":"nikhil-2101"},"content":"                    return new InvalidCommand(\"Please re-enter a food name that is within 32 characters!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":380,"author":{"gitId":"SuveenE"},"content":"                } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":381,"author":{"gitId":"nikhil-2101"},"content":"                    return new AddExerciseItemCommand(description, duration, caloriesBurntPerMinute, date, time);","lastModifiedDate":"2024-04-13"},{"lineNumber":382,"author":{"gitId":"SuveenE"},"content":"                }","lastModifiedDate":"2024-04-13"},{"lineNumber":383,"author":{"gitId":"nikhil-2101"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":384,"author":{"gitId":"nikhil-2101"},"content":"                return new InvalidCommand(\"Duration and calories burnt per minute must be an \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":385,"author":{"gitId":"nikhil-2101"},"content":"                        \"integer value. Please try again.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":386,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":387,"author":{"gitId":"SuveenE"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":388,"author":{"gitId":"nikhil-2101"},"content":"        return new InvalidCommand(\"Invalid command format.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":389,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":390,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":391,"author":{"gitId":"nikhil-2101"},"content":"    private Command parseChangeCommand(String input) {","lastModifiedDate":"2024-04-13"},{"lineNumber":392,"author":{"gitId":"nikhil-2101"},"content":"        String[] inputSplit \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2024-04-13"},{"lineNumber":393,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (inputSplit.length \u003d\u003d 1) {","lastModifiedDate":"2024-04-10"},{"lineNumber":394,"author":{"gitId":"nikhil-2101"},"content":"            return new InvalidCommand(\"Please specify what you want to change:\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":395,"author":{"gitId":"nikhil-2101"},"content":"                    \"1. \u0027change h\u0027 - change your height\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":396,"author":{"gitId":"nikhil-2101"},"content":"                    \"2. \u0027change w\u0027 - change your weight\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":397,"author":{"gitId":"nikhil-2101"},"content":"                    \"3. \u0027change cg\u0027 - change calorie goal\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":398,"author":{"gitId":"nikhil-2101"},"content":"                    \"4. \u0027change wg\u0027 - change water goal\");","lastModifiedDate":"2024-04-14"},{"lineNumber":399,"author":{"gitId":"nikhil-2101"},"content":"        } else if (inputSplit[1].trim().equalsIgnoreCase(\"g\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":400,"author":{"gitId":"nikhil-2101"},"content":"            return new InvalidCommand(\"Please specify which goal you want to change:\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":401,"author":{"gitId":"nikhil-2101"},"content":"                    \"1. \u0027change cg\u0027 - change calorie goal\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":402,"author":{"gitId":"nikhil-2101"},"content":"                    \"2. \u0027change wg\u0027 - change water goal\");","lastModifiedDate":"2024-04-14"},{"lineNumber":403,"author":{"gitId":"SuveenE"},"content":"        } else if (inputSplit[1].trim().equalsIgnoreCase(\"h\")) {","lastModifiedDate":"2024-04-11"},{"lineNumber":404,"author":{"gitId":"nikhil-2101"},"content":"            return new ChangeHeightCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":405,"author":{"gitId":"SuveenE"},"content":"        } else if (inputSplit[1].trim().equalsIgnoreCase(\"w\")) {","lastModifiedDate":"2024-04-11"},{"lineNumber":406,"author":{"gitId":"nikhil-2101"},"content":"            return new ChangeWeightCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":407,"author":{"gitId":"SuveenE"},"content":"        } else if (inputSplit[1].trim().equalsIgnoreCase(\"wg\")) {","lastModifiedDate":"2024-04-11"},{"lineNumber":408,"author":{"gitId":"nikhil-2101"},"content":"            return new ChangeWaterGoalCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":409,"author":{"gitId":"SuveenE"},"content":"        } else if (inputSplit[1].trim().equalsIgnoreCase(\"cg\")) {","lastModifiedDate":"2024-04-11"},{"lineNumber":410,"author":{"gitId":"nikhil-2101"},"content":"            return new ChangeCalorieGoalCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":411,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":412,"author":{"gitId":"nikhil-2101"},"content":"            return new InvalidCommand(\"Invalid command. Please enter a valid \u0027change\u0027 command.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":413,"author":{"gitId":"SuveenE"},"content":"        }","lastModifiedDate":"2024-03-10"},{"lineNumber":414,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":415,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"pradeep-cod":14,"alvinnnnnnnnnn":99,"nikhil-2101":210,"SuveenE":92}},{"path":"src/main/java/activeedge/ui/ByeUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package activeedge.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"public class ByeUi {","lastModifiedDate":"2024-03-10"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2024-03-10"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\" );","lastModifiedDate":"2024-03-10"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-10"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-10"}],"authorContributionMap":{"SuveenE":7}},{"path":"src/main/java/activeedge/ui/CommandUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package activeedge.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.log.LogList.logList;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.Log;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogExercise;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogMeal;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogWater;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class CommandUi {","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"        String logo \u003d \"ACTIVE EDGE!\";","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Welcome to \" + logo);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Take the next step in your Healthy Lifestyle!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void printFullList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Logged data for today:\");","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Food: \");","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.print(LINE);","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int j \u003d 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (int i \u003d 0; i \u003c logList.size(); i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (logList.get(i).toString().startsWith(\"Meal\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.println(j + \". \" + logList.get(i).toString().substring(7));","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                j++;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Water:\");","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.print(LINE);","lastModifiedDate":"2024-04-09"},{"lineNumber":39,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int k \u003d 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (int i \u003d 0; i \u003c logList.size(); i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (logList.get(i).toString().startsWith(\"Water\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.println(k + \". \" + logList.get(i).toString().substring(8));","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                k++;","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-04-09"},{"lineNumber":47,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Exercises:\");","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.print(LINE);","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int l \u003d 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (int i \u003d 0; i \u003c logList.size(); i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (logList.get(i).toString().startsWith(\"Exercise\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.print(l + \". \" + logList.get(i).toString().substring(11));","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.println(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                l++;","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-04-09"},{"lineNumber":58,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void printMealLogMessage(LogMeal logMeal) {","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"You\u0027ve logged \" + Integer.toString(logMeal.getServings()) +","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                \" servings\" + \" of \" + logMeal.getFoodName() + \".\") ;","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Estimated calories: \" + Integer.toString(logMeal.getMealCalories()) + \" cal\");","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"SuveenE"},"content":"    public static void printExerciseLogMessage(LogExercise logExercise) {","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"You\u0027ve logged \" + Integer.toString(logExercise.getDuration()) +","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"SuveenE"},"content":"                \" minutes\" + \" of \" + logExercise.getExerciseName() + \".\") ;","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Estimated calories burnt: \" + Integer.toString(logExercise.getCaloriesBurnt()) + \" cal\");","lastModifiedDate":"2024-04-09"},{"lineNumber":70,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void printShowCalMessage() {","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int totalCalories \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"nikhil-2101"},"content":"        int totalCaloriesFromMeals \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"nikhil-2101"},"content":"        int totalCaloriesFromExercises \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"pradeep-cod"},"content":"        int caloriegoal;","lastModifiedDate":"2024-04-08"},{"lineNumber":77,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String goal \u003d \"0\";","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (int i \u003d 0; i \u003c logList.size(); i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            String[] parts \u003d logList.get(i).toString().split(\" \");","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            int len \u003d parts.length;","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            String logString \u003d logList.get(i).toString();","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            int calIndex \u003d -1;","lastModifiedDate":"2024-04-09"},{"lineNumber":83,"author":{"gitId":"nikhil-2101"},"content":"            for (int j \u003d 0; j \u003c len; j++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                if (parts[j].equals(\"cal\")) {","lastModifiedDate":"2024-04-09"},{"lineNumber":85,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    calIndex \u003d j - 1; // Assuming calorie value is just before \"kcal\"","lastModifiedDate":"2024-04-09"},{"lineNumber":86,"author":{"gitId":"nikhil-2101"},"content":"                    break;","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"nikhil-2101"},"content":"            // Check if kcal index is found and the part at that index is a valid integer","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (calIndex \u003e\u003d 0 \u0026\u0026 calIndex \u003c parts.length) {","lastModifiedDate":"2024-04-09"},{"lineNumber":92,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                String calorieString \u003d parts[calIndex];","lastModifiedDate":"2024-04-09"},{"lineNumber":93,"author":{"gitId":"nikhil-2101"},"content":"                if (calorieString.matches(\"\\\\d+\")) { // Check if it\u0027s a valid integer","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"nikhil-2101"},"content":"                    int calories \u003d Integer.parseInt(calorieString);","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    if (logString.startsWith(\"Meal\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"nikhil-2101"},"content":"                        totalCaloriesFromMeals +\u003d calories;","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    } else if (logString.startsWith(\"Exercise\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"nikhil-2101"},"content":"                        totalCaloriesFromExercises +\u003d calories;","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"nikhil-2101"},"content":"                    }","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"nikhil-2101"},"content":"                } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"nikhil-2101"},"content":"                    System.out.println(\"Skipping non-integer calorie value: \" + calorieString);","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if(logList.get(i).toString().startsWith(\"Goal\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"pradeep-cod"},"content":"                if (parts[1].equals(\"Calorie\")) {","lastModifiedDate":"2024-04-08"},{"lineNumber":106,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    goal \u003d parts[2].toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"nikhil-2101"},"content":"        totalCalories \u003d totalCaloriesFromMeals - totalCaloriesFromExercises;","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":112,"author":{"gitId":"nikhil-2101"},"content":"        int totalSurplus \u003d totalCalories - Integer.parseInt(goal);","lastModifiedDate":"2024-04-08"},{"lineNumber":113,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"You have burned \" + totalCaloriesFromExercises + \" today!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":114,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"You have consumed \" + totalCaloriesFromMeals + \" cal out of \" + goal + \" kcal\");","lastModifiedDate":"2024-04-09"},{"lineNumber":115,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"nikhil-2101"},"content":"        if(totalCaloriesFromMeals \u003e Integer.parseInt(goal)) {","lastModifiedDate":"2024-04-08"},{"lineNumber":117,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"You have exceeded your calorie intake goal!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":118,"author":{"gitId":"nikhil-2101"},"content":"        } else{","lastModifiedDate":"2024-04-08"},{"lineNumber":119,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"You\u0027re doing an excellent job of managing your calorie intake!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":120,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":121,"author":{"gitId":"nikhil-2101"},"content":"        if(totalSurplus \u003e 0){","lastModifiedDate":"2024-04-08"},{"lineNumber":122,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"Calorie surplus at the moment --\u003e \" + totalSurplus);","lastModifiedDate":"2024-04-08"},{"lineNumber":123,"author":{"gitId":"nikhil-2101"},"content":"        } else{","lastModifiedDate":"2024-04-10"},{"lineNumber":124,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"Calorie deficit at the moment --\u003e \" + -totalSurplus);","lastModifiedDate":"2024-04-08"},{"lineNumber":125,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":126,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":127,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void printWaterLogMessage(LogWater newLogWater) {","lastModifiedDate":"2024-04-12"},{"lineNumber":130,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Successfully logged \" + newLogWater.getQuantity() + \" ml of water.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":131,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"pradeep-cod"},"content":"    public static void printWaterIntakeMessage(int totalWaterIntake, int waterGoal) {","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"pradeep-cod"},"content":"        double percentage \u003d ((double) totalWaterIntake / waterGoal) * 100;","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Total water consumed today: \" + totalWaterIntake +","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"SuveenE"},"content":"                \" ml (\" + String.format(\"%.0f%%\", percentage) + \" of \" + waterGoal + \"ml goal).\");","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":139,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void printMatchingLog (String word) {","lastModifiedDate":"2024-04-12"},{"lineNumber":140,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(LINE + \"Here are the matching logs in your list:\");","lastModifiedDate":"2024-04-12"},{"lineNumber":141,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int matchingLogIndex \u003d 1;","lastModifiedDate":"2024-04-12"},{"lineNumber":142,"author":{"gitId":"pradeep-cod"},"content":"        boolean found \u003d false;","lastModifiedDate":"2024-03-22"},{"lineNumber":143,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":144,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (Log log : logList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":145,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            String logString \u003d log.toString().trim(); // Trim the task string","lastModifiedDate":"2024-04-12"},{"lineNumber":146,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (logString.startsWith(\"Meal\") \u0026\u0026 logString.contains(word)) {","lastModifiedDate":"2024-04-12"},{"lineNumber":147,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.print(matchingLogIndex + \". \");","lastModifiedDate":"2024-04-12"},{"lineNumber":148,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.println(logString.substring(7));","lastModifiedDate":"2024-04-12"},{"lineNumber":149,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                matchingLogIndex++;","lastModifiedDate":"2024-04-12"},{"lineNumber":150,"author":{"gitId":"Praneet-25"},"content":"                found \u003d true;","lastModifiedDate":"2024-04-08"},{"lineNumber":151,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":152,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } else if (logString.startsWith(\"Water\") \u0026\u0026 logString.contains(word)) {","lastModifiedDate":"2024-04-12"},{"lineNumber":153,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.print(matchingLogIndex + \". \");","lastModifiedDate":"2024-04-12"},{"lineNumber":154,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                System.out.println(logString.substring(8));","lastModifiedDate":"2024-04-12"},{"lineNumber":155,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                matchingLogIndex++;","lastModifiedDate":"2024-04-12"},{"lineNumber":156,"author":{"gitId":"Praneet-25"},"content":"                found \u003d true;","lastModifiedDate":"2024-04-08"},{"lineNumber":157,"author":{"gitId":"pradeep-cod"},"content":"            } else if (logString.startsWith(\"Exercise\") \u0026\u0026 logString.contains(word)) {","lastModifiedDate":"2024-04-12"},{"lineNumber":158,"author":{"gitId":"pradeep-cod"},"content":"                System.out.print(matchingLogIndex + \". \");","lastModifiedDate":"2024-04-12"},{"lineNumber":159,"author":{"gitId":"pradeep-cod"},"content":"                System.out.println(logString.substring(11));","lastModifiedDate":"2024-04-12"},{"lineNumber":160,"author":{"gitId":"pradeep-cod"},"content":"                matchingLogIndex++;","lastModifiedDate":"2024-04-12"},{"lineNumber":161,"author":{"gitId":"pradeep-cod"},"content":"                found \u003d true;","lastModifiedDate":"2024-04-12"},{"lineNumber":162,"author":{"gitId":"pradeep-cod"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":163,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":164,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":165,"author":{"gitId":"pradeep-cod"},"content":"        if (!found) {","lastModifiedDate":"2024-03-22"},{"lineNumber":166,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(\"No matching logs found.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":167,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":168,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":169,"author":{"gitId":"pradeep-cod"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-22"},{"lineNumber":170,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":171,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":172,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"nikhil-2101"},"content":"     * Prints a message indicating that the delete request format is invalid.","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"nikhil-2101"},"content":"    public static void printInvalidDeleteFormatMessage() {","lastModifiedDate":"2024-03-22"},{"lineNumber":176,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"This is an invalid request. Please try again!\");","lastModifiedDate":"2024-03-22"},{"lineNumber":177,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":178,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":179,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"nikhil-2101"},"content":"     * Prints a message confirming the deletion of a task.","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * @param deletedLog The task that was deleted.","lastModifiedDate":"2024-04-12"},{"lineNumber":182,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void printLogDeletedMessage(Log deletedLog) {","lastModifiedDate":"2024-04-12"},{"lineNumber":184,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Log deleted: \" + deletedLog.toString());","lastModifiedDate":"2024-04-13"},{"lineNumber":185,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":186,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":187,"author":{"gitId":"SuveenE"},"content":"    public static void printFoodItemNotFoundMessage(String description, int servings){","lastModifiedDate":"2024-04-13"},{"lineNumber":188,"author":{"gitId":"SuveenE"},"content":"        System.out.println(description + \" is not found in our food database.\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":189,"author":{"gitId":"pradeep-cod"},"content":"                \"Please enter the following command to add it to the database and log your meal.\\n\\n\" +","lastModifiedDate":"2024-04-01"},{"lineNumber":190,"author":{"gitId":"SuveenE"},"content":"                \"add m/\u003cFOOD\u003e c/\u003cCALORIES_PER_SERVING(cal)\u003e s/\u003cNUMBER_OF_SERVINGS\u003e\\n\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":191,"author":{"gitId":"SuveenE"},"content":"                \"Eg: \u0027add m/\"+ description +\" c/120 s/\" + servings + \" \u0027\\n\\n\" + \"Remember to replace the\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":192,"author":{"gitId":"SuveenE"},"content":"                \" actual calories per serving value, if you are using the example command above.\"","lastModifiedDate":"2024-04-13"},{"lineNumber":193,"author":{"gitId":"SuveenE"},"content":"        );","lastModifiedDate":"2024-03-30"},{"lineNumber":194,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":195,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":196,"author":{"gitId":"SuveenE"},"content":"    public static void printExerciseItemNotFoundMessage(String exerciseName, int duration){","lastModifiedDate":"2024-04-13"},{"lineNumber":197,"author":{"gitId":"pradeep-cod"},"content":"        System.out.println(exerciseName + \" is not found in our exercise database.\\n\" +","lastModifiedDate":"2024-04-01"},{"lineNumber":198,"author":{"gitId":"SuveenE"},"content":"                \"Please enter the following command to log your exercise.\\n\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":199,"author":{"gitId":"SuveenE"},"content":"                \"add e/\u003cEXERCISE\u003e c/\u003cCALORIES_BURNT_PER_MIN(cal)\u003e s/\u003cDURATION_IN_MIN\u003e\\n\\n\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":200,"author":{"gitId":"SuveenE"},"content":"                \"Eg: \u0027add e/\"+ exerciseName +\" c/8 d/\" +duration + \" \u0027\\n\\n\" + \"Remember to replace the\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":201,"author":{"gitId":"SuveenE"},"content":"                \" actual calories burnt per minute value, if you are using the example command above.\"","lastModifiedDate":"2024-04-13"},{"lineNumber":202,"author":{"gitId":"pradeep-cod"},"content":"        );","lastModifiedDate":"2024-03-31"},{"lineNumber":203,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":206,"author":{"gitId":"SuveenE"},"content":"    public static void printAddFoodItemMessage(String description){","lastModifiedDate":"2024-03-30"},{"lineNumber":207,"author":{"gitId":"SuveenE"},"content":"        System.out.println(description + \" has been added to the food database.\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":208,"author":{"gitId":"SuveenE"},"content":"                \"logging your meal.......\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":209,"author":{"gitId":"SuveenE"},"content":"        );","lastModifiedDate":"2024-03-30"},{"lineNumber":210,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":211,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":212,"author":{"gitId":"pradeep-cod"},"content":"    public static void printAddExerciseMessage(String exerciseName) {","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"pradeep-cod"},"content":"        System.out.println(exerciseName + \" has been added to the exercise database.\\n\" +","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"pradeep-cod"},"content":"                \"logging your exercise.......\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"pradeep-cod"},"content":"        );","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":219,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void printLogNotFoundMessage() {","lastModifiedDate":"2024-04-12"},{"lineNumber":220,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Log not found. View all logged entries using \u0027list\u0027.\");","lastModifiedDate":"2024-04-08"},{"lineNumber":221,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":222,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":223,"author":{"gitId":"SuveenE"},"content":"    public static void printWaterLogFoundFormatErrorMessage(int amount){","lastModifiedDate":"2024-04-08"},{"lineNumber":224,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Did you mean \u0027delete \" + amount + \"\u0027\" );","lastModifiedDate":"2024-04-08"},{"lineNumber":225,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":226,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":227,"author":{"gitId":"SuveenE"},"content":"    public static void printInvalidItemIndexMessage(){","lastModifiedDate":"2024-04-09"},{"lineNumber":228,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Invalid log index. Please note the index should be 1 or above. \\n\" +","lastModifiedDate":"2024-04-09"},{"lineNumber":229,"author":{"gitId":"SuveenE"},"content":"                \"If you don\u0027t have multiple logs from the same name, index is set to 1 by default .\");","lastModifiedDate":"2024-04-09"},{"lineNumber":230,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":231,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":232,"author":{"gitId":"SuveenE"},"content":"    public static void printDeleteMealInvalidIndexMessage(){","lastModifiedDate":"2024-04-08"},{"lineNumber":233,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Invalid index. View all logged entries using \u0027list\u0027.\" );","lastModifiedDate":"2024-04-08"},{"lineNumber":234,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":235,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":236,"author":{"gitId":"pradeep-cod"},"content":"    public static void printShowSummaryMessage(int height, int weight, int BMI, int totalCalories,int","lastModifiedDate":"2024-04-12"},{"lineNumber":237,"author":{"gitId":"pradeep-cod"},"content":"                                               totalWaterIntake, int totalCaloriesBurnt,","lastModifiedDate":"2024-04-12"},{"lineNumber":238,"author":{"gitId":"Praneet-25"},"content":"                                               String calorieGoal, String waterGoal,","lastModifiedDate":"2024-03-28"},{"lineNumber":239,"author":{"gitId":"Praneet-25"},"content":"                                               int netCalories, String calorieStatus) {","lastModifiedDate":"2024-03-28"},{"lineNumber":240,"author":{"gitId":"Praneet-25"},"content":"        System.out.println(\"Daily Summary:\");","lastModifiedDate":"2024-03-25"},{"lineNumber":241,"author":{"gitId":"pradeep-cod"},"content":"        System.out.println(\"Height: \" + height + \" cm\");","lastModifiedDate":"2024-04-12"},{"lineNumber":242,"author":{"gitId":"pradeep-cod"},"content":"        System.out.println(\"Weight: \" + weight + \" kg\");","lastModifiedDate":"2024-04-12"},{"lineNumber":243,"author":{"gitId":"pradeep-cod"},"content":"        System.out.println(\"BMI: \" + BMI);","lastModifiedDate":"2024-04-12"},{"lineNumber":244,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Total calories consumed: \" + totalCalories + \" cal\");","lastModifiedDate":"2024-04-09"},{"lineNumber":245,"author":{"gitId":"Praneet-25"},"content":"        System.out.println(\"Total water consumed: \" + totalWaterIntake + \" ml\");","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Total calories burnt: \" + totalCaloriesBurnt + \" cal\");","lastModifiedDate":"2024-04-09"},{"lineNumber":247,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":248,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Calorie goal: \" + calorieGoal + \" cal\");","lastModifiedDate":"2024-04-09"},{"lineNumber":249,"author":{"gitId":"Praneet-25"},"content":"        System.out.println(\"Water goal: \" + waterGoal + \" ml\");","lastModifiedDate":"2024-03-25"},{"lineNumber":250,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":251,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Net calories: \" + netCalories + \" cal\");","lastModifiedDate":"2024-04-09"},{"lineNumber":252,"author":{"gitId":"Praneet-25"},"content":"        System.out.println(\"Calorie status: \" + calorieStatus);","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":254,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":255,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static void printAllLogsClearedMessage() {","lastModifiedDate":"2024-04-12"},{"lineNumber":256,"author":{"gitId":"pradeep-cod"},"content":"        System.out.println(\"All logged data has been cleared.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":257,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":258,"author":{"gitId":"pradeep-cod"},"content":"    public static void printDataAlreadyClearedMessage() {","lastModifiedDate":"2024-03-26"},{"lineNumber":259,"author":{"gitId":"pradeep-cod"},"content":"        System.out.println(\"Logged data has already been cleared.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":260,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":261,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":262,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":263,"author":{"gitId":"nikhil-2101"},"content":"     * Prompts the user to log an exercise instead of adding it because it already exists.","lastModifiedDate":"2024-04-01"},{"lineNumber":264,"author":{"gitId":"nikhil-2101"},"content":"     * @param exerciseName The name of the existing exercise.","lastModifiedDate":"2024-04-01"},{"lineNumber":265,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":266,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":267,"author":{"gitId":"nikhil-2101"},"content":"    public static void promptLogExerciseMessage(String exerciseName) {","lastModifiedDate":"2024-04-01"},{"lineNumber":268,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"The exercise \u0027\" + exerciseName + \" already exists. Please log \" + exerciseName +","lastModifiedDate":"2024-04-01"},{"lineNumber":269,"author":{"gitId":"nikhil-2101"},"content":"                \" instead of adding it.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":270,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":271,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":272,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":273,"author":{"gitId":"nikhil-2101"},"content":"     * Prompts the user to log a food item instead of adding it because it already exists.","lastModifiedDate":"2024-04-01"},{"lineNumber":274,"author":{"gitId":"nikhil-2101"},"content":"     * @param foodItemName The name of the existing food item.","lastModifiedDate":"2024-04-01"},{"lineNumber":275,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":276,"author":{"gitId":"nikhil-2101"},"content":"    public static void promptLogFoodMessage(String foodItemName) {","lastModifiedDate":"2024-04-01"},{"lineNumber":277,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"The food item \u0027\" + foodItemName + \"\u0027 already exists. Please log \" + foodItemName +","lastModifiedDate":"2024-04-01"},{"lineNumber":278,"author":{"gitId":"nikhil-2101"},"content":"                \" instead of adding it.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":279,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":280,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":281,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":282,"author":{"gitId":"nikhil-2101"},"content":"    public static void printCalorieExceedingWarning() {","lastModifiedDate":"2024-04-08"},{"lineNumber":283,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"WARNING: You are exceeding your calorie intake!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":284,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":285,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":286,"author":{"gitId":"SuveenE"},"content":"    public static void printWaterIntakeExceedingWarning() {","lastModifiedDate":"2024-04-13"},{"lineNumber":287,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Hooray! You have passed your water intake goal for the day!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":288,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":289,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":290,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":291,"author":{"gitId":"nikhil-2101"},"content":"    public static void printErrorMessage(String errorMessage) {","lastModifiedDate":"2024-04-08"},{"lineNumber":292,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(\"ERROR: \" + errorMessage);","lastModifiedDate":"2024-04-08"},{"lineNumber":293,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":294,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"pradeep-cod":49,"Praneet-25":10,"alvinnnnnnnnnn":102,"nikhil-2101":80,"SuveenE":53}},{"path":"src/main/java/activeedge/ui/GoalsUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package activeedge.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":" * The GoalsUi class provides user interface functionalities for managing health goals in the ActiveEdge application.","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"public class GoalsUi {","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"     * Prints the current health goals set by the user.","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"     * @param calorieGoal The daily calorie goal.","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"     * @param waterGoal The daily water intake goal.","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"    public static void printShowGoalsMessage(int calorieGoal, int waterGoal) {","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Current goals\\nDaily calories intake goal: \" + calorieGoal + \" cal\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"                \"\\nDaily water intake goal: \" + waterGoal + \" ml\");","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"pradeep-cod":16,"SuveenE":3}},{"path":"src/main/java/activeedge/ui/HelpUi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package activeedge.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":" * The HelpUi class provides a user interface for displaying help messages related to","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":" * the Health Tracker Bot. It outlines how to use various commands within the bot for","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":" * tracking calorie intake, water intake, and setting personal health goals.","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"public class HelpUi {","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"     * Prints a detailed help message to the standard output.","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"        System.out.println(\"Welcome to Active Edge! Here are the available commands:\\n\" +","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"                \"1. Log meal: `log m/\u003cMEAL_NAME\u003e s/\u003cNUMBER_OF_SERVINGS\u003e`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"                \"2. Log water intake : `log w/\u003cAMOUNT_OF_WATER\u003e`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"                \"3. Log exercises: `log e/\u003cEXERCISE_NAME\u003e d/\u003cDURATION\u003e`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"                \"4. View daily goals: `show g`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"                \"5. View daily calorie intake: `show c`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"                \"6. View daily water intake: `show w`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"                \"7. View all logged entries: `list`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"                \"8. View all food items in the database: `foodData`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"                \"9. View all exercises in the database: `exerciseData`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"SuveenE"},"content":"                \"10. Delete meal logs: `delete \u003cMEAL_NAME\u003e`.\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"SuveenE"},"content":"                \"11. Delete water logs: `delete \u003cQUANTITY_OF_WATER\u003e ml` \\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"SuveenE"},"content":"                \"12. Delete exercise logs: `delete \u003cEXERCISE_NAME\u003e` \\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"SuveenE"},"content":"                \"13. Log a meal not in the database: `add m/\u003cMEAL_NAME\u003e \" +","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"SuveenE"},"content":"                \"c/CALORIES_PER_SERVING s/\u003cNUMBER_OF_SERVINGS\u003e`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"SuveenE"},"content":"                \"14. Log an exercise not in the database: `add e/\u003cEXERCISE\u003e \" +","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"SuveenE"},"content":"                \"c/\u003cCALORIES_BURNT_PER_MIN\u003e d/\u003cDURATION_IN_MIN\u003e`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"SuveenE"},"content":"                \"15. Change user height: `change h`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"SuveenE"},"content":"                \"16. Change user weight: `change w`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"SuveenE"},"content":"                \"17. Change daily calorie intake goal: `change cg`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"SuveenE"},"content":"                \"18. Change daily water intake goal: `change wg`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"SuveenE"},"content":"                \"19. Show daily summary: `summary`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"SuveenE"},"content":"                \"20. Search for entries: `find`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"SuveenE"},"content":"                \"21. Get help: `help`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"SuveenE"},"content":"                \"22. Clear all logged entries: `clear`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"SuveenE"},"content":"                \"23. Exit the program: `bye`\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"SuveenE"},"content":"                \"Start tracking your health goals now!\" );","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"SuveenE":42}},{"path":"src/main/java/activeedge/userdetails/LogBMI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge.userdetails;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogBMI extends UserDetails {","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public LogBMI(Integer value, String date, String time) {","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        super(value);","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return \"BMI \" + getValue() + \" (Recorded on: \" + date + \" \" + time + \")\";","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"alvinnnnnnnnnn":19}},{"path":"src/main/java/activeedge/userdetails/LogHeight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge.userdetails;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":" * The LogHeight class represents a log of height details for a user.","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":" * It extends the UserDetails class and includes a timestamp for when the height was recorded.","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogHeight extends UserDetails {","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"     * The date and time when the height was recorded.","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"     * Constructs a LogHeight object with the specified height value and timestamp.","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"     * @param value    The height value.","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * @param date The date when the height was recorded.","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * @param time The time when the height was recorded.","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public LogHeight(Integer value, String date, String time) {","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        super(value);","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"     * Returns a string representation of the LogHeight object.","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"pradeep-cod"},"content":"     * This includes the height value and the timestamp.","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"pradeep-cod"},"content":"     * @return A string representation of the LogHeight object.","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"pradeep-cod"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return \"Height \" + this.getValue() + \" cm\" + \" (Recorded on: \" + date + \" \" + time + \")\";","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"pradeep-cod":23,"alvinnnnnnnnnn":12,"nikhil-2101":3}},{"path":"src/main/java/activeedge/userdetails/LogWeight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge.userdetails;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":" * The LogWeight class represents a log of weight details for a user.","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":" * It extends the UserDetails class and includes a timestamp for when the weight was recorded.","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogWeight extends UserDetails {","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"     * The date and time when the weight was recorded.","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"     * Constructs a LogWeight object with the specified weight value and timestamp.","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"     * @param value    The weight value.","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * @param date The date when the weight was recorded.","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * @param time The time when the weight was recorded.","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public LogWeight(Integer value, String date, String time) {","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"        super(value);","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"     * Returns a string representation of the LogWeight object.","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"pradeep-cod"},"content":"     * This includes the weight value and the timestamp.","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"pradeep-cod"},"content":"     * @return A string representation of the LogWeight object.","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return \"Weight \" + this.getValue() + \" kg\" + \" (Recorded on: \" + date + \" \" + time + \")\";","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"pradeep-cod":21,"alvinnnnnnnnnn":13,"nikhil-2101":5}},{"path":"src/main/java/activeedge/userdetails/UserDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge.userdetails;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":" * The UserDetails class represents details of a user.","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":" * It provides methods to get the value of the user details and to represent the object as a string.","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class UserDetails {","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"     * The value of the user details.","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected Integer value;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String stringValue;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"     * Constructs a UserDetails object with the specified value.","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"     * @param value The value of the user details.","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public UserDetails(Integer value) {","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"pradeep-cod"},"content":"     * Gets the value of the user details.","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"     * @return The value of the user details.","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public Integer getValue() {","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return this.value;","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"     * Returns a string representation of the UserDetails object.","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"pradeep-cod"},"content":"     * @return A string representation of the UserDetails object.","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return String.valueOf(this.getValue());","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"pradeep-cod":24,"alvinnnnnnnnnn":19}},{"path":"src/main/java/activeedge/userdetails/UserDetailsList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package activeedge.userdetails;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":" * The UserDetailsList class represents a list of user details.","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":" * It provides methods to add user details, retrieve user details, and clear the list.","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class UserDetailsList {","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"     * The list containing user details.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static final ArrayList\u003cUserDetails\u003e detailsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"     * Adds user details to the list.","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"     * @param details The user details to add.","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public void add(UserDetails details) {","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        detailsList.add(details);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"pradeep-cod"},"content":"     * Retrieves user details from the list.","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"     * @return The user details retrieved.","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"     * @throws IndexOutOfBoundsException if the index is out of bounds.","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static UserDetails get() {","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c detailsList.size()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            return detailsList.get(index);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            throw new IndexOutOfBoundsException(\"Index is out of bounds.\");","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static UserDetails delete(int index) {","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c detailsList.size()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            return detailsList.remove(index);","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            throw new IndexOutOfBoundsException(\"Index is out of bounds.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"pradeep-cod"},"content":"     * Clears the list of user details.","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"pradeep-cod"},"content":"    public static void clearDetailsList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        detailsList.clear();","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"pradeep-cod":26,"alvinnnnnnnnnn":29}},{"path":"src/main/java/command/ActiveEdgeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"public class ActiveEdgeException extends Exception{","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"    public String warning;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"    public ActiveEdgeException(String warning) {","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"        super(warning);","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"nikhil-2101":7,"SuveenE":1}},{"path":"src/main/java/command/AddBMICommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package command;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.LogBMI;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.userdetails.UserDetailsList.detailsList;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class AddBMICommand {","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected Integer heightInput;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected Integer weightInput;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public AddBMICommand (Integer heightInput, Integer weightInput, String date, String time) {","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.heightInput \u003d heightInput;","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.weightInput \u003d weightInput;","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public void execute() throws ActiveEdgeException {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        double heightMeters \u003d (double) heightInput / 100;","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int bmi \u003d (int) (weightInput / (heightMeters * heightMeters));","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogBMI logBMI \u003d new LogBMI(bmi, date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        detailsList.add(logBMI);","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        System.out.println(\"Your BMI is \" + bmi);","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (bmi \u003c 19) {","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(\"You are in the underweight range.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else if (bmi \u003c 25) {","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(\"You are in the healthy weight range.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else if (bmi \u003c 30) {","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(\"You are in the overweight range.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(\"You are in the obese weight range.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"alvinnnnnnnnnn":35}},{"path":"src/main/java/command/AddCalorieGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogGoals;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.log.LogList.logList;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"public class AddCalorieGoalCommand {","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"    private int calorieGoal;","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public AddCalorieGoalCommand(int calorieGoal, String date, String time) {","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"        this.calorieGoal \u003d calorieGoal;","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"    public void execute() {","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogGoals logCalorieGoal \u003d new LogGoals(\"Calorie\", calorieGoal, date, time);","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        logList.add(logCalorieGoal);","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Add logic to save calorie goal to log list","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"pradeep-cod":12,"alvinnnnnnnnnn":11,"SuveenE":1}},{"path":"src/main/java/command/AddExerciseItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":"import activeedge.ExerciseData;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":" * The AddExerciseItemCommand class represents a command to add a new exercise item to the ActiveEdge application.","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":" * It encapsulates the exercise name, duration, calories burnt per minute, and the date and time of the exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"public class AddExerciseItemCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"    protected String exerciseName;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"    protected int duration;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"    protected int caloriesBurntPerMinute;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"    protected String date;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"    protected String time;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"     * Constructs an AddExerciseItemCommand with the specified exercise details.","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"     * @param exerciseName The name of the exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"     * @param duration The duration of the exercise in minutes.","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"     * @param caloriesBurntPerMinute The number of calories burnt per minute during the exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * @param date The date when the exercise was performed.","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * @param time The time when the exercise was performed.","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"    public AddExerciseItemCommand(String exerciseName, int duration, int caloriesBurntPerMinute,","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                                  String date, String time) {","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"pradeep-cod"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"SuveenE"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"SuveenE"},"content":"        this.caloriesBurntPerMinute \u003d caloriesBurntPerMinute;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":31,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"     * Executes the AddExerciseItemCommand by adding the exercise to the list of exercises, printing a success message,","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"pradeep-cod"},"content":"     * and logging the exercise in the application\u0027s data.","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"pradeep-cod"},"content":"     * @throws ActiveEdgeException If an error occurs during the execution of the command.","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"        if (ExerciseData.exerciseExists(exerciseName)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"            // Exercise activity exists, log it","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"            CommandUi.promptLogExerciseMessage(exerciseName);","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"pradeep-cod"},"content":"            String[] newExercise \u003d {exerciseName, Integer.toString(caloriesBurntPerMinute)};","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"pradeep-cod"},"content":"            ExerciseData.exercisesList \u003d appendItem(ExerciseData.exercisesList, newExercise);","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"pradeep-cod"},"content":"            CommandUi.printAddExerciseMessage(exerciseName);","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"pradeep-cod"},"content":"            LogExerciseCommand logExerciseCommand \u003d new LogExerciseCommand(exerciseName, duration,","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    caloriesBurntPerMinute * duration, date, time, true);","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"pradeep-cod"},"content":"            logExerciseCommand.execute();","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"SuveenE"},"content":"    public String getExerciseName() {","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"SuveenE"},"content":"        return exerciseName;","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"SuveenE"},"content":"    public int getDuration() {","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"SuveenE"},"content":"        return duration;","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"SuveenE"},"content":"    public int getCaloriesBurntPerMinute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"SuveenE"},"content":"        return caloriesBurntPerMinute;","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"pradeep-cod"},"content":"     * Appends a new exercise item to the array of exercises.","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"pradeep-cod"},"content":"     * @param originalArray The original array of exercises.","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"pradeep-cod"},"content":"     * @param newItem The new exercise item to be appended.","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"pradeep-cod"},"content":"     * @return The updated array of exercises with the new item appended.","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"nikhil-2101"},"content":"    public static String[][] appendItem(String[][] originalArray, String[] newItem) {","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"pradeep-cod"},"content":"        // Create a new array with one more row than the original","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"pradeep-cod"},"content":"        String[][] newArray \u003d new String[originalArray.length + 1][2];","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"pradeep-cod"},"content":"        assert originalArray.length \u003e 0 \u0026\u0026 originalArray[0].length \u003d\u003d 2 : \"Each item in the original array does \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"pradeep-cod"},"content":"                \"not have 2 elements\";","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"pradeep-cod"},"content":"        // Copy the contents of the original array to the new array","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"pradeep-cod"},"content":"        for(int i \u003d 0; i \u003c originalArray.length; i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"pradeep-cod"},"content":"            newArray[i] \u003d originalArray[i];","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"SuveenE"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"pradeep-cod"},"content":"        // Add the new item to the last position of the new array","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"pradeep-cod"},"content":"        newArray[newArray.length - 1] \u003d newItem;","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"pradeep-cod"},"content":"        return newArray;","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"pradeep-cod":51,"alvinnnnnnnnnn":6,"nikhil-2101":8,"SuveenE":21}},{"path":"src/main/java/command/AddFoodItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.Log;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogGoals;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogList;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogMeal;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"import static activeedge.FoodData.foodItems;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"import static activeedge.FoodData.appendItem;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"import activeedge.FoodData;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"public class AddFoodItemCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"    protected String description;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"    protected int servings;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"    protected int caloriesPerSaving;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public AddFoodItemCommand(String description, int servings, int caloriesPerSaving, String date, String time) {","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"        this.servings \u003d servings;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"        this.caloriesPerSaving \u003d caloriesPerSaving;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"        try {","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"            int calorieGoal \u003d getCalorieGoal();","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"            if (FoodData.foodItemExists(description)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"                // Food item exists, prompt user to log it","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"                CommandUi.promptLogFoodMessage(description);","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"            } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"SuveenE"},"content":"                String[] newItem \u003d {description, Integer.toString(caloriesPerSaving)};","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"SuveenE"},"content":"                foodItems \u003d appendItem(foodItems, newItem);","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"SuveenE"},"content":"                CommandUi.printAddFoodItemMessage(description);","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"SuveenE"},"content":"                LogMealCommand logMealCommand \u003d new LogMealCommand(description, servings,","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                        caloriesPerSaving * servings, date, time, true);","lastModifiedDate":"2024-04-09"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"                int totalCaloriesConsumed \u003d calculateTotalCaloriesConsumed() + caloriesPerSaving;","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"SuveenE"},"content":"                logMealCommand.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"        } catch(Exception e){","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"            CommandUi.printErrorMessage(\"An error occurred while adding the meal: \" + e.getMessage());","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"SuveenE"},"content":"    public String getDescription() {","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"SuveenE"},"content":"        return description;","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"SuveenE"},"content":"    public int getServings() {","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"SuveenE"},"content":"        return servings;","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"SuveenE"},"content":"    public int getCaloriesPerSaving() {","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"SuveenE"},"content":"        return caloriesPerSaving;","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"nikhil-2101"},"content":"    private int getCalorieGoal() {","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (Log log : LogList.logList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (log instanceof LogGoals \u0026\u0026 log.getDescription().startsWith(\"Calorie\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                return ((LogGoals) log).getGoalAmount();","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"nikhil-2101"},"content":"        return 0;","lastModifiedDate":"2024-04-11"},{"lineNumber":68,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":69,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":70,"author":{"gitId":"nikhil-2101"},"content":"    private int calculateTotalCaloriesConsumed() {","lastModifiedDate":"2024-04-11"},{"lineNumber":71,"author":{"gitId":"nikhil-2101"},"content":"        int totalCaloriesConsumed \u003d 0;","lastModifiedDate":"2024-04-11"},{"lineNumber":72,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (Log log : LogList.logList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (log instanceof LogMeal) {","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                totalCaloriesConsumed +\u003d ((LogMeal) log).getMealCalories();","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":76,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":77,"author":{"gitId":"nikhil-2101"},"content":"        return totalCaloriesConsumed;","lastModifiedDate":"2024-04-11"},{"lineNumber":78,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"alvinnnnnnnnnn":16,"nikhil-2101":29,"SuveenE":34}},{"path":"src/main/java/command/AddHeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package command;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.LogHeight;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.userdetails.UserDetailsList.detailsList;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class AddHeightCommand {","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected Integer height;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public AddHeightCommand (Integer height, String date, String time) {","lastModifiedDate":"2024-04-09"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.height \u003d height;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public void execute() throws ActiveEdgeException {","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogHeight logHeight \u003d new LogHeight(height,date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        detailsList.add(logHeight);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"alvinnnnnnnnnn":20,"nikhil-2101":1}},{"path":"src/main/java/command/AddWaterGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pradeep-cod"},"content":"package command;","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogGoals;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.log.LogList.logList;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"public class AddWaterGoalCommand {","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"    private int waterGoal;","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public AddWaterGoalCommand(int waterGoal, String date, String time) {","lastModifiedDate":"2024-04-09"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"        assert waterGoal \u003e\u003d 0 : \"Water goal must be non-negative\"; // Assertion for water goal","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"        assert date !\u003d null \u0026\u0026 !date.isEmpty() : \"Date cannot be null or empty\"; // Assertion for date","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"        assert time !\u003d null \u0026\u0026 !time.isEmpty() : \"Time cannot be null or empty\"; // Assertion for time","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"        this.waterGoal \u003d waterGoal;","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"    public void execute() {","lastModifiedDate":"2024-04-08"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogGoals logWaterGoal \u003d new LogGoals(\"Water\", waterGoal, date, time);","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        logList.add(logWaterGoal);","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Add logic to save water goal to log list","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":26,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"pradeep-cod":17,"alvinnnnnnnnnn":10}},{"path":"src/main/java/command/AddWeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package command;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.LogWeight;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.userdetails.UserDetailsList.detailsList;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class AddWeightCommand {","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected Integer weight;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public AddWeightCommand(Integer weight, String date, String time) {","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public void execute() throws ActiveEdgeException {","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogWeight logWeight \u003d new LogWeight(weight, date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        detailsList.add(logWeight);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"alvinnnnnnnnnn":22,"nikhil-2101":1}},{"path":"src/main/java/command/ChangeCalorieGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Praneet-25"},"content":"package command;","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.Log;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogList;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"Praneet-25"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"Praneet-25"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"Praneet-25"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"Praneet-25"},"content":"import static activeedge.log.LogList.logList;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"Praneet-25"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"Praneet-25"},"content":" * Represents a command to change the user\u0027s daily calorie goal.","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"Praneet-25"},"content":" * This command prompts the user to input a new calorie goal and validates","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"Praneet-25"},"content":" * the input before updating the log list and executing the necessary actions.","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"Praneet-25"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"public class ChangeCalorieGoalCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"Praneet-25"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"Praneet-25"},"content":"     * Executes the command to change the user\u0027s daily calorie goal.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"Praneet-25"},"content":"     * Prompts the user to input a new calorie goal, validates the input,","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"Praneet-25"},"content":"     * and updates the log list accordingly. It then executes the","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"Praneet-25"},"content":"     * AddCalorieGoalCommand to save the new goal and logs the change.","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"Praneet-25"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"Praneet-25"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"Praneet-25"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"Praneet-25"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"Praneet-25"},"content":"        String date \u003d currentDateTime.format(dateFormatter);","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"Praneet-25"},"content":"        String time \u003d currentDateTime.format(timeFormatter);","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (int i \u003d 0; i \u003c logList.size(); i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            Log logList \u003d LogList.logList.get(i);","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (logList.toString().startsWith(\"Goal Calorie\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                LogList.delete(i);","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"pradeep-cod"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"Praneet-25"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"Praneet-25"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"Praneet-25"},"content":"        int newCalorieGoal \u003d 0;","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"Praneet-25"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"Praneet-25"},"content":"        while (i \u003c 1) {","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"pradeep-cod"},"content":"            System.out.println(\"Please input your new daily calorie goal: \");","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"Praneet-25"},"content":"            try {","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"Praneet-25"},"content":"                newCalorieGoal \u003d Integer.parseInt(scanner.nextLine());","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"Praneet-25"},"content":"                if (newCalorieGoal \u003e\u003d 1 \u0026\u0026 newCalorieGoal \u003c\u003d 10000) {","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"Praneet-25"},"content":"                    AddCalorieGoalCommand addCalorieGoalCommand \u003d new","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"Praneet-25"},"content":"                            AddCalorieGoalCommand(newCalorieGoal, date, time);","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"Praneet-25"},"content":"                    addCalorieGoalCommand.execute();","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"pradeep-cod"},"content":"                    System.out.println(\"You have successfully changed your calorie goal! \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"pradeep-cod"},"content":"                            \"You can continue to log your data!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"Praneet-25"},"content":"                    i++;","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"Praneet-25"},"content":"                } else {","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"pradeep-cod"},"content":"                    System.out.println(\"Please input a positive integer between 1 and 10000!\");","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"Praneet-25"},"content":"                }","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"Praneet-25"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"pradeep-cod"},"content":"                System.out.println(\"Please input a positive integer between 1 and 10000!\");","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"Praneet-25"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"Praneet-25"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":63,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":64,"author":{"gitId":"Praneet-25"},"content":"}","lastModifiedDate":"2024-04-11"},{"lineNumber":65,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"Praneet-25":52,"pradeep-cod":6,"alvinnnnnnnnnn":6,"nikhil-2101":2}},{"path":"src/main/java/command/ChangeHeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package command;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.UserDetails;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.UserDetailsList;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.userdetails.UserDetailsList.detailsList;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"public class ChangeHeightCommand extends Command{","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String date \u003d currentDateTime.format(dateFormatter);","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String time \u003d currentDateTime.format(timeFormatter);","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (int i \u003d 0; i \u003c detailsList.size(); i++) {","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            UserDetails userDetails \u003d UserDetailsList.detailsList.get(i);","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (userDetails.toString().startsWith(\"Height\")) {","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                UserDetailsList.delete(i);","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (detailsList.get(i).toString().startsWith(\"BMI\")) {","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                UserDetailsList.delete(i);","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int newHeight \u003d 0;","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        while (i \u003c 1) {","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"pradeep-cod"},"content":"            System.out.println(\"Please input your new height (in cm): \");","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            try {","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                newHeight \u003d Integer.parseInt(scanner.nextLine());","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                if (newHeight \u003e\u003d 50 \u0026\u0026 newHeight \u003c\u003d 300) {","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    AddHeightCommand addHeightCommand \u003d new","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            AddHeightCommand(newHeight, date, time);","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    addHeightCommand.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    int weight \u003d GetWeightCommand.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    AddBMICommand addBMICommand \u003d new AddBMICommand(newHeight, weight, date, time);","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    addBMICommand.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"pradeep-cod"},"content":"                    System.out.println(\"You have successfully changed your height! \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"pradeep-cod"},"content":"                            \"You can continue to log your data!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    i++;","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"pradeep-cod"},"content":"                    System.out.println(\"Please input a positive integer  between 50 and 300!\");","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"            } catch (NumberFormatException | ActiveEdgeException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"pradeep-cod"},"content":"                System.out.println(\"Please input a positive integer  between 50 and 300!\");","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"pradeep-cod":5,"alvinnnnnnnnnn":49,"nikhil-2101":3}},{"path":"src/main/java/command/ChangeWaterGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pradeep-cod"},"content":"package command;","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.Log;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogList;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.log.LogList.logList;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"/**","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":" * The ChangeWaterGoalCommand class represents a command to change the user\u0027s daily water goal.","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":" * It prompts the user to set a new water goal and updates it in the task list.","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":" */","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"public class ChangeWaterGoalCommand extends Command{","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"     * Executes the command to change the user\u0027s daily water goal.","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"     * Prompts the user to set a new water goal and updates it in the task list.","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"pradeep-cod"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"pradeep-cod"},"content":"     * @throws ActiveEdgeException if an error occurs during the execution of the command.","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"pradeep-cod"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"        String date \u003d currentDateTime.format(dateFormatter);","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"pradeep-cod"},"content":"        String time \u003d currentDateTime.format(timeFormatter);","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Remove existing water goal log","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (int i \u003d 0; i \u003c logList.size(); i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            Log logList \u003d LogList.logList.get(i);","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (logList.toString().startsWith(\"Goal Water\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                LogList.delete(i);","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"pradeep-cod"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"pradeep-cod"},"content":"        int waterGoal \u003d 0;","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"pradeep-cod"},"content":"        int l \u003d 0;","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"pradeep-cod"},"content":"        while (l \u003c 1) {","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"pradeep-cod"},"content":"            System.out.println(\"Please set your new daily water goal (in ml): \");","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"pradeep-cod"},"content":"            try {","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"pradeep-cod"},"content":"                waterGoal \u003d Integer.parseInt(scanner.nextLine());","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"pradeep-cod"},"content":"                if (waterGoal \u003e\u003d 1 \u0026\u0026 waterGoal \u003c\u003d 6000) {","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"pradeep-cod"},"content":"                    AddWaterGoalCommand addWaterGoalCommand \u003d new AddWaterGoalCommand(waterGoal, date, time);","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"pradeep-cod"},"content":"                    addWaterGoalCommand.execute();","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"pradeep-cod"},"content":"                    System.out.println(\"You have successfully changed your water goal! \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"pradeep-cod"},"content":"                            \"You can continue to log your data!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"pradeep-cod"},"content":"                    l++;","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"pradeep-cod"},"content":"                } else {","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"pradeep-cod"},"content":"                    System.out.println(\"Please input a positive integer between 1 and 6000!\");","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"pradeep-cod"},"content":"                }","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"pradeep-cod"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"pradeep-cod"},"content":"                System.out.println(\"Please input a positive integer between 1 and 6000!\");","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"pradeep-cod"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"pradeep-cod":51,"alvinnnnnnnnnn":9,"nikhil-2101":2}},{"path":"src/main/java/command/ChangeWeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package command;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.UserDetails;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.UserDetailsList;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.userdetails.UserDetailsList.detailsList;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"public class ChangeWeightCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String date \u003d currentDateTime.format(dateFormatter);","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String time \u003d currentDateTime.format(timeFormatter);","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (int i \u003d 0; i \u003c detailsList.size(); i++) {","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            UserDetails userDetails \u003d UserDetailsList.detailsList.get(i);","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (userDetails.toString().startsWith(\"Weight\")) {","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                UserDetailsList.delete(i);","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (detailsList.get(i).toString().startsWith(\"BMI\")) {","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                UserDetailsList.delete(i);","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int newWeight \u003d 0;","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        while(i \u003c 1) {","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"            System.out.println(\"Please input your new weight (in kg): \");","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            try {","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                newWeight \u003d Integer.parseInt(scanner.nextLine());","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                if (newWeight \u003e\u003d 1 \u0026\u0026 newWeight \u003c\u003d 700) {","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    AddWeightCommand addWeightCommand \u003d new","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            AddWeightCommand(newWeight, date, time);","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    addWeightCommand.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    int height \u003d GetHeightCommand.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    AddBMICommand addBMICommand \u003d new AddBMICommand(height, newWeight, date, time);","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    addBMICommand.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"pradeep-cod"},"content":"                    System.out.println(\"You have successfully changed your weight! \" +","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"pradeep-cod"},"content":"                            \"You can continue to log your data!\");","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    i++;","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"pradeep-cod"},"content":"                    System.out.println(\"Please input a positive integer between 1 and 700!\");","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"nikhil-2101"},"content":"            } catch (NumberFormatException | ActiveEdgeException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"pradeep-cod"},"content":"                System.out.println(\"Please input a positive integer between 1 and 700!\");","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"pradeep-cod":5,"alvinnnnnnnnnn":51,"nikhil-2101":3}},{"path":"src/main/java/command/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pradeep-cod"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":" * The ClearCommand class represents a command to clear all tasks and user details in the system.","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":" * It provides functionality to execute the command.","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"package command;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.Storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogList;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"import activeedge.userdetails.UserDetailsList;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":" * The ClearCommand class represents a command to clear all tasks and user details in the system.","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":" * It provides functionality to execute the command.","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"public class ClearCommand extends Command{","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"     * Constructs a ClearCommand object.","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"     * This constructor requires no input.","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"pradeep-cod"},"content":"    public ClearCommand() {","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"pradeep-cod"},"content":"        // No input needed for this command","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"     * Executes the clear command.","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"     * Checks if both task list and user details list are empty.","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"     * If both lists are already empty, it prints a message indicating the data is already cleared.","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"pradeep-cod"},"content":"     * Otherwise, it clears both lists and prints a message indicating that all tasks are cleared.","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"pradeep-cod"},"content":"    public void execute() {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (LogList.logList.isEmpty() \u0026\u0026 UserDetailsList.detailsList.isEmpty()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"            CommandUi.printDataAlreadyClearedMessage();","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"pradeep-cod"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            LogList.clearLogs();","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"            UserDetailsList.clearDetailsList();","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            CommandUi.printAllLogsClearedMessage();","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            Storage.listEmpty();","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"pradeep-cod":36,"alvinnnnnnnnnn":6,"nikhil-2101":1}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package command;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"public abstract class Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"    public abstract void execute();","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"nikhil-2101":5}},{"path":"src/main/java/command/DeleteLogCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package command;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.Log;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogList;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogWater;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"public class DeleteLogCommand extends Command{","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"    private String description;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"    private int index;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"    private boolean errorRaised;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"    public DeleteLogCommand(String inputTrimmed) {","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"        String[] parts \u003d inputTrimmed.trim().split(\"\\\\s+\", 2); // Split at the first space","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"        String[] indexParts;","lastModifiedDate":"2024-04-08"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"        this.errorRaised \u003d false;","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"        if(parts.length \u003d\u003d 2){","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"            if(parts[1].contains(\"i/\")){","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"                indexParts \u003d parts[1].trim().split(\"i/\");","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"                this.index \u003d Integer.parseInt(indexParts[1].trim());","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"                this.description \u003d indexParts[0].trim().replaceAll(\"(?\u003c\u003d\\\\d)\\\\s+\", \"\");","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"                if(index \u003c\u003d 0){","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"                    CommandUi.printInvalidItemIndexMessage();","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"SuveenE"},"content":"                    this.errorRaised \u003d true;","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"SuveenE"},"content":"                }","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"            } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"SuveenE"},"content":"                //If no index to be deleted is passed, 1 is considered as the index.","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"SuveenE"},"content":"                this.index \u003d 1;","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"                this.description \u003d parts[1].trim().replaceAll(\"(?\u003c\u003d\\\\d)\\\\s+\", \"\");","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"SuveenE"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"        } else {","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"            CommandUi.printInvalidDeleteFormatMessage();","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"SuveenE"},"content":"            this.errorRaised \u003d true;","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Search for the log with the specified description","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        boolean logFound \u003d false;","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"SuveenE"},"content":"        int countIndex \u003d 0;","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (int i \u003d 0; i \u003c LogList.logList.size(); i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            Log log \u003d LogList.logList.get(i);","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (log.getDescription().toLowerCase().startsWith(\"water\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                if (log instanceof LogWater) { // Check if it\u0027s a WaterLog before casting","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    LogWater logWater \u003d (LogWater) log;","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    if (((logWater.getQuantity()) + \"ml\").equalsIgnoreCase(description)) {","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"SuveenE"},"content":"                        countIndex \u003d countIndex + 1;","lastModifiedDate":"2024-04-08"},{"lineNumber":49,"author":{"gitId":"SuveenE"},"content":"                        if(countIndex \u003d\u003d index){","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            Log deletedLog \u003d LogList.delete(i);","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            CommandUi.printLogDeletedMessage(deletedLog);","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                            logFound \u003d true;","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"nikhil-2101"},"content":"                            break;","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"nikhil-2101"},"content":"                        }","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"                    }","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"SuveenE"},"content":"                }","lastModifiedDate":"2024-04-08"},{"lineNumber":57,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } else if (log.getDescription().equalsIgnoreCase(description)) {","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"SuveenE"},"content":"                countIndex \u003d countIndex + 1;","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"SuveenE"},"content":"                if (countIndex \u003d\u003d index){","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    Log deletedLog \u003d LogList.delete(i);","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    CommandUi.printLogDeletedMessage(deletedLog);","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    logFound \u003d true;","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"nikhil-2101"},"content":"                    break;","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"SuveenE"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":67,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":68,"author":{"gitId":"SuveenE"},"content":"        if(index \u003e countIndex){","lastModifiedDate":"2024-04-08"},{"lineNumber":69,"author":{"gitId":"SuveenE"},"content":"            CommandUi.printDeleteMealInvalidIndexMessage();","lastModifiedDate":"2024-04-08"},{"lineNumber":70,"author":{"gitId":"nikhil-2101"},"content":"            errorRaised \u003d true;","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"SuveenE"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":72,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        if (!logFound \u0026\u0026 !errorRaised) {","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            CommandUi.printLogNotFoundMessage();","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"alvinnnnnnnnnn":20,"nikhil-2101":28,"SuveenE":28}},{"path":"src/main/java/command/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pradeep-cod"},"content":"package command;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"pradeep-cod"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"    private String input;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"        if(input.trim().length() \u003e 4){","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"            String word \u003d input.split(\" \")[1];","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            CommandUi.printMatchingLog(word);","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"        } else {","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            System.out.println(LINE +\"Oh no! You are missing the keyword you want to search for!\\n\" + LINE);","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"pradeep-cod":10,"alvinnnnnnnnnn":4,"nikhil-2101":6}},{"path":"src/main/java/command/GetHeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package command;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.UserDetails;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.userdetails.UserDetailsList.detailsList;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class GetHeightCommand{","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static int execute() {","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int height \u003d 0;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (UserDetails userDetails : detailsList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            String heightString \u003d userDetails.toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (heightString.startsWith(\"Height\")) {","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                String[] items \u003d heightString.split(\" \");","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                height \u003d Integer.parseInt(items[1]);","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return height;","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"alvinnnnnnnnnn":19}},{"path":"src/main/java/command/GetWeightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"alvinnnnnnnnnn"},"content":"package command;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.userdetails.UserDetails;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.userdetails.UserDetailsList.detailsList;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class GetWeightCommand {","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public static int execute() {","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int weight \u003d 0;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (UserDetails details : detailsList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            String weightString \u003d details.toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (weightString.startsWith(\"Weight\")){","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                String[] items \u003d weightString.split(\" \");","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                weight \u003d Integer.parseInt(items[1]);","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"                //System.out.println(\"Weight: \" + weight + \" kg\");","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        return weight;","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"alvinnnnnnnnnn":20,"nikhil-2101":1}},{"path":"src/main/java/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"import activeedge.ui.HelpUi;","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"public class HelpCommand extends Command{","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"        HelpUi.printHelpMessage();","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"nikhil-2101":4,"SuveenE":6}},{"path":"src/main/java/command/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package command;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"    private String errorMessage;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"nikhil-2101":13}},{"path":"src/main/java/command/ListFullCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"public class ListFullCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    public void execute(){","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        CommandUi.printFullList();","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"alvinnnnnnnnnn":4,"nikhil-2101":3,"SuveenE":2}},{"path":"src/main/java/command/LogExerciseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogExercise;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.log.LogList.logList;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":" * Represents a command to log exercise activities into the system.","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":" * It stores information about an exercise, including its name, duration, and","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":" * the total amount of calories burnt by doing the exercise.","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"public class LogExerciseCommand extends Command{","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"    protected String exerciseName; // The name of the exercise","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"    protected int duration; // The duration of the exercise in minutes","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"    protected int caloriesBurnt; // The total number of calories burnt during the exercise","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String date; // The date when the exercise was performed","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String time; // The time when the exercise was performed","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"    protected boolean isItemPresentInExerciseData; // Indicates if the exercise is present in the system\u0027s data","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"pradeep-cod"},"content":"     * Constructs a LogExerciseCommand with the specified exercise details.","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"pradeep-cod"},"content":"     * @param exerciseName The name of the exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"     * @param duration The duration of the exercise in minutes.","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"pradeep-cod"},"content":"     * @param caloriesBurnt The total number of calories burnt during the exercise.","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * @param date The date when the exercise was performed.","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"     * @param time The time when the exercise was performed.","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"     * @param isItemPresentInExerciseData Indicates if the exercise is present in the system\u0027s data.","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public LogExerciseCommand(String exerciseName, int duration, int caloriesBurnt, String date, String time,","lastModifiedDate":"2024-04-09"},{"lineNumber":31,"author":{"gitId":"pradeep-cod"},"content":"                              boolean isItemPresentInExerciseData) {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"SuveenE"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"SuveenE"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"SuveenE"},"content":"        this.caloriesBurnt \u003d caloriesBurnt;","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"        this.isItemPresentInExerciseData \u003d isItemPresentInExerciseData;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"SuveenE"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"SuveenE"},"content":"     * Executes the exercise logging command.","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"pradeep-cod"},"content":"     * It creates a new ExerciseTask with the exercise details and adds it to","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"SuveenE"},"content":"     * the system\u0027s task list. After logging the exercise, it displays a confirmation message.","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"pradeep-cod"},"content":"     * @throws ActiveEdgeException if any error occurs during the execution process.","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"SuveenE"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"pradeep-cod"},"content":"        if (isItemPresentInExerciseData){","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            LogExercise logExercise \u003d new LogExercise(exerciseName, duration, caloriesBurnt, date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            logList.add(logExercise);","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"SuveenE"},"content":"            CommandUi.printExerciseLogMessage(logExercise);","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"pradeep-cod"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"SuveenE"},"content":"            CommandUi.printExerciseItemNotFoundMessage(exerciseName, duration);","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"pradeep-cod":21,"alvinnnnnnnnnn":12,"nikhil-2101":3,"SuveenE":21}},{"path":"src/main/java/command/LogMealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.Log;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogGoals;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogList;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogMeal;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.log.LogList.logList;","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"public class LogMealCommand extends Command{","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String description;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"    protected int servings;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"    protected int mealCalories;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    protected String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"    protected boolean isItemPresentInFoodData;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public LogMealCommand(String description, int servings, int mealCalories, String date, String time,","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"                          boolean isItemPresentInFoodData) {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.servings \u003d servings;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"        this.mealCalories \u003d mealCalories;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"SuveenE"},"content":"        this.isItemPresentInFoodData \u003d isItemPresentInFoodData;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-08"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"        try {","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"            int calorieGoal \u003d getCalorieGoal();","lastModifiedDate":"2024-04-09"},{"lineNumber":32,"author":{"gitId":"SuveenE"},"content":"            if (isItemPresentInFoodData) {","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                LogMeal logMeal \u003d new LogMeal(description, servings, mealCalories, date, time);","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"                int totalCaloriesConsumed \u003d calculateTotalCaloriesConsumed() + mealCalories;","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                logList.add(logMeal);","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"SuveenE"},"content":"                CommandUi.printMealLogMessage(logMeal);","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"                if (totalCaloriesConsumed \u003e calorieGoal) {","lastModifiedDate":"2024-04-09"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"                    CommandUi.printCalorieExceedingWarning();","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"SuveenE"},"content":"            } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"SuveenE"},"content":"                CommandUi.printFoodItemNotFoundMessage(description, servings);","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"SuveenE"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"        } catch(Exception e){","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"            CommandUi.printErrorMessage(\"An error occurred while logging the meal: \" + e.getMessage());","lastModifiedDate":"2024-04-08"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"SuveenE"},"content":"    public int getMealCalories() {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"SuveenE"},"content":"        return mealCalories;","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"SuveenE"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"SuveenE"},"content":"        return description;","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"SuveenE"},"content":"    public int getServings() {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"SuveenE"},"content":"        return servings;","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":62,"author":{"gitId":"nikhil-2101"},"content":"    private int getCalorieGoal() {","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (Log log : LogList.logList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (log instanceof LogGoals \u0026\u0026 log.getDescription().startsWith(\"Calorie\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                return ((LogGoals) log).getGoalAmount();","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":67,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":68,"author":{"gitId":"nikhil-2101"},"content":"        return 0;","lastModifiedDate":"2024-04-11"},{"lineNumber":69,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":70,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":71,"author":{"gitId":"nikhil-2101"},"content":"    private int calculateTotalCaloriesConsumed() {","lastModifiedDate":"2024-04-08"},{"lineNumber":72,"author":{"gitId":"nikhil-2101"},"content":"        int totalCaloriesConsumed \u003d 0;","lastModifiedDate":"2024-04-08"},{"lineNumber":73,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (Log log : logList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (log instanceof LogMeal) {","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                totalCaloriesConsumed +\u003d ((LogMeal) log).getMealCalories();","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":77,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":78,"author":{"gitId":"nikhil-2101"},"content":"        return totalCaloriesConsumed;","lastModifiedDate":"2024-04-08"},{"lineNumber":79,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":80,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"alvinnnnnnnnnn":29,"nikhil-2101":26,"SuveenE":25}},{"path":"src/main/java/command/LogWaterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"import activeedge.log.Log;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"import activeedge.log.LogGoals;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"import activeedge.log.LogList;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"import activeedge.log.LogWater;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"import static activeedge.log.LogList.logList;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":" * Represents a command to log water intake.","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"public class LogWaterCommand extends Command{","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"    private String quantityString;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String date;","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    private String time;","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"     * Constructs a LogWaterCommand object with the specified quantity string.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"     * @param quantityString The string representing the quantity of water to log.","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public LogWaterCommand(String quantityString, String date, String time) {","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"        this.quantityString \u003d quantityString;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"nikhil-2101"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"nikhil-2101"},"content":"     * Executes the command to log water intake.","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Praneet-25"},"content":"    public void execute() {","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Praneet-25"},"content":"        int quantity \u003d 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"nikhil-2101"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Praneet-25"},"content":"            quantity \u003d Integer.parseInt(quantityString);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"nikhil-2101"},"content":"            //@@author nikhil-2101","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"            //assert quantity \u003e\u003d 0;","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"            if (quantity \u003c\u003d 0) {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"                System.out.println(\"Water quantity must be above 0. Please try again.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"nikhil-2101"},"content":"            } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"nikhil-2101"},"content":"                LogWater logWater \u003d new LogWater(quantity, date, time);","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"                LogList.logList.add(logWater);","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"                CommandUi.printWaterLogMessage(logWater);","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"                int totalWaterIntake \u003d calculateTotalWaterIntake() + quantity;","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"                int dailyWaterIntakeGoal \u003d getWaterGoal();","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"nikhil-2101"},"content":"                if (totalWaterIntake \u003e dailyWaterIntakeGoal) {","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"nikhil-2101"},"content":"                    CommandUi.printWaterIntakeExceedingWarning();","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"nikhil-2101"},"content":"                }","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"nikhil-2101"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"nikhil-2101"},"content":"            System.out.println(\"Invalid water quantity. Please provide a valid integer.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"nikhil-2101"},"content":"    private int getWaterGoal() {","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"nikhil-2101"},"content":"        for (Log log : LogList.logList) {","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"nikhil-2101"},"content":"            if (log instanceof LogGoals \u0026\u0026 log.getDescription().startsWith(\"Water\")) {","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"nikhil-2101"},"content":"                return ((LogGoals) log).getGoalAmount();","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"nikhil-2101"},"content":"        return 0;","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"nikhil-2101"},"content":"    private int calculateTotalWaterIntake() {","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"nikhil-2101"},"content":"        int totalWaterIntake \u003d 0;","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"nikhil-2101"},"content":"        for (Log log : logList) {","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"nikhil-2101"},"content":"            if (log instanceof LogWater) {","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"nikhil-2101"},"content":"                totalWaterIntake +\u003d ((LogWater) log).getQuantity();","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"nikhil-2101"},"content":"        return totalWaterIntake;","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Praneet-25":3,"alvinnnnnnnnnn":5,"nikhil-2101":59,"SuveenE":8}},{"path":"src/main/java/command/PrintExercisesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package command;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"import activeedge.ExerciseData;","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"public class PrintExercisesCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"        ExerciseData.printExercises();","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"nikhil-2101":9}},{"path":"src/main/java/command/PrintFoodCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikhil-2101"},"content":"package command;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"import activeedge.FoodData;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"public class PrintFoodCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"    @Override","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"        FoodData.printFood();","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"nikhil-2101":10}},{"path":"src/main/java/command/ShowCaloriesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"public class ShowCaloriesCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        CommandUi.printShowCalMessage();","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"alvinnnnnnnnnn":5,"nikhil-2101":3,"SuveenE":2}},{"path":"src/main/java/command/ShowGoalsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.Log;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogGoals;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogList;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"import activeedge.ui.GoalsUi;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":" * The ShowGoalsCommand class represents a command to display the current goals set by the user.","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":" * It retrieves the calorie and water goals from the TaskList and prints them using the GoalsUi.","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"public class ShowGoalsCommand extends Command{","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"     * Executes the command by iterating through the list of tasks,","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"     * retrieving the calorie and water goals, and printing them using GoalsUi.","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"    public void execute() {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"        int calorieGoal \u003d 0; // The calorie goal set by the user","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"        int waterGoal \u003d 0; // The water goal set by the user","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Iterate through the list of logs","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (Log log : LogList.logList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            // Check if the log is an instance of LogGoals","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (log instanceof LogGoals) {","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                LogGoals logGoals \u003d (LogGoals) log; // Cast Log to LogGoals","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"                // Check if the goal is related to calories","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                if (logGoals.getDescription().startsWith(\"Calorie\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    calorieGoal \u003d logGoals.getGoalAmount(); // Retrieve calorie goal","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                } else if (logGoals.getDescription().startsWith(\"Water\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                    waterGoal \u003d logGoals.getGoalAmount(); // Retrieve water goal","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"pradeep-cod"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"            }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"        // Print the goals using GoalsUi","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"pradeep-cod"},"content":"        GoalsUi.printShowGoalsMessage(calorieGoal, waterGoal);","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"pradeep-cod":25,"alvinnnnnnnnnn":13,"nikhil-2101":1,"SuveenE":2}},{"path":"src/main/java/command/ShowSummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Praneet-25"},"content":"package command;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.Log;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"pradeep-cod"},"content":"import activeedge.userdetails.UserDetails;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"Praneet-25"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import static activeedge.log.LogList.logList;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"import static activeedge.userdetails.UserDetailsList.detailsList;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"public class ShowSummaryCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"Praneet-25"},"content":"    public void execute() {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Praneet-25"},"content":"        int totalCalories \u003d 0;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Praneet-25"},"content":"        int totalWaterIntake \u003d 0;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Praneet-25"},"content":"        int totalCaloriesBurnt \u003d 0;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"        int height \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"        int weight \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"        int BMI \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Praneet-25"},"content":"        String calorieGoal \u003d \"0\";","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Praneet-25"},"content":"        String waterGoal \u003d \"0\";","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (Log log : logList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (log.toString().startsWith(\"Meal\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                String[] parts \u003d log.toString().split(\"\\\\s*\\\\|\\\\s*|\\\\s+\");","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                totalCalories +\u003d Integer.parseInt(parts[parts.length - 6]);","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } else if (log.toString().startsWith(\"Water\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                String[] parts \u003d log.toString().split(\"\\\\s*\\\\|\\\\s*|\\\\s+\");","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                totalWaterIntake +\u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } else if (log.toString().startsWith(\"Exercise\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                String[] parts \u003d log.toString().split(\"\\\\s*\\\\|\\\\s*|\\\\s+\");","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                totalCaloriesBurnt +\u003d Integer.parseInt(parts[parts.length - 6]);","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            } else if (log.toString().startsWith(\"Goal\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                String[] parts \u003d log.toString().split(\" \");","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"pradeep-cod"},"content":"                if (parts[1].equals(\"Calorie\")) {","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"Praneet-25"},"content":"                    calorieGoal \u003d parts[2];","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"pradeep-cod"},"content":"                } else if (parts[1].equals(\"Water\")) {","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"Praneet-25"},"content":"                    waterGoal \u003d parts[2];","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Praneet-25"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Praneet-25"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Praneet-25"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"pradeep-cod"},"content":"        for (UserDetails userdetails : detailsList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"pradeep-cod"},"content":"            if (userdetails.toString().startsWith(\"Height\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"pradeep-cod"},"content":"                String[] parts \u003d userdetails.toString().split(\" \");","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"pradeep-cod"},"content":"                height \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"pradeep-cod"},"content":"            } else if (userdetails.toString().startsWith(\"Weight\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"pradeep-cod"},"content":"                String[] parts \u003d userdetails.toString().split(\" \");","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"pradeep-cod"},"content":"                weight \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"pradeep-cod"},"content":"            } else if (userdetails.toString().startsWith(\"BMI\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"pradeep-cod"},"content":"                String[] parts \u003d userdetails.toString().split(\" \");","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"pradeep-cod"},"content":"                BMI \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"pradeep-cod"},"content":"            }","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"Praneet-25"},"content":"        int netCalories \u003d totalCalories - totalCaloriesBurnt;","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"Praneet-25"},"content":"        String calorieStatus \u003d calculateCalorieStatus(netCalories, Integer.parseInt(calorieGoal));","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"pradeep-cod"},"content":"        CommandUi.printShowSummaryMessage(height, weight, BMI, totalCalories,totalWaterIntake, totalCaloriesBurnt,","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"Praneet-25"},"content":"                calorieGoal,waterGoal,netCalories, calorieStatus);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"Praneet-25"},"content":"    private String calculateCalorieStatus(int netCalories, int calorieGoal) {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"Praneet-25"},"content":"        if (netCalories \u003e calorieGoal) {","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"Praneet-25"},"content":"            return \"Calories Surplus\";","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"Praneet-25"},"content":"        } else if (netCalories \u003c calorieGoal) {","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"Praneet-25"},"content":"            return \"Calories Deficit\";","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"Praneet-25"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"Praneet-25"},"content":"            return \"Maintenance\";","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"Praneet-25"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Praneet-25"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Praneet-25":34,"pradeep-cod":21,"alvinnnnnnnnnn":14,"nikhil-2101":1}},{"path":"src/main/java/command/ViewWaterIntakeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.Log;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogGoals;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogList;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogWater;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"import activeedge.ui.CommandUi;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"public class ViewWaterIntakeCommand extends Command {","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"    public void execute() {","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int totalWaterIntake \u003d getTotalWaterIntake(LogList.logList);","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int waterGoal \u003d getWaterGoal(LogList.logList);","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"        CommandUi.printWaterIntakeMessage(totalWaterIntake, waterGoal);","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    int getTotalWaterIntake(ArrayList\u003cLog\u003e logList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"        int totalWaterIntake \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (Log log : logList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (log instanceof LogWater) {","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                totalWaterIntake +\u003d ((LogWater) log).getQuantity();","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"        return totalWaterIntake;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public int getWaterGoal(ArrayList\u003cLog\u003e logList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        for (Log log : logList) {","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"            if (log instanceof LogGoals \u0026\u0026 log.getDescription().startsWith(\"Water\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"                return ((LogGoals) log).getGoalAmount();","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"pradeep-cod"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"pradeep-cod"},"content":"        return 0; // Default to 0 if no water goal is found","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"pradeep-cod":8,"alvinnnnnnnnnn":14,"nikhil-2101":14,"SuveenE":2}},{"path":"src/test/java/FoodDataTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Praneet-25"},"content":"import activeedge.FoodData;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Praneet-25"},"content":"public class FoodDataTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Praneet-25"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Praneet-25"},"content":"        testFoodItemsValidity();","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Praneet-25"},"content":"        testAppendItem();","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"Praneet-25"},"content":"    public static void testFoodItemsValidity() {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"Praneet-25"},"content":"        System.out.println(\"Testing food items validity...\");","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Praneet-25"},"content":"        FoodData.printFood();","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Praneet-25"},"content":"    public static void testAppendItem() {","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"Praneet-25"},"content":"        System.out.println(\"Testing appendItem method...\");","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Praneet-25"},"content":"        // Create a new item to append","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Praneet-25"},"content":"        String[] newItem \u003d {\"new food item\", \"300\"};","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Praneet-25"},"content":"        // Append the new item to the foodItems array","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"Praneet-25"},"content":"        FoodData.foodItems \u003d FoodData.appendItem(FoodData.foodItems, newItem);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"Praneet-25"},"content":"        // Print the updated food items array","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"Praneet-25"},"content":"        System.out.println(\"Updated Food Items:\");","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"Praneet-25"},"content":"        for (String[] foodItem : FoodData.foodItems) {","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"Praneet-25"},"content":"            System.out.println(\"Food Name: \" + foodItem[0]);","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"Praneet-25"},"content":"            System.out.println(\"Calories: \" + foodItem[1]);","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"Praneet-25"},"content":"            System.out.println(); // Empty line for readability","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"Praneet-25"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Praneet-25"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Praneet-25":33}},{"path":"src/test/java/command/AddNewExerciseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"public class AddNewExerciseTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"    public void testAddNewMeal() {","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"        String date \u003d dateTime.format(dateFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"        String time \u003d dateTime.format(timeFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"        AddExerciseItemCommand addExerciseItemCommand \u003d new AddExerciseItemCommand(\"Sky diving\", 30, 15, date, time);","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"        assertEquals(\"Sky diving\", addExerciseItemCommand.getExerciseName());","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"        assertEquals(30, addExerciseItemCommand.getDuration());","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"        assertEquals(15, addExerciseItemCommand.getCaloriesBurntPerMinute());","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"SuveenE":23}},{"path":"src/test/java/command/AddNewMealTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"SuveenE"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"public class AddNewMealTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"    public void testAddNewMeal() {","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"        String date \u003d dateTime.format(dateFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"        String time \u003d dateTime.format(timeFormatter);","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"        AddFoodItemCommand addFoodItemCommand \u003d new AddFoodItemCommand(\"Banana Cake\", 3, 450, date, time);","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"        assertEquals(\"Banana Cake\", addFoodItemCommand.getDescription());","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"        assertEquals(3, addFoodItemCommand.getServings());","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"        assertEquals(450, addFoodItemCommand.getCaloriesPerSaving());","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"SuveenE":24}},{"path":"src/test/java/command/LogExerciseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"SuveenE"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":" * This class tests the functionality of the LogExerciseCommand class.","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"public class LogExerciseTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"     *  The test case focuses on ensuring that the exercise name, duration, and calories burnt are set as expected.","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"    void testInitialization() {","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String date \u003d dateTime.format(dateFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String time \u003d dateTime.format(timeFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogExerciseCommand logExerciseCommand \u003d new LogExerciseCommand(\"running\", 30, 30, date, time, true);","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"SuveenE"},"content":"        assertEquals(\"running\", logExerciseCommand.exerciseName);","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"SuveenE"},"content":"        assertEquals(30, logExerciseCommand.duration);","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"SuveenE"},"content":"        assertEquals(30, logExerciseCommand.caloriesBurnt);","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"SuveenE"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"alvinnnnnnnnnn":7,"SuveenE":24}},{"path":"src/test/java/command/LogMealTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"SuveenE"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"SuveenE"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"alvinnnnnnnnnn"},"content":"//@@author alvinnnnnnnnnn","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"public class LogMealTest {","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    public void testToString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String date \u003d dateTime.format(dateFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String time \u003d dateTime.format(timeFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogMealCommand logMealCommand \u003d new LogMealCommand(\"Sushi\", 3, 1050, date, time, true);","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        assertEquals(\"Sushi\", logMealCommand.getDescription());","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        assertEquals(3, logMealCommand.getServings());","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        assertEquals(1050, logMealCommand.getMealCalories());","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"alvinnnnnnnnnn"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"alvinnnnnnnnnn"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"alvinnnnnnnnnn":16,"nikhil-2101":2,"SuveenE":5}},{"path":"src/test/java/command/LogWaterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"SuveenE"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"public class LogWaterCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"SuveenE"},"content":"    void testValidQuantity() {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String date \u003d dateTime.format(dateFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String time \u003d dateTime.format(timeFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogWaterCommand logWaterCommand \u003d new LogWaterCommand(\"500\", date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"        assertDoesNotThrow(logWaterCommand::execute);","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"    void testInvalidQuantity() {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String date \u003d dateTime.format(dateFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String time \u003d dateTime.format(timeFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogWaterCommand logWaterCommand \u003d new LogWaterCommand(\"abc\", date, time);","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"Praneet-25"},"content":"        //ActiveEdgeException exception \u003d assertThrows(ActiveEdgeException.class, logWaterCommand::execute);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"Praneet-25"},"content":"        System.out.println(\"Invalid water quantity. \" +","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Praneet-25"},"content":"                \"Please provide a valid integer.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Praneet-25":3,"alvinnnnnnnnnn":11,"nikhil-2101":15,"SuveenE":5}},{"path":"src/test/java/command/ShowGoalsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pradeep-cod"},"content":"package command;","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogGoals;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogList;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"pradeep-cod"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"pradeep-cod"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"pradeep-cod"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"pradeep-cod"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"pradeep-cod"},"content":"public class ShowGoalsTest {","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"pradeep-cod"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"pradeep-cod"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"pradeep-cod"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"pradeep-cod"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"pradeep-cod"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"pradeep-cod"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"pradeep-cod"},"content":"    public void testExecute_noGoalsSet() {","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Clear the log list before the test","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogList.clearLogs();","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"pradeep-cod"},"content":"        // Create an instance of ShowGoalsCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"pradeep-cod"},"content":"        ShowGoalsCommand showGoalsCommand \u003d new ShowGoalsCommand();","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"pradeep-cod"},"content":"        // Execute the command","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"pradeep-cod"},"content":"        showGoalsCommand.execute();","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"pradeep-cod"},"content":"        // Assert that the output matches the expected message when no goals are set","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"SuveenE"},"content":"        assertEquals(\"Current goals\\nDaily calories intake goal: \" + 0 + \" cal\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"SuveenE"},"content":"                        \"\\nDaily water intake goal: \" + 0 + \" ml\",","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"pradeep-cod"},"content":"                outputStreamCaptor.toString().trim());","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"pradeep-cod"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"pradeep-cod"},"content":"    public void testExecute_withGoalsSet() {","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Clear the log list before setting goals","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogList.clearLogs();","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Create mock goal logs","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogGoals LogCalorieGoal \u003d new LogGoals(\"Calorie Goal\", 2000,","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"pradeep-cod"},"content":"                \"2024-04-12\", \"08:00\");","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogGoals LogWaterGoal \u003d new LogGoals(\"Water Goal\", 2000,","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"pradeep-cod"},"content":"                \"2024-04-12\", \"08:00\");","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Add goals to the log list","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogList.add(LogCalorieGoal);","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        LogList.add(LogWaterGoal);","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"pradeep-cod"},"content":"        // Create an instance of ShowGoalsCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"pradeep-cod"},"content":"        ShowGoalsCommand showGoalsCommand \u003d new ShowGoalsCommand();","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"pradeep-cod"},"content":"        // Execute the command","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"pradeep-cod"},"content":"        showGoalsCommand.execute();","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"pradeep-cod"},"content":"        // Assert that the output matches the expected message with the set goals","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"SuveenE"},"content":"        assertEquals(\"Current goals\\nDaily calories intake goal: \" + 2000 + \" cal\" +","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"SuveenE"},"content":"                        \"\\nDaily water intake goal: \" + 2000 + \" ml\",","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"pradeep-cod"},"content":"                outputStreamCaptor.toString().trim());","lastModifiedDate":"2024-04-11"},{"lineNumber":65,"author":{"gitId":"pradeep-cod"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"pradeep-cod"},"content":"}","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"pradeep-cod":51,"alvinnnnnnnnnn":12,"SuveenE":4}},{"path":"src/test/java/command/ViewWaterIntakeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.Log;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import activeedge.log.LogWater;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"alvinnnnnnnnnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"nikhil-2101"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"public class ViewWaterIntakeCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"nikhil-2101"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"nikhil-2101"},"content":"    public void testGetTotalWaterIntake() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"nikhil-2101"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-09"},{"lineNumber":31,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-04-09"},{"lineNumber":32,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String date \u003d dateTime.format(dateFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        String time \u003d dateTime.format(timeFormatter);","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        // Create a mock log list","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        ArrayList\u003cLog\u003e logList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        logList.add(new LogWater(200, date, time)); // Adding water intake","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        logList.add(new LogWater(300, date, time)); // Adding water intake","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"nikhil-2101"},"content":"        ViewWaterIntakeCommand viewWaterIntakeCommand \u003d new ViewWaterIntakeCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"SuveenE"},"content":"        // Call method getTotalWaterIntake using reflection or make it package-private for testing","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"alvinnnnnnnnnn"},"content":"        int totalWaterIntake \u003d viewWaterIntakeCommand.getTotalWaterIntake(logList);","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"nikhil-2101"},"content":"        // Verify total water intake","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"nikhil-2101"},"content":"        assertEquals(500, totalWaterIntake);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"nikhil-2101"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"nikhil-2101"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"nikhil-2101"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"alvinnnnnnnnnn":12,"nikhil-2101":34,"SuveenE":2}},{"path":"src/test/java/exerciseDataTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Praneet-25"},"content":"import activeedge.ExerciseData;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Praneet-25"},"content":"public class exerciseDataTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Praneet-25"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"pradeep-cod"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"Praneet-25"},"content":"        testExerciseDataValidity();","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Praneet-25"},"content":"    public static void testExerciseDataValidity() {","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Praneet-25"},"content":"        ExerciseData.assertExerciseData();","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"Praneet-25"},"content":"        // Custom test cases","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Praneet-25"},"content":"        String[][] customData \u003d {","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Praneet-25"},"content":"                {\"test exercise\", \"5\"},","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Praneet-25"},"content":"                {\"\", \"10\"}, // Empty exercise name","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Praneet-25"},"content":"                {\"custom exercise\", \"-5\"}, // Negative calories burnt","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"Praneet-25"},"content":"                {\"another exercise\", \"0\"} // Zero calories burnt","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Praneet-25"},"content":"        };","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Praneet-25"},"content":"        System.out.println(\"Running custom test cases...\");","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Praneet-25"},"content":"        for (String[] exercise : customData) {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Praneet-25"},"content":"            try {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"Praneet-25"},"content":"                System.out.println(\"Exercise Name: \" + exercise[0]);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Praneet-25"},"content":"                System.out.println(\"Calories Burnt Per Minute: \" + exercise[1]);","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"Praneet-25"},"content":"                System.out.println(); // Empty line for readability","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"Praneet-25"},"content":"                ExerciseData.exercisesList \u003d new String[][]{exercise};","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"Praneet-25"},"content":"                ExerciseData.assertExerciseData(); // This should throw an AssertionError","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"Praneet-25"},"content":"            } catch (AssertionError e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"Praneet-25"},"content":"                System.out.println(\"Assertion Error: \" + e.getMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"Praneet-25"},"content":"                System.out.println(); // Empty line for readability","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"Praneet-25"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Praneet-25"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Praneet-25"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Praneet-25"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Praneet-25"},"content":"","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Praneet-25":34,"pradeep-cod":1}},{"path":"src/test/java/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SuveenE"},"content":"package parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"nikhil-2101"},"content":"//import activeedge.parser.Parser;","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"nikhil-2101"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"nikhil-2101"},"content":"//","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"nikhil-2101"},"content":"//import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"nikhil-2101"},"content":"//import java.io.PrintStream;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"nikhil-2101"},"content":"//","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"nikhil-2101"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"nikhil-2101"},"content":"//","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"SuveenE"},"content":"public class ParserTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"SuveenE"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nikhil-2101"},"content":"//    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"nikhil-2101"},"content":"//    public void testHelpCommandPrintsHelpMessage() throws Exception {","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"nikhil-2101"},"content":"//        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"nikhil-2101"},"content":"//        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"nikhil-2101"},"content":"//","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"nikhil-2101"},"content":"//        Parser parser \u003d new Parser();","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"nikhil-2101"},"content":"//        parser.handleInput(\"help\");","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"nikhil-2101"},"content":"//","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"nikhil-2101"},"content":"//        String expectedOutputPart \u003d \"Welcome to Active Edge!\";","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"nikhil-2101"},"content":"//        assertTrue(outContent.toString().contains(expectedOutputPart));","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"nikhil-2101"},"content":"//","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"nikhil-2101"},"content":"//        System.setOut(System.out);","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"nikhil-2101"},"content":"//    }","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"SuveenE"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nikhil-2101":21,"SuveenE":4}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"REM FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"ECHO Test passed!","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"SuveenE":2,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"SuveenE"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"SuveenE"},"content":"#dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"SuveenE"},"content":"#diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"SuveenE"},"content":"#if [ $? -eq 0 ]","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"SuveenE"},"content":"#then","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"SuveenE"},"content":"#    echo \"Test passed!\"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"SuveenE"},"content":"#    exit 0","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"SuveenE"},"content":"#else","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"SuveenE"},"content":"#    echo \"Test failed!\"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"SuveenE"},"content":"#    exit 1","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"SuveenE"},"content":"#fi","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     exit 0","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SuveenE":11,"-":14}}]
