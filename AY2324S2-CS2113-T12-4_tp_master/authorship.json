[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EugeneChanJiajun"},"content":"# Omnitravel","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"EugeneChanJiajun":1,"-":63}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"daryltay415"},"content":"    mainClass.set(\"seedu.omnitravel.omnitravel.OmniTravel\")","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"daryltay415"},"content":"    archiveBaseName.set(\"omnitravel\")","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"EugeneChanJiajun"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EugeneChanJiajun":1,"daryltay415":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"|                                             Display |        Name        |                Github Profile                 |               Portfolio               |","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"|----------------------------------------------------:|:------------------:|:---------------------------------------------:|:-------------------------------------:|","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Eugene Chan Jiajun | [Github](https://github.com/EugeneChanJiajun) | [Portfolio](team/eugenechanjiajun.md) |","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |     Daryl Tay      |   [Github](https://github.com/daryltay415)    |   [Portfolio](team/daryltay415.md)    |","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |      Annie Xu      |    [Github](https://github.com/annnniexu)     |    [Portfolio](team/annnniexu.md)     |","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Chin Yan Xu     |    [Github](https://github.com/ChinYanXu)     |    [Portfolio](team/chinyanxu.md)     |","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |     Chen Kang      |    [Github](https://github.com/ChenKangg)     |    [Portfolio](team/chenkangg.md)     |","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"daryltay415":7,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"* [Design](#design)","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"    * [Architecture](#architecture)","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"    * [Storage component](#storage-component)","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"    * [Parser component](#parser-component)","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"    * [TravelActivityTypes component](#travelactivitytypes-component)","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"    * [Ui component](#ui-component)","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"    * [Errorhandlers component](#errorhandlers-component)","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"    * [Save feature](#save-feature)","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"    * [Update feature](#update-feature)","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"    * [Total expense feature](#total-expense-feature)","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":"    * [Tag feature](#tag-feature)","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"* [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"    * [Product scope](#product-scope)","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"    * [User stories](#user-stories)","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"    * [Non-functional requirements](#non-functional-requirements)","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"    * [Glossary](#glossary)","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"* [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"daryltay415"},"content":"    * [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"    * [Adding a travel activity](#adding-a-travel-activity)","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"daryltay415"},"content":"    * [Deleting a travel activity](#deleting-a-travel-activity)","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"daryltay415"},"content":"    * [Updating a travel activity](#updating-a-travel-activity)","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"daryltay415"},"content":"    * [List travel activities](#list-travel-activities)","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"daryltay415"},"content":"    * [Finding a travel activity](#finding-a-travel-activity)","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"daryltay415"},"content":"    * [Finding a travel activity with a tag](#finding-a-travel-activity-with-a-tag)","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"daryltay415"},"content":"    * [Finding a type of travel activity](#finding-a-type-of-travel-activity)","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"daryltay415"},"content":"    * [Adding an expense](#adding-an-expense)","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"daryltay415"},"content":"    * [Deleting an expense](#deleting-an-expense)","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"daryltay415"},"content":"    * [Converting currency](#converting-currency)","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"daryltay415"},"content":"    * [Add tag](#add-tag)","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"daryltay415"},"content":"    * [Remove tag](#remove-tag)","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"daryltay415"},"content":"    * [List tags](#list-tags)","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"daryltay415"},"content":"    * [Checking a travel activtiy](#checking-a-travel-activity)","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"daryltay415"},"content":"    * [Unchecking a travel activity](#unchecking-a-travel-activity)","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"daryltay415"},"content":"    * [Show help](#show-help)","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"daryltay415"},"content":"Source for currency exchange API: [link](https://github.com/fawazahmed0/exchange-api/blob/main/LICENSE)","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"daryltay415"},"content":"## Design","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"daryltay415"},"content":"### Architecture","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"daryltay415"},"content":"![ArchitectureDiagram.png](DiagramImages/ArchitectureDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"daryltay415"},"content":"The architecture diagram above describes the high level design of the OmniTravel app.","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"daryltay415"},"content":"**Main components of the architecture**","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"daryltay415"},"content":"`omnitravel` which consists of the class `OmniTravel` has the responsibility of launching the app and shutting down.","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"daryltay415"},"content":"* When the app launches, it initializes the other components in the app.","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"daryltay415"},"content":"* When it shuts down, it will also shut down the other components.","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"daryltay415"},"content":"The main components of the system are as follows:","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"daryltay415"},"content":"* `storage`: It reads data from the folder omni.txt and writes data to it.","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"daryltay415"},"content":"* `parser`: It filters the commands and executes them.","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"daryltay415"},"content":"* `travelactivitytypes`: It holds the data of the app in memory.","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"daryltay415"},"content":"* `ui`: The UI of the app.","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"daryltay415"},"content":"* `errorhandlers`: It handles all the exceptions and checks for any errors in the app.","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"daryltay415"},"content":"### Storage component","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"daryltay415"},"content":"The Storage component only consists of one class `FileSave`. ","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"daryltay415"},"content":"The storage component,","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"daryltay415"},"content":"* saves the data of the different travel activity types, including their tags, expenses, type and","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"daryltay415"},"content":"description.","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"daryltay415"},"content":"* it listens to the `omnitravel` component to know when to save and load the file from omni.txt into the app.","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"daryltay415"},"content":"* it retrieves travel activity objects from the `travelactivitytype` component to save.","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"daryltay415"},"content":"### Parser component","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"daryltay415"},"content":"The parser component only consists of one class `Parser`. ","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"daryltay415"},"content":"The parser component,","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"daryltay415"},"content":"* handles all the command inputs by the user","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"daryltay415"},"content":"  and carries out the appropriate actions depending on the command given.","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"daryltay415"},"content":"* uses the `ui` component to print responses to the user","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"daryltay415"},"content":"* sends commands to the `exchangerateapi` and `travelactivitytype` components to execute.","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"daryltay415"},"content":"* receives data from the `omnitravel` component.","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"daryltay415"},"content":"### TravelActivityTypes component","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"daryltay415"},"content":"![TravelActivityTypeClassDiagram.png](DiagramImages/TravelActivityTypeClassDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"daryltay415"},"content":"The TravelActivityTypes component consists of a few different classes:","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"daryltay415"},"content":"* `Accommodation`: A subclass of travel activity related to accommodation","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"daryltay415"},"content":"* `Food`: A subclass of travel activity related to food","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"daryltay415"},"content":"* `Landmark`: A subclass of travel activity related to landmark","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"daryltay415"},"content":"* `TravelActivtiy`: The parent class of `Accommodation`, `Food` and `Landmark`","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"daryltay415"},"content":"* `TravelActivityList`: An array consisting of travel activity type objects","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"daryltay415"},"content":"The `TravelActivityTypes` component,","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"daryltay415"},"content":"* stores all the travel activity type objects in an array.","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"daryltay415"},"content":"* listens to the `parser` component for any commands to execute.","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"daryltay415"},"content":"### Ui component","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"daryltay415"},"content":"The Ui component only consists of one class `Ui`.","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"daryltay415"},"content":"The Ui component, ","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"daryltay415"},"content":"* listens to the `omnitravel`, `parser` and `travelactivitytypes` component to print out","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"daryltay415"},"content":"the responses to the user.","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"daryltay415"},"content":"* contains all the responses to each of the user\u0027s input command","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"daryltay415"},"content":"* takes in exceptions as parameters and prints out the error message.","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"daryltay415"},"content":"### Errorhandlers component","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"daryltay415"},"content":"![Errorhandlers.png](DiagramImages/Errorhandler.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"daryltay415"},"content":"The Errorhandler component consists of two classes `CheckParameters` and `OmniException`.","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"daryltay415"},"content":"`OmniException` is a subclass of the parent class `Exception`.","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"daryltay415"},"content":"The Errorhandler component,","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"daryltay415"},"content":"* checks the parameters of the commands given by the user.","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"daryltay415"},"content":"* handles all the exceptions and errors in the app.","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"daryltay415"},"content":"* keeps a reference to `ui` component to print error messages.","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"daryltay415"},"content":"## Implementation","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"daryltay415"},"content":"### Save feature","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"EugeneChanJiajun"},"content":"The save feature is facilitated by `FileSave`. It makes calls to the subclasses `Accommodation`, `Food` and `Landmark`","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"EugeneChanJiajun"},"content":"which are subclasses of the `TravelActivity` class to add each activity saved in the text file.","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"EugeneChanJiajun"},"content":"`addTravelActivity` is called everytime there is a valid-stored data in the text file that is read to upload the","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"EugeneChanJiajun"},"content":"activity back into the array list.","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"EugeneChanJiajun"},"content":"Step 1. When the user launches the app for the first time, it will check if the text file `omni.txt` exist.","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"EugeneChanJiajun"},"content":"Step 2. Once it is found that the text file exists, the `readFile()` method will call `loadFileContents(list)`.","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"EugeneChanJiajun"},"content":"Step 3. In the `loadFileContents(list)`, `Scanner(f)` would read the text file line by line and insert each line into","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"EugeneChanJiajun"},"content":"the respective activity types and its contents with `/` as the delimiter.","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"EugeneChanJiajun"},"content":"The Sequence Diagram below shows how the save file feature is being implemented when the user re-enters the chatbot","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"EugeneChanJiajun"},"content":"after using the bye command.","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"daryltay415"},"content":"![img.png](DiagramImages/img.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"EugeneChanJiajun"},"content":"The above sequence diagram shows how existing save text files will be reloaded back into Omnibots array list to act as","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"EugeneChanJiajun"},"content":"a form of save feature when the user exits the bot. ","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"daryltay415"},"content":"![img_3.png](DiagramImages/img_3.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":145,"author":{"gitId":"EugeneChanJiajun"},"content":"The above class diagram shows the methods and the respective input and return types that the FileSave class contains. It","lastModifiedDate":"2024-04-12"},{"lineNumber":146,"author":{"gitId":"EugeneChanJiajun"},"content":"also shows the classes called during the file load sequence.","lastModifiedDate":"2024-04-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"daryltay415"},"content":"### Update feature","lastModifiedDate":"2024-04-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"daryltay415"},"content":"The update feature is mainly carried out by `TravelActivityList`. It stores objects with class `TravelActivity`in an array called `travelActivities`","lastModifiedDate":"2024-04-12"},{"lineNumber":151,"author":{"gitId":"daryltay415"},"content":"and each `TravelActivity` class object contains a date and duration. The `TravelAcivityList` also contains the following method:","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"daryltay415"},"content":"* `TravelActivityList#updateTravelActivity(travelActivityNumber, date, duration)`-- Updates the date and duration of the specified object of `TravelActivity` class type.","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"daryltay415"},"content":"Step 1. When the user launches the app for the first time, there will be no objects of type `TravelActivity` in `travelActivities`.","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"EugeneChanJiajun"},"content":"Thus, any attempts to call the command `update INDEX`","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"daryltay415"},"content":"will result in an output telling the user that no travel activity can be found.","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"daryltay415"},"content":"Step 2. After the user has added new travel activities into the `travelActivityList`, the user can execute","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"daryltay415"},"content":"`update 1 /date 2020-12-20 /duration 2hours` command to update the date and duration of the first travel activity","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"daryltay415"},"content":"in the travel activity list. The `update` command calls the `Parser#updateCommand(line, list)` which then calls the `TravelActivityList#updateTravelActivity(travelActivityNumber, date, duration)`","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"daryltay415"},"content":". ","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"daryltay415"},"content":"Step 3. The method will then find the travel activity with the corresponding travel activity number in the `travelActivities` and then set the new date and duration","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"daryltay415"},"content":"of that travel activity.","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"daryltay415"},"content":"The class diagram below shows the main relationship between the classes in the update feature:","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"daryltay415"},"content":"![UpdateFeatureClassDiagrma.png](DiagramImages/UpdateFeatureClassDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"daryltay415"},"content":"The sequence diagram below shows how an update operation goes through the parser component:","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"daryltay415"},"content":"![img_1.png](DiagramImages/img_1.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"daryltay415"},"content":"### Total Expense feature","lastModifiedDate":"2024-04-12"},{"lineNumber":173,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"daryltay415"},"content":"The total expense feature is mainly carried out by `TravelActivityList`. It stores objects with class `TravelActivity`in an array called `travelActivities`","lastModifiedDate":"2024-04-12"},{"lineNumber":175,"author":{"gitId":"annnniexu"},"content":"and each `TravelActivity` class object contains an expense associated with it. The `TravelAcivityList` also contains the following method:","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"annnniexu"},"content":"* `TravelActivityList#totalExpense(type)`-- Returns the total expense of activities in the list with given type.","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"annnniexu"},"content":"Step 1. When the user launched the app for the first time, there will be no objects of type `TravelActivity` in `travelActivities`.","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"annnniexu"},"content":"Thus any attempts to call the command `total expense`","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"annnniexu"},"content":"will result in an output of `0`.","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"annnniexu"},"content":"Step 2. After the user has added new travel activities into the `travelActivityList`, the user can execute","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"annnniexu"},"content":"`totalexpense [/type TYPE]` command to get the total expense for the activities in the list. The `total expense` command calls the  `Parser#totalExpenseCommand(line, list)` which then calls the `TravelActivityList#totalExpense(type)`.","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"annnniexu"},"content":"Step 3. The method will loop through each activity in `travelActivities` and add up all the expenses for the given type. If no type is provided, it will default to TravelActivity type.","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"daryltay415"},"content":"![totalexpense.png](DiagramImages/totalexpense.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"ChenKangg"},"content":"### Tag feature","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":191,"author":{"gitId":"ChenKangg"},"content":"The tag feature is implemented through the tagCommand method, which allows users to add tags to specific travel activities stored in the system.","lastModifiedDate":"2024-03-31"},{"lineNumber":192,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"ChenKangg"},"content":"The sequence diagram depicts the interaction between the user, the tagCommand method, the TravelActivityList instance, and the OmniException instance.","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"daryltay415"},"content":"![TagSequenceDiagram.png](DiagramImages/TagSequenceDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":196,"author":{"gitId":"daryltay415"},"content":"## Appendix: Requirements","lastModifiedDate":"2024-04-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":199,"author":{"gitId":"daryltay415"},"content":"* Needs to manage multiple travel plans","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"daryltay415"},"content":"* Prefers typing to clicking with mouse","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":204,"author":{"gitId":"ChinYanXu"},"content":"Tourists may have many plans during their holiday. Omnitravel aims to be a one-stop-shop for all travel plans.","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"ChinYanXu"},"content":"Omnitravels stores the user\u0027s travel plans and enable them to quickly retrieve their travel plans using the search ","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"ChinYanXu"},"content":"functions.","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                                                  | So that I can ...                                                                         |","lastModifiedDate":"2020-05-24"},{"lineNumber":211,"author":{"gitId":"EugeneChanJiajun"},"content":"|---------|----------|----------------------------------------------------------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"EugeneChanJiajun"},"content":"| v1.0    | new user | see a list of my travel plans                                  | refer and know what activities I have planned for the day                                 |","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"EugeneChanJiajun"},"content":"| v1.0    | user     | be able to label my destinations                               | identify the type of activity easily                                                      |","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"EugeneChanJiajun"},"content":"| v1.0    | user     | be able to add and remove activities from my planner           | easily make changes to my current activity list                                           | ","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"EugeneChanJiajun"},"content":"| v1.0    | user     | be able to add tags or categories to my activities             | organise them based on my preferences                                                     |","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"EugeneChanJiajun"},"content":"| v1.0    | user     | be able to check and uncheck my travel activities              | easily mark the activities that I have done if I do not follow the sequence of activities |","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"EugeneChanJiajun"},"content":"| v1.0    | user     | have a help option                                             | easily identify all the commands in the chatbot                                           |","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"EugeneChanJiajun"},"content":"| v1.0    | user     | be able to search for an activity already recorded in the list | easily retrieve exisiting plans and not have double inputs                                |","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"EugeneChanJiajun"},"content":"| v2.0    | user     | maintain my expense records                                    | make travel plans according to my budget                                                  |","lastModifiedDate":"2024-04-02"},{"lineNumber":220,"author":{"gitId":"EugeneChanJiajun"},"content":"| v2.0    | user     | be able to see the travel durations                            | plan my activities more efficiently                                                       |","lastModifiedDate":"2024-04-02"},{"lineNumber":221,"author":{"gitId":"EugeneChanJiajun"},"content":"| v2.0    | user     | be able to search for an activity based on its type or tag     | find specific places in my list more efficiently                                          |","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"EugeneChanJiajun"},"content":"| v2.0    | user     | be able to delete a destination from my records                | remove redundant records that I do not need                                               |","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"EugeneChanJiajun"},"content":"| v2.0    | user     | be able to edit and update existing plans                      | efficiently update exisiting plans without having to delete and add plans                 |","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"EugeneChanJiajun"},"content":"| v2.0    | user     | have some form of QOL considerations like warning messages     | know what are the errors that I have made in the inputs                                   |","lastModifiedDate":"2024-04-02"},{"lineNumber":225,"author":{"gitId":"daryltay415"},"content":"| v2.1    | user     | be able to convert from one currency to another                | know how much of a currency I need to convert for usage                                   |","lastModifiedDate":"2024-04-08"},{"lineNumber":226,"author":{"gitId":"daryltay415"},"content":"| v2.1    | user     | be able to list all the tags I have given to the activities    | easily see what are the tags I currently have in the list                                 |","lastModifiedDate":"2024-04-08"},{"lineNumber":227,"author":{"gitId":"EugeneChanJiajun"},"content":"| v2.1    | user     | be able to sort out the list of activities based on dates      | easily view the entire flow of my travel plan                                             |","lastModifiedDate":"2024-04-14"},{"lineNumber":228,"author":{"gitId":"EugeneChanJiajun"},"content":"| v2.1    | user     | be able to group and delete similar activities                 | easily manage and delete similar plans in one go                                          |","lastModifiedDate":"2024-04-14"},{"lineNumber":229,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":233,"author":{"gitId":"daryltay415"},"content":"1. The program should be able to run on any mainstream OS with java 11 installed","lastModifiedDate":"2024-04-08"},{"lineNumber":234,"author":{"gitId":"EugeneChanJiajun"},"content":"2. Users should be able to hold all travel plans in a typical travel period.","lastModifiedDate":"2024-04-14"},{"lineNumber":235,"author":{"gitId":"EugeneChanJiajun"},"content":"3. A user with above average typing speed for regular English text should be able to accomplish most of the tasks faster","lastModifiedDate":"2024-04-14"},{"lineNumber":236,"author":{"gitId":"EugeneChanJiajun"},"content":"using commands than using the mouse.","lastModifiedDate":"2024-04-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"daryltay415"},"content":"* Mainstream OS: Windows, Linux, MacOS","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":242,"author":{"gitId":"daryltay415"},"content":"## Appendix: Instructions for manual testing","lastModifiedDate":"2024-04-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"EugeneChanJiajun"},"content":"The instructions given below are used for testing the app manually.","lastModifiedDate":"2024-04-14"},{"lineNumber":245,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"daryltay415"},"content":"### Launch and shutdown","lastModifiedDate":"2024-04-08"},{"lineNumber":247,"author":{"gitId":"daryltay415"},"content":"1. Initial launch","lastModifiedDate":"2024-04-08"},{"lineNumber":248,"author":{"gitId":"daryltay415"},"content":"    1. Download the jar file and put it into an empty folder.","lastModifiedDate":"2024-04-08"},{"lineNumber":249,"author":{"gitId":"daryltay415"},"content":"    2. Open a terminal in that empty folder and type java-jar Omnitravel.jar into the terminal.","lastModifiedDate":"2024-04-08"},{"lineNumber":250,"author":{"gitId":"daryltay415"},"content":"2. Shutdown","lastModifiedDate":"2024-04-08"},{"lineNumber":251,"author":{"gitId":"daryltay415"},"content":"    1. When the app is running, type `bye` into the terminal to close the app.","lastModifiedDate":"2024-04-08"},{"lineNumber":252,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":253,"author":{"gitId":"EugeneChanJiajun"},"content":"More info can be found in the user guide [here](https://ay2324s2-cs2113-t12-4.github.io/tp/UserGuide.html).","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"daryltay415"},"content":"### Adding a travel activity","lastModifiedDate":"2024-04-08"},{"lineNumber":256,"author":{"gitId":"daryltay415"},"content":"1. Adding a general travel activity","lastModifiedDate":"2024-04-08"},{"lineNumber":257,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `add visit Paris /date 2024-12-12 /duration 2 weeks`","lastModifiedDate":"2024-04-08"},{"lineNumber":258,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"daryltay415"},"content":"       Expected: A new general activity is added and the details of the activity is shown","lastModifiedDate":"2024-04-08"},{"lineNumber":260,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":261,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `add visit Japan /date 2024-08-12 /duration 2 weeks /tag friday`","lastModifiedDate":"2024-04-08"},{"lineNumber":262,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"daryltay415"},"content":"       Expected: A new general activity is added with a tag and the details of the activity is shown","lastModifiedDate":"2024-04-08"},{"lineNumber":264,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"EugeneChanJiajun"},"content":"2. Adding an accommodation activity into the list","lastModifiedDate":"2024-04-14"},{"lineNumber":266,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `accommodation hotel /date 2024-12-12 /duration one month`","lastModifiedDate":"2024-04-08"},{"lineNumber":267,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":268,"author":{"gitId":"daryltay415"},"content":"       Expected: A new accommodation activity type is added and the details of the activity is shown","lastModifiedDate":"2024-04-08"},{"lineNumber":269,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":270,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `accommodation motel /date 2024-10-12 /duration one month /tag Monday`","lastModifiedDate":"2024-04-08"},{"lineNumber":271,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":272,"author":{"gitId":"daryltay415"},"content":"       Expected: A new accommodation activity type is added with a tag and the details of the activity is shown","lastModifiedDate":"2024-04-08"},{"lineNumber":273,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"daryltay415"},"content":"3. Adding a food activity into the list","lastModifiedDate":"2024-04-08"},{"lineNumber":275,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `food prata /date 2024-12-12 /duration 1 hour`","lastModifiedDate":"2024-04-08"},{"lineNumber":276,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"daryltay415"},"content":"       Expected: A new food activity type is added and the details of the activity is shown","lastModifiedDate":"2024-04-08"},{"lineNumber":278,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `food takoyaki /date 2024-10-12 /duration 1 hour /tag Japanese food`","lastModifiedDate":"2024-04-08"},{"lineNumber":280,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":281,"author":{"gitId":"daryltay415"},"content":"       Expected: A new food activity type is added with a tag and the details of the activity is shown","lastModifiedDate":"2024-04-08"},{"lineNumber":282,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":283,"author":{"gitId":"daryltay415"},"content":"4. Adding a landmark activity into the list","lastModifiedDate":"2024-04-08"},{"lineNumber":284,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `landmark Eiffel Tower /date 2024-12-12 /duration 2 hour`","lastModifiedDate":"2024-04-08"},{"lineNumber":285,"author":{"gitId":"EugeneChanJiajun"},"content":"       ","lastModifiedDate":"2024-04-02"},{"lineNumber":286,"author":{"gitId":"daryltay415"},"content":"       Expected: A new landmark activity type is added and the details of the activity is shown","lastModifiedDate":"2024-04-08"},{"lineNumber":287,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":288,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `landmark Pyramid /date 2025-12-12 /duration 3 hours /tag Tuesday`","lastModifiedDate":"2024-04-08"},{"lineNumber":289,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":290,"author":{"gitId":"daryltay415"},"content":"       Expected: A new landmark activity type is added with a tag and the details of the activity is shown","lastModifiedDate":"2024-04-08"},{"lineNumber":291,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":292,"author":{"gitId":"daryltay415"},"content":"### Deleting a travel activity","lastModifiedDate":"2024-04-08"},{"lineNumber":293,"author":{"gitId":"daryltay415"},"content":"1. Deleting a travel activity that is present in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":294,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisites: Add 2 new activities with description \"Go to Paris\" and another with","lastModifiedDate":"2024-04-12"},{"lineNumber":295,"author":{"gitId":"daryltay415"},"content":"       description \"Go home\". List all the travel activities using the `list` command.","lastModifiedDate":"2024-04-12"},{"lineNumber":296,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":297,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `delete 1`","lastModifiedDate":"2024-04-08"},{"lineNumber":298,"author":{"gitId":"EugeneChanJiajun"},"content":"   ","lastModifiedDate":"2024-04-02"},{"lineNumber":299,"author":{"gitId":"daryltay415"},"content":"       Expected: Deletes the first activity in the list and details of the deleted activity is shown in the terminal","lastModifiedDate":"2024-04-08"},{"lineNumber":300,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":301,"author":{"gitId":"daryltay415"},"content":"    3. Test case: `delete home`","lastModifiedDate":"2024-04-12"},{"lineNumber":302,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":303,"author":{"gitId":"daryltay415"},"content":"       Expected: Deletes the activities with the description containing the keyword \"home\" and the","lastModifiedDate":"2024-04-12"},{"lineNumber":304,"author":{"gitId":"daryltay415"},"content":"       activities deleted will be shown in a list ","lastModifiedDate":"2024-04-12"},{"lineNumber":305,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":306,"author":{"gitId":"daryltay415"},"content":"    4. Test case: `delete -1` ","lastModifiedDate":"2024-04-12"},{"lineNumber":307,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"daryltay415"},"content":"       Expected: An error message will be shown in the terminal and no activity is deleted.","lastModifiedDate":"2024-04-08"},{"lineNumber":309,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":310,"author":{"gitId":"daryltay415"},"content":"### Updating a travel activity","lastModifiedDate":"2024-04-08"},{"lineNumber":311,"author":{"gitId":"daryltay415"},"content":"1. Updating a travel activity that is present in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":312,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisites: List all the travel activities using the `list` command.","lastModifiedDate":"2024-04-08"},{"lineNumber":313,"author":{"gitId":"daryltay415"},"content":"    ","lastModifiedDate":"2024-04-08"},{"lineNumber":314,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `update 1 /date 2024-12-13 /duration two days`","lastModifiedDate":"2024-04-08"},{"lineNumber":315,"author":{"gitId":"daryltay415"},"content":"    ","lastModifiedDate":"2024-04-08"},{"lineNumber":316,"author":{"gitId":"daryltay415"},"content":"       Expected: The first activity in the list will be updated with a new date and duration. The details of the activity","lastModifiedDate":"2024-04-08"},{"lineNumber":317,"author":{"gitId":"daryltay415"},"content":"        will be shown.","lastModifiedDate":"2024-04-08"},{"lineNumber":318,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":319,"author":{"gitId":"daryltay415"},"content":"    3. Test case: `update 2 /date 2024-12-13 /duration two days /tag Friday`","lastModifiedDate":"2024-04-08"},{"lineNumber":320,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":321,"author":{"gitId":"daryltay415"},"content":"       Expected: The second activity in the list will be updated with a new date, duration and tag. The details of the activity","lastModifiedDate":"2024-04-08"},{"lineNumber":322,"author":{"gitId":"daryltay415"},"content":"       will be shown.","lastModifiedDate":"2024-04-08"},{"lineNumber":323,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":324,"author":{"gitId":"daryltay415"},"content":"    4. Test case: `update -1 /date 2025-12-12 /duration five days /tag Monday`","lastModifiedDate":"2024-04-12"},{"lineNumber":325,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":326,"author":{"gitId":"daryltay415"},"content":"       Expected: No activity will be updated and an error message will be shown","lastModifiedDate":"2024-04-08"},{"lineNumber":327,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":328,"author":{"gitId":"daryltay415"},"content":"### List travel activities","lastModifiedDate":"2024-04-08"},{"lineNumber":329,"author":{"gitId":"daryltay415"},"content":"1. To list out the current activity list","lastModifiedDate":"2024-04-08"},{"lineNumber":330,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `list`","lastModifiedDate":"2024-04-08"},{"lineNumber":331,"author":{"gitId":"EugeneChanJiajun"},"content":"    ","lastModifiedDate":"2024-04-02"},{"lineNumber":332,"author":{"gitId":"daryltay415"},"content":"       Expected: The current activity list will be shown without any sorting order","lastModifiedDate":"2024-04-12"},{"lineNumber":333,"author":{"gitId":"daryltay415"},"content":"   ","lastModifiedDate":"2024-04-12"},{"lineNumber":334,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `list /date 2024-12-12`","lastModifiedDate":"2024-04-12"},{"lineNumber":335,"author":{"gitId":"daryltay415"},"content":"   ","lastModifiedDate":"2024-04-12"},{"lineNumber":336,"author":{"gitId":"daryltay415"},"content":"       Expected: All the activities with the date 2024-12-12 will be shown","lastModifiedDate":"2024-04-12"},{"lineNumber":337,"author":{"gitId":"daryltay415"},"content":"   ","lastModifiedDate":"2024-04-12"},{"lineNumber":338,"author":{"gitId":"daryltay415"},"content":"    3. Test case: `list /sort`","lastModifiedDate":"2024-04-12"},{"lineNumber":339,"author":{"gitId":"daryltay415"},"content":"   ","lastModifiedDate":"2024-04-12"},{"lineNumber":340,"author":{"gitId":"daryltay415"},"content":"       Expected: All the activities will be shown in a list by ascending dates ","lastModifiedDate":"2024-04-12"},{"lineNumber":341,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":342,"author":{"gitId":"daryltay415"},"content":"### Finding a travel activity","lastModifiedDate":"2024-04-08"},{"lineNumber":343,"author":{"gitId":"daryltay415"},"content":"1. To find all travel activities with the same keyword","lastModifiedDate":"2024-04-08"},{"lineNumber":344,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisite: Add 2 new travel activities, one with the description \"go to paris\"","lastModifiedDate":"2024-04-08"},{"lineNumber":345,"author":{"gitId":"daryltay415"},"content":"        and the other with the description \"fly to paris\".","lastModifiedDate":"2024-04-08"},{"lineNumber":346,"author":{"gitId":"daryltay415"},"content":"   ","lastModifiedDate":"2024-04-08"},{"lineNumber":347,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `find paris`","lastModifiedDate":"2024-04-08"},{"lineNumber":348,"author":{"gitId":"daryltay415"},"content":"       ","lastModifiedDate":"2024-04-08"},{"lineNumber":349,"author":{"gitId":"daryltay415"},"content":"       Expected: The activities with \"paris\" in the description will be shown in a list.","lastModifiedDate":"2024-04-08"},{"lineNumber":350,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":351,"author":{"gitId":"daryltay415"},"content":"2. To find all travel activities with the same keyword and with exclusion","lastModifiedDate":"2024-04-12"},{"lineNumber":352,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `find paris /exclude fly`","lastModifiedDate":"2024-04-12"},{"lineNumber":353,"author":{"gitId":"daryltay415"},"content":"    ","lastModifiedDate":"2024-04-12"},{"lineNumber":354,"author":{"gitId":"daryltay415"},"content":"       Expected: The activities with the keyword \"paris\" and excluding \"fly\" in the description will","lastModifiedDate":"2024-04-12"},{"lineNumber":355,"author":{"gitId":"daryltay415"},"content":"       be shown in a list ","lastModifiedDate":"2024-04-12"},{"lineNumber":356,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":357,"author":{"gitId":"daryltay415"},"content":"### Finding a travel activity with a tag","lastModifiedDate":"2024-04-08"},{"lineNumber":358,"author":{"gitId":"daryltay415"},"content":"1. To find all the travel activities with the same tag","lastModifiedDate":"2024-04-08"},{"lineNumber":359,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisites: Add 2 new travel activities with the same tag \"Friday\" and with descriptions","lastModifiedDate":"2024-04-12"},{"lineNumber":360,"author":{"gitId":"daryltay415"},"content":"        \"Paris\" and \"Hong Kong\".","lastModifiedDate":"2024-04-12"},{"lineNumber":361,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":362,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `findtag Friday`","lastModifiedDate":"2024-04-08"},{"lineNumber":363,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":364,"author":{"gitId":"daryltay415"},"content":"       Expected: The activities with the tag \"Friday\" will be shown in a list","lastModifiedDate":"2024-04-08"},{"lineNumber":365,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":366,"author":{"gitId":"daryltay415"},"content":"2. To find all the travel activities with the same tag with exclusions","lastModifiedDate":"2024-04-12"},{"lineNumber":367,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `findtag Friday /exclude Paris`","lastModifiedDate":"2024-04-12"},{"lineNumber":368,"author":{"gitId":"daryltay415"},"content":"        ","lastModifiedDate":"2024-04-12"},{"lineNumber":369,"author":{"gitId":"daryltay415"},"content":"       Expected: The activities with the tag \"Friday\" and without the keyword \"Paris\" in the","lastModifiedDate":"2024-04-12"},{"lineNumber":370,"author":{"gitId":"daryltay415"},"content":"        description will be shown in a list.","lastModifiedDate":"2024-04-12"},{"lineNumber":371,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":372,"author":{"gitId":"daryltay415"},"content":"### Finding a type of travel activity","lastModifiedDate":"2024-04-08"},{"lineNumber":373,"author":{"gitId":"daryltay415"},"content":"1. To find all travel activities of a certain type","lastModifiedDate":"2024-04-08"},{"lineNumber":374,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisites: Create one Food type and one Food type travel activity with the","lastModifiedDate":"2024-04-12"},{"lineNumber":375,"author":{"gitId":"daryltay415"},"content":"        description \"Takoyaki\" and \"Chicken rice\".","lastModifiedDate":"2024-04-12"},{"lineNumber":376,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":377,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `findtype Food`","lastModifiedDate":"2024-04-08"},{"lineNumber":378,"author":{"gitId":"daryltay415"},"content":"   ","lastModifiedDate":"2024-04-08"},{"lineNumber":379,"author":{"gitId":"daryltay415"},"content":"       Expected: The activities of food type will be shown in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":380,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":381,"author":{"gitId":"daryltay415"},"content":"2. To find all the travel activities of a certain type with exclusions","lastModifiedDate":"2024-04-12"},{"lineNumber":382,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `findtype Food /exclude Takoyaki`","lastModifiedDate":"2024-04-12"},{"lineNumber":383,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":384,"author":{"gitId":"daryltay415"},"content":"       Expected: The activities of food type without the keyword \"Takoyaki\" in their description","lastModifiedDate":"2024-04-12"},{"lineNumber":385,"author":{"gitId":"daryltay415"},"content":"       will be shown in a list. ","lastModifiedDate":"2024-04-12"},{"lineNumber":386,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":387,"author":{"gitId":"daryltay415"},"content":"### Adding an expense","lastModifiedDate":"2024-04-12"},{"lineNumber":388,"author":{"gitId":"daryltay415"},"content":"1. Adding expense to an activity currently in the list","lastModifiedDate":"2024-04-12"},{"lineNumber":389,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisites: List all the travel activities using the `list` command.","lastModifiedDate":"2024-04-08"},{"lineNumber":390,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":391,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `expense 1 $40`","lastModifiedDate":"2024-04-08"},{"lineNumber":392,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":393,"author":{"gitId":"daryltay415"},"content":"       Expected: An expense of $40 will be added to the first activity in the list and the details","lastModifiedDate":"2024-04-08"},{"lineNumber":394,"author":{"gitId":"daryltay415"},"content":"        of the activity will be shown","lastModifiedDate":"2024-04-08"},{"lineNumber":395,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":396,"author":{"gitId":"daryltay415"},"content":"2. Adding expense to an activity not in the list","lastModifiedDate":"2024-04-12"},{"lineNumber":397,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `expense 1 $-1`","lastModifiedDate":"2024-04-08"},{"lineNumber":398,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":399,"author":{"gitId":"daryltay415"},"content":"       Expected: No expense will be added and an error message will be shown.","lastModifiedDate":"2024-04-12"},{"lineNumber":400,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":401,"author":{"gitId":"daryltay415"},"content":"### Deleting an expense","lastModifiedDate":"2024-04-08"},{"lineNumber":402,"author":{"gitId":"daryltay415"},"content":"1. Deleting an expense from an activity currently in the list","lastModifiedDate":"2024-04-12"},{"lineNumber":403,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisites: List all the travel activities using the `list` command.","lastModifiedDate":"2024-04-08"},{"lineNumber":404,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":405,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `removeexpense 1`","lastModifiedDate":"2024-04-08"},{"lineNumber":406,"author":{"gitId":"daryltay415"},"content":"    ","lastModifiedDate":"2024-04-08"},{"lineNumber":407,"author":{"gitId":"daryltay415"},"content":"       Expected: The expense of the first activity in the list will be removed. The details of the activity will","lastModifiedDate":"2024-04-08"},{"lineNumber":408,"author":{"gitId":"daryltay415"},"content":"       be shown","lastModifiedDate":"2024-04-08"},{"lineNumber":409,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":410,"author":{"gitId":"daryltay415"},"content":"2. Deleting an expense from an activity not in the list","lastModifiedDate":"2024-04-12"},{"lineNumber":411,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `removeexpense 0`","lastModifiedDate":"2024-04-08"},{"lineNumber":412,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":413,"author":{"gitId":"daryltay415"},"content":"       Expected: No expense is removed and an error message will be shown. ","lastModifiedDate":"2024-04-12"},{"lineNumber":414,"author":{"gitId":"ChinYanXu"},"content":"        ","lastModifiedDate":"2024-03-27"},{"lineNumber":415,"author":{"gitId":"daryltay415"},"content":"### Converting currency","lastModifiedDate":"2024-04-08"},{"lineNumber":416,"author":{"gitId":"daryltay415"},"content":"1. Converting a local currency to a foreign currency","lastModifiedDate":"2024-04-14"},{"lineNumber":417,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `change 100 /from sgd /to jyp`","lastModifiedDate":"2024-04-08"},{"lineNumber":418,"author":{"gitId":"ChinYanXu"},"content":"   ","lastModifiedDate":"2024-03-27"},{"lineNumber":419,"author":{"gitId":"daryltay415"},"content":"       Expected: The conversion of 100 singapore dollars to japanese yen will be shown","lastModifiedDate":"2024-04-08"},{"lineNumber":420,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":421,"author":{"gitId":"daryltay415"},"content":"### Add tag","lastModifiedDate":"2024-04-12"},{"lineNumber":422,"author":{"gitId":"daryltay415"},"content":"1. Adding a tag to a travel activity currently in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":423,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisites: List all the travel activities using the `list` command.","lastModifiedDate":"2024-04-08"},{"lineNumber":424,"author":{"gitId":"ChinYanXu"},"content":"    ","lastModifiedDate":"2024-03-27"},{"lineNumber":425,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `tag 1 Friday`","lastModifiedDate":"2024-04-08"},{"lineNumber":426,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":427,"author":{"gitId":"daryltay415"},"content":"       Expected: A tag will be added to the first activity in the list and the details","lastModifiedDate":"2024-04-08"},{"lineNumber":428,"author":{"gitId":"daryltay415"},"content":"       of the activity will be shown","lastModifiedDate":"2024-04-08"},{"lineNumber":429,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":430,"author":{"gitId":"daryltay415"},"content":"2. Adding a tag to a travel activity not in the list   ","lastModifiedDate":"2024-04-08"},{"lineNumber":431,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `tag 0 Friday`","lastModifiedDate":"2024-04-08"},{"lineNumber":432,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":433,"author":{"gitId":"daryltay415"},"content":"       Expected: No tag will be added and a error message will be shown ","lastModifiedDate":"2024-04-08"},{"lineNumber":434,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":435,"author":{"gitId":"daryltay415"},"content":"### Remove tag","lastModifiedDate":"2024-04-12"},{"lineNumber":436,"author":{"gitId":"daryltay415"},"content":"1. Removing a tag from a travel activity currently in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":437,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisites: List all the travel activities using the `list` command.","lastModifiedDate":"2024-04-08"},{"lineNumber":438,"author":{"gitId":"ChenKangg"},"content":"   ","lastModifiedDate":"2024-03-28"},{"lineNumber":439,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `untag 1`","lastModifiedDate":"2024-04-08"},{"lineNumber":440,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":441,"author":{"gitId":"daryltay415"},"content":"       Expected: The tag will be removed from the first activity and the details of the activity will be shown","lastModifiedDate":"2024-04-08"},{"lineNumber":442,"author":{"gitId":"ChinYanXu"},"content":"   ","lastModifiedDate":"2024-03-27"},{"lineNumber":443,"author":{"gitId":"daryltay415"},"content":"2. Removing a tag from a travel activity not in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":444,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `untag 0`","lastModifiedDate":"2024-04-08"},{"lineNumber":445,"author":{"gitId":"ChenKangg"},"content":"   ","lastModifiedDate":"2024-03-28"},{"lineNumber":446,"author":{"gitId":"daryltay415"},"content":"       Expected: No tag will be removed and an error message will be shown ","lastModifiedDate":"2024-04-08"},{"lineNumber":447,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":448,"author":{"gitId":"daryltay415"},"content":"### List tags","lastModifiedDate":"2024-04-08"},{"lineNumber":449,"author":{"gitId":"daryltay415"},"content":"1. Listing out all the tags in the current list","lastModifiedDate":"2024-04-08"},{"lineNumber":450,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisites: There must be tags in the current list","lastModifiedDate":"2024-04-08"},{"lineNumber":451,"author":{"gitId":"ChenKangg"},"content":"   ","lastModifiedDate":"2024-03-28"},{"lineNumber":452,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `listtags`","lastModifiedDate":"2024-04-08"},{"lineNumber":453,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":454,"author":{"gitId":"daryltay415"},"content":"       Expected: All the tags currently in the list will be shown in a list in alphabetical order","lastModifiedDate":"2024-04-08"},{"lineNumber":455,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":456,"author":{"gitId":"daryltay415"},"content":"### Checking a travel activity","lastModifiedDate":"2024-04-08"},{"lineNumber":457,"author":{"gitId":"daryltay415"},"content":"1. Checking a travel activity currently in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":458,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisites: List all the travel activities using the `list` command.","lastModifiedDate":"2024-04-08"},{"lineNumber":459,"author":{"gitId":"daryltay415"},"content":"   ","lastModifiedDate":"2024-04-08"},{"lineNumber":460,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `check 1`","lastModifiedDate":"2024-04-08"},{"lineNumber":461,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":462,"author":{"gitId":"daryltay415"},"content":"       Expected: The first activity will be marked with an \"X\" and the details of the activity will be shown","lastModifiedDate":"2024-04-08"},{"lineNumber":463,"author":{"gitId":"daryltay415"},"content":"   ","lastModifiedDate":"2024-04-08"},{"lineNumber":464,"author":{"gitId":"daryltay415"},"content":"2. Checking a travel activity not in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":465,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `check 0`","lastModifiedDate":"2024-04-08"},{"lineNumber":466,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":467,"author":{"gitId":"daryltay415"},"content":"        Expected: No activity will be marked and an error will be shown","lastModifiedDate":"2024-04-08"},{"lineNumber":468,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":469,"author":{"gitId":"daryltay415"},"content":"### Unchecking a travel activity","lastModifiedDate":"2024-04-08"},{"lineNumber":470,"author":{"gitId":"daryltay415"},"content":"1. Unchecking a checked travel activity in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":471,"author":{"gitId":"daryltay415"},"content":"    1. Prerequisites: List all the travel activities using the `list` command.","lastModifiedDate":"2024-04-08"},{"lineNumber":472,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":473,"author":{"gitId":"daryltay415"},"content":"    2. Test case: `uncheck 1`","lastModifiedDate":"2024-04-08"},{"lineNumber":474,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":475,"author":{"gitId":"daryltay415"},"content":"       Expected: The first activity will be unmarked and the details of the activity will be shown","lastModifiedDate":"2024-04-08"},{"lineNumber":476,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":477,"author":{"gitId":"daryltay415"},"content":"2. Unchecking a travel activity not in the list","lastModifiedDate":"2024-04-08"},{"lineNumber":478,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `uncheck 0`","lastModifiedDate":"2024-04-08"},{"lineNumber":479,"author":{"gitId":"daryltay415"},"content":"   ","lastModifiedDate":"2024-04-08"},{"lineNumber":480,"author":{"gitId":"daryltay415"},"content":"       Expected: No activity will be unmarked and an error message will be shown","lastModifiedDate":"2024-04-08"},{"lineNumber":481,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":482,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":483,"author":{"gitId":"daryltay415"},"content":"### Show help","lastModifiedDate":"2024-04-08"},{"lineNumber":484,"author":{"gitId":"daryltay415"},"content":"1. Shows all the commands the user can input","lastModifiedDate":"2024-04-08"},{"lineNumber":485,"author":{"gitId":"daryltay415"},"content":"    1. Test case: `help`","lastModifiedDate":"2024-04-08"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":487,"author":{"gitId":"daryltay415"},"content":"       Expected: All the commands will be shown ","lastModifiedDate":"2024-04-14"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"ChinYanXu":10,"EugeneChanJiajun":73,"daryltay415":344,"ChenKangg":17,"annnniexu":15,"-":29}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EugeneChanJiajun"},"content":"# Omnitravel","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"EugeneChanJiajun"},"content":"Omnitravel is a CLI (Command-Line Interface) app that simplifies travel planning and organization. ","lastModifiedDate":"2024-04-08"},{"lineNumber":5,"author":{"gitId":"EugeneChanJiajun"},"content":"Users can add accommodations, food, and landmarks to their itinerary, manage activities easily, and track expenses. ","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"EugeneChanJiajun"},"content":"The app offers search, filtering, and currency exchange features, ensuring a smooth travel planning experience.","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"EugeneChanJiajun":5,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"EugeneChanJiajun"},"content":"* [Introduction](#introduction)","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"EugeneChanJiajun"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"EugeneChanJiajun"},"content":"* [Features](#features-)","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Adding a general travel activity](#adding-a-general-travel-activity--add)","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Add an accommodation activity type into the list](#add-an-accommodation-activity-type-into-the-list--accommodation)","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Add a food activity type into the list](#add-a-food-activity-type-into-the-list--food)","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Add a landmark activity type into the list](#add-a-landmark-activity-type-into-the-list--landmark)","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Find activity from the list using activity description](#find-activity-from-the-list-using-activity-description--find)","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Deleting a travel activity](#deleting-a-travel-activity--delete)","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Listing all the travel activities](#listing-all-the-travel-activities--list)","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Check a travel activity](#check-a-travel-activity--check)","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Uncheck a travel activity](#uncheck-a-travel-activity--uncheck)","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Updating a travel activity](#updating-a-travel-activity--update)","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Adding a tag](#adding-a-tag-tag)","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Removing a tag](#removing-a-tag-untag)","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Find an activity from the list using activity tag](#find-activity-from-the-list-using-activity-tag-findtag)","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [List tags from the list](#list-tags-from-the-list--listtags)","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Find activity from the list using activity type](#find-activity-from-the-list-using-activity-type--findtype)","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Adding an expense amount](#adding-an-expense-amount-expense)","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Removing an expense amount](#removing-an-expense-amount-removeexpense)","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Calculating total expense](#calculating-total-expense-amount-totalexpense)","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"EugeneChanJiajun"},"content":"    * [Converting a currency](#converting-a-currency--change)","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"EugeneChanJiajun"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"daryltay415"},"content":"OmniTravel is a software that **allows travellers to store their travel plans and expenses in a","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"daryltay415"},"content":"list via a Command Line Interface**. ","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"EugeneChanJiajun"},"content":"1. Ensure you have Java 11 installed in your Computer.","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"daryltay415"},"content":"2. Download the latest omni.jar from [here](https://github.com/AY2324S2-CS2113-T12-4/tp/releases/tag/tpv2.1).","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"EugeneChanJiajun"},"content":"3. Copy the file to the folder you want to use as the home folder for your chatbot.","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"EugeneChanJiajun"},"content":"4. Open a command terminal, cd into the folder you put the jar file in","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"EugeneChanJiajun"},"content":"5. Use the java -jar omni.jar command to run the application.","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"ChinYanXu"},"content":"6. A welcome message similar to the one below should appear in a few seconds.","lastModifiedDate":"2024-04-08"},{"lineNumber":43,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"EugeneChanJiajun"},"content":"No existing database found! Creating a new save file for you!","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":46,"author":{"gitId":"EugeneChanJiajun"},"content":" ____  _      _      _  _____  ____  ____  _     _____ _","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"EugeneChanJiajun"},"content":"/  _ \\/ \\__/|/ \\  /|/ \\/__ __\\/  __\\/  _ \\/ \\ |\\/  __// \\","lastModifiedDate":"2024-04-08"},{"lineNumber":48,"author":{"gitId":"EugeneChanJiajun"},"content":"| / \\|| |\\/||| |\\ ||| |  / \\  |  \\/|| / \\|| | //|  \\  | |","lastModifiedDate":"2024-04-08"},{"lineNumber":49,"author":{"gitId":"EugeneChanJiajun"},"content":"| \\_/|| |  ||| | \\||| |  | |  |    /| |-||| \\// |  /_ | |_/\\","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"EugeneChanJiajun"},"content":"\\____/\\_/  \\|\\_/  \\|\\_/  \\_/  \\_/\\_\\\\_/ \\|\\__/  \\____\\\\____/)","lastModifiedDate":"2024-04-08"},{"lineNumber":51,"author":{"gitId":"EugeneChanJiajun"},"content":"Hello","lastModifiedDate":"2024-04-08"},{"lineNumber":52,"author":{"gitId":"EugeneChanJiajun"},"content":"How may I assist you?","lastModifiedDate":"2024-04-08"},{"lineNumber":53,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":55,"author":{"gitId":"EugeneChanJiajun"},"content":"7. Type the `help` command in the command box and press enter to open the help window.","lastModifiedDate":"2024-04-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"daryltay415"},"content":"\u003e 📒 Notes about the command format :","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"daryltay415"},"content":"\u003e * The words that are in `UPPER_CASE` represents the parameters that the users are required to input","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"daryltay415"},"content":"\u003e e.g. `delete INDEX`, `INDEX` is a parameter which can be used as `delete 1`.","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"daryltay415"},"content":"\u003e * Commands such as `help` and `bye` do not require additional parameters. Hence, any extra parameters will be ignored. ","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"daryltay415"},"content":"\u003e e.g. `help 123` will just be intepreted as `help`.","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"daryltay415"},"content":"\u003e * Words that are in square brackets such as `[/tag TAG]` indicates that it is","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"daryltay415"},"content":"\u003e optional to include in the command.","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"EugeneChanJiajun"},"content":"\u003e * Users should not use any `/` into their input descriptions unless using for input command format.","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"EugeneChanJiajun"},"content":"### Adding a general travel activity : `add`","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"EugeneChanJiajun"},"content":"Adds a general travel activity into the travel activity list.","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"EugeneChanJiajun"},"content":"* This is for activities that do not fall under the other activity types. EG. visiting a country.","lastModifiedDate":"2024-04-08"},{"lineNumber":71,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"EugeneChanJiajun"},"content":"Format: `add DESCRIPTION /date YYYY-MM-DD /duration DURATION [/tag TAG]`","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage:","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"EugeneChanJiajun"},"content":"* `add Go to Japan /date 2025-03-14 /duration 7 hours`","lastModifiedDate":"2024-04-08"},{"lineNumber":76,"author":{"gitId":"EugeneChanJiajun"},"content":"* `add Go to Hong Kong /date 2025-08-25 /duration 6 hours /tag with family`","lastModifiedDate":"2024-04-08"},{"lineNumber":77,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":78,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":79,"author":{"gitId":"EugeneChanJiajun"},"content":"Without tag","lastModifiedDate":"2024-04-08"},{"lineNumber":80,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":81,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":82,"author":{"gitId":"EugeneChanJiajun"},"content":"I added a new travel activity","lastModifiedDate":"2024-04-08"},{"lineNumber":83,"author":{"gitId":"EugeneChanJiajun"},"content":"Go to Japan  :14 Mar 2025 :7 hour","lastModifiedDate":"2024-04-08"},{"lineNumber":84,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":85,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":86,"author":{"gitId":"EugeneChanJiajun"},"content":"With tag","lastModifiedDate":"2024-04-08"},{"lineNumber":87,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":88,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":89,"author":{"gitId":"EugeneChanJiajun"},"content":"I added a new travel activity","lastModifiedDate":"2024-04-08"},{"lineNumber":90,"author":{"gitId":"EugeneChanJiajun"},"content":"Go to Hong Kong  :25 Aug 2025 :6 hours (with family)","lastModifiedDate":"2024-04-08"},{"lineNumber":91,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":92,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":93,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"EugeneChanJiajun"},"content":"### Add an accommodation activity type into the list : `accommodation`","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"EugeneChanJiajun"},"content":"Adds an accommodation type travel activity into the travel activity list.","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"EugeneChanJiajun"},"content":"Format: `accommodation DESCRIPTION /date YYYY-MM-DD /duration DURATION [/tag TAG]`","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage:","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"EugeneChanJiajun"},"content":"* `accommodation Four Seasons Hotel /date 2025-03-14 /duration 2 weeks`","lastModifiedDate":"2024-04-08"},{"lineNumber":101,"author":{"gitId":"EugeneChanJiajun"},"content":"* `accommodation Four Seasons Hotel /date 2025-08-25 /duration 2 weeks /tag first hotel`","lastModifiedDate":"2024-04-08"},{"lineNumber":102,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":103,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":104,"author":{"gitId":"EugeneChanJiajun"},"content":"Without tag","lastModifiedDate":"2024-04-08"},{"lineNumber":105,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":106,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":107,"author":{"gitId":"EugeneChanJiajun"},"content":"I added a new accommodation","lastModifiedDate":"2024-04-08"},{"lineNumber":108,"author":{"gitId":"EugeneChanJiajun"},"content":"Accommodation: Four Seasons Hotel :14 Mar 2025 :2 weeks","lastModifiedDate":"2024-04-08"},{"lineNumber":109,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":110,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":111,"author":{"gitId":"EugeneChanJiajun"},"content":"With tag","lastModifiedDate":"2024-04-08"},{"lineNumber":112,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":113,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":114,"author":{"gitId":"EugeneChanJiajun"},"content":"I added a new accommodation","lastModifiedDate":"2024-04-08"},{"lineNumber":115,"author":{"gitId":"EugeneChanJiajun"},"content":"Accommodation: Four Seasons Hotel :25 Aug 2025 :2 weeks (first hotel)","lastModifiedDate":"2024-04-08"},{"lineNumber":116,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":117,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":118,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"EugeneChanJiajun"},"content":"### Add a food activity type into the list : `food`","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"EugeneChanJiajun"},"content":"Adds a food type travel activity into the travel activity list","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"EugeneChanJiajun"},"content":"Format: `food DESCRIPTION /date YYYY-MM-DD /duration DURATION [/tag TAG]`","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage:","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"EugeneChanJiajun"},"content":"* `food Mala Hotpot /date 2025-03-14 /duration 2 hours`","lastModifiedDate":"2024-04-08"},{"lineNumber":126,"author":{"gitId":"EugeneChanJiajun"},"content":"* `food Mala Hotpot /date 2025-03-14 /duration 2 hours /tag very spicy`","lastModifiedDate":"2024-04-08"},{"lineNumber":127,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":128,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":129,"author":{"gitId":"EugeneChanJiajun"},"content":"Without tag","lastModifiedDate":"2024-04-08"},{"lineNumber":130,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":131,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":132,"author":{"gitId":"EugeneChanJiajun"},"content":"I added a new food activity","lastModifiedDate":"2024-04-08"},{"lineNumber":133,"author":{"gitId":"EugeneChanJiajun"},"content":"Food: Mala Hotpot :14 Mar 2025 :2 hours","lastModifiedDate":"2024-04-08"},{"lineNumber":134,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":135,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":136,"author":{"gitId":"EugeneChanJiajun"},"content":"With tag","lastModifiedDate":"2024-04-08"},{"lineNumber":137,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":138,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":139,"author":{"gitId":"EugeneChanJiajun"},"content":"I added a new food activity","lastModifiedDate":"2024-04-08"},{"lineNumber":140,"author":{"gitId":"EugeneChanJiajun"},"content":"Food: Mala Hotpot :14 Mar 2025 :2 hours (very spicy)","lastModifiedDate":"2024-04-08"},{"lineNumber":141,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":142,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":143,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":144,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"EugeneChanJiajun"},"content":"### Add a landmark activity type into the list : `landmark`","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"EugeneChanJiajun"},"content":"Adds a landmark type travel activity into the travel activity list","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"EugeneChanJiajun"},"content":"Format: `landmark DESCRIPTION /date YYYY-MM-DD /duration DURATION [/tag TAG]`","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":150,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage:","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"EugeneChanJiajun"},"content":"* `landmark Eiffel Tower /date 2025-03-14 /duration 2 hours`","lastModifiedDate":"2024-04-08"},{"lineNumber":152,"author":{"gitId":"EugeneChanJiajun"},"content":"* `landmark Eiffel Tower /date 2025-03-14 /duration 2 hours /tag go up tower`","lastModifiedDate":"2024-04-08"},{"lineNumber":153,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":154,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":155,"author":{"gitId":"EugeneChanJiajun"},"content":"Without tag","lastModifiedDate":"2024-04-08"},{"lineNumber":156,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":157,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":158,"author":{"gitId":"EugeneChanJiajun"},"content":"I added a new landmark","lastModifiedDate":"2024-04-08"},{"lineNumber":159,"author":{"gitId":"EugeneChanJiajun"},"content":"Landmark: Eiffel Tower :14 Mar 2025 :2 hours","lastModifiedDate":"2024-04-08"},{"lineNumber":160,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":161,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":162,"author":{"gitId":"EugeneChanJiajun"},"content":"With tag","lastModifiedDate":"2024-04-08"},{"lineNumber":163,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":164,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":165,"author":{"gitId":"EugeneChanJiajun"},"content":"I added a new landmark","lastModifiedDate":"2024-04-08"},{"lineNumber":166,"author":{"gitId":"EugeneChanJiajun"},"content":"Landmark: Eiffel Tower :14 Mar 2025 :2 hours (go up tower)","lastModifiedDate":"2024-04-08"},{"lineNumber":167,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":168,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":169,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"ChinYanXu"},"content":"### Find activity from the list using activity description : `find`","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"ChinYanXu"},"content":"Find activities based on their description. All activities with the given description will be listed out.","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"EugeneChanJiajun"},"content":"Format: `find DESCRIPTION [/exclude KEYWORD]`","lastModifiedDate":"2024-04-12"},{"lineNumber":174,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"ChinYanXu"},"content":"* `DESCRIPTION` has to be a word, a phrase or a segment of the activity description to find the activity","lastModifiedDate":"2024-04-14"},{"lineNumber":176,"author":{"gitId":"ChinYanXu"},"content":"* `KEYWORD` has to be a word, a phrase or a segment of the activity description to exclude the activity","lastModifiedDate":"2024-04-14"},{"lineNumber":177,"author":{"gitId":"ChinYanXu"},"content":"* `/exclude KEYWORD` will exclude any activity with `KEYWORD` found in the **description** of the activity","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage (assuming saizeriya is in list):","lastModifiedDate":"2024-04-08"},{"lineNumber":180,"author":{"gitId":"EugeneChanJiajun"},"content":"* `find saizeriya`","lastModifiedDate":"2024-04-08"},{"lineNumber":181,"author":{"gitId":"ChinYanXu"},"content":"* `find saizeriya /exclude pizza`","lastModifiedDate":"2024-04-14"},{"lineNumber":182,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":183,"author":{"gitId":"ChinYanXu"},"content":"Expected outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"ChinYanXu"},"content":"Without `/exclude`","lastModifiedDate":"2024-04-14"},{"lineNumber":185,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":186,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":187,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":188,"author":{"gitId":"EugeneChanJiajun"},"content":"Here are what you are looking for:","lastModifiedDate":"2024-04-08"},{"lineNumber":189,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 1. Food: saizeriya pizza :14 Mar 2025 :2 hours","lastModifiedDate":"2024-04-12"},{"lineNumber":190,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 2. Food: saizeriya pasta :14 Mar 2025 :2 hours","lastModifiedDate":"2024-04-12"},{"lineNumber":191,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-12"},{"lineNumber":192,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":193,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":194,"author":{"gitId":"EugeneChanJiajun"},"content":"With `/exclude`:","lastModifiedDate":"2024-04-12"},{"lineNumber":195,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":196,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":197,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-12"},{"lineNumber":198,"author":{"gitId":"EugeneChanJiajun"},"content":"Here are what you are looking for:","lastModifiedDate":"2024-04-12"},{"lineNumber":199,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 1. Food: saizeriya pasta :14 Mar 2025 :2 hours","lastModifiedDate":"2024-04-12"},{"lineNumber":200,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":201,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":202,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":203,"author":{"gitId":"EugeneChanJiajun"},"content":"### Deleting a travel activity : `delete`","lastModifiedDate":"2024-04-01"},{"lineNumber":204,"author":{"gitId":"EugeneChanJiajun"},"content":"Deletes a travel activity from the travel activity list","lastModifiedDate":"2024-04-01"},{"lineNumber":205,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":206,"author":{"gitId":"ChinYanXu"},"content":"Format: `delete ACTIVITY`","lastModifiedDate":"2024-04-09"},{"lineNumber":207,"author":{"gitId":"ChinYanXu"},"content":"* `ACTIVITY` can be an index of an activity or a keyword found in the description of an activity in the list of travel ","lastModifiedDate":"2024-04-09"},{"lineNumber":208,"author":{"gitId":"ChinYanXu"},"content":"* activities. If the user writes a number only the activity in that particular index on the list gets deleted. ","lastModifiedDate":"2024-04-09"},{"lineNumber":209,"author":{"gitId":"ChinYanXu"},"content":"* If the user writes a keyword then every activity with that keyword in its description gets deleted.","lastModifiedDate":"2024-04-09"},{"lineNumber":210,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":211,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage: ","lastModifiedDate":"2024-04-08"},{"lineNumber":212,"author":{"gitId":"EugeneChanJiajun"},"content":"* `delete 1`","lastModifiedDate":"2024-04-08"},{"lineNumber":213,"author":{"gitId":"ChinYanXu"},"content":"* `delete Eiffel`","lastModifiedDate":"2024-04-09"},{"lineNumber":214,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":215,"author":{"gitId":"ChinYanXu"},"content":"Expected outcome:","lastModifiedDate":"2024-04-14"},{"lineNumber":216,"author":{"gitId":"ChinYanXu"},"content":"When ACTIVITY is a number","lastModifiedDate":"2024-04-14"},{"lineNumber":217,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":218,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":219,"author":{"gitId":"EugeneChanJiajun"},"content":"I have removed this activity:","lastModifiedDate":"2024-04-08"},{"lineNumber":220,"author":{"gitId":"ChinYanXu"},"content":"1. Accommodation: Four Seasons Hotel :14 Mar 2025 :2 days","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":222,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":223,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":224,"author":{"gitId":"ChinYanXu"},"content":"When ACTIVITY is a keyword","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"ChinYanXu"},"content":"```","lastModifiedDate":"2024-04-09"},{"lineNumber":226,"author":{"gitId":"ChinYanXu"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-09"},{"lineNumber":227,"author":{"gitId":"ChinYanXu"},"content":"I have removed this activity:","lastModifiedDate":"2024-04-09"},{"lineNumber":228,"author":{"gitId":"ChinYanXu"},"content":"1. Landmark: Eiffel Tower :14 Mar 2025 :2 hours (go up tower)","lastModifiedDate":"2024-04-09"},{"lineNumber":229,"author":{"gitId":"ChinYanXu"},"content":"2. Landmark: Eiffel Tower Food Stand :14 Mar 2025 :1 hours (dinner)","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"ChinYanXu"},"content":"3. Accommodation: Hotel beside Eiffel Tower :14 Mar 2025 :2 days (rest)","lastModifiedDate":"2024-04-14"},{"lineNumber":231,"author":{"gitId":"ChinYanXu"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-09"},{"lineNumber":232,"author":{"gitId":"ChinYanXu"},"content":"```","lastModifiedDate":"2024-04-09"},{"lineNumber":233,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":234,"author":{"gitId":"EugeneChanJiajun"},"content":"### Listing all the travel activities : `list`","lastModifiedDate":"2024-04-01"},{"lineNumber":235,"author":{"gitId":"annnniexu"},"content":"Shows all the travel activities for including their tags and expenses. ","lastModifiedDate":"2024-04-12"},{"lineNumber":236,"author":{"gitId":"annnniexu"},"content":"Shows all activities for given date if date is provided.","lastModifiedDate":"2024-04-12"},{"lineNumber":237,"author":{"gitId":"annnniexu"},"content":"Sorts by date if sort is enabled.","lastModifiedDate":"2024-04-12"},{"lineNumber":238,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":239,"author":{"gitId":"annnniexu"},"content":"Format: `list [/date DATE /sort]`","lastModifiedDate":"2024-04-12"},{"lineNumber":240,"author":{"gitId":"EugeneChanJiajun"},"content":"* Using `list` with `/date DATE` will show all the activities with date `DATE`.","lastModifiedDate":"2024-04-14"},{"lineNumber":241,"author":{"gitId":"EugeneChanJiajun"},"content":"* Using `list` with `/sort` will show the list sorted by date.","lastModifiedDate":"2024-04-14"},{"lineNumber":242,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage: ","lastModifiedDate":"2024-04-08"},{"lineNumber":244,"author":{"gitId":"EugeneChanJiajun"},"content":"* `list`","lastModifiedDate":"2024-04-08"},{"lineNumber":245,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":246,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":247,"author":{"gitId":"annnniexu"},"content":"Without date and sort","lastModifiedDate":"2024-04-12"},{"lineNumber":248,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":249,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":250,"author":{"gitId":"annnniexu"},"content":"Here are the travel activities for all dates:","lastModifiedDate":"2024-04-12"},{"lineNumber":251,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 1. General: Go to Japan  :14 Mar 2025 :7 hour","lastModifiedDate":"2024-04-08"},{"lineNumber":252,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 2. General: Go to Hong Kong  :25 Aug 2025 :6 hours (with family)","lastModifiedDate":"2024-04-08"},{"lineNumber":253,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 3. Accommodation: Four Seasons Hotel :14 Mar 2025 :2 weeks","lastModifiedDate":"2024-04-08"},{"lineNumber":254,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 4. Accommodation: Four Seasons Hotel :25 Aug 2025 :2 weeks (first hotel)","lastModifiedDate":"2024-04-08"},{"lineNumber":255,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 5. Food: Mala Hotpot :14 Mar 2025 :2 hours","lastModifiedDate":"2024-04-08"},{"lineNumber":256,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 6. Food: Mala Hotpot :14 Mar 2025 :2 hours (very spicy)","lastModifiedDate":"2024-04-08"},{"lineNumber":257,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 7. Landmark: Eiffel Tower :14 Mar 2025 :2 hours","lastModifiedDate":"2024-04-08"},{"lineNumber":258,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 8. Landmark: Eiffel Tower :14 Mar 2025 :2 hours (go up tower)","lastModifiedDate":"2024-04-08"},{"lineNumber":259,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 9. Food: saizeriya :14 Mar 2025 :2 hours","lastModifiedDate":"2024-04-08"},{"lineNumber":260,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":261,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":262,"author":{"gitId":"annnniexu"},"content":"* `list /date 2025-08-25`","lastModifiedDate":"2024-04-12"},{"lineNumber":263,"author":{"gitId":"annnniexu"},"content":"Expected outcome: With date","lastModifiedDate":"2024-04-12"},{"lineNumber":264,"author":{"gitId":"annnniexu"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":265,"author":{"gitId":"annnniexu"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-12"},{"lineNumber":266,"author":{"gitId":"annnniexu"},"content":"Here are the travel activities for 2025-08-05:","lastModifiedDate":"2024-04-12"},{"lineNumber":267,"author":{"gitId":"annnniexu"},"content":"[ ] 1. General: Go to Hong Kong  :25 Aug 2025 :6 hours (with family)","lastModifiedDate":"2024-04-12"},{"lineNumber":268,"author":{"gitId":"annnniexu"},"content":"[ ] 4. Accommodation: Four Seasons Hotel :25 Aug 2025 :2 weeks (first hotel)","lastModifiedDate":"2024-04-12"},{"lineNumber":269,"author":{"gitId":"annnniexu"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-12"},{"lineNumber":270,"author":{"gitId":"annnniexu"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":271,"author":{"gitId":"annnniexu"},"content":"* `list /sort`","lastModifiedDate":"2024-04-12"},{"lineNumber":272,"author":{"gitId":"annnniexu"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":273,"author":{"gitId":"annnniexu"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-12"},{"lineNumber":274,"author":{"gitId":"annnniexu"},"content":"Here are the travel activities for all dates:","lastModifiedDate":"2024-04-12"},{"lineNumber":275,"author":{"gitId":"annnniexu"},"content":"[ ] 1. General: Go to Japan  :14 Mar 2025 :7 hour","lastModifiedDate":"2024-04-12"},{"lineNumber":276,"author":{"gitId":"annnniexu"},"content":"[ ] 2. Accommodation: Four Seasons Hotel :14 Mar 2025 :2 weeks","lastModifiedDate":"2024-04-12"},{"lineNumber":277,"author":{"gitId":"annnniexu"},"content":"[ ] 3. Food: Mala Hotpot :14 Mar 2025 :2 hours","lastModifiedDate":"2024-04-12"},{"lineNumber":278,"author":{"gitId":"annnniexu"},"content":"[ ] 4. Food: Mala Hotpot :14 Mar 2025 :2 hours (very spicy)","lastModifiedDate":"2024-04-12"},{"lineNumber":279,"author":{"gitId":"annnniexu"},"content":"[ ] 5. Landmark: Eiffel Tower :14 Mar 2025 :2 hours","lastModifiedDate":"2024-04-12"},{"lineNumber":280,"author":{"gitId":"annnniexu"},"content":"[ ] 6. Landmark: Eiffel Tower :14 Mar 2025 :2 hours (go up tower)","lastModifiedDate":"2024-04-12"},{"lineNumber":281,"author":{"gitId":"annnniexu"},"content":"[ ] 7. Food: saizeriya :14 Mar 2025 :2 hours","lastModifiedDate":"2024-04-12"},{"lineNumber":282,"author":{"gitId":"annnniexu"},"content":"[ ] 8. General: Go to Hong Kong  :25 Aug 2025 :6 hours (with family)","lastModifiedDate":"2024-04-12"},{"lineNumber":283,"author":{"gitId":"annnniexu"},"content":"[ ] 9. Accommodation: Four Seasons Hotel :25 Aug 2025 :2 weeks (first hotel)","lastModifiedDate":"2024-04-12"},{"lineNumber":284,"author":{"gitId":"annnniexu"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-12"},{"lineNumber":285,"author":{"gitId":"annnniexu"},"content":"```","lastModifiedDate":"2024-04-12"},{"lineNumber":286,"author":{"gitId":"EugeneChanJiajun"},"content":"### Check a travel activity : `check`","lastModifiedDate":"2024-04-01"},{"lineNumber":287,"author":{"gitId":"annnniexu"},"content":"Checks a travel activity as completed.","lastModifiedDate":"2024-04-03"},{"lineNumber":288,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":289,"author":{"gitId":"annnniexu"},"content":"Format: `check INDEX`","lastModifiedDate":"2024-04-03"},{"lineNumber":290,"author":{"gitId":"annnniexu"},"content":"* `INDEX` has to be a number that is shown in the list of travel activities","lastModifiedDate":"2024-04-03"},{"lineNumber":291,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":292,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage: ","lastModifiedDate":"2024-04-08"},{"lineNumber":293,"author":{"gitId":"EugeneChanJiajun"},"content":"* `check 1`","lastModifiedDate":"2024-04-08"},{"lineNumber":294,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":295,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":296,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":297,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":298,"author":{"gitId":"EugeneChanJiajun"},"content":"I have checked this activity:","lastModifiedDate":"2024-04-08"},{"lineNumber":299,"author":{"gitId":"EugeneChanJiajun"},"content":"[X] 1. General: Go to Japan  :14 Mar 2025 :7 hour","lastModifiedDate":"2024-04-08"},{"lineNumber":300,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":301,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":302,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":303,"author":{"gitId":"EugeneChanJiajun"},"content":"### Uncheck a travel activity : `uncheck`","lastModifiedDate":"2024-04-01"},{"lineNumber":304,"author":{"gitId":"annnniexu"},"content":"Unchecks travel activity and sets it to uncompleted.","lastModifiedDate":"2024-04-03"},{"lineNumber":305,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":306,"author":{"gitId":"annnniexu"},"content":"Format: `uncheck INDEX`","lastModifiedDate":"2024-04-03"},{"lineNumber":307,"author":{"gitId":"annnniexu"},"content":"* `INDEX` has to be a number that is shown in the list of travel activities","lastModifiedDate":"2024-04-03"},{"lineNumber":308,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":309,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage: ","lastModifiedDate":"2024-04-08"},{"lineNumber":310,"author":{"gitId":"EugeneChanJiajun"},"content":"* `uncheck 1`","lastModifiedDate":"2024-04-08"},{"lineNumber":311,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":312,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":313,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":314,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":315,"author":{"gitId":"EugeneChanJiajun"},"content":"I have unchecked this activity:","lastModifiedDate":"2024-04-08"},{"lineNumber":316,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 1. General: Go to Japan  :14 Mar 2025 :7 hour","lastModifiedDate":"2024-04-08"},{"lineNumber":317,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":318,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":319,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":320,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":321,"author":{"gitId":"EugeneChanJiajun"},"content":"### Updating a travel activity : `update`","lastModifiedDate":"2024-04-01"},{"lineNumber":322,"author":{"gitId":"EugeneChanJiajun"},"content":"Updates the date, duration and tag of a travel activity","lastModifiedDate":"2024-04-01"},{"lineNumber":323,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":324,"author":{"gitId":"EugeneChanJiajun"},"content":"Format: `update INDEX /date YYYY-MM-DD /duration DURATION [/tag TAG]`","lastModifiedDate":"2024-04-01"},{"lineNumber":325,"author":{"gitId":"EugeneChanJiajun"},"content":"* `INDEX` has to be a number that is shown in the list of travel activities","lastModifiedDate":"2024-04-01"},{"lineNumber":326,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":327,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage:","lastModifiedDate":"2024-04-01"},{"lineNumber":328,"author":{"gitId":"EugeneChanJiajun"},"content":"* `update 1 /date 2026-12-14 /duration 2 hours`","lastModifiedDate":"2024-04-08"},{"lineNumber":329,"author":{"gitId":"EugeneChanJiajun"},"content":"* `update 2 /date 2026-12-12 /duration 3 hours /tag Important`","lastModifiedDate":"2024-04-08"},{"lineNumber":330,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":331,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":332,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":333,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":334,"author":{"gitId":"EugeneChanJiajun"},"content":"I have updated this task","lastModifiedDate":"2024-04-08"},{"lineNumber":335,"author":{"gitId":"EugeneChanJiajun"},"content":"from: Go to Japan  :14 Mar 2025 :7 hour","lastModifiedDate":"2024-04-08"},{"lineNumber":336,"author":{"gitId":"EugeneChanJiajun"},"content":"to: Go to Japan  :14 Dec 2026 :2 hours","lastModifiedDate":"2024-04-08"},{"lineNumber":337,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":338,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":339,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":340,"author":{"gitId":"EugeneChanJiajun"},"content":"### Adding a tag: `tag`","lastModifiedDate":"2024-04-01"},{"lineNumber":341,"author":{"gitId":"ChenKangg"},"content":"Adds a new tag to an existing travel activity. The tag can be a short description to help a user better organise ","lastModifiedDate":"2024-04-09"},{"lineNumber":342,"author":{"gitId":"ChenKangg"},"content":"their travel activities. ","lastModifiedDate":"2024-04-09"},{"lineNumber":343,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":344,"author":{"gitId":"EugeneChanJiajun"},"content":"\u003e 📒 Notes about the tag command:","lastModifiedDate":"2024-04-12"},{"lineNumber":345,"author":{"gitId":"EugeneChanJiajun"},"content":"\u003e * The tag that is included into the input does not remove any whitespaces that users may have accidentally included.","lastModifiedDate":"2024-04-12"},{"lineNumber":346,"author":{"gitId":"EugeneChanJiajun"},"content":"\u003e This gives users the option to include whitespaces in their tags.","lastModifiedDate":"2024-04-12"},{"lineNumber":347,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":348,"author":{"gitId":"ChenKangg"},"content":"Format: `tag INDEX TAGNAME`","lastModifiedDate":"2024-04-03"},{"lineNumber":349,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":350,"author":{"gitId":"ChenKangg"},"content":"* The `INDEX` must be a valid activity index.","lastModifiedDate":"2024-04-03"},{"lineNumber":351,"author":{"gitId":"daryltay415"},"content":"* There must not be any trailing spaces in `INDEX`.","lastModifiedDate":"2024-04-14"},{"lineNumber":352,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":353,"author":{"gitId":"EugeneChanJiajun"},"content":"Example of usage:","lastModifiedDate":"2024-04-01"},{"lineNumber":354,"author":{"gitId":"EugeneChanJiajun"},"content":"* `tag 1 activity 1`","lastModifiedDate":"2024-04-08"},{"lineNumber":355,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":356,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":357,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":358,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":359,"author":{"gitId":"EugeneChanJiajun"},"content":"I have tagged this task:","lastModifiedDate":"2024-04-08"},{"lineNumber":360,"author":{"gitId":"EugeneChanJiajun"},"content":"Go to Japan  :14 Dec 2026 :2 hours (activity 1)","lastModifiedDate":"2024-04-08"},{"lineNumber":361,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":362,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":364,"author":{"gitId":"EugeneChanJiajun"},"content":"### Removing a tag: `untag`","lastModifiedDate":"2024-04-01"},{"lineNumber":365,"author":{"gitId":"EugeneChanJiajun"},"content":"Removes a tag from an existing travel activity.","lastModifiedDate":"2024-04-01"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":367,"author":{"gitId":"ChenKangg"},"content":"Format: `untag INDEX`","lastModifiedDate":"2024-04-03"},{"lineNumber":368,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":369,"author":{"gitId":"ChenKangg"},"content":"* The `INDEX` must be a valid activity index.","lastModifiedDate":"2024-04-03"},{"lineNumber":370,"author":{"gitId":"daryltay415"},"content":"* * There must not be any trailing spaces in `INDEX`.","lastModifiedDate":"2024-04-14"},{"lineNumber":371,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":372,"author":{"gitId":"EugeneChanJiajun"},"content":"Example of usage:","lastModifiedDate":"2024-04-01"},{"lineNumber":373,"author":{"gitId":"EugeneChanJiajun"},"content":"* `untag 1 `","lastModifiedDate":"2024-04-08"},{"lineNumber":374,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":375,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":376,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":377,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":378,"author":{"gitId":"EugeneChanJiajun"},"content":"Tag removed from the task:","lastModifiedDate":"2024-04-08"},{"lineNumber":379,"author":{"gitId":"EugeneChanJiajun"},"content":"Go to Japan  :14 Dec 2026 :2 hours","lastModifiedDate":"2024-04-08"},{"lineNumber":380,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":381,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":382,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":383,"author":{"gitId":"ChinYanXu"},"content":"### Find activity from the list using activity tag: `findtag`","lastModifiedDate":"2024-04-02"},{"lineNumber":384,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":385,"author":{"gitId":"ChinYanXu"},"content":"Find an activity based on their tag. All activities with the given tag will be listed out.","lastModifiedDate":"2024-04-02"},{"lineNumber":386,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":387,"author":{"gitId":"daryltay415"},"content":"Format: `findtag TAG [/exclude KEYWORD]`","lastModifiedDate":"2024-04-12"},{"lineNumber":388,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":389,"author":{"gitId":"ChinYanXu"},"content":"* `TAG` has to be a word, a phrase or a segment of the activity description to find the activity","lastModifiedDate":"2024-04-14"},{"lineNumber":390,"author":{"gitId":"ChinYanXu"},"content":"* `KEYWORD` has to be a word, a phrase or a segment of the activity description to exclude the activity","lastModifiedDate":"2024-04-14"},{"lineNumber":391,"author":{"gitId":"ChinYanXu"},"content":"* `/exclude KEYWORD` will exclude any activity with `KEYWORD` found in the **description** of the activity","lastModifiedDate":"2024-04-15"},{"lineNumber":392,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":393,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage: ","lastModifiedDate":"2024-04-08"},{"lineNumber":394,"author":{"gitId":"EugeneChanJiajun"},"content":"* `findtag spicy`","lastModifiedDate":"2024-04-08"},{"lineNumber":395,"author":{"gitId":"daryltay415"},"content":"* `findtag spicy /exclude mala`","lastModifiedDate":"2024-04-12"},{"lineNumber":396,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":397,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":398,"author":{"gitId":"ChinYanXu"},"content":"Without `/exclude`","lastModifiedDate":"2024-04-14"},{"lineNumber":399,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":400,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":401,"author":{"gitId":"EugeneChanJiajun"},"content":"Here are what you are looking for:","lastModifiedDate":"2024-04-08"},{"lineNumber":402,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 1. Food: Mala Hotpot :14 Mar 2025 :2 hours (very spicy)","lastModifiedDate":"2024-04-08"},{"lineNumber":403,"author":{"gitId":"ChinYanXu"},"content":"[ ] 2. Food: McSpicy :16 Mar 2025 :1 hour (very spicy)","lastModifiedDate":"2024-04-14"},{"lineNumber":404,"author":{"gitId":"ChinYanXu"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":405,"author":{"gitId":"ChinYanXu"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":406,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":407,"author":{"gitId":"ChinYanXu"},"content":"With `/exclude`","lastModifiedDate":"2024-04-14"},{"lineNumber":408,"author":{"gitId":"ChinYanXu"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":409,"author":{"gitId":"ChinYanXu"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":410,"author":{"gitId":"ChinYanXu"},"content":"Here are what you are looking for:","lastModifiedDate":"2024-04-14"},{"lineNumber":411,"author":{"gitId":"ChinYanXu"},"content":"[ ] 1. Food: McSpicy :16 Mar 2025 :1 hour (very spicy)","lastModifiedDate":"2024-04-14"},{"lineNumber":412,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":413,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":414,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":415,"author":{"gitId":"daryltay415"},"content":"### List tags from the list : `listtags`","lastModifiedDate":"2024-04-07"},{"lineNumber":416,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":417,"author":{"gitId":"daryltay415"},"content":"Lists out all the tags that the user has placed in the list","lastModifiedDate":"2024-04-07"},{"lineNumber":418,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":419,"author":{"gitId":"daryltay415"},"content":"Format: `listtags`","lastModifiedDate":"2024-04-07"},{"lineNumber":420,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":421,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage: ","lastModifiedDate":"2024-04-08"},{"lineNumber":422,"author":{"gitId":"EugeneChanJiajun"},"content":"* `listtags`","lastModifiedDate":"2024-04-08"},{"lineNumber":423,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":424,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":425,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":426,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":427,"author":{"gitId":"EugeneChanJiajun"},"content":"These are the tags in your list: ","lastModifiedDate":"2024-04-08"},{"lineNumber":428,"author":{"gitId":"EugeneChanJiajun"},"content":"1. activity 2","lastModifiedDate":"2024-04-08"},{"lineNumber":429,"author":{"gitId":"EugeneChanJiajun"},"content":"2. first hotel","lastModifiedDate":"2024-04-08"},{"lineNumber":430,"author":{"gitId":"EugeneChanJiajun"},"content":"3. go up tower","lastModifiedDate":"2024-04-08"},{"lineNumber":431,"author":{"gitId":"EugeneChanJiajun"},"content":"4. very spicy","lastModifiedDate":"2024-04-08"},{"lineNumber":432,"author":{"gitId":"EugeneChanJiajun"},"content":"5. with family","lastModifiedDate":"2024-04-08"},{"lineNumber":433,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":434,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":435,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":436,"author":{"gitId":"ChinYanXu"},"content":"### Find activity from the list using activity type : `findtype`","lastModifiedDate":"2024-04-02"},{"lineNumber":437,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":438,"author":{"gitId":"ChinYanXu"},"content":"Find an activity based on their type. All activities with the given type will be listed out.","lastModifiedDate":"2024-04-02"},{"lineNumber":439,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":440,"author":{"gitId":"daryltay415"},"content":"Format: `findtype TYPE [/exclude KEYWORD]`","lastModifiedDate":"2024-04-12"},{"lineNumber":441,"author":{"gitId":"ChinYanXu"},"content":"* `TYPE` has to be a word, a phrase or a segment of the activity description to find the activity","lastModifiedDate":"2024-04-14"},{"lineNumber":442,"author":{"gitId":"ChinYanXu"},"content":"* `KEYWORD` has to be a word, a phrase or a segment of the activity description to exclude the activity","lastModifiedDate":"2024-04-14"},{"lineNumber":443,"author":{"gitId":"EugeneChanJiajun"},"content":"* The different types are `general`, `accommodation`, `food`, `landmark`","lastModifiedDate":"2024-04-08"},{"lineNumber":444,"author":{"gitId":"ChinYanXu"},"content":"* `/exclude KEYWORD` will exclude any activity with `KEYWORD` found in the **description** of the activity","lastModifiedDate":"2024-04-15"},{"lineNumber":445,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":446,"author":{"gitId":"EugeneChanJiajun"},"content":"Examples of usage: ","lastModifiedDate":"2024-04-08"},{"lineNumber":447,"author":{"gitId":"EugeneChanJiajun"},"content":"* `findtype general`","lastModifiedDate":"2024-04-08"},{"lineNumber":448,"author":{"gitId":"daryltay415"},"content":"* `findtype general /exclude japan`","lastModifiedDate":"2024-04-12"},{"lineNumber":449,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":450,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":451,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":452,"author":{"gitId":"ChinYanXu"},"content":"Without `/exclude`","lastModifiedDate":"2024-04-14"},{"lineNumber":453,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":454,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":455,"author":{"gitId":"EugeneChanJiajun"},"content":"Here are what you are looking for:","lastModifiedDate":"2024-04-08"},{"lineNumber":456,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 1. General: Go to Japan  :14 Dec 2026 :2 hours (activity 2)","lastModifiedDate":"2024-04-08"},{"lineNumber":457,"author":{"gitId":"EugeneChanJiajun"},"content":"[ ] 2. General: Go to Hong Kong  :25 Aug 2025 :6 hours (with family)","lastModifiedDate":"2024-04-08"},{"lineNumber":458,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":459,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":460,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":461,"author":{"gitId":"ChinYanXu"},"content":"With `/exclude`","lastModifiedDate":"2024-04-14"},{"lineNumber":462,"author":{"gitId":"ChinYanXu"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":463,"author":{"gitId":"ChinYanXu"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":464,"author":{"gitId":"ChinYanXu"},"content":"Here are what you are looking for:","lastModifiedDate":"2024-04-14"},{"lineNumber":465,"author":{"gitId":"ChinYanXu"},"content":"[ ] 1. General: Go to Hong Kong  :25 Aug 2025 :6 hours (with family)","lastModifiedDate":"2024-04-14"},{"lineNumber":466,"author":{"gitId":"ChinYanXu"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-14"},{"lineNumber":467,"author":{"gitId":"ChinYanXu"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":468,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":469,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":470,"author":{"gitId":"EugeneChanJiajun"},"content":"### Adding an expense amount: `expense`","lastModifiedDate":"2024-04-01"},{"lineNumber":471,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":472,"author":{"gitId":"EugeneChanJiajun"},"content":"Adds an expense amount to an existing travel activity.","lastModifiedDate":"2024-04-01"},{"lineNumber":473,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":474,"author":{"gitId":"ChenKangg"},"content":"Format: `expense INDEX EXPENSE`","lastModifiedDate":"2024-04-03"},{"lineNumber":475,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":476,"author":{"gitId":"ChenKangg"},"content":"* The `INDEX` must be a valid activity index","lastModifiedDate":"2024-04-03"},{"lineNumber":477,"author":{"gitId":"ChenKangg"},"content":"* The `EXPENSE` can include the currency of the expense.","lastModifiedDate":"2024-04-03"},{"lineNumber":478,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":479,"author":{"gitId":"EugeneChanJiajun"},"content":"Example of usage:","lastModifiedDate":"2024-04-01"},{"lineNumber":480,"author":{"gitId":"EugeneChanJiajun"},"content":"* `expense 2 $50`","lastModifiedDate":"2024-04-08"},{"lineNumber":481,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":482,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":483,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":484,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":485,"author":{"gitId":"EugeneChanJiajun"},"content":"I have added expense for this task:","lastModifiedDate":"2024-04-08"},{"lineNumber":486,"author":{"gitId":"EugeneChanJiajun"},"content":"Go to Hong Kong  :25 Aug 2025 :6 hours (with family) ($50)","lastModifiedDate":"2024-04-08"},{"lineNumber":487,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":488,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":489,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":490,"author":{"gitId":"EugeneChanJiajun"},"content":"### Removing an expense amount: `removeexpense`","lastModifiedDate":"2024-04-01"},{"lineNumber":491,"author":{"gitId":"EugeneChanJiajun"},"content":"Removes an expense amount to an existing travel activity.","lastModifiedDate":"2024-04-01"},{"lineNumber":492,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":493,"author":{"gitId":"ChenKangg"},"content":"Format: `removeexpense INDEX`","lastModifiedDate":"2024-04-03"},{"lineNumber":494,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":495,"author":{"gitId":"ChenKangg"},"content":"* The `INDEX` must be a valid activity index.","lastModifiedDate":"2024-04-03"},{"lineNumber":496,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":497,"author":{"gitId":"EugeneChanJiajun"},"content":"Example of usage:","lastModifiedDate":"2024-04-01"},{"lineNumber":498,"author":{"gitId":"EugeneChanJiajun"},"content":"* `removeexpense 2`","lastModifiedDate":"2024-04-08"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":500,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":501,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":502,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":503,"author":{"gitId":"EugeneChanJiajun"},"content":"Expense removed from the task:","lastModifiedDate":"2024-04-08"},{"lineNumber":504,"author":{"gitId":"EugeneChanJiajun"},"content":"Go to Hong Kong  :25 Aug 2025 :6 hours (with family)","lastModifiedDate":"2024-04-08"},{"lineNumber":505,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":506,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":508,"author":{"gitId":"EugeneChanJiajun"},"content":"### Calculating total expense amount: `totalexpense`","lastModifiedDate":"2024-04-12"},{"lineNumber":509,"author":{"gitId":"annnniexu"},"content":"Calculates the total expense for all activities of the given type in the travel activity list.","lastModifiedDate":"2024-04-03"},{"lineNumber":510,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":511,"author":{"gitId":"annnniexu"},"content":"Format: `totalexpense [/type TYPE]`","lastModifiedDate":"2024-04-03"},{"lineNumber":512,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":513,"author":{"gitId":"annnniexu"},"content":"* The `TYPE` must be a valid type (Accomodation, Food, Landmark, TravelActivity)","lastModifiedDate":"2024-04-03"},{"lineNumber":514,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":515,"author":{"gitId":"annnniexu"},"content":"Example of usage:","lastModifiedDate":"2024-04-03"},{"lineNumber":516,"author":{"gitId":"annnniexu"},"content":"`totalexpense /type food`","lastModifiedDate":"2024-04-03"},{"lineNumber":517,"author":{"gitId":"annnniexu"},"content":"`totalexpense`","lastModifiedDate":"2024-04-03"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":519,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":520,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":521,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":522,"author":{"gitId":"EugeneChanJiajun"},"content":"The total expense for all travel activities is: $0.0","lastModifiedDate":"2024-04-08"},{"lineNumber":523,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":524,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":526,"author":{"gitId":"daryltay415"},"content":"### Converting a currency : `change`","lastModifiedDate":"2024-04-07"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":528,"author":{"gitId":"EugeneChanJiajun"},"content":"Converts the currency from one currency to another. (currency rates are adjusted in real time)","lastModifiedDate":"2024-04-14"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":530,"author":{"gitId":"daryltay415"},"content":"Format: `change AMOUNT /from CURRENCY1 /to CURRENCY2`","lastModifiedDate":"2024-04-07"},{"lineNumber":531,"author":{"gitId":"daryltay415"},"content":"* `CURRENCY1` and `CURRENCY2` cannot be the same currency","lastModifiedDate":"2024-04-07"},{"lineNumber":532,"author":{"gitId":"daryltay415"},"content":"* `AMOUNT` has to be a valid number","lastModifiedDate":"2024-04-07"},{"lineNumber":533,"author":{"gitId":"daryltay415"},"content":"* `CURRENCY1` and `CURRENCY2` has to be in the form `sgd` for singapore dollars, `myr` for malaysia ringit.","lastModifiedDate":"2024-04-07"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":535,"author":{"gitId":"daryltay415"},"content":"Examples of usage:","lastModifiedDate":"2024-04-07"},{"lineNumber":536,"author":{"gitId":"daryltay415"},"content":"* change 100 /from sgd /to myr","lastModifiedDate":"2024-04-07"},{"lineNumber":537,"author":{"gitId":"daryltay415"},"content":"* change 1000 /from myr /to usd","lastModifiedDate":"2024-04-07"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":539,"author":{"gitId":"EugeneChanJiajun"},"content":"Expected outcome:","lastModifiedDate":"2024-04-08"},{"lineNumber":540,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":541,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":542,"author":{"gitId":"EugeneChanJiajun"},"content":"100.0sgd \u003d 352.1923myr","lastModifiedDate":"2024-04-08"},{"lineNumber":543,"author":{"gitId":"EugeneChanJiajun"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-08"},{"lineNumber":544,"author":{"gitId":"EugeneChanJiajun"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":546,"author":{"gitId":"EugeneChanJiajun"},"content":"Common currency codes:","lastModifiedDate":"2024-04-08"},{"lineNumber":547,"author":{"gitId":"EugeneChanJiajun"},"content":"* USA: USD","lastModifiedDate":"2024-04-08"},{"lineNumber":548,"author":{"gitId":"EugeneChanJiajun"},"content":"* EURO: EUR","lastModifiedDate":"2024-04-08"},{"lineNumber":549,"author":{"gitId":"EugeneChanJiajun"},"content":"* ENGLAND: GBP","lastModifiedDate":"2024-04-08"},{"lineNumber":550,"author":{"gitId":"EugeneChanJiajun"},"content":"* JAPAN: JPY","lastModifiedDate":"2024-04-08"},{"lineNumber":551,"author":{"gitId":"EugeneChanJiajun"},"content":"* SINGAPORE: SGD","lastModifiedDate":"2024-04-08"},{"lineNumber":552,"author":{"gitId":"EugeneChanJiajun"},"content":"* HONG KONG: HKD","lastModifiedDate":"2024-04-08"},{"lineNumber":553,"author":{"gitId":"EugeneChanJiajun"},"content":"* AUSTRALIA: AUD","lastModifiedDate":"2024-04-08"},{"lineNumber":554,"author":{"gitId":"EugeneChanJiajun"},"content":"* NEW ZEALAND: NZD","lastModifiedDate":"2024-04-08"},{"lineNumber":555,"author":{"gitId":"EugeneChanJiajun"},"content":"* MALAYSIA: MYR","lastModifiedDate":"2024-04-08"},{"lineNumber":556,"author":{"gitId":"EugeneChanJiajun"},"content":"* CHINA: CNY","lastModifiedDate":"2024-04-08"},{"lineNumber":557,"author":{"gitId":"EugeneChanJiajun"},"content":"* KOREA: KRW","lastModifiedDate":"2024-04-08"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":559,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":561,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":563,"author":{"gitId":"EugeneChanJiajun"},"content":"**A**: To transfer your data to another computer, copy the text file `omni.txt` under the text-ui-test file into the","lastModifiedDate":"2024-04-06"},{"lineNumber":564,"author":{"gitId":"EugeneChanJiajun"},"content":"same location of your other computer to transfer all the activities.","lastModifiedDate":"2024-04-06"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":566,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":568,"author":{"gitId":"EugeneChanJiajun"},"content":"* Get activity list `list [/date DATE /sort]`","lastModifiedDate":"2024-04-14"},{"lineNumber":569,"author":{"gitId":"ChenKangg"},"content":"* Get commands `help`","lastModifiedDate":"2024-03-30"},{"lineNumber":570,"author":{"gitId":"EugeneChanJiajun"},"content":"* Exit chatbot `bye`","lastModifiedDate":"2024-04-01"},{"lineNumber":571,"author":{"gitId":"daryltay415"},"content":"* Add general travel activity `add DESCRIPTION /date YYYY-MM-DD /duration DURATION [/tag TAG]`","lastModifiedDate":"2024-03-31"},{"lineNumber":572,"author":{"gitId":"EugeneChanJiajun"},"content":"* Add accommodation type `accommodation DESCRIPTION /date YYYY-MM-DD /duration DURATION [/tag TAG]`","lastModifiedDate":"2024-04-01"},{"lineNumber":573,"author":{"gitId":"EugeneChanJiajun"},"content":"* Add Food type `food DESCRIPTION /date YYYY-MM-DD /duration DURATION [/tag TAG]`","lastModifiedDate":"2024-04-01"},{"lineNumber":574,"author":{"gitId":"EugeneChanJiajun"},"content":"* Add Landmark type `landmark DESCRIPTION /date YYYY-MM-DD /duration DURATION [/tag TAG]`","lastModifiedDate":"2024-04-01"},{"lineNumber":575,"author":{"gitId":"EugeneChanJiajun"},"content":"* Find activity using activity description `find DESCRIPTION [/exclude KEYWORD]`","lastModifiedDate":"2024-04-14"},{"lineNumber":576,"author":{"gitId":"EugeneChanJiajun"},"content":"* Delete travel activity `delete INDEX/ACTIVITY`","lastModifiedDate":"2024-04-14"},{"lineNumber":577,"author":{"gitId":"EugeneChanJiajun"},"content":"* Check activity as done `check INDEX`","lastModifiedDate":"2024-04-01"},{"lineNumber":578,"author":{"gitId":"EugeneChanJiajun"},"content":"* Uncheck activity as not done `uncheck INDEX`","lastModifiedDate":"2024-04-01"},{"lineNumber":579,"author":{"gitId":"daryltay415"},"content":"* Update travel activity `update INDEX /date YYYY-MM-DD /duration DURATION [/tag TAG]`","lastModifiedDate":"2024-03-31"},{"lineNumber":580,"author":{"gitId":"EugeneChanJiajun"},"content":"* Add tag `tag INDEX TAGNAME`","lastModifiedDate":"2024-04-01"},{"lineNumber":581,"author":{"gitId":"EugeneChanJiajun"},"content":"* Remove tag `untag INDEX`","lastModifiedDate":"2024-04-01"},{"lineNumber":582,"author":{"gitId":"EugeneChanJiajun"},"content":"* Find activity using activity tag `findtag TAG [/exclude KEYWORD]`","lastModifiedDate":"2024-04-14"},{"lineNumber":583,"author":{"gitId":"EugeneChanJiajun"},"content":"* Find activity using activity type `findtype TYPE [/exclude KEYWORD]`","lastModifiedDate":"2024-04-14"},{"lineNumber":584,"author":{"gitId":"ChenKangg"},"content":"* Lists out all tags `listtags`","lastModifiedDate":"2024-04-11"},{"lineNumber":585,"author":{"gitId":"ChenKangg"},"content":"* Add expense `expense INDEX EXPENSE`","lastModifiedDate":"2024-04-03"},{"lineNumber":586,"author":{"gitId":"ChenKangg"},"content":"* Remove expense `removeexpense INDEX`","lastModifiedDate":"2024-04-03"},{"lineNumber":587,"author":{"gitId":"annnniexu"},"content":"* Total expense `totalexpense [/type TYPE]`","lastModifiedDate":"2024-04-03"},{"lineNumber":588,"author":{"gitId":"EugeneChanJiajun"},"content":"* Check currency exchange `change AMOUNT /from CODE /to CODE`","lastModifiedDate":"2024-04-08"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"ChinYanXu":64,"EugeneChanJiajun":370,"daryltay415":44,"ChenKangg":32,"annnniexu":48,"-":31}},{"path":"docs/plantUML diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"\u0027https://plantuml.com/component-diagram","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"Actor User as user","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"user ..\u003e [omnitravel]","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"[omnitravel] --\u003e \"passes data\"[parser]","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"[omnitravel] --\u003e \"Load/save\"[storage]","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"[omnitravel] --\u003e \"uses\" [ui]","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"[parser] --\u003e \"uses\" [ui]","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":"[parser] --\u003e \"uses\" [exchangerateapi]","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"[parser] --\u003e \"uses\" [errorhandlers]","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"[storage] --\u003e \"uses\" [travelactivitytype]","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"[travelactivitytype] --\u003e \"uses\" [ui]","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"[travelactivitytype] --\u003e \"uses\" [errorhandlers]","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"[errorhandlers] --\u003e \"uses\" [ui]","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"[parser] --\u003e \"uses\" [travelactivitytype]","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"daryltay415"},"content":"folder \"omni.txt\" as folder","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"folder .. [storage]","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"daryltay415"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"daryltay415":24}},{"path":"docs/plantUML diagrams/Errorhandler.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"skinparam packageStyle rectangle","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"hide class members","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"package errorhandlers{","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"class CheckParameters","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"class OmniException","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"class Exception","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"package travelactivitytypes{","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":"package parser{","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"package ui{","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"daryltay415"},"content":"OmniException --|\u003e Exception","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"daryltay415"},"content":"CheckParameters ..\u003e OmniException","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"daryltay415"},"content":"CheckParameters --\u003e ui","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"daryltay415"},"content":"parser --\u003e CheckParameters","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"daryltay415"},"content":"travelactivitytypes --\u003e CheckParameters","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"daryltay415"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"daryltay415":30}},{"path":"docs/plantUML diagrams/FileSaveSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EugeneChanJiajun"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"EugeneChanJiajun"},"content":"actor User","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"EugeneChanJiajun"},"content":"participant \"readFile()\" as readFile","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"EugeneChanJiajun"},"content":"participant \"loadFileContents(TravelActivityList list)\" as loadFileContents","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"EugeneChanJiajun"},"content":"participant \"accommodation:Accommodation\" as Accommodation","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"EugeneChanJiajun"},"content":"participant \"food:Food\" as Food","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"EugeneChanJiajun"},"content":"participant \"landmark:Landmark\" as Landmark","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"EugeneChanJiajun"},"content":"participant \"list:TravelActivityList\" as TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"EugeneChanJiajun"},"content":"participant \"SetActivityStatus\" as SetActivityStatus","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"EugeneChanJiajun"},"content":"participant \"s:Scanner\" as Scanner","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"EugeneChanJiajun"},"content":"User -\u003e readFile: readFile()","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"EugeneChanJiajun"},"content":"activate readFile","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"EugeneChanJiajun"},"content":"readFile -\u003e loadFileContents: loadFileContents(list)","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"EugeneChanJiajun"},"content":"activate loadFileContents","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"EugeneChanJiajun"},"content":"loop scanner","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"EugeneChanJiajun"},"content":"loadFileContents -\u003e Scanner: hasNext()","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"EugeneChanJiajun"},"content":"activate Scanner","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"EugeneChanJiajun"},"content":"Scanner --\u003e loadFileContents: next","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"EugeneChanJiajun"},"content":"deactivate Scanner","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"EugeneChanJiajun"},"content":"    alt Accomodation","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"EugeneChanJiajun"},"content":"        loadFileContents -\u003e Accommodation: list.addTravelActivity(accommodation)","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"EugeneChanJiajun"},"content":"        activate Accommodation","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"EugeneChanJiajun"},"content":"        Accommodation -\u003e TravelActivityList: list.addTravelActivity(accommodation)","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"EugeneChanJiajun"},"content":"        activate TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList --\u003e Accommodation: added activity","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"EugeneChanJiajun"},"content":"        deactivate TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"EugeneChanJiajun"},"content":"        Accommodation -\u003e SetActivityStatus: setActivityStatus()","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"EugeneChanJiajun"},"content":"        activate SetActivityStatus","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"EugeneChanJiajun"},"content":"        SetActivityStatus --\u003e Accommodation: Status handled","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"EugeneChanJiajun"},"content":"        deactivate SetActivityStatus","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"EugeneChanJiajun"},"content":"    else Food","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"EugeneChanJiajun"},"content":"        loadFileContents -\u003e Food: list.addTravelActivity(food)","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"EugeneChanJiajun"},"content":"        activate Food","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"EugeneChanJiajun"},"content":"        Food -\u003e TravelActivityList: list.addTravelActivity(food)","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"EugeneChanJiajun"},"content":"        activate TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList --\u003e Food: added activity","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"EugeneChanJiajun"},"content":"        deactivate TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"EugeneChanJiajun"},"content":"        Food -\u003e SetActivityStatus: setActivityStatus()","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"EugeneChanJiajun"},"content":"        activate SetActivityStatus","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"EugeneChanJiajun"},"content":"        SetActivityStatus --\u003e Food: Status handled","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"EugeneChanJiajun"},"content":"        deactivate SetActivityStatus","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"EugeneChanJiajun"},"content":"    else Landmark","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"EugeneChanJiajun"},"content":"        loadFileContents -\u003e Landmark: list.addTravelActivity(landmark)","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"EugeneChanJiajun"},"content":"        activate Landmark","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"EugeneChanJiajun"},"content":"        Landmark -\u003e TravelActivityList: list.addTravelActivity(landmark)","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"EugeneChanJiajun"},"content":"        activate TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList --\u003e Landmark: added activity","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"EugeneChanJiajun"},"content":"        deactivate TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"EugeneChanJiajun"},"content":"        Landmark -\u003e SetActivityStatus: setActivityStatus()","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"EugeneChanJiajun"},"content":"        activate SetActivityStatus","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"EugeneChanJiajun"},"content":"        SetActivityStatus --\u003e Landmark: Status handled","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"EugeneChanJiajun"},"content":"        deactivate SetActivityStatus","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"EugeneChanJiajun"},"content":"    end","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"EugeneChanJiajun"},"content":"end","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"EugeneChanJiajun"},"content":"deactivate TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"EugeneChanJiajun"},"content":"deactivate loadFileContents","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"EugeneChanJiajun"},"content":"deactivate readFile","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"EugeneChanJiajun"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"EugeneChanJiajun":61}},{"path":"docs/plantUML diagrams/FileSaveUML.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EugeneChanJiajun"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"EugeneChanJiajun"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"EugeneChanJiajun"},"content":"class User","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"EugeneChanJiajun"},"content":"class FileSave {","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"EugeneChanJiajun"},"content":"    + readFile(): void","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"EugeneChanJiajun"},"content":"    - loadFileContents(list: TravelActivityList): void","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"EugeneChanJiajun"},"content":"    - initialiseActivity(type: String, description: String, date: LocalDate, duration: String, tag: String, expense: String): TravelActivity","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"EugeneChanJiajun"},"content":"    - saveActivityList(list: TravelActivityList): void","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"EugeneChanJiajun"},"content":"    - readFile(list: TravelActivityList): void","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"EugeneChanJiajun"},"content":"}","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"EugeneChanJiajun"},"content":"class TravelActivityList {","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"EugeneChanJiajun"},"content":"    - travelActivities: List\u003cTravelActivity\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"EugeneChanJiajun"},"content":"    + addTravelActivity(activity: TravelActivity): void","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"EugeneChanJiajun"},"content":"    + getTravelActivities(): List\u003cTravelActivity\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"EugeneChanJiajun"},"content":"}","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"EugeneChanJiajun"},"content":"class Scanner","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"EugeneChanJiajun"},"content":"class Accommodation","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"EugeneChanJiajun"},"content":"class Food","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"EugeneChanJiajun"},"content":"class Landmark","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"EugeneChanJiajun"},"content":"class SetActivityStatus","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"EugeneChanJiajun"},"content":"User --\u003e \"1\" FileSave: readFile()","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"EugeneChanJiajun"},"content":"FileSave --\u003e \"1\" TravelActivityList: loadFileContents(list)","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"EugeneChanJiajun"},"content":"FileSave --\u003e \"1\" Scanner: hasNext()","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"EugeneChanJiajun"},"content":"FileSave --\u003e \"*\" Accommodation: initialiseActivity()","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"EugeneChanJiajun"},"content":"FileSave --\u003e \"*\" Food: initialiseActivity()","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"EugeneChanJiajun"},"content":"FileSave --\u003e \"*\" Landmark: initialiseActivity()","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"EugeneChanJiajun"},"content":"FileSave --\u003e \"*\" SetActivityStatus: setActivityStatus()","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"EugeneChanJiajun"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"EugeneChanJiajun":30}},{"path":"docs/plantUML diagrams/Overview.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"@startuml","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"hide class members","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"class OmniTravel","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"class TravelActivityList","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"class TravelActivity","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"class FileSave","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"class Food","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"class Landmark","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"class Accomodation","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"class Ui","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"class Parser","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":"class CheckParameter","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"class OmniException","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"class Exception","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"class CurrencyRate","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"OmniException -|\u003e Exception","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"TravelActivity \u003c|- Accomodation","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"daryltay415"},"content":"Food -|\u003e TravelActivity","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"Landmark --|\u003e TravelActivity","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"daryltay415"},"content":"OmniTravel --\u003e \"1\" FileSave","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"daryltay415"},"content":"FileSave --\u003e \"*\" Landmark","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"daryltay415"},"content":"FileSave --\u003e \"*\" Food","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"daryltay415"},"content":"FileSave --\u003e \"*\" Accomodation","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"daryltay415"},"content":"TravelActivityList\"1\" \u003c- OmniTravel","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"daryltay415"},"content":"TravelActivityList --\u003e \"*\" TravelActivity","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"daryltay415"},"content":"OmniTravel .\u003e Ui","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"daryltay415"},"content":"Ui .\u003e OmniException","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"daryltay415"},"content":"TravelActivityList .\u003e Ui","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"daryltay415"},"content":"Ui \u003c.. Parser","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"daryltay415"},"content":"Parser .\u003e CheckParameter","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"daryltay415"},"content":"CurrencyRate \u003c. Parser","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"daryltay415"},"content":"CheckParameter ..\u003e Exception","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"daryltay415"},"content":"Parser ..\u003e TravelActivityList","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"daryltay415"},"content":"Parser --\u003e \"*\" Accomodation","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"daryltay415"},"content":"Parser --\u003e \"*\" Food","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"daryltay415"},"content":"Parser --\u003e \"*\" Landmark","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"daryltay415"},"content":"Parser --\u003e \"*\" TravelActivity","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"daryltay415"},"content":"Ui ..\u003e TravelActivity","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"daryltay415"},"content":"@enduml","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"daryltay415":44}},{"path":"docs/plantUML diagrams/TagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChenKangg"},"content":"@startuml","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"ChenKangg"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"ChenKangg"},"content":"actor User","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"ChenKangg"},"content":"participant \"tagCommand(line: String, list: TravelActivityList)\" as tagCommandMethod","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"ChenKangg"},"content":"participant \"list: TravelActivityList\" as TravelActivityListInstance","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"ChenKangg"},"content":"participant \"OmniExceptionInstance: OmniException\" as OmniExceptionInstance","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"ChenKangg"},"content":"User -\u003e tagCommandMethod: tagCommand(line, list)","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"ChenKangg"},"content":"activate tagCommandMethod","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"ChenKangg"},"content":"tagCommandMethod -\u003e tagCommandMethod: line.split(\" \")","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"ChenKangg"},"content":"alt command.length \u003d\u003d 3 \u0026\u0026 isNumeric(command[1])","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"ChenKangg"},"content":"    tagCommandMethod -\u003e tagCommandMethod: int listNumber \u003d Integer.parseInt(command[1])","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"ChenKangg"},"content":"    activate tagCommandMethod","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"ChenKangg"},"content":"    tagCommandMethod -\u003e tagCommandMethod: String tag \u003d command[2]","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"ChenKangg"},"content":"    activate tagCommandMethod","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"ChenKangg"},"content":"    tagCommandMethod -\u003e TravelActivityListInstance: tagActivity(listNumber, tag)","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"ChenKangg"},"content":"    activate TravelActivityListInstance ","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"ChenKangg"},"content":"    TravelActivityListInstance --\u003e tagCommandMethod:","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"ChenKangg"},"content":"    deactivate TravelActivityListInstance","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"ChenKangg"},"content":"    deactivate tagCommandMethod","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"ChenKangg"},"content":"else command.length \u003d\u003d 2","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"ChenKangg"},"content":"    tagCommandMethod -\u003e OmniExceptionInstance: OmniException(\"Please specify a tag name\")","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"ChenKangg"},"content":"    activate OmniExceptionInstance","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"ChenKangg"},"content":"    deactivate OmniExceptionInstance","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"ChenKangg"},"content":"    deactivate tagCommandMethod","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"ChenKangg"},"content":"else","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"ChenKangg"},"content":"    tagCommandMethod -\u003e OmniExceptionInstance: OmniException(\"Please specify which task to tag\")","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"ChenKangg"},"content":"    activate OmniExceptionInstance","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"ChenKangg"},"content":"    deactivate OmniExceptionInstance","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"ChenKangg"},"content":"    deactivate tagCommandMethod","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"ChenKangg"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"ChenKangg"},"content":"@enduml","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"ChenKangg":39}},{"path":"docs/plantUML diagrams/TravelActivityTypeClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"skinparam packageStyle rectangle","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"hide class members","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"package travelactivitytype{","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"class TravelActivity","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"class Food","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"class Landmark","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"class Accommodation","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"class TravelActivityList","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"Food --|\u003e TravelActivity","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"Landmark --|\u003e TravelActivity","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":"Accommodation --|\u003e TravelActivity","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"TravelActivityList --\u003e \"*\" TravelActivity","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"TravelActivityList --\u003e ui","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"parser --\u003e TravelActivityList","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"package ui{","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"package parser{","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"daryltay415"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"daryltay415":25}},{"path":"docs/plantUML diagrams/UpdateFeatureClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"class OmniTravel{","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"-invokeCommand(command: String[], line: String, list: TravelActivityList): void","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"class Parser{","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"+updateCommand(line: String, list: TravelActivityList): void","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"class CheckParameters{","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"+updateExceptions(command: String[], line: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"+containsWords(input String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"class TravelActivityList{","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"+updateTravelActivity(travelActivityNumber: int, date: LocalDate, duration: String, tag: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"class TravelActivity{","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"+setDate(date: LocalDate): void","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"+setDuration(duration: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"daryltay415"},"content":"+setTag(tag: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"daryltay415"},"content":"class Ui{","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"daryltay415"},"content":"+printLine(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"daryltay415"},"content":"OmniTravel ..\u003e Ui","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"daryltay415"},"content":"OmniTravel ..\u003e Parser","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"daryltay415"},"content":"Parser --\u003e TravelActivityList","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"daryltay415"},"content":"TravelActivityList --\u003e \"*\"TravelActivity","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"daryltay415"},"content":"TravelActivityList ..\u003e CheckParameters","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"daryltay415"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"daryltay415":32}},{"path":"docs/plantUML diagrams/UpdateSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"actor User as user","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"box OmniTravel","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"participant \":OmniTravel\" as OmniTravel","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"box Ui","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":"box Parser","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"box TravelActivityType","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"participant \":TravelActivityList\" as TravelActivityList","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"participant \":TravelActivity\" as TravelActivity","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"daryltay415"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"daryltay415"},"content":"user -\u003e OmniTravel : \"update 1 /date 2019-12-12 /duration 2 hours\"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"daryltay415"},"content":"activate OmniTravel","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"daryltay415"},"content":"OmniTravel -\u003e Ui : printLine()","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"daryltay415"},"content":"activate Ui","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"daryltay415"},"content":"Ui --\u003e OmniTravel","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"daryltay415"},"content":"deactivate Ui","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"daryltay415"},"content":"OmniTravel-\u003e Parser : updateCommand(line,list)","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"daryltay415"},"content":"activate Parser","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"daryltay415"},"content":"Parser -\u003e TravelActivityList: updateTravelActivity(traveActivityNumber, date, duration)","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"daryltay415"},"content":"activate TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"daryltay415"},"content":"TravelActivityList -\u003e TravelActivity: setDate","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"daryltay415"},"content":"activate TravelActivity","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"daryltay415"},"content":"TravelActivity --\u003e TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"daryltay415"},"content":"deactivate TravelActivity","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"daryltay415"},"content":"TravelActivityList -\u003e TravelActivity: setDuration","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"daryltay415"},"content":"activate TravelActivity","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"daryltay415"},"content":"TravelActivity --\u003e TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"daryltay415"},"content":"deactivate TravelActivity","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"daryltay415"},"content":"TravelActivityList --\u003e Parser","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"daryltay415"},"content":"deactivate TravelActivityList","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"daryltay415"},"content":"Parser --\u003eOmniTravel","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"daryltay415"},"content":"deactivate Parser","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"daryltay415"},"content":"OmniTravel-\u003e Ui : printLine()","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"daryltay415"},"content":"activate Ui","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"daryltay415"},"content":"Ui --\u003eOmniTravel","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"daryltay415"},"content":"deactivate Ui","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"daryltay415"},"content":"OmniTravel --\u003e user","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"daryltay415"},"content":"deactivate OmniTravel","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"daryltay415"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"daryltay415":53}},{"path":"docs/plantUML diagrams/lookupFunctions.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChinYanXu"},"content":"@startuml","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"ChinYanXu"},"content":"alt first word of user command is \"find\"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"ChinYanXu"},"content":"   OmniTravel -\u003e Parser : findCommand()","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"ChinYanXu"},"content":"   Parser -\u003e TravelActivityList : searchKeyword()","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"ChinYanXu"},"content":"   loop size of travelActivities ArrayList","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"ChinYanXu"},"content":"      alt activity description matches the keyword user inputted","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"ChinYanXu"},"content":"         TravelActivityList -\u003e TravelActivityList : foundCounter +\u003d 1","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"ChinYanXu"},"content":"         TravelActivityList -\u003e System.out : println(\"Here are what you are looking for:\")","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"ChinYanXu"},"content":"         TravelActivityList -\u003e Ui : printActivity(travelActivity, foundCounter);","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"ChinYanXu"},"content":"         Ui -\u003e System.out : print(checked + \" \" + activityIndex + \". \" + activity)","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"ChinYanXu"},"content":"         alt Activity has a tag","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"ChinYanXu"},"content":"            Ui -\u003e System.out : print(\" (\" + activity.getTag() + \")\")","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"ChinYanXu"},"content":"         else activity have no tag","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"ChinYanXu"},"content":"            Ui -\u003e System.out : print(\" (\" + activity.getExpense() + \")\")","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"ChinYanXu"},"content":"         end","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"ChinYanXu"},"content":"         Ui -\u003e System.out : println()","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"ChinYanXu"},"content":"      end","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"ChinYanXu"},"content":"   end","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"ChinYanXu"},"content":"   alt no activity description matches the keyword user inputted","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"ChinYanXu"},"content":"      TravelActivityList -\u003e System.out : println(\"Sorry I could not find what you are looking for.\")","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"ChinYanXu"},"content":"   end","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"ChinYanXu"},"content":"end","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"ChinYanXu"},"content":"alt first word of user command is \"findtag\"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"ChinYanXu"},"content":"   OmniTravel -\u003e Parser : findTagCommand()","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"ChinYanXu"},"content":"   Parser -\u003e TravelActivityList : findTag()","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"ChinYanXu"},"content":"   loop size of travelActivities ArrayList","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"ChinYanXu"},"content":"      alt activity tag matches the keyword user inputted","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"ChinYanXu"},"content":"         TravelActivityList -\u003e TravelActivityList : foundCounter +\u003d 1","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"ChinYanXu"},"content":"         TravelActivityList -\u003e System.out : println(\"Here are what you are looking for:\")","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"ChinYanXu"},"content":"         TravelActivityList -\u003e Ui : printActivity(travelActivity, foundCounter);","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"ChinYanXu"},"content":"         Ui -\u003e System.out : print(checked + \" \" + activityIndex + \". \" + activity)","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"ChinYanXu"},"content":"         alt Activity has a tag","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"ChinYanXu"},"content":"            Ui -\u003e System.out : print(\" (\" + activity.getTag() + \")\")","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"ChinYanXu"},"content":"         else activity have no tag","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"ChinYanXu"},"content":"            Ui -\u003e System.out : print(\" (\" + activity.getExpense() + \")\")","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"ChinYanXu"},"content":"         end","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"ChinYanXu"},"content":"         Ui -\u003e System.out : println()","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"ChinYanXu"},"content":"      end","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"ChinYanXu"},"content":"   end","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"ChinYanXu"},"content":"   alt no activity tag matches the keyword user inputted","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"ChinYanXu"},"content":"      TravelActivityList -\u003e System.out : println(\"Sorry I could not find what you are looking for.\")","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"ChinYanXu"},"content":"   end","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"ChinYanXu"},"content":"end","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"ChinYanXu"},"content":"alt first word of user command is \"findtype\"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"ChinYanXu"},"content":"   OmniTravel -\u003e Parser : findTypeCommand()","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"ChinYanXu"},"content":"   Parser -\u003e TravelActivityList : findType()","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"ChinYanXu"},"content":"   loop size of travelActivities ArrayList","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"ChinYanXu"},"content":"   alt activity tag matches the keyword user inputted","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"ChinYanXu"},"content":"         TravelActivityList -\u003e TravelActivityList : foundCounter +\u003d 1","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"ChinYanXu"},"content":"         TravelActivityList -\u003e System.out : println(\"Here are what you are looking for:\")","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"ChinYanXu"},"content":"         TravelActivityList -\u003e Ui : printActivity(travelActivity, foundCounter);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"ChinYanXu"},"content":"         Ui -\u003e System.out : print(checked + \" \" + activityIndex + \". \" + activity)","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"ChinYanXu"},"content":"         alt Activity has a tag","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"ChinYanXu"},"content":"            Ui -\u003e System.out : print(\" (\" + activity.getTag() + \")\")","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"ChinYanXu"},"content":"         else activity have no tag","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"ChinYanXu"},"content":"            Ui -\u003e System.out : print(\" (\" + activity.getExpense() + \")\")","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"ChinYanXu"},"content":"         end","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"ChinYanXu"},"content":"         Ui -\u003e System.out : println()","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"ChinYanXu"},"content":"      end","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"ChinYanXu"},"content":"   end","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"ChinYanXu"},"content":"   alt no activity type matches the keyword user inputted","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"ChinYanXu"},"content":"      TravelActivityList -\u003e System.out : println(\"Sorry I could not find what you are looking for.\")","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"ChinYanXu"},"content":"   end","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"ChinYanXu"},"content":"end","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"ChinYanXu"},"content":"@enduml","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"ChinYanXu":67}},{"path":"docs/plantUML diagrams/totalexpense.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annnniexu"},"content":"@startuml","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"annnniexu"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"annnniexu"},"content":"autonumber","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"annnniexu"},"content":"actor User","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"annnniexu"},"content":"User -\u003e OmniTravel : \"totalexpense /type Food\"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"annnniexu"},"content":"OmniTravel -\u003e Parser : totalExpenseCommand(line, list)","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"annnniexu"},"content":"   Parser -\u003e TravelActivityList : totalExpense(type)","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"annnniexu"},"content":"   loop size of travelActivities ArrayList","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"annnniexu"},"content":"      opt activity type matches the type the user inputed","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"annnniexu"},"content":"         TravelActivityList -\u003e TravelActivity: getExpense()","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"annnniexu"},"content":"         TravelActivity --\u003e TravelActivityList:","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"annnniexu"},"content":"         TravelActivityList -\u003e TravelActivityList: total +\u003d expense","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"annnniexu"},"content":"      end","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"annnniexu"},"content":"   end","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"annnniexu"},"content":"TravelActivityList --\u003e Parser","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"annnniexu"},"content":"Parser --\u003e OmniTravel","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"annnniexu"},"content":"OmniTravel --\u003e User","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"annnniexu"},"content":"@enduml","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"annnniexu":20}},{"path":"docs/team/annnniexu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annnniexu"},"content":"# Annie Xu - Project Portfolio Page","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"annnniexu"},"content":"## Overview","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"annnniexu"},"content":"Omnitravel is a Command-Line Interface application that is designed to assist travel planning and organization.","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"annnniexu"},"content":"Users can add general activities, accommodations, food, landmarks to their travel activity list. ","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"annnniexu"},"content":"Users can also associate tags and expenses with travel activities as well as look activities up by date, keywords, and tag.","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"annnniexu"},"content":"Additional functions include listing the activities, calculating total expense, and currency exchange.","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"annnniexu"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"annnniexu"},"content":"Given below are the contributions I made to this project:","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"annnniexu"},"content":"* New Feature: Added the check/uncheck command to mark activities as complete/incompleted","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"annnniexu"},"content":"  * What it does: Allows the user to mark an activity","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"annnniexu"},"content":"  * Justification: Users might want to be able to keep track of which activities they have completed or not","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"annnniexu"},"content":"* New Feature: Added the total expense command","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"annnniexu"},"content":"  * What it does: Allows the user to calculate the total expense across all activities","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"annnniexu"},"content":"  * Justification: Users might want to calculate the total expenses for their trip","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"annnniexu"},"content":"* New Feature: Added the date and sort function to the list command","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"annnniexu"},"content":"  * What it does: Allows the user to list the activities for a certain date or list the activities sorted by date","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"annnniexu"},"content":"  * Justification: Users might want to see the itinerary sorted in order by date or see the itinerary for a certain date","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"annnniexu"},"content":"#### Code contribution:","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"annnniexu"},"content":"[RepoSense link]","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"annnniexu"},"content":"(https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dannnniexu\u0026breakdown\u003dtrue)","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"annnniexu"},"content":"#### Documentation:","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"annnniexu"},"content":"* User guide","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"annnniexu"},"content":"  * Added documentation for `check/uncheck`, `totalexpense`, and `list`","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"annnniexu"},"content":"* Developer guide","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"annnniexu"},"content":"  * Added implementation details and sequence diagram for `totalexpense`","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"annnniexu":32}},{"path":"docs/team/chenkangg.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChenKangg"},"content":"# Cheong Chen Kang - Project Portfolio Page","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"ChenKangg"},"content":"## Overview","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"ChenKangg"},"content":"Omnitravel is a CLI (Command-Line Interface) app that simplifies travel planning and organization.","lastModifiedDate":"2024-04-08"},{"lineNumber":5,"author":{"gitId":"ChenKangg"},"content":"Users can add accommodations, food, and landmarks to their itinerary, manage activities easily, and track expenses.","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"ChenKangg"},"content":"The app offers search, filtering, and currency exchange features, ensuring a smooth travel planning experience.","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"ChenKangg"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"ChenKangg"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":12,"author":{"gitId":"ChenKangg"},"content":"#### Code contribution:","lastModifiedDate":"2024-04-08"},{"lineNumber":13,"author":{"gitId":"ChenKangg"},"content":"[RepoSense link](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dchenkangg\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2024-02-23\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":15,"author":{"gitId":"ChenKangg"},"content":"#### New features:","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"ChenKangg"},"content":"* Added the ability to get help ","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"ChenKangg"},"content":"  * What it does: allows the user to view a list of available commands for the app","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"ChenKangg"},"content":"  * Justification: This feature is important as a new user may not be familiar with how to use the Omnitravel app, thus ","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"ChenKangg"},"content":"    providing an easy way to assist a user to view all the commands.","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":22,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"ChenKangg"},"content":"* Added the ability to add and remove tags ","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"ChenKangg"},"content":"  * What it does: allows the user to tag an existing travel activity and remove a tag from an existing travel activity","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"ChenKangg"},"content":"    if needed. ","lastModifiedDate":"2024-04-08"},{"lineNumber":26,"author":{"gitId":"ChenKangg"},"content":"  * Justification: This feature improves the product significantly because a user can tag a travel activity which can ","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"ChenKangg"},"content":"    help to better organise their travel activities and conveniently remove the tag to rectify if required.","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"ChenKangg"},"content":"* Added the ability to add and remove expenses","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"ChenKangg"},"content":" ","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"ChenKangg"},"content":"  * What it does: allows the user to add an expense to an existing travel activity and remove an expense from an ","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"ChenKangg"},"content":"    existing travel activity if needed.","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"ChenKangg"},"content":"  * Justification: This feature improves the product significantly because a user can add an expense to a travel activity ","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"ChenKangg"},"content":"    which can help to track their finances and conveniently remove the expense to rectify if required.","lastModifiedDate":"2024-04-08"},{"lineNumber":36,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":37,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"ChenKangg"},"content":"* Added the ability to list tags","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"ChenKangg"},"content":"  * What it does: allows the user to list out all the tags that have been added.","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"ChenKangg"},"content":"  * Justification: This feature improves the product significantly because a user may have forgotten what tags they have ","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"ChenKangg"},"content":"    given to different travel activities. This feature allows users to view all tags quickly and easily.","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":43,"author":{"gitId":"ChenKangg"},"content":"#### Project Management","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"ChenKangg"},"content":"* Create milestone for `v2.1` and issues to ensure project is updated with new features.","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"ChenKangg"},"content":"#### Documentation:","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"ChenKangg"},"content":"* Contributions to the UG:","lastModifiedDate":"2024-04-08"},{"lineNumber":48,"author":{"gitId":"ChenKangg"},"content":"  * Added documentation for the features `help`,`tag`,`untag`,`expense`,`removeexpense`,`listtags`.","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"ChenKangg"},"content":"    (Pull request [#107](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/107))","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":51,"author":{"gitId":"ChenKangg"},"content":"* Contributions to the DG: ","lastModifiedDate":"2024-04-08"},{"lineNumber":52,"author":{"gitId":"ChenKangg"},"content":"  * Added description of implementation of `tag` feature + sequence diagram.","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"ChenKangg"},"content":"    (Pull request [#111](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/111))","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"ChenKangg"},"content":"  * Added documentation instructions for manual testing for the features `help`,`tag`,`untag`,`expense`,","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"ChenKangg"},"content":"  `removeexpense`,`listtags`.","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"ChenKangg"},"content":"    (Pull request [#97](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/97))","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"}],"authorContributionMap":{"ChenKangg":57}},{"path":"docs/team/chinyanxu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChinYanXu"},"content":"# Chin Yan Xu - Project Portfolio Page","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"ChinYanXu"},"content":"## Overview","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"ChinYanXu"},"content":"Omnitravel is a CLI (Command-Line Interface) app that stores users travel plans for easy reference while travelling.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"ChinYanXu"},"content":"Users are able to store, edit and delete various types of travel plans such as Accommodation, Food and Landmark. ","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"ChinYanXu"},"content":"Users can also associate small bits of information about their trip to their travel plans such as the purpose of the ","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"ChinYanXu"},"content":"visit through the expense and tagging functions. Various lookup functions such as the findtag functions enable the user ","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"ChinYanXu"},"content":"to quickly group and retrieve information.","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"ChinYanXu"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"ChinYanXu"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"ChinYanXu"},"content":"* New Feature: Added the find command [#25](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/25)","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"ChinYanXu"},"content":"  * What it does: Enables the user to display all the travel activities stored in Omnitravel containing a certain ","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"ChinYanXu"},"content":"keyword in their description","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"ChinYanXu"},"content":"  * Justification: User might only want to see a list of certain activities and this feature will enable them to do so.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"ChinYanXu"},"content":"  * Highlights: User can use the `/exclude KEYWORD` optional inputs to further filter out what they want to see it their ","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"ChinYanXu"},"content":"search","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"ChinYanXu"},"content":"* New Feature: Added the findtag command [#89](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/89)","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"ChinYanXu"},"content":"  * What it does: Enables the user to display all the travel activities stored in Omnitravel containing a certain tag","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"ChinYanXu"},"content":"  * Justification: User might have tagged each activity to categorise them and might want to see which activity belongs","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"ChinYanXu"},"content":"to a tag. This feature enables them to do so.","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"ChinYanXu"},"content":"  * Highlights: User can use the `/exclude KEYWORD` optional inputs to further filter out what they want to see it their","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"ChinYanXu"},"content":"search","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"ChinYanXu"},"content":"* New Feature: Added the findtype command [#91](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/91)","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"ChinYanXu"},"content":"  * What it does: Enables the user to display all the travel activities stored in Omnitravel of a certain type","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"ChinYanXu"},"content":"  * Justification: User might have sorted each activity into their respective types and might want to see which ","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"ChinYanXu"},"content":"activity is under a type. This feature enables them to do so.","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"ChinYanXu"},"content":"  * Highlights: User can use the `/exclude KEYWORD` optional inputs to further filter out what they want to see it their","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"ChinYanXu"},"content":"search","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"ChinYanXu"},"content":"#### Code contribution:","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"ChinYanXu"},"content":"[RepoSense link](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dchinyanxu\u0026breakdown\u003dtrue)","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"ChinYanXu"},"content":"* Enhancements implemented to existing features","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"ChinYanXu"},"content":"  * Added a way to delete travel activities from the list using keywords instead of just the index of the travel ","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"ChinYanXu"},"content":"activity [#211](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/211)","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"ChinYanXu"},"content":"* Documentation","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"ChinYanXu"},"content":"  * User Guide:","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"ChinYanXu"},"content":"    * Added documentation for feature `find` [#127](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/127)","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"ChinYanXu"},"content":"    * Added documentation for feature `findtag` [#127](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/127)","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"ChinYanXu"},"content":"    * Added documentation for feature `findtype` [#127](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/127)","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"ChinYanXu"},"content":"    * Added documentation for delete by keyword enhancement [#211](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/211)","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"ChinYanXu"},"content":"  * Developer Guide:","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"ChinYanXu"},"content":"    * Added OmniTravel value proposition. [#92](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/92)","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"ChinYanXu"},"content":"  * Community:","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"ChinYanXu"},"content":"    * Suggested fixes for other teams in the forum [#38](https://github.com/nus-cs2113-AY2324S2/forum/issues/38)","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"ChinYanXu"},"content":"* Contributions to team-based-tasks","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"ChinYanXu"},"content":"  * Contributed large portions of the JUnit tests [#236](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/236)","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"ChinYanXu"},"content":"  * Implemented a way to test text outputted to console [#92](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/92)","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"ChinYanXu"},"content":"  * Implemented a way to test if an exception is triggered [#236](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/236)","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"ChinYanXu":51}},{"path":"docs/team/daryltay415.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"# Daryl Tay Chin Kian - Project Portfolio Page","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"## Project: OmniTravel","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"OmniTravel is a command line interface application used for tracking and planning travel activities.","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"It is able to convert currencies as well as set expenses for each travel activities.","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"Given below are all the contributions I have made to this project.","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"* New Feature: Added a update command to update travel activities","lastModifiedDate":"2024-04-08"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"  * What it does: Allows the user to update the existing travel activity with a new date, duration","lastModifiedDate":"2024-04-08"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"    and tag.","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":"  * Justification: Users might have changes in their plans and this feature will make it much easier","lastModifiedDate":"2024-04-08"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"    for users to edit their plans.","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"  * Highlights: This enhancement does affect some existing commands.","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"* New Feature: Added a exchange currency command to change from one currency to another","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"  * What it does: Allows the user to convert an amount of a local currency to a foreign currency.","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"  * Justification: This feature allows the user to check how much local currency they require to convert","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"    to the foreign currency. It makes it more convenient for them to plan how much expenses they require","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"daryltay415"},"content":"    for certain activities.","lastModifiedDate":"2024-04-08"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"  * Highlights: It required some in-depth analysis to ensure the exceptions were handled well. ","lastModifiedDate":"2024-04-08"},{"lineNumber":23,"author":{"gitId":"daryltay415"},"content":"    The implementation was also challenging as it was my first time using an API and the guide","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"daryltay415"},"content":"    given by the third party does not explain much on using the API.","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"daryltay415"},"content":"  * Credits: Current exchange API: [link](https://github.com/fawazahmed0/exchange-api/blob/main/LICENSE)","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"daryltay415"},"content":"  ","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"daryltay415"},"content":"* Code contributed: [RepoSense link](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003ddaryltay415\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2024-02-23\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"daryltay415"},"content":"* Project management:","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"daryltay415"},"content":"  * Released issues in v1.0 on GitHub ","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"daryltay415"},"content":"  * Managed releases v1.0 - v2.0 (2 releases) on GitHub","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"daryltay415"},"content":"* Enhancements to existing features:","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"daryltay415"},"content":"  * Added ability to add dates and duration to the `add` feature [#81](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/81) ","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"daryltay415"},"content":"* Documentation: ","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"daryltay415"},"content":"  * User Guide:","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"daryltay415"},"content":"    * Added documentation for the features `add`,`update`,`list`, `listtags`, `change` [#110](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/110), [#195](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/195)","lastModifiedDate":"2024-04-08"},{"lineNumber":36,"author":{"gitId":"daryltay415"},"content":"  * Developer Guide:","lastModifiedDate":"2024-04-08"},{"lineNumber":37,"author":{"gitId":"daryltay415"},"content":"    * Added implementation details of the `update` feature [#94](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/94)","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"daryltay415"},"content":"    * Added class diagram for overview of all classes [#228](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/228)","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"daryltay415"},"content":"    * Added details about the main components of the system [#228](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/228)","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"daryltay415"},"content":"    * Added manual testing details [#203](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/203)","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"daryltay415"},"content":"* Community:","lastModifiedDate":"2024-04-08"},{"lineNumber":42,"author":{"gitId":"daryltay415"},"content":"  * Reported bugs and suggestions for other teams in the class (examples [1](https://github.com/nus-cs2113-AY2324S2/tp/pull/45/files#r1550908455),","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"daryltay415"},"content":"    [2](https://github.com/nus-cs2113-AY2324S2/tp/pull/85/files#r1550881947)) ","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"daryltay415"},"content":"* Tools:","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"daryltay415"},"content":"  * Integrated a third part API to the project [#195](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/195)","lastModifiedDate":"2024-04-08"},{"lineNumber":46,"author":{"gitId":"daryltay415"},"content":"* Other contributions: Fixing, debugging and testing of code. [#193](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/193)","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"daryltay415":46}},{"path":"docs/team/eugenechanjiajun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EugeneChanJiajun"},"content":"# Eugene Chan - Project Portfolio Page","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":3,"author":{"gitId":"EugeneChanJiajun"},"content":"## Overview: OmniTravel","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":5,"author":{"gitId":"EugeneChanJiajun"},"content":"Omnitravel is a CLI (Command-Line Interface) app that simplifies travel planning and organization.","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"EugeneChanJiajun"},"content":"Users can add accommodations, food, and landmarks to their itinerary, manage activities easily, and track expenses.","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"EugeneChanJiajun"},"content":"The app offers search, filtering, and currency exchange features, ensuring a smooth travel planning experience.","lastModifiedDate":"2024-04-08"},{"lineNumber":8,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"EugeneChanJiajun"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":12,"author":{"gitId":"EugeneChanJiajun"},"content":"Given below are my contributions to the project. ","lastModifiedDate":"2024-04-08"},{"lineNumber":13,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"EugeneChanJiajun"},"content":"* New Feature: Added the ability to save existing list information into a text file.","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"EugeneChanJiajun"},"content":"  * What it does: Allows the user to save their existing travel activity plans into a text file so that it can be","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"EugeneChanJiajun"},"content":"  reloaded later on.","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Justification: This feature improves the product significantly because after a user inputs a certain travel plan, ","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"EugeneChanJiajun"},"content":"  they would want to be able to come back and update the list anytime they want.","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Highlights: This feature needs to be updated everytime a new feature is added into the project.","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"EugeneChanJiajun"},"content":"* New Feature: Handled input parsing for the chatbot.","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"EugeneChanJiajun"},"content":"  * What it does: The parser class handles all the input made by the user into the chatbot an accurately parses the","lastModifiedDate":"2024-04-08"},{"lineNumber":23,"author":{"gitId":"EugeneChanJiajun"},"content":"  command to execute the appropriate tasks.","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Justification: This feature ensures that all command features implemented by the team is handled properly and the ","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"EugeneChanJiajun"},"content":"  appropriate output is produced","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Highlights: This feature needs to be updated everytime a new feature is added into the project.","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"EugeneChanJiajun"},"content":"* System testings: Tested most features to ensure that all major bugs are squashed.","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"EugeneChanJiajun"},"content":"  * What is done: Everytime a new feature is added, ensure that the feature works well with all other existing features","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"EugeneChanJiajun"},"content":"  and any possible bugs and regressions that may happen.","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Justification: This project has multiple features that require existing features to work together. Therefore, when","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"EugeneChanJiajun"},"content":"  a feature is added, changes need to be made on other features. This may lead to regressions which needs to be fixed.","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Highlights: System testing affects existing commands and features and requires in-depth analysis of design ","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"EugeneChanJiajun"},"content":"  alternatives. As there are multiple features that have a relation with one another. (EG. Save feature needs to be","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"EugeneChanJiajun"},"content":"  updated to ensure that new features are saved)","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":37,"author":{"gitId":"EugeneChanJiajun"},"content":"#### Code contributed: [RepoSense link](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003deugene\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dEugeneChanJiajun\u0026tabRepo\u003dAY2324S2-CS2113-T12-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":39,"author":{"gitId":"EugeneChanJiajun"},"content":"#### Project Management","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"EugeneChanJiajun"},"content":" * Managed releases `v2.0` on GitHub","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"EugeneChanJiajun"},"content":" * Create milestones and issues to ensure consistent updates to the project","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":43,"author":{"gitId":"EugeneChanJiajun"},"content":"#### Enhancement to existing features","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"EugeneChanJiajun"},"content":" * Added additional tests for existing features to increase coverage (Pull request [#197]()https://github.com/AY2324S2-CS2113-T12-4/tp/pull/197 and [#225](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/225))","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"EugeneChanJiajun"},"content":" * Created new class to handle all exceptions thrown (Pull request [#114](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/114)","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":48,"author":{"gitId":"EugeneChanJiajun"},"content":"#### Documentation","lastModifiedDate":"2024-04-08"},{"lineNumber":49,"author":{"gitId":"EugeneChanJiajun"},"content":"* User Guide:","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Added documentation for how to run the application (Pull request [#120](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/120))","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Added documentation for the features (Pull request [#123](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/123))","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":53,"author":{"gitId":"EugeneChanJiajun"},"content":"* Developer Guide:","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Added implementation details for the `save` feature (Pull request [#134](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/134))","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Added sequence diagram for the `save` feature. (Pull request [#100](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/100))","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Added class diagram for the `save` feature. (Pull request [#221](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/221))","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"EugeneChanJiajun"},"content":"  * Added user stories in the developer guide. (Pull request [#125](https://github.com/AY2324S2-CS2113-T12-4/tp/pull/125))","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"EugeneChanJiajun"},"content":"#### Community","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"EugeneChanJiajun"},"content":"* Reported bugs and suggestions for other teams in the class (example [1](https://github.com/nus-cs2113-AY2324S2/tp/pull/42/files), [2](https://github.com/EugeneChanJiajun/ped/issues))","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"EugeneChanJiajun":60}},{"path":"src/main/java/seedu/omnitravel/errorhandlers/CheckParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.errorhandlers;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.ui.Ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"annnniexu"},"content":"/**","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"annnniexu"},"content":" * The CheckParameters class provides methods to check the user input for various commands.","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"annnniexu"},"content":" * An OmniException will be thrown if the input violates the structure of the command.","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"annnniexu"},"content":" * Includes methods that will check parameters for the add command, update command, list command, currency command","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"annnniexu"},"content":" * as well as helper functions to check the validity of certain strings.","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"annnniexu"},"content":" *","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"annnniexu"},"content":" */","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"EugeneChanJiajun"},"content":"public class CheckParameters {","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"EugeneChanJiajun"},"content":"    //@@author EugeneChanJiajun","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Checks for all possible input errors that users may make and throws the corresponding exceptions","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param input Line of input that users placed into the chatbot","lastModifiedDate":"2024-04-06"},{"lineNumber":21,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param commandType commandType of the four input commands that add new activities into the list","lastModifiedDate":"2024-04-06"},{"lineNumber":22,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @throws OmniException when any of the corresponding input format is wrong","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":25,"author":{"gitId":"EugeneChanJiajun"},"content":"    public static void addExceptions(String[] input, String commandType, String line) throws OmniException{","lastModifiedDate":"2024-04-06"},{"lineNumber":26,"author":{"gitId":"EugeneChanJiajun"},"content":"        String[] command \u003d line.split(\"/\");","lastModifiedDate":"2024-04-06"},{"lineNumber":27,"author":{"gitId":"EugeneChanJiajun"},"content":"        if (input.length \u003e\u003d 3 \u0026\u0026 input[0].substring(commandType.length()).isBlank()) {","lastModifiedDate":"2024-04-06"},{"lineNumber":28,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"The description cannot be empty!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (input.length \u003e\u003d 3 \u0026\u0026 input[1].isBlank()) {","lastModifiedDate":"2024-04-06"},{"lineNumber":30,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"The date cannot be empty!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (input.length \u003e\u003d 3 \u0026\u0026 input[2].isBlank()) {","lastModifiedDate":"2024-04-06"},{"lineNumber":32,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"The duration cannot be empty!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (input.length \u003e\u003d 4 \u0026\u0026 input[3].isBlank()) {","lastModifiedDate":"2024-04-06"},{"lineNumber":34,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"The tag cannot be empty!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (input.length \u003c 3 || input[2].contains(\"/tag\") || !command[1].contains(\"date\")","lastModifiedDate":"2024-04-06"},{"lineNumber":36,"author":{"gitId":"EugeneChanJiajun"},"content":"                || !command[2].contains(\"duration\")){","lastModifiedDate":"2024-04-06"},{"lineNumber":37,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"Please check that your \" + commandType + \" command is in this format: \\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"EugeneChanJiajun"},"content":"                    commandType + \" DESCRIPTION \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"EugeneChanJiajun"},"content":"                    \"/date YYYY-MM-DD /duration DURATION\\n\"","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"EugeneChanJiajun"},"content":"                    + \"or \" + commandType + \" DESCRIPTION /date YYYY-MM-DD /duration DURATION /tag TAG\");","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Checks for all possible input errors that users may make when updating and throws the corresponding exceptions","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param command Command array that users placed into the chatbot","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param line The line that the user inputs","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @throws OmniException when any of the corresponding input format is wrong","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"EugeneChanJiajun"},"content":"    public static void updateExceptions(String[] command, String line) throws OmniException {","lastModifiedDate":"2024-04-08"},{"lineNumber":52,"author":{"gitId":"EugeneChanJiajun"},"content":"        String[] lineSplit \u003d line.split(\"/\");","lastModifiedDate":"2024-04-08"},{"lineNumber":53,"author":{"gitId":"EugeneChanJiajun"},"content":"        if (command.length \u003e\u003d 4 \u0026\u0026 (command[1].isBlank() || !isNumeric(command[1].trim()))) {","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"The update index cannot be empty or non numerical!\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"EugeneChanJiajun"},"content":"                    \"It must be a single number\");","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (command.length \u003e\u003d 4 \u0026\u0026 command[2].isBlank()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"The date cannot be empty!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (command.length \u003e\u003d 4 \u0026\u0026 command[3].isBlank()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"The duration cannot be empty!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if(command.length \u003e\u003d 5 \u0026\u0026 command[4].isBlank()){","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"The tag cannot be empty!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (command.length \u003c 4 || command[3].contains(\"/tag\") || !lineSplit[1].contains(\"date\")","lastModifiedDate":"2024-04-08"},{"lineNumber":63,"author":{"gitId":"EugeneChanJiajun"},"content":"                || !lineSplit[2].contains(\"duration\")) {","lastModifiedDate":"2024-04-08"},{"lineNumber":64,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"Please check that your update command is in this format: \\nupdate INDEX \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"EugeneChanJiajun"},"content":"                    \"/date YYYY-MM-DD /duration DURATION\\n\"","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"EugeneChanJiajun"},"content":"                    + \"or update INDEX /date YYYY-MM-DD /duration DURATION /tag TAG\");","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"annnniexu"},"content":"    //@@author annnniexu","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"annnniexu"},"content":"     * Checks for all possible input errors that users may make when using the list command and","lastModifiedDate":"2024-04-11"},{"lineNumber":73,"author":{"gitId":"annnniexu"},"content":"     * throws the corresponding exceptions","lastModifiedDate":"2024-04-11"},{"lineNumber":74,"author":{"gitId":"annnniexu"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":75,"author":{"gitId":"annnniexu"},"content":"     * @param command Command array that users placed into the chatbot","lastModifiedDate":"2024-04-11"},{"lineNumber":76,"author":{"gitId":"annnniexu"},"content":"     * @param input Input arrary that is split at /date and /sort","lastModifiedDate":"2024-04-11"},{"lineNumber":77,"author":{"gitId":"annnniexu"},"content":"     * @param line The line that the user inputs","lastModifiedDate":"2024-04-11"},{"lineNumber":78,"author":{"gitId":"annnniexu"},"content":"     * @throws OmniException when any of the corresponding input format is wrong","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"annnniexu"},"content":"    public static void listExceptions(String[] command, String[] input, String line) throws OmniException {","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"annnniexu"},"content":"        //command is split at spaces, input is split at /date and /sort","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"annnniexu"},"content":"        // /date included, but no date provided","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"annnniexu"},"content":"        boolean case1 \u003d command.length \u003e 1 \u0026\u0026 command[1].equals(\"/date\") \u0026\u0026 (command.length \u003c 3 || input.length !\u003d 2);","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"annnniexu"},"content":"        // something other than /date or /sort is entered after list","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"annnniexu"},"content":"        boolean case2 \u003d command.length \u003e 1 \u0026\u0026 !(command[1].equals(\"/date\") || command[1].equals(\"/sort\"));","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"annnniexu"},"content":"        // only /sort tag but command length \u003e 2","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"annnniexu"},"content":"        boolean case3 \u003d command.length \u003e 2 \u0026\u0026 command[1].equals(\"/sort\");","lastModifiedDate":"2024-04-10"},{"lineNumber":88,"author":{"gitId":"annnniexu"},"content":"        // command length greater than 4","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"annnniexu"},"content":"        boolean case4 \u003d command.length \u003e 4;","lastModifiedDate":"2024-04-10"},{"lineNumber":90,"author":{"gitId":"annnniexu"},"content":"        if (case1 || case2 || case3 || case4) {","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"annnniexu"},"content":"            throw new OmniException(\"Please check that your list command is in this format:\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"annnniexu"},"content":"                    \"list [/date YYYY-MM-DD] [/sort]\");","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"annnniexu"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":95,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"daryltay415"},"content":"    //@@author daryltay415","lastModifiedDate":"2024-04-09"},{"lineNumber":98,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-04-06"},{"lineNumber":99,"author":{"gitId":"daryltay415"},"content":"     * Checks if a string contains all the words","lastModifiedDate":"2024-04-06"},{"lineNumber":100,"author":{"gitId":"daryltay415"},"content":"     * @param input The input String","lastModifiedDate":"2024-04-06"},{"lineNumber":101,"author":{"gitId":"daryltay415"},"content":"     * @throws OmniException if duration is invalid","lastModifiedDate":"2024-04-11"},{"lineNumber":102,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-04-06"},{"lineNumber":103,"author":{"gitId":"daryltay415"},"content":"    public static void containsWords(String input) throws OmniException{","lastModifiedDate":"2024-04-06"},{"lineNumber":104,"author":{"gitId":"daryltay415"},"content":"        String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2024-04-06"},{"lineNumber":105,"author":{"gitId":"daryltay415"},"content":"        if (inputSplit.length \u003d\u003d 2){","lastModifiedDate":"2024-04-06"},{"lineNumber":106,"author":{"gitId":"daryltay415"},"content":"            String[] durationKeyWords \u003d {\"day\", \"week\", \"month\", \"year\", \"hour\", \"minute\", \"second\"","lastModifiedDate":"2024-04-08"},{"lineNumber":107,"author":{"gitId":"daryltay415"},"content":"                                        ,\"days\", \"weeks\", \"months\", \"years\", \"hours\", \"minutes\", \"seconds\"};","lastModifiedDate":"2024-04-08"},{"lineNumber":108,"author":{"gitId":"daryltay415"},"content":"            for(String word:durationKeyWords){","lastModifiedDate":"2024-04-06"},{"lineNumber":109,"author":{"gitId":"daryltay415"},"content":"                if(inputSplit[1].equalsIgnoreCase(word)){","lastModifiedDate":"2024-04-08"},{"lineNumber":110,"author":{"gitId":"daryltay415"},"content":"                    return;","lastModifiedDate":"2024-04-06"},{"lineNumber":111,"author":{"gitId":"daryltay415"},"content":"                }","lastModifiedDate":"2024-04-06"},{"lineNumber":112,"author":{"gitId":"daryltay415"},"content":"            }","lastModifiedDate":"2024-04-06"},{"lineNumber":113,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":114,"author":{"gitId":"daryltay415"},"content":"        throw new OmniException(\"Your duration is invalid. Please input in terms of \\n\\\"1 \" +","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"daryltay415"},"content":"                \"day/s, week/s, month/s, year/s, hour/s, minutue/s or second/s\\\"\");","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":117,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":118,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-04-06"},{"lineNumber":119,"author":{"gitId":"daryltay415"},"content":"     * Checks if the string is a number","lastModifiedDate":"2024-04-06"},{"lineNumber":120,"author":{"gitId":"daryltay415"},"content":"     *","lastModifiedDate":"2024-04-06"},{"lineNumber":121,"author":{"gitId":"daryltay415"},"content":"     * @param str The string that is to be defined as a number or sentence","lastModifiedDate":"2024-04-06"},{"lineNumber":122,"author":{"gitId":"daryltay415"},"content":"     * @return true or false","lastModifiedDate":"2024-04-06"},{"lineNumber":123,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-04-06"},{"lineNumber":124,"author":{"gitId":"daryltay415"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2024-04-06"},{"lineNumber":125,"author":{"gitId":"daryltay415"},"content":"        try {","lastModifiedDate":"2024-04-06"},{"lineNumber":126,"author":{"gitId":"daryltay415"},"content":"            Double.parseDouble(str);","lastModifiedDate":"2024-04-06"},{"lineNumber":127,"author":{"gitId":"daryltay415"},"content":"            return true;","lastModifiedDate":"2024-04-06"},{"lineNumber":128,"author":{"gitId":"daryltay415"},"content":"        } catch(NumberFormatException e){","lastModifiedDate":"2024-04-06"},{"lineNumber":129,"author":{"gitId":"daryltay415"},"content":"            return false;","lastModifiedDate":"2024-04-06"},{"lineNumber":130,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":131,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":132,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":133,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-04-06"},{"lineNumber":134,"author":{"gitId":"daryltay415"},"content":"     * Checks if the expense given is valid","lastModifiedDate":"2024-04-06"},{"lineNumber":135,"author":{"gitId":"daryltay415"},"content":"     * @param str","lastModifiedDate":"2024-04-06"},{"lineNumber":136,"author":{"gitId":"daryltay415"},"content":"     * @return True or false","lastModifiedDate":"2024-04-06"},{"lineNumber":137,"author":{"gitId":"daryltay415"},"content":"     * @throws OmniException Throws an exception when the expense given is less than $0","lastModifiedDate":"2024-04-06"},{"lineNumber":138,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-04-06"},{"lineNumber":139,"author":{"gitId":"daryltay415"},"content":"    public static boolean isValidExpense(String str) throws OmniException{","lastModifiedDate":"2024-04-06"},{"lineNumber":140,"author":{"gitId":"daryltay415"},"content":"        if(isNumeric(str)){","lastModifiedDate":"2024-04-06"},{"lineNumber":141,"author":{"gitId":"daryltay415"},"content":"            float expense \u003d Float.parseFloat(str);","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"daryltay415"},"content":"            if(expense \u003c\u003d 0){","lastModifiedDate":"2024-04-06"},{"lineNumber":143,"author":{"gitId":"daryltay415"},"content":"                throw new OmniException(\"Your expense cannot be less than $0\");","lastModifiedDate":"2024-04-06"},{"lineNumber":144,"author":{"gitId":"daryltay415"},"content":"            }","lastModifiedDate":"2024-04-06"},{"lineNumber":145,"author":{"gitId":"daryltay415"},"content":"        } else{","lastModifiedDate":"2024-04-06"},{"lineNumber":146,"author":{"gitId":"daryltay415"},"content":"            return false;","lastModifiedDate":"2024-04-06"},{"lineNumber":147,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":148,"author":{"gitId":"daryltay415"},"content":"        return true;","lastModifiedDate":"2024-04-06"},{"lineNumber":149,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":150,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":151,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":152,"author":{"gitId":"daryltay415"},"content":"     * Checks the parameters for the currency exchange command against a list of available currencies.","lastModifiedDate":"2024-04-07"},{"lineNumber":153,"author":{"gitId":"daryltay415"},"content":"     * It also checks that the parameters are valid","lastModifiedDate":"2024-04-07"},{"lineNumber":154,"author":{"gitId":"daryltay415"},"content":"     * @param command The input given by the user that has been split into an array","lastModifiedDate":"2024-04-07"},{"lineNumber":155,"author":{"gitId":"daryltay415"},"content":"     * @param line The input given by the user","lastModifiedDate":"2024-04-07"},{"lineNumber":156,"author":{"gitId":"daryltay415"},"content":"     * @throws OmniException Throws an exception when parameters are invalid","lastModifiedDate":"2024-04-07"},{"lineNumber":157,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":158,"author":{"gitId":"daryltay415"},"content":"    public static void checkCurrencyParameters(String[] command, String line) throws OmniException{","lastModifiedDate":"2024-04-07"},{"lineNumber":159,"author":{"gitId":"daryltay415"},"content":"        String delimiter \u003d \"/\";","lastModifiedDate":"2024-04-07"},{"lineNumber":160,"author":{"gitId":"daryltay415"},"content":"        String[] lineSplit \u003d line.split(delimiter);","lastModifiedDate":"2024-04-07"},{"lineNumber":161,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":162,"author":{"gitId":"daryltay415"},"content":"        if(command.length \u003d\u003d 4 \u0026\u0026 (!isNumeric(command[1].trim()) || Float.parseFloat(command[1].trim()) \u003c\u003d 0)){","lastModifiedDate":"2024-04-07"},{"lineNumber":163,"author":{"gitId":"daryltay415"},"content":"            throw new OmniException(\"Please ensure that the amount is a number that is more than 0 and not blank\");","lastModifiedDate":"2024-04-07"},{"lineNumber":164,"author":{"gitId":"daryltay415"},"content":"        } else if(command.length \u003d\u003d 4 \u0026\u0026 command[2].trim().equalsIgnoreCase(command[3].trim())){","lastModifiedDate":"2024-04-07"},{"lineNumber":165,"author":{"gitId":"daryltay415"},"content":"            throw new OmniException(\"The 2 currencies cannot be the same!\");","lastModifiedDate":"2024-04-07"},{"lineNumber":166,"author":{"gitId":"daryltay415"},"content":"        } else if(command.length \u003c 4 || !lineSplit[1].contains(\"from\")){","lastModifiedDate":"2024-04-07"},{"lineNumber":167,"author":{"gitId":"daryltay415"},"content":"            throw new OmniException(\"Please check that your format is correct:\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"daryltay415"},"content":"                                    \"change AMOUNT /from CURRENCY /to CURRENCY\");","lastModifiedDate":"2024-04-07"},{"lineNumber":169,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":170,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":171,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":172,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":173,"author":{"gitId":"EugeneChanJiajun"},"content":"    //@@author EugeneChanJiajun","lastModifiedDate":"2024-04-09"},{"lineNumber":174,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Checks for all format errors in the user input and throes the correct exceptions","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param exception Exception thrown","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"EugeneChanJiajun"},"content":"    public static void handleException(Exception exception) {","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"EugeneChanJiajun"},"content":"        if (exception instanceof OmniException) {","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"EugeneChanJiajun"},"content":"            Ui.printException((OmniException) exception);","lastModifiedDate":"2024-04-01"},{"lineNumber":182,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (exception instanceof NoSuchElementException) {","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"EugeneChanJiajun"},"content":"            Ui.printNoSuchElementException((NoSuchElementException) exception);","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (exception instanceof NumberFormatException) {","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"EugeneChanJiajun"},"content":"            Ui.printNumberTooLargeException((NumberFormatException) exception);","lastModifiedDate":"2024-04-01"},{"lineNumber":186,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (exception instanceof DateTimeException) {","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"EugeneChanJiajun"},"content":"            Ui.printDateTimeExceptionError();","lastModifiedDate":"2024-04-01"},{"lineNumber":188,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (exception instanceof IOException) {","lastModifiedDate":"2024-04-01"},{"lineNumber":189,"author":{"gitId":"EugeneChanJiajun"},"content":"            Ui.printSavingError();","lastModifiedDate":"2024-04-01"},{"lineNumber":190,"author":{"gitId":"EugeneChanJiajun"},"content":"        } else if (exception instanceof InterruptedException) {","lastModifiedDate":"2024-04-07"},{"lineNumber":191,"author":{"gitId":"EugeneChanJiajun"},"content":"            Ui.printInterruptedError();","lastModifiedDate":"2024-04-07"},{"lineNumber":192,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":193,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":194,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":195,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":196,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Checks the input that the users placed into the chatbot and checks if the input contains any ASCII characters.","lastModifiedDate":"2024-04-08"},{"lineNumber":197,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-04-08"},{"lineNumber":198,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param input Input line that users placed into the chatbot","lastModifiedDate":"2024-04-08"},{"lineNumber":199,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @throws OmniException if the input contains any non-ASCII characters","lastModifiedDate":"2024-04-08"},{"lineNumber":200,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":201,"author":{"gitId":"EugeneChanJiajun"},"content":"    public static void asciiCheck(String input) throws OmniException {","lastModifiedDate":"2024-04-08"},{"lineNumber":202,"author":{"gitId":"EugeneChanJiajun"},"content":"        for (int i \u003d 0; i \u003c input.length(); i++) {","lastModifiedDate":"2024-04-08"},{"lineNumber":203,"author":{"gitId":"EugeneChanJiajun"},"content":"            char c \u003d input.charAt(i);","lastModifiedDate":"2024-04-08"},{"lineNumber":204,"author":{"gitId":"EugeneChanJiajun"},"content":"            if (c \u003c 32 || c \u003e 126) {","lastModifiedDate":"2024-04-08"},{"lineNumber":205,"author":{"gitId":"EugeneChanJiajun"},"content":"                throw new OmniException(\"Input contains non-ASCII characters.\");","lastModifiedDate":"2024-04-08"},{"lineNumber":206,"author":{"gitId":"EugeneChanJiajun"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":207,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":208,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":209,"author":{"gitId":"EugeneChanJiajun"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"EugeneChanJiajun":95,"daryltay415":79,"annnniexu":35}},{"path":"src/main/java/seedu/omnitravel/errorhandlers/OmniException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.errorhandlers;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"annnniexu"},"content":"/**","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"annnniexu"},"content":" * The OmniException class represents an exception specific to the OmniTravel application.","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"annnniexu"},"content":" * It extends the Java Exception class.","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"annnniexu"},"content":" */","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"EugeneChanJiajun"},"content":"public class OmniException extends Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"EugeneChanJiajun"},"content":"    public OmniException(String errorMessage){","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"EugeneChanJiajun"},"content":"        super(errorMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"EugeneChanJiajun"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"EugeneChanJiajun":6,"daryltay415":1,"annnniexu":5}},{"path":"src/main/java/seedu/omnitravel/exchangerateapi/CurrencyRate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.exchangerateapi;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.errorhandlers.OmniException;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"import java.net.URI;","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"import java.net.http.HttpClient;","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"import java.net.http.HttpRequest;","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"import java.net.http.HttpResponse;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":" * Represents the currency exchange api","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":" * It contains methods that uses the currency exchange api to exchange one currency to another","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"public class CurrencyRate {","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"    //@@author daryltay415","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"     * Converts the local currency value to the foreign currency value","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"     * @param localCurrency The local currency the user wants to convert","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"     * @param foreignCurrency The foreign currency the user want to convert to","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"daryltay415"},"content":"     * @param amount The amount of local currency the user wants to change","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"     * @throws IOException Throws an exception when there is a problem accessing the web","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"daryltay415"},"content":"     * @throws InterruptedException Throws an exception when the program is interrupted while accessing the web","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"daryltay415"},"content":"     * @throws OmniException Throws an exception when the currencies are invalid","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"daryltay415"},"content":"    public static void convertCurrency(String localCurrency, String foreignCurrency, float amount) throws","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"daryltay415"},"content":"            OmniException, IOException, InterruptedException{","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"daryltay415"},"content":"        String[] urls \u003d {\"https://latest.currency-api.pages.dev/v1/currencies/\" + localCurrency + \".json\",","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"daryltay415"},"content":"            \"https://cdn.jsdelivr.net/npm/@fawazahmed0/currency-api@latest/v1/currencies/\"","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"daryltay415"},"content":"                + localCurrency + \".json\"};","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"daryltay415"},"content":"        int errorCounter \u003d 0;","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"daryltay415"},"content":"        for(String url:urls){","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"daryltay415"},"content":"            try{","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"daryltay415"},"content":"                // Access the website","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"daryltay415"},"content":"                HttpClient client \u003d HttpClient.newHttpClient();","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"daryltay415"},"content":"                HttpRequest request \u003d HttpRequest.newBuilder()","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"daryltay415"},"content":"                        .uri(URI.create(url))","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"daryltay415"},"content":"                        .build();","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"daryltay415"},"content":"                HttpResponse\u003cString\u003e response \u003d client.send(request, HttpResponse.BodyHandlers.ofString());","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"daryltay415"},"content":"                String jsonResponse \u003d response.body();","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"daryltay415"},"content":"                if(!jsonResponse.contains(\"\\\"\" + localCurrency + \"\\\"\")){","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"daryltay415"},"content":"                    throw new OmniException(localCurrency + \" is an invalid currency!\");","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"daryltay415"},"content":"                } else if(!jsonResponse.contains(\"\\\"\" + foreignCurrency + \"\\\"\")){","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"daryltay415"},"content":"                    throw new OmniException(foreignCurrency + \" is an invalid currency!\");","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"daryltay415"},"content":"                }","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"daryltay415"},"content":"                // Parses the data","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"daryltay415"},"content":"                int index \u003d jsonResponse.indexOf(\"\\\"\" + foreignCurrency + \"\\\"\");","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"daryltay415"},"content":"                String subResponse \u003d jsonResponse.substring(index);","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"daryltay415"},"content":"                int indexOfComma \u003d subResponse.indexOf(\",\");","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"daryltay415"},"content":"                int indexOfColon \u003d subResponse.indexOf(\":\");","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"daryltay415"},"content":"                String conversionRate \u003d subResponse.substring(indexOfColon+1, indexOfComma).trim();","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"daryltay415"},"content":"                float foreignAmount \u003d amount * Float.parseFloat(conversionRate);","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"daryltay415"},"content":"                // Print the response","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"daryltay415"},"content":"                System.out.println(amount + localCurrency + \" \u003d \" + foreignAmount + foreignCurrency);","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"daryltay415"},"content":"                break;","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"daryltay415"},"content":"            } catch(IOException | InterruptedException exception){","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"daryltay415"},"content":"                System.out.println(\"Error while accessing URL, trying another URL...\");","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"daryltay415"},"content":"                errorCounter++;","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"daryltay415"},"content":"                if(errorCounter \u003d\u003d 2){","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"daryltay415"},"content":"                    System.out.println(\"Website might be Down!\");","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"daryltay415"},"content":"                }","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"daryltay415"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"daryltay415":65}},{"path":"src/main/java/seedu/omnitravel/omnitravel/OmniTravel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.omnitravel;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.parser.Parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.TravelActivityList;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.ui.Ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.errorhandlers.CheckParameters;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.errorhandlers.OmniException;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.storage.FileSave;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"public class OmniTravel {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"EugeneChanJiajun"},"content":"    //@@author EugeneChanJiajun","lastModifiedDate":"2024-04-06"},{"lineNumber":22,"author":{"gitId":"EugeneChanJiajun"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"EugeneChanJiajun"},"content":"        Logger logger \u003d Logger.getLogger(\"Main\");","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"EugeneChanJiajun"},"content":"        initialiseLogger(logger);","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"EugeneChanJiajun"},"content":"        FileSave file \u003d new FileSave(\"omni.txt\");","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"EugeneChanJiajun"},"content":"        file.readFile(list);","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"EugeneChanJiajun"},"content":"        Ui.printGreeting();","lastModifiedDate":"2024-04-06"},{"lineNumber":29,"author":{"gitId":"EugeneChanJiajun"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"EugeneChanJiajun"},"content":"        while (true) {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"EugeneChanJiajun"},"content":"            try {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"EugeneChanJiajun"},"content":"                String line \u003d in.nextLine();","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"EugeneChanJiajun"},"content":"                assert line !\u003d null :\"Input does not exist!\";","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"EugeneChanJiajun"},"content":"                CheckParameters.asciiCheck(line);","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"EugeneChanJiajun"},"content":"                String[] command \u003d line.split(\" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"EugeneChanJiajun"},"content":"                logger.log(Level.INFO, command[0]);","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"EugeneChanJiajun"},"content":"                switch (command[0].toLowerCase()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"list\":","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"EugeneChanJiajun"},"content":"                    Parser.getList(line, list);","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"EugeneChanJiajun"},"content":"                    break;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"listtags\":","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"EugeneChanJiajun"},"content":"                    Parser.listTagsCommand(command, list);","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"EugeneChanJiajun"},"content":"                    break;","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"add\":","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"EugeneChanJiajun"},"content":"                    Parser.addCommand(line, list);","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"EugeneChanJiajun"},"content":"                    break;","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"change\":","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"EugeneChanJiajun"},"content":"                    Parser.currencyExchangeCommand(line);","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"EugeneChanJiajun"},"content":"                    break;","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"accommodation\":","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"food\":","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"landmark\":","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"EugeneChanJiajun"},"content":"                    Parser.activityCommand(line, list);","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"EugeneChanJiajun"},"content":"                    break;","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"delete\":","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"check\":","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"uncheck\":","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"find\":","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"tag\":","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"untag\":","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"update\":","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"findtag\":","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"findtype\":","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"expense\":","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"removeexpense\":","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"totalexpense\":","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"EugeneChanJiajun"},"content":"                    invokeCommand(command, line, list);","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"EugeneChanJiajun"},"content":"                    break;","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"help\":","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"EugeneChanJiajun"},"content":"                    Ui.helpCommand();","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"EugeneChanJiajun"},"content":"                    break;","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"EugeneChanJiajun"},"content":"                case \"bye\":","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"EugeneChanJiajun"},"content":"                    Ui.printBye();","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"EugeneChanJiajun"},"content":"                    return;","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"EugeneChanJiajun"},"content":"                default:","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"EugeneChanJiajun"},"content":"                    Ui.printLine();","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"EugeneChanJiajun"},"content":"                    System.out.println(\"This is not a valid command!\");","lastModifiedDate":"2024-04-06"},{"lineNumber":79,"author":{"gitId":"EugeneChanJiajun"},"content":"                    System.out.println(\"Use the \u0027help\u0027 command to see the appropriate inputs!\");","lastModifiedDate":"2024-04-06"},{"lineNumber":80,"author":{"gitId":"EugeneChanJiajun"},"content":"                    Ui.printLine();","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"EugeneChanJiajun"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"EugeneChanJiajun"},"content":"                file.saveActivityList(list);","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"EugeneChanJiajun"},"content":"            } catch (OmniException | NoSuchElementException | NumberFormatException | DateTimeException","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"EugeneChanJiajun"},"content":"                     | IOException exception ) {","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"EugeneChanJiajun"},"content":"                CheckParameters.handleException(exception);","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"EugeneChanJiajun"},"content":"            } catch (Exception exception){","lastModifiedDate":"2024-04-08"},{"lineNumber":87,"author":{"gitId":"EugeneChanJiajun"},"content":"                System.out.println(\"STOP IT\");","lastModifiedDate":"2024-04-08"},{"lineNumber":88,"author":{"gitId":"EugeneChanJiajun"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Handles the respective command inputs used by the user","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param command Command array of the input without spaces","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param line Line arry of the full input","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @throws OmniException when any input format is wrong","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"EugeneChanJiajun"},"content":"    private static void invokeCommand(String[] command,","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"EugeneChanJiajun"},"content":"                                      String line, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"EugeneChanJiajun"},"content":"        Ui.printLine();","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"EugeneChanJiajun"},"content":"        switch (command[0].toLowerCase()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.deleteCommand(command, list, line);","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"check\":","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.checkCommand(command, list, line);","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"uncheck\":","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.uncheckCommand(command, list, line);","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"find\":","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.findCommand(line, list);","lastModifiedDate":"2024-04-06"},{"lineNumber":115,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"tag\":","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.tagCommand(line, list);","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"untag\":","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.removeTagCommand(command, list);","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"update\":","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.updateCommand(line, list);","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"findtag\":","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.findTagCommand(line, list);","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"findtype\":","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.findTypeCommand(line, list);","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"expense\":","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.expenseCommand(line, list);","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"removeexpense\":","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.removeExpenseCommand(command, list);","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"totalexpense\":","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"EugeneChanJiajun"},"content":"            Parser.totalExpenseCommand(line, list);","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"EugeneChanJiajun"},"content":"        default:","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"Invalid command\");","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"EugeneChanJiajun"},"content":"        Ui.printLine();","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"EugeneChanJiajun"},"content":"    private static void initialiseLogger(Logger logger) throws IOException{","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"EugeneChanJiajun"},"content":"        FileHandler filehandler \u003d new FileHandler(\"mylog.txt\");","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"EugeneChanJiajun"},"content":"        SimpleFormatter formatter \u003d new SimpleFormatter();","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"EugeneChanJiajun"},"content":"        filehandler.setFormatter(formatter);","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"EugeneChanJiajun"},"content":"        logger.addHandler(filehandler);","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"EugeneChanJiajun"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"EugeneChanJiajun"},"content":"        logger.setLevel(java.util.logging.Level.OFF);","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"EugeneChanJiajun"},"content":"    //@@author EugeneChanJiajun","lastModifiedDate":"2024-04-06"},{"lineNumber":154,"author":{"gitId":"EugeneChanJiajun"},"content":"}","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"EugeneChanJiajun":142,"daryltay415":13,"-":2}},{"path":"src/main/java/seedu/omnitravel/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.exchangerateapi.CurrencyRate;","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.TravelActivityList;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.errorhandlers.CheckParameters;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.errorhandlers.OmniException;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.Accommodation;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.Food;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.Landmark;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.TravelActivity;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.ui.Ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"annnniexu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-08"},{"lineNumber":16,"author":{"gitId":"ChinYanXu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"ChenKangg"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"annnniexu"},"content":"/**","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"annnniexu"},"content":" * The Parser class contains methods that handles user command inputs and calls the respective methods","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"annnniexu"},"content":" * in TravelActivityList.","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"annnniexu"},"content":" */","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"EugeneChanJiajun"},"content":"public class Parser {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"ChinYanXu"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ParserLogger\");","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"annnniexu"},"content":"    //@@author annnniexu","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"annnniexu"},"content":"     * Obtains the list of travel activities","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"annnniexu"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"annnniexu"},"content":"     * @param line Line that the user inputs into the chatbot","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"annnniexu"},"content":"     * @param list List of travel activities.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"annnniexu"},"content":"    public static void getList(String line, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"annnniexu"},"content":"        Ui.printLine();","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"annnniexu"},"content":"        String[] command \u003d line.split(\" \");","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"annnniexu"},"content":"        String delimiter \u003d \"/date | /sort \";","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"annnniexu"},"content":"        String[] input \u003d line.split(delimiter);","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"annnniexu"},"content":"        CheckParameters.listExceptions(command, input, line);","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"annnniexu"},"content":"        boolean sort \u003d false;","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"annnniexu"},"content":"        boolean isDate \u003d false;","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"annnniexu"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"annnniexu"},"content":"        String dateString \u003d \"all dates\";","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"annnniexu"},"content":"        if (command.length \u003d\u003d 2 || command.length \u003d\u003d 4) {","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"annnniexu"},"content":"            sort \u003d true;","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"annnniexu"},"content":"        if (command.length \u003d\u003d 3 || command.length \u003d\u003d 4) {","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"annnniexu"},"content":"            isDate \u003d true;","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"annnniexu"},"content":"            try {","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"annnniexu"},"content":"                date \u003d LocalDate.parse(command[2].trim());","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"annnniexu"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"annnniexu"},"content":"                throw new OmniException(\"Please provide the date in the format YYYY-MM-DD\");","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"annnniexu"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"annnniexu"},"content":"            if(date.isBefore(LocalDate.now())){","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"annnniexu"},"content":"                throw new OmniException(\"Please input a future date.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"annnniexu"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"annnniexu"},"content":"            dateString \u003d date.toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"annnniexu"},"content":"        System.out.println(\"Here are the travel activities for \" + dateString);","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"annnniexu"},"content":"        list.listTravelActivities(sort, isDate, date);","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"annnniexu"},"content":"        Ui.printLine();","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"annnniexu"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"EugeneChanJiajun"},"content":"    //@@author EugeneChanJiajun","lastModifiedDate":"2024-04-09"},{"lineNumber":63,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Handles the case where the add command is given as input","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param line Line that the user inputs into the chatbot","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @throws OmniException if command.length \u003c 2","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"EugeneChanJiajun"},"content":"    public static void activityCommand(String line, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"EugeneChanJiajun"},"content":"        Ui.printLine();","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"EugeneChanJiajun"},"content":"        String[] command \u003d line.split(\" \");","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"EugeneChanJiajun"},"content":"        String commandType \u003d command[0];","lastModifiedDate":"2024-04-06"},{"lineNumber":75,"author":{"gitId":"EugeneChanJiajun"},"content":"        int commandIndex \u003d commandType.length();","lastModifiedDate":"2024-04-06"},{"lineNumber":76,"author":{"gitId":"EugeneChanJiajun"},"content":"        String delimiter \u003d \" /date | /duration | /tag \";","lastModifiedDate":"2024-04-06"},{"lineNumber":77,"author":{"gitId":"EugeneChanJiajun"},"content":"        String[] input \u003d line.split(delimiter);","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"EugeneChanJiajun"},"content":"        CheckParameters.addExceptions(input, commandType, line);","lastModifiedDate":"2024-04-06"},{"lineNumber":79,"author":{"gitId":"EugeneChanJiajun"},"content":"        String description \u003d line.substring(commandIndex + 1, line.indexOf(\"/date\")).trim();","lastModifiedDate":"2024-04-06"},{"lineNumber":80,"author":{"gitId":"EugeneChanJiajun"},"content":"        LocalDate date \u003d LocalDate.parse(input[1]);","lastModifiedDate":"2024-04-06"},{"lineNumber":81,"author":{"gitId":"EugeneChanJiajun"},"content":"        if(date.isBefore(LocalDate.now())){","lastModifiedDate":"2024-04-06"},{"lineNumber":82,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"Please input a future date.\");","lastModifiedDate":"2024-04-06"},{"lineNumber":83,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":84,"author":{"gitId":"EugeneChanJiajun"},"content":"        String duration \u003d input[2].trim();","lastModifiedDate":"2024-04-06"},{"lineNumber":85,"author":{"gitId":"EugeneChanJiajun"},"content":"        CheckParameters.containsWords(duration);","lastModifiedDate":"2024-04-06"},{"lineNumber":86,"author":{"gitId":"EugeneChanJiajun"},"content":"        String tag \u003d (line.contains(\"/tag\") \u0026\u0026 input.length \u003d\u003d 4) ? input[3].trim() : \"\";","lastModifiedDate":"2024-04-06"},{"lineNumber":87,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivity activity;","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"EugeneChanJiajun"},"content":"        switch (commandType) {","lastModifiedDate":"2024-04-06"},{"lineNumber":89,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"accommodation\":","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"EugeneChanJiajun"},"content":"            activity \u003d new Accommodation(description, date, duration, tag, \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"EugeneChanJiajun"},"content":"            System.out.println(\"I added a new accommodation\");","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"food\":","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"EugeneChanJiajun"},"content":"            activity \u003d new Food(description, date, duration, tag, \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"EugeneChanJiajun"},"content":"            System.out.println(\"I added a new food activity\");","lastModifiedDate":"2024-04-06"},{"lineNumber":96,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"landmark\":","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"EugeneChanJiajun"},"content":"            activity \u003d new Landmark(description, date, duration, tag, \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"EugeneChanJiajun"},"content":"            System.out.println(\"I added a new landmark\");","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"EugeneChanJiajun"},"content":"        default:","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"Unknown activity type\");","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"EugeneChanJiajun"},"content":"        list.addTravelActivity(activity);","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"EugeneChanJiajun"},"content":"        System.out.println(activity);","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"EugeneChanJiajun"},"content":"        Ui.printLine();","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Handles the case where the add command is given as input","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param line Line that the user inputs into the chatbot","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @throws OmniException if any of the conditions are not met in the addExceptions() method","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"EugeneChanJiajun"},"content":"    public static void addCommand(String line, TravelActivityList list) throws OmniException{","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"EugeneChanJiajun"},"content":"        Ui.printLine();","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"EugeneChanJiajun"},"content":"        String[] command \u003d line.split(\"/date | /duration | /tag \");","lastModifiedDate":"2024-04-06"},{"lineNumber":119,"author":{"gitId":"EugeneChanJiajun"},"content":"        //logger.log(Level.INFO, command[0] + \" // \" +  command[1]);","lastModifiedDate":"2024-04-06"},{"lineNumber":120,"author":{"gitId":"EugeneChanJiajun"},"content":"        CheckParameters.addExceptions(command, \"add\", line);","lastModifiedDate":"2024-04-06"},{"lineNumber":121,"author":{"gitId":"EugeneChanJiajun"},"content":"        String description \u003d line.substring(4, line.indexOf(\"/date\")).trim();","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"EugeneChanJiajun"},"content":"        LocalDate date \u003d LocalDate.parse(command[1]);","lastModifiedDate":"2024-04-06"},{"lineNumber":123,"author":{"gitId":"EugeneChanJiajun"},"content":"        if(date.isBefore(LocalDate.now())){","lastModifiedDate":"2024-04-06"},{"lineNumber":124,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"Please input a future date.\");","lastModifiedDate":"2024-04-06"},{"lineNumber":125,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":126,"author":{"gitId":"EugeneChanJiajun"},"content":"        String duration \u003d command[2].trim();","lastModifiedDate":"2024-04-06"},{"lineNumber":127,"author":{"gitId":"EugeneChanJiajun"},"content":"        CheckParameters.containsWords(duration);","lastModifiedDate":"2024-04-06"},{"lineNumber":128,"author":{"gitId":"EugeneChanJiajun"},"content":"        String tag \u003d (line.contains(\"/tag\") \u0026\u0026 command.length \u003d\u003d 4) ? command[3].trim() : \"\";","lastModifiedDate":"2024-04-06"},{"lineNumber":129,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivity newActivity \u003d new TravelActivity(description, date, duration, tag, \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"EugeneChanJiajun"},"content":"        list.addTravelActivity(newActivity);","lastModifiedDate":"2024-03-23"},{"lineNumber":131,"author":{"gitId":"EugeneChanJiajun"},"content":"        System.out.println(\"I added a new travel activity\");","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"EugeneChanJiajun"},"content":"        System.out.println(newActivity);","lastModifiedDate":"2024-03-23"},{"lineNumber":133,"author":{"gitId":"EugeneChanJiajun"},"content":"        Ui.printLine();","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":135,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":136,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Handles the case where the delete command is given as input","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param command Command array of input string without spaces","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @throws OmniException if command.length !\u003d 2 \u0026\u0026 command[1] is not numeric","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"EugeneChanJiajun"},"content":"    public static void deleteCommand(String[] command, TravelActivityList list, String line) throws OmniException {","lastModifiedDate":"2024-04-12"},{"lineNumber":144,"author":{"gitId":"EugeneChanJiajun"},"content":"        if(list.getNoOfTravelActivities() \u003d\u003d 0){","lastModifiedDate":"2024-04-12"},{"lineNumber":145,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new OmniException(\"The list is empty!\");","lastModifiedDate":"2024-04-12"},{"lineNumber":146,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":147,"author":{"gitId":"EugeneChanJiajun"},"content":"        String[] lineSplit \u003d line.split(\"delete\");","lastModifiedDate":"2024-04-14"},{"lineNumber":148,"author":{"gitId":"EugeneChanJiajun"},"content":"        try {","lastModifiedDate":"2024-04-09"},{"lineNumber":149,"author":{"gitId":"EugeneChanJiajun"},"content":"            if (command.length \u003c 2) {","lastModifiedDate":"2024-04-12"},{"lineNumber":150,"author":{"gitId":"EugeneChanJiajun"},"content":"                throw new OmniException(\"Please specify which activity index or description to delete\");","lastModifiedDate":"2024-04-09"},{"lineNumber":151,"author":{"gitId":"EugeneChanJiajun"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"EugeneChanJiajun"},"content":"            int input \u003d Integer.parseInt(lineSplit[1].trim());","lastModifiedDate":"2024-04-14"},{"lineNumber":153,"author":{"gitId":"EugeneChanJiajun"},"content":"            list.removeTravelActivity(input);","lastModifiedDate":"2024-04-09"},{"lineNumber":154,"author":{"gitId":"EugeneChanJiajun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-09"},{"lineNumber":155,"author":{"gitId":"EugeneChanJiajun"},"content":"            int indexOfDescription \u003d line.indexOf(lineSplit[1]);","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"EugeneChanJiajun"},"content":"            String description \u003d line.substring(indexOfDescription).trim();","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"EugeneChanJiajun"},"content":"            list.removeTravelActivity(description);","lastModifiedDate":"2024-04-12"},{"lineNumber":158,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":159,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":161,"author":{"gitId":"annnniexu"},"content":"    //@@author annnniexu","lastModifiedDate":"2024-04-09"},{"lineNumber":162,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"annnniexu"},"content":"     * Handles the case where the check command is given as input","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"annnniexu"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"annnniexu"},"content":"     * @param command Command array of input string without spaces","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"annnniexu"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"annnniexu"},"content":"     * @throws OmniException if command.length !\u003d 2 \u0026\u0026 command[1] is not numeric","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"annnniexu"},"content":"    public static void checkCommand(String[] command, TravelActivityList list, String line) throws OmniException {","lastModifiedDate":"2024-04-14"},{"lineNumber":170,"author":{"gitId":"annnniexu"},"content":"        String[] lineSplit \u003d line.split(\"check\");","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"annnniexu"},"content":"        if (command.length \u003e\u003d 2 \u0026\u0026 CheckParameters.isNumeric(lineSplit[1].trim())){","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"annnniexu"},"content":"            int listNumber \u003d Integer.parseInt(lineSplit[1].trim());","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"annnniexu"},"content":"            list.checkTravelActivity(listNumber);","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"annnniexu"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"annnniexu"},"content":"            throw new OmniException(\"Please specify which activity to check\");","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"annnniexu"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"annnniexu"},"content":"     * Handles the case where the uncheck command is given as input","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"annnniexu"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"annnniexu"},"content":"     * @param command Command array of input string without spaces","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"annnniexu"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"annnniexu"},"content":"     * @throws OmniException if command.length !\u003d 2 \u0026\u0026 command[1] is not numeric","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"annnniexu"},"content":"    public static void uncheckCommand(String[] command, TravelActivityList list, String line) throws OmniException {","lastModifiedDate":"2024-04-14"},{"lineNumber":187,"author":{"gitId":"annnniexu"},"content":"        String[] lineSplit \u003d line.split(\"uncheck\");","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"annnniexu"},"content":"        if (command.length \u003d\u003d 2 \u0026\u0026 CheckParameters.isNumeric(command[1].trim())){","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"annnniexu"},"content":"            int listNumber \u003d Integer.parseInt(command[1].trim());","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":191,"author":{"gitId":"annnniexu"},"content":"            list.uncheckTravelActivity(listNumber);","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"annnniexu"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"annnniexu"},"content":"            throw new OmniException(\"Please specify which activity to uncheck\");","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"annnniexu"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"ChenKangg"},"content":"    //@@author ChenKangg","lastModifiedDate":"2024-04-09"},{"lineNumber":198,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"ChenKangg"},"content":"     * Handles the case where the tag command is given as input","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"ChenKangg"},"content":"     * @param line array of input string","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"ChenKangg"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"ChenKangg"},"content":"     * @throws OmniException if command.length \u003d\u003d 2","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"ChenKangg"},"content":"     * @throws OmniException if command.length \u003d\u003d 1","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"ChenKangg"},"content":"    public static void tagCommand(String line, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"ChenKangg"},"content":"        assert line !\u003d null \u0026\u0026 !line.isEmpty() : \"Command line should not be null or empty\";","lastModifiedDate":"2024-04-13"},{"lineNumber":208,"author":{"gitId":"ChenKangg"},"content":"        assert list !\u003d null : \"TravelActivityList should not be null\";","lastModifiedDate":"2024-04-13"},{"lineNumber":209,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":210,"author":{"gitId":"ChenKangg"},"content":"        logger.log(Level.INFO, \"Tagging command: \" + line);","lastModifiedDate":"2024-04-13"},{"lineNumber":211,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":212,"author":{"gitId":"ChenKangg"},"content":"        String[] command \u003d line.split(\" \");","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"ChenKangg"},"content":"        if (command.length \u003e\u003d 3 \u0026\u0026 CheckParameters.isNumeric(command[1].trim())) {","lastModifiedDate":"2024-04-14"},{"lineNumber":214,"author":{"gitId":"ChenKangg"},"content":"            int listNumber \u003d Integer.parseInt(command[1].trim());","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"ChenKangg"},"content":"            // Extract tags starting from the third element onwards","lastModifiedDate":"2024-04-13"},{"lineNumber":216,"author":{"gitId":"ChenKangg"},"content":"            String[] tagArray \u003d Arrays.copyOfRange(command, 2, command.length);","lastModifiedDate":"2024-04-08"},{"lineNumber":217,"author":{"gitId":"ChenKangg"},"content":"            // Join the tags into a single string","lastModifiedDate":"2024-04-13"},{"lineNumber":218,"author":{"gitId":"ChenKangg"},"content":"            String tags \u003d String.join(\" \", tagArray);","lastModifiedDate":"2024-04-08"},{"lineNumber":219,"author":{"gitId":"ChenKangg"},"content":"            list.tagActivity(listNumber, tags);","lastModifiedDate":"2024-04-08"},{"lineNumber":220,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":221,"author":{"gitId":"ChenKangg"},"content":"        } else if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"No tag name specified in the command: \" + line);","lastModifiedDate":"2024-04-13"},{"lineNumber":223,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Please specify a tag name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":225,"author":{"gitId":"ChenKangg"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"No task specified in the command: \" + line);","lastModifiedDate":"2024-04-13"},{"lineNumber":227,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Please specify which task to tag\");","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":231,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"ChenKangg"},"content":"     * Handles the case where the untag command is given as input","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"ChenKangg"},"content":"     * @param command Command array of input string without spaces","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"ChenKangg"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"ChenKangg"},"content":"     * @throws OmniException if command.length !\u003d 2 \u0026\u0026 command[1] is not numeric","lastModifiedDate":"2024-03-20"},{"lineNumber":237,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":238,"author":{"gitId":"ChenKangg"},"content":"    public static void removeTagCommand(String[] command, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-03-20"},{"lineNumber":239,"author":{"gitId":"ChenKangg"},"content":"        assert command !\u003d null \u0026\u0026 command.length \u003e\u003d 2 : \"Command array should not be null, empty or longer than \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":240,"author":{"gitId":"ChenKangg"},"content":"                \"length 2\";","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"ChenKangg"},"content":"        assert list !\u003d null : \"TravelActivityList should not be null\";","lastModifiedDate":"2024-04-13"},{"lineNumber":242,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":243,"author":{"gitId":"ChenKangg"},"content":"        logger.log(Level.INFO, \"Remove tag command: \" + Arrays.toString(command));","lastModifiedDate":"2024-04-13"},{"lineNumber":244,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":245,"author":{"gitId":"ChenKangg"},"content":"        if (command.length \u003d\u003d 2 \u0026\u0026 CheckParameters.isNumeric(command[1].trim())) {","lastModifiedDate":"2024-04-14"},{"lineNumber":246,"author":{"gitId":"ChenKangg"},"content":"            int listNumber \u003d Integer.parseInt(command[1].trim());","lastModifiedDate":"2024-04-14"},{"lineNumber":247,"author":{"gitId":"ChenKangg"},"content":"            list.removeTag(listNumber);","lastModifiedDate":"2024-03-20"},{"lineNumber":248,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":249,"author":{"gitId":"ChenKangg"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"Invalid command format: \" + Arrays.toString(command));","lastModifiedDate":"2024-04-13"},{"lineNumber":251,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Please specify which task to remove tag\");","lastModifiedDate":"2024-03-20"},{"lineNumber":252,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":253,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":254,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":255,"author":{"gitId":"daryltay415"},"content":"    //@@author daryltay415","lastModifiedDate":"2024-04-09"},{"lineNumber":256,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"daryltay415"},"content":"     * Handles the case where the update command is given as input","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"daryltay415"},"content":"     * @param line The update command given by the user","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"daryltay415"},"content":"     * @param list The list of travel activities","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"daryltay415"},"content":"     * @throws OmniException Thrown if update index, date, duration is not given","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"daryltay415"},"content":"    public static void updateCommand(String line, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-03-23"},{"lineNumber":263,"author":{"gitId":"daryltay415"},"content":"        String[] command \u003d line.split(\"update | /date | /duration | /tag \");","lastModifiedDate":"2024-03-27"},{"lineNumber":264,"author":{"gitId":"daryltay415"},"content":"        CheckParameters.updateExceptions(command, line);","lastModifiedDate":"2024-04-08"},{"lineNumber":265,"author":{"gitId":"daryltay415"},"content":"        String tag \u003d (line.contains(\"/tag\") \u0026\u0026 command.length \u003d\u003d 5)? command[4].trim() : \"\";","lastModifiedDate":"2024-03-31"},{"lineNumber":266,"author":{"gitId":"daryltay415"},"content":"        LocalDate date \u003d LocalDate.parse(command[2]);","lastModifiedDate":"2024-04-08"},{"lineNumber":267,"author":{"gitId":"daryltay415"},"content":"        if(date.isBefore(LocalDate.now())){","lastModifiedDate":"2024-04-08"},{"lineNumber":268,"author":{"gitId":"daryltay415"},"content":"            throw new OmniException(\"Please input a future date.\");","lastModifiedDate":"2024-04-08"},{"lineNumber":269,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":270,"author":{"gitId":"daryltay415"},"content":"        String duration \u003d command[3].trim();","lastModifiedDate":"2024-04-08"},{"lineNumber":271,"author":{"gitId":"daryltay415"},"content":"        CheckParameters.containsWords(duration);","lastModifiedDate":"2024-04-08"},{"lineNumber":272,"author":{"gitId":"daryltay415"},"content":"        list.updateTravelActivity(Integer.parseInt(command[1].trim()), date, duration,","lastModifiedDate":"2024-04-14"},{"lineNumber":273,"author":{"gitId":"daryltay415"},"content":"                tag);","lastModifiedDate":"2024-03-30"},{"lineNumber":274,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":275,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":276,"author":{"gitId":"ChinYanXu"},"content":"    //@@author ChinYanXu","lastModifiedDate":"2024-04-09"},{"lineNumber":277,"author":{"gitId":"ChinYanXu"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":278,"author":{"gitId":"ChinYanXu"},"content":"     * Handles the case where the findtag command is given as input","lastModifiedDate":"2024-03-27"},{"lineNumber":279,"author":{"gitId":"ChinYanXu"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":280,"author":{"gitId":"ChinYanXu"},"content":"     * @param line User\u0027s input into Omnitravel","lastModifiedDate":"2024-03-27"},{"lineNumber":281,"author":{"gitId":"ChinYanXu"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-03-27"},{"lineNumber":282,"author":{"gitId":"ChinYanXu"},"content":"     * @throws OmniException if command.length \u003c 1","lastModifiedDate":"2024-03-27"},{"lineNumber":283,"author":{"gitId":"ChinYanXu"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":284,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":285,"author":{"gitId":"ChinYanXu"},"content":"    public static void findTagCommand(String line, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-03-27"},{"lineNumber":286,"author":{"gitId":"ChinYanXu"},"content":"        String[] command \u003d line.split(\"findtag | /exclude\");","lastModifiedDate":"2024-04-09"},{"lineNumber":287,"author":{"gitId":"ChinYanXu"},"content":"        if (command.length \u003d\u003d 2 \u0026\u0026 !command[1].isBlank() \u0026\u0026 !line.contains(\"/exclude\")) {","lastModifiedDate":"2024-04-09"},{"lineNumber":288,"author":{"gitId":"ChinYanXu"},"content":"            String keyword \u003d command[1].trim();","lastModifiedDate":"2024-04-09"},{"lineNumber":289,"author":{"gitId":"ChinYanXu"},"content":"            list.findTag(keyword);","lastModifiedDate":"2024-04-09"},{"lineNumber":290,"author":{"gitId":"ChinYanXu"},"content":"        } else if (command.length \u003d\u003d 3 \u0026\u0026 !command[1].isBlank() \u0026\u0026 !command[2].isBlank()) {","lastModifiedDate":"2024-04-09"},{"lineNumber":291,"author":{"gitId":"ChinYanXu"},"content":"            String keyword \u003d command[1].trim();","lastModifiedDate":"2024-04-09"},{"lineNumber":292,"author":{"gitId":"ChinYanXu"},"content":"            String exclusion \u003d command[2].trim();","lastModifiedDate":"2024-04-09"},{"lineNumber":293,"author":{"gitId":"ChinYanXu"},"content":"            list.findTag(keyword, exclusion);","lastModifiedDate":"2024-04-09"},{"lineNumber":294,"author":{"gitId":"ChinYanXu"},"content":"        } else {","lastModifiedDate":"2024-04-06"},{"lineNumber":295,"author":{"gitId":"ChinYanXu"},"content":"            throw new OmniException(\"Please check that your find tag command is in this format:\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":296,"author":{"gitId":"ChinYanXu"},"content":"                    \"findtag \u003cdescription\u003e \" + \"or findtag \u003cdescription\u003e /exclude \u003cexclusion\u003e\");","lastModifiedDate":"2024-04-09"},{"lineNumber":297,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":298,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":299,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":300,"author":{"gitId":"ChinYanXu"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":301,"author":{"gitId":"ChinYanXu"},"content":"     * Handles the case where the findtype command is given as input","lastModifiedDate":"2024-03-27"},{"lineNumber":302,"author":{"gitId":"ChinYanXu"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":303,"author":{"gitId":"ChinYanXu"},"content":"     * @param line User\u0027s input into Omnitravel","lastModifiedDate":"2024-03-27"},{"lineNumber":304,"author":{"gitId":"ChinYanXu"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-04-01"},{"lineNumber":305,"author":{"gitId":"ChinYanXu"},"content":"     * @throws OmniException if command.length \u003c 1","lastModifiedDate":"2024-03-27"},{"lineNumber":306,"author":{"gitId":"ChinYanXu"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":307,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":308,"author":{"gitId":"ChinYanXu"},"content":"    public static void findTypeCommand(String line, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-03-27"},{"lineNumber":309,"author":{"gitId":"ChinYanXu"},"content":"        String[] command \u003d line.split(\"findtype | /exclude\");","lastModifiedDate":"2024-04-09"},{"lineNumber":310,"author":{"gitId":"ChinYanXu"},"content":"        if (command.length \u003d\u003d 2 \u0026\u0026 !command[1].isBlank() \u0026\u0026 !line.contains(\"/exclude\")) {","lastModifiedDate":"2024-04-09"},{"lineNumber":311,"author":{"gitId":"ChinYanXu"},"content":"            String keyword \u003d command[1].trim();","lastModifiedDate":"2024-04-09"},{"lineNumber":312,"author":{"gitId":"ChinYanXu"},"content":"            keyword \u003d keyword.equalsIgnoreCase(\"general\")? \"TravelActivity\":keyword;","lastModifiedDate":"2024-04-12"},{"lineNumber":313,"author":{"gitId":"ChinYanXu"},"content":"            list.findType(keyword);","lastModifiedDate":"2024-04-09"},{"lineNumber":314,"author":{"gitId":"ChinYanXu"},"content":"        } else if (command.length \u003d\u003d 3 \u0026\u0026 !command[1].isBlank() \u0026\u0026 !command[2].isBlank()) {","lastModifiedDate":"2024-04-09"},{"lineNumber":315,"author":{"gitId":"ChinYanXu"},"content":"            String keyword \u003d command[1].trim();","lastModifiedDate":"2024-04-09"},{"lineNumber":316,"author":{"gitId":"ChinYanXu"},"content":"            String exclusion \u003d command[2].trim();","lastModifiedDate":"2024-04-09"},{"lineNumber":317,"author":{"gitId":"ChinYanXu"},"content":"            keyword \u003d keyword.equalsIgnoreCase(\"general\")? \"TravelActivity\":keyword;","lastModifiedDate":"2024-04-12"},{"lineNumber":318,"author":{"gitId":"ChinYanXu"},"content":"            list.findType(keyword, exclusion);","lastModifiedDate":"2024-04-09"},{"lineNumber":319,"author":{"gitId":"ChinYanXu"},"content":"        } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":320,"author":{"gitId":"ChinYanXu"},"content":"            throw new OmniException(\"Please check that your find type command is in this format:\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":321,"author":{"gitId":"ChinYanXu"},"content":"                    \"findtype \u003cdescription\u003e \" + \"or findtype \u003cdescription\u003e /exclude \u003cexclusion\u003e\");","lastModifiedDate":"2024-04-09"},{"lineNumber":322,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":323,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":324,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":325,"author":{"gitId":"ChinYanXu"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":326,"author":{"gitId":"ChinYanXu"},"content":"     *  Handles the case where the find command is given as input","lastModifiedDate":"2024-03-28"},{"lineNumber":327,"author":{"gitId":"ChinYanXu"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":328,"author":{"gitId":"ChinYanXu"},"content":"     * @param line input string","lastModifiedDate":"2024-04-06"},{"lineNumber":329,"author":{"gitId":"ChinYanXu"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-03-28"},{"lineNumber":330,"author":{"gitId":"ChinYanXu"},"content":"     * @throws OmniException if command.length !\u003d 2","lastModifiedDate":"2024-03-28"},{"lineNumber":331,"author":{"gitId":"ChinYanXu"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":332,"author":{"gitId":"ChinYanXu"},"content":"    public static void findCommand(String line, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-04-06"},{"lineNumber":333,"author":{"gitId":"ChinYanXu"},"content":"        String[] command \u003d line.split(\"find | /exclude\");","lastModifiedDate":"2024-04-09"},{"lineNumber":334,"author":{"gitId":"ChinYanXu"},"content":"        if (command.length \u003d\u003d 2 \u0026\u0026 !command[1].isBlank() \u0026\u0026 !line.contains(\"/exclude\")) {","lastModifiedDate":"2024-04-09"},{"lineNumber":335,"author":{"gitId":"ChinYanXu"},"content":"            String keyword \u003d command[1].trim();","lastModifiedDate":"2024-04-06"},{"lineNumber":336,"author":{"gitId":"ChinYanXu"},"content":"            list.searchKeyword(keyword);","lastModifiedDate":"2024-03-28"},{"lineNumber":337,"author":{"gitId":"ChinYanXu"},"content":"        } else if (command.length \u003d\u003d 3 \u0026\u0026 !command[1].isBlank() \u0026\u0026 !command[2].isBlank()) {","lastModifiedDate":"2024-04-09"},{"lineNumber":338,"author":{"gitId":"ChinYanXu"},"content":"            String keyword \u003d command[1].trim();","lastModifiedDate":"2024-04-09"},{"lineNumber":339,"author":{"gitId":"ChinYanXu"},"content":"            String exclusion \u003d command[2].trim();","lastModifiedDate":"2024-04-09"},{"lineNumber":340,"author":{"gitId":"ChinYanXu"},"content":"            list.searchKeyword(keyword, exclusion);","lastModifiedDate":"2024-04-09"},{"lineNumber":341,"author":{"gitId":"ChinYanXu"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":342,"author":{"gitId":"ChinYanXu"},"content":"            throw new OmniException(\"Please check that your find command is in this format:\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":343,"author":{"gitId":"ChinYanXu"},"content":"                    \"find \u003cdescription\u003e \" + \"or find \u003cdescription\u003e /exclude \u003cexclusion\u003e\");","lastModifiedDate":"2024-04-09"},{"lineNumber":344,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":345,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":346,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":347,"author":{"gitId":"ChenKangg"},"content":"    //@@author ChenKangg","lastModifiedDate":"2024-04-09"},{"lineNumber":348,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":349,"author":{"gitId":"ChenKangg"},"content":"     * Handles the case where the expense command is given as input","lastModifiedDate":"2024-03-28"},{"lineNumber":350,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":351,"author":{"gitId":"ChenKangg"},"content":"     * @param line array of input string","lastModifiedDate":"2024-03-28"},{"lineNumber":352,"author":{"gitId":"ChenKangg"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-03-28"},{"lineNumber":353,"author":{"gitId":"ChenKangg"},"content":"     * @throws OmniException if command.length \u003d\u003d 2","lastModifiedDate":"2024-03-28"},{"lineNumber":354,"author":{"gitId":"ChenKangg"},"content":"     * @throws OmniException if command.length \u003d\u003d 1","lastModifiedDate":"2024-03-28"},{"lineNumber":355,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":356,"author":{"gitId":"ChenKangg"},"content":"    public static void expenseCommand(String line, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-03-28"},{"lineNumber":357,"author":{"gitId":"ChenKangg"},"content":"        assert line !\u003d null \u0026\u0026 !line.isEmpty() : \"Command line should not be null or empty\";","lastModifiedDate":"2024-04-13"},{"lineNumber":358,"author":{"gitId":"ChenKangg"},"content":"        assert list !\u003d null : \"TravelActivityList should not be null\";","lastModifiedDate":"2024-04-13"},{"lineNumber":359,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":360,"author":{"gitId":"ChenKangg"},"content":"        logger.log(Level.INFO, \"Expense command: \" + line);","lastModifiedDate":"2024-04-13"},{"lineNumber":361,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":362,"author":{"gitId":"ChenKangg"},"content":"        String[] command \u003d line.split(\" \");","lastModifiedDate":"2024-04-03"},{"lineNumber":363,"author":{"gitId":"ChenKangg"},"content":"        if (command.length \u003d\u003d 3 \u0026\u0026 CheckParameters.isNumeric(command[1].trim())) {","lastModifiedDate":"2024-04-14"},{"lineNumber":364,"author":{"gitId":"ChenKangg"},"content":"            int listNumber \u003d Integer.parseInt(command[1].trim());","lastModifiedDate":"2024-04-14"},{"lineNumber":365,"author":{"gitId":"ChenKangg"},"content":"            String expense \u003d command[2];","lastModifiedDate":"2024-04-06"},{"lineNumber":366,"author":{"gitId":"ChenKangg"},"content":"            list.expenseActivity(listNumber, expense);","lastModifiedDate":"2024-03-28"},{"lineNumber":367,"author":{"gitId":"ChenKangg"},"content":"        } else if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-03-28"},{"lineNumber":368,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"No expense amount specified in the command: \" + line);","lastModifiedDate":"2024-04-13"},{"lineNumber":369,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Please specify expense amount\");","lastModifiedDate":"2024-03-28"},{"lineNumber":370,"author":{"gitId":"ChenKangg"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":371,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"No task specified in the command: \" + line);","lastModifiedDate":"2024-04-13"},{"lineNumber":372,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Please specify which task to add expense\");","lastModifiedDate":"2024-03-28"},{"lineNumber":373,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":374,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":375,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":376,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":377,"author":{"gitId":"ChenKangg"},"content":"     * Handles the case where the removeexpense command is given as input","lastModifiedDate":"2024-03-28"},{"lineNumber":378,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":379,"author":{"gitId":"ChenKangg"},"content":"     * @param command Command array of input string without spaces","lastModifiedDate":"2024-03-28"},{"lineNumber":380,"author":{"gitId":"ChenKangg"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-03-28"},{"lineNumber":381,"author":{"gitId":"ChenKangg"},"content":"     * @throws OmniException if command.length !\u003d 2 \u0026\u0026 command[1] is not numeric","lastModifiedDate":"2024-03-28"},{"lineNumber":382,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":383,"author":{"gitId":"ChenKangg"},"content":"    public static void removeExpenseCommand(String[] command, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-03-28"},{"lineNumber":384,"author":{"gitId":"ChenKangg"},"content":"        assert command !\u003d null \u0026\u0026 command.length \u003e\u003d 2 : \"Command array should not be null or empty\";","lastModifiedDate":"2024-04-13"},{"lineNumber":385,"author":{"gitId":"ChenKangg"},"content":"        assert list !\u003d null : \"TravelActivityList should not be null\";","lastModifiedDate":"2024-04-13"},{"lineNumber":386,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":387,"author":{"gitId":"ChenKangg"},"content":"        logger.log(Level.INFO, \"Remove expense command: \" + Arrays.toString(command));","lastModifiedDate":"2024-04-13"},{"lineNumber":388,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":389,"author":{"gitId":"ChenKangg"},"content":"        if (command.length \u003d\u003d 2 \u0026\u0026 CheckParameters.isNumeric(command[1].trim())) {","lastModifiedDate":"2024-04-14"},{"lineNumber":390,"author":{"gitId":"ChenKangg"},"content":"            int listNumber \u003d Integer.parseInt(command[1].trim());","lastModifiedDate":"2024-04-14"},{"lineNumber":391,"author":{"gitId":"ChenKangg"},"content":"            list.removeExpense(listNumber);","lastModifiedDate":"2024-03-28"},{"lineNumber":392,"author":{"gitId":"ChenKangg"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":393,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"Invalid command format: \" + Arrays.toString(command));","lastModifiedDate":"2024-04-13"},{"lineNumber":394,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Please follow the format: removeexpense INDEX\");","lastModifiedDate":"2024-04-06"},{"lineNumber":395,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":396,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":397,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":398,"author":{"gitId":"annnniexu"},"content":"    //@@author annnniexu","lastModifiedDate":"2024-04-09"},{"lineNumber":399,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":400,"author":{"gitId":"annnniexu"},"content":"     * Handles the case where totalexpense command is given as input","lastModifiedDate":"2024-04-03"},{"lineNumber":401,"author":{"gitId":"annnniexu"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":402,"author":{"gitId":"annnniexu"},"content":"     * @param line User\u0027s input into Omnitravel","lastModifiedDate":"2024-04-03"},{"lineNumber":403,"author":{"gitId":"annnniexu"},"content":"     * @param list List of travel activities","lastModifiedDate":"2024-04-03"},{"lineNumber":404,"author":{"gitId":"annnniexu"},"content":"     * @throws OmniException","lastModifiedDate":"2024-04-03"},{"lineNumber":405,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":406,"author":{"gitId":"annnniexu"},"content":"    public static void totalExpenseCommand(String line, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-04-03"},{"lineNumber":407,"author":{"gitId":"annnniexu"},"content":"        String[] command \u003d line.split(\"/type\");","lastModifiedDate":"2024-04-03"},{"lineNumber":408,"author":{"gitId":"annnniexu"},"content":"        if ((command.length \u003d\u003d 1 \u0026\u0026 line.contains(\"type\")) || command.length \u003e 2) {","lastModifiedDate":"2024-04-14"},{"lineNumber":409,"author":{"gitId":"annnniexu"},"content":"            throw new OmniException(\"Please check your command is in the format totalexpense [/type TYPE]\");","lastModifiedDate":"2024-04-03"},{"lineNumber":410,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":411,"author":{"gitId":"annnniexu"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2024-04-03"},{"lineNumber":412,"author":{"gitId":"annnniexu"},"content":"            if(!command[0].trim().equals(\"totalexpense\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":413,"author":{"gitId":"annnniexu"},"content":"                throw new OmniException(\"Please check your command is in the format totalexpense [/type TYPE]\");","lastModifiedDate":"2024-04-03"},{"lineNumber":414,"author":{"gitId":"annnniexu"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":415,"author":{"gitId":"annnniexu"},"content":"            list.totalExpense(\"all\");","lastModifiedDate":"2024-04-03"},{"lineNumber":416,"author":{"gitId":"annnniexu"},"content":"        } else if(command[1].trim().equals(\"general\")){","lastModifiedDate":"2024-04-06"},{"lineNumber":417,"author":{"gitId":"annnniexu"},"content":"            list.totalExpense(\"TravelActivity\");","lastModifiedDate":"2024-04-06"},{"lineNumber":418,"author":{"gitId":"annnniexu"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":419,"author":{"gitId":"annnniexu"},"content":"            list.totalExpense(command[1].trim());","lastModifiedDate":"2024-04-03"},{"lineNumber":420,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":421,"author":{"gitId":"annnniexu"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":422,"author":{"gitId":"annnniexu"},"content":"    ","lastModifiedDate":"2024-04-13"},{"lineNumber":423,"author":{"gitId":"ChenKangg"},"content":"    //@@author ChenKangg","lastModifiedDate":"2024-04-09"},{"lineNumber":424,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-04-06"},{"lineNumber":425,"author":{"gitId":"ChenKangg"},"content":"     * Handles the case whereby the command is listtags","lastModifiedDate":"2024-04-06"},{"lineNumber":426,"author":{"gitId":"ChenKangg"},"content":"     * @param command The command given by the user","lastModifiedDate":"2024-04-06"},{"lineNumber":427,"author":{"gitId":"ChenKangg"},"content":"     * @param list The travel activity list","lastModifiedDate":"2024-04-06"},{"lineNumber":428,"author":{"gitId":"ChenKangg"},"content":"     * @throws OmniException Throws an exception when the command is in an invalid format","lastModifiedDate":"2024-04-06"},{"lineNumber":429,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-04-06"},{"lineNumber":430,"author":{"gitId":"ChenKangg"},"content":"    public static void listTagsCommand(String[] command, TravelActivityList list) throws OmniException {","lastModifiedDate":"2024-04-05"},{"lineNumber":431,"author":{"gitId":"ChenKangg"},"content":"        assert command !\u003d null \u0026\u0026 command.length \u003e\u003d 1 : \"Command array should not be null or empty\";","lastModifiedDate":"2024-04-13"},{"lineNumber":432,"author":{"gitId":"ChenKangg"},"content":"        assert list !\u003d null : \"TravelActivityList should not be null\";","lastModifiedDate":"2024-04-13"},{"lineNumber":433,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":434,"author":{"gitId":"ChenKangg"},"content":"        logger.log(Level.INFO, \"List tags command: \" + Arrays.toString(command));","lastModifiedDate":"2024-04-13"},{"lineNumber":435,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":436,"author":{"gitId":"ChenKangg"},"content":"        Ui.printLine();","lastModifiedDate":"2024-04-05"},{"lineNumber":437,"author":{"gitId":"ChenKangg"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2024-04-05"},{"lineNumber":438,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.INFO, \"Listing tags\");","lastModifiedDate":"2024-04-13"},{"lineNumber":439,"author":{"gitId":"ChenKangg"},"content":"            System.out.println(\"These are the tags in your list: \");","lastModifiedDate":"2024-04-05"},{"lineNumber":440,"author":{"gitId":"ChenKangg"},"content":"            list.listTags();","lastModifiedDate":"2024-04-05"},{"lineNumber":441,"author":{"gitId":"ChenKangg"},"content":"        } else {","lastModifiedDate":"2024-04-05"},{"lineNumber":442,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"Unknown command format: \" + Arrays.toString(command));","lastModifiedDate":"2024-04-13"},{"lineNumber":443,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Do you mean the command listtags?\");","lastModifiedDate":"2024-04-05"},{"lineNumber":444,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":445,"author":{"gitId":"ChenKangg"},"content":"        Ui.printLine();","lastModifiedDate":"2024-04-05"},{"lineNumber":446,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":447,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":448,"author":{"gitId":"daryltay415"},"content":"    //@@author daryltay415","lastModifiedDate":"2024-04-13"},{"lineNumber":449,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":450,"author":{"gitId":"daryltay415"},"content":"     * Handles the case whereby the command is change","lastModifiedDate":"2024-04-07"},{"lineNumber":451,"author":{"gitId":"daryltay415"},"content":"     * @param line The input given by the user","lastModifiedDate":"2024-04-07"},{"lineNumber":452,"author":{"gitId":"daryltay415"},"content":"     * @throws OmniException Throws an exception when the parameters are invalid","lastModifiedDate":"2024-04-07"},{"lineNumber":453,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":454,"author":{"gitId":"daryltay415"},"content":"    public static void currencyExchangeCommand(String line) throws OmniException{","lastModifiedDate":"2024-04-07"},{"lineNumber":455,"author":{"gitId":"daryltay415"},"content":"        Ui.printLine();","lastModifiedDate":"2024-04-07"},{"lineNumber":456,"author":{"gitId":"daryltay415"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":457,"author":{"gitId":"daryltay415"},"content":"            String delimiter \u003d \"change | /from | /to \";","lastModifiedDate":"2024-04-07"},{"lineNumber":458,"author":{"gitId":"daryltay415"},"content":"            String[] command \u003d line.split(delimiter);","lastModifiedDate":"2024-04-07"},{"lineNumber":459,"author":{"gitId":"daryltay415"},"content":"            // Check parameters","lastModifiedDate":"2024-04-07"},{"lineNumber":460,"author":{"gitId":"daryltay415"},"content":"            CheckParameters.checkCurrencyParameters(command, line);","lastModifiedDate":"2024-04-07"},{"lineNumber":461,"author":{"gitId":"daryltay415"},"content":"            float amount \u003d Float.parseFloat(command[1].trim());","lastModifiedDate":"2024-04-07"},{"lineNumber":462,"author":{"gitId":"daryltay415"},"content":"            String localCurrency \u003d command[2].toLowerCase().trim();","lastModifiedDate":"2024-04-08"},{"lineNumber":463,"author":{"gitId":"daryltay415"},"content":"            String foreignCurrency \u003d command[3].toLowerCase().trim();","lastModifiedDate":"2024-04-08"},{"lineNumber":464,"author":{"gitId":"daryltay415"},"content":"            CurrencyRate.convertCurrency(localCurrency, foreignCurrency, amount);","lastModifiedDate":"2024-04-07"},{"lineNumber":465,"author":{"gitId":"daryltay415"},"content":"        } catch(InterruptedException | IOException exception){","lastModifiedDate":"2024-04-07"},{"lineNumber":466,"author":{"gitId":"daryltay415"},"content":"            System.out.println(\"Website might be down!\");","lastModifiedDate":"2024-04-07"},{"lineNumber":467,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":468,"author":{"gitId":"daryltay415"},"content":"        Ui.printLine();","lastModifiedDate":"2024-04-07"},{"lineNumber":469,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":470,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":471,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":472,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ChinYanXu":74,"EugeneChanJiajun":101,"daryltay415":59,"ChenKangg":135,"annnniexu":103}},{"path":"src/main/java/seedu/omnitravel/storage/FileSave.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.TravelActivityList;","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.Accommodation;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.Food;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.Landmark;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.TravelActivity;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"ChinYanXu"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ChinYanXu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"annnniexu"},"content":"/**","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"annnniexu"},"content":" * The FileSave class is responsible for saving a TravelActivity list to disk and loading","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"annnniexu"},"content":" * a TravelActivity from disk.","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"annnniexu"},"content":" *","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"annnniexu"},"content":" */","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"EugeneChanJiajun"},"content":"public class FileSave {","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"EugeneChanJiajun"},"content":"    //@@author EugeneChanJiajun","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"EugeneChanJiajun"},"content":"    private static Logger logger \u003d Logger.getLogger(\"LoadFileLogger\");","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"EugeneChanJiajun"},"content":"    private static String filePath;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"EugeneChanJiajun"},"content":"    public FileSave(String path) {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"EugeneChanJiajun"},"content":"        this.filePath \u003d path;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Reads data from file and loads it into a travel activity list","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param list The travel activity list to load data in to","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @throws FileNotFoundException If the file does not exist","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void loadFileContents(TravelActivityList list) throws FileNotFoundException {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"EugeneChanJiajun"},"content":"        logger.log(Level.INFO, \"loadFileContents\");","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"EugeneChanJiajun"},"content":"        java.io.File f \u003d new java.io.File(filePath);","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"EugeneChanJiajun"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"EugeneChanJiajun"},"content":"        while (s.hasNext()){","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"EugeneChanJiajun"},"content":"            String[] line \u003d s.nextLine().split(\" / \");","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"EugeneChanJiajun"},"content":"            String type \u003d line[0].toLowerCase();","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"EugeneChanJiajun"},"content":"            String description \u003d line[2];","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"EugeneChanJiajun"},"content":"            LocalDate date \u003d LocalDate.parse(line[3]);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"EugeneChanJiajun"},"content":"            String duration \u003d line[4];","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"EugeneChanJiajun"},"content":"            String tag \u003d line.length \u003e\u003d 6 ? line[5].trim() : \"\";","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"EugeneChanJiajun"},"content":"            String expense \u003d line.length \u003e\u003d 7 ? line[6].trim() : \"\";","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"EugeneChanJiajun"},"content":"            TravelActivity activity \u003d initialiseActivity (type, description, date, duration, tag, expense);","lastModifiedDate":"2024-04-08"},{"lineNumber":48,"author":{"gitId":"EugeneChanJiajun"},"content":"            list.addTravelActivity(activity);","lastModifiedDate":"2024-04-08"},{"lineNumber":49,"author":{"gitId":"EugeneChanJiajun"},"content":"            if (line[1].equals(\"1\")) {","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"EugeneChanJiajun"},"content":"                activity.setActivityStatus(true);","lastModifiedDate":"2024-04-08"},{"lineNumber":51,"author":{"gitId":"EugeneChanJiajun"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":52,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":53,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":55,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Initializes a travel activity object based on the given parameters","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param type The type of travel activity (food, landmark, accommodation, general)","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param description The description of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param date The date of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param duration The duration of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param tag The tag of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":63,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param expense The expense of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":64,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @return The TravelActivity object","lastModifiedDate":"2024-04-11"},{"lineNumber":65,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @throws FileNotFoundException If the type is not valid","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"EugeneChanJiajun"},"content":"    public TravelActivity initialiseActivity (String type, String description,","lastModifiedDate":"2024-04-08"},{"lineNumber":68,"author":{"gitId":"EugeneChanJiajun"},"content":"            LocalDate date, String duration, String tag, String expense) throws FileNotFoundException {","lastModifiedDate":"2024-04-08"},{"lineNumber":69,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivity activity;","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"EugeneChanJiajun"},"content":"        switch (type) {","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"accommodation\":","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"EugeneChanJiajun"},"content":"            activity \u003d new Accommodation(description, date, duration, tag, expense);","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"food\":","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"EugeneChanJiajun"},"content":"            activity \u003d new Food(description, date, duration, tag, expense);","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"landmark\":","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"EugeneChanJiajun"},"content":"            activity \u003d new Landmark(description, date, duration, tag, expense);","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"EugeneChanJiajun"},"content":"        case \"general\":","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"EugeneChanJiajun"},"content":"            activity \u003d new TravelActivity(description, date, duration, tag, expense);","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"EugeneChanJiajun"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"EugeneChanJiajun"},"content":"        default:","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"EugeneChanJiajun"},"content":"            throw new FileNotFoundException(\"File is corrupted or has invalid format\");","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"EugeneChanJiajun"},"content":"        return activity;","lastModifiedDate":"2024-04-08"},{"lineNumber":87,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":90,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Saves the travel activity list to the file specified by the file path","lastModifiedDate":"2024-04-11"},{"lineNumber":91,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param list The travel activity list to save to the file","lastModifiedDate":"2024-04-11"},{"lineNumber":92,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @throws IOException If an I/o error occurs while writing to file","lastModifiedDate":"2024-04-11"},{"lineNumber":93,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":94,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void saveActivityList(TravelActivityList list) throws IOException {","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"EugeneChanJiajun"},"content":"        logger.log(Level.INFO, \"saveActivityList\");","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"EugeneChanJiajun"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"EugeneChanJiajun"},"content":"        for (TravelActivity travelActivity: list.getTravelActivities()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"EugeneChanJiajun"},"content":"            if (travelActivity instanceof Accommodation) {","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"EugeneChanJiajun"},"content":"                fw.write(\"accommodation / \");","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"EugeneChanJiajun"},"content":"            } else if (travelActivity instanceof Food) {","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"EugeneChanJiajun"},"content":"                fw.write(\"food / \");","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"EugeneChanJiajun"},"content":"            } else if (travelActivity instanceof Landmark) {","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"EugeneChanJiajun"},"content":"                fw.write(\"landmark / \");","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"EugeneChanJiajun"},"content":"            } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"EugeneChanJiajun"},"content":"                fw.write(\"general / \");","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"EugeneChanJiajun"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"EugeneChanJiajun"},"content":"            fw.write((travelActivity.getActivityStatus() ? \"1 / \" : \"0 / \") + travelActivity.getPlan()","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"EugeneChanJiajun"},"content":"                    + \" / \" + travelActivity.getDate()","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"EugeneChanJiajun"},"content":"                    + \" / \" + travelActivity.getDuration()","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"EugeneChanJiajun"},"content":"                    + \" / \" + travelActivity.getTag()","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"EugeneChanJiajun"},"content":"                    + \" / \" + travelActivity.getExpense()","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"EugeneChanJiajun"},"content":"                    + System.lineSeparator());","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"EugeneChanJiajun"},"content":"        fw.close();","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":118,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Reads the file and loads information into the provided travel activity list.","lastModifiedDate":"2024-04-11"},{"lineNumber":119,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":120,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param list The travel activity list to load the file into","lastModifiedDate":"2024-04-11"},{"lineNumber":121,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":122,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void readFile(TravelActivityList list) {","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"EugeneChanJiajun"},"content":"        logger.log(Level.INFO, \"readFile\");","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"EugeneChanJiajun"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"EugeneChanJiajun"},"content":"            loadFileContents(list);","lastModifiedDate":"2024-03-23"},{"lineNumber":126,"author":{"gitId":"EugeneChanJiajun"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"EugeneChanJiajun"},"content":"            System.out.println(\"No existing database found! Creating a new save file for you!\");","lastModifiedDate":"2024-04-06"},{"lineNumber":128,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"EugeneChanJiajun"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"ChinYanXu":2,"EugeneChanJiajun":111,"daryltay415":12,"annnniexu":5}},{"path":"src/main/java/seedu/omnitravel/travelactivitytypes/Accommodation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.travelactivitytypes;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"EugeneChanJiajun"},"content":"public class Accommodation extends TravelActivity {","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"EugeneChanJiajun"},"content":"    private LocalDate date;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"EugeneChanJiajun"},"content":"    private String duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"    public Accommodation(String line, LocalDate date, String duration, String tag, String expense){","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"        super(line, date, duration, tag, expense);","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"EugeneChanJiajun"},"content":"    public String toString(){","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"EugeneChanJiajun"},"content":"        return \"Accommodation: \" + super.toString();","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"EugeneChanJiajun"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"EugeneChanJiajun":15,"daryltay415":3}},{"path":"src/main/java/seedu/omnitravel/travelactivitytypes/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.travelactivitytypes;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"EugeneChanJiajun"},"content":"public class Food extends TravelActivity {","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"    public Food(String line, LocalDate date, String duration, String tag, String expense){","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"        super(line, date, duration, tag, expense);","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"EugeneChanJiajun"},"content":"    public String toString(){","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"EugeneChanJiajun"},"content":"        return \"Food: \" + super.toString();","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"EugeneChanJiajun"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"EugeneChanJiajun":11,"daryltay415":3}},{"path":"src/main/java/seedu/omnitravel/travelactivitytypes/Landmark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.travelactivitytypes;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"EugeneChanJiajun"},"content":"public class Landmark extends TravelActivity {","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"EugeneChanJiajun"},"content":"    //@@author EugeneChanJiajun","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"EugeneChanJiajun"},"content":"    public Landmark(String line, LocalDate date, String duration, String tag, String expense){","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"EugeneChanJiajun"},"content":"        super(line, date, duration, tag, expense);","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"EugeneChanJiajun"},"content":"    public String toString(){","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"EugeneChanJiajun"},"content":"        return \"Landmark: \" + super.toString();","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"EugeneChanJiajun"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"EugeneChanJiajun":13,"daryltay415":1}},{"path":"src/main/java/seedu/omnitravel/travelactivitytypes/TravelActivity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.travelactivitytypes;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"annnniexu"},"content":"/**","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"annnniexu"},"content":" * The TravelActivity class represents a single travel activity and has attributes","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"annnniexu"},"content":" * description, date, duration, tag, expense, and whether or not the activity is completed.","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"annnniexu"},"content":" *","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"annnniexu"},"content":" */","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"public class TravelActivity {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"    /** Travel activity description */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":"    private String travelActivity;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"    /** Travel activity date */","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"    private LocalDate date;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"    /** Travel activity duration */","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"    private String duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"    /** Travel activity status */","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"EugeneChanJiajun"},"content":"    private boolean activityIsDone \u003d false;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ChenKangg"},"content":"    /** Travel activity tag */","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"ChenKangg"},"content":"    private String tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ChenKangg"},"content":"    /** Travel activity expense */","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"ChenKangg"},"content":"    private String expense;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"daryltay415"},"content":"    public TravelActivity(String description, LocalDate date, String duration, String tag, String expense){","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"daryltay415"},"content":"        travelActivity \u003d description;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"daryltay415"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"daryltay415"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"ChinYanXu"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"daryltay415"},"content":"        this.expense \u003d expense;","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"daryltay415"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"daryltay415"},"content":"    public String toString(){","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"daryltay415"},"content":"        if(tag.isBlank()){","lastModifiedDate":"2024-04-06"},{"lineNumber":39,"author":{"gitId":"daryltay415"},"content":"            return travelActivity + \" :\" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" :\" + duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"daryltay415"},"content":"        return travelActivity + \" :\" + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \" :\" + duration","lastModifiedDate":"2024-04-06"},{"lineNumber":42,"author":{"gitId":"daryltay415"},"content":"                + \" (\" + tag +\")\";","lastModifiedDate":"2024-04-06"},{"lineNumber":43,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Sets the status of the activity to complete or incomplete","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param activityIsDone activity status","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void setActivityStatus(boolean activityIsDone){","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"EugeneChanJiajun"},"content":"        this.activityIsDone \u003d activityIsDone;","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"daryltay415"},"content":"     * Gets the description of the travel activity","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"daryltay415"},"content":"     * @return The description of the travel activity","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"EugeneChanJiajun"},"content":"    public String getPlan(){","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"EugeneChanJiajun"},"content":"        return travelActivity;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":63,"author":{"gitId":"annnniexu"},"content":"     * Gets the status of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":64,"author":{"gitId":"annnniexu"},"content":"     * @return boolean representing if activity is done or not","lastModifiedDate":"2024-04-11"},{"lineNumber":65,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"EugeneChanJiajun"},"content":"    public boolean getActivityStatus() {","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"EugeneChanJiajun"},"content":"        return activityIsDone;","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":71,"author":{"gitId":"annnniexu"},"content":"     * Sets the date of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":72,"author":{"gitId":"annnniexu"},"content":"     * @param date the date to be set","lastModifiedDate":"2024-04-11"},{"lineNumber":73,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":74,"author":{"gitId":"daryltay415"},"content":"    public void setDate(LocalDate date){","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"daryltay415"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"annnniexu"},"content":"     * Gets the date of the travel activity.","lastModifiedDate":"2024-04-11"},{"lineNumber":80,"author":{"gitId":"annnniexu"},"content":"     * @return the date of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":81,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":82,"author":{"gitId":"daryltay415"},"content":"    public LocalDate getDate(){","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"daryltay415"},"content":"        return date;","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":87,"author":{"gitId":"annnniexu"},"content":"     * Sets the duration of the travel activity.","lastModifiedDate":"2024-04-11"},{"lineNumber":88,"author":{"gitId":"annnniexu"},"content":"     * @param duration the duration to be set","lastModifiedDate":"2024-04-11"},{"lineNumber":89,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":90,"author":{"gitId":"daryltay415"},"content":"    public void setDuration(String duration){","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"daryltay415"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":95,"author":{"gitId":"annnniexu"},"content":"     * Gets the duration of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":96,"author":{"gitId":"annnniexu"},"content":"     * @return the duration of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":97,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":98,"author":{"gitId":"daryltay415"},"content":"    public String getDuration(){","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"daryltay415"},"content":"        return duration;","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"ChenKangg"},"content":"     * Get the tag of the travel activity","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"ChenKangg"},"content":"     * @return The tag of the travel activity","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"ChenKangg"},"content":"    public String getTag() {","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"ChenKangg"},"content":"        return tag;","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"ChenKangg"},"content":"     * Set the tag of the travel activity","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"ChenKangg"},"content":"     * @param tag The tag to be set","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"ChenKangg"},"content":"    public void setTag(String tag) {","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"ChenKangg"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"ChenKangg"},"content":"     * Remove the tag of the travel activity","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"ChenKangg"},"content":"    public void removeTag() {","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"ChenKangg"},"content":"        this.tag \u003d \"\";","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":128,"author":{"gitId":"ChenKangg"},"content":"     * Get the expense of the travel activity","lastModifiedDate":"2024-04-13"},{"lineNumber":129,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"annnniexu"},"content":"     * @return The expense of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":131,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"ChenKangg"},"content":"    public String getExpense() {","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"ChenKangg"},"content":"        return expense;","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":137,"author":{"gitId":"ChenKangg"},"content":"     * Set the expense of the travel activity","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"annnniexu"},"content":"     * @param expense The expense of the travel activity","lastModifiedDate":"2024-04-11"},{"lineNumber":140,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":141,"author":{"gitId":"ChenKangg"},"content":"    public void setExpense(String expense) {","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"ChenKangg"},"content":"        this.expense \u003d expense;","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":146,"author":{"gitId":"ChenKangg"},"content":"     * Remove the expense of the travel activity","lastModifiedDate":"2024-04-13"},{"lineNumber":147,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":148,"author":{"gitId":"ChenKangg"},"content":"    public void removeExpense() {","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"ChenKangg"},"content":"        this.expense \u003d \"\";","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":153,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"ChinYanXu":1,"EugeneChanJiajun":14,"daryltay415":56,"ChenKangg":50,"annnniexu":33}},{"path":"src/main/java/seedu/omnitravel/travelactivitytypes/TravelActivityList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.travelactivitytypes;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.errorhandlers.CheckParameters;","lastModifiedDate":"2024-04-06"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.errorhandlers.OmniException;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.ui.Ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"annnniexu"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"ChinYanXu"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"ChinYanXu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"annnniexu"},"content":"/**","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"annnniexu"},"content":" * The TravelActivityList class represents the list of travel activities that the user inputs.","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"annnniexu"},"content":" * Methods include adding, removing, listing, expensing, updating, tagging, and filtering travel activities.","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"annnniexu"},"content":" *","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"annnniexu"},"content":" */","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"public class TravelActivityList {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ChinYanXu"},"content":"    private static Logger logger \u003d Logger.getLogger(\"TravelActivityListLogger\");","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"    /** Array of travel activity */","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"daryltay415"},"content":"    private ArrayList\u003cTravelActivity\u003e travelActivities;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"daryltay415"},"content":"    /** Array of tags given to travel activities */","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"daryltay415"},"content":"    private ArrayList\u003cString\u003e travelActivityTags;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"daryltay415"},"content":"    /** Number of TravelActivities */","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"EugeneChanJiajun"},"content":"    private int noOfActivities \u003d 0;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"daryltay415"},"content":"    public TravelActivityList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"daryltay415"},"content":"        travelActivities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"daryltay415"},"content":"        travelActivityTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"daryltay415"},"content":"     * Adds travel activity to the travel activity list","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"daryltay415"},"content":"     * @param travelActivity The travel activity","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"daryltay415"},"content":"    public void addTravelActivity(TravelActivity travelActivity){","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"ChinYanXu"},"content":"        //logger.log(Level.INFO, \"addKeyword function started\");","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"EugeneChanJiajun"},"content":"        int initialListSize \u003d noOfActivities;","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"daryltay415"},"content":"        travelActivities.add(travelActivity);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ChinYanXu"},"content":"        //logger.log(Level.INFO, \"travelActivity is added\");","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"EugeneChanJiajun"},"content":"        noOfActivities +\u003d 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"EugeneChanJiajun"},"content":"        int newSize \u003d noOfActivities;","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"daryltay415"},"content":"        assert newSize \u003d\u003d initialListSize + 1 :\"There is an error with list size!\";","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"annnniexu"},"content":"     * Prints out all the travel activities.","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"annnniexu"},"content":"     * If sort is enabled, the list will be printed out from oldest to newest date.","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"annnniexu"},"content":"     * If filterDate is enabled and a date is provided, only activities from that date will be printed","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"annnniexu"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"annnniexu"},"content":"     * @param sort boolean indicating if list should be sorted","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"annnniexu"},"content":"     * @param filterDate boolean indicating if list should be filtered by date","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"annnniexu"},"content":"     * @param date the date to be filtered by","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"annnniexu"},"content":"    public void listTravelActivities(boolean sort, boolean filterDate, LocalDate date){","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"annnniexu"},"content":"        ArrayList\u003cTravelActivity\u003e activities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"annnniexu"},"content":"        if (filterDate) {","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"annnniexu"},"content":"            for (TravelActivity a: travelActivities) {","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"annnniexu"},"content":"                if (a.getDate().equals(date)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"annnniexu"},"content":"                    activities.add(a);","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"annnniexu"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"annnniexu"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"annnniexu"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"daryltay415"},"content":"            activities.addAll(travelActivities);","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"annnniexu"},"content":"        if (sort) {","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"annnniexu"},"content":"            Collections.sort(activities, Comparator.comparing(TravelActivity::getDate));","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"EugeneChanJiajun"},"content":"        int activityCount \u003d 0;","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"annnniexu"},"content":"        for (TravelActivity activity: activities) {","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"EugeneChanJiajun"},"content":"            if (activity \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"daryltay415"},"content":"                break;","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"daryltay415"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"EugeneChanJiajun"},"content":"            activityCount++;","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"daryltay415"},"content":"            Ui.printActivity(activity, activityCount);","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"annnniexu"},"content":"        if (activityCount \u003d\u003d 0) {","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"annnniexu"},"content":"            System.out.println(\"There are no activities to list\");","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"daryltay415"},"content":"        int finalActivityCount \u003d noOfActivities;","lastModifiedDate":"2024-04-06"},{"lineNumber":84,"author":{"gitId":"annnniexu"},"content":"        assert finalActivityCount \u003e\u003d activityCount : \"Index out of bounds while listing activities\";","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"daryltay415"},"content":"     * returns the number of travel activities in the list","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"daryltay415"},"content":"     * @return the number of travel activities","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"daryltay415"},"content":"    public int getNoOfTravelActivities(){","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"EugeneChanJiajun"},"content":"        return noOfActivities;","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":96,"author":{"gitId":"ChinYanXu"},"content":"    //@@author ChinYanXu","lastModifiedDate":"2024-04-09"},{"lineNumber":97,"author":{"gitId":"ChinYanXu"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"ChinYanXu"},"content":"     * Removes travel activity from the travel activity list using the travel activity index number","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"ChinYanXu"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"ChinYanXu"},"content":"     * @param activityNumber The index number of the travel activity that the user wants to remove","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"ChinYanXu"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":103,"author":{"gitId":"ChinYanXu"},"content":"    public void removeTravelActivity(int activityNumber) throws OmniException {","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"ChinYanXu"},"content":"        assert activityNumber !\u003d 0 : \"There is no activities in the list\";","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"ChinYanXu"},"content":"        int indexOfActivity \u003d activityNumber - 1;","lastModifiedDate":"2024-04-09"},{"lineNumber":106,"author":{"gitId":"ChinYanXu"},"content":"        int initialListSize \u003d noOfActivities;","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"ChinYanXu"},"content":"        if(activityNumber \u003e noOfActivities){","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"ChinYanXu"},"content":"            throw new OmniException(\"I cannot find the travel activity to delete!\");","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity removedActivity \u003d travelActivities.get(indexOfActivity);","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"ChinYanXu"},"content":"        travelActivities.remove(indexOfActivity);","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"ChinYanXu"},"content":"        System.out.println(\"I have removed this activity:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"ChinYanXu"},"content":"        System.out.println(\"1. \" + removedActivity);","lastModifiedDate":"2024-04-09"},{"lineNumber":114,"author":{"gitId":"ChinYanXu"},"content":"        noOfActivities -\u003d 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"ChinYanXu"},"content":"        int newSize \u003d noOfActivities;","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"ChinYanXu"},"content":"        assert newSize \u003d\u003d initialListSize - 1 : \"There is an error with list size!\";","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":118,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":119,"author":{"gitId":"ChinYanXu"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"ChinYanXu"},"content":"     * Overloaded version of removeTravelActivity function to enable user to remove travel activities from the travel","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"ChinYanXu"},"content":"     * activity list using the travel activity description","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"ChinYanXu"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"ChinYanXu"},"content":"     * @param activity The description of travel activity that the user wants to remove","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"ChinYanXu"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"ChinYanXu"},"content":"    public void removeTravelActivity(String activity){","lastModifiedDate":"2024-04-12"},{"lineNumber":127,"author":{"gitId":"ChinYanXu"},"content":"        int foundCounter \u003d 0;","lastModifiedDate":"2024-04-09"},{"lineNumber":128,"author":{"gitId":"ChinYanXu"},"content":"        for (int iterator \u003d 0; iterator \u003c travelActivities.size(); iterator +\u003d 1) {","lastModifiedDate":"2024-04-09"},{"lineNumber":129,"author":{"gitId":"ChinYanXu"},"content":"            if (travelActivities.get(iterator).getPlan().toLowerCase().contains(activity.toLowerCase())) {","lastModifiedDate":"2024-04-09"},{"lineNumber":130,"author":{"gitId":"ChinYanXu"},"content":"                if (foundCounter \u003d\u003d 0) {","lastModifiedDate":"2024-04-09"},{"lineNumber":131,"author":{"gitId":"ChinYanXu"},"content":"                    System.out.println(\"I have removed this activity:\");","lastModifiedDate":"2024-04-09"},{"lineNumber":132,"author":{"gitId":"ChinYanXu"},"content":"                }","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"ChinYanXu"},"content":"                System.out.println(Integer.toString(foundCounter + 1) + \". \" + travelActivities.get(iterator));","lastModifiedDate":"2024-04-09"},{"lineNumber":134,"author":{"gitId":"ChinYanXu"},"content":"                travelActivities.remove(iterator);","lastModifiedDate":"2024-04-09"},{"lineNumber":135,"author":{"gitId":"ChinYanXu"},"content":"                iterator -\u003d 1;","lastModifiedDate":"2024-04-09"},{"lineNumber":136,"author":{"gitId":"ChinYanXu"},"content":"                noOfActivities -\u003d 1;","lastModifiedDate":"2024-04-09"},{"lineNumber":137,"author":{"gitId":"ChinYanXu"},"content":"                foundCounter +\u003d 1;","lastModifiedDate":"2024-04-09"},{"lineNumber":138,"author":{"gitId":"ChinYanXu"},"content":"                assert noOfActivities \u003e\u003d 0 : \"There is an error with list size!\";","lastModifiedDate":"2024-04-09"},{"lineNumber":139,"author":{"gitId":"ChinYanXu"},"content":"            }","lastModifiedDate":"2024-04-09"},{"lineNumber":140,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":141,"author":{"gitId":"ChinYanXu"},"content":"        if (foundCounter \u003d\u003d 0) {","lastModifiedDate":"2024-04-09"},{"lineNumber":142,"author":{"gitId":"ChinYanXu"},"content":"            System.out.println(\"Can\u0027t find any related activity to remove\");","lastModifiedDate":"2024-04-09"},{"lineNumber":143,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":145,"author":{"gitId":"ChinYanXu"},"content":"      ","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"EugeneChanJiajun"},"content":"    //@@author EugeneChanJiajun","lastModifiedDate":"2024-04-09"},{"lineNumber":147,"author":{"gitId":"EugeneChanJiajun"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":148,"author":{"gitId":"EugeneChanJiajun"},"content":"     * Obtains the description of the plan that we are looking for from the travel activity list","lastModifiedDate":"2024-04-07"},{"lineNumber":149,"author":{"gitId":"EugeneChanJiajun"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":150,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @param plan Plan that we are looking for in the travel activity list","lastModifiedDate":"2024-04-07"},{"lineNumber":151,"author":{"gitId":"EugeneChanJiajun"},"content":"     * @return The travel activity description user is looking for","lastModifiedDate":"2024-04-07"},{"lineNumber":152,"author":{"gitId":"EugeneChanJiajun"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":153,"author":{"gitId":"EugeneChanJiajun"},"content":"    public String getDescription(String plan){","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"EugeneChanJiajun"},"content":"        for(TravelActivity travelActivity: travelActivities){","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"EugeneChanJiajun"},"content":"            if(travelActivity.getPlan().equals(plan)){","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"EugeneChanJiajun"},"content":"                return travelActivity.getPlan();","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"EugeneChanJiajun"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"EugeneChanJiajun"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"EugeneChanJiajun"},"content":"        return \"cant be found\";","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"ChinYanXu"},"content":"    //@@author ChinYanXu","lastModifiedDate":"2024-04-09"},{"lineNumber":162,"author":{"gitId":"ChinYanXu"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"ChinYanXu"},"content":"     * Finds all activities in the TravelActivity list that contains a keyword specified by the user.","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"ChinYanXu"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"ChinYanXu"},"content":"     * @param activityName keyword specified by the user to find travel activities in the TravelActivity list","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"ChinYanXu"},"content":"     *                 with description related to the keyword.","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"ChinYanXu"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"ChinYanXu"},"content":"    public void searchKeyword (String activityName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"ChinYanXu"},"content":"        int foundCounter \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"ChinYanXu"},"content":"        for (TravelActivity travelActivity : travelActivities) {","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"ChinYanXu"},"content":"            assert !(foundCounter \u003e travelActivities.size()) : \"Error: There is more activities found than possible\";","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"ChinYanXu"},"content":"            if (travelActivity.getPlan().contains(activityName) \u0026\u0026","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"ChinYanXu"},"content":"                    !travelActivity.getPlan().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"ChinYanXu"},"content":"                foundCounter +\u003d 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"ChinYanXu"},"content":"                if (foundCounter \u003d\u003d 1) {","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"ChinYanXu"},"content":"                    System.out.println(\"Here are what you are looking for:\");","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"ChinYanXu"},"content":"                }","lastModifiedDate":"2024-03-15"},{"lineNumber":179,"author":{"gitId":"ChinYanXu"},"content":"                Ui.printActivity(travelActivity, foundCounter);","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"ChinYanXu"},"content":"            }","lastModifiedDate":"2024-04-09"},{"lineNumber":181,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":182,"author":{"gitId":"ChinYanXu"},"content":"        if (foundCounter \u003d\u003d 0) {","lastModifiedDate":"2024-04-09"},{"lineNumber":183,"author":{"gitId":"ChinYanXu"},"content":"            System.out.println(\"Sorry I could not find what you are looking for.\");","lastModifiedDate":"2024-04-09"},{"lineNumber":184,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":185,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":186,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"ChinYanXu"},"content":"    /**","lastModifiedDate":"2024-04-09"},{"lineNumber":188,"author":{"gitId":"ChinYanXu"},"content":"     * Overloaded version of searchKeyword function to enable user to exclude certain travel activities from their","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"ChinYanXu"},"content":"     * search","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"ChinYanXu"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":191,"author":{"gitId":"ChinYanXu"},"content":"     * @param activityName The description of the travel activities that the user wants to find","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"ChinYanXu"},"content":"     * @param exclusion The keyword that the travel activities uses to remove unwanted results from the search","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"ChinYanXu"},"content":"     */","lastModifiedDate":"2024-04-09"},{"lineNumber":194,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":195,"author":{"gitId":"ChinYanXu"},"content":"    public void searchKeyword (String activityName, String exclusion) {","lastModifiedDate":"2024-04-09"},{"lineNumber":196,"author":{"gitId":"ChinYanXu"},"content":"        int foundCounter \u003d 0;","lastModifiedDate":"2024-04-09"},{"lineNumber":197,"author":{"gitId":"ChinYanXu"},"content":"        String lowerCaseActivityName \u003d activityName.toLowerCase();","lastModifiedDate":"2024-04-14"},{"lineNumber":198,"author":{"gitId":"ChinYanXu"},"content":"        String lowerCaseExclusion \u003d exclusion.toLowerCase();","lastModifiedDate":"2024-04-14"},{"lineNumber":199,"author":{"gitId":"ChinYanXu"},"content":"        for (TravelActivity travelActivity : travelActivities) {","lastModifiedDate":"2024-04-09"},{"lineNumber":200,"author":{"gitId":"ChinYanXu"},"content":"            assert !(foundCounter \u003e travelActivities.size()) : \"Error: There is more activities found than possible\";","lastModifiedDate":"2024-04-09"},{"lineNumber":201,"author":{"gitId":"ChinYanXu"},"content":"            if (travelActivity.getPlan().toLowerCase().contains(lowerCaseActivityName)","lastModifiedDate":"2024-04-14"},{"lineNumber":202,"author":{"gitId":"ChinYanXu"},"content":"                    \u0026\u0026 !travelActivity.getPlan().toLowerCase().contains(lowerCaseExclusion)","lastModifiedDate":"2024-04-14"},{"lineNumber":203,"author":{"gitId":"ChinYanXu"},"content":"                    \u0026\u0026 !travelActivity.getPlan().isEmpty()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":204,"author":{"gitId":"ChinYanXu"},"content":"                foundCounter +\u003d 1;","lastModifiedDate":"2024-04-09"},{"lineNumber":205,"author":{"gitId":"ChinYanXu"},"content":"                if (foundCounter \u003d\u003d 1) {","lastModifiedDate":"2024-04-09"},{"lineNumber":206,"author":{"gitId":"ChinYanXu"},"content":"                    System.out.println(\"Here are what you are looking for:\");","lastModifiedDate":"2024-04-09"},{"lineNumber":207,"author":{"gitId":"ChinYanXu"},"content":"                }","lastModifiedDate":"2024-04-09"},{"lineNumber":208,"author":{"gitId":"ChinYanXu"},"content":"                Ui.printActivity(travelActivity, foundCounter);","lastModifiedDate":"2024-04-09"},{"lineNumber":209,"author":{"gitId":"ChinYanXu"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":210,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"ChinYanXu"},"content":"        if (foundCounter \u003d\u003d 0) {","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"ChinYanXu"},"content":"            System.out.println(\"Sorry I could not find what you are looking for.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":215,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":216,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":217,"author":{"gitId":"annnniexu"},"content":"    //@@author annnniexu","lastModifiedDate":"2024-04-09"},{"lineNumber":218,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"annnniexu"},"content":"     * Checks travel activity as completed","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"annnniexu"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":221,"author":{"gitId":"annnniexu"},"content":"     * @param activityNumber The travel activity number on the list","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":223,"author":{"gitId":"annnniexu"},"content":"    public void checkTravelActivity(int activityNumber) throws OmniException{","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"annnniexu"},"content":"        assert activityNumber !\u003d 0 : \"There is not activities in the list\";","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"annnniexu"},"content":"        if (activityNumber \u003e travelActivities.size() || (activityNumber \u003c\u003d 0)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"annnniexu"},"content":"            throw new OmniException(\"Travel activity cannot be found\");","lastModifiedDate":"2024-03-19"},{"lineNumber":227,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":228,"author":{"gitId":"annnniexu"},"content":"        int indexOfActivity \u003d activityNumber - 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"annnniexu"},"content":"        TravelActivity markedActivity \u003d travelActivities.get(indexOfActivity);","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"annnniexu"},"content":"        if (!markedActivity.getActivityStatus()) {","lastModifiedDate":"2024-04-06"},{"lineNumber":231,"author":{"gitId":"annnniexu"},"content":"            markedActivity.setActivityStatus(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"annnniexu"},"content":"            System.out.println(\"I have checked this activity:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"annnniexu"},"content":"            Ui.printActivity(markedActivity, activityNumber);","lastModifiedDate":"2024-04-08"},{"lineNumber":234,"author":{"gitId":"annnniexu"},"content":"        } else {","lastModifiedDate":"2024-04-06"},{"lineNumber":235,"author":{"gitId":"annnniexu"},"content":"            System.out.println(\"This activity is already done!\");","lastModifiedDate":"2024-04-06"},{"lineNumber":236,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":237,"author":{"gitId":"annnniexu"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":238,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":239,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":240,"author":{"gitId":"annnniexu"},"content":"     * Unchecks travel activity and sets it to uncompleted","lastModifiedDate":"2024-03-19"},{"lineNumber":241,"author":{"gitId":"annnniexu"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":242,"author":{"gitId":"annnniexu"},"content":"     * @param activityNumber The travel activity number on the list","lastModifiedDate":"2024-03-20"},{"lineNumber":243,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":244,"author":{"gitId":"annnniexu"},"content":"    public void uncheckTravelActivity(int activityNumber) throws OmniException{","lastModifiedDate":"2024-03-20"},{"lineNumber":245,"author":{"gitId":"annnniexu"},"content":"        assert activityNumber !\u003d 0 : \"There is not activities in the list\";","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"annnniexu"},"content":"        if (activityNumber \u003e travelActivities.size() || (activityNumber \u003c\u003d 0)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":247,"author":{"gitId":"annnniexu"},"content":"            throw new OmniException(\"Travel activity cannot be found\");","lastModifiedDate":"2024-03-19"},{"lineNumber":248,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":249,"author":{"gitId":"annnniexu"},"content":"        int indexOfActivity \u003d activityNumber - 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"annnniexu"},"content":"        TravelActivity markedActivity  \u003d travelActivities.get(indexOfActivity);","lastModifiedDate":"2024-03-20"},{"lineNumber":251,"author":{"gitId":"annnniexu"},"content":"        if (markedActivity.getActivityStatus()) {","lastModifiedDate":"2024-04-06"},{"lineNumber":252,"author":{"gitId":"annnniexu"},"content":"            markedActivity.setActivityStatus(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":253,"author":{"gitId":"annnniexu"},"content":"            System.out.println(\"I have unchecked this activity:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":254,"author":{"gitId":"annnniexu"},"content":"            Ui.printActivity(markedActivity, activityNumber);","lastModifiedDate":"2024-04-08"},{"lineNumber":255,"author":{"gitId":"annnniexu"},"content":"        } else {","lastModifiedDate":"2024-04-06"},{"lineNumber":256,"author":{"gitId":"annnniexu"},"content":"            System.out.println(\"This activity is already unchecked!\");","lastModifiedDate":"2024-04-06"},{"lineNumber":257,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":258,"author":{"gitId":"annnniexu"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":259,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":260,"author":{"gitId":"ChenKangg"},"content":"    //@@author ChenKangg","lastModifiedDate":"2024-04-13"},{"lineNumber":261,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":262,"author":{"gitId":"ChenKangg"},"content":"     * Adds a tag to travel activity","lastModifiedDate":"2024-03-20"},{"lineNumber":263,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":264,"author":{"gitId":"ChenKangg"},"content":"     * @param taskNumber The travel activity number on the list","lastModifiedDate":"2024-03-20"},{"lineNumber":265,"author":{"gitId":"ChenKangg"},"content":"     * @param tag The tag of travel activity","lastModifiedDate":"2024-03-20"},{"lineNumber":266,"author":{"gitId":"ChenKangg"},"content":"     * @throws OmniException Thrown if the index of the travel activity cannot be found","lastModifiedDate":"2024-04-13"},{"lineNumber":267,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":268,"author":{"gitId":"ChenKangg"},"content":"    public void tagActivity(int taskNumber, String tag) throws OmniException {","lastModifiedDate":"2024-03-20"},{"lineNumber":269,"author":{"gitId":"ChenKangg"},"content":"        assert taskNumber !\u003d 0 : \"There is no tasks in the list\";","lastModifiedDate":"2024-03-20"},{"lineNumber":270,"author":{"gitId":"ChenKangg"},"content":"        logger.log(Level.INFO, \"Tagging activity: taskNumber \u003d \" + taskNumber + \", tag \u003d \" + tag);","lastModifiedDate":"2024-04-13"},{"lineNumber":271,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":272,"author":{"gitId":"ChenKangg"},"content":"        if (taskNumber \u003e travelActivities.size() || (taskNumber \u003c\u003d 0)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":273,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"Invalid taskNumber provided: \" + taskNumber);","lastModifiedDate":"2024-04-13"},{"lineNumber":274,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Travel activity cannot be found\");","lastModifiedDate":"2024-03-20"},{"lineNumber":275,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":276,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":277,"author":{"gitId":"ChenKangg"},"content":"        int indexOfTask \u003d taskNumber - 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":278,"author":{"gitId":"ChenKangg"},"content":"        TravelActivity taggedTask \u003d travelActivities.get(indexOfTask);","lastModifiedDate":"2024-03-20"},{"lineNumber":279,"author":{"gitId":"ChenKangg"},"content":"        taggedTask.setTag(tag);","lastModifiedDate":"2024-03-20"},{"lineNumber":280,"author":{"gitId":"ChenKangg"},"content":"        System.out.println(\"I have tagged this task:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":281,"author":{"gitId":"ChenKangg"},"content":"        System.out.println(taggedTask);","lastModifiedDate":"2024-04-06"},{"lineNumber":282,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":283,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":284,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":285,"author":{"gitId":"ChenKangg"},"content":"     * Removes the tag on a travel activity","lastModifiedDate":"2024-03-20"},{"lineNumber":286,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":287,"author":{"gitId":"ChenKangg"},"content":"     * @param taskNumber The travel activity number on the list","lastModifiedDate":"2024-03-20"},{"lineNumber":288,"author":{"gitId":"ChenKangg"},"content":"     * @throws OmniException Thrown if the index of the travel activity cannot be found","lastModifiedDate":"2024-04-13"},{"lineNumber":289,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":290,"author":{"gitId":"ChenKangg"},"content":"    public void removeTag(int taskNumber) throws OmniException {","lastModifiedDate":"2024-03-20"},{"lineNumber":291,"author":{"gitId":"ChenKangg"},"content":"        assert taskNumber !\u003d 0 : \"There is no task in the list\";","lastModifiedDate":"2024-03-20"},{"lineNumber":292,"author":{"gitId":"ChenKangg"},"content":"        logger.log(Level.INFO, \"Removing tag from activity: taskNumber \u003d \" + taskNumber);","lastModifiedDate":"2024-04-13"},{"lineNumber":293,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":294,"author":{"gitId":"ChenKangg"},"content":"        if (taskNumber \u003e travelActivities.size() || (taskNumber \u003c\u003d 0)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":295,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"Invalid taskNumber provided: \" + taskNumber);","lastModifiedDate":"2024-04-13"},{"lineNumber":296,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Travel activity cannot be found\");","lastModifiedDate":"2024-03-20"},{"lineNumber":297,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":298,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":299,"author":{"gitId":"ChenKangg"},"content":"        int indexOfTask \u003d taskNumber - 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":300,"author":{"gitId":"ChenKangg"},"content":"        TravelActivity taggedTask \u003d travelActivities.get(indexOfTask);","lastModifiedDate":"2024-03-20"},{"lineNumber":301,"author":{"gitId":"ChenKangg"},"content":"        if (taggedTask.getTag().isBlank()){","lastModifiedDate":"2024-04-14"},{"lineNumber":302,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Travel activity does not have a tag!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":303,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":304,"author":{"gitId":"ChenKangg"},"content":"        taggedTask.removeTag();","lastModifiedDate":"2024-03-20"},{"lineNumber":305,"author":{"gitId":"ChenKangg"},"content":"        System.out.println(\"Tag removed from the task:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":306,"author":{"gitId":"ChenKangg"},"content":"        System.out.println(taggedTask);","lastModifiedDate":"2024-03-20"},{"lineNumber":307,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":308,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":309,"author":{"gitId":"daryltay415"},"content":"    //@@author daryltay415","lastModifiedDate":"2024-04-09"},{"lineNumber":310,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":311,"author":{"gitId":"daryltay415"},"content":"     * Updates the date, duration and tag of the travel activity","lastModifiedDate":"2024-03-28"},{"lineNumber":312,"author":{"gitId":"daryltay415"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":313,"author":{"gitId":"daryltay415"},"content":"     * @param travelActivityNumber The index of the travel activity","lastModifiedDate":"2024-03-28"},{"lineNumber":314,"author":{"gitId":"daryltay415"},"content":"     * @param date The new date of the travel activity","lastModifiedDate":"2024-03-28"},{"lineNumber":315,"author":{"gitId":"daryltay415"},"content":"     * @param duration The new duration of the travel activity","lastModifiedDate":"2024-03-28"},{"lineNumber":316,"author":{"gitId":"daryltay415"},"content":"     * @param tag The new tag of the travel activity","lastModifiedDate":"2024-03-28"},{"lineNumber":317,"author":{"gitId":"daryltay415"},"content":"     * @throws OmniException Thrown if the index of the travel activity cannot be found","lastModifiedDate":"2024-03-28"},{"lineNumber":318,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":319,"author":{"gitId":"daryltay415"},"content":"    public void updateTravelActivity(int travelActivityNumber, LocalDate date, String duration, String tag)","lastModifiedDate":"2024-03-27"},{"lineNumber":320,"author":{"gitId":"daryltay415"},"content":"            throws OmniException{","lastModifiedDate":"2024-03-27"},{"lineNumber":321,"author":{"gitId":"daryltay415"},"content":"        if (travelActivityNumber \u003e travelActivities.size() || (travelActivityNumber \u003c\u003d 0)){","lastModifiedDate":"2024-03-31"},{"lineNumber":322,"author":{"gitId":"daryltay415"},"content":"            throw new OmniException(\"Travel activity cannot be found\");","lastModifiedDate":"2024-03-23"},{"lineNumber":323,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":324,"author":{"gitId":"daryltay415"},"content":"        int indexOfTravelActivity \u003d travelActivityNumber-1;","lastModifiedDate":"2024-03-23"},{"lineNumber":325,"author":{"gitId":"daryltay415"},"content":"        TravelActivity updatedTravelActivity \u003d travelActivities.get(indexOfTravelActivity);","lastModifiedDate":"2024-03-23"},{"lineNumber":326,"author":{"gitId":"daryltay415"},"content":"        String oldTravelActivity \u003d updatedTravelActivity.toString();","lastModifiedDate":"2024-04-09"},{"lineNumber":327,"author":{"gitId":"daryltay415"},"content":"        updatedTravelActivity.setDate(date);","lastModifiedDate":"2024-03-23"},{"lineNumber":328,"author":{"gitId":"daryltay415"},"content":"        updatedTravelActivity.setDuration(duration);","lastModifiedDate":"2024-03-23"},{"lineNumber":329,"author":{"gitId":"daryltay415"},"content":"        if(!tag.isBlank()){","lastModifiedDate":"2024-04-12"},{"lineNumber":330,"author":{"gitId":"daryltay415"},"content":"            updatedTravelActivity.setTag(tag);","lastModifiedDate":"2024-03-27"},{"lineNumber":331,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":332,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"I have updated this task\\nfrom: \" + oldTravelActivity +","lastModifiedDate":"2024-04-06"},{"lineNumber":333,"author":{"gitId":"daryltay415"},"content":"                \"\\nto: \" + updatedTravelActivity);","lastModifiedDate":"2024-04-06"},{"lineNumber":334,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":335,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":336,"author":{"gitId":"EugeneChanJiajun"},"content":"    //@@author EugeneChanJiajun","lastModifiedDate":"2024-04-09"},{"lineNumber":337,"author":{"gitId":"EugeneChanJiajun"},"content":"    public ArrayList\u003cTravelActivity\u003e getTravelActivities () {","lastModifiedDate":"2024-03-20"},{"lineNumber":338,"author":{"gitId":"EugeneChanJiajun"},"content":"        return travelActivities;","lastModifiedDate":"2024-03-20"},{"lineNumber":339,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":340,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":341,"author":{"gitId":"ChinYanXu"},"content":"    //@@author ChinYanXu","lastModifiedDate":"2024-04-09"},{"lineNumber":342,"author":{"gitId":"ChinYanXu"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":343,"author":{"gitId":"ChinYanXu"},"content":"     * Find all the travel activities with a particular tag and prints them out","lastModifiedDate":"2024-04-14"},{"lineNumber":344,"author":{"gitId":"ChinYanXu"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":345,"author":{"gitId":"ChinYanXu"},"content":"     * @param tag The tag of travel activities that the user wants to find","lastModifiedDate":"2024-04-14"},{"lineNumber":346,"author":{"gitId":"ChinYanXu"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":347,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":348,"author":{"gitId":"ChinYanXu"},"content":"    public void findTag(String tag){","lastModifiedDate":"2024-03-27"},{"lineNumber":349,"author":{"gitId":"ChinYanXu"},"content":"        int foundCounter \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":350,"author":{"gitId":"ChinYanXu"},"content":"        for (TravelActivity travelActivity : travelActivities) {","lastModifiedDate":"2024-04-01"},{"lineNumber":351,"author":{"gitId":"ChinYanXu"},"content":"            assert !(foundCounter \u003e travelActivities.size()) : \"Error: There is more activities found than possible\";","lastModifiedDate":"2024-04-03"},{"lineNumber":352,"author":{"gitId":"ChinYanXu"},"content":"            if (travelActivity.getTag().contains(tag) \u0026\u0026","lastModifiedDate":"2024-04-01"},{"lineNumber":353,"author":{"gitId":"ChinYanXu"},"content":"                    !travelActivity.getTag().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":354,"author":{"gitId":"ChinYanXu"},"content":"                foundCounter +\u003d 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":355,"author":{"gitId":"ChinYanXu"},"content":"                if (foundCounter \u003d\u003d 1) {","lastModifiedDate":"2024-04-01"},{"lineNumber":356,"author":{"gitId":"ChinYanXu"},"content":"                    System.out.println(\"Here are what you are looking for:\");","lastModifiedDate":"2024-03-27"},{"lineNumber":357,"author":{"gitId":"ChinYanXu"},"content":"                }","lastModifiedDate":"2024-03-27"},{"lineNumber":358,"author":{"gitId":"ChinYanXu"},"content":"                Ui.printActivity(travelActivity, foundCounter);","lastModifiedDate":"2024-04-01"},{"lineNumber":359,"author":{"gitId":"ChinYanXu"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":360,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":361,"author":{"gitId":"ChinYanXu"},"content":"        if (foundCounter \u003d\u003d 0) {","lastModifiedDate":"2024-04-01"},{"lineNumber":362,"author":{"gitId":"ChinYanXu"},"content":"            System.out.println(\"Sorry I could not find what you are looking for.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":363,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":364,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":365,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":366,"author":{"gitId":"ChinYanXu"},"content":"    /**","lastModifiedDate":"2024-04-09"},{"lineNumber":367,"author":{"gitId":"ChinYanXu"},"content":"     * Overloaded version of findtag function to enable user to exclude certain travel activities from their search","lastModifiedDate":"2024-04-14"},{"lineNumber":368,"author":{"gitId":"ChinYanXu"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":369,"author":{"gitId":"ChinYanXu"},"content":"     * @param tag The tag of the travel activities that the user wants to find","lastModifiedDate":"2024-04-14"},{"lineNumber":370,"author":{"gitId":"ChinYanXu"},"content":"     * @param exclude The keyword that the user uses to remove unwanted results from the search","lastModifiedDate":"2024-04-09"},{"lineNumber":371,"author":{"gitId":"ChinYanXu"},"content":"     */","lastModifiedDate":"2024-04-09"},{"lineNumber":372,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":373,"author":{"gitId":"ChinYanXu"},"content":"    public void findTag(String tag, String exclude){","lastModifiedDate":"2024-04-09"},{"lineNumber":374,"author":{"gitId":"ChinYanXu"},"content":"        int foundCounter \u003d 0;","lastModifiedDate":"2024-04-09"},{"lineNumber":375,"author":{"gitId":"ChinYanXu"},"content":"        String lowerCaseExclude \u003d exclude.toLowerCase();","lastModifiedDate":"2024-04-14"},{"lineNumber":376,"author":{"gitId":"ChinYanXu"},"content":"        for (TravelActivity travelActivity : travelActivities) {","lastModifiedDate":"2024-04-09"},{"lineNumber":377,"author":{"gitId":"ChinYanXu"},"content":"            assert !(foundCounter \u003e travelActivities.size()) : \"Error: There is more activities found than possible\";","lastModifiedDate":"2024-04-09"},{"lineNumber":378,"author":{"gitId":"ChinYanXu"},"content":"            if (travelActivity.getTag().contains(tag) \u0026\u0026 !travelActivity.getTag().isEmpty() \u0026\u0026","lastModifiedDate":"2024-04-09"},{"lineNumber":379,"author":{"gitId":"ChinYanXu"},"content":"                    !travelActivity.getPlan().toLowerCase().contains(lowerCaseExclude)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":380,"author":{"gitId":"ChinYanXu"},"content":"                foundCounter +\u003d 1;","lastModifiedDate":"2024-04-09"},{"lineNumber":381,"author":{"gitId":"ChinYanXu"},"content":"                if (foundCounter \u003d\u003d 1) {","lastModifiedDate":"2024-04-09"},{"lineNumber":382,"author":{"gitId":"ChinYanXu"},"content":"                    System.out.println(\"Here are what you are looking for:\");","lastModifiedDate":"2024-04-09"},{"lineNumber":383,"author":{"gitId":"ChinYanXu"},"content":"                }","lastModifiedDate":"2024-04-09"},{"lineNumber":384,"author":{"gitId":"ChinYanXu"},"content":"                Ui.printActivity(travelActivity, foundCounter);","lastModifiedDate":"2024-04-09"},{"lineNumber":385,"author":{"gitId":"ChinYanXu"},"content":"            }","lastModifiedDate":"2024-04-09"},{"lineNumber":386,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":387,"author":{"gitId":"ChinYanXu"},"content":"        if (foundCounter \u003d\u003d 0) {","lastModifiedDate":"2024-04-09"},{"lineNumber":388,"author":{"gitId":"ChinYanXu"},"content":"            System.out.println(\"Sorry I could not find what you are looking for.\");","lastModifiedDate":"2024-04-09"},{"lineNumber":389,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":390,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":391,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":392,"author":{"gitId":"ChinYanXu"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":393,"author":{"gitId":"ChinYanXu"},"content":"     * Find all the travel activities of a particular type and prints them out","lastModifiedDate":"2024-04-14"},{"lineNumber":394,"author":{"gitId":"ChinYanXu"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":395,"author":{"gitId":"ChinYanXu"},"content":"     * @param type The type of travel activities that the user wants to find","lastModifiedDate":"2024-04-14"},{"lineNumber":396,"author":{"gitId":"ChinYanXu"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":397,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":398,"author":{"gitId":"ChinYanXu"},"content":"    public void findType(String type){","lastModifiedDate":"2024-03-27"},{"lineNumber":399,"author":{"gitId":"ChinYanXu"},"content":"        int foundCounter \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":400,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":401,"author":{"gitId":"ChinYanXu"},"content":"        for (TravelActivity activity: travelActivities){","lastModifiedDate":"2024-04-01"},{"lineNumber":402,"author":{"gitId":"ChinYanXu"},"content":"            assert !(foundCounter \u003e travelActivities.size()) : \"Error: There is more activities found than possible\";","lastModifiedDate":"2024-04-03"},{"lineNumber":403,"author":{"gitId":"ChinYanXu"},"content":"            if(activity.getClass().getSimpleName().equalsIgnoreCase(type)){","lastModifiedDate":"2024-04-06"},{"lineNumber":404,"author":{"gitId":"ChinYanXu"},"content":"                foundCounter +\u003d 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":405,"author":{"gitId":"ChinYanXu"},"content":"                if (foundCounter \u003d\u003d 1) {","lastModifiedDate":"2024-04-01"},{"lineNumber":406,"author":{"gitId":"ChinYanXu"},"content":"                    System.out.println(\"Here are what you are looking for:\");","lastModifiedDate":"2024-03-27"},{"lineNumber":407,"author":{"gitId":"ChinYanXu"},"content":"                }","lastModifiedDate":"2024-03-27"},{"lineNumber":408,"author":{"gitId":"ChinYanXu"},"content":"                Ui.printActivity(activity, foundCounter);","lastModifiedDate":"2024-04-01"},{"lineNumber":409,"author":{"gitId":"ChinYanXu"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":410,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":411,"author":{"gitId":"ChinYanXu"},"content":"        if (foundCounter \u003d\u003d 0) {","lastModifiedDate":"2024-04-01"},{"lineNumber":412,"author":{"gitId":"ChinYanXu"},"content":"            System.out.println(\"Sorry, I could not find what you are looking for.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":413,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":414,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":415,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":416,"author":{"gitId":"ChenKangg"},"content":"    //@@author ChenKangg","lastModifiedDate":"2024-04-09"},{"lineNumber":417,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-04-09"},{"lineNumber":418,"author":{"gitId":"ChenKangg"},"content":"     * Overloaded version of findtype to enable user to exclude certain activities from their search","lastModifiedDate":"2024-04-09"},{"lineNumber":419,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":420,"author":{"gitId":"ChenKangg"},"content":"     * @param type The type of travel activities that the user wants to find","lastModifiedDate":"2024-04-14"},{"lineNumber":421,"author":{"gitId":"ChenKangg"},"content":"     * @param exclude The keyword that the user uses to remove unwanted results from the search","lastModifiedDate":"2024-04-09"},{"lineNumber":422,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":423,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-04-09"},{"lineNumber":424,"author":{"gitId":"ChenKangg"},"content":"    public void findType(String type, String exclude) {","lastModifiedDate":"2024-04-09"},{"lineNumber":425,"author":{"gitId":"ChenKangg"},"content":"        int foundCounter \u003d 0;","lastModifiedDate":"2024-04-09"},{"lineNumber":426,"author":{"gitId":"ChenKangg"},"content":"        assert type !\u003d null \u0026\u0026 !type.isEmpty() : \"Type parameter should not be null or empty\";","lastModifiedDate":"2024-04-13"},{"lineNumber":427,"author":{"gitId":"ChenKangg"},"content":"        assert exclude !\u003d null \u0026\u0026 !exclude.isEmpty() : \"Exclude parameter should not be null or empty\";","lastModifiedDate":"2024-04-13"},{"lineNumber":428,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":429,"author":{"gitId":"ChenKangg"},"content":"        logger.log(Level.INFO, \"Finding type: \" + type + \", excluding: \" + exclude);","lastModifiedDate":"2024-04-13"},{"lineNumber":430,"author":{"gitId":"ChenKangg"},"content":"        String lowerCaseExclude \u003d exclude.toLowerCase();","lastModifiedDate":"2024-04-14"},{"lineNumber":431,"author":{"gitId":"ChenKangg"},"content":"        for (TravelActivity activity : travelActivities) {","lastModifiedDate":"2024-04-09"},{"lineNumber":432,"author":{"gitId":"ChenKangg"},"content":"            assert !(foundCounter \u003e travelActivities.size()) : \"Error: There are more activities found than possible\";","lastModifiedDate":"2024-04-13"},{"lineNumber":433,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":434,"author":{"gitId":"ChenKangg"},"content":"            if (activity.getClass().getSimpleName().equalsIgnoreCase(type)","lastModifiedDate":"2024-04-14"},{"lineNumber":435,"author":{"gitId":"ChenKangg"},"content":"                    \u0026\u0026 !activity.getPlan().toLowerCase().contains(lowerCaseExclude)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":436,"author":{"gitId":"ChenKangg"},"content":"                foundCounter++;","lastModifiedDate":"2024-04-13"},{"lineNumber":437,"author":{"gitId":"ChenKangg"},"content":"                if (foundCounter \u003d\u003d 1) {","lastModifiedDate":"2024-04-09"},{"lineNumber":438,"author":{"gitId":"ChenKangg"},"content":"                    logger.log(Level.INFO, \"Found matching activities:\");","lastModifiedDate":"2024-04-13"},{"lineNumber":439,"author":{"gitId":"ChenKangg"},"content":"                    System.out.println(\"Here are what you are looking for:\");","lastModifiedDate":"2024-04-09"},{"lineNumber":440,"author":{"gitId":"ChenKangg"},"content":"                }","lastModifiedDate":"2024-04-09"},{"lineNumber":441,"author":{"gitId":"ChenKangg"},"content":"                Ui.printActivity(activity, foundCounter);","lastModifiedDate":"2024-04-09"},{"lineNumber":442,"author":{"gitId":"ChenKangg"},"content":"            }","lastModifiedDate":"2024-04-09"},{"lineNumber":443,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":444,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":445,"author":{"gitId":"ChenKangg"},"content":"        if (foundCounter \u003d\u003d 0) {","lastModifiedDate":"2024-04-09"},{"lineNumber":446,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.INFO, \"No matching activities found\");","lastModifiedDate":"2024-04-13"},{"lineNumber":447,"author":{"gitId":"ChenKangg"},"content":"            System.out.println(\"Sorry, I could not find what you are looking for.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":448,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":449,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":450,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":451,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":452,"author":{"gitId":"ChenKangg"},"content":"     * Adds expense to travel activity","lastModifiedDate":"2024-03-28"},{"lineNumber":453,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":454,"author":{"gitId":"ChenKangg"},"content":"     * @param taskNumber The travel activity number on the list","lastModifiedDate":"2024-03-28"},{"lineNumber":455,"author":{"gitId":"ChenKangg"},"content":"     * @param expense  The expense of travel activity","lastModifiedDate":"2024-03-28"},{"lineNumber":456,"author":{"gitId":"ChenKangg"},"content":"     * @throws OmniException Thrown if the index of the travel activity cannot be found","lastModifiedDate":"2024-04-13"},{"lineNumber":457,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":458,"author":{"gitId":"ChenKangg"},"content":"    public void expenseActivity(int taskNumber, String expense) throws OmniException {","lastModifiedDate":"2024-03-28"},{"lineNumber":459,"author":{"gitId":"ChenKangg"},"content":"        assert taskNumber !\u003d 0 : \"There is no tasks in the list\";","lastModifiedDate":"2024-03-28"},{"lineNumber":460,"author":{"gitId":"ChenKangg"},"content":"        logger.log(Level.INFO, \"Adding expense to activity: taskNumber \u003d \" + taskNumber + \", expense \u003d \" + expense);","lastModifiedDate":"2024-04-13"},{"lineNumber":461,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":462,"author":{"gitId":"ChenKangg"},"content":"        if (taskNumber \u003e travelActivities.size() || (taskNumber \u003c\u003d 0)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":463,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"Invalid taskNumber provided: \" + taskNumber);","lastModifiedDate":"2024-04-13"},{"lineNumber":464,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Travel activity cannot be found\");","lastModifiedDate":"2024-03-28"},{"lineNumber":465,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":466,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":467,"author":{"gitId":"ChenKangg"},"content":"        int indexOfTask \u003d taskNumber - 1;","lastModifiedDate":"2024-03-28"},{"lineNumber":468,"author":{"gitId":"ChenKangg"},"content":"        TravelActivity task \u003d travelActivities.get(indexOfTask);","lastModifiedDate":"2024-03-28"},{"lineNumber":469,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":470,"author":{"gitId":"ChenKangg"},"content":"        if (!(expense.startsWith(\"$\") \u0026\u0026 CheckParameters.isValidExpense(expense.substring(1)))) {","lastModifiedDate":"2024-04-06"},{"lineNumber":471,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"Invalid expense format: \" + expense);","lastModifiedDate":"2024-04-13"},{"lineNumber":472,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Please follow format for expense: expense $50\");","lastModifiedDate":"2024-04-12"},{"lineNumber":473,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":474,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":475,"author":{"gitId":"ChenKangg"},"content":"        task.setExpense(expense);","lastModifiedDate":"2024-03-28"},{"lineNumber":476,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":477,"author":{"gitId":"ChenKangg"},"content":"        System.out.println(\"I have added expense for this task:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":478,"author":{"gitId":"ChenKangg"},"content":"        System.out.println(task + \" (\" + expense + \")\");","lastModifiedDate":"2024-04-13"},{"lineNumber":479,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":480,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":481,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":482,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":483,"author":{"gitId":"ChenKangg"},"content":"     * Removes the expense on a travel activity","lastModifiedDate":"2024-03-28"},{"lineNumber":484,"author":{"gitId":"ChenKangg"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":485,"author":{"gitId":"ChenKangg"},"content":"     * @param taskNumber The travel activity number on the list","lastModifiedDate":"2024-03-28"},{"lineNumber":486,"author":{"gitId":"ChenKangg"},"content":"     * @throws OmniException Thrown if the index of the travel activity cannot be found","lastModifiedDate":"2024-04-13"},{"lineNumber":487,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":488,"author":{"gitId":"ChenKangg"},"content":"    public void removeExpense(int taskNumber) throws OmniException {","lastModifiedDate":"2024-03-28"},{"lineNumber":489,"author":{"gitId":"ChenKangg"},"content":"        assert taskNumber !\u003d 0 : \"There is no task in the list\";","lastModifiedDate":"2024-03-28"},{"lineNumber":490,"author":{"gitId":"ChenKangg"},"content":"        logger.log(Level.INFO, \"Removing expense from activity: taskNumber \u003d \" + taskNumber);","lastModifiedDate":"2024-04-13"},{"lineNumber":491,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":492,"author":{"gitId":"ChenKangg"},"content":"        if (taskNumber \u003e travelActivities.size() || (taskNumber \u003c\u003d 0)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":493,"author":{"gitId":"ChenKangg"},"content":"            logger.log(Level.WARNING, \"Invalid taskNumber provided: \" + taskNumber);","lastModifiedDate":"2024-04-13"},{"lineNumber":494,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Travel activity cannot be found\");","lastModifiedDate":"2024-03-28"},{"lineNumber":495,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":496,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":497,"author":{"gitId":"ChenKangg"},"content":"        int indexOfTask \u003d taskNumber - 1;","lastModifiedDate":"2024-03-28"},{"lineNumber":498,"author":{"gitId":"ChenKangg"},"content":"        TravelActivity task \u003d travelActivities.get(indexOfTask);","lastModifiedDate":"2024-03-28"},{"lineNumber":499,"author":{"gitId":"ChenKangg"},"content":"        if (task.getExpense().isBlank()){","lastModifiedDate":"2024-04-14"},{"lineNumber":500,"author":{"gitId":"ChenKangg"},"content":"            throw new OmniException(\"Travel activity does not have a expense!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":501,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":502,"author":{"gitId":"ChenKangg"},"content":"        task.removeExpense();","lastModifiedDate":"2024-03-28"},{"lineNumber":503,"author":{"gitId":"ChenKangg"},"content":"        System.out.println(\"Expense removed from the task:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":504,"author":{"gitId":"ChenKangg"},"content":"        System.out.println(task);","lastModifiedDate":"2024-03-28"},{"lineNumber":505,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":506,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":507,"author":{"gitId":"annnniexu"},"content":"    //@@author annnniexu","lastModifiedDate":"2024-04-09"},{"lineNumber":508,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":509,"author":{"gitId":"annnniexu"},"content":"     * Calculates the total expense for the given type.","lastModifiedDate":"2024-04-03"},{"lineNumber":510,"author":{"gitId":"annnniexu"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":511,"author":{"gitId":"annnniexu"},"content":"     * @param type The type of tasks that the user wants to find","lastModifiedDate":"2024-04-03"},{"lineNumber":512,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":513,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":514,"author":{"gitId":"annnniexu"},"content":"    public void totalExpense(String type) throws OmniException {","lastModifiedDate":"2024-04-03"},{"lineNumber":515,"author":{"gitId":"annnniexu"},"content":"        if (!(type.equalsIgnoreCase(\"food\") || type.equalsIgnoreCase(\"accommodation\")","lastModifiedDate":"2024-04-03"},{"lineNumber":516,"author":{"gitId":"annnniexu"},"content":"                || type.equalsIgnoreCase(\"landmark\") || type.equalsIgnoreCase(\"all\")","lastModifiedDate":"2024-04-06"},{"lineNumber":517,"author":{"gitId":"annnniexu"},"content":"                || type.equalsIgnoreCase(\"travelactivity\"))) {","lastModifiedDate":"2024-04-06"},{"lineNumber":518,"author":{"gitId":"annnniexu"},"content":"            throw new OmniException(\"Not a valid TYPE\");","lastModifiedDate":"2024-04-03"},{"lineNumber":519,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":520,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":521,"author":{"gitId":"annnniexu"},"content":"        double tot \u003d 0.0;","lastModifiedDate":"2024-04-03"},{"lineNumber":522,"author":{"gitId":"annnniexu"},"content":"        for (TravelActivity activity : travelActivities) {","lastModifiedDate":"2024-04-03"},{"lineNumber":523,"author":{"gitId":"annnniexu"},"content":"            if (type.equals(\"all\") || activity.getClass().getSimpleName().equalsIgnoreCase(type)){","lastModifiedDate":"2024-04-03"},{"lineNumber":524,"author":{"gitId":"annnniexu"},"content":"                String expense \u003d activity.getExpense();","lastModifiedDate":"2024-04-03"},{"lineNumber":525,"author":{"gitId":"annnniexu"},"content":"                if (!expense.equals(\"\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":526,"author":{"gitId":"annnniexu"},"content":"                    if (expense.startsWith(\"$\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":527,"author":{"gitId":"annnniexu"},"content":"                        expense \u003d expense.substring(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":528,"author":{"gitId":"annnniexu"},"content":"                    }","lastModifiedDate":"2024-04-03"},{"lineNumber":529,"author":{"gitId":"annnniexu"},"content":"                    tot +\u003d Double.parseDouble(expense);","lastModifiedDate":"2024-04-03"},{"lineNumber":530,"author":{"gitId":"annnniexu"},"content":"                    logger.log(Level.INFO, String.valueOf(tot));","lastModifiedDate":"2024-04-08"},{"lineNumber":531,"author":{"gitId":"annnniexu"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":532,"author":{"gitId":"annnniexu"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":533,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":534,"author":{"gitId":"annnniexu"},"content":"        if(type.equalsIgnoreCase(\"travelactivity\")){","lastModifiedDate":"2024-04-14"},{"lineNumber":535,"author":{"gitId":"annnniexu"},"content":"            type \u003d \"General\";","lastModifiedDate":"2024-04-14"},{"lineNumber":536,"author":{"gitId":"annnniexu"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":537,"author":{"gitId":"annnniexu"},"content":"        System.out.println(\"The total expense for \" + type + \" travel activities is: $\" + tot);","lastModifiedDate":"2024-04-06"},{"lineNumber":538,"author":{"gitId":"annnniexu"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":539,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":540,"author":{"gitId":"ChenKangg"},"content":"    //@@author ChenKangg","lastModifiedDate":"2024-04-09"},{"lineNumber":541,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":542,"author":{"gitId":"ChenKangg"},"content":"     * Lists out all the tags currently in the travel activity list","lastModifiedDate":"2024-04-05"},{"lineNumber":543,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":544,"author":{"gitId":"ChenKangg"},"content":"    public void listTags() {","lastModifiedDate":"2024-04-05"},{"lineNumber":545,"author":{"gitId":"ChenKangg"},"content":"        assert travelActivities !\u003d null : \"Travel activities list should not be null\";","lastModifiedDate":"2024-04-13"},{"lineNumber":546,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":547,"author":{"gitId":"ChenKangg"},"content":"        logger.log(Level.INFO, \"Listing tags\");","lastModifiedDate":"2024-04-13"},{"lineNumber":548,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":549,"author":{"gitId":"ChenKangg"},"content":"        for (TravelActivity travelActivity : travelActivities) {","lastModifiedDate":"2024-04-05"},{"lineNumber":550,"author":{"gitId":"ChenKangg"},"content":"            assert travelActivity !\u003d null : \"Travel activity should not be null\";","lastModifiedDate":"2024-04-13"},{"lineNumber":551,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":552,"author":{"gitId":"ChenKangg"},"content":"            String tag \u003d travelActivity.getTag();","lastModifiedDate":"2024-04-05"},{"lineNumber":553,"author":{"gitId":"ChenKangg"},"content":"            if (!travelActivityTags.contains(tag) \u0026\u0026 !tag.isBlank()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":554,"author":{"gitId":"ChenKangg"},"content":"                travelActivityTags.add(tag);","lastModifiedDate":"2024-04-05"},{"lineNumber":555,"author":{"gitId":"ChenKangg"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":556,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":557,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":558,"author":{"gitId":"ChenKangg"},"content":"        Collections.sort(travelActivityTags);","lastModifiedDate":"2024-04-05"},{"lineNumber":559,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":560,"author":{"gitId":"ChenKangg"},"content":"        int tagCount \u003d 1;","lastModifiedDate":"2024-04-05"},{"lineNumber":561,"author":{"gitId":"ChenKangg"},"content":"        for (String tag : travelActivityTags) {","lastModifiedDate":"2024-04-05"},{"lineNumber":562,"author":{"gitId":"ChenKangg"},"content":"            assert tag !\u003d null : \"Tag should not be null\";","lastModifiedDate":"2024-04-13"},{"lineNumber":563,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":564,"author":{"gitId":"ChenKangg"},"content":"            System.out.println(tagCount + \". \" + tag);","lastModifiedDate":"2024-04-05"},{"lineNumber":565,"author":{"gitId":"ChenKangg"},"content":"            tagCount++;","lastModifiedDate":"2024-04-05"},{"lineNumber":566,"author":{"gitId":"ChenKangg"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":567,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":568,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":569,"author":{"gitId":"ChenKangg"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ChinYanXu":189,"EugeneChanJiajun":30,"daryltay415":73,"ChenKangg":170,"annnniexu":107}},{"path":"src/main/java/seedu/omnitravel/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.errorhandlers.OmniException;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.TravelActivity;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":" * Represents the user interface of the Omnitravel bot","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":" * It contains all the responses of the Omnitravel bot to the user\u0027s commands","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"public class Ui {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"     * Prints the greetings","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"    public static void printGreeting() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"EugeneChanJiajun"},"content":"        printLine();","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\" ____  _      _      _  _____  ____  ____  _     _____ _\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"                \"/  _ \\\\/ \\\\__/|/ \\\\  /|/ \\\\/__ __\\\\/  __\\\\/  _ \\\\/ \\\\ |\\\\/  __// \\\\\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"daryltay415"},"content":"                \"| / \\\\|| |\\\\/||| |\\\\ ||| |  / \\\\  |  \\\\/|| / \\\\|| | //|  \\\\  | |\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"                \"| \\\\_/|| |  ||| | \\\\||| |  | |  |    /| |-||| \\\\// |  /_ | |_/\\\\\\n\" +","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"daryltay415"},"content":"                \"\\\\____/\\\\_/  \\\\|\\\\_/  \\\\|\\\\_/  \\\\_/  \\\\_/\\\\_\\\\\\\\_/ \\\\|\\\\__/  \\\\____\\\\\\\\____/)\");","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"Hello\");","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"How may I assist you?\");","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"EugeneChanJiajun"},"content":"        printLine();","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"daryltay415"},"content":"     * Prints the farewell greetings","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"daryltay415"},"content":"    public static void printBye(){","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"EugeneChanJiajun"},"content":"        printLine();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"Thank you for using Omnitravel\");","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"We hope to see you again! Goodbye!\");","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"EugeneChanJiajun"},"content":"        printLine();","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"annnniexu"},"content":"     * Prints line","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"EugeneChanJiajun"},"content":"    public static void printLine(){","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"_______________________________________________________________________________\");","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"annnniexu"},"content":"     * Prints the OmniException","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"annnniexu"},"content":"     * @param exception The OmniException to be printed","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"daryltay415"},"content":"    public static void printException(OmniException exception){","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"Warning! \" + exception.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"EugeneChanJiajun"},"content":"        printLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"annnniexu"},"content":"     * Prints the NoSuchElement Exception","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"annnniexu"},"content":"     * @param exception The exception to be printed","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"daryltay415"},"content":"    public static void printNoSuchElementException(NoSuchElementException exception){","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"Warning! \" + exception.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"EugeneChanJiajun"},"content":"        printLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":65,"author":{"gitId":"annnniexu"},"content":"     * Prints the NumberFormatException","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"annnniexu"},"content":"     * @param exception The exception to be printed","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":68,"author":{"gitId":"EugeneChanJiajun"},"content":"    public static void printNumberTooLargeException(NumberFormatException exception) {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"Warning! \" + exception.getMessage() + \" number too large!\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"daryltay415"},"content":"                \"or number format is wrong!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"EugeneChanJiajun"},"content":"        printLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":74,"author":{"gitId":"annnniexu"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":75,"author":{"gitId":"ChenKangg"},"content":"     * Prints out all available commands when the help command is given as input","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"annnniexu"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":77,"author":{"gitId":"ChenKangg"},"content":"    //@@author ChenKangg","lastModifiedDate":"2024-04-09"},{"lineNumber":78,"author":{"gitId":"ChenKangg"},"content":"    public static void helpCommand(){","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"ChenKangg"},"content":"        printLine();","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"ChenKangg"},"content":"        System.out.println(\"These are the available commands!\");","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"ChenKangg"},"content":"        System.out.println(\"\");","lastModifiedDate":"2024-04-06"},{"lineNumber":82,"author":{"gitId":"ChenKangg"},"content":"        System.out.println(","lastModifiedDate":"2024-04-08"},{"lineNumber":83,"author":{"gitId":"ChenKangg"},"content":"                \"1. list \u003cdate\u003e \u003csort\u003e: List out the current list for given date sorted\\n\" +","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"ChenKangg"},"content":"                \"2. help: Get all commands for the chatbot\\n\" +","lastModifiedDate":"2024-04-06"},{"lineNumber":85,"author":{"gitId":"ChenKangg"},"content":"                \"3. bye: Exit the chatbot\\n\" +","lastModifiedDate":"2024-04-06"},{"lineNumber":86,"author":{"gitId":"ChenKangg"},"content":"                \"4. add \u003ctravel activity\u003e \u003cdate\u003e \u003cduration\u003e \u003ctag\u003e\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"ChenKangg"},"content":"                \"5. accommodation \u003ctravel activity\u003e \u003cdate\u003e \u003cduration\u003e \u003ctag\u003e\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"ChenKangg"},"content":"                \"6. food \u003ctravel activity\u003e \u003cdate\u003e \u003cduration\u003e \u003ctag\u003e\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"ChenKangg"},"content":"                \"7. landmark \u003ctravel activity\u003e \u003cdate\u003e \u003cduration\u003e \u003ctag\u003e\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"ChenKangg"},"content":"                \"8. delete \u003cactivity number\u003e\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"ChenKangg"},"content":"                \"9. find \u003ckeyword\u003e \u003cexclusion\u003e\\n\" +","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"ChenKangg"},"content":"                \"10. check \u003cactivity number\u003e\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"ChenKangg"},"content":"                \"11. uncheck \u003cactivity number\u003e\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"ChenKangg"},"content":"                \"12. tag \u003cactivity number\u003e \u003ctag name\u003e\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"ChenKangg"},"content":"                \"13. untag \u003cactivity number\u003e\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"ChenKangg"},"content":"                \"14. update \u003cupdate\u003e \u003cdate\u003e \u003cduration\u003e \u003ctag\u003e\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"ChenKangg"},"content":"                \"15. findtag \u003ctag name\u003e \u003cexclusion\u003e\\n\" +","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"ChenKangg"},"content":"                \"16. findtype \u003ctype\u003e \u003cexclusion\u003e\\n\" +","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"ChenKangg"},"content":"                \"17. listtags \\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":100,"author":{"gitId":"ChenKangg"},"content":"                \"18. expense \u003cactivity number\u003e \u003cexpense amount\u003e\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":101,"author":{"gitId":"ChenKangg"},"content":"                \"19. removeexpense \u003cactivity number\u003e\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":102,"author":{"gitId":"ChenKangg"},"content":"                \"20. totalexpense \u003ctype\u003e\\n\" +","lastModifiedDate":"2024-04-11"},{"lineNumber":103,"author":{"gitId":"ChenKangg"},"content":"                \"21. change \u003camount\u003e /from \u003ccurrent currency\u003e /to \u003cchanged currency\u003e\\n\");","lastModifiedDate":"2024-04-11"},{"lineNumber":104,"author":{"gitId":"ChenKangg"},"content":"        printLine();","lastModifiedDate":"2024-04-06"},{"lineNumber":105,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"ChenKangg"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"ChenKangg"},"content":"     * Prints out the error message for when the user inputs the date in the wrong format","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"ChenKangg"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"daryltay415"},"content":"    //@@author daryltay415","lastModifiedDate":"2024-04-09"},{"lineNumber":112,"author":{"gitId":"daryltay415"},"content":"    public static void printDateTimeExceptionError(){","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"Invalid date, please input the date in the following order: YYYY-MM-DD\");","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"daryltay415"},"content":"     * Prints out the error message for when there is an error when saving the file","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"daryltay415"},"content":"    public static void printSavingError(){","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"Something went wrong when saving the file\");","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"daryltay415"},"content":"     * Prints out the error message for when InterruptedException is thrown","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"daryltay415"},"content":"    public static void printInterruptedError(){","lastModifiedDate":"2024-04-07"},{"lineNumber":129,"author":{"gitId":"daryltay415"},"content":"        System.out.println(\"Warning Website might be down!\");","lastModifiedDate":"2024-04-07"},{"lineNumber":130,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":131,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":132,"author":{"gitId":"daryltay415"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"daryltay415"},"content":"     * Prints out the activity in a list","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"daryltay415"},"content":"     * @param activity The travel activity","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"daryltay415"},"content":"     * @param activityIndex The index of the activity","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"daryltay415"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"daryltay415"},"content":"    public static void printActivity(TravelActivity activity, int activityIndex) {","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"daryltay415"},"content":"        String checked \u003d activity.getActivityStatus()? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"daryltay415"},"content":"        System.out.print(checked + \" \" + activityIndex + \". \");","lastModifiedDate":"2024-04-06"},{"lineNumber":140,"author":{"gitId":"daryltay415"},"content":"        if (activity.getClass().getSimpleName().equals(\"TravelActivity\")){","lastModifiedDate":"2024-04-06"},{"lineNumber":141,"author":{"gitId":"daryltay415"},"content":"            System.out.print(\"General: \");","lastModifiedDate":"2024-04-06"},{"lineNumber":142,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":143,"author":{"gitId":"daryltay415"},"content":"        System.out.print(activity);","lastModifiedDate":"2024-04-06"},{"lineNumber":144,"author":{"gitId":"daryltay415"},"content":"        if(activity.getExpense() !\u003d null \u0026\u0026 !activity.getExpense().isEmpty()){","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"daryltay415"},"content":"            System.out.print(\" (\" + activity.getExpense() + \")\");","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"daryltay415"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":148,"author":{"gitId":"daryltay415"},"content":"        System.out.println();","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":151,"author":{"gitId":"daryltay415"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"EugeneChanJiajun":11,"daryltay415":87,"ChenKangg":35,"annnniexu":18}},{"path":"src/test/java/seedu/omnitravel/OmniTravelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daryltay415"},"content":"package seedu.omnitravel;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"ChinYanXu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ChinYanXu"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.errorhandlers.CheckParameters;","lastModifiedDate":"2024-04-06"},{"lineNumber":8,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.errorhandlers.OmniException;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.parser.Parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.Food;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.TravelActivity;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.TravelActivityList;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.Accommodation;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.travelactivitytypes.Landmark;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"daryltay415"},"content":"import seedu.omnitravel.ui.Ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"daryltay415"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"daryltay415"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"EugeneChanJiajun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"daryltay415"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"EugeneChanJiajun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"EugeneChanJiajun"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"EugeneChanJiajun"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"ChinYanXu"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"ChinYanXu"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"ChinYanXu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"EugeneChanJiajun"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"daryltay415"},"content":"class OmniTravelTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"ChinYanXu"},"content":"    Accommodation accommodationNew1 \u003d new Accommodation(\"nus rvrc\", LocalDate.parse(\"2025-12-12\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":39,"author":{"gitId":"daryltay415"},"content":"            \"5 years\", \"campus stay\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"ChinYanXu"},"content":"    Accommodation accommodationNew2 \u003d new Accommodation(\"nus pgpr\", LocalDate.parse(\"2025-10-12\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":41,"author":{"gitId":"daryltay415"},"content":"            \"5 years\", \"campus stay\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"ChinYanXu"},"content":"    Accommodation accommodationNew3 \u003d new Accommodation(\"nus utr\", LocalDate.parse(\"2025-09-12\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":43,"author":{"gitId":"daryltay415"},"content":"            \"5 years\", \"campus stay\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"ChinYanXu"},"content":"    Landmark landmarkNew1 \u003d new Landmark(\"berlin wall\", LocalDate.parse(\"2027-12-15\"), \"5 hours\",","lastModifiedDate":"2024-04-09"},{"lineNumber":45,"author":{"gitId":"daryltay415"},"content":"            \"historic site\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"ChinYanXu"},"content":"    Landmark landmarkNew2 \u003d new Landmark(\"utown\", LocalDate.parse(\"2028-08-14\"), \"10 hours\",","lastModifiedDate":"2024-04-09"},{"lineNumber":47,"author":{"gitId":"daryltay415"},"content":"            \"recreational centre\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"ChinYanXu"},"content":"    Landmark landmarkNew3 \u003d new Landmark(\"supper stretch\", LocalDate.parse(\"2027-08-18\"), \"2 hours\",","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"daryltay415"},"content":"            \"tourist hotspot\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"ChinYanXu"},"content":"    Food foodNew1 \u003d new Food(\"utown mala\", LocalDate.parse(\"2028-06-19\"), \"2 hours\",","lastModifiedDate":"2024-04-09"},{"lineNumber":51,"author":{"gitId":"daryltay415"},"content":"            \"spicy\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"ChinYanXu"},"content":"    Food foodNew2 \u003d new Food(\"pgpr mala\", LocalDate.parse(\"2026-07-07\"), \"1 hours\",","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"daryltay415"},"content":"            \"spicy\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"ChinYanXu"},"content":"    Food foodNew3 \u003d new Food(\"pgpr waffle\", LocalDate.parse(\"2026-03-09\"), \"0.5 hours\",","lastModifiedDate":"2024-04-09"},{"lineNumber":55,"author":{"gitId":"daryltay415"},"content":"            \"non-spicy\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"ChinYanXu"},"content":"    TravelActivity travelActivityNew1 \u003d new TravelActivity(\"esplanade\", LocalDate.parse(\"2026-03-19\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":57,"author":{"gitId":"daryltay415"},"content":"            \"3 hours\", \"concert\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"ChinYanXu"},"content":"    TravelActivity travelActivityNew2 \u003d new TravelActivity(\"merlion\", LocalDate.parse(\"2026-04-07\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":59,"author":{"gitId":"daryltay415"},"content":"            \"2 hours\", \"sightseeing\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"ChinYanXu"},"content":"    TravelActivity travelActivityNew3 \u003d new TravelActivity(\"chinatown\", LocalDate.parse(\"2025-02-21\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":61,"author":{"gitId":"daryltay415"},"content":"            \"5 hours\", \"sightseeing\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"ChinYanXu"},"content":"    private final PrintStream printedText \u003d System.out;","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"ChinYanXu"},"content":"    private final ByteArrayOutputStream capturedOutputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"ChinYanXu"},"content":"    public TravelActivityList initialiseTestTravelActivityList() {","lastModifiedDate":"2024-04-09"},{"lineNumber":68,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d new TravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":69,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-09"},{"lineNumber":70,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(accommodationNew2);","lastModifiedDate":"2024-04-09"},{"lineNumber":71,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(accommodationNew3);","lastModifiedDate":"2024-04-09"},{"lineNumber":72,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(landmarkNew1);","lastModifiedDate":"2024-04-09"},{"lineNumber":73,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(landmarkNew2);","lastModifiedDate":"2024-04-09"},{"lineNumber":74,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(landmarkNew3);","lastModifiedDate":"2024-04-09"},{"lineNumber":75,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(foodNew1);","lastModifiedDate":"2024-04-09"},{"lineNumber":76,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(foodNew2);","lastModifiedDate":"2024-04-09"},{"lineNumber":77,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(foodNew3);","lastModifiedDate":"2024-04-09"},{"lineNumber":78,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(travelActivityNew1);","lastModifiedDate":"2024-04-09"},{"lineNumber":79,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(travelActivityNew2);","lastModifiedDate":"2024-04-09"},{"lineNumber":80,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(travelActivityNew3);","lastModifiedDate":"2024-04-09"},{"lineNumber":81,"author":{"gitId":"ChinYanXu"},"content":"        return travelActivityListNew;","lastModifiedDate":"2024-04-09"},{"lineNumber":82,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":83,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":84,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":85,"author":{"gitId":"ChinYanXu"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"ChinYanXu"},"content":"    public void setUpPrintLnTest() {","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"ChinYanXu"},"content":"        System.setOut(new PrintStream(capturedOutputStream));","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"ChinYanXu"},"content":"    @AfterEach","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"ChinYanXu"},"content":"    public void restorePrintLn() {","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"ChinYanXu"},"content":"        System.setOut(printedText);","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void addTest() {","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList travelActivityList \u003d new TravelActivityList();","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity travelActivity1 \u003d new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity travelActivity2 \u003d new TravelActivity(\"visit home\",","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2019-12-14\"), \"5hours\", \"Sightseeing\", \"$50\");","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"daryltay415"},"content":"        travelActivityList.addTravelActivity(travelActivity1);","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertEquals(\"visit museum\", travelActivityList.getDescription(\"visit museum\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"daryltay415"},"content":"        travelActivityList.addTravelActivity(travelActivity2);","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"daryltay415"},"content":"        assertEquals(\"visit home\", travelActivityList.getDescription(\"visit home\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"ChinYanXu"},"content":"    public void deleteTestWhenInputIsGreaterThanNumberOfActivityInList() throws OmniException {","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityList \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityList.addTravelActivity(new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"ChinYanXu"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityList.addTravelActivity(new TravelActivity(\"visit home\",","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"ChinYanXu"},"content":"                LocalDate.parse(\"2019-12-14\"), \"5hours\", \"Sightseeing\", \"$50\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e travelActivityList.removeTravelActivity(3));","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"daryltay415"},"content":"    public void deleteTest() throws OmniException {","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"EugeneChanJiajun"},"content":"        //add the plan","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList travelActivityList \u003d new TravelActivityList();","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity travelActivity \u003d new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"$50\");","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"daryltay415"},"content":"        travelActivityList.addTravelActivity(travelActivity);","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertEquals(\"visit museum\", travelActivityList.getDescription(\"visit museum\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"EugeneChanJiajun"},"content":"        //delete the plan","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityList.removeTravelActivity(1);","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(\"cant be found\", travelActivityList.getDescription(\"visit museum\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"ChinYanXu"},"content":"        //testing the keyword delete enhancement","lastModifiedDate":"2024-04-09"},{"lineNumber":130,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity travelActivity2 \u003d new TravelActivity(\"visit home\",","lastModifiedDate":"2024-04-09"},{"lineNumber":131,"author":{"gitId":"ChinYanXu"},"content":"                LocalDate.parse(\"2019-12-14\"), \"5hours\", \"Sightseeing\", \"$50\");","lastModifiedDate":"2024-04-09"},{"lineNumber":132,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityList.removeTravelActivity(\"home\");","lastModifiedDate":"2024-04-09"},{"lineNumber":133,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(\"cant be found\", travelActivityList.getDescription(\"visit home\"));","lastModifiedDate":"2024-04-09"},{"lineNumber":134,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":136,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"annnniexu"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void getNoActivitiesTest() throws OmniException {","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"annnniexu"},"content":"        //add the first plan","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"annnniexu"},"content":"        TravelActivityList travelActivityList \u003d new TravelActivityList();","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity travelActivity1 \u003d new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"30\");","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity travelActivity2 \u003d new TravelActivity(\"go to beach\",","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2018-10-12\"),\"3hours\", \"Sightseeing\", \"30\");","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity travelActivity3 \u003d new TravelActivity(\"shopping\",","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2020-12-05\"),\"5hours\", \"Shopping\", \"$100\");","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"daryltay415"},"content":"        travelActivityList.addTravelActivity(travelActivity1);","lastModifiedDate":"2024-03-23"},{"lineNumber":148,"author":{"gitId":"annnniexu"},"content":"        assertEquals(\"visit museum\", travelActivityList.getDescription(\"visit museum\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":149,"author":{"gitId":"annnniexu"},"content":"        //add the second and third plan","lastModifiedDate":"2024-03-15"},{"lineNumber":150,"author":{"gitId":"daryltay415"},"content":"        travelActivityList.addTravelActivity(travelActivity2);","lastModifiedDate":"2024-03-23"},{"lineNumber":151,"author":{"gitId":"annnniexu"},"content":"        assertEquals(\"go to beach\", travelActivityList.getDescription(\"go to beach\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":152,"author":{"gitId":"daryltay415"},"content":"        travelActivityList.addTravelActivity(travelActivity3);","lastModifiedDate":"2024-03-23"},{"lineNumber":153,"author":{"gitId":"annnniexu"},"content":"        assertEquals(\"shopping\", travelActivityList.getDescription(\"shopping\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":154,"author":{"gitId":"EugeneChanJiajun"},"content":"        //check number of activities","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"daryltay415"},"content":"        assertEquals(3, travelActivityList.getNoOfTravelActivities());","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"annnniexu"},"content":"        //delete the first plan","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityList.removeTravelActivity(1);","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(\"cant be found\", travelActivityList.getDescription(\"visit museum\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"EugeneChanJiajun"},"content":"        //check number of activities","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(2, travelActivityList.getNoOfTravelActivities());","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"ChinYanXu"},"content":"    public void checkWhenTravelActivityIsAlreadyCheckedTest() throws OmniException {","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityList \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity travelActivity1 \u003d new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"ChinYanXu"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"$50\");","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityList.addTravelActivity(travelActivity1);","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityList.checkTravelActivity(1);","lastModifiedDate":"2024-04-14"},{"lineNumber":170,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityList.checkTravelActivity(1);","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"I have checked this activity:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"ChinYanXu"},"content":"                \"[X] 1. General: visit museum :12 May 2019 :2hours (Sightseeing) ($50)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"ChinYanXu"},"content":"                \"This activity is already done!\" + System.lineSeparator();","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), result);","lastModifiedDate":"2024-04-14"},{"lineNumber":175,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":177,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void checkTest() throws OmniException {","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"EugeneChanJiajun"},"content":"        //add the first plan","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList travelActivityList \u003d new TravelActivityList();","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e travelActivityList.checkTravelActivity(1));","lastModifiedDate":"2024-04-14"},{"lineNumber":182,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity travelActivity1 \u003d new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"$50\");","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"daryltay415"},"content":"        travelActivityList.addTravelActivity(travelActivity1);","lastModifiedDate":"2024-03-23"},{"lineNumber":185,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertEquals(\"visit museum\", travelActivityList.getDescription(\"visit museum\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"EugeneChanJiajun"},"content":"        //check the plan","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"EugeneChanJiajun"},"content":"        travelActivityList.checkTravelActivity(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"daryltay415"},"content":"        TravelActivity travelActivity2 \u003d travelActivityList.getTravelActivities().get(0);","lastModifiedDate":"2024-03-23"},{"lineNumber":189,"author":{"gitId":"daryltay415"},"content":"        assertTrue(travelActivity2.getActivityStatus());","lastModifiedDate":"2024-03-23"},{"lineNumber":190,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":192,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void uncheckTest() throws OmniException {","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"EugeneChanJiajun"},"content":"        //add the first plan","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList travelActivityList \u003d new TravelActivityList();","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e travelActivityList.uncheckTravelActivity(1));","lastModifiedDate":"2024-04-14"},{"lineNumber":197,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity travelActivity1 \u003d new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"$50\");","lastModifiedDate":"2024-04-01"},{"lineNumber":199,"author":{"gitId":"daryltay415"},"content":"        travelActivityList.addTravelActivity(travelActivity1);","lastModifiedDate":"2024-03-23"},{"lineNumber":200,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertEquals(\"visit museum\", travelActivityList.getDescription(\"visit museum\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"EugeneChanJiajun"},"content":"        //check the plan","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"EugeneChanJiajun"},"content":"        travelActivityList.checkTravelActivity(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"daryltay415"},"content":"        TravelActivity travelActivity2 \u003d travelActivityList.getTravelActivities().get(0);","lastModifiedDate":"2024-03-23"},{"lineNumber":204,"author":{"gitId":"daryltay415"},"content":"        assertTrue(travelActivity2.getActivityStatus());","lastModifiedDate":"2024-03-23"},{"lineNumber":205,"author":{"gitId":"EugeneChanJiajun"},"content":"        //uncheck the plan","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"EugeneChanJiajun"},"content":"        travelActivityList.uncheckTravelActivity(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"daryltay415"},"content":"        assertFalse(travelActivity2.getActivityStatus());","lastModifiedDate":"2024-03-23"},{"lineNumber":208,"author":{"gitId":"annnniexu"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":209,"author":{"gitId":"annnniexu"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":210,"author":{"gitId":"daryltay415"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"daryltay415"},"content":"    public void trueTest(){","lastModifiedDate":"2024-03-15"},{"lineNumber":212,"author":{"gitId":"daryltay415"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-15"},{"lineNumber":213,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":214,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":215,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":216,"author":{"gitId":"ChinYanXu"},"content":"    public void findWithoutExclusionWhenListIsEmptyTest () {","lastModifiedDate":"2024-04-14"},{"lineNumber":217,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":218,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"Sorry I could not find what you are looking for.\" + System.lineSeparator();","lastModifiedDate":"2024-04-14"},{"lineNumber":219,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.searchKeyword(\"anything\");","lastModifiedDate":"2024-04-14"},{"lineNumber":220,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), result);","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":222,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":223,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":224,"author":{"gitId":"ChinYanXu"},"content":"    public void findWithExclusionWhenListIsEmptyTest () {","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":226,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"Sorry I could not find what you are looking for.\" + System.lineSeparator();","lastModifiedDate":"2024-04-14"},{"lineNumber":227,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.searchKeyword(\"anything\", \"nothing\");","lastModifiedDate":"2024-04-14"},{"lineNumber":228,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), result);","lastModifiedDate":"2024-04-14"},{"lineNumber":229,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":231,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"ChinYanXu"},"content":"    //basic test for searchKeyword function","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"ChinYanXu"},"content":"    public void findWithoutExclusionTest () {","lastModifiedDate":"2024-04-09"},{"lineNumber":234,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":235,"author":{"gitId":"ChinYanXu"},"content":"        String findExpectedOutput \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 1. Food: utown mala :19 Jun 2028 :2 hours (spicy)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":237,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 2. Food: pgpr mala :7 Jul 2026 :1 hours (spicy)\"  + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":238,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.searchKeyword(\"mala\");","lastModifiedDate":"2024-04-09"},{"lineNumber":239,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), findExpectedOutput);","lastModifiedDate":"2024-03-27"},{"lineNumber":240,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":241,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":242,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-09"},{"lineNumber":243,"author":{"gitId":"ChinYanXu"},"content":"    public void findWithExclusionTest () {","lastModifiedDate":"2024-04-09"},{"lineNumber":244,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":245,"author":{"gitId":"ChinYanXu"},"content":"        String findExpectedOutput \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":246,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 1. Food: pgpr mala :7 Jul 2026 :1 hours (spicy)\"  + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":247,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.searchKeyword(\"mala\", \"utown\");","lastModifiedDate":"2024-04-09"},{"lineNumber":248,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), findExpectedOutput);","lastModifiedDate":"2024-04-09"},{"lineNumber":249,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":250,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":251,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":252,"author":{"gitId":"ChinYanXu"},"content":"    public void findTagWithoutExclusionAndTagIsNotInListTest () {","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"Sorry I could not find what you are looking for.\" + System.lineSeparator();","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.findTag(\"sightseeing\");","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), result);","lastModifiedDate":"2024-04-14"},{"lineNumber":257,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":258,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":259,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":260,"author":{"gitId":"ChinYanXu"},"content":"    public void findTagWithExclusionAndTagIsNotInListTest () {","lastModifiedDate":"2024-04-14"},{"lineNumber":261,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":262,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"Sorry I could not find what you are looking for.\" + System.lineSeparator();","lastModifiedDate":"2024-04-14"},{"lineNumber":263,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.findTag(\"sightseeing\", \"holiday\");","lastModifiedDate":"2024-04-14"},{"lineNumber":264,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), result);","lastModifiedDate":"2024-04-14"},{"lineNumber":265,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":266,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":267,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":268,"author":{"gitId":"ChinYanXu"},"content":"    //basic test for searchKeyword function","lastModifiedDate":"2024-03-27"},{"lineNumber":269,"author":{"gitId":"ChinYanXu"},"content":"    public void findTagWithoutExclusionTest () {","lastModifiedDate":"2024-04-09"},{"lineNumber":270,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":271,"author":{"gitId":"ChinYanXu"},"content":"        String findExpectedOutput2 \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-03-27"},{"lineNumber":272,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 1. General: merlion :7 Apr 2026 :2 hours (sightseeing)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":273,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 2. General: chinatown :21 Feb 2025 :5 hours (sightseeing)\"  + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":274,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.findTag(\"sightseeing\");","lastModifiedDate":"2024-04-09"},{"lineNumber":275,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), findExpectedOutput2);","lastModifiedDate":"2024-03-27"},{"lineNumber":276,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":277,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":278,"author":{"gitId":"ChinYanXu"},"content":"    //basic test for searchKeyword function","lastModifiedDate":"2024-03-27"},{"lineNumber":279,"author":{"gitId":"ChinYanXu"},"content":"    public void findTagWithExclusionTest () {","lastModifiedDate":"2024-04-09"},{"lineNumber":280,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":281,"author":{"gitId":"ChinYanXu"},"content":"        String findExpectedOutput2 \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":282,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 1. General: chinatown :21 Feb 2025 :5 hours (sightseeing)\"  + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":283,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.findTag(\"sightseeing\", \"merlion\");","lastModifiedDate":"2024-04-09"},{"lineNumber":284,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), findExpectedOutput2);","lastModifiedDate":"2024-04-09"},{"lineNumber":285,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":286,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":287,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":288,"author":{"gitId":"ChinYanXu"},"content":"    public void findTypeWithoutExclusionTestAndActivityIsNotFound () {","lastModifiedDate":"2024-04-14"},{"lineNumber":289,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":290,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"Sorry, I could not find what you are looking for.\" + System.lineSeparator();","lastModifiedDate":"2024-04-14"},{"lineNumber":291,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.findType(\"accommodation\");","lastModifiedDate":"2024-04-14"},{"lineNumber":292,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), result);","lastModifiedDate":"2024-04-14"},{"lineNumber":293,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":294,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":295,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":296,"author":{"gitId":"ChinYanXu"},"content":"    public void findTypeWithExclusionTestAndActivityIsNotFound () {","lastModifiedDate":"2024-04-14"},{"lineNumber":297,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":298,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"Sorry, I could not find what you are looking for.\" + System.lineSeparator();","lastModifiedDate":"2024-04-14"},{"lineNumber":299,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.findType(\"accommodation\", \"waffle\");","lastModifiedDate":"2024-04-14"},{"lineNumber":300,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), result);","lastModifiedDate":"2024-04-14"},{"lineNumber":301,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":302,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":303,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-09"},{"lineNumber":304,"author":{"gitId":"ChinYanXu"},"content":"    public void findTypeWithExclusionTest () {","lastModifiedDate":"2024-04-09"},{"lineNumber":305,"author":{"gitId":"ChinYanXu"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":306,"author":{"gitId":"ChinYanXu"},"content":"            TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":307,"author":{"gitId":"ChinYanXu"},"content":"            String findExpectedOutput3 \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-03-27"},{"lineNumber":308,"author":{"gitId":"ChinYanXu"},"content":"                    \"[ ] 1. Accommodation: nus rvrc :12 Dec 2025 :5 years (campus stay)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":309,"author":{"gitId":"ChinYanXu"},"content":"                    \"[ ] 2. Accommodation: nus pgpr :12 Oct 2025 :5 years (campus stay)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":310,"author":{"gitId":"ChinYanXu"},"content":"                    \"[ ] 3. Accommodation: nus utr :12 Sep 2025 :5 years (campus stay)\" + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":311,"author":{"gitId":"ChinYanXu"},"content":"            Parser.findTypeCommand(\"findtype accommodation\", travelActivityListNew);","lastModifiedDate":"2024-04-09"},{"lineNumber":312,"author":{"gitId":"ChinYanXu"},"content":"            assertEquals(capturedOutputStream.toString(), findExpectedOutput3);","lastModifiedDate":"2024-03-27"},{"lineNumber":313,"author":{"gitId":"ChinYanXu"},"content":"        } catch (OmniException exception) {","lastModifiedDate":"2024-04-09"},{"lineNumber":314,"author":{"gitId":"ChinYanXu"},"content":"            Ui.printException(exception);","lastModifiedDate":"2024-04-09"},{"lineNumber":315,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":316,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":317,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":318,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-09"},{"lineNumber":319,"author":{"gitId":"ChinYanXu"},"content":"    public void findTypeWithoutExclusionTest () {","lastModifiedDate":"2024-04-09"},{"lineNumber":320,"author":{"gitId":"ChinYanXu"},"content":"        try {","lastModifiedDate":"2024-04-09"},{"lineNumber":321,"author":{"gitId":"ChinYanXu"},"content":"            TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":322,"author":{"gitId":"ChinYanXu"},"content":"            String findExpectedOutput3 \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":323,"author":{"gitId":"ChinYanXu"},"content":"                    \"[ ] 1. Accommodation: nus rvrc :12 Dec 2025 :5 years (campus stay)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":324,"author":{"gitId":"ChinYanXu"},"content":"                    \"[ ] 2. Accommodation: nus pgpr :12 Oct 2025 :5 years (campus stay)\" + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":325,"author":{"gitId":"ChinYanXu"},"content":"            Parser.findTypeCommand(\"findtype accommodation /exclude utr\", travelActivityListNew);","lastModifiedDate":"2024-04-09"},{"lineNumber":326,"author":{"gitId":"ChinYanXu"},"content":"            assertEquals(capturedOutputStream.toString(), findExpectedOutput3);","lastModifiedDate":"2024-04-09"},{"lineNumber":327,"author":{"gitId":"ChinYanXu"},"content":"        } catch (OmniException exception) {","lastModifiedDate":"2024-03-27"},{"lineNumber":328,"author":{"gitId":"ChinYanXu"},"content":"            Ui.printException(exception);","lastModifiedDate":"2024-03-27"},{"lineNumber":329,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":330,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":331,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":332,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":333,"author":{"gitId":"ChinYanXu"},"content":"    public void testTagActivityWhenTaskNumberIsGreaterThanListSize() throws OmniException {","lastModifiedDate":"2024-04-14"},{"lineNumber":334,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":335,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e list.tagActivity(1, \"activity 1\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":336,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":337,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":338,"author":{"gitId":"ChenKangg"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":339,"author":{"gitId":"ChenKangg"},"content":"    public void testTagActivity() throws OmniException {","lastModifiedDate":"2024-03-20"},{"lineNumber":340,"author":{"gitId":"ChenKangg"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-03-20"},{"lineNumber":341,"author":{"gitId":"ChinYanXu"},"content":"        list.addTravelActivity(new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-03-27"},{"lineNumber":342,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"$50\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":343,"author":{"gitId":"ChenKangg"},"content":"        assertEquals(\"visit museum\", list.getDescription(\"visit museum\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":344,"author":{"gitId":"ChenKangg"},"content":"        // Tagging an existing task","lastModifiedDate":"2024-03-20"},{"lineNumber":345,"author":{"gitId":"ChenKangg"},"content":"        list.tagActivity(1, \"activity 1\");","lastModifiedDate":"2024-03-20"},{"lineNumber":346,"author":{"gitId":"ChenKangg"},"content":"        TravelActivity travelActivity \u003d list.getTravelActivities().get(0);","lastModifiedDate":"2024-03-20"},{"lineNumber":347,"author":{"gitId":"ChenKangg"},"content":"        assertEquals(\"activity 1\", travelActivity.getTag());","lastModifiedDate":"2024-03-20"},{"lineNumber":348,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":349,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":350,"author":{"gitId":"ChenKangg"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":351,"author":{"gitId":"ChenKangg"},"content":"    public void testRemoveTagFromActivity() throws OmniException {","lastModifiedDate":"2024-03-20"},{"lineNumber":352,"author":{"gitId":"ChenKangg"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-03-20"},{"lineNumber":353,"author":{"gitId":"ChinYanXu"},"content":"        list.addTravelActivity(new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-03-27"},{"lineNumber":354,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"$100\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":355,"author":{"gitId":"ChenKangg"},"content":"        assertEquals(\"visit museum\", list.getDescription(\"visit museum\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":356,"author":{"gitId":"ChenKangg"},"content":"        // Tagging an existing task","lastModifiedDate":"2024-03-20"},{"lineNumber":357,"author":{"gitId":"ChenKangg"},"content":"        list.tagActivity(1, \"activity 1\");","lastModifiedDate":"2024-03-20"},{"lineNumber":358,"author":{"gitId":"ChenKangg"},"content":"        TravelActivity travelActivity \u003d list.getTravelActivities().get(0);","lastModifiedDate":"2024-03-20"},{"lineNumber":359,"author":{"gitId":"ChenKangg"},"content":"        assertEquals(\"activity 1\", travelActivity.getTag());","lastModifiedDate":"2024-03-20"},{"lineNumber":360,"author":{"gitId":"ChenKangg"},"content":"        // Remove an existing tag","lastModifiedDate":"2024-03-20"},{"lineNumber":361,"author":{"gitId":"ChenKangg"},"content":"        list.removeTag(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":362,"author":{"gitId":"ChenKangg"},"content":"        assertEquals(\"visit museum\", list.getDescription(\"visit museum\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":363,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e list.removeTag(3));","lastModifiedDate":"2024-04-14"},{"lineNumber":364,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":365,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":366,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":367,"author":{"gitId":"ChinYanXu"},"content":"    public void testUpdateActivityWhenActivityIndexIsGreaterThanListSize() throws OmniException{","lastModifiedDate":"2024-04-14"},{"lineNumber":368,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityList \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":369,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e travelActivityList.updateTravelActivity(1,","lastModifiedDate":"2024-04-14"},{"lineNumber":370,"author":{"gitId":"ChinYanXu"},"content":"                LocalDate.parse(\"2020-12-10\"), \"3hours\", \"misc\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":371,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":372,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":373,"author":{"gitId":"daryltay415"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":374,"author":{"gitId":"daryltay415"},"content":"    public void testUpdateActivity() throws OmniException{","lastModifiedDate":"2024-03-23"},{"lineNumber":375,"author":{"gitId":"daryltay415"},"content":"        TravelActivityList travelActivityList \u003d new TravelActivityList();","lastModifiedDate":"2024-03-23"},{"lineNumber":376,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivity travelActivity1 \u003d new TravelActivity(\"Go Paris\",","lastModifiedDate":"2024-03-27"},{"lineNumber":377,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2019-02-10\"),\"2hours\", \"Sightseeing\", \"$40\");","lastModifiedDate":"2024-04-01"},{"lineNumber":378,"author":{"gitId":"daryltay415"},"content":"        travelActivityList.addTravelActivity(travelActivity1);","lastModifiedDate":"2024-03-23"},{"lineNumber":379,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(\"10 Feb 2019\",","lastModifiedDate":"2024-03-27"},{"lineNumber":380,"author":{"gitId":"ChinYanXu"},"content":"                travelActivity1.getDate().format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":381,"author":{"gitId":"daryltay415"},"content":"        assertEquals(\"2hours\", travelActivity1.getDuration());","lastModifiedDate":"2024-03-23"},{"lineNumber":382,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityList.updateTravelActivity(1,","lastModifiedDate":"2024-03-27"},{"lineNumber":383,"author":{"gitId":"ChinYanXu"},"content":"                LocalDate.parse(\"2020-12-10\"), \"3hours\", \"misc\");","lastModifiedDate":"2024-03-27"},{"lineNumber":384,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(\"10 Dec 2020\",","lastModifiedDate":"2024-03-27"},{"lineNumber":385,"author":{"gitId":"ChinYanXu"},"content":"                travelActivity1.getDate().format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":386,"author":{"gitId":"daryltay415"},"content":"        assertEquals(\"3hours\", travelActivity1.getDuration());","lastModifiedDate":"2024-03-23"},{"lineNumber":387,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":388,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":389,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":390,"author":{"gitId":"ChinYanXu"},"content":"    public void testExpenseActivityAndTaskNumberIsGreaterThanListSize() throws OmniException {","lastModifiedDate":"2024-04-14"},{"lineNumber":391,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":392,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e list.expenseActivity(1, \"$10\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":393,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":394,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":395,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":396,"author":{"gitId":"ChinYanXu"},"content":"    public void testExpenseActivityAndExpenseDontStartWithDollarSign() throws OmniException {","lastModifiedDate":"2024-04-14"},{"lineNumber":397,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":398,"author":{"gitId":"ChinYanXu"},"content":"        list.addTravelActivity(new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-04-14"},{"lineNumber":399,"author":{"gitId":"ChinYanXu"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"$30\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":400,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e list.expenseActivity(1, \"10\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":401,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":402,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":403,"author":{"gitId":"ChenKangg"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":404,"author":{"gitId":"ChenKangg"},"content":"    public void testExpenseActivity() throws OmniException {","lastModifiedDate":"2024-03-28"},{"lineNumber":405,"author":{"gitId":"ChenKangg"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-03-28"},{"lineNumber":406,"author":{"gitId":"ChenKangg"},"content":"        list.addTravelActivity(new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-03-28"},{"lineNumber":407,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"$30\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":408,"author":{"gitId":"ChenKangg"},"content":"        assertEquals(\"visit museum\", list.getDescription(\"visit museum\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":409,"author":{"gitId":"ChenKangg"},"content":"        // adding expense to existing task","lastModifiedDate":"2024-03-28"},{"lineNumber":410,"author":{"gitId":"ChenKangg"},"content":"        list.expenseActivity(1, \"$50\");","lastModifiedDate":"2024-03-28"},{"lineNumber":411,"author":{"gitId":"ChenKangg"},"content":"        TravelActivity travelActivity \u003d list.getTravelActivities().get(0);","lastModifiedDate":"2024-03-28"},{"lineNumber":412,"author":{"gitId":"ChenKangg"},"content":"        assertEquals(\"$50\", travelActivity.getExpense());","lastModifiedDate":"2024-03-28"},{"lineNumber":413,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":414,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":415,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":416,"author":{"gitId":"ChinYanXu"},"content":"    public void testRemoveExpenseAndTaskNumberIsGreaterThanListSize() throws OmniException {","lastModifiedDate":"2024-04-14"},{"lineNumber":417,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":418,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e list.removeExpense(1));","lastModifiedDate":"2024-04-14"},{"lineNumber":419,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":420,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":421,"author":{"gitId":"ChenKangg"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":422,"author":{"gitId":"ChenKangg"},"content":"    public void testRemoveExpense() throws OmniException {","lastModifiedDate":"2024-03-28"},{"lineNumber":423,"author":{"gitId":"ChenKangg"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-03-28"},{"lineNumber":424,"author":{"gitId":"ChenKangg"},"content":"        list.addTravelActivity(new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-03-28"},{"lineNumber":425,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"$20\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":426,"author":{"gitId":"ChenKangg"},"content":"        assertEquals(\"visit museum\", list.getDescription(\"visit museum\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":427,"author":{"gitId":"ChenKangg"},"content":"        // adding expense to existing task","lastModifiedDate":"2024-03-28"},{"lineNumber":428,"author":{"gitId":"ChenKangg"},"content":"        list.expenseActivity(1, \"$50\");","lastModifiedDate":"2024-03-28"},{"lineNumber":429,"author":{"gitId":"ChenKangg"},"content":"        TravelActivity travelActivity \u003d list.getTravelActivities().get(0);","lastModifiedDate":"2024-03-28"},{"lineNumber":430,"author":{"gitId":"ChenKangg"},"content":"        assertEquals(\"$50\", travelActivity.getExpense());","lastModifiedDate":"2024-03-28"},{"lineNumber":431,"author":{"gitId":"ChenKangg"},"content":"        // Remove an existing expense","lastModifiedDate":"2024-03-28"},{"lineNumber":432,"author":{"gitId":"ChenKangg"},"content":"        list.removeExpense(1);","lastModifiedDate":"2024-03-28"},{"lineNumber":433,"author":{"gitId":"ChenKangg"},"content":"        assertEquals(\"visit museum\", list.getDescription(\"visit museum\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":434,"author":{"gitId":"ChenKangg"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":435,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":436,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":437,"author":{"gitId":"ChinYanXu"},"content":"    public void testTotalExpenseAndTypeIsInvalid() throws OmniException{","lastModifiedDate":"2024-04-15"},{"lineNumber":438,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":439,"author":{"gitId":"ChinYanXu"},"content":"        list.addTravelActivity(new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-04-14"},{"lineNumber":440,"author":{"gitId":"ChinYanXu"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"$20\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":441,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e list.totalExpense(\"NA\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":442,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":443,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":444,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-08"},{"lineNumber":445,"author":{"gitId":"ChinYanXu"},"content":"    public void testTotalExpenseAll() throws OmniException{","lastModifiedDate":"2024-04-15"},{"lineNumber":446,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-08"},{"lineNumber":447,"author":{"gitId":"ChinYanXu"},"content":"        list.addTravelActivity(new TravelActivity(\"visit museum\",","lastModifiedDate":"2024-04-08"},{"lineNumber":448,"author":{"gitId":"ChinYanXu"},"content":"                LocalDate.parse(\"2019-05-12\"),\"2hours\", \"Sightseeing\", \"$20\"));","lastModifiedDate":"2024-04-08"},{"lineNumber":449,"author":{"gitId":"ChinYanXu"},"content":"        list.totalExpense(\"all\");","lastModifiedDate":"2024-04-08"},{"lineNumber":450,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":451,"author":{"gitId":"ChinYanXu"},"content":"        String findExpectedOutput \u003d \"The total expense for all travel activities is: $20.0\";","lastModifiedDate":"2024-04-08"},{"lineNumber":452,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), findExpectedOutput);","lastModifiedDate":"2024-04-08"},{"lineNumber":453,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":454,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":455,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-08"},{"lineNumber":456,"author":{"gitId":"ChinYanXu"},"content":"    public void testTotalExpenseAccommodation() throws OmniException{","lastModifiedDate":"2024-04-15"},{"lineNumber":457,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-08"},{"lineNumber":458,"author":{"gitId":"ChinYanXu"},"content":"        list.addTravelActivity(new Accommodation(\"RVRC\", LocalDate.parse(\"2022-07-12\"), \"3hours\",","lastModifiedDate":"2024-04-08"},{"lineNumber":459,"author":{"gitId":"ChinYanXu"},"content":"                \"hostel\", \"$70\"));","lastModifiedDate":"2024-04-08"},{"lineNumber":460,"author":{"gitId":"ChinYanXu"},"content":"        String findExpectedOutput1 \u003d \"The total expense for Accommodation travel activities is: $70.0\";","lastModifiedDate":"2024-04-08"},{"lineNumber":461,"author":{"gitId":"ChinYanXu"},"content":"        list.totalExpense(\"Accommodation\");","lastModifiedDate":"2024-04-08"},{"lineNumber":462,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), findExpectedOutput1);","lastModifiedDate":"2024-04-08"},{"lineNumber":463,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":464,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":465,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-08"},{"lineNumber":466,"author":{"gitId":"ChinYanXu"},"content":"    public void testTotalExpenseFood() throws OmniException{","lastModifiedDate":"2024-04-15"},{"lineNumber":467,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-08"},{"lineNumber":468,"author":{"gitId":"ChinYanXu"},"content":"        list.addTravelActivity(new Food(\"UTOWN Flavours\", LocalDate.parse(\"2028-05-12\"), \"1 hours\",","lastModifiedDate":"2024-04-09"},{"lineNumber":469,"author":{"gitId":"ChinYanXu"},"content":"                \"lunch\", \"$10\"));","lastModifiedDate":"2024-04-08"},{"lineNumber":470,"author":{"gitId":"ChinYanXu"},"content":"        String findExpectedOutput2 \u003d \"The total expense for Food travel activities is: $10.0\";","lastModifiedDate":"2024-04-08"},{"lineNumber":471,"author":{"gitId":"ChinYanXu"},"content":"        list.totalExpense(\"Food\");","lastModifiedDate":"2024-04-08"},{"lineNumber":472,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), findExpectedOutput2);","lastModifiedDate":"2024-04-08"},{"lineNumber":473,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":474,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":475,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-08"},{"lineNumber":476,"author":{"gitId":"ChinYanXu"},"content":"    public void testTotalExpenseLandmark() throws OmniException{","lastModifiedDate":"2024-04-15"},{"lineNumber":477,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-08"},{"lineNumber":478,"author":{"gitId":"ChinYanXu"},"content":"        list.addTravelActivity(new Landmark(\"Berlin Wall\", LocalDate.parse(\"2027-08-14\"), \"1 hours\",","lastModifiedDate":"2024-04-09"},{"lineNumber":479,"author":{"gitId":"ChinYanXu"},"content":"                \"sightseeig\", \"$5\"));","lastModifiedDate":"2024-04-08"},{"lineNumber":480,"author":{"gitId":"ChinYanXu"},"content":"        String findExpectedOutput2 \u003d \"The total expense for Landmark travel activities is: $5.0\";","lastModifiedDate":"2024-04-08"},{"lineNumber":481,"author":{"gitId":"ChinYanXu"},"content":"        list.totalExpense(\"Landmark\");","lastModifiedDate":"2024-04-08"},{"lineNumber":482,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), findExpectedOutput2);","lastModifiedDate":"2024-04-08"},{"lineNumber":483,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":484,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":485,"author":{"gitId":"daryltay415"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":486,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":487,"author":{"gitId":"daryltay415"},"content":"    public void testListTags() throws OmniException {","lastModifiedDate":"2024-04-06"},{"lineNumber":488,"author":{"gitId":"daryltay415"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-06"},{"lineNumber":489,"author":{"gitId":"daryltay415"},"content":"        // Testcases with tags","lastModifiedDate":"2024-04-06"},{"lineNumber":490,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-06"},{"lineNumber":491,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(foodNew1);","lastModifiedDate":"2024-04-06"},{"lineNumber":492,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(landmarkNew1);","lastModifiedDate":"2024-04-06"},{"lineNumber":493,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(travelActivityNew1);","lastModifiedDate":"2024-04-06"},{"lineNumber":494,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":495,"author":{"gitId":"daryltay415"},"content":"        // Testcases without tags","lastModifiedDate":"2024-04-06"},{"lineNumber":496,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(new Accommodation(\"Airbnb\",","lastModifiedDate":"2024-04-06"},{"lineNumber":497,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2012-12-12\"), \"2hours\", \"\", \"\"));","lastModifiedDate":"2024-04-06"},{"lineNumber":498,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(new Food(\"Takoyaki\",","lastModifiedDate":"2024-04-06"},{"lineNumber":499,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2012-12-12\"), \"2hours\", \"\", \"\"));","lastModifiedDate":"2024-04-06"},{"lineNumber":500,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(new Landmark(\"Pyramid\",","lastModifiedDate":"2024-04-06"},{"lineNumber":501,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2012-12-12\"), \"2hours\", \"\", \"\"));","lastModifiedDate":"2024-04-06"},{"lineNumber":502,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(new TravelActivity(\"Go home\",","lastModifiedDate":"2024-04-06"},{"lineNumber":503,"author":{"gitId":"daryltay415"},"content":"                LocalDate.parse(\"2012-12-12\"), \"2hours\", \"\", \"\"));","lastModifiedDate":"2024-04-06"},{"lineNumber":504,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":505,"author":{"gitId":"daryltay415"},"content":"        list.listTags();","lastModifiedDate":"2024-04-06"},{"lineNumber":506,"author":{"gitId":"daryltay415"},"content":"        String expectedOutput \u003d \"1. campus stay\" + System.lineSeparator()","lastModifiedDate":"2024-04-06"},{"lineNumber":507,"author":{"gitId":"daryltay415"},"content":"                + \"2. concert\" + System.lineSeparator()","lastModifiedDate":"2024-04-06"},{"lineNumber":508,"author":{"gitId":"daryltay415"},"content":"                + \"3. historic site\" + System.lineSeparator()","lastModifiedDate":"2024-04-06"},{"lineNumber":509,"author":{"gitId":"daryltay415"},"content":"                + \"4. spicy\" + System.lineSeparator();","lastModifiedDate":"2024-04-06"},{"lineNumber":510,"author":{"gitId":"daryltay415"},"content":"        assertEquals(capturedOutputStream.toString(), expectedOutput);","lastModifiedDate":"2024-04-06"},{"lineNumber":511,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":512,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":513,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":514,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":515,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testIsNumeric() {","lastModifiedDate":"2024-04-06"},{"lineNumber":516,"author":{"gitId":"daryltay415"},"content":"        assertTrue(CheckParameters.isNumeric(\"123\"));","lastModifiedDate":"2024-04-06"},{"lineNumber":517,"author":{"gitId":"daryltay415"},"content":"        assertFalse(CheckParameters.isNumeric(\"abc\"));","lastModifiedDate":"2024-04-06"},{"lineNumber":518,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":519,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":520,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":521,"author":{"gitId":"ChinYanXu"},"content":"    public void testGetListWhenActivityIsNull() throws OmniException {","lastModifiedDate":"2024-04-14"},{"lineNumber":522,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":523,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.addTravelActivity(null);","lastModifiedDate":"2024-04-14"},{"lineNumber":524,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.listTravelActivities(false, false, LocalDate.now());","lastModifiedDate":"2024-04-14"},{"lineNumber":525,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), \"There are no activities to list\");","lastModifiedDate":"2024-04-14"},{"lineNumber":526,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":527,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":528,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":529,"author":{"gitId":"ChinYanXu"},"content":"    public void testGetListWhenEmpty() throws OmniException {","lastModifiedDate":"2024-04-14"},{"lineNumber":530,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d new TravelActivityList();","lastModifiedDate":"2024-04-14"},{"lineNumber":531,"author":{"gitId":"ChinYanXu"},"content":"        travelActivityListNew.listTravelActivities(false, false, LocalDate.now());","lastModifiedDate":"2024-04-14"},{"lineNumber":532,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), \"There are no activities to list\");","lastModifiedDate":"2024-04-14"},{"lineNumber":533,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":534,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":535,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":536,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testGetList() throws OmniException {","lastModifiedDate":"2024-04-06"},{"lineNumber":537,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":538,"author":{"gitId":"ChinYanXu"},"content":"        String expectedOutput1 \u003d \"[ ] 1. Accommodation: nus rvrc :12 Dec 2025 :5 years (campus stay)\" +","lastModifiedDate":"2024-04-09"},{"lineNumber":539,"author":{"gitId":"ChinYanXu"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":540,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 2. Accommodation: nus pgpr :12 Oct 2025 :5 years (campus stay)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":541,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 3. Accommodation: nus utr :12 Sep 2025 :5 years (campus stay)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":542,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 4. Landmark: berlin wall :15 Dec 2027 :5 hours (historic site)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":543,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 5. Landmark: utown :14 Aug 2028 :10 hours (recreational centre)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":544,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 6. Landmark: supper stretch :18 Aug 2027 :2 hours (tourist hotspot)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":545,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 7. Food: utown mala :19 Jun 2028 :2 hours (spicy)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":546,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 8. Food: pgpr mala :7 Jul 2026 :1 hours (spicy)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":547,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 9. Food: pgpr waffle :9 Mar 2026 :0.5 hours (non-spicy)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":548,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 10. General: esplanade :19 Mar 2026 :3 hours (concert)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":549,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 11. General: merlion :7 Apr 2026 :2 hours (sightseeing)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":550,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 12. General: chinatown :21 Feb 2025 :5 hours (sightseeing)\";","lastModifiedDate":"2024-04-09"},{"lineNumber":551,"author":{"gitId":"annnniexu"},"content":"        travelActivityListNew.listTravelActivities(false, false, LocalDate.now());","lastModifiedDate":"2024-04-10"},{"lineNumber":552,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), expectedOutput1);","lastModifiedDate":"2024-04-09"},{"lineNumber":553,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":554,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":555,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":556,"author":{"gitId":"ChinYanXu"},"content":"    public void testActivityCommandAccommodation() throws OmniException {","lastModifiedDate":"2024-04-15"},{"lineNumber":557,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-06"},{"lineNumber":558,"author":{"gitId":"daryltay415"},"content":"        String expectedOutput4 \u003d \"_______________________________________________________________________________\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":559,"author":{"gitId":"ChinYanXu"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":560,"author":{"gitId":"ChinYanXu"},"content":"                \"I added a new accommodation\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":561,"author":{"gitId":"ChinYanXu"},"content":"                \"Accommodation: description :4 Oct 2024 :2 days (test)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":562,"author":{"gitId":"daryltay415"},"content":"                \"_______________________________________________________________________________\";","lastModifiedDate":"2024-04-14"},{"lineNumber":563,"author":{"gitId":"daryltay415"},"content":"        Parser.activityCommand(\"accommodation description /date 2024-10-04 /duration 2 days /tag test\", list);","lastModifiedDate":"2024-04-06"},{"lineNumber":564,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), expectedOutput4);","lastModifiedDate":"2024-04-09"},{"lineNumber":565,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":566,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":567,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":568,"author":{"gitId":"ChinYanXu"},"content":"    public void testActivityCommandFood() throws OmniException {","lastModifiedDate":"2024-04-15"},{"lineNumber":569,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-15"},{"lineNumber":570,"author":{"gitId":"ChinYanXu"},"content":"        String expectedOutput4 \u003d \"_______________________________________________________________________________\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":571,"author":{"gitId":"ChinYanXu"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":572,"author":{"gitId":"ChinYanXu"},"content":"                \"I added a new food activity\" + System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":573,"author":{"gitId":"ChinYanXu"},"content":"                \"Food: description :4 Oct 2024 :2 days (test)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":574,"author":{"gitId":"ChinYanXu"},"content":"                \"_______________________________________________________________________________\";","lastModifiedDate":"2024-04-15"},{"lineNumber":575,"author":{"gitId":"ChinYanXu"},"content":"        Parser.activityCommand(\"food description /date 2024-10-04 /duration 2 days /tag test\", list);","lastModifiedDate":"2024-04-15"},{"lineNumber":576,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), expectedOutput4);","lastModifiedDate":"2024-04-15"},{"lineNumber":577,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":578,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":579,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":580,"author":{"gitId":"ChinYanXu"},"content":"    public void testActivityCommandLandmark() throws OmniException {","lastModifiedDate":"2024-04-15"},{"lineNumber":581,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-15"},{"lineNumber":582,"author":{"gitId":"ChinYanXu"},"content":"        String expectedOutput4 \u003d \"_______________________________________________________________________________\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":583,"author":{"gitId":"ChinYanXu"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":584,"author":{"gitId":"ChinYanXu"},"content":"                \"I added a new landmark\" + System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":585,"author":{"gitId":"ChinYanXu"},"content":"                \"Landmark: description :4 Oct 2024 :2 days (test)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":586,"author":{"gitId":"ChinYanXu"},"content":"                \"_______________________________________________________________________________\";","lastModifiedDate":"2024-04-15"},{"lineNumber":587,"author":{"gitId":"ChinYanXu"},"content":"        Parser.activityCommand(\"landmark description /date 2024-10-04 /duration 2 days /tag test\", list);","lastModifiedDate":"2024-04-15"},{"lineNumber":588,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), expectedOutput4);","lastModifiedDate":"2024-04-15"},{"lineNumber":589,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":590,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":591,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":592,"author":{"gitId":"ChinYanXu"},"content":"    public void testActivityCommandError() throws OmniException {","lastModifiedDate":"2024-04-15"},{"lineNumber":593,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-15"},{"lineNumber":594,"author":{"gitId":"ChinYanXu"},"content":"        String expectedOutput4 \u003d \"____________________________________________________________\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":595,"author":{"gitId":"ChinYanXu"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":596,"author":{"gitId":"ChinYanXu"},"content":"                \"Unknown activity type\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":597,"author":{"gitId":"ChinYanXu"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2024-04-15"},{"lineNumber":598,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.activityCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":599,"author":{"gitId":"ChinYanXu"},"content":"                \"Test description /date 2024-10-04 /duration 2 days /tag test\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":600,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":601,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":602,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":603,"author":{"gitId":"ChinYanXu"},"content":"    public void testActivityCommandButDateIsBeforeNow() throws OmniException {","lastModifiedDate":"2024-04-15"},{"lineNumber":604,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-15"},{"lineNumber":605,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.activityCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":606,"author":{"gitId":"ChinYanXu"},"content":"                \"accommodation description /date 2000-10-04 /duration 2 days /tag test\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":607,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":608,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":609,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":610,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testTagCommand() throws OmniException {","lastModifiedDate":"2024-04-06"},{"lineNumber":611,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":612,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.tagCommand(\"tag 1\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":613,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.tagCommand(\"tag\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":614,"author":{"gitId":"ChinYanXu"},"content":"        String expectedOutput5 \u003d \"I have tagged this task:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":615,"author":{"gitId":"ChinYanXu"},"content":"                \"Accommodation: nus rvrc :12 Dec 2025 :5 years (test)\";","lastModifiedDate":"2024-04-09"},{"lineNumber":616,"author":{"gitId":"EugeneChanJiajun"},"content":"        Parser.tagCommand(\"tag 1 test\", list);","lastModifiedDate":"2024-04-06"},{"lineNumber":617,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), expectedOutput5);","lastModifiedDate":"2024-04-09"},{"lineNumber":618,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":619,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":620,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":621,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testRemoveTagCommand() throws OmniException {","lastModifiedDate":"2024-04-06"},{"lineNumber":622,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":623,"author":{"gitId":"EugeneChanJiajun"},"content":"        Parser.tagCommand(\"tag 1 test\", list);","lastModifiedDate":"2024-04-07"},{"lineNumber":624,"author":{"gitId":"EugeneChanJiajun"},"content":"        String[] input \u003d {\"untag\", \"1\"};","lastModifiedDate":"2024-04-07"},{"lineNumber":625,"author":{"gitId":"ChinYanXu"},"content":"        String[] input1 \u003d {\"untag\", \"1\", \"5\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":626,"author":{"gitId":"ChinYanXu"},"content":"        String expectedOutput6 \u003d \"I have tagged this task:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":627,"author":{"gitId":"ChinYanXu"},"content":"                \"Accommodation: nus rvrc :12 Dec 2025 :5 years (test)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":628,"author":{"gitId":"ChinYanXu"},"content":"                \"Tag removed from the task:\" +","lastModifiedDate":"2024-04-09"},{"lineNumber":629,"author":{"gitId":"ChinYanXu"},"content":"                System.lineSeparator() + \"Accommodation: nus rvrc :12 Dec 2025 :5 years\";","lastModifiedDate":"2024-04-09"},{"lineNumber":630,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.removeTagCommand(input1, list));","lastModifiedDate":"2024-04-15"},{"lineNumber":631,"author":{"gitId":"EugeneChanJiajun"},"content":"        Parser.removeTagCommand(input, list);","lastModifiedDate":"2024-04-07"},{"lineNumber":632,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), expectedOutput6);","lastModifiedDate":"2024-04-09"},{"lineNumber":633,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":634,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":635,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":636,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testUpdateCommand() throws OmniException {","lastModifiedDate":"2024-04-06"},{"lineNumber":637,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":638,"author":{"gitId":"EugeneChanJiajun"},"content":"        list.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-07"},{"lineNumber":639,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.updateCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":640,"author":{"gitId":"ChinYanXu"},"content":"                \"update 1 /date 2000-04-04 /duration 2 days /tag test\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":641,"author":{"gitId":"ChinYanXu"},"content":"        Parser.updateCommand(\"update 1 /date 2025-04-04 /duration 2 days /tag test\", list);","lastModifiedDate":"2024-04-09"},{"lineNumber":642,"author":{"gitId":"ChinYanXu"},"content":"        String expectedOutput7 \u003d \"I have updated this task\\n\" +","lastModifiedDate":"2024-04-09"},{"lineNumber":643,"author":{"gitId":"ChinYanXu"},"content":"                \"from: Accommodation: nus rvrc :12 Dec 2025 :5 years (campus stay)\\n\" +","lastModifiedDate":"2024-04-10"},{"lineNumber":644,"author":{"gitId":"ChinYanXu"},"content":"                \"to: Accommodation: nus rvrc :4 Apr 2025 :2 days (test)\"  + System.lineSeparator();","lastModifiedDate":"2024-04-10"},{"lineNumber":645,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), expectedOutput7);","lastModifiedDate":"2024-04-09"},{"lineNumber":646,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":647,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":648,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":649,"author":{"gitId":"ChinYanXu"},"content":"    public void testFindTagCommandWithoutExclusion() throws OmniException {","lastModifiedDate":"2024-04-09"},{"lineNumber":650,"author":{"gitId":"ChinYanXu"},"content":"        try {","lastModifiedDate":"2024-04-09"},{"lineNumber":651,"author":{"gitId":"ChinYanXu"},"content":"            TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":652,"author":{"gitId":"ChinYanXu"},"content":"            assertThrows(OmniException.class, () -\u003e Parser.findTagCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":653,"author":{"gitId":"ChinYanXu"},"content":"                    \"findtype\", travelActivityListNew));","lastModifiedDate":"2024-04-15"},{"lineNumber":654,"author":{"gitId":"ChinYanXu"},"content":"            String findExpectedOutput2 \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":655,"author":{"gitId":"ChinYanXu"},"content":"                    \"[ ] 1. General: merlion :7 Apr 2026 :2 hours (sightseeing)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":656,"author":{"gitId":"ChinYanXu"},"content":"                    \"[ ] 2. General: chinatown :21 Feb 2025 :5 hours (sightseeing)\" + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":657,"author":{"gitId":"ChinYanXu"},"content":"            Parser.findTagCommand(\"findtag sightseeing\", travelActivityListNew);","lastModifiedDate":"2024-04-09"},{"lineNumber":658,"author":{"gitId":"ChinYanXu"},"content":"            assertEquals(capturedOutputStream.toString(), findExpectedOutput2);","lastModifiedDate":"2024-04-09"},{"lineNumber":659,"author":{"gitId":"ChinYanXu"},"content":"        } catch (OmniException exception) {","lastModifiedDate":"2024-04-09"},{"lineNumber":660,"author":{"gitId":"ChinYanXu"},"content":"            Ui.printException(exception);","lastModifiedDate":"2024-04-09"},{"lineNumber":661,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":662,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":663,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-09"},{"lineNumber":664,"author":{"gitId":"ChinYanXu"},"content":"    public void testFindTagCommandWithExclusion() throws OmniException {","lastModifiedDate":"2024-04-09"},{"lineNumber":665,"author":{"gitId":"ChinYanXu"},"content":"        try {","lastModifiedDate":"2024-04-09"},{"lineNumber":666,"author":{"gitId":"ChinYanXu"},"content":"            TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":667,"author":{"gitId":"ChinYanXu"},"content":"            String findExpectedOutput2 \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":668,"author":{"gitId":"ChinYanXu"},"content":"                    \"[ ] 1. General: chinatown :21 Feb 2025 :5 hours (sightseeing)\" + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":669,"author":{"gitId":"ChinYanXu"},"content":"            Parser.findTagCommand(\"findtag sightseeing /exclude merlion\", travelActivityListNew);","lastModifiedDate":"2024-04-09"},{"lineNumber":670,"author":{"gitId":"ChinYanXu"},"content":"            assertEquals(capturedOutputStream.toString(), findExpectedOutput2);","lastModifiedDate":"2024-04-09"},{"lineNumber":671,"author":{"gitId":"ChinYanXu"},"content":"        } catch (OmniException exception) {","lastModifiedDate":"2024-04-09"},{"lineNumber":672,"author":{"gitId":"ChinYanXu"},"content":"            Ui.printException(exception);","lastModifiedDate":"2024-04-09"},{"lineNumber":673,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":674,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":675,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":676,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":677,"author":{"gitId":"ChinYanXu"},"content":"    public void testFindTypeCommandWithoutExclusion() throws OmniException {","lastModifiedDate":"2024-04-09"},{"lineNumber":678,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":679,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.findTypeCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":680,"author":{"gitId":"ChinYanXu"},"content":"                \"findtype\", travelActivityListNew));","lastModifiedDate":"2024-04-15"},{"lineNumber":681,"author":{"gitId":"ChinYanXu"},"content":"        String expectedOutput3 \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":682,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 1. General: esplanade :19 Mar 2026 :3 hours (concert)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":683,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 2. General: merlion :7 Apr 2026 :2 hours (sightseeing)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":684,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 3. General: chinatown :21 Feb 2025 :5 hours (sightseeing)\";","lastModifiedDate":"2024-04-09"},{"lineNumber":685,"author":{"gitId":"ChinYanXu"},"content":"        Parser.findTypeCommand(\"findtype TravelActivity\", travelActivityListNew);","lastModifiedDate":"2024-04-09"},{"lineNumber":686,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), expectedOutput3);","lastModifiedDate":"2024-04-09"},{"lineNumber":687,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":688,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":689,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-09"},{"lineNumber":690,"author":{"gitId":"ChinYanXu"},"content":"    public void testFindTypeCommandWithExclusion() throws OmniException {","lastModifiedDate":"2024-04-09"},{"lineNumber":691,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":692,"author":{"gitId":"ChinYanXu"},"content":"        String expectedOutput3 \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":693,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 1. General: esplanade :19 Mar 2026 :3 hours (concert)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":694,"author":{"gitId":"ChinYanXu"},"content":"                \"[ ] 2. General: chinatown :21 Feb 2025 :5 hours (sightseeing)\" + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":695,"author":{"gitId":"ChinYanXu"},"content":"        Parser.findTypeCommand(\"findtype TravelActivity /exclude merlion\", travelActivityListNew);","lastModifiedDate":"2024-04-09"},{"lineNumber":696,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), expectedOutput3);","lastModifiedDate":"2024-04-09"},{"lineNumber":697,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":698,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":699,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testExpenseCommand() throws OmniException {","lastModifiedDate":"2024-04-07"},{"lineNumber":700,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-06"},{"lineNumber":701,"author":{"gitId":"EugeneChanJiajun"},"content":"        list.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-07"},{"lineNumber":702,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.expenseCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":703,"author":{"gitId":"ChinYanXu"},"content":"                \"expense 1\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":704,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.expenseCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":705,"author":{"gitId":"ChinYanXu"},"content":"                \"expense\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":706,"author":{"gitId":"ChinYanXu"},"content":"        String expectedOutput4 \u003d \"I have added expense for this task:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":707,"author":{"gitId":"ChinYanXu"},"content":"                \"Accommodation: nus rvrc :12 Dec 2025 :5 years (campus stay) ($50)\" + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":708,"author":{"gitId":"ChinYanXu"},"content":"        Parser.expenseCommand(\"expense 1 $50\", list);","lastModifiedDate":"2024-04-09"},{"lineNumber":709,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), expectedOutput4);","lastModifiedDate":"2024-04-09"},{"lineNumber":710,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":711,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":712,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":713,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testRemoveExpenseCommand() throws OmniException {","lastModifiedDate":"2024-04-07"},{"lineNumber":714,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-06"},{"lineNumber":715,"author":{"gitId":"EugeneChanJiajun"},"content":"        list.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-07"},{"lineNumber":716,"author":{"gitId":"ChinYanXu"},"content":"        String[] command1 \u003d {\"removeexpense\",\"2\", \"5\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":717,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.removeExpenseCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":718,"author":{"gitId":"ChinYanXu"},"content":"                command1, list));","lastModifiedDate":"2024-04-15"},{"lineNumber":719,"author":{"gitId":"EugeneChanJiajun"},"content":"        Parser.expenseCommand(\"expense 1 $50\", list);","lastModifiedDate":"2024-04-06"},{"lineNumber":720,"author":{"gitId":"EugeneChanJiajun"},"content":"        String[] input \u003d {\"removeExpense\", \"1\"};","lastModifiedDate":"2024-04-07"},{"lineNumber":721,"author":{"gitId":"ChinYanXu"},"content":"        String expectedOutput5 \u003d \"I have added expense for this task:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":722,"author":{"gitId":"ChinYanXu"},"content":"                \"Accommodation: nus rvrc :12 Dec 2025 :5 years (campus stay) ($50)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":723,"author":{"gitId":"ChinYanXu"},"content":"                \"Expense removed from the task:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":724,"author":{"gitId":"ChinYanXu"},"content":"                \"Accommodation: nus rvrc :12 Dec 2025 :5 years (campus stay)\" + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":725,"author":{"gitId":"EugeneChanJiajun"},"content":"        Parser.removeExpenseCommand(input, list);","lastModifiedDate":"2024-04-07"},{"lineNumber":726,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), expectedOutput5);","lastModifiedDate":"2024-04-09"},{"lineNumber":727,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":728,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":729,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":730,"author":{"gitId":"ChinYanXu"},"content":"    public void testFindCommandWithoutExclusion() throws OmniException {","lastModifiedDate":"2024-04-09"},{"lineNumber":731,"author":{"gitId":"ChinYanXu"},"content":"        try {","lastModifiedDate":"2024-04-09"},{"lineNumber":732,"author":{"gitId":"ChinYanXu"},"content":"            TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":733,"author":{"gitId":"ChinYanXu"},"content":"            assertThrows(OmniException.class, () -\u003e Parser.findCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":734,"author":{"gitId":"ChinYanXu"},"content":"                    \"find\", travelActivityListNew));","lastModifiedDate":"2024-04-15"},{"lineNumber":735,"author":{"gitId":"ChinYanXu"},"content":"            String findExpectedOutput \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":736,"author":{"gitId":"ChinYanXu"},"content":"                    \"[ ] 1. Food: utown mala :19 Jun 2028 :2 hours (spicy)\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":737,"author":{"gitId":"ChinYanXu"},"content":"                    \"[ ] 2. Food: pgpr mala :7 Jul 2026 :1 hours (spicy)\"  + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":738,"author":{"gitId":"ChinYanXu"},"content":"            Parser.findCommand(\"find mala\", travelActivityListNew);","lastModifiedDate":"2024-04-09"},{"lineNumber":739,"author":{"gitId":"ChinYanXu"},"content":"            assertEquals(capturedOutputStream.toString(), findExpectedOutput);","lastModifiedDate":"2024-04-09"},{"lineNumber":740,"author":{"gitId":"ChinYanXu"},"content":"        } catch (OmniException exception) {","lastModifiedDate":"2024-04-09"},{"lineNumber":741,"author":{"gitId":"ChinYanXu"},"content":"            Ui.printException(exception);","lastModifiedDate":"2024-04-09"},{"lineNumber":742,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":743,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":744,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-09"},{"lineNumber":745,"author":{"gitId":"ChinYanXu"},"content":"    public void testFindCommandWithExclusion() throws OmniException {","lastModifiedDate":"2024-04-09"},{"lineNumber":746,"author":{"gitId":"ChinYanXu"},"content":"        try {","lastModifiedDate":"2024-04-09"},{"lineNumber":747,"author":{"gitId":"ChinYanXu"},"content":"            TravelActivityList travelActivityListNew \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-09"},{"lineNumber":748,"author":{"gitId":"ChinYanXu"},"content":"            String findExpectedOutput \u003d \"Here are what you are looking for:\" + System.lineSeparator() +","lastModifiedDate":"2024-04-09"},{"lineNumber":749,"author":{"gitId":"ChinYanXu"},"content":"                    \"[ ] 1. Food: pgpr mala :7 Jul 2026 :1 hours (spicy)\"  + System.lineSeparator();","lastModifiedDate":"2024-04-09"},{"lineNumber":750,"author":{"gitId":"ChinYanXu"},"content":"            Parser.findCommand(\"find mala /exclude utown\", travelActivityListNew);","lastModifiedDate":"2024-04-09"},{"lineNumber":751,"author":{"gitId":"ChinYanXu"},"content":"            assertEquals(capturedOutputStream.toString(), findExpectedOutput);","lastModifiedDate":"2024-04-09"},{"lineNumber":752,"author":{"gitId":"ChinYanXu"},"content":"        } catch (OmniException exception) {","lastModifiedDate":"2024-04-09"},{"lineNumber":753,"author":{"gitId":"ChinYanXu"},"content":"            Ui.printException(exception);","lastModifiedDate":"2024-04-09"},{"lineNumber":754,"author":{"gitId":"ChinYanXu"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":755,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":756,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-06"},{"lineNumber":757,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testTotalExpenseCommand() throws OmniException {","lastModifiedDate":"2024-04-06"},{"lineNumber":758,"author":{"gitId":"EugeneChanJiajun"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-06"},{"lineNumber":759,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.totalExpenseCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":760,"author":{"gitId":"ChinYanXu"},"content":"                \"\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":761,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.totalExpenseCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":762,"author":{"gitId":"ChinYanXu"},"content":"                \"expenditure\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":763,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"The total expense for all travel activities is: $0.0\" + System.lineSeparator();","lastModifiedDate":"2024-04-14"},{"lineNumber":764,"author":{"gitId":"EugeneChanJiajun"},"content":"        Parser.totalExpenseCommand(\"totalexpense\", list);","lastModifiedDate":"2024-04-06"},{"lineNumber":765,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), result);","lastModifiedDate":"2024-04-14"},{"lineNumber":766,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList newList \u003d initialiseTestTravelActivityList();","lastModifiedDate":"2024-04-15"},{"lineNumber":767,"author":{"gitId":"ChinYanXu"},"content":"        Parser.totalExpenseCommand(\"totalexpense /type general\", list);","lastModifiedDate":"2024-04-15"},{"lineNumber":768,"author":{"gitId":"ChinYanXu"},"content":"        String result1 \u003d \"The total expense for all travel activities is: $0.0\" + System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":769,"author":{"gitId":"ChinYanXu"},"content":"                \"The total expense for General travel activities is: $0.0\" + System.lineSeparator();","lastModifiedDate":"2024-04-15"},{"lineNumber":770,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), result1);","lastModifiedDate":"2024-04-15"},{"lineNumber":771,"author":{"gitId":"ChinYanXu"},"content":"        String result2 \u003d \"The total expense for all travel activities is: $0.0\" + System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":772,"author":{"gitId":"ChinYanXu"},"content":"                \"The total expense for General travel activities is: $0.0\" + System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":773,"author":{"gitId":"ChinYanXu"},"content":"                \"The total expense for accommodation travel activities is: $0.0\" + System.lineSeparator();","lastModifiedDate":"2024-04-15"},{"lineNumber":774,"author":{"gitId":"ChinYanXu"},"content":"        Parser.totalExpenseCommand(\"totalexpense /type accommodation\", list);","lastModifiedDate":"2024-04-15"},{"lineNumber":775,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString(), result2);","lastModifiedDate":"2024-04-15"},{"lineNumber":776,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":777,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":778,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-08"},{"lineNumber":779,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testCurrencyExchangeCommand() throws OmniException {","lastModifiedDate":"2024-04-08"},{"lineNumber":780,"author":{"gitId":"EugeneChanJiajun"},"content":"        Parser.currencyExchangeCommand(\"change 100 /from USD /to EUR\");","lastModifiedDate":"2024-04-08"},{"lineNumber":781,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":782,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":783,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":784,"author":{"gitId":"ChenKangg"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":785,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-08"},{"lineNumber":786,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testAddExceptions() throws OmniException {","lastModifiedDate":"2024-04-08"},{"lineNumber":787,"author":{"gitId":"EugeneChanJiajun"},"content":"        CheckParameters.addExceptions(new String[]{\"description\", \"/date\", \"2024-04-08\", \"/duration\", \"2 days\"},","lastModifiedDate":"2024-04-08"},{"lineNumber":788,"author":{"gitId":"EugeneChanJiajun"},"content":"                \"add\", \"add description /date 2024-04-08 /duration 2 days\");","lastModifiedDate":"2024-04-08"},{"lineNumber":789,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.addExceptions(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":790,"author":{"gitId":"ChinYanXu"},"content":"            \"   \", \"2024-04-08\", \"2 days\"}, \"add\",","lastModifiedDate":"2024-04-15"},{"lineNumber":791,"author":{"gitId":"ChinYanXu"},"content":"            \"add description /date 2024-04-08 /duration 2 days\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":792,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.addExceptions(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":793,"author":{"gitId":"ChinYanXu"},"content":"            \"description\", \" \", \"2 days\"}, \"add\",","lastModifiedDate":"2024-04-15"},{"lineNumber":794,"author":{"gitId":"ChinYanXu"},"content":"            \"add description /date 2024-04-08 /duration 2 days\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":795,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.addExceptions(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":796,"author":{"gitId":"ChinYanXu"},"content":"            \"description\", \"2024-04-08\",\" \"}, \"add\",","lastModifiedDate":"2024-04-15"},{"lineNumber":797,"author":{"gitId":"ChinYanXu"},"content":"            \"add description /date 2024-04-08 /duration 2 days\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":798,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.addExceptions(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":799,"author":{"gitId":"ChinYanXu"},"content":"            \"description\", \"2024-04-08\", \"2 days\", \" \"}, \"add\",","lastModifiedDate":"2024-04-15"},{"lineNumber":800,"author":{"gitId":"ChinYanXu"},"content":"            \"add description /date 2024-04-08 /duration 2 days\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":801,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.addExceptions(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":802,"author":{"gitId":"ChinYanXu"},"content":"            \"description\"},","lastModifiedDate":"2024-04-15"},{"lineNumber":803,"author":{"gitId":"ChinYanXu"},"content":"            \"add\",\"add description /date 2024-04-08 /duration 2 days\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":804,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":805,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":806,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-08"},{"lineNumber":807,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testContainsWords() throws OmniException {","lastModifiedDate":"2024-04-08"},{"lineNumber":808,"author":{"gitId":"EugeneChanJiajun"},"content":"        CheckParameters.containsWords(\"2 days\");","lastModifiedDate":"2024-04-08"},{"lineNumber":809,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertThrows(OmniException.class, () -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":810,"author":{"gitId":"EugeneChanJiajun"},"content":"            CheckParameters.containsWords(\"£$%\");","lastModifiedDate":"2024-04-12"},{"lineNumber":811,"author":{"gitId":"EugeneChanJiajun"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":812,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":813,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":814,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-08"},{"lineNumber":815,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testIsValidExpense() throws OmniException {","lastModifiedDate":"2024-04-08"},{"lineNumber":816,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertTrue(CheckParameters.isValidExpense(\"50\"));","lastModifiedDate":"2024-04-08"},{"lineNumber":817,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertThrows(OmniException.class, () -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":818,"author":{"gitId":"EugeneChanJiajun"},"content":"            CheckParameters.isValidExpense(\"-0\");","lastModifiedDate":"2024-04-12"},{"lineNumber":819,"author":{"gitId":"EugeneChanJiajun"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":820,"author":{"gitId":"ChinYanXu"},"content":"        assertTrue(!CheckParameters.isValidExpense(\"number\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":821,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":822,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":823,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-08"},{"lineNumber":824,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testCheckCurrencyParameters() throws OmniException {","lastModifiedDate":"2024-04-08"},{"lineNumber":825,"author":{"gitId":"EugeneChanJiajun"},"content":"        CheckParameters.checkCurrencyParameters(new String[]{\"change\", \"100\", \"/from\", \"USD\", \"/to\", \"EUR\"},","lastModifiedDate":"2024-04-08"},{"lineNumber":826,"author":{"gitId":"EugeneChanJiajun"},"content":"            \"change 100 /from USD /to EUR\");","lastModifiedDate":"2024-04-08"},{"lineNumber":827,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.checkCurrencyParameters(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":828,"author":{"gitId":"ChinYanXu"},"content":"            \"change\", \"hundred\", \"USD\", \"EUR\"}, \"change 100 /from USD /to EUR\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":829,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.checkCurrencyParameters(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":830,"author":{"gitId":"ChinYanXu"},"content":"            \"change\", \"hundred\", \"usd\", \"usd\"}, \"change 100 /from USD /to EUR\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":831,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.checkCurrencyParameters(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":832,"author":{"gitId":"ChinYanXu"},"content":"            \"change\", \"hundred\", \"USD\"}, \"change 100 /from USD /to EUR\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":833,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":834,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":835,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-08"},{"lineNumber":836,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testHandleException() {","lastModifiedDate":"2024-04-08"},{"lineNumber":837,"author":{"gitId":"EugeneChanJiajun"},"content":"        OmniException omniException \u003d new OmniException(\"Test OmniException\");","lastModifiedDate":"2024-04-12"},{"lineNumber":838,"author":{"gitId":"EugeneChanJiajun"},"content":"        NoSuchElementException noSuchElementException \u003d new NoSuchElementException(\"Test NoSuchElementException\");","lastModifiedDate":"2024-04-12"},{"lineNumber":839,"author":{"gitId":"EugeneChanJiajun"},"content":"        NumberFormatException numberFormatException \u003d new NumberFormatException(\"Test NumberFormatException\");","lastModifiedDate":"2024-04-12"},{"lineNumber":840,"author":{"gitId":"EugeneChanJiajun"},"content":"        DateTimeException dateTimeException \u003d new DateTimeException(\"Test DateTimeException\");","lastModifiedDate":"2024-04-12"},{"lineNumber":841,"author":{"gitId":"EugeneChanJiajun"},"content":"        IOException ioException \u003d new IOException(\"Test IOException\");","lastModifiedDate":"2024-04-12"},{"lineNumber":842,"author":{"gitId":"EugeneChanJiajun"},"content":"        InterruptedException interruptedException \u003d new InterruptedException(\"Test InterruptedException\");","lastModifiedDate":"2024-04-12"},{"lineNumber":843,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":844,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":845,"author":{"gitId":"EugeneChanJiajun"},"content":"            CheckParameters.handleException(omniException);","lastModifiedDate":"2024-04-12"},{"lineNumber":846,"author":{"gitId":"EugeneChanJiajun"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":847,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":848,"author":{"gitId":"EugeneChanJiajun"},"content":"            CheckParameters.handleException(noSuchElementException);","lastModifiedDate":"2024-04-12"},{"lineNumber":849,"author":{"gitId":"EugeneChanJiajun"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":850,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":851,"author":{"gitId":"EugeneChanJiajun"},"content":"            CheckParameters.handleException(numberFormatException);","lastModifiedDate":"2024-04-12"},{"lineNumber":852,"author":{"gitId":"EugeneChanJiajun"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":853,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":854,"author":{"gitId":"EugeneChanJiajun"},"content":"            CheckParameters.handleException(dateTimeException);","lastModifiedDate":"2024-04-12"},{"lineNumber":855,"author":{"gitId":"EugeneChanJiajun"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":856,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":857,"author":{"gitId":"EugeneChanJiajun"},"content":"            CheckParameters.handleException(ioException);","lastModifiedDate":"2024-04-12"},{"lineNumber":858,"author":{"gitId":"EugeneChanJiajun"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":859,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":860,"author":{"gitId":"EugeneChanJiajun"},"content":"            CheckParameters.handleException(interruptedException);","lastModifiedDate":"2024-04-12"},{"lineNumber":861,"author":{"gitId":"EugeneChanJiajun"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":862,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":863,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":864,"author":{"gitId":"EugeneChanJiajun"},"content":"    @Test","lastModifiedDate":"2024-04-08"},{"lineNumber":865,"author":{"gitId":"EugeneChanJiajun"},"content":"    public void testAsciiCheck() throws OmniException {","lastModifiedDate":"2024-04-08"},{"lineNumber":866,"author":{"gitId":"EugeneChanJiajun"},"content":"        CheckParameters.asciiCheck(\"Valid input\");","lastModifiedDate":"2024-04-08"},{"lineNumber":867,"author":{"gitId":"EugeneChanJiajun"},"content":"        assertThrows(OmniException.class, () -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":868,"author":{"gitId":"EugeneChanJiajun"},"content":"            CheckParameters.asciiCheck(\" ©, ®, €, £, µ, ¥,\");","lastModifiedDate":"2024-04-12"},{"lineNumber":869,"author":{"gitId":"EugeneChanJiajun"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":870,"author":{"gitId":"EugeneChanJiajun"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":871,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":872,"author":{"gitId":"daryltay415"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":873,"author":{"gitId":"daryltay415"},"content":"    public void testGetListMethod() throws OmniException {","lastModifiedDate":"2024-04-12"},{"lineNumber":874,"author":{"gitId":"daryltay415"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-12"},{"lineNumber":875,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-12"},{"lineNumber":876,"author":{"gitId":"daryltay415"},"content":"        Parser.getList(\"list\", list);","lastModifiedDate":"2024-04-12"},{"lineNumber":877,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":878,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":879,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":880,"author":{"gitId":"ChinYanXu"},"content":"    public void testGetListMethodButDateIsInWrongFormat() throws OmniException {","lastModifiedDate":"2024-04-15"},{"lineNumber":881,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-15"},{"lineNumber":882,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e list.addTravelActivity(new Accommodation(\"Airbnb\",","lastModifiedDate":"2024-04-15"},{"lineNumber":883,"author":{"gitId":"ChinYanXu"},"content":"                LocalDate.parse(\"20-1200-12\"), \"2hours\", \"\", \"\")));","lastModifiedDate":"2024-04-15"},{"lineNumber":884,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.getList(\"list /date 20-1200-12\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":885,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":886,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":887,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":888,"author":{"gitId":"ChinYanXu"},"content":"    public void testGetListMethodButDateIsBeforeNow() throws OmniException {","lastModifiedDate":"2024-04-15"},{"lineNumber":889,"author":{"gitId":"ChinYanXu"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-15"},{"lineNumber":890,"author":{"gitId":"ChinYanXu"},"content":"        list.addTravelActivity(new Accommodation(\"Airbnb\",","lastModifiedDate":"2024-04-15"},{"lineNumber":891,"author":{"gitId":"ChinYanXu"},"content":"                        LocalDate.parse(\"2020-12-12\"), \"2hours\", \"\", \"\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":892,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.getList(\"list /date 1920-12-12\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":893,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":894,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":895,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":896,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":897,"author":{"gitId":"daryltay415"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":898,"author":{"gitId":"daryltay415"},"content":"    public void testGetListMethodWithSorting() throws OmniException{","lastModifiedDate":"2024-04-12"},{"lineNumber":899,"author":{"gitId":"daryltay415"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-12"},{"lineNumber":900,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-12"},{"lineNumber":901,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(foodNew2);","lastModifiedDate":"2024-04-12"},{"lineNumber":902,"author":{"gitId":"daryltay415"},"content":"        Parser.getList(\"list /sort\", list);","lastModifiedDate":"2024-04-12"},{"lineNumber":903,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":904,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":905,"author":{"gitId":"daryltay415"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":906,"author":{"gitId":"daryltay415"},"content":"    public void testGetListMethodWithDate() throws OmniException{","lastModifiedDate":"2024-04-12"},{"lineNumber":907,"author":{"gitId":"daryltay415"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-12"},{"lineNumber":908,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-12"},{"lineNumber":909,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(foodNew2);","lastModifiedDate":"2024-04-12"},{"lineNumber":910,"author":{"gitId":"daryltay415"},"content":"        Parser.getList(\"list /date 2025-12-12 \", list);","lastModifiedDate":"2024-04-12"},{"lineNumber":911,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":912,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":913,"author":{"gitId":"daryltay415"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":914,"author":{"gitId":"daryltay415"},"content":"    public void testAddCommandMethod() throws OmniException{","lastModifiedDate":"2024-04-12"},{"lineNumber":915,"author":{"gitId":"daryltay415"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-12"},{"lineNumber":916,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.addCommand(","lastModifiedDate":"2024-04-15"},{"lineNumber":917,"author":{"gitId":"ChinYanXu"},"content":"                \"add home /date 2000-12-12 /duration 2 days\", list));","lastModifiedDate":"2024-04-15"},{"lineNumber":918,"author":{"gitId":"daryltay415"},"content":"        // Test case without tags","lastModifiedDate":"2024-04-12"},{"lineNumber":919,"author":{"gitId":"daryltay415"},"content":"        Parser.addCommand(\"add home /date 2026-12-12 /duration 2 days\", list);","lastModifiedDate":"2024-04-12"},{"lineNumber":920,"author":{"gitId":"daryltay415"},"content":"        // Test case with tags","lastModifiedDate":"2024-04-12"},{"lineNumber":921,"author":{"gitId":"daryltay415"},"content":"        Parser.addCommand(\"add home /date 2026-12-12 /duration 2 days /tag first\", list);","lastModifiedDate":"2024-04-12"},{"lineNumber":922,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":923,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":924,"author":{"gitId":"daryltay415"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":925,"author":{"gitId":"daryltay415"},"content":"    public void testDeleteCommandMethod() throws OmniException{","lastModifiedDate":"2024-04-12"},{"lineNumber":926,"author":{"gitId":"daryltay415"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-12"},{"lineNumber":927,"author":{"gitId":"daryltay415"},"content":"        String[] command1 \u003d {\"delete\", \"1\"};","lastModifiedDate":"2024-04-12"},{"lineNumber":928,"author":{"gitId":"daryltay415"},"content":"        String[] command2 \u003d {\"delete\", \"pgpr mala\"};","lastModifiedDate":"2024-04-12"},{"lineNumber":929,"author":{"gitId":"ChinYanXu"},"content":"        String[] command3 \u003d {\"delete\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":930,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.deleteCommand(command1, list, \"delete 1\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":931,"author":{"gitId":"ChinYanXu"},"content":"        list.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-15"},{"lineNumber":932,"author":{"gitId":"ChinYanXu"},"content":"        list.addTravelActivity(foodNew2);","lastModifiedDate":"2024-04-15"},{"lineNumber":933,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.deleteCommand(command3, list, \"delete 1\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":934,"author":{"gitId":"daryltay415"},"content":"        Parser.deleteCommand(command1, list, \"delete 1\");","lastModifiedDate":"2024-04-12"},{"lineNumber":935,"author":{"gitId":"daryltay415"},"content":"        Parser.deleteCommand(command2, list, \"delete pgpr mala\");","lastModifiedDate":"2024-04-12"},{"lineNumber":936,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":937,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":938,"author":{"gitId":"daryltay415"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":939,"author":{"gitId":"daryltay415"},"content":"    public void testCheckCommandMethod() throws OmniException{","lastModifiedDate":"2024-04-12"},{"lineNumber":940,"author":{"gitId":"daryltay415"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-12"},{"lineNumber":941,"author":{"gitId":"ChinYanXu"},"content":"        String[] command1 \u003d {\"check\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":942,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.checkCommand(command1, list, \"check 1\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":943,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-12"},{"lineNumber":944,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(foodNew2);","lastModifiedDate":"2024-04-12"},{"lineNumber":945,"author":{"gitId":"daryltay415"},"content":"        String[] command \u003d {\"check\", \"1\"};","lastModifiedDate":"2024-04-12"},{"lineNumber":946,"author":{"gitId":"daryltay415"},"content":"        Parser.checkCommand(command, list, \"check 1\");","lastModifiedDate":"2024-04-14"},{"lineNumber":947,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":948,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":949,"author":{"gitId":"daryltay415"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":950,"author":{"gitId":"daryltay415"},"content":"    public void testUncheckCommandMethod() throws OmniException{","lastModifiedDate":"2024-04-12"},{"lineNumber":951,"author":{"gitId":"daryltay415"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-12"},{"lineNumber":952,"author":{"gitId":"ChinYanXu"},"content":"        String[] command1 \u003d {\"check\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":953,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.uncheckCommand(command1, list, \"uncheck 1\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":954,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-12"},{"lineNumber":955,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(foodNew2);","lastModifiedDate":"2024-04-12"},{"lineNumber":956,"author":{"gitId":"daryltay415"},"content":"        String[] command \u003d {\"uncheck\", \"1\"};","lastModifiedDate":"2024-04-12"},{"lineNumber":957,"author":{"gitId":"daryltay415"},"content":"        Parser.uncheckCommand(command, list, \"uncheck 1\");","lastModifiedDate":"2024-04-14"},{"lineNumber":958,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":959,"author":{"gitId":"daryltay415"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":960,"author":{"gitId":"daryltay415"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":961,"author":{"gitId":"daryltay415"},"content":"    public void testListTagsCommandMethod() throws OmniException{","lastModifiedDate":"2024-04-12"},{"lineNumber":962,"author":{"gitId":"daryltay415"},"content":"        TravelActivityList list \u003d new TravelActivityList();","lastModifiedDate":"2024-04-12"},{"lineNumber":963,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(accommodationNew1);","lastModifiedDate":"2024-04-12"},{"lineNumber":964,"author":{"gitId":"daryltay415"},"content":"        list.addTravelActivity(foodNew2);","lastModifiedDate":"2024-04-12"},{"lineNumber":965,"author":{"gitId":"daryltay415"},"content":"        String[] command \u003d {\"listtags\"};","lastModifiedDate":"2024-04-12"},{"lineNumber":966,"author":{"gitId":"ChinYanXu"},"content":"        String[] command1 \u003d {\"listtags\", \"list\", \"tag\"};","lastModifiedDate":"2024-04-15"},{"lineNumber":967,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e Parser.listTagsCommand(command1, list));","lastModifiedDate":"2024-04-15"},{"lineNumber":968,"author":{"gitId":"daryltay415"},"content":"        Parser.listTagsCommand(command, list);","lastModifiedDate":"2024-04-12"},{"lineNumber":969,"author":{"gitId":"daryltay415"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":970,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":971,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":972,"author":{"gitId":"ChinYanXu"},"content":"    public void testPrintDateTimeExceptionError() {","lastModifiedDate":"2024-04-14"},{"lineNumber":973,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"Invalid date, please input the date in the following order: YYYY-MM-DD\"","lastModifiedDate":"2024-04-14"},{"lineNumber":974,"author":{"gitId":"ChinYanXu"},"content":"                + System.lineSeparator();","lastModifiedDate":"2024-04-14"},{"lineNumber":975,"author":{"gitId":"ChinYanXu"},"content":"        Ui.printDateTimeExceptionError();","lastModifiedDate":"2024-04-14"},{"lineNumber":976,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(result, capturedOutputStream.toString());","lastModifiedDate":"2024-04-14"},{"lineNumber":977,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":978,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":979,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":980,"author":{"gitId":"ChinYanXu"},"content":"    public void testHelpCommand() {","lastModifiedDate":"2024-04-14"},{"lineNumber":981,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"_______________________________________________________________________________\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":982,"author":{"gitId":"ChinYanXu"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":983,"author":{"gitId":"ChinYanXu"},"content":"                \"These are the available commands!\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-04-14"},{"lineNumber":984,"author":{"gitId":"ChinYanXu"},"content":"                \"1. list \u003cdate\u003e \u003csort\u003e: List out the current list for given date sorted\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":985,"author":{"gitId":"ChinYanXu"},"content":"                \"2. help: Get all commands for the chatbot\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":986,"author":{"gitId":"ChinYanXu"},"content":"                \"3. bye: Exit the chatbot\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":987,"author":{"gitId":"ChinYanXu"},"content":"                \"4. add \u003ctravel activity\u003e \u003cdate\u003e \u003cduration\u003e \u003ctag\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":988,"author":{"gitId":"ChinYanXu"},"content":"                \"5. accommodation \u003ctravel activity\u003e \u003cdate\u003e \u003cduration\u003e \u003ctag\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":989,"author":{"gitId":"ChinYanXu"},"content":"                \"6. food \u003ctravel activity\u003e \u003cdate\u003e \u003cduration\u003e \u003ctag\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":990,"author":{"gitId":"ChinYanXu"},"content":"                \"7. landmark \u003ctravel activity\u003e \u003cdate\u003e \u003cduration\u003e \u003ctag\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":991,"author":{"gitId":"ChinYanXu"},"content":"                \"8. delete \u003cactivity number\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":992,"author":{"gitId":"ChinYanXu"},"content":"                \"9. find \u003ckeyword\u003e \u003cexclusion\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":993,"author":{"gitId":"ChinYanXu"},"content":"                \"10. check \u003cactivity number\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":994,"author":{"gitId":"ChinYanXu"},"content":"                \"11. uncheck \u003cactivity number\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":995,"author":{"gitId":"ChinYanXu"},"content":"                \"12. tag \u003cactivity number\u003e \u003ctag name\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":996,"author":{"gitId":"ChinYanXu"},"content":"                \"13. untag \u003cactivity number\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":997,"author":{"gitId":"ChinYanXu"},"content":"                \"14. update \u003cupdate\u003e \u003cdate\u003e \u003cduration\u003e \u003ctag\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":998,"author":{"gitId":"ChinYanXu"},"content":"                \"15. findtag \u003ctag name\u003e \u003cexclusion\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":999,"author":{"gitId":"ChinYanXu"},"content":"                \"16. findtype \u003ctype\u003e \u003cexclusion\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":1000,"author":{"gitId":"ChinYanXu"},"content":"                \"17. listtags \\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":1001,"author":{"gitId":"ChinYanXu"},"content":"                \"18. expense \u003cactivity number\u003e \u003cexpense amount\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":1002,"author":{"gitId":"ChinYanXu"},"content":"                \"19. removeexpense \u003cactivity number\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":1003,"author":{"gitId":"ChinYanXu"},"content":"                \"20. totalexpense \u003ctype\u003e\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":1004,"author":{"gitId":"ChinYanXu"},"content":"                \"21. change \u003camount\u003e /from \u003ccurrent currency\u003e /to \u003cchanged currency\u003e\\n\" + System.lineSeparator() +","lastModifiedDate":"2024-04-14"},{"lineNumber":1005,"author":{"gitId":"ChinYanXu"},"content":"                \"_______________________________________________________________________________\";","lastModifiedDate":"2024-04-15"},{"lineNumber":1006,"author":{"gitId":"ChinYanXu"},"content":"        Ui.helpCommand();","lastModifiedDate":"2024-04-14"},{"lineNumber":1007,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), result);","lastModifiedDate":"2024-04-14"},{"lineNumber":1008,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":1009,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":1010,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":1011,"author":{"gitId":"ChinYanXu"},"content":"    public void testPrintBye() {","lastModifiedDate":"2024-04-14"},{"lineNumber":1012,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"_______________________________________________________________________________\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":1013,"author":{"gitId":"ChinYanXu"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":1014,"author":{"gitId":"ChinYanXu"},"content":"                \"Thank you for using Omnitravel\" + System.lineSeparator() +","lastModifiedDate":"2024-04-14"},{"lineNumber":1015,"author":{"gitId":"ChinYanXu"},"content":"                \"We hope to see you again! Goodbye!\" + System.lineSeparator() +","lastModifiedDate":"2024-04-14"},{"lineNumber":1016,"author":{"gitId":"ChinYanXu"},"content":"                \"_______________________________________________________________________________\";","lastModifiedDate":"2024-04-15"},{"lineNumber":1017,"author":{"gitId":"ChinYanXu"},"content":"        Ui.printBye();","lastModifiedDate":"2024-04-14"},{"lineNumber":1018,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), result);","lastModifiedDate":"2024-04-14"},{"lineNumber":1019,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":1020,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":1021,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":1022,"author":{"gitId":"ChinYanXu"},"content":"    public void testPrintGreeting() {","lastModifiedDate":"2024-04-14"},{"lineNumber":1023,"author":{"gitId":"ChinYanXu"},"content":"        String result \u003d \"_______________________________________________________________________________\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":1024,"author":{"gitId":"ChinYanXu"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":1025,"author":{"gitId":"ChinYanXu"},"content":"                \" ____  _      _      _  _____  ____  ____  _     _____ _\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":1026,"author":{"gitId":"ChinYanXu"},"content":"                \"/  _ \\\\/ \\\\__/|/ \\\\  /|/ \\\\/__ __\\\\/  __\\\\/  _ \\\\/ \\\\ |\\\\/  __// \\\\\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":1027,"author":{"gitId":"ChinYanXu"},"content":"                \"| / \\\\|| |\\\\/||| |\\\\ ||| |  / \\\\  |  \\\\/|| / \\\\|| | //|  \\\\  | |\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":1028,"author":{"gitId":"ChinYanXu"},"content":"                \"| \\\\_/|| |  ||| | \\\\||| |  | |  |    /| |-||| \\\\// |  /_ | |_/\\\\\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":1029,"author":{"gitId":"ChinYanXu"},"content":"                \"\\\\____/\\\\_/  \\\\|\\\\_/  \\\\|\\\\_/  \\\\_/  \\\\_/\\\\_\\\\\\\\_/ \\\\|\\\\__/  \\\\____\\\\\\\\____/)\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":1030,"author":{"gitId":"ChinYanXu"},"content":"                System.lineSeparator() + \"Hello\" + System.lineSeparator() + \"How may I assist you?\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":1031,"author":{"gitId":"ChinYanXu"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-04-15"},{"lineNumber":1032,"author":{"gitId":"ChinYanXu"},"content":"                \"_______________________________________________________________________________\";","lastModifiedDate":"2024-04-15"},{"lineNumber":1033,"author":{"gitId":"ChinYanXu"},"content":"        Ui.printGreeting();","lastModifiedDate":"2024-04-14"},{"lineNumber":1034,"author":{"gitId":"ChinYanXu"},"content":"        assertEquals(capturedOutputStream.toString().trim(), result);","lastModifiedDate":"2024-04-14"},{"lineNumber":1035,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":1036,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":1037,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":1038,"author":{"gitId":"ChinYanXu"},"content":"    public void testUpdateException () {","lastModifiedDate":"2024-04-15"},{"lineNumber":1039,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.updateExceptions(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":1040,"author":{"gitId":"ChinYanXu"},"content":"            \"   \", \"2024-05-20\", \"2 days\", \"test\"}, \"update 1 /date 2024-05-20 /duration 2 days\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":1041,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.updateExceptions(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":1042,"author":{"gitId":"ChinYanXu"},"content":"            \"1\", \" \", \"2 days\", \"test\"}, \"update 1 /date 2024-05-20 /duration 2 days\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":1043,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.updateExceptions(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":1044,"author":{"gitId":"ChinYanXu"},"content":"            \"description\", \"2024-05-20\",\" \", \"test\"}, \"update 1 /date 2024-05-20 /duration 2 days\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":1045,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.updateExceptions(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":1046,"author":{"gitId":"ChinYanXu"},"content":"            \"description\", \"2024-05-20\", \"2 days\", \" \"}, \"update 1 /date 2024-05-20 /duration 2 days\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":1047,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.updateExceptions(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":1048,"author":{"gitId":"ChinYanXu"},"content":"            \"1\"}, \"update 1 /date 2024-05-20 /duration 2 days\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":1049,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":1050,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1051,"author":{"gitId":"ChinYanXu"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":1052,"author":{"gitId":"ChinYanXu"},"content":"    public void testListException () {","lastModifiedDate":"2024-04-15"},{"lineNumber":1053,"author":{"gitId":"ChinYanXu"},"content":"        assertThrows(OmniException.class, () -\u003e CheckParameters.listExceptions(new String[]{","lastModifiedDate":"2024-04-15"},{"lineNumber":1054,"author":{"gitId":"ChinYanXu"},"content":"            \"test\", \"/date\",}, new String[]{\"test\", \"2024-05-20\", \"2 days\", \"test\"},","lastModifiedDate":"2024-04-15"},{"lineNumber":1055,"author":{"gitId":"ChinYanXu"},"content":"                \"testing\"));","lastModifiedDate":"2024-04-15"},{"lineNumber":1056,"author":{"gitId":"ChinYanXu"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":1057,"author":{"gitId":"ChinYanXu"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ChinYanXu":651,"EugeneChanJiajun":163,"daryltay415":175,"ChenKangg":49,"annnniexu":13,"-":7}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# !/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"EugeneChanJiajun"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EugeneChanJiajun":1,"-":23}}]
