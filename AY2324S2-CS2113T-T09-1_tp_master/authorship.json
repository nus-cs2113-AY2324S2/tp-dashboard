[{"path":".github/pull_request_template.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# Checklist for feature implementation and modification","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"Closes #\u003cIssue_Number\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"- [ ] Added relevant milestone (under milestone tab on the right)","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"- Implementation","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Sources (if any) credited under both relevant section(s) and Developer Guide (Acknowledgement)","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] JUnit Test(s)","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"- Documentation","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] JavaDoc for classes and methods","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"  - Developer Guide","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Design (Can add as a todo statement for later on)","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Implementation (Can add as a todo statement for later on)","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Relevant User Story present","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Non-functional requirement(s) that the feature addresses (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Glossary of the (technical) term(s) used (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Specialised instructions for manual testing (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"  - User Guide","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Description and usage of feature (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"  - Contributions (under `/docs/team/*.md`)","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Code/Feature/Enhancement contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Developer Guide contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] User Guide contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Misc and team-based admin tasks (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"# Checklist for non-implementation related PR","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"Closes #\u003cIssue_Number\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"- [ ] Added relevant milestone (under milestone tab on the right)","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"- Documentation (Contributions)","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Developer Guide contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] User Guide contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Review contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Miscellaneous and team-based admin tasks (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"# Additional Information","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- Add any useful information related to the PR here --\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"Nil","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"annoy-o-mus":37}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# MediTracker ","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"This is a project based off of a template for a greenfield Java project. Given below are instructions on how to use it.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"annoy-o-mus":2,"-":62}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    //https://central.sonatype.com/artifact/org.json/json","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    implementation group: \u0027org.json\u0027, name: \u0027json\u0027, version: \u002720240303\u0027","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"    mainClass.set(\"meditracker.MediTracker\")","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"    archiveBaseName.set(\"meditracker\")","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"annoy-o-mus":4,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |    Name    | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"--------|:----------:|:--------------:|:---------:","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"![](https://avatars.githubusercontent.com/u/33289235) | Hoe Wen En | [Github](https://github.com/wenenhoe) | [Portfolio](team/wenenhoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"![](https://avatars.githubusercontent.com/u/48584322?v\u003d4) | Nick Chua  | [Github](https://github.com/nickczh) | [Portfolio](team/nickchua.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"![](https://avatars.githubusercontent.com/u/122875764) | Nyan Lin Htet | [Github](https://github.com/T0nyLin) | [Portfolio](team/linhtet.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"![](https://avatars.githubusercontent.com/u/156929749) | Eric Sim Chong Li | [Github](https://github.com/e0958902) | [Portfolio](team/ericsimchongli.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"![](avatars.githubusercontent.com/u/110549110) | Kaitlyn Chong | [Github](https://github.com/kyuichyi) | [Portfolio](team/kaitlynchong.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"![](https://avatars.githubusercontent.com/u/55198236) | Neo Song Xuan | [Github](https://github.com/annoy-o-mus) | [Portfolio](team/songxuan.md)","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"nickczh":2,"e0958902":1,"annoy-o-mus":1,"T0nyLin":1,"kyuichyi":1,"wenenhoe":1,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"Ideas and structure for the Developer Guide: https://se-education.org/addressbook-level3/DeveloperGuide.html","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"Ideas and structure for the User Guide: https://se-education.org/addressbook-level3/UserGuide.html","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"## Setting up and getting started","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Design and Implementation of the Logging Functionaity (SX)","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Design and Implementing of the Load and Save functionality (SX)","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"|v1.0|multipurpose user|Store data locally|Use the application and see the data even when offline between sessions|","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"- The user\u0027s program data should be persistent between program sessions.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"annoy-o-mus":9,"-":37}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# MediTracker ","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"A place to track all your medications!","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"annoy-o-mus":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- ","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"CREDIT: We try to follow the ideas and structure of the following sample user guide:","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"https://se-education.org/addressbook-level3/UserGuide.html","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"--\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{Give a product intro}","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* The `TODO_NAME` cannot contain punctuation.  ","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"annoy-o-mus":5,"-":42}},{"path":"docs/team/ericsimchongli.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"# Eric Sim Chong Li - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"e0958902":6}},{"path":"docs/team/kaitlynchong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"# Kaitlyn Chong - Project Portfolio Page","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"## Overview","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"kyuichyi":6}},{"path":"docs/team/linhtet.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"# Nyan Lin Htet - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"T0nyLin":6}},{"path":"docs/team/nickchua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"# Nick Chua - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"1. Refactor: \u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"Package names \u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"Gradle configuration files \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"2. Ui: \u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"Develop the user interface for the MediTracker. ","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"It includes getting the user input, printing the welcome, exit message and more. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"3. Command: \u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"Create command abstract class, AddCommand and ExitCommand. Add JUnit test for AddCommand. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"4. Medication: \u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"Create Medication class and MedicationList class \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":16}},{"path":"docs/team/songxuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# Song Xuan - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"## Summary of Contributions","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"### Code related Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #41: Create a common logging class for the whole program","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #25: Create and Open the JSON save file","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- To talk about Issue 25 --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"### PR Reviews","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"#2, #5, #40, #44","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"### Team-based tasks","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"- Added PR Template.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"- Set up the Github Team organisation and Repo","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"  - Restricted direct master branch merging","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"  - Disabled rebase and squash merging (thanks @wenenhoe)","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"- Brought in the JSON package (https://github.com/stleary/JSON-java)","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"annoy-o-mus":24}},{"path":"docs/team/wenenhoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"# Hoe Wen En - Project Portfolio Page","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"## Overview","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"wenenhoe":6}},{"path":"src/main/java/meditracker/DailyMedication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Stores name and the status of daily medication (taken or not)","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class DailyMedication {","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    private final String name;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    private boolean isTaken;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * Constructs DailyMedication with medication name and status of daily medication (taken or not)","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the medication to be taken","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    public DailyMedication(String name) {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"        this.isTaken \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    public String getName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"        return name;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    public boolean isTaken() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"        return isTaken;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    public void take() {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        isTaken \u003d true;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    public void untake() {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        isTaken \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        String takenIcon \u003d isTaken ? \"[X]\" : \"[ ]\"; // X identify medication as taken","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"        return String.format(\"%s %s\", takenIcon, name);","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"T0nyLin":6,"wenenhoe":35}},{"path":"src/main/java/meditracker/DailyMedicationManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":" * Manages a list of DailyMedication and CRUD-operations (Create, Read, Update, Delete)","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":" * @see DailyMedication","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"public class DailyMedicationManager {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    private final List\u003cDailyMedication\u003e dailyMedications;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    private Ui ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"     * Constructs DailyMedicationManager with a list of DailyMedication","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"     * @see DailyMedication","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    public DailyMedicationManager(MedicationManager medicationManager) {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"        assert medicationManager !\u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"        dailyMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        for (Medication medication : medicationManager.getMedications()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"            String medicationName \u003d medication.getName();","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"            DailyMedication dailyMedication \u003d new DailyMedication(medicationName);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        // TODO: Fetch today list from storage.","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        //       If does not exist or old list,","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"        //       populate from MedicationManager","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        // TODO: Add @see Storage when implemented","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"     * Constructs DailyMedicationManager with lines imported from the textfile","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"     * @param lines lines of String read from each row in the textfile","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"    public DailyMedicationManager(List\u003cString\u003e lines) {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"        dailyMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"        for(String line : lines) {","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"            DailyMedication dailyMedication \u003d parseImportedLine(line);","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication);","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     * Adds a DailyMedication to the list of DailyMedication","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"     * @param dailyMedication DailyMedication to be added to the list","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    public void addDailyMedication(DailyMedication dailyMedication) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        dailyMedications.add(dailyMedication);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"     * Gets the DailyMedication object from the dailyMedications list.","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"     * @return DailyMedication object at the corresponding index (0-based indexing)","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"    public DailyMedication getDailyMedication(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        return dailyMedications.get(listIndex);","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"     * Fetches the corresponding DailyMedication and set the medication to taken","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"     * @see DailyMedication#take()","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"    public void takeDailyMedication(int listIndex) {","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d getDailyMedication(listIndex);","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"        dailyMedication.take();","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"     * Fetches the corresponding DailyMedication and set the medication to not taken","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"     * @see DailyMedication#untake()","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"    public void untakeDailyMedication(int listIndex) {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d getDailyMedication(listIndex);","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"        dailyMedication.untake();","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"T0nyLin"},"content":"    public void printMedications() {","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"e0958902"},"content":"        System.out.println(\"Here are the Daily Medications you have to take today: \");","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"e0958902"},"content":"        ui.printMedsList(dailyMedications);","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"T0nyLin"},"content":"     * Separates each row by the separator and add into the DailyMedicationManager","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"T0nyLin"},"content":"     * ","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"T0nyLin"},"content":"     * @param line each line read from the textfile","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"T0nyLin"},"content":"     * @return dailyMedication object to add into the DailyMedicationManager","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"T0nyLin"},"content":"    private DailyMedication parseImportedLine(String line) {","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"T0nyLin"},"content":"        String[] fields \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"T0nyLin"},"content":"        boolean isTaken \u003d Boolean.parseBoolean(fields[0].trim());","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(fields[1].trim());","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"T0nyLin"},"content":"        if (isTaken) {","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"T0nyLin"},"content":"            dailyMedication.take();","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"T0nyLin"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"T0nyLin"},"content":"            dailyMedication.untake();","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"T0nyLin"},"content":"        return dailyMedication;","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"e0958902":2,"T0nyLin":48,"wenenhoe":68}},{"path":"src/main/java/meditracker/MediTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.command.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"import meditracker.parser.Parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":" * The main class for the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":" * It initializes the user interface and runs the application loop.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"public class MediTracker {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"    private Ui ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    private MedicationManager medicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"     * Constructs a new MediTracker object and initializes the user interface.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"    public MediTracker() {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"        medicationManager \u003d new MedicationManager();","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"     * Runs the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"     * This method displays a welcome message, reads user commands, and processes them until the user exits the","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"     * application.","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"     * @throws MediTrackerException If an error occurs during the execution of the application.","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument required not found","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"    public void run() throws MediTrackerException, ArgumentNotFoundException {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        //@@author nickczh-reused","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/nickczh/ip","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        //with minor modifications","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            ui.showLine();","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            command.execute(medicationManager, ui);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Starts the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * It creates a new MediTracker object and calls its run() method.","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws MediTrackerException If an error occurs during the execution of the application.","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws ArgumentNotFoundException Argument required not found","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static void main(String[] args) throws MediTrackerException, ArgumentNotFoundException {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        MediLogger.initialiseLogger();","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        new MediTracker().run();","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":26,"annoy-o-mus":3,"wenenhoe":6,"-":26}},{"path":"src/main/java/meditracker/argument/Argument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument class to store the name of the argument,","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" * corresponding flag for it, the prompt that will be used","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" * to guide the user to input that argument, help message","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":" * if user require additional context and whether the argument","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":" * is optional or not.","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"public class Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"    private final ArgumentName name;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    private final String flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    private final String prompt;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    private final String help;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    private final boolean isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"     * Constructs Argument object with the fields required to","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"     * handle this input type","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the argument","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     * @param flag Corresponding flag for the argument, takes the form of \"-*\"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     *             where \"*\" represents a single letter","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     * @param prompt Guided prompt message","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     * @param help Help message for additional context","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether this argument is optional or required","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    public Argument(ArgumentName name, String flag, String prompt, String help, boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        this.prompt \u003d prompt;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        this.help \u003d help;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        this.isOptional \u003d isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentName getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    public String getFlag() {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        return flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    public String getPrompt() {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        return prompt;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"    public String getHelp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        return help;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"    public boolean isOptional() {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        return isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":55}},{"path":"src/main/java/meditracker/argument/ArgumentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":" * ArgumentList class for managing a list of Argument","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":" * Calls on ArgumentParser when parse method is invoked","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":" * @see ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentList {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    private final List\u003cArgument\u003e arguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"     * Constructs ArgumentList to take in variable length of Argument","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"     * Assertion test is used to check no flag collision for the","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"     * arguments specified","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments Arguments to be included in the list","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentList(Argument... arguments) {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        this.arguments \u003d List.of(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"        // assertion test: check for flag collisions","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        Set\u003cString\u003e flags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument: arguments) {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"            String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            assert !flags.contains(flag);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            flags.add(flag);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     * Parses user raw input arguments into ArgumentName and","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     * corresponding argument value","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInput Raw input to be parsed","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     * @return A map of argument name as key and the corresponding value","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException When argument required not found","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     * @see ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    public Map\u003cArgumentName, String\u003e parse(String rawInput) throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        ArgumentParser argumentParser \u003d new ArgumentParser(this, rawInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"        return argumentParser.parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"    public List\u003cArgument\u003e getArguments() {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        return arguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":54}},{"path":"src/main/java/meditracker/argument/ArgumentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * ArgumentName enum to standardise the enum values for use","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" * by Command classes and ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"public enum ArgumentName {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    DOSAGE(\"dosage\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"    EXPIRATION_DATE(\"expirationDate\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"    INTAKE_FREQUENCY(\"intakeFrequency\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"    LIST_INDEX(\"listIndex\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    NAME(\"name\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    QUANTITY(\"quantity\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"    REMARKS(\"remarks\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"    LIST_TYPE(\"listType\");","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"    public final String value;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    ArgumentName(String value) {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"e0958902":2,"wenenhoe":20}},{"path":"src/main/java/meditracker/argument/ArgumentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.util.SortedMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":" * ArgumentParser class to handle parsing of user input","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":" * All arguments have to be specified with a flag.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"class ArgumentParser {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    protected final Map\u003cArgumentName, String\u003e parsedArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"     * Constructs ArgumentParser that parses raw input into corresponding key value pairs","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList List of argument","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInput Raw input to be parsed","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentParser(ArgumentList argumentList, String rawInput) throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        List\u003cString\u003e rawInputSplit \u003d List.of(rawInput.split(\" \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        SortedMap\u003cInteger, ArgumentName\u003e indexes \u003d getArgumentIndexes(argumentList, rawInputSplit);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"        getArgumentValues(indexes, rawInputSplit);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"     * Sorts a list of argument flags and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"     * @return A sorted map of arguments and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    //@@author wenenhoe-reused","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/wenenhoe/ip with minor modifications","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private SortedMap\u003cInteger, ArgumentName\u003e getArgumentIndexes(ArgumentList argumentList, List\u003cString\u003e rawInputSplit)","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        SortedMap\u003cInteger, ArgumentName\u003e indexes \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        for (Argument argument: argumentList.getArguments()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            ArgumentName argumentName \u003d argument.getName();","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            boolean isRequired \u003d !argument.isOptional();","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            int flagIndex \u003d rawInputSplit.indexOf(flag);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            boolean isNotFound \u003d flagIndex \u003d\u003d -1;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            if (!isNotFound) {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                indexes.put(flagIndex, argumentName);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            } else if (isRequired) {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                // arg keyword not found in additional input","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                String errorContext \u003d String.format(\"Missing \\\"%s\\\" argument\", flag);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                throw new ArgumentNotFoundException(errorContext);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return indexes;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Obtains a map of argument flags and their corresponding value, using a sorted ordering","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * of the argument flags.","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param indexes A sorted map of arguments and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    //@@author wenenhoe-reused","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/wenenhoe/ip with minor modifications","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private void getArgumentValues(SortedMap\u003cInteger, ArgumentName\u003e indexes, List\u003cString\u003e rawInputSplit) {","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ArgumentName argKey \u003d indexes.get(indexes.firstKey());","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        int startIndex \u003d indexes.firstKey() + 1; // position after keyword arg","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int endIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        boolean isSkipFirst \u003d false;","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cInteger, ArgumentName\u003e index: indexes.entrySet()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            if (!isSkipFirst) {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                isSkipFirst \u003d true; // Skips first map entry","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            endIndex \u003d index.getKey();","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            String argValue \u003d ArgumentParser.getArgumentValue(rawInputSplit, startIndex, endIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            parsedArguments.put(argKey, argValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            argKey \u003d index.getValue();","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            startIndex \u003d endIndex + 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        endIndex \u003d rawInputSplit.size();","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String argValue \u003d ArgumentParser.getArgumentValue(rawInputSplit, startIndex, endIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        parsedArguments.put(argKey, argValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Obtains argument value using start and end index of the raw input list","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param startIndex Start index in rawInputSplit of argument value","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param endIndex End index in rawInputSplit of argument value","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @return Corresponding argument value, joined with spaces","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private static String getArgumentValue(List\u003cString\u003e rawInputSplit, int startIndex, int endIndex) {","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argContentList \u003d rawInputSplit.subList(startIndex, endIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return String.join(\" \", argContentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":37,"-":70}},{"path":"src/main/java/meditracker/argument/DosageArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Dosage of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class DosageArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public DosageArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.DOSAGE,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-d\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"How much medication should you take?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Dosage of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/ExpirationDateArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Expiration date of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class ExpirationDateArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public ExpirationDateArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.EXPIRATION_DATE,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-e\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"When does the medication expire?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Expiration date of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/IntakeFrequencyArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Intake frequency of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class IntakeFrequencyArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public IntakeFrequencyArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.INTAKE_FREQUENCY,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-f\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"How often should this medication be taken?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Intake frequency of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/ListIndexArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * List index of Medication or DailyMedication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class ListIndexArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public ListIndexArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.LIST_INDEX,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-l\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"What is the index of item in list?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Index of item in list\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/ListTypeArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":" * Lists the summary of the medications in Medication","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"public class ListTypeArgument extends Argument {","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"    public ListTypeArgument(boolean isOptional) {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"        super(","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"                ArgumentName.LIST_TYPE,","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"                \"-t\",","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"                \"Show today/morning/afternoon/evening/all medications?\",","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"                \"Lists medications accordingly\",","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"                isOptional","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"        );","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"e0958902":16}},{"path":"src/main/java/meditracker/argument/NameArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Name of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class NameArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public NameArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.NAME,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-n\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"What is the name of the medication?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Name of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/QuantityArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Quantity of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class QuantityArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public QuantityArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.QUANTITY,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-q\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"How much of the medication do you have?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Quantity of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/RemarksArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Remarks for medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class RemarksArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public RemarksArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.REMARKS,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-r\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Any additional remarks?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Additional remarks on medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":" * The AddCommand class represents a command to add a new medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    private static final int MED_NAME \u003d 1;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    private static final int MED_QTY \u003d 3;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    private static final int MED_DOSAGE \u003d 5;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"    private static final int MED_EXP \u003d 7;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    private static final int MED_FREQ \u003d 9;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"    private static final int MED_RMK \u003d 11;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    private String medicationName;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    private String medicineQuantity;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"    private String medicineDosage;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"    private String expiryDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"    private String intakeFreq;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"    private String remarks;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"     * Constructs an AddCommand object with the specified arguments.","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"    public AddCommand(String arguments) throws MediTrackerException {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"        String[] medicineInformation \u003d arguments.split(\" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"            medicationName \u003d medicineInformation[MED_NAME];","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"            medicineQuantity \u003d medicineInformation[MED_QTY];","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"            medicineDosage \u003d medicineInformation[MED_DOSAGE];","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"            expiryDate \u003d medicineInformation[MED_EXP];","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"            intakeFreq \u003d medicineInformation[MED_FREQ];","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"            remarks \u003d medicineInformation[MED_RMK];","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"            throw new MediTrackerException();","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"     * Executes the add command.","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"     * This method creates a new Medication object using the provided information and adds it to the medication list.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"     * It also displays a message confirming the addition of the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     * @param medicationManager The MedicationList object representing the list of medications.","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"     * @param ui The Ui object used to interact with the user interface.","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    public void execute(MedicationManager medicationManager, Ui ui) {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"        Medication medication \u003d new Medication(medicationName, medicineQuantity, medicineDosage, expiryDate, intakeFreq,","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"                remarks);","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"        medicationManager.addMedication(medication);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"        ui.showAddCommandMessage();","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":56,"wenenhoe":4}},{"path":"src/main/java/meditracker/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    private MedicationManager medicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Executes the command.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     * @param medicationManager ArrayList of medicines.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"     * @param ui Ui object.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    public abstract void execute(MedicationManager medicationManager, Ui ui);","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"     * Returns the boolean to exit the program.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"     * @return False which continues program.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"        return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":21,"wenenhoe":4}},{"path":"src/main/java/meditracker/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":" * The DeleteCommand class represents a command to delete an existing medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"    public final ArgumentList argumentList \u003d new ArgumentList(","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false)","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a DeleteCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    public DeleteCommand(String arguments) throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d argumentList.parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    public void execute(MedicationManager medicationManager, Ui ui) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        medicationManager.removeMedication(listIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        ui.showDeleteCommandMessage();","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":38}},{"path":"src/main/java/meditracker/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":" * The ExitCommand class represents a command to exit the application.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"     * Executes the exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"     * This method displays the exit message using the provided user interface.","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"     * @param medicationManager The MedicationList object (not used in this command).","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"     * @param ui The Ui object used to interact with the user interface.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    public void execute(MedicationManager medicationManager, Ui ui) {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"        ui.showExitMessage();","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"     * @return true indicating that this is an exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"        return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":27,"wenenhoe":3}},{"path":"src/main/java/meditracker/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ListTypeArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"    public ArgumentList argumentList \u003d new ArgumentList(","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"            new ListTypeArgument(false));","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"    public ListCommand(String arguments) throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"        parsedArguments \u003d argumentList.parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"     * Executes the list command","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"     * @param medicationManager List of medicines.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"     * @param ui                Ui object.","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"    public void execute(MedicationManager medicationManager, Ui ui) {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"        String listTypeString \u003d parsedArguments.get(ArgumentName.LIST_TYPE);","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"        ","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"        switch (listTypeString) {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"        case \"all\":","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"            medicationManager.printAllMedications();","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"        default:","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"e0958902"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + listTypeString);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"e0958902":40}},{"path":"src/main/java/meditracker/command/ListTodayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"public class ListTodayCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    public void execute(MedicationManager medicationManager, Ui ui) {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"T0nyLin":8,"wenenhoe":2}},{"path":"src/main/java/meditracker/command/ModifyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.Argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.DosageArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ExpirationDateArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.IntakeFrequencyArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.NameArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.QuantityArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.RemarksArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":" * The ModifyCommand class represents a command to modify an existing medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"public class ModifyCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    public final ArgumentList argumentList \u003d new ArgumentList(","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false),","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"            new NameArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"            new QuantityArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"            new DosageArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"            new ExpirationDateArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"            new IntakeFrequencyArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            new RemarksArgument(true)","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a ModifyCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    public ModifyCommand(String arguments) throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d argumentList.parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     * Executes the modify command.","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     * This method modifies an existing Medication object using the provided information in the medication list.","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the modification of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"     * @param medicationManager The MedicationList object representing the list of medications.","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * @param ui The Ui object used to interact with the user interface.","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"    public void execute(MedicationManager medicationManager, Ui ui) {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d medicationManager.getMedication(listIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument: argumentList.getArguments()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"            ArgumentName argumentName \u003d argument.getName();","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"            String argumentValue \u003d parsedArguments.get(argumentName);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"            switch (argumentName) {","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"            case DOSAGE:","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"                medication.setDosage(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"            case EXPIRATION_DATE:","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"                medication.setExpiryDate(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"            case INTAKE_FREQUENCY:","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"                medication.setIntakeFreq(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"            case LIST_INDEX:","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"                continue;","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"            case NAME:","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"                medication.setName(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"            case QUANTITY:","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"                medication.setQuantity(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"            case REMARKS:","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"                medication.setRemarks(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"            default:","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + argumentName);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"        ui.showModifyCommandMessage();","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":89}},{"path":"src/main/java/meditracker/exception/ArgumentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentNotFoundException extends Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentNotFoundException(String errorContext) {","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"        super(errorContext);","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":7}},{"path":"src/main/java/meditracker/exception/FileReadWriteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":" * Exception related to the reading and writing to the file and directories.","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"public class FileReadWriteException extends Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"    public FileReadWriteException(String errorMessage) {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"        super(errorMessage);","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"annoy-o-mus":11}},{"path":"src/main/java/meditracker/exception/MediTrackerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * The MediTrackerException class represents an exception specific to the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * It extends the Exception class.","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class MediTrackerException extends Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"    public MediTrackerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":11}},{"path":"src/main/java/meditracker/logging/MediLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.logging;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":" * Main Logging class to get the logger for logging outputs to the console.","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"public class MediLogger {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"    private static final String MEDILOGGER_NAME \u003d \"MediLogger\";","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    private static Logger mediLogger  \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"     * Gets the default logger for the MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"     * If for some reason the default logger is not initialised when this function is called,","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"     * initialise the default logger and logs a warning.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The default logger for MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    public static Logger getMediLogger(){","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"        if (mediLogger \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"            initialiseLogger();","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"            mediLogger.warning(\"Logger initialised from unintended function\");","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"        assert mediLogger !\u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"        return mediLogger;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     * Initialises the default logger to be used for the MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * The logger will send all the logging messages to the console.","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     * Currently, no support to write to a dedicated log file.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"    public static void initialiseLogger() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"        if (mediLogger !\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"            mediLogger.warning(\"Logger \" + MEDILOGGER_NAME + \" has been initialised already\");","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        mediLogger \u003d Logger.getLogger(MEDILOGGER_NAME);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        mediLogger.info(\"Logger initialised\");","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"annoy-o-mus":42}},{"path":"src/main/java/meditracker/medication/Medication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * The Medication class represents a medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * It stores information about the medication such as name, quantity, dosage, expiry date, intake frequency, remarks,","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" * and whether it has been taken.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"public class Medication {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"    // Medication attributes are intentionally declared String. To be modified later.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"    private String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    private String quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    private String dosage;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    private String expiryDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    private String intakeFreq;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    private String remarks;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"     * Constructs a Medication object with the specified information.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"     * @param name The name of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"     * @param quantity The quantity of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     * @param dosage The dosage of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"     * @param expiryDate The expiry date of the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"     * @param intakeFreq The intake frequency of the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"     * @param remarks Any remarks or notes about the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    public Medication(String name, String quantity, String dosage, String expiryDate,","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"                      String intakeFreq, String remarks) {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"        this.intakeFreq \u003d intakeFreq;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    public String getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    public String getQuantity() {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        return quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    public void setQuantity(String quantity) {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    public String getDosage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        return dosage;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    public void setDosage(String dosage) {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"    public String getExpiryDate() {","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        return expiryDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"    public void setExpiryDate(String expiryDate) {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"    public String getIntakeFreq() {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"        return intakeFreq;","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"    public void setIntakeFreq(String intakeFreq) {","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"        this.intakeFreq \u003d intakeFreq;","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"    public String getRemarks() {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"        return remarks;","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"    public void setRemarks(String remarks) {","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"e0958902"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"e0958902"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"e0958902"},"content":"        return getName() + \" | \" + getQuantity() + \" | \" + getDosage();","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":27,"e0958902":5,"wenenhoe":57}},{"path":"src/main/java/meditracker/medication/MedicationManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":" * The MedicationManager class represents a list of medications.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":" * It contains an ArrayList of Medication objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"public class MedicationManager {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    /** The list of medications stored in an ArrayList. */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    private List\u003cMedication\u003e medications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"     * Constructs an empty MedicationList.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    public MedicationManager() {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a MedicationManager with the specified list of medications.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"     * @param medications The list of medications to be stored.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    public MedicationManager(List\u003cMedication\u003e medications) {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"        this.medications \u003d medications;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"     * Gets the size of list of medications","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"     * @return Total number of medications","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    public Integer getTotalMedications() {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"        return medications.size();","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     * Adds a Medication to the list of Medication","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication to be added to the list","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"    public void addMedication(Medication medication) {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"        medications.add(medication);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"     * Gets the Medication object from the medications list.","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * @param listIndex Index of the medications list to get (1-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     * @return Medication object at the corresponding index (0-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    public Medication getMedication(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"        return medications.get(listIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"    public List\u003cMedication\u003e getMedications() {","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"        return medications;","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"     * Deletes the Medication object from the medications list.","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"     * @param listIndex Index of the medications list to delete (1-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"    public void removeMedication(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        medications.remove(listIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"e0958902"},"content":"    public void printAllMedications() {","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"e0958902"},"content":"        System.out.println(\"You have \" + getTotalMedications() + \" medications listed below.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"e0958902"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"e0958902"},"content":"        ui.printMedsList(medications);","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":21,"e0958902":9,"T0nyLin":4,"wenenhoe":47}},{"path":"src/main/java/meditracker/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.command.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.DeleteCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import meditracker.command.ListCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.ModifyCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"import meditracker.command.AddCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"import meditracker.command.ExitCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":" * The Parser class parses user input commands into Command objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"public class Parser {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"     * Parses a full command string into a Command object.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"     * @param fullCommand The full command string entered by the user.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"     * @return A Command object corresponding to the parsed command.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"     * @throws MediTrackerException If an error occurs during parsing.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    public static Command parse(String fullCommand) throws MediTrackerException, ArgumentNotFoundException {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"        String[] commands \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"        String command \u003d commands[0];","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        String arguments \u003d (commands.length \u003d\u003d 2) ? commands[1] : \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"        switch (command) {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"        case \"exit\":","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"        case \"add\":","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"            return new AddCommand(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        case \"modify\":","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"            return new ModifyCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"        case \"list\":","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"            return new ListCommand(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        case \"delete\":","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"            return new DeleteCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"        default:","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"            throw new MediTrackerException();","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":31,"e0958902":3,"wenenhoe":9}},{"path":"src/main/java/meditracker/storage/FileReaderWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.File;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":" * A static class to handle the reading and writing to the filesystem.","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":" * Currently, only supports the default path and file.","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"public class FileReaderWriter {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"    private static String jsonDataFileName \u003d \"MediTrackerData.json\";","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    private static String jsonDataFolderName \u003d \"data\";","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    private static String getJsonDataFileName() {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"        return jsonDataFileName;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    private static String getJsonDataFolderName() {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"        return jsonDataFolderName;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"    private static String getFullJsonDataFilePath() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"        return jsonDataFolderName + \"/\" + jsonDataFileName;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"     * Creates new directories to allow for writing of MediTracker data to the save file.","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"     * Currently, only implements the default path and file.","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws FileReadWriteException When there is any issue creating the directories.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"    public static void initialiseDirectory() throws FileReadWriteException {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        File directory \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"            directory \u003d new File(getJsonDataFolderName());","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"Folder name to store the JSON file is null\");","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"Unable to create directories. Please make sure that the \"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"directory has the appropriate permissions for Meditracker to write to.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"     * Creates a JSON save file and writes.","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"     * Also attempts to reinitialise the directory in case of a first-time save.","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws FileReadWriteException If the file is unable to be created due to system issues.","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"    public static void createJsonSaveFile() throws FileReadWriteException {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"        String fullFilePath \u003d getFullJsonDataFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"        initialiseDirectory();","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"        File fileToWrite \u003d new File(fullFilePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"            fileToWrite.delete();","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"            fileToWrite.createNewFile();","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"IO Error: Unable to write to JSON File\");","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"Unable to create save JSON file. Please make sure that \"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"the file has the appropriate permissions for MediTracker to write to.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"        // To implement: Writing JSON data to the file.","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"     * Reads the JSON file to load and populate the MediTracker.","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"     * If the file is not found, a warning will be thrown to alert the user, and the program","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"     * will execute without the saved data (fresh state).","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"    public static void loadMediTrackerData() {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"        String fullFilePath \u003d getFullJsonDataFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"        File fileToRead \u003d new File(fullFilePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"            Scanner fileReaderScanner \u003d new Scanner(fileToRead);","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"            Logger logger \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Unable to find the file \" + fullFilePath + \" to read from. \"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"Program will run with no data loaded.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"        // To be implemented: Actual reading and loading of the JSON data","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"annoy-o-mus":96}},{"path":"src/main/java/meditracker/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":" * The Ui class handles user interface-related operations.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":" * It includes methods to display welcome messages, exit messages, and read user commands.","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"public class Ui {","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"    Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"     * Displays the welcome message and introduction name.","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"        printIntroName();","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"        showWelcome();","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"     * Prints the introduction name banner.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"    public void printIntroName() {","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"        // Solution below adapted by http://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dType%20Something%20","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"                    __      ______                      __                      \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"                \" /\u0027\\\\_/`\\\\           /\\\\ \\\\  __/\\\\__  _\\\\                    /\\\\ \\\\                     \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"                \"/\\\\      \\\\     __   \\\\_\\\\ \\\\/\\\\_\\\\/_/\\\\ \\\\/ _ __    __      ___\\\\ \\\\ \\\\/\u0027\\\\      __   _ __  \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"                \"\\\\ \\\\ \\\\__\\\\ \\\\  /\u0027__`\\\\ /\u0027_` \\\\/\\\\ \\\\ \\\\ \\\\ \\\\/\\\\`\u0027__\\\\/\u0027__`\\\\   /\u0027___\\\\ \\\\ , \u003c    /\u0027__`\\\\/\\\\`\u0027__\\\\\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"                +","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"                \" \\\\ \\\\ \\\\_/\\\\ \\\\/\\\\  __//\\\\ \\\\L\\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\//\\\\ \\\\L\\\\.\\\\_/\\\\ \\\\__/\\\\ \\\\ \\\\\\\\`\\\\ /\\\\\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"                \"  __/\\\\\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"                \" \\\\ \\\\/ \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"                \"  \\\\ \\\\_\\\\\\\\ \\\\_\\\\ \\\\____\\\\ \\\\___,_\\\\ \\\\_\\\\ \\\\ \\\\_\\\\ \\\\_\\\\\\\\ \\\\__/.\\\\_\\\\ \\\\____\\\\\\\\ \\\\_\\\\ \\\\_\\\\ \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"                \"\\\\____\\\\\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"                \"\\\\ \\\\_\\\\ \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"                \"   \\\\/_/ \\\\/_/\\\\/____/\\\\/__,_ /\\\\/_/  \\\\/_/\\\\/_/ \\\\/__/\\\\/_/\\\\/____/ \\\\/_/\\\\/_/\\\\/____/ \\\\/_/ \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"                \"                                                                                \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"                \"                                                                                \");","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"     * Displays a line divider.","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"    public void showLine() {","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"     * Displays the welcome message.","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Welcome to MediTracker, your best companion to track your medicine intake.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Let\u0027s begin tracking!\\n\");","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"     * Displays the exit message.","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"    public void showExitMessage() {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Thank you for using MediTracker. Hope to see you again!\");","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"    public void showAddCommandMessage() {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Medicine has been successfully added!\");","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"    public void showModifyCommandMessage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(\"Medicine has been successfully modified!\");","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"e0958902"},"content":"    public void showListCommandMessage() {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"e0958902"},"content":"        System.out.println(\"Your list of medications has been successfully shown!\");","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"    public void showDeleteCommandMessage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(\"Medicine has been successfully deleted\");","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"nickczh"},"content":"     * Reads user input command.","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"nickczh"},"content":"     * @return The user input command as a String.","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"nickczh"},"content":"    public String readCommand() {","lastModifiedDate":"2024-03-07"},{"lineNumber":86,"author":{"gitId":"nickczh"},"content":"        return input.nextLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":87,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"e0958902"},"content":"    public \u003cT\u003e void printMedsList(List\u003cT\u003e medications) {","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"T0nyLin"},"content":"        for (T medication : medications) {","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"T0nyLin"},"content":"            int numbering \u003d medications.indexOf(medication) + 1;","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"\\t\" + numbering + \". \" + medication);","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"nickczh":74,"e0958902":5,"annoy-o-mus":1,"T0nyLin":7,"wenenhoe":8}},{"path":"src/test/java/meditracker/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.command.AddCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"class AddCommandTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    // 3 part format","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    // methodBeingTested_conditionToTest_expectedOutcome","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    void execute_addCommand_expectOneMedication() throws MediTrackerException {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"        // setup lines","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"        String inputString \u003d \"add -n Medication_A -q 60_TAB -d 500mg -e 01/07/25 -f morning -r cause_dizziness\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager medicationManager \u003d new MedicationManager();","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"        AddCommand command \u003d new AddCommand(inputString);","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"        command.execute(medicationManager, ui);","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"        // actual test","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(1, medicationManager.getTotalMedications());","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":23,"wenenhoe":4}},{"path":"src/test/java/meditracker/DailyMedicationManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"public class DailyMedicationManagerTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public void addDailyMedication_genericDailyMedication_dailyMedicationAdded() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager dailyMedicationManager \u003d new DailyMedicationManager(new MedicationManager());","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(\"TestMedication\");","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"        dailyMedicationManager.addDailyMedication(dailyMedication);","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedicationTest \u003d dailyMedicationManager.getDailyMedication(actualIndex);","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(dailyMedication.toString(), dailyMedicationTest.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    public void takeDailyMedication_genericDailyMedication_dailyMedicationTaken() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager dailyMedicationManager \u003d new DailyMedicationManager(new MedicationManager());","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(\"TestMedication\");","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedication.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"        dailyMedicationManager.addDailyMedication(dailyMedication);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        dailyMedicationManager.takeDailyMedication(actualIndex);","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedicationTest \u003d dailyMedicationManager.getDailyMedication(actualIndex);","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(dailyMedicationTest.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    public void untakeDailyMedication_genericDailyMedication_dailyMedicationNotTaken() {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager dailyMedicationManager \u003d new DailyMedicationManager(new MedicationManager());","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(\"TestMedication\");","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        dailyMedication.take();","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(dailyMedication.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        dailyMedicationManager.addDailyMedication(dailyMedication);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        dailyMedicationManager.untakeDailyMedication(actualIndex);","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedicationTest \u003d dailyMedicationManager.getDailyMedication(actualIndex);","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedicationTest.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"T0nyLin":4,"wenenhoe":45}},{"path":"src/test/java/meditracker/DummyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"public class DummyTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"    public void testNothing_inputNothing_alwaysReturnTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"annoy-o-mus":12}},{"path":"src/test/java/meditracker/MediTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"class MediTrackerTest {","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"nickczh":1,"annoy-o-mus":1,"-":10}},{"path":"src/test/java/meditracker/QuerySpecificMedication.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"class QuerySpecificMedication {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"     * Queries the array list containing the medication data","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"    public void queryMedication_ifContains_expect() {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"        String inputString \u003d \"Omeprazole\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"        List\u003cString\u003e medications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"        String medOne \u003d \"Panadol\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"        String medTwo \u003d \"Omeprazole\";","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"        medications.add(medOne);","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"        medications.add(medTwo);","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"        for (String medicationName: medications) {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"            if (medicationName.equals(inputString)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"                assertTrue(true);","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"e0958902":29}},{"path":"src/test/java/meditracker/SearchMedicationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"class SearchMedicationTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"    public void sampleTest() {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"annoy-o-mus":1,"kyuichyi":11}},{"path":"src/test/java/meditracker/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectMedicationDeleted() throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager medicationManager \u003d new MedicationManager();","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"                \"60_TAB\",","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                \"500mg\",","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"                \"morning\",","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\");","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"        medicationManager.addMedication(medication);","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"delete -l 1\";","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"        DeleteCommand command \u003d new DeleteCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        command.execute(medicationManager, ui);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e medicationManager.getMedication(1));","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":31}},{"path":"src/test/java/meditracker/command/ModifyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"public class ModifyCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectMedicationModified() throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager medicationManager \u003d new MedicationManager();","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"                \"60_TAB\",","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                \"500mg\",","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"                \"morning\",","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\");","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"        medicationManager.addMedication(medication);","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"        String newName \u003d \"Medication_B\";","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"modify -l 1 -n \" + newName;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        ModifyCommand command \u003d new ModifyCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"        command.execute(medicationManager, ui);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        Medication updatedMedication \u003d medicationManager.getMedication(1);","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(updatedMedication.getName().equals(newName));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"    void execute_outOfOrderArgument_expectMedicationModified() throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager medicationManager \u003d new MedicationManager();","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"                \"60_TAB\",","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"                \"500mg\",","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"                \"morning\",","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\");","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"        medicationManager.addMedication(medication);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        String newName \u003d \"Medication_B\";","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d String.format(\"modify -n %s -l 1\", newName);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"        ModifyCommand command \u003d new ModifyCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"        command.execute(medicationManager, ui);","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        Medication updatedMedication \u003d medicationManager.getMedication(1);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(updatedMedication.getName().equals(newName));","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":55}},{"path":"src/test/java/meditracker/logging/MediLoggerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.logging;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"public class MediLoggerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    public void getMediLogger_noInput_loggerReturned() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"        Logger log \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"        assertNotNull(log);","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"annoy-o-mus":16}},{"path":"src/test/java/meditracker/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package meditracker.ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.DailyMedication;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"//Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"class UiTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    private static final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    private static final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"    @BeforeAll","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    public static void setUpStream() {","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    @AfterAll","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    public static void restoreStreams() {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"    void printMedsList_sizeOfMedicationList_expectPrintedList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"        List\u003cDailyMedication\u003e medications \u003d new ArrayList\u003c\u003e(1);","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"        ui.printMedsList(medications);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"        StringBuilder expectedOutput \u003d new StringBuilder();","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication dailyMedication : medications) {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"            int numbering \u003d medications.indexOf(dailyMedication) + 1;","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"            expectedOutput.append(\"\\t\").","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"                    append(numbering).append(\". \").append(dailyMedication)","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(expectedOutput.toString(), output.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"e0958902":2,"T0nyLin":44}}]
