[{"path":".github/pull_request_template.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# Checklist for feature implementation and modification","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"Closes #\u003cIssue_Number\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"- [ ] Added relevant milestone (under milestone tab on the right)","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"- Implementation","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Sources (if any) credited under both relevant section(s) and Developer Guide (Acknowledgement)","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] JUnit Test(s)","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"- Documentation","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] JavaDoc for classes and methods","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"  - Developer Guide","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Design (Can add as a todo statement for later on)","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Implementation (Can add as a todo statement for later on)","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Relevant User Story present","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Non-functional requirement(s) that the feature addresses (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Glossary of the (technical) term(s) used (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Specialised instructions for manual testing (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"  - User Guide","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Description and usage of feature (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"  - Contributions (under `/docs/team/*.md`)","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Code/Feature/Enhancement contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Developer Guide contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] User Guide contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Misc and team-based admin tasks (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"# Checklist for non-implementation related PR","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"Closes #\u003cIssue_Number\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"- [ ] Added relevant milestone (under milestone tab on the right)","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"- Documentation (Contributions)","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Developer Guide contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] User Guide contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Review contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Miscellaneous and team-based admin tasks (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"# Additional Information","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- Add any useful information related to the PR here --\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"Nil","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"annoy-o-mus":37}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# MediTracker ","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"This is a project based off of a template for a greenfield Java project. Given below are instructions on how to use it.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"annoy-o-mus":2,"-":62}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    //https://central.sonatype.com/artifact/org.json/json","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    implementation group: \u0027org.json\u0027, name: \u0027json\u0027, version: \u002720240303\u0027","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"    mainClass.set(\"meditracker.MediTracker\")","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"    archiveBaseName.set(\"meditracker\")","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"annoy-o-mus":4,"T0nyLin":1,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |    Name    | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"--------|:----------:|:--------------:|:---------:","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"![](https://avatars.githubusercontent.com/u/33289235) | Hoe Wen En | [Github](https://github.com/wenenhoe) | [Portfolio](team/wenenhoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"![](https://avatars.githubusercontent.com/u/48584322?v\u003d4) | Nick Chua  | [Github](https://github.com/nickczh) | [Portfolio](team/nickczh.md)","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"![](https://avatars.githubusercontent.com/u/122875764) | Nyan Lin Htet | [Github](https://github.com/T0nyLin) | [Portfolio](team/linhtet.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"![](https://avatars.githubusercontent.com/u/156929749) | Eric Sim Chong Li | [Github](https://github.com/e0958902) | [Portfolio](team/ericsimchongli.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"![](avatars.githubusercontent.com/u/110549110) | Kaitlyn Chong | [Github](https://github.com/kyuichyi) | [Portfolio](team/kaitlynchong.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"![](https://avatars.githubusercontent.com/u/55198236) | Neo Song Xuan | [Github](https://github.com/annoy-o-mus) | [Portfolio](team/songxuan.md)","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"nickczh":2,"e0958902":1,"annoy-o-mus":1,"T0nyLin":1,"kyuichyi":1,"wenenhoe":1,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"Ideas and structure for the Developer Guide: https://se-education.org/addressbook-level3/DeveloperGuide.html","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"Ideas and structure for the User Guide: https://se-education.org/addressbook-level3/UserGuide.html","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"Additional Packages used: JSON","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"## Setting up and getting started","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"### Add Medication Command","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"The add medication command extends from the Command parent class and implements the following operations:","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"- execute(MedicationManager, DailyMedicationManager, Ui) - Adds the medication object into the respective medication managers.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"- setMedicineAttributes() - Sets the medicine object\u0027s attributes to be added to the medicine managers. ","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"- assertionTest(MedicationManager, DailyMedicationManager) - Asserts that medicine has been added to both medication managers.","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"- parseStringToValues(Arguments) - Parses string input for medicine quantity and dosage into double type.","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"Given below is an example usage scenario, along with the sequence diagram and how the add command behaves at each step:","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"![AddCommand.png](images/AddCommand.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"- Step 1. User initiates the process.","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"- Step 2. `AddCommand` constructs an instance using the constructor `AddCommand(String arguments)` which includes ","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"parsing the arguments.","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"- Step 3. `ArgumentList` parses the provided arguments.","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"- Step 4. `AddCommand` calls `execute()` to add the medication.","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"- Step 5. Inside `execute()`, AddCommand calls `createMedication()` to construct a `Medication` object.","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"- Step 6. Adds the newly created `Medication` object to `MedicationManager`.","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"- Step 7. Checks and updates daily medication records in `DailyMedicationManager`.","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"- Step 8. `Ui` displays success or error messages to the user.","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"---","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"e0958902"},"content":"### List Medication Command","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"e0958902"},"content":"The list medication command extends from Command parent class and contains the following methods:","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"- execute(MedicationManager medicationManager) - Executes the list command and performs its specific task, -t.","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"```Where the task can be either \u0027list -t all\u0027 to list all medications or \u0027list -t today\u0027 to list medications for the day, which is divided into three categories -\u003e Morning, Afternoon and Evening. ```","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"e0958902"},"content":"The \u0027list -t\u0027 command requires the following:","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"e0958902"},"content":"1. \u0027all\u0027 - to run printAllMedications() from the MedicationManager.","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"e0958902"},"content":"2. \u0027today\u0027 - to run printMedications() from the DailyMedicationManager.","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"3. \u0027today -m\u0027 to run printTodayMedications(List\u003cMedication\u003e medications, List\u003cDailyMedication\u003e subList, String period)","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"   from the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"4. \u0027today -a\u0027 to run printTodayMedications(List\u003cMedication\u003e medications, List\u003cDailyMedication\u003e subList, String period)","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"   from the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"5. \u0027today -e\u0027 to run printTodayMedications(List\u003cMedication\u003e medications, List\u003cDailyMedication\u003e subList, String period)","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"   from the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"kyuichyi"},"content":"### Search Medication Command","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"kyuichyi"},"content":"The search medication command extends from Command parent class and contains the following methods:","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"kyuichyi"},"content":"- execute(MedicationManager, DailyMedicationManager, Ui) - Searches the local medication library for medication names,","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"kyuichyi"},"content":"what illnesses they treat and their side effects, and prints the results to the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"kyuichyi"},"content":"The \u0027search\u0027 command requires the following:","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"kyuichyi"},"content":"1. To be added.","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"### Utilising the argument parser","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"The `ArgumentParser` requires the following to work:","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"1. `ArgumentList` object","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"2. Raw user input in `String`","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"The `ArgumentList` object constitutes a combination of `Argument` objects. The constructor for ","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"the `ArgumentList` takes in a variable amount of `Argument`-extended classes. Additional assertion","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"tests have been added to ensure that certain attributes of the `Argument` classes do not clash with","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"one another. `HelpArgument` is automatically added when an `ArgumentList` object is instantiated.","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"Calling `ArgumentList.parse` with empty `String` or invoking with the argument `-h` will trigger the","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"help message to be printed on the console.","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"An `Argument` object consists of the following:","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"1. `name`: Name of the argument, uses enum type `ArgumentName` as this value is used by `ArgumentParser` as well","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"2. `flag`: Takes the form of `-*` where `*` represents any number of alphabetic characters","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"3. `prompt`: Used within the guided prompt system","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"4. `help`: Used in printing help message to provide user with the usage for the argument","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"5. `isOptional`: A `boolean` value to specify whether this argument is optional or not. This value is utilised","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"by the `ArgumentParser` to determine whether the argument is required, and will throw a `ArgumentNotFound` ","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"exception if this argument is required but not found in user specified argument string.","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"6. `hasValue`: A `boolean` value to specify whether this argument has a corresponding value tied to it. ","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"`ArgumentParser` requires this to know whether to take the value specified by the user.","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"Additional information regarding the `ArgumentName` enum:","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"- To create a new enum, follow the following convention: `ALL_CAPS_NAME(“justFollowAttributeNamingConvention”)`","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"- This enum is used in `ArgumentParser` when it returns a `Map\u003cArgumentName, String\u003e`, where the enum is used as","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"the key. In order to query the returned data structure, you can utilise the same enum.","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"In order to utilise the argument parser,","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"1. Determine if the `Argument` variant already exist. If not, create a new class and extend the `Argument` class.","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"2. Prior to completing the creation of your new class, create a new enum in `ArgumentName`.","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"3. In the class/method that you intend to use the `ArgumentParser`, create a `ArgumentList` and specify the required","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"`Argument` objects.","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"4. Finally, invoking `ArgumentList.parse` with the `String` object to obtain the parsed argument values.","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"Overview of the `meditracker.argument` core classes:","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"- TODO: Add class diagrams and/or object diagrams required to illustrate the above information","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"---","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"### Export to JSON File","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"![img.png](images/JsonFileExport.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!--","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Design and Implementation of the Logging Functionaity (SX) (Issue #41)","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Design and Implementing of the Load and Save functionality (SX) (Issue #25)","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Design and Implementing of the Reading and Writing of JSON file (SX) (Issue #27)","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Consider the design and impl. of #48","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"--\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"### Simulated Time","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"annoy-o-mus"},"content":"Talk about the advaned feature. Offset based on the system time so that the user or developer does not have to worry about calculating the time and can just type in the time.","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"e0958902"},"content":"People who are taking medications on a daily basis.","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"e0958902"},"content":"MediTracker ensures that you would now forget your overall schedule on what time and day to take your medication.","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"e0958902"},"content":"Ensuring that you would not forget your next dose of medication.","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"|Version| As a ...          | I want to ...                                                | So that I can ...                                                                                                                                      |","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"e0958902"},"content":"|--------|-------------------|--------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"e0958902"},"content":"|v1.0| user              | enter my medications with its relevant information in one go | add my medication entry efficiently and refer to them when I forget my medication information                                                          |","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"e0958902"},"content":"|v1.0| user              | indicate the medications that I have taken                   | know when is my next dose and how well I am following doctors orders, and show how well I am taking my medications at the appropriate times of the day |","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"e0958902"},"content":"|v1.0| user              | know what medications i have to take throughout the day      | mark them as takenor not, thus not miss or forget to take what I have to take for the day                                                              |","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"e0958902"},"content":"|v1.0| user              | edit the details in my medication list                       | ensure that its medication information is up-to-date with my medifications                                                                             |","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"T0nyLin"},"content":"|v1.0| user              | delete medications medication list                           | remove medications that I do not need will not be there anymore                                                                                        |","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"kyuichyi"},"content":"|v1.0| user              | search medications from existing medicine library            | search medications locally to have a quick preview of them and their purpose without the web                                                           |","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"annoy-o-mus"},"content":"|v1.0| multipurpose user | Store data locally                                           | Use the application and see the data even when offline between sessions                                                                                |","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"kyuichyi"},"content":"|v1.0| user              | know the list of medications I have added                    | have a quick overview of the medication list and check the quantity and expiry date of each medication                                                 |","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"e0958902"},"content":"|v2.0| user              | find a to-do item by name                                    | locate a to-do without having to go through the entire list                                                                                            |","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"annoy-o-mus"},"content":"- The user\u0027s program data should be persistent between program sessions.","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"},{"lineNumber":154,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Talk about how to test with different kinds of JSON file, and provide a sample JSON file with instructions on how to use it. (SX)","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"e0958902":19,"nickczh":21,"annoy-o-mus":23,"T0nyLin":7,"kyuichyi":10,"wenenhoe":41,"-":33}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# MediTracker ","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"A place to track all your medications!","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"annoy-o-mus":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- ","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"CREDIT: We try to follow the ideas and structure of the following sample user guide:","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"https://se-education.org/addressbook-level3/UserGuide.html","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"--\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"MediTracker is a desktop app for users who want to track their medication intake on a daily basis. It offers intuitive","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"features that works seamlessly right from the very beginning. With MediTracker, you do not have to worry about missing","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"your daily medication dose. It tracks your daily intake and reminds you when your remaining amount is low, and enables","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"data storage so that you can review your past medication intake.","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"* [How to use the User Guide](#how-to-use-the-user-guide)","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"* [Features](#features)","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"  - [Add Medication](#adding-a-medication-add)`add`","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"  - [List Medication](#list-medication)","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    - [Summary of all medications:](#all-medications)`list -t all`","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    - [Summary of medications for the day](#daily-medications)`list -t today`","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"    - [Get information of specific medication](#Get-information-of-specific-medication)`view -l`","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"  - [Update medication information](#update)","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    - [Record taking of medication](#record-taking-of-medication)`take/untake -l`","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    - [Modify medication information](#modify-medication-information)`modify -l`","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"  - [Delete medication information](#delete-a-medication)`delete -l`","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"  - [Search](#search)","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"      - [Access Medicine Database](#access-database)`search`","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"  - [Help](#help)","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"  - [General data management](#general-data-management)","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"    - [Saving to a file:](#saving-to-a-file-save)`save`","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"    - [Reading from a file:](#reading-from-a-file-load)`load`","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"    - [Editing the file](#editing-the-file)","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"    - [Advanced feature: Setting an arbitrary time](#advanced-feature-setting-an-arbitrary-time)","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"- [FAQ](#faq)","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"## How to Use the User Guide","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed. ","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"   - If you using Windows:","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"     - Press the `Windows Key` on your keyboard and enter `Command Prompt` or `cmd` and press enter.","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"     - When the application opens, enter `java -version`.","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"   - If you are using MacOS/Linux:","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"     - Open the `Terminal`, then enter `java -version`.","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"   - If Java 11 is installed, you should get an output similar to below:","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"      - {SS}.","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"   - If you see otherwise, please follow the instructions from [here](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html#GUID-8677A77F-231A-40F7-98B9-1FD0B48C346A).","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"3. Once that is settled, head over to the [link](https://github.com/AY2324S2-CS2113T-T09-1/tp/releases/latest) to obtain the latest version of `MediTracker`.","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"4. Save the file in an empty folder in `Desktop`, then this will be your home folder for `MediTracker`.","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"5. Double-click on meditracker.jar to start the app.","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"   - Alternatively, you may also use the Command Prompt/Terminal. ","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"   - Navigate to the home folder where you have saved the application in, and enter `java -jar meditracker.jar` to ","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"   start the app.","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"#### NOTES about the command format:","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"- Each command starts with a command keyword","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"- Following which, you may specify additional options","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"- These options can be in round brackets `()` (which are mandatory arguments) and in square brackets `[]` (which are","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"optional arguments)","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"- Each option are specified with either just its flag (which is of the form `-*` where `*` signifies some alphabetic ","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"characters), or the flag coupled with a value","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"## Adding a medication: `add`","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"Adds a medication to the medication manager.","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"nickczh"},"content":"Format: `add -n MEDICATION_NAME -q QUANTITY -e EXPIRATION_DATE -dM DOSAGE_MORNING -dA DOSAGE_AFTERNOON ","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"-dE DOSAGE_EVENING -r REMARKS -rep REPEAT`","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"nickczh"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"nickczh"},"content":"Options:","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"nickczh"},"content":"-n name                 Name of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"nickczh"},"content":"-q quantity             Quantity of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"nickczh"},"content":"-e expirationDate       Expiration date of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"nickczh"},"content":"-dM dosageMorning       Morning dosage of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"-dA dosageAfternoon     Afternoon dosage of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"nickczh"},"content":"-dE dosageEvening       Evening dosage of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"nickczh"},"content":"-r remarks              Additional remarks on medication","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"nickczh"},"content":"-rep                    How often to take medication (eg: Supply a number from 1 to 7)","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"nickczh"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"nickczh"},"content":"\u003e Tip: The dosage and remarks tags are optional.","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"nickczh"},"content":"Examples:","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"nickczh"},"content":"* `add -n Medication_A -q 5000 -e 01/07/25 -dM 500 -dA 250 -r cause_dizziness -rep 1`","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"nickczh"},"content":"* `add -n Medication_B -q 1000 -e 30/09/24 -dM 500 -dA 250 -dE 50 -rep 6`","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"nickczh"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"nickczh"},"content":"SUCCESS: Medicine has been added","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"nickczh"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"e0958902"},"content":"## List Medication: `list`","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"T0nyLin"},"content":"You can list down the medications that you have added, or even print out a list of medications that you will be taking ","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"T0nyLin"},"content":"for the day.","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"T0nyLin"},"content":"### All medications:","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"T0nyLin"},"content":"Displays the whole lists of medications that you have added.","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"T0nyLin"},"content":"Format: `list -t all`","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"e0958902"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"e0958902"},"content":"You have 2 medications listed below.","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"e0958902"},"content":"Format: Name | Quantity | Expiry Date | Remarks","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"e0958902"},"content":"\t1. Medication_A | 60.0 | 01/07/25 | cause_dizziness","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"e0958902"},"content":"\t2. Medication_B | 1000.0 | 01/09/25 | cause_headache","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"e0958902"},"content":"Your list of medications has been successfully shown!","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"e0958902"},"content":"### Get information of specific medication:","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"e0958902"},"content":"Format: `view -l 1`\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"e0958902"},"content":"  This lists all relevant information regarding the specified medication.","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"e0958902"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"e0958902"},"content":"Name: Medication_A","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"e0958902"},"content":"Quantity: 60.0","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"e0958902"},"content":"Expiry Date: 01/07/25","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"e0958902"},"content":"Remarks: cause_dizziness","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"e0958902"},"content":"Morning Dosage: 500.0","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"e0958902"},"content":"Afternoon Dosage: 250.0","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"e0958902"},"content":"Evening Dosage: 0.0","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"e0958902"},"content":"Repeat: 1","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"T0nyLin"},"content":"### Daily medications:","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"T0nyLin"},"content":"Displays an overview of the list of medications that you will be taking for the day.","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"T0nyLin"},"content":"Format: `list -t today`","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"T0nyLin"},"content":"* If you want to see for only a particular period of the day, simply enter `list -t today` followed by:","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"T0nyLin"},"content":"  * `-m`: Morning (Midnight to 12 Noon)","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"T0nyLin"},"content":"  * `-a`: Afternoon (12pm to 6pm)","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"T0nyLin"},"content":"  * `-e`: Evening (6pm to Midnight)","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"T0nyLin"},"content":"  * Eg: `list -t today -m` - will display the list of medications to be taken in the morning only","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"T0nyLin"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"T0nyLin"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"T0nyLin"},"content":"meditracker\u003e list -t today","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"T0nyLin"},"content":"Here are the Daily Medications you have to take today: ","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"T0nyLin"},"content":"Morning:","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"T0nyLin"},"content":"\t1. [ ] Medication_A | 2.0","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"T0nyLin"},"content":"Afternoon:","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"T0nyLin"},"content":"\t1. [ ] Medication_A | 1.0","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"T0nyLin"},"content":"____________________________________________________________","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"T0nyLin"},"content":"## Update","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"wenenhoe"},"content":"### Modify Medication Information","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"wenenhoe"},"content":"If you require modification to the medication information, you can type `modify`, followed by the list index ","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"wenenhoe"},"content":"`-l listIndex` printed in the summary list of medications to modify it. For each of the fields that you would","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"wenenhoe"},"content":"like to modify, you can specify the corresponding flag and the new value to make changes.","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"wenenhoe"},"content":"Usage: ","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"wenenhoe"},"content":"    modify (-l listIndex) [-n name] [-q quantity] [-dM dosageMorning] [-dA dosageAfternoon] [-dE dosageEvening] ","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"wenenhoe"},"content":"[-e expirationDate] [-r remarks] [-rep] [-h]","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"wenenhoe"},"content":"Options:","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"wenenhoe"},"content":"\t-l listIndex            Index of item in list","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"wenenhoe"},"content":"\t-n name                 Name of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"wenenhoe"},"content":"\t-q quantity             Quantity of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"wenenhoe"},"content":"\t-dM dosageMorning       Morning dosage of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"wenenhoe"},"content":"\t-dA dosageAfternoon     Afternoon dosage of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"wenenhoe"},"content":"\t-dE dosageEvening       Evening dosage of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"wenenhoe"},"content":"\t-e expirationDate       Expiration date of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"wenenhoe"},"content":"\t-r remarks              Additional remarks on medication","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"wenenhoe"},"content":"\t-rep                    How often to take medication (eg: Supply a number from 1 to 7)","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"wenenhoe"},"content":"\t-h                      Prints this help message","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"wenenhoe"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"wenenhoe"},"content":"SUCCESS: Medicine has been modified","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"wenenhoe"},"content":"### Record taking of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"wenenhoe"},"content":"#### Take a medication","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"wenenhoe"},"content":"When you have taken your medication, you can type `take`, followed by the list index `-l listIndex` ","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"wenenhoe"},"content":"printed in the summary list of daily medications to mark it as taken. This command is time aware and ","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"wenenhoe"},"content":"will mark the index of the medication based on what time of day it is. Optionally, you can specify ","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"wenenhoe"},"content":"`-m`, `-a`, `-e` to override the time aware feature.","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"wenenhoe"},"content":"Usage:","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"wenenhoe"},"content":"\ttake (-l listIndex) [-m] [-a] [-e] [-h]","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"wenenhoe"},"content":"Options:","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"wenenhoe"},"content":"\t-l listIndex     Index of item in list","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"wenenhoe"},"content":"\t-m               Time of day: Morning","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"wenenhoe"},"content":"\t-a               Time of day: Afternoon","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"wenenhoe"},"content":"\t-e               Time of day: Evening","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"wenenhoe"},"content":"\t-h               Prints this help message","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"wenenhoe"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"wenenhoe"},"content":"SUCCESS: Medicine has been taken","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"wenenhoe"},"content":"#### Untake a medication","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"wenenhoe"},"content":"If you have accidentally entered the wrong command and wish to untake the medication, you can type `untake`, ","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"wenenhoe"},"content":"followed by the list index `-l listIndex` printed in the summary list of daily medications. This command is ","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"wenenhoe"},"content":"time aware and will mark the index of the medication based on what time of day it is. Optionally, you can ","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"wenenhoe"},"content":"specify `-m`, `-a`, `-e` to override the time aware feature.","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"wenenhoe"},"content":"Usage:","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"wenenhoe"},"content":"\tuntake (-l listIndex) [-m] [-a] [-e] [-h]","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"wenenhoe"},"content":"Options:","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"wenenhoe"},"content":"\t-l listIndex     Index of item in list","lastModifiedDate":"2024-04-03"},{"lineNumber":222,"author":{"gitId":"wenenhoe"},"content":"\t-m               Time of day: Morning","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"wenenhoe"},"content":"\t-a               Time of day: Afternoon","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"wenenhoe"},"content":"\t-e               Time of day: Evening","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"wenenhoe"},"content":"\t-h               Prints this help message","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":227,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"wenenhoe"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"wenenhoe"},"content":"SUCCESS: Medicine has been untaken","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":232,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"wenenhoe"},"content":"## Delete a medication","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"wenenhoe"},"content":"To delete a provided medication, you can type `delete`, followed by the list index `-l listIndex`","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"wenenhoe"},"content":"printed in the summary list of medications to remove it.","lastModifiedDate":"2024-04-03"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"wenenhoe"},"content":"Usage:","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"wenenhoe"},"content":"\tdelete (-l listIndex) [-h]","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"wenenhoe"},"content":"Options:","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"wenenhoe"},"content":"\t-l listIndex     Index of item in list","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"wenenhoe"},"content":"\t-h               Prints this help message","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":246,"author":{"gitId":"wenenhoe"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":247,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":248,"author":{"gitId":"wenenhoe"},"content":"SUCCESS: Medicine has been deleted","lastModifiedDate":"2024-04-03"},{"lineNumber":249,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":250,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"T0nyLin"},"content":"## Search","lastModifiedDate":"2024-04-03"},{"lineNumber":252,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":253,"author":{"gitId":"kyuichyi"},"content":"To search for a medication in the library, you can type \u0027search\u0027, followed by the field you want to search for and the keyword ","lastModifiedDate":"2024-04-05"},{"lineNumber":254,"author":{"gitId":"kyuichyi"},"content":"`keyword`.","lastModifiedDate":"2024-04-05"},{"lineNumber":255,"author":{"gitId":"kyuichyi"},"content":"You have to include at least one of the following flags: `-n`, `-i`, `-s`, `-a` to specify the field you want to ","lastModifiedDate":"2024-04-05"},{"lineNumber":256,"author":{"gitId":"kyuichyi"},"content":"search for.","lastModifiedDate":"2024-04-05"},{"lineNumber":257,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":258,"author":{"gitId":"kyuichyi"},"content":"Usage:","lastModifiedDate":"2024-04-05"},{"lineNumber":259,"author":{"gitId":"kyuichyi"},"content":"```","lastModifiedDate":"2024-04-05"},{"lineNumber":260,"author":{"gitId":"kyuichyi"},"content":"    search ([-n name] [-i illness] [-s sideEffects] [-a allFields] keyword) [-h]","lastModifiedDate":"2024-04-05"},{"lineNumber":261,"author":{"gitId":"kyuichyi"},"content":"```","lastModifiedDate":"2024-04-05"},{"lineNumber":262,"author":{"gitId":"kyuichyi"},"content":"Options:","lastModifiedDate":"2024-04-05"},{"lineNumber":263,"author":{"gitId":"kyuichyi"},"content":"```","lastModifiedDate":"2024-04-05"},{"lineNumber":264,"author":{"gitId":"kyuichyi"},"content":"    -n name                 Name of medication","lastModifiedDate":"2024-04-05"},{"lineNumber":265,"author":{"gitId":"kyuichyi"},"content":"    -i illness              Illness that the medication is used for","lastModifiedDate":"2024-04-05"},{"lineNumber":266,"author":{"gitId":"kyuichyi"},"content":"    -s sideEffects          Side effects of the medication","lastModifiedDate":"2024-04-05"},{"lineNumber":267,"author":{"gitId":"kyuichyi"},"content":"    -a allFields            Search all fields","lastModifiedDate":"2024-04-05"},{"lineNumber":268,"author":{"gitId":"kyuichyi"},"content":"    -h                      Prints this help message","lastModifiedDate":"2024-04-05"},{"lineNumber":269,"author":{"gitId":"kyuichyi"},"content":"```","lastModifiedDate":"2024-04-05"},{"lineNumber":270,"author":{"gitId":"kyuichyi"},"content":"Examples:","lastModifiedDate":"2024-04-05"},{"lineNumber":271,"author":{"gitId":"kyuichyi"},"content":"- `search -n Medication_A`: Search for medication with the name `Medication_A`","lastModifiedDate":"2024-04-05"},{"lineNumber":272,"author":{"gitId":"kyuichyi"},"content":"- `search -i Headache`: Search for medication that treats `Headache`","lastModifiedDate":"2024-04-05"},{"lineNumber":273,"author":{"gitId":"kyuichyi"},"content":"- `search -s Dizziness`: Search for medication with side effect `Dizziness`","lastModifiedDate":"2024-04-05"},{"lineNumber":274,"author":{"gitId":"kyuichyi"},"content":"- `search -a keyword`: Search for `keyword` in all fields in the library (name, illness, side effect)","lastModifiedDate":"2024-04-05"},{"lineNumber":275,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":276,"author":{"gitId":"kyuichyi"},"content":"Output:","lastModifiedDate":"2024-04-05"},{"lineNumber":277,"author":{"gitId":"kyuichyi"},"content":"```","lastModifiedDate":"2024-04-05"},{"lineNumber":278,"author":{"gitId":"kyuichyi"},"content":"Here are the search results:","lastModifiedDate":"2024-04-05"},{"lineNumber":279,"author":{"gitId":"kyuichyi"},"content":"1. Medication_A; Treats: Headache; May cause: Dizziness","lastModifiedDate":"2024-04-05"},{"lineNumber":280,"author":{"gitId":"kyuichyi"},"content":"2. Medication_B; Treats: Fever; Side Effects: Dizziness","lastModifiedDate":"2024-04-05"},{"lineNumber":281,"author":{"gitId":"kyuichyi"},"content":"```","lastModifiedDate":"2024-04-05"},{"lineNumber":282,"author":{"gitId":"T0nyLin"},"content":"## Help","lastModifiedDate":"2024-04-03"},{"lineNumber":283,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":284,"author":{"gitId":"T0nyLin"},"content":"## General Data Management","lastModifiedDate":"2024-04-03"},{"lineNumber":285,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":286,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":288,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":289,"author":{"gitId":"annoy-o-mus"},"content":"### Saving to a file: `save`","lastModifiedDate":"2024-04-03"},{"lineNumber":290,"author":{"gitId":"annoy-o-mus"},"content":"Saves the JSON file to the specified path.","lastModifiedDate":"2024-04-03"},{"lineNumber":291,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":292,"author":{"gitId":"annoy-o-mus"},"content":"Format: `save [-o saveFile]`","lastModifiedDate":"2024-04-03"},{"lineNumber":293,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":294,"author":{"gitId":"annoy-o-mus"},"content":"Examples:","lastModifiedDate":"2024-04-03"},{"lineNumber":295,"author":{"gitId":"annoy-o-mus"},"content":"- `save`: Save the file to the default location.","lastModifiedDate":"2024-04-03"},{"lineNumber":296,"author":{"gitId":"annoy-o-mus"},"content":"- `save -o data/testfolder/output.json`: Saves the file","lastModifiedDate":"2024-04-03"},{"lineNumber":297,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"annoy-o-mus"},"content":"The default save location is `data/MediTrackerData.json`.","lastModifiedDate":"2024-04-03"},{"lineNumber":299,"author":{"gitId":"annoy-o-mus"},"content":"As far as possible, refrain from using spaces in the file path, especially with `-h` i.e. `path/to -h/`. ","lastModifiedDate":"2024-04-03"},{"lineNumber":300,"author":{"gitId":"annoy-o-mus"},"content":"This will trigger the help message to be displayed rather than processing the saving.","lastModifiedDate":"2024-04-03"},{"lineNumber":301,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":302,"author":{"gitId":"annoy-o-mus"},"content":"Also, ensure that the file does not end with a space or a dot (.); the file must end with `.json`.","lastModifiedDate":"2024-04-03"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":304,"author":{"gitId":"annoy-o-mus"},"content":"Ensure that the folder you are going to write to has the proper access rights. Don\u0027t write to system folders; it will likely fail.","lastModifiedDate":"2024-04-03"},{"lineNumber":305,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":306,"author":{"gitId":"annoy-o-mus"},"content":"### Reading from a file: `load`","lastModifiedDate":"2024-04-03"},{"lineNumber":307,"author":{"gitId":"annoy-o-mus"},"content":"Loads the JSON files from the specified path.","lastModifiedDate":"2024-04-03"},{"lineNumber":308,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":309,"author":{"gitId":"annoy-o-mus"},"content":"Format: `load (-in loadFile)`","lastModifiedDate":"2024-04-03"},{"lineNumber":310,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":311,"author":{"gitId":"annoy-o-mus"},"content":"Examples:","lastModifiedDate":"2024-04-03"},{"lineNumber":312,"author":{"gitId":"annoy-o-mus"},"content":"- `load -in data/to/inputFile.json`","lastModifiedDate":"2024-04-03"},{"lineNumber":313,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":314,"author":{"gitId":"annoy-o-mus"},"content":"The default load location is `data/MediTrackerData.json`. This is done automatically when the program starts.","lastModifiedDate":"2024-04-03"},{"lineNumber":315,"author":{"gitId":"annoy-o-mus"},"content":"You should make sure that this file is present in the specified path. Alternatively, you can use the `load` command","lastModifiedDate":"2024-04-03"},{"lineNumber":316,"author":{"gitId":"annoy-o-mus"},"content":"to load the file.","lastModifiedDate":"2024-04-03"},{"lineNumber":317,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":318,"author":{"gitId":"annoy-o-mus"},"content":"As far as possible, refrain from using spaces in the file path, especially with `-h` i.e. `path/to -h/`.","lastModifiedDate":"2024-04-03"},{"lineNumber":319,"author":{"gitId":"annoy-o-mus"},"content":"This will trigger the help message to be displayed rather than processing the saving.","lastModifiedDate":"2024-04-03"},{"lineNumber":320,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":321,"author":{"gitId":"annoy-o-mus"},"content":"A prompt will then ask for your confirmation to overwrite existing data as an additional layer of safeguard.","lastModifiedDate":"2024-04-03"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":323,"author":{"gitId":"annoy-o-mus"},"content":"WARNING: Loading will overwrite existing running data, so be sure to save a copy first before deciding to overwrite.","lastModifiedDate":"2024-04-03"},{"lineNumber":324,"author":{"gitId":"annoy-o-mus"},"content":"See the part on [Editing the File](#editing-the-file) for warnings on modifying the saved file.","lastModifiedDate":"2024-04-03"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":326,"author":{"gitId":"annoy-o-mus"},"content":"### Editing the file","lastModifiedDate":"2024-04-03"},{"lineNumber":327,"author":{"gitId":"annoy-o-mus"},"content":"The medication information are saved in a `.json` format while the daily medication information are saved","lastModifiedDate":"2024-04-03"},{"lineNumber":328,"author":{"gitId":"annoy-o-mus"},"content":"in the `.txt` format. Advanced users can modify the text files directly.","lastModifiedDate":"2024-04-03"},{"lineNumber":329,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":330,"author":{"gitId":"annoy-o-mus"},"content":"WARNING: If the changes to the data file makes either its format or some of the fields contained therein invalid,","lastModifiedDate":"2024-04-03"},{"lineNumber":331,"author":{"gitId":"annoy-o-mus"},"content":"meditracker may:","lastModifiedDate":"2024-04-03"},{"lineNumber":332,"author":{"gitId":"annoy-o-mus"},"content":"1. Discard all the data and start with a fresh state","lastModifiedDate":"2024-04-03"},{"lineNumber":333,"author":{"gitId":"annoy-o-mus"},"content":"2. Tries to read some information, and fill in placeholder values for fields that fail to load","lastModifiedDate":"2024-04-03"},{"lineNumber":334,"author":{"gitId":"annoy-o-mus"},"content":"3. Crash due to bad data.","lastModifiedDate":"2024-04-03"},{"lineNumber":335,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":336,"author":{"gitId":"annoy-o-mus"},"content":"Therefore, only edit the file if you are confident you can update it correctly.","lastModifiedDate":"2024-04-03"},{"lineNumber":337,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":338,"author":{"gitId":"annoy-o-mus"},"content":"### Advanced feature: Setting an arbitrary time","lastModifiedDate":"2024-04-03"},{"lineNumber":339,"author":{"gitId":"annoy-o-mus"},"content":"This feature is intended for developers to test out the features. See the developer guide (To be updated) for more detailed explanation on its implementation.","lastModifiedDate":"2024-04-03"},{"lineNumber":340,"author":{"gitId":"annoy-o-mus"},"content":"To make use of this feature, simply add the following flag and argument **when running the program** (not during the program execution itself)","lastModifiedDate":"2024-04-03"},{"lineNumber":341,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":342,"author":{"gitId":"annoy-o-mus"},"content":"Example: `java -jar meditracker.jar -sim 2024-01-01T13:00:00Z`","lastModifiedDate":"2024-04-03"},{"lineNumber":343,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":344,"author":{"gitId":"annoy-o-mus"},"content":"The `-sim` flag informs the program that a simulated time is expected. The supplied date and time must be of the format specified above,","lastModifiedDate":"2024-04-03"},{"lineNumber":345,"author":{"gitId":"annoy-o-mus"},"content":"or else the parser will return an error. The supplied time is of the format `YYYY-MM-DDTHH:MM:SSZ`","lastModifiedDate":"2024-04-03"},{"lineNumber":346,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":347,"author":{"gitId":"annoy-o-mus"},"content":"In the above example, it will set the time for the program to be **1 Jan 2024, 1pm**.","lastModifiedDate":"2024-04-03"},{"lineNumber":348,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":349,"author":{"gitId":"annoy-o-mus"},"content":"## FAQ","lastModifiedDate":"2024-04-03"},{"lineNumber":350,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2024-04-03"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":352,"author":{"gitId":"annoy-o-mus"},"content":"**A**: By default, all meditracker-related data will be saved under the `data` folder. ","lastModifiedDate":"2024-04-03"},{"lineNumber":353,"author":{"gitId":"annoy-o-mus"},"content":"This folder resides at the same level as the `meditracker.jar` file.","lastModifiedDate":"2024-04-03"},{"lineNumber":354,"author":{"gitId":"annoy-o-mus"},"content":"To transfer the data, just copy/shift the `data` folder to the new computer, ","lastModifiedDate":"2024-04-03"},{"lineNumber":355,"author":{"gitId":"annoy-o-mus"},"content":"making sure it is at the same level as the `.jar` file.","lastModifiedDate":"2024-04-03"},{"lineNumber":356,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":357,"author":{"gitId":"T0nyLin"},"content":"## Glossary","lastModifiedDate":"2024-04-03"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":359,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":361,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"nickczh":25,"e0958902":27,"annoy-o-mus":73,"T0nyLin":74,"kyuichyi":29,"wenenhoe":102,"-":33}},{"path":"docs/diagrams/AddCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"@startuml","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"actor User","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"participant \":AddCommand\" as AddCommand","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"participant \":ArgumentList\" as ArgumentList","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n MedicationManager\" as MedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n DailyMedicationManager\" as DailyMedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n Ui\" as Ui","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"User -\u003e AddCommand: new AddCommand(arguments)","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"activate AddCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e ArgumentList: parse(arguments)","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"activate ArgumentList","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"ArgumentList --\u003e AddCommand: return parsedArguments","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"deactivate ArgumentList","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e AddCommand: execute()","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"activate AddCommand #FFBBBB","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e AddCommand: createMedication()","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"activate AddCommand #FFCCCC","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e MedicationManager: addMedication(medication)","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"activate MedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"MedicationManager --\u003e AddCommand: return","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"deactivate MedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e DailyMedicationManager: checkForDaily(medication)","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"activate DailyMedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"DailyMedicationManager --\u003e AddCommand: return","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"deactivate DailyMedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"deactivate AddCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e Ui: showSuccessMessage(\"Medicine has been added\")","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"activate Ui","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"Ui --\u003e AddCommand: return","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"deactivate Ui","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"deactivate AddCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"return User","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"@enduml","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"nickczh":38}},{"path":"docs/diagrams/JsonFileExport.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"@startuml","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n FileReaderWriter\" as FRW","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n JsonExporter\" as JE","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"-\u003e FRW: saveMediTrackerData(path:Path)","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"activate FRW","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"FRW -\u003e FRW: createTempSaveFile(jsonFolder:Path)","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"activate FRW","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"FRW --\u003e FRW: tmpSaveFile:Path","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"deactivate FRW","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"FRW -\u003e JE: saveMedicationDataToJson(tmpSaveFile:Path)","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"activate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"JE -\u003e JE: populateMedicationList()","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"activate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"JE --\u003e JE: medicationList:JSONArray","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"deactivate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"JE-\u003eJE: writeJsonData(rootData:JSONObject, fileToWrite:Path)","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"activate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"JE --\u003e JE: :boolean","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"deactivate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"JE --\u003e FRW: saveStatus:boolean","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"deactivate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"note over FRW","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"Checks status and renames the temp file","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"to the output file.","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"end note","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"@enduml","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"annoy-o-mus":32}},{"path":"docs/team/ericsimchongli.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"# Eric Sim Chong Li - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"The following contains my contribution summary and pull request reviews.","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"- Created relevant milestones labels","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"- Map some of the user stories to issues","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"- Reviewed multiple pull requests (PR)","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"- Added guide on how to improve on ListCommand in the developer guide","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"- Issue #49: list all medications from \u0027MedicationManager\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"- Issue #15: Show detailed view of a medication","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"- Information on how ListCommand works and how to use it.","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"- Relevant user stories done in milestone v1.0","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"- Updated user guide to include list all and view specific medication","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"### PR Reviews","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"#9, #18, #20, #23, #53, #73, #75, #84, #88, ","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"#89, #90, #95, #98, #115, #116","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"e0958902":23}},{"path":"docs/team/kaitlynchong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"# Kaitlyn Chong - Project Portfolio Page","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"kyuichyi":1,"-":5}},{"path":"docs/team/linhtet.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"# Nyan Lin Htet - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"The following contains my contribution summary and pull request reviews.","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"- Issue #13: Query Certain Time of the Day Medication Information in `DailyMedication`","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"- Issue #34: Query `DailyMedication` list","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"- Issue #50: Parse each row read from file int `DailyMedicationManager`","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"- Issue #52: Bridging `DailyMedicationManager` and `MedicationManager`","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"- Issue #69: Store `DailyMedication` list into testfile","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"- Issue #79: Create private Ui constructor","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"- Issue #81: Modify `DailyMedicationManager` to static","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"- Issue #105: Fix bug to separate dailyMedication Object for items in each sub list","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"- Issue #110: Fix bug to addCommand crash when repeat flag is not supplied","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"- Added some user stories into the table","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"- Added command guide for list -t today -m/-a/-e will print","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"- Summary of list for the Daily Medication","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"### PR Reviews","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"#4, #5, #8, #10, #54, #56, #57, #68, #75, #78, #85, #88","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"T0nyLin":26}},{"path":"docs/team/nickczh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"# Nick Chua - Project Portfolio Page","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"## Overview","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"### Code related Contributions","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"- Issue #14: Add Ui","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"- Issue #16: Add medication entry and information via one-line command","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"- Issue #52: Bridging DailyMedicationManager and MedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"- Issue #71: Add assertion to Add command","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"- Issue #72: Modify Ui to be static","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"- Issue #74: More flags for Add command and Exception Handling","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"- Add command specifications","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"- Update Add Command with sequence diagrams (Issue #138)","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"### User Guide Contributions","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"- Add command","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"  - Description","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"  - Command Format","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"  - Example","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"  - Output","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"### Team-based tasks","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"- Request permission for use of JSON-Java package in cs2113 forum","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"[(Issue #16)](https://github.com/nus-cs2113-AY2324S2/forum/issues/16)","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"### PR Reviews","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"#42, #61, #62, #64, #70, #73, #75, #127, #131, #132, #142, #144","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"### Miscellaneous","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"#### Refactor:","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"- Package names","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"- Gradle configuration files","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"#### Ui:","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"- Develop the user interface for the MediTracker. ","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"- It includes getting the user input, printing the welcome, exit message and more.","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"#### Command:","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"- Create command abstract class, AddCommand and ExitCommand. Add JUnit test for AddCommand.","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"#### Medication:","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"- Create Medication class and MedicationList class","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"#### Defensive code:","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"- Handled exceptions in MediTracker class as well as invalid command input in Command class.","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"nickczh":44}},{"path":"docs/team/songxuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# Song Xuan - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"## Summary of Contributions","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"### Code related Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #41: Create a common logging class for the whole program","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #97, #100: Deal with storage and OS-related path checks and handling","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #25: Create and Open the JSON save file ","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #27, #55: Read and Write medication-related data to JSON file","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #48, #121: Read and wrote daily medication related data to txt file","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #41: Introduce MediTracker Logger for logging","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #96: Introduce save to and load from custom location","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #43: Simulated Time","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- To talk about Issue 25 --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"### PR Reviews","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"#2, #5, #40, #44, #51, #66, #82, #87, #93, #111","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"### Team-based tasks","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"- Added PR Template (#11, #21).","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"- Set up the GitHub Team organisation and Repo","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"  - Restricted direct master branch merging","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"  - Disabled rebase and squash merging (thanks @wenenhoe)","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"- Brought in the JSON package (https://github.com/stleary/JSON-java) (#26)","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"annoy-o-mus":32}},{"path":"docs/team/wenenhoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"# Hoe Wen En - Project Portfolio Page","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"## Overview","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"### Code related Contributions","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"- Issue #19: Mark taken status for `DailyMedication`","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"- Issue #36: Added argument parser to handle all `Command`s\u0027 arguments +","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"             Modify medication information through command             ","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"- Issue #37: Delete medication from `MedicationManager`","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"- Issue #60: Bug `ModifyCommand` overwrite other fields erroneously","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"- Issue #65: Bug Modify medication name does not update `DailyMedication` name","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"- Issue #77: Add support for no value flag arguments","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"- Issue #86: Add help messages for the different commands","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"- Issue #91: Add time period arguments and quantity management logic","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"- Issue #103: Remove and replace unused arguments","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"- Issue #94: Program crashes when provided empty arguments","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"- Issue #102: Program crashes when provided invalid index","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"- Issue #118: Enhance Ui to have methods to print different types of messages","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"- Issue #119: Add tests and handle exceptions for index of bound, missing medication, ","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"              unknown arguments, arguments with no value specified","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"- Issue #120: Add missing logic to modify and delete command","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"- Information related to how `ArgumentParser` works","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"- Included what is required to add on and further extend the argument package","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"if more `Argument`s are needed","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"- Added information on how help messages for `ArgumentList` is generated","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"- Added description on command format","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"- Added information on how to use `modify`, `delete`, `take` and `untake`","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"### PR Reviews","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"#3, #6, #7, #10, #12, #17, #22, #28, #33, ","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"#35, #47, #49, #58, #59, #73, #75, #80, #84,","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"#101, #108, #109, #112, #113, #117, #122, #124","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"wenenhoe":38}},{"path":"src/main/java/meditracker/MediTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.command.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.CommandName;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.CommandParser;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.CommandNotFoundException;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.InvalidSimulatedTimeException;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":" * The main class for the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":" * It initializes the user interface and runs the application loop.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"public class MediTracker {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"     * Constructs a new MediTracker object and initializes both medicationManager and","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"     * dailyMedicationManager.","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"    public MediTracker() {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"        DailyMedicationManager.createDailyMedicationManager();","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"     * Constructs a new MediTracker object with data from save file for DailyMedicationManager","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"     * @param dailyMedicationList Daily medication","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"    public MediTracker(List\u003cString\u003e dailyMedicationList) {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.importDailyMedicationManager(dailyMedicationList);","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"     * Runs the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"     * This method displays a welcome message, reads user commands, and processes them until the user exits the","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"     * application.","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"    public void run() {","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        //@@author nickczh-reused","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/nickczh/ip","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        //with minor modifications","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        FileReaderWriter.loadMediTrackerData();","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Ui.showLine();","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            String fullCommand \u003d Ui.readCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            CommandParser commandParser;","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                commandParser \u003d new CommandParser(fullCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } catch (CommandNotFoundException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                // Just pressing enter into console, skip processing","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            CommandName commandName \u003d commandParser.getCommandName();","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            Command command;","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                command \u003d commandParser.getCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            } catch (ArgumentNotFoundException | DuplicateArgumentFoundException | CommandNotFoundException |","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                     ArgumentNoValueException | UnknownArgumentFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                Ui.showErrorMessage(e);","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            } catch (HelpInvokedException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                Ui.showHelpMessage(commandName);","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Starts the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * It creates a new MediTracker object and calls its run() method.","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param args Command-line arguments for the program.","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            MediTrackerTime.setUpSimulatedTime(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (InvalidSimulatedTimeException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        MediLogger.initialiseLogger();","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cString\u003e dailyMedicationList \u003d FileReaderWriter.loadDailyMedicationData();","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (dailyMedicationList \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            new MediTracker().run();","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            new MediTracker(dailyMedicationList).run();","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":20,"e0958902":1,"annoy-o-mus":18,"T0nyLin":2,"wenenhoe":8,"-":59}},{"path":"src/main/java/meditracker/MediTrackerConfig.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":" * A class that holds configuration related properties.","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":" * This is to allow the user to customise certain user preferences. (To be implemented beyond v2.0)","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"public class MediTrackerConfig {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Logger logger \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    /* Path to save Medication related information.*/","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Path defaultJsonSaveFilePath \u003d Path.of(\"data/MediTrackerData.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"    /* Folder containing save medication for the different days. Not customisable.*/","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Path dailySaveFolderPath \u003d Path.of(\"data/dailymed\");","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    public static Path getDefaultJsonSaveFilePath() {","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"        return defaultJsonSaveFilePath;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    public static Path getDailySaveFilePath() {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"        String date \u003d MediTrackerTime.getCurrentDate().toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"        String folderPathString \u003d dailySaveFolderPath.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"        return Path.of(folderPathString, date + \".txt\");","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"annoy-o-mus":30}},{"path":"src/main/java/meditracker/argument/AfternoonArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument to represent afternoon","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class AfternoonArgument extends Argument {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public AfternoonArgument(boolean isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.AFTERNOON,","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-a\",","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Time of day: Afternoon\",","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/AllFieldsArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.argument;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":" * Argument for the illness treated by the medicine.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"public class AllFieldsArgument extends Argument {","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"    public AllFieldsArgument(boolean isOptional) {","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"        super(","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"                ArgumentName.ALL_FIELDS,","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"                \"-a\",","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"                \"Finds keyword from all fields of the library.\",","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"                isOptional,","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"                true","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"        );","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kyuichyi":16}},{"path":"src/main/java/meditracker/argument/Argument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument class to store the name of the argument,","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" * corresponding flag for it, the prompt that will be used","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" * to guide the user to input that argument, help message","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":" * if user require additional context, whether the argument","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":" * is optional or not, and whether the argument has a","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":" * corresponding value.","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"public abstract class Argument {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    private final ArgumentName name;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    private final String flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    private final String help;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    private final boolean isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    private final boolean hasValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"     * Constructs Argument object with the fields required to","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"     * handle this input type","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the argument","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     * @param flag Corresponding flag for the argument, takes the form of \"-*\"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     *             where \"*\" represents a single letter","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     * @param help Help message for additional context","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether this argument is optional or required","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * @param hasValue Whether this argument requires a value specified with it","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    public Argument(ArgumentName name,","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"                    String flag,","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"                    String help,","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"                    boolean isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"                    boolean hasValue) {","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        this.help \u003d help;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        this.isOptional \u003d isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        this.hasValue \u003d hasValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentName getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    public String getFlag() {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        return flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    public String getHelp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"        return help;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    public boolean isOptional() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        return isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    public boolean hasValue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        return hasValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":60}},{"path":"src/main/java/meditracker/argument/ArgumentHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.AddCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.CommandName;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.DeleteCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.ListCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import meditracker.command.ViewCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.ModifyCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"import meditracker.command.SearchCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.TakeCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.UntakeCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.command.SaveCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.command.LoadCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":" * ArgumentHelper class to handle generating the help messages,","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":" * consisting of the general command usage and a breakdown of the","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":" * various command argument options.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentHelper {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     * Gets the help message for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * @param commandName Enum of the Command that is getting the help message","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     * @return The help message for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    public static String getHelpMessage(CommandName commandName) {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        switch (commandName) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        case ADD:","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            return AddCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        case MODIFY:","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            return ModifyCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        case LIST:","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            return ListCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"e0958902"},"content":"        case VIEW:","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"            return ViewCommand.HELP_MESSAGE;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        case DELETE:","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"            return DeleteCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        case TAKE:","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"            return TakeCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"        case UNTAKE:","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"            return UntakeCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"kyuichyi"},"content":"        case SEARCH:","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"            return SearchCommand.HELP_MESSAGE;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        case SAVE:","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"            return SaveCommand.HELP_MESSAGE;","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"        case LOAD:","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"            return LoadCommand.HELP_MESSAGE;","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        case EXIT: // fall through","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        case UNKNOWN: // fall through","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"            throw new IllegalStateException(\"No available help message for \" + commandName);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"     * Generates the help message for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"     * @param commandName Enum of the Command that is generating the help message","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList Corresponding list of Argument for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"     * @return The help message generated for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"    public static String getHelpMessage(CommandName commandName, ArgumentList argumentList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        String usage \u003d getUsage(commandName, argumentList);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"        String options \u003d getOptions(argumentList);","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        message.append(usage).append(System.lineSeparator()).append(options);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        return message.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"     * Generates the usage for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"     * @param commandName Enum of the Command that is generating the help message","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList Corresponding list of Argument for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"     * @return The usage for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"    private static String getUsage(CommandName commandName, ArgumentList argumentList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"        StringBuilder usageString \u003d new StringBuilder(\"Usage:\");","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        usageString.append(System.lineSeparator());","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"        String command \u003d commandName.name().toLowerCase();","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"        usageString.append(\"\\t\").append(command);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"        List\u003cArgument\u003e arguments \u003d argumentList.getArguments();","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument : arguments) {","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"            boolean isOptional \u003d argument.isOptional();","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"            String argumentFormat \u003d ArgumentHelper.getArgumentFormat(argument);","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"            if (isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"                argumentFormat \u003d String.format(\" [%s]\", argumentFormat);","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"                argumentFormat \u003d String.format(\" (%s)\", argumentFormat);","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"            usageString.append(argumentFormat);","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"        return usageString.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"     * Generates the command options for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList Corresponding list of Argument for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"     * @return The command options for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"    private static String getOptions(ArgumentList argumentList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"        StringBuilder optionsString \u003d new StringBuilder(\"Options:\");","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"        List\u003cArgument\u003e arguments \u003d argumentList.getArguments();","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"        int maxWidth \u003d arguments.stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"                .map(ArgumentHelper::getArgumentFormat)","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"                .map(String::length)","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"                .max(Integer::compareTo).get() + 5;","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument : arguments) {","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"            String argumentFormat \u003d ArgumentHelper.getArgumentFormat(argument);","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"            String helpMessage \u003d argument.getHelp();","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"            String formatSpecifier \u003d \"\\t%-\" + maxWidth + \"s%s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"            String argumentHelpMessage \u003d String.format(formatSpecifier, argumentFormat, helpMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"            optionsString.append(System.lineSeparator());","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"            optionsString.append(argumentHelpMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"        return optionsString.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"     * Formats the argument depending on whether it has value or not","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"     * @param argument Argument to format","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"     * @return The string in the format of flag (and name)","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"    private static String getArgumentFormat(Argument argument) {","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"        String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d argument.getName().value;","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"        boolean hasValue \u003d argument.hasValue();","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"        if (hasValue) {","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"            return String.format(\"%s %s\", flag, name);","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"            return String.format(\"%s\", flag);","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"e0958902":3,"annoy-o-mus":6,"kyuichyi":3,"wenenhoe":138}},{"path":"src/main/java/meditracker/argument/ArgumentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":" * ArgumentList class for managing a list of Argument","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":" * Calls on ArgumentParser when parse method is invoked","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":" * @see ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentList {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    private final List\u003cArgument\u003e arguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     * Constructs ArgumentList to take in variable length of Argument","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     * Assertion test is used to check no flag collision for the","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     * arguments specified","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments Arguments to be included in the list","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentList(Argument... arguments) {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        List\u003cArgument\u003e newArguments \u003d new ArrayList\u003c\u003e(List.of(arguments));","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        newArguments.add(new HelpArgument());","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        this.arguments \u003d newArguments;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"        // assertion test: check for flag collisions","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        Set\u003cString\u003e flags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument: arguments) {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"            String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"            assert !flags.contains(flag);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"            flags.add(flag);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     * Parses user raw input arguments into ArgumentName and","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     * corresponding argument value","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInput Raw input to be parsed","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * @return A map of argument name as key and the corresponding value","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException When argument required not found","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNoValueException When argument requires value but no value specified","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException When duplicate argument found","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"     * @throws UnknownArgumentFoundException When unknown argument flags found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"     * @see ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    public Map\u003cArgumentName, String\u003e parse(String rawInput)","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        ArgumentParser argumentParser \u003d new ArgumentParser(this, rawInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        boolean hasCalledForHelp \u003d argumentParser.parsedArguments.get(ArgumentName.HELP) !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        if (hasCalledForHelp) {","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"            throw new HelpInvokedException();","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        argumentParser.checkForMissingRequiredArguments(); // throws ArgumentNotFoundException","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        return argumentParser.parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"    public List\u003cArgument\u003e getArguments() {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        return arguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":74}},{"path":"src/main/java/meditracker/argument/ArgumentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * ArgumentName enum to standardise the enum values for use","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" * by Command classes and ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"public enum ArgumentName {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"    DOSAGE_MORNING(\"dosageMorning\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    DOSAGE_AFTERNOON(\"dosageAfternoon\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"    DOSAGE_EVENING(\"dosageEvening\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"    EXPIRATION_DATE(\"expirationDate\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"    REPEAT(\"repeat\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    DAY_ADDED(\"dayAdded\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    LIST_INDEX(\"listIndex\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    NAME(\"name\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    QUANTITY(\"quantity\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"    REMARKS(\"remarks\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    LIST_TYPE(\"listType\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    HELP(\"help\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    MORNING(\"morning\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    AFTERNOON(\"afternoon\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    EVENING(\"evening\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"    ILLNESS(\"illness\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"    SIDE_EFFECTS(\"sideEffects\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    ALL_FIELDS(\"allFields\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    SAVE_FILE(\"saveFile\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"    LOAD_FILE(\"loadFile\");","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    public final String value;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    ArgumentName(String value) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"     * Performs a reverse search to get the enum value from the associated string.","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"     * @param valueToCompare The String value to compare to get the enum.","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The corresponding enum if it matches the value compared. Null otherwise.","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"     * @see meditracker.command.CommandName for a similar implementation (adapted from there)","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"    public static ArgumentName getEnumOfArgumentValue(String valueToCompare) {","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"        for (ArgumentName argName : values()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"            if (argName.value.equals(valueToCompare)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"                return argName;","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nickczh":4,"e0958902":1,"annoy-o-mus":21,"kyuichyi":2,"wenenhoe":22}},{"path":"src/main/java/meditracker/argument/ArgumentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import java.util.SortedMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":" * ArgumentParser class to handle parsing of user input","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":" * All arguments have to be specified with a flag.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"class ArgumentParser {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    protected final Map\u003cArgumentName, String\u003e parsedArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    private final ArgumentList argumentList;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     * Constructs ArgumentParser that parses raw input into corresponding key value pairs","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList List of argument","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInput Raw input to be parsed","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNoValueException When argument requires value but no value specified","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"     * @throws UnknownArgumentFoundException When unknown argument flags found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentParser(ArgumentList argumentList, String rawInput)","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            throws DuplicateArgumentFoundException, ArgumentNoValueException, UnknownArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException {","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        this.argumentList \u003d argumentList;","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"        List\u003cString\u003e rawInputSplit \u003d List.of(rawInput.split(\" \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        checkForUnknownArguments(rawInputSplit);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        SortedMap\u003cInteger, Argument\u003e indexes \u003d getArgumentIndexes(rawInputSplit);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"        if (indexes.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"            throw new HelpInvokedException();","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        getArgumentValues(indexes, rawInputSplit);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * Checks for missing required arguments","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    public void checkForMissingRequiredArguments() throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument: argumentList.getArguments()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"            String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"            boolean isFoundInParsedArgs \u003d parsedArguments.containsKey(argument.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"            boolean isRequired \u003d !argument.isOptional();","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"            boolean isMissing \u003d isRequired \u0026\u0026 !isFoundInParsedArgs;","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"            if (isMissing) {","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"                // arg keyword not found in additional input","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"                String errorContext \u003d String.format(\"Missing \\\"%s\\\" argument\", flag);","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"                throw new ArgumentNotFoundException(errorContext);","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    // @@author wenenhoe-reused","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/wenenhoe/ip with minor modifications","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Checks if unknown argument flags are found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws UnknownArgumentFoundException When unknown argument flags found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void checkForUnknownArguments(List\u003cString\u003e rawInputSplit) throws UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argumentFlags \u003d argumentList.getArguments().stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .map(Argument::getFlag)","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         * regex pattern to find all flags with the form of `-*`","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"         * where `*` represents any number of alphabetic characters","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String pattern \u003d \"^-.+$\";","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cString\u003e unknownFlags \u003d rawInputSplit.stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .filter((input) -\u003e input.matches(pattern) \u0026\u0026 !argumentFlags.contains(input))","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!unknownFlags.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            String unknownFlagsString \u003d String.join(\" \", unknownFlags);","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            String errorContext \u003d String.format(\"Unknown argument flags found: %s\", unknownFlagsString);","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new UnknownArgumentFoundException(errorContext);","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"     * Obtains argument value using start and end index of the raw input list","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"     * @param startIndex Start index in rawInputSplit of argument value","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"     * @param endIndex End index in rawInputSplit of argument value","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"     * @return Corresponding argument value, joined with spaces","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"    private static String getArgumentValue(List\u003cString\u003e rawInputSplit, int startIndex, int endIndex) {","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"        List\u003cString\u003e argContentList \u003d rawInputSplit.subList(startIndex, endIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"        return String.join(\" \", argContentList).strip();","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"     * Obtains the argument index from the raw input list","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"     * @param flag Argument flag to index","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"     * @return Index of the argument flag","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"    private static int getArgumentIndex(List\u003cString\u003e rawInputSplit, String flag)","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"            throws DuplicateArgumentFoundException {","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"        int firstFlagIndex \u003d rawInputSplit.indexOf(flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"        int lastFlagIndex \u003d rawInputSplit.lastIndexOf(flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"        if (firstFlagIndex !\u003d lastFlagIndex) {","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"            String errorContext \u003d String.format(\"Duplicate \\\"%s\\\" argument found\", flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"            throw new DuplicateArgumentFoundException(errorContext);","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"        return firstFlagIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    // @@author wenenhoe-reused","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/wenenhoe/ip with minor modifications","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sorts a list of argument flags and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @return A sorted map of arguments and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private SortedMap\u003cInteger, Argument\u003e getArgumentIndexes(List\u003cString\u003e rawInputSplit)","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throws DuplicateArgumentFoundException {","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        SortedMap\u003cInteger, Argument\u003e indexes \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        for (Argument argument: argumentList.getArguments()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            int flagIndex \u003d ArgumentParser.getArgumentIndex(rawInputSplit, flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            boolean isNotFound \u003d flagIndex \u003d\u003d -1;","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            if (!isNotFound) {","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                indexes.put(flagIndex, argument);","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return indexes;","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    // @@author wenenhoe-reused","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/wenenhoe/ip with modifications to support","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    // arguments without corresponding value","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Obtains a map of argument flags and their corresponding value, using a sorted ordering","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * of the argument flags indexes.","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * @param indexes A sorted map of arguments and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @throws ArgumentNoValueException When argument requires value but no value specified","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void getArgumentValues(SortedMap\u003cInteger, Argument\u003e indexes, List\u003cString\u003e rawInputSplit)","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throws ArgumentNoValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Argument argument \u003d indexes.get(indexes.firstKey());","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ArgumentName argKey \u003d argument.getName();","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        boolean hasValue \u003d argument.hasValue();","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        int startIndex \u003d indexes.firstKey() + 1; // position after argument flag","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        int endIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        boolean isSkipFirst \u003d false;","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cInteger, Argument\u003e index: indexes.entrySet()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            if (!isSkipFirst) {","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                isSkipFirst \u003d true; // Skips first map entry","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            endIndex \u003d index.getKey();","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            String argValue \u003d ArgumentParser.getArgumentValue(rawInputSplit, startIndex, endIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (hasValue \u0026\u0026 argValue.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                String errorContext \u003d String.format(\"No value found for argument \\\"%s\\\"\", argument.getFlag());","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                throw new ArgumentNoValueException(errorContext);","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            parsedArguments.put(argKey, argValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            argument \u003d index.getValue();","lastModifiedDate":"2024-03-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            argKey \u003d argument.getName();","lastModifiedDate":"2024-03-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            hasValue \u003d argument.hasValue();","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            startIndex \u003d endIndex + 1; // position after argument flag","lastModifiedDate":"2024-03-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        endIndex \u003d rawInputSplit.size();","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String argValue \u003d ArgumentParser.getArgumentValue(rawInputSplit, startIndex, endIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (hasValue \u0026\u0026 argValue.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            String errorContext \u003d String.format(\"No value found for argument \\\"%s\\\"\", argument.getFlag());","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            throw new ArgumentNoValueException(errorContext);","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        parsedArguments.put(argKey, argValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":105,"-":102}},{"path":"src/main/java/meditracker/argument/DosageAfternoonArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the afternoon dosage of medication to be taken.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class DosageAfternoonArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a DosageAfternoonArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public DosageAfternoonArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"                ArgumentName.DOSAGE_AFTERNOON,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-dA\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"                \"Afternoon dosage of medication\",","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":20,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/DosageEveningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the evening dosage of medication to be taken.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class DosageEveningArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a DosageEveningArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public DosageEveningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"                ArgumentName.DOSAGE_EVENING,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-dE\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"                \"Evening dosage of medication\",","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":20,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/DosageMorningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the morning dosage of medication to be taken.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class DosageMorningArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a DosageMorningArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public DosageMorningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"                ArgumentName.DOSAGE_MORNING,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-dM\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"                \"Morning dosage of medication\",","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":20,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/EveningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument to represent evening","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class EveningArgument extends Argument {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public EveningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.EVENING,","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-e\",","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Time of day: Evening\",","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/ExpirationDateArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Expiration date of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class ExpirationDateArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public ExpirationDateArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.EXPIRATION_DATE,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-e\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Expiration date of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/HelpArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Help argument to print help message","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class HelpArgument extends Argument {","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    protected HelpArgument() {","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.HELP,","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-h\",","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Prints this help message\",","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                true,","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/IllnessArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.argument;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":" * Argument for the illness treated by the medicine.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"public class IllnessArgument extends Argument {","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"    public IllnessArgument(boolean isOptional) {","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"        super(","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"                ArgumentName.ILLNESS,","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"                \"-i\",","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"                \"Illness treated by the medicine\",","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"                isOptional,","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"                true","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"        );","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kyuichyi":16}},{"path":"src/main/java/meditracker/argument/ListIndexArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * List index of Medication or DailyMedication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class ListIndexArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public ListIndexArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.LIST_INDEX,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-l\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Index of item in list\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/ListTypeArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":" * Lists the summary of the medications in Medication","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"public class ListTypeArgument extends Argument {","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"    public ListTypeArgument(boolean isOptional) {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"        super(","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"                ArgumentName.LIST_TYPE,","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"                \"-t\",","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"                \"Lists medications accordingly\",","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"        );","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"e0958902":14,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/LoadArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.argument;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"public class LoadArgument extends Argument {","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"    public LoadArgument() {","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"        super(","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"                ArgumentName.LOAD_FILE,","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"                \"-in\",","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"                \"File path (including .json extension) to load from\",","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"                false,","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"                true","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"annoy-o-mus":13}},{"path":"src/main/java/meditracker/argument/MorningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument to represent morning","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class MorningArgument extends Argument {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public MorningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.MORNING,","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-m\",","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Time of day: Morning\",","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/NameArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Name of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class NameArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public NameArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.NAME,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-n\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Name of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/QuantityArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Quantity of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class QuantityArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public QuantityArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.QUANTITY,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-q\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Quantity of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/RemarksArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Remarks for medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class RemarksArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public RemarksArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.REMARKS,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-r\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Additional remarks on medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/RepeatArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the repeat frequency of medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class RepeatArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a RepeatArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public RepeatArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"             ArgumentName.REPEAT,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-rep\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"                \"How often to take medication (eg: Supply a number from 1 to 7)\",","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"                false","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":19,"T0nyLin":2,"wenenhoe":1}},{"path":"src/main/java/meditracker/argument/SaveArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.argument;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"public class SaveArgument extends Argument {","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"    public SaveArgument() {","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"        super(","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"                ArgumentName.SAVE_FILE,","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"                \"-o\",","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"                \"File path (including .json extension) to save to\",","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"                true,","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"                true","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"annoy-o-mus":14}},{"path":"src/main/java/meditracker/argument/SideEffectsArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.argument;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":" * Argument for the side effects of the medication.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"public class SideEffectsArgument extends Argument {","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"    public SideEffectsArgument(boolean isOptional) {","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"        super(","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"                ArgumentName.SIDE_EFFECTS,","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"                \"-s\",","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"                \"Side effects of the medication\",","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"                isOptional,","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"                true","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"        );","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kyuichyi":16}},{"path":"src/main/java/meditracker/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.RepeatArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.DosageAfternoonArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.DosageMorningArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.DosageEveningArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.NameArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.QuantityArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.ExpirationDateArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.RemarksArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"// @@author nickczh","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":" * The AddCommand class represents a command to add a new medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"     * The argumentList contains all the arguments needed for adding a medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"            new NameArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"            new QuantityArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"            new DosageMorningArgument(true),","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"            new DosageAfternoonArgument(true),","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"            new DosageEveningArgument(true),","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"            new ExpirationDateArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"            new RemarksArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"            new RepeatArgument(false)","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"    );","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.ADD, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"    private double medicationQuantity;","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"    private double medicationDosageMorning \u003d 0.0;","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"    private double medicationDosageAfternoon \u003d 0.0;","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"    private double medicationDosageEvening \u003d 0.0;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"     * Constructs an AddCommand object with the specified arguments.","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"     * @throws ArgumentNotFoundException if a required argument is not found.","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"     * @throws ArgumentNoValueException When argument requires value but no value specified","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument found","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"     * @throws HelpInvokedException When help argument is used","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"     * @throws UnknownArgumentFoundException When unknown argument flags found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"    public AddCommand(String arguments)","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"nickczh"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"nickczh"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"nickczh"},"content":"     * Executes the add command.","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"nickczh"},"content":"     * This method creates a new Medication object using the provided information and adds it to the medication list.","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"nickczh"},"content":"     * It also displays a message confirming the addition of the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"nickczh"},"content":"    public void execute() {","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"nickczh"},"content":"        Medication medication;","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"nickczh"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"nickczh"},"content":"            medication \u003d createMedication();","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"nickczh"},"content":"        } catch (MediTrackerException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"nickczh"},"content":"            Ui.showErrorMessage(e);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"nickczh"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"nickczh"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"nickczh"},"content":"        DailyMedicationManager.checkForDaily(medication);","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"nickczh"},"content":"        assertionTest();","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"nickczh"},"content":"        Ui.showSuccessMessage(\"Medicine has been added\");","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"nickczh"},"content":"     * Sets the medication attributes based on parsed arguments.","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"nickczh"},"content":"     * @throws MediTrackerException if there is an error encountered.","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"nickczh"},"content":"    private Medication createMedication() throws MediTrackerException {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"nickczh"},"content":"        String medicationName \u003d parsedArguments.get(ArgumentName.NAME);","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"nickczh"},"content":"        String expiryDate \u003d parsedArguments.get(ArgumentName.EXPIRATION_DATE);","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"nickczh"},"content":"        String remarks \u003d parsedArguments.get(ArgumentName.REMARKS);","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"nickczh"},"content":"        String medicationQuantityArg \u003d parsedArguments.get(ArgumentName.QUANTITY);","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"nickczh"},"content":"        String medicationDosageMorningArg \u003d parsedArguments.get(ArgumentName.DOSAGE_MORNING);","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"nickczh"},"content":"        String medicationDosageAfternoonArg \u003d parsedArguments.get(ArgumentName.DOSAGE_AFTERNOON);","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"nickczh"},"content":"        String medicationDosageEveningArg \u003d parsedArguments.get(ArgumentName.DOSAGE_EVENING);","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"nickczh"},"content":"        int repeat;","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"nickczh"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"nickczh"},"content":"            repeat \u003d Integer.parseInt(parsedArguments.get(ArgumentName.REPEAT));","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"nickczh"},"content":"            parseStringToValues(medicationQuantityArg, medicationDosageMorningArg,","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"nickczh"},"content":"                    medicationDosageAfternoonArg, medicationDosageEveningArg);","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"nickczh"},"content":"            LocalDate currentDate \u003d MediTrackerTime.getCurrentDate();","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"nickczh"},"content":"            int dayAdded \u003d currentDate.getDayOfYear();","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"nickczh"},"content":"            return new Medication(medicationName, medicationQuantity,","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"nickczh"},"content":"                    medicationDosageMorning, medicationDosageAfternoon, medicationDosageEvening,","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"nickczh"},"content":"                    expiryDate, remarks, repeat, dayAdded);","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"nickczh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"nickczh"},"content":"            throw new MediTrackerException(\"Incorrect Number format given\");","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"nickczh"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"nickczh"},"content":"            throw new MediTrackerException(\"Medication not found\");","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"nickczh"},"content":"     * Parses string values to double for medication attributes.","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"nickczh"},"content":"     * @param medicationQuantity      The quantity of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"nickczh"},"content":"     * @param medicationDosageMorning The morning dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"nickczh"},"content":"     * @param medicationDosageAfternoon The afternoon dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"nickczh"},"content":"     * @param medicationDosageEvening The evening dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"nickczh"},"content":"     * @throws NumberFormatException if there is an error in parsing numeric values.","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"nickczh"},"content":"     * @throws NullPointerException  if any of the required arguments are null.","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"nickczh"},"content":"    private void parseStringToValues(String medicationQuantity,","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"nickczh"},"content":"                                     String medicationDosageMorning,","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"nickczh"},"content":"                                     String medicationDosageAfternoon, String medicationDosageEvening)","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"nickczh"},"content":"            throws NumberFormatException, NullPointerException {","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"nickczh"},"content":"        this.medicationQuantity \u003d Double.parseDouble(medicationQuantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"nickczh"},"content":"        if (medicationDosageMorning !\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"nickczh"},"content":"            this.medicationDosageMorning \u003d Double.parseDouble(medicationDosageMorning);","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"nickczh"},"content":"        if (medicationDosageAfternoon !\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"nickczh"},"content":"            this.medicationDosageAfternoon \u003d Double.parseDouble(medicationDosageAfternoon);","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"nickczh"},"content":"        if (medicationDosageEvening !\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"nickczh"},"content":"            this.medicationDosageEvening \u003d Double.parseDouble(medicationDosageEvening);","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"nickczh"},"content":"     * Performs assertion tests for medication and daily medication managers.","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"nickczh"},"content":"    private void assertionTest() {","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"nickczh"},"content":"        assert MedicationManager.getTotalMedications() !\u003d 0 : \"Total medications in medication \" +","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"nickczh"},"content":"                \"manager should not be 0!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"nickczh"},"content":"// @@author","lastModifiedDate":"2024-04-06"}],"authorContributionMap":{"nickczh":156,"annoy-o-mus":1,"T0nyLin":3,"wenenhoe":6}},{"path":"src/main/java/meditracker/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"     * Executes the command","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"    public abstract void execute();","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     * Returns the boolean to exit the program.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"     * @return False which continues program.","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"        return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":17,"wenenhoe":2}},{"path":"src/main/java/meditracker/command/CommandName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * The CommandName enum represents the names of commands supported by the application.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"public enum CommandName {","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    UNKNOWN(\"unknown\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"    EXIT(\"exit\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    ADD(\"add\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"    VIEW(\"view\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"    MODIFY(\"modify\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    SEARCH(\"search\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    TAKE(\"take\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    UNTAKE(\"untake\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"    SAVE(\"save\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"    LOAD(\"load\");","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"    public final String value;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"     * Constructs a CommandName enum with the specified string value.","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"     * @param value The string value associated with the command name.","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"    CommandName(String value) {","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"     * Returns the CommandName enum based on the provided string label.","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"     * @param label The string label representing a command name.","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"     * @return The CommandName enum corresponding to the label, or null if not found.","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // @@author Baeldung","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Reused from https://www.baeldung.com/java-enum-values","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static CommandName valueOfLabel(String label) {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        for (CommandName e : values()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (e.value.equals(label)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                return e;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return CommandName.UNKNOWN;","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":31,"e0958902":1,"annoy-o-mus":3,"wenenhoe":1,"-":12}},{"path":"src/main/java/meditracker/command/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.CommandNotFoundException;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"// @@author nickczh","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":" * The Parser class parses user input commands into Command objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"public class CommandParser {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    private final CommandName commandName;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    private final String arguments;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"     * Parses a full command string into a CommandName enum and arguments.","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"     * @param fullCommand The full command string entered by the user.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"     * @throws CommandNotFoundException Command specified not found","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"    public CommandParser(String fullCommand) throws CommandNotFoundException {","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"        if (fullCommand.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"            throw new CommandNotFoundException();","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"        String[] commands \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"        arguments \u003d (commands.length \u003d\u003d 2) ? commands[1] : \"\";","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"        commandName \u003d CommandName.valueOfLabel(commands[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"     * Gets the Command object based on the CommandName enum type","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"     * @return A Command object corresponding to the parsed command.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"     * @throws ArgumentNotFoundException When argument required not found","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"     * @throws ArgumentNoValueException When argument requires value but no value specified","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"     * @throws DuplicateArgumentFoundException When duplicate argument found","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"     * @throws CommandNotFoundException Command specified not found","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"     * @throws UnknownArgumentFoundException When unknown argument flags found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"    public Command getCommand()","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"            HelpInvokedException, CommandNotFoundException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"        switch (commandName) {","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"        case EXIT:","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"        case ADD:","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"            return new AddCommand(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"        case MODIFY:","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"            return new ModifyCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"        case LIST:","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"            return new ListCommand(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"        case VIEW:","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"            return new ViewCommand(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"        case DELETE:","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"            return new DeleteCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"        case SEARCH:","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"            return new SearchCommand(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"        case TAKE:","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"            return new TakeCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"        case UNTAKE:","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"            return new UntakeCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"        case SAVE:","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"            return new SaveCommand(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"nickczh"},"content":"        case LOAD:","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"            return new LoadCommand(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"nickczh"},"content":"        case UNKNOWN:","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"nickczh"},"content":"            // fall through","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"        default:","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"nickczh"},"content":"            throw new CommandNotFoundException();","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"nickczh"},"content":"    public CommandName getCommandName() {","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"nickczh"},"content":"        return commandName;","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"nickczh"},"content":"// @@author","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"nickczh":76,"wenenhoe":6}},{"path":"src/main/java/meditracker/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":" * The DeleteCommand class represents a command to delete an existing medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false)","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.DELETE, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a DeleteCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNoValueException When argument requires value but no value specified","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     * @throws UnknownArgumentFoundException When unknown argument flags found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    public DeleteCommand(String arguments)","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * Executes the delete command.","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     * This method deletes an existing Medication object using the provided information in the medication list.","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the deletion of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"        Medication medication;","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"            medication \u003d MedicationManager.getMedication(listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"e0958902"},"content":"        MedicationManager.removeMedication(listIndex);","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        if (DailyMedicationManager.doesBelongToDailyList(medication)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"            deleteDailyMedication(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        Ui.showSuccessMessage(\"Medicine has been deleted\");","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"     * Delete all instance of DailyMedication related to the Medication object","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"     * @param medication The Medication object that will result in the deletion of","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"     *                   DailyMedication objects","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"    private static void deleteDailyMedication(Medication medication) {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d medication.getName();","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"        for (Period period : Period.values()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"            switch (period) {","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"            case MORNING:","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"                if (medication.getDosageMorning() \u003d\u003d 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"                    continue;","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"                try {","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"                    DailyMedicationManager.removeDailyMedication(name, Period.MORNING);","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"                } catch (MedicationNotFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"                    Ui.showWarningMessage(\"Possible corruption of data. \" +","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"                            \"Unable to remove DailyMedication when using `delete`\");","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"            case AFTERNOON:","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"                if (medication.getDosageAfternoon() \u003d\u003d 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"                    continue;","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"                }","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"                try {","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"                    DailyMedicationManager.removeDailyMedication(name, Period.AFTERNOON);","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"                } catch (MedicationNotFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"                    Ui.showWarningMessage(\"Possible corruption of data. \" +","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"                            \"Unable to remove DailyMedication when using `delete`\");","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"            case EVENING:","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"                if (medication.getDosageEvening() \u003d\u003d 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"                    continue;","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"                try {","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"                    DailyMedicationManager.removeDailyMedication(name, Period.EVENING);","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"                } catch (MedicationNotFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"                    Ui.showWarningMessage(\"Possible corruption of data. \" +","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"                            \"Unable to remove DailyMedication when using `delete`\");","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"            default:","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"e0958902":3,"T0nyLin":1,"wenenhoe":122}},{"path":"src/main/java/meditracker/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" * The ExitCommand class represents a command to exit the application.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     * Executes the exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"     * This method displays the exit message using the provided user interface.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"        Ui.showExitMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"     * @return true indicating that this is an exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"        return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":26,"e0958902":1,"wenenhoe":1}},{"path":"src/main/java/meditracker/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.AfternoonArgument;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.EveningArgument;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.MorningArgument;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ListTypeArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":" * The ListCommand class represents a command to list the medications.","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"            new ListTypeArgument(false),","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"            new MorningArgument(true),","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"            new AfternoonArgument(true),","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"            new EveningArgument(true)","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"    );","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.LIST, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a ListCommand object with the specified arguments.","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing information to be parsed.","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNoValueException When argument requires value but no value specified","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * @throws UnknownArgumentFoundException When unknown argument flags found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"    public ListCommand(String arguments)","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"e0958902"},"content":"     * Executes the list command and performs its specific task, -t.","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"     * Uses a switch to do list all and list today","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"e0958902"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"e0958902"},"content":"        String listTypeString \u003d parsedArguments.get(ArgumentName.LIST_TYPE);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"        boolean isMorning \u003d parsedArguments.get(ArgumentName.MORNING) !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"        boolean isAfternoon \u003d parsedArguments.get(ArgumentName.AFTERNOON) !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"        boolean isEvening \u003d parsedArguments.get(ArgumentName.EVENING) !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"        Period period \u003d Period.getPeriod(isMorning, isAfternoon, isEvening);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"e0958902"},"content":"        ","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"e0958902"},"content":"        switch (listTypeString) {","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"e0958902"},"content":"        case \"all\":","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"e0958902"},"content":"            MedicationManager.printAllMedications();","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"e0958902"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"        case \"today\":","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"            switch (period) {","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"            case MORNING:","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"                List\u003cDailyMedication\u003e morningMedications \u003d DailyMedicationManager.getDailyMedications(Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"e0958902"},"content":"                DailyMedicationManager.printTodayMedications(MedicationManager.getMedications(),","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"                        morningMedications, \"Morning:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"                break;","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"            case AFTERNOON:","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"                List\u003cDailyMedication\u003e afternoonMedications","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"                        \u003d DailyMedicationManager.getDailyMedications(Period.AFTERNOON);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"e0958902"},"content":"                DailyMedicationManager.printTodayMedications(MedicationManager.getMedications(),","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"                        afternoonMedications, \"Afternoon:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"                break;","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"            case EVENING:","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"                List\u003cDailyMedication\u003e eveningMedications \u003d DailyMedicationManager.getDailyMedications(Period.EVENING);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"e0958902"},"content":"                DailyMedicationManager.printTodayMedications(MedicationManager.getMedications(),","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"T0nyLin"},"content":"                        eveningMedications, \"Evening:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"T0nyLin"},"content":"                break;","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"T0nyLin"},"content":"            case NONE:","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"T0nyLin"},"content":"                DailyMedicationManager.printTodayMedications(MedicationManager.getMedications());","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"T0nyLin"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"T0nyLin"},"content":"            default:","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"T0nyLin"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + listTypeString);","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"e0958902"},"content":"        default:","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(String.format(\"Unknown list type -\u003e \\\"%s\\\"\", listTypeString));","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"e0958902":39,"T0nyLin":38,"wenenhoe":26}},{"path":"src/main/java/meditracker/command/LoadCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.LoadArgument;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FilePathChecker;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.JsonImporter;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    private static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(new LoadArgument());","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.LOAD, ARGUMENT_LIST);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    public LoadCommand(String arguments)","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"     * Confirms that the user wants to overwrite existing Meditracker data with data from a JSON file.","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if the user confirms to overwrite, false otherwise.","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"    private boolean confirmUserOverwrite() {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(\"Confirm overwrite existing MediTracker data with the file specified. (y/N)\");","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        String input \u003d Ui.readCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        return input.equalsIgnoreCase(\"y\");","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"    public void execute() {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"        assert (parsedArguments !\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"        String loadFileLocation \u003d parsedArguments.get(ArgumentName.LOAD_FILE);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        Path pathOfLoadFile \u003d FilePathChecker.validateUserPathArgument(loadFileLocation);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"        if (pathOfLoadFile \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"        boolean fileExists \u003d Files.exists(pathOfLoadFile);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"        if (!fileExists) {","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"The provided file does not exist\");","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Full path of provided input: \" + pathOfLoadFile.toAbsolutePath());","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"        if (!confirmUserOverwrite()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"        boolean isLoadSuccess \u003d JsonImporter.processMediTrackerJsonFile(pathOfLoadFile);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"        if (isLoadSuccess) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Data Loaded Successfully!\");","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"annoy-o-mus":65,"wenenhoe":4}},{"path":"src/main/java/meditracker/command/ModifyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.DosageAfternoonArgument;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.DosageEveningArgument;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.DosageMorningArgument;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ExpirationDateArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.NameArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.QuantityArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.RemarksArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.RepeatArgument;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":" * The ModifyCommand class represents a command to modify an existing medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"public class ModifyCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false),","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            new NameArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"            new QuantityArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"            new DosageMorningArgument(true),","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"            new DosageAfternoonArgument(true),","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"            new DosageEveningArgument(true),","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"            new ExpirationDateArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"            new RemarksArgument(true),","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"            new RepeatArgument(true)","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.MODIFY, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a ModifyCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNoValueException When argument requires value but no value specified","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"     * @throws UnknownArgumentFoundException When unknown argument flags found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"    public ModifyCommand(String arguments)","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"     * Executes the modify command.","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"     * This method modifies an existing Medication object using the provided information in the medication list.","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the modification of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        Medication medication;","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"            medication \u003d MedicationManager.getMedication(listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"        Medication medicationCopy \u003d Medication.deepCopy(medication);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"            updateMedication(medication);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"            medication.revertMedication(medicationCopy);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"            String errorContext \u003d String.format(\"Unable to format correctly. %s. Medicine has not been modified.\",","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"                    e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(errorContext);","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"        Ui.showSuccessMessage(\"Medicine has been modified\");","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"     * Updates Medication info","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication object to update","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"     * @throws NumberFormatException When Double.parseDouble or Integer.parseInt fails","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"    private void updateMedication(Medication medication) throws NumberFormatException {","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"        for (Map.Entry\u003cArgumentName, String\u003e argument: parsedArguments.entrySet()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"            ArgumentName argumentName \u003d argument.getKey();","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"            String argumentValue \u003d argument.getValue();","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"            switch (argumentName) {","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"            case DOSAGE_MORNING:","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"                medication.setDosageMorning(Double.parseDouble(argumentValue));","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"            case DOSAGE_AFTERNOON:","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"                medication.setDosageAfternoon(Double.parseDouble(argumentValue));","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"            case DOSAGE_EVENING:","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"                medication.setDosageEvening(Double.parseDouble(argumentValue));","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"            case EXPIRATION_DATE:","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"                medication.setExpiryDate(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"            case REPEAT:","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"                medication.setRepeat(Integer.parseInt(argumentValue));","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"            case LIST_INDEX:","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"                continue;","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"            case NAME:","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"                String oldName \u003d medication.getName();","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"                medication.setName(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"                if (!DailyMedicationManager.doesBelongToDailyList(medication)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"                    continue;","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"                try {","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"                    updateDailyMedicationName(medication, oldName, argumentValue);","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"                } catch (MedicationNotFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"                    Ui.showWarningMessage(\"Possible corruption of data. \" +","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"                            \"Unable to update DailyMedication when using `modify`\");","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"                    return;","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"            case QUANTITY:","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"nickczh"},"content":"                medication.setQuantity(Double.parseDouble(argumentValue));","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"            case REMARKS:","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"                medication.setRemarks(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"            default:","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + argumentName);","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"wenenhoe"},"content":"     * Updates all instances of DailyMedication name to new name","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication object being updated","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"wenenhoe"},"content":"     * @param oldName Existing old name of Medication object to search for","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"wenenhoe"},"content":"     * @param newName New name to replace with","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException No DailyMedication matching specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"wenenhoe"},"content":"    private static void updateDailyMedicationName(Medication medication, String oldName, String newName)","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"wenenhoe"},"content":"            throws MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"wenenhoe"},"content":"        for (Period period : Period.values()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"wenenhoe"},"content":"            DailyMedication dailyMedication;","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"wenenhoe"},"content":"            switch (period) {","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"wenenhoe"},"content":"            case MORNING:","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"wenenhoe"},"content":"                if (medication.getDosageMorning() \u003d\u003d 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"wenenhoe"},"content":"                    continue;","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"wenenhoe"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"wenenhoe"},"content":"                dailyMedication \u003d DailyMedicationManager.getDailyMedication(oldName, Period.MORNING);","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"wenenhoe"},"content":"            case AFTERNOON:","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"wenenhoe"},"content":"                if (medication.getDosageAfternoon() \u003d\u003d 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"wenenhoe"},"content":"                    continue;","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"wenenhoe"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"wenenhoe"},"content":"                dailyMedication \u003d DailyMedicationManager.getDailyMedication(oldName, Period.AFTERNOON);","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"wenenhoe"},"content":"            case EVENING:","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"wenenhoe"},"content":"                if (medication.getDosageEvening() \u003d\u003d 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"wenenhoe"},"content":"                    continue;","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"wenenhoe"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"wenenhoe"},"content":"                dailyMedication \u003d DailyMedicationManager.getDailyMedication(oldName, Period.EVENING);","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"wenenhoe"},"content":"            default:","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"wenenhoe"},"content":"                continue;","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"wenenhoe"},"content":"            dailyMedication.setName(newName);","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"e0958902":1,"nickczh":1,"T0nyLin":1,"wenenhoe":188}},{"path":"src/main/java/meditracker/command/SaveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.MediTrackerConfig;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.SaveArgument;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FilePathChecker;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":" * The Save Command.","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    private static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(new SaveArgument());","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.SAVE, ARGUMENT_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"    public SaveCommand(String arguments)","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"            parsedArguments \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"            parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"     * Saves MediTracker information as JSON at its default save location specified in MediTrackerConfig.","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"    private void saveJsonToDefaultLocation(){","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"        boolean isSaveSuccessful \u003d FileReaderWriter.saveMediTrackerData(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"        if (!isSaveSuccessful) {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"An error occurred while saving. Data is not saved.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"            Path defaultJsonPath \u003d MediTrackerConfig.getDefaultJsonSaveFilePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"            Path absoluteJsonPath \u003d defaultJsonPath.toAbsolutePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Data successfully saved to: \" + absoluteJsonPath);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Use the -o flag to save the data to another location.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"     * Saves MediTracker information as JSON at the specified path.","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"     * @param saveFilePath The location to save to.","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"    private void saveJsonToSpecifiedLocation(Path saveFilePath) {","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"        boolean isSaveSuccessful \u003d FileReaderWriter.saveMediTrackerData(saveFilePath);","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"        if (!isSaveSuccessful) {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"An error occurred while saving. Data is not saved.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"            Path absoluteJsonPath \u003d saveFilePath.toAbsolutePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Data successfully saved to: \" + absoluteJsonPath);","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"     * Executes the `save` command.","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"    public void execute() {","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"        if (parsedArguments \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"            saveJsonToDefaultLocation();","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"        assert (parsedArguments!\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"        String saveFileLocation \u003d parsedArguments.get(ArgumentName.SAVE_FILE);","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"        Path pathOfSaveFile \u003d FilePathChecker.validateUserPathArgument(saveFileLocation);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"        if (pathOfSaveFile !\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"            saveJsonToSpecifiedLocation(pathOfSaveFile);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"annoy-o-mus":80,"wenenhoe":4}},{"path":"src/main/java/meditracker/command/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.IllnessArgument;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.NameArgument;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.AllFieldsArgument;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.SideEffectsArgument;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.LibraryManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.SearchResult;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"// @@author kyuichyi","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":" * Represents a command to search for medications from the local medication library based on a keyword.","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"kyuichyi"},"content":"public class SearchCommand extends Command{","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"kyuichyi"},"content":"    /*","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"kyuichyi"},"content":"     * The argumentList contains all the arguments needed for searching for medication from the medication library.","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"kyuichyi"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kyuichyi"},"content":"            new NameArgument(true),","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kyuichyi"},"content":"            new IllnessArgument(true),","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kyuichyi"},"content":"            new SideEffectsArgument(true),","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kyuichyi"},"content":"            new AllFieldsArgument(true)","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"kyuichyi"},"content":"    );","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"kyuichyi"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.SEARCH, ARGUMENT_LIST);","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"kyuichyi"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"kyuichyi"},"content":"     * Constructs a new search command with the specified keyword.","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"kyuichyi"},"content":"     * @param arguments The keyword to search for in the medication library.","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"kyuichyi"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"kyuichyi"},"content":"     * @throws ArgumentNoValueException When argument requires value but no value specified","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"kyuichyi"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"     * @throws UnknownArgumentFoundException When unknown argument flags found in user input","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"kyuichyi"},"content":"    public SearchCommand(String arguments)","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"kyuichyi"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"kyuichyi"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"kyuichyi"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"kyuichyi"},"content":"     * Executes the search command based on the keyword.","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"kyuichyi"},"content":"     * @throws NullPointerException if the keyword is not found.","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"kyuichyi"},"content":"     * @throws IllegalArgumentException if the library is corrupted.","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"kyuichyi"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"kyuichyi"},"content":"    public void execute() throws NullPointerException, IllegalArgumentException {","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kyuichyi"},"content":"        LibraryManager libraryManager \u003d new LibraryManager();","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"kyuichyi"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"kyuichyi"},"content":"            String keyword;","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"kyuichyi"},"content":"            if (parsedArguments.containsKey(ArgumentName.ALL_FIELDS)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"kyuichyi"},"content":"                keyword \u003d parsedArguments.get(ArgumentName.ALL_FIELDS).toLowerCase().trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"kyuichyi"},"content":"                libraryManager.searchLibrary(searchResults, keyword);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"kyuichyi"},"content":"            } else if (parsedArguments.containsKey(ArgumentName.NAME)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"kyuichyi"},"content":"                keyword \u003d parsedArguments.get(ArgumentName.NAME).toLowerCase().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"kyuichyi"},"content":"                libraryManager.findMedication(searchResults, keyword);","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"kyuichyi"},"content":"            } else if (parsedArguments.containsKey(ArgumentName.ILLNESS)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"kyuichyi"},"content":"                keyword \u003d parsedArguments.get(ArgumentName.ILLNESS).toLowerCase().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"kyuichyi"},"content":"                libraryManager.findIllness(searchResults, keyword);","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"kyuichyi"},"content":"            } else if (parsedArguments.containsKey(ArgumentName.SIDE_EFFECTS)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"kyuichyi"},"content":"                keyword \u003d parsedArguments.get(ArgumentName.SIDE_EFFECTS).toLowerCase().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"kyuichyi"},"content":"                libraryManager.findSideEffects(searchResults, keyword);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"kyuichyi"},"content":"            libraryManager.printSearchResults(searchResults);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"kyuichyi"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"kyuichyi"},"content":"            Ui.showSearchKeywordNotFoundMessage();","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"kyuichyi"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"kyuichyi"},"content":"            Ui.showLibraryIsCorruptedMessage();","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"kyuichyi"},"content":"// @@author","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"kyuichyi":88,"wenenhoe":2}},{"path":"src/main/java/meditracker/command/TakeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.AfternoonArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.EveningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.MorningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InsufficientQuantityException;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":" * The TakeCommand class represents a command to take a daily medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"public class TakeCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false),","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"            new MorningArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            new AfternoonArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            new EveningArgument(true)","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.TAKE, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a TakeCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNoValueException When argument requires value but no value specified","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     * @throws UnknownArgumentFoundException When unknown argument flags found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"    public TakeCommand(String arguments)","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"     * Executes the take command.","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"     * This method marks an existing Medication object using the provided list index.","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the modification of the daily medication status.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"    public void execute() {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        boolean isMorning \u003d parsedArguments.get(ArgumentName.MORNING) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        boolean isAfternoon \u003d parsedArguments.get(ArgumentName.AFTERNOON) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        boolean isEvening \u003d parsedArguments.get(ArgumentName.EVENING) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        Period period \u003d Period.getPeriod(isMorning, isAfternoon, isEvening);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"        if (period \u003d\u003d Period.NONE) {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"            period \u003d Period.getPeriod(MediTrackerTime.getCurrentTime());","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        if (period \u003d\u003d Period.UNKNOWN) {","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Unable to determine time period. \" +","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"                    \"Please select 1 flag only or try again later.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"            DailyMedicationManager.takeDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        } catch (InsufficientQuantityException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(e);","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"        } catch (MedicationNotFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"            Ui.showWarningMessage(\"Possible corruption of data. \" +","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"                    \"Unable to increase Medication quantity as object not found\");","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"        Ui.showSuccessMessage(\"Medicine has been taken\");","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"annoy-o-mus":2,"wenenhoe":92}},{"path":"src/main/java/meditracker/command/UntakeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.AfternoonArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.EveningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.MorningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":" * The UntakeCommand class represents a command to untake a daily medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"public class UntakeCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false),","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"            new MorningArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"            new AfternoonArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            new EveningArgument(true)","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.UNTAKE, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a UntakeCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNoValueException When argument requires value but no value specified","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     * @throws UnknownArgumentFoundException When unknown argument flags found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    public UntakeCommand(String arguments)","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"     * Executes the untake command.","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"     * This method unmarks an existing Medication object using the provided list index.","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the modification of the daily medication status.","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"    public void execute() {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        boolean isMorning \u003d parsedArguments.get(ArgumentName.MORNING) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        boolean isAfternoon \u003d parsedArguments.get(ArgumentName.AFTERNOON) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        boolean isEvening \u003d parsedArguments.get(ArgumentName.EVENING) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        Period period \u003d Period.getPeriod(isMorning, isAfternoon, isEvening);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        if (period \u003d\u003d Period.NONE) {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"            period \u003d Period.getPeriod(MediTrackerTime.getCurrentTime());","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        if (period \u003d\u003d Period.UNKNOWN) {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Unable to determine time period. \" +","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"                    \"Please select 1 flag only or try again later.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"            DailyMedicationManager.untakeDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"        } catch (MedicationNotFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"            Ui.showWarningMessage(\"Possible corruption of data. \" +","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"                    \"Unable to increase Medication quantity as object not found\");","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"        Ui.showSuccessMessage(\"Medicine has been untaken\");","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"annoy-o-mus":2,"wenenhoe":87}},{"path":"src/main/java/meditracker/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":" * The ViewCommand class represents a command to print an existing medication.","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":" * It extends the Command class.","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"            new ListIndexArgument(false)","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"    );","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.VIEW, ARGUMENT_LIST);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"    public ViewCommand(String arguments)","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException,","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"            ArgumentNoValueException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"     * Executes the view command.","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"     * This method parses the input index and get the medication in the medication list","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"     * it then prints the medication name with its fields from the medication list","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"e0958902"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"e0958902"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"e0958902"},"content":"        int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"        MedicationManager.printSpecificMedication(listIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"e0958902":45}},{"path":"src/main/java/meditracker/dailymedication/DailyMedication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package meditracker.dailymedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"// @@author T0nyLin","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":" * Stores name and the status of daily medication (taken or not)","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"public class DailyMedication {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"    private String name;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"    private boolean isTaken;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"     * Constructs DailyMedication with medication name and status of daily medication (taken or not)","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"     * @param name Name of the medication to be taken","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    public DailyMedication(String name) {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"        this.isTaken \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    public String getName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"        return name;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"    public boolean isTaken() {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"        return isTaken;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"    public void take() {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        isTaken \u003d true;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"    public void untake() {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        isTaken \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        String takenIcon \u003d isTaken ? \"[X]\" : \"[ ]\"; // X identify medication as taken","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"        return String.format(\"%s %s\", takenIcon, name);","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"// @@author","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"T0nyLin":46,"wenenhoe":1}},{"path":"src/main/java/meditracker/dailymedication/DailyMedicationManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package meditracker.dailymedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InsufficientQuantityException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":" * Manages a list of DailyMedication and CRUD-operations (Create, Read, Update, Delete)","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":" *","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":" * @see DailyMedication","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"public class DailyMedicationManager {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"    private static final List\u003cDailyMedication\u003e morningMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    private static final List\u003cDailyMedication\u003e afternoonMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"    private static final List\u003cDailyMedication\u003e eveningMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    private static final LocalDate currentDate \u003d MediTrackerTime.getCurrentDate();","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"     * Prevents defaulting to the public constructor","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"     * that allows instantiation of the DailyMedicationManager class","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"    private DailyMedicationManager() {","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"     * Creates DailyMedicationManager to save medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"     * so that program can output to textfile","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"     * @see DailyMedication","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"e0958902"},"content":"    public static void createDailyMedicationManager() {","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"e0958902"},"content":"        for (Medication medication : MedicationManager.getMedications()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"            if (doesBelongToDailyList(medication)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"                addToSubLists(medication);","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"     * Reads each lines from textfile to process and save into DailyMedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"     * @param lines lines of String read from each row in the textfile","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"    public static void importDailyMedicationManager(List\u003cString\u003e lines) {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"                parseImportedLine(line);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"Error\" + e.getMessage());","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"     * Separates each row by the separator and add into the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"     * @param line each line read from the textfile","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"     * @return dailyMedication object to add into the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"    private static void parseImportedLine(String line) {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"        String[] fields \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"        boolean isTaken \u003d Boolean.parseBoolean(fields[1].trim());","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(fields[2].trim());","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"        if (isTaken) {","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"            dailyMedication.take();","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"            dailyMedication.untake();","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"        addImportToSubLists(fields[0], dailyMedication);","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"     * Imports data from the read text file","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"     * @param period time of the day","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"     * @param dailyMedication daily medication to be taken for the day to add to respective sub lists","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"    private static void addImportToSubLists(String period, DailyMedication dailyMedication) {","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"        if (period.equals(\"M\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"T0nyLin"},"content":"        } else if (period.equals(\"A\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.AFTERNOON);","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"T0nyLin"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.EVENING);","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"T0nyLin"},"content":"     * Clears and resets DailyMedicationManager for testing purpose","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"T0nyLin"},"content":"    protected static void clearDailyMedication() {","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"T0nyLin"},"content":"        morningMedications.clear();","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"T0nyLin"},"content":"        afternoonMedications.clear();","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"T0nyLin"},"content":"        eveningMedications.clear();","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"T0nyLin"},"content":"     * Adds a DailyMedication to the list of DailyMedication","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"T0nyLin"},"content":"     * @param dailyMedication DailyMedication to be added to the list","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"T0nyLin"},"content":"    public static void addDailyMedication(DailyMedication dailyMedication, Period period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"T0nyLin"},"content":"        switch (period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"T0nyLin"},"content":"        case MORNING:","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"T0nyLin"},"content":"            morningMedications.add(dailyMedication);","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"T0nyLin"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"T0nyLin"},"content":"            afternoonMedications.add(dailyMedication);","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"T0nyLin"},"content":"        case EVENING:","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"T0nyLin"},"content":"            eveningMedications.add(dailyMedication);","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"Cannot add to sublist\");","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"     * Removes the DailyMedication object in the corresponding Period list that","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"     * matches the specified name.","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the DailyMedications object to get","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException No DailyMedication matching specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"    public static void removeDailyMedication(String name, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"            throws MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d getDailyMedicationIndex(name, period);","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"        switch (period) {","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"        case MORNING:","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"            morningMedications.remove(listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"            afternoonMedications.remove(listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"        case EVENING:","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"            eveningMedications.remove(listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"        default:","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + period);","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"T0nyLin"},"content":"     * Gets the DailyMedication object from the morning/afternoon/evening lists","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"T0nyLin"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"T0nyLin"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"T0nyLin"},"content":"     * @return DailyMedication object at the corresponding index (0-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"T0nyLin"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"T0nyLin"},"content":"    public static DailyMedication getDailyMedication(int listIndex, Period period) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"T0nyLin"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"T0nyLin"},"content":"        switch (period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"T0nyLin"},"content":"        case MORNING:","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"T0nyLin"},"content":"            return morningMedications.get(listIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"T0nyLin"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"T0nyLin"},"content":"            return afternoonMedications.get(listIndex);","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"T0nyLin"},"content":"        case EVENING:","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"T0nyLin"},"content":"            return eveningMedications.get(listIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"T0nyLin"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + period);","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"wenenhoe"},"content":"     * Gets the DailyMedication object from the morning/afternoon/evening lists","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the DailyMedications object to get","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"wenenhoe"},"content":"     * @return DailyMedication object that matches the specified name","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException No DailyMedication matching specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"wenenhoe"},"content":"    public static DailyMedication getDailyMedication(String name, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"wenenhoe"},"content":"            throws IndexOutOfBoundsException, MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d getDailyMedicationIndex(name, period); // 0-based indexing","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"wenenhoe"},"content":"        listIndex++; // Convert to 1-based indexing","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"wenenhoe"},"content":"        return getDailyMedication(listIndex, period);","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"wenenhoe"},"content":"     * Gets the DailyMedication index in the morning/afternoon/evening lists","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the DailyMedications object to get","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"wenenhoe"},"content":"     * @return Index of the DailyMedication object that matches the specified name","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException No DailyMedication matching specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"wenenhoe"},"content":"    public static int getDailyMedicationIndex(String name, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"wenenhoe"},"content":"            throws MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"wenenhoe"},"content":"        List\u003cDailyMedication\u003e dailyMedications \u003d getDailyMedications(period);","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"wenenhoe"},"content":"        for (int i \u003d 0; i \u003c dailyMedications.size(); i++) {","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"wenenhoe"},"content":"            DailyMedication dailyMedication \u003d dailyMedications.get(i);","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"wenenhoe"},"content":"            if (dailyMedication.getName().equals(name)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"wenenhoe"},"content":"                return i;","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"wenenhoe"},"content":"        throw new MedicationNotFoundException();","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"wenenhoe"},"content":"     * Gets the relevant list of DailyMedication objects depending on the time period of day","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"wenenhoe"},"content":"     * @return The relevant list of DailyMedication objects","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"T0nyLin"},"content":"    public static List\u003cDailyMedication\u003e getDailyMedications(Period period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"T0nyLin"},"content":"        switch (period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"T0nyLin"},"content":"        case MORNING:","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"T0nyLin"},"content":"            return morningMedications;","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"T0nyLin"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"T0nyLin"},"content":"            return afternoonMedications;","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"T0nyLin"},"content":"        case EVENING:","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"T0nyLin"},"content":"            return eveningMedications;","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"T0nyLin"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + period);","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"T0nyLin"},"content":"     * Prints all medications to be taken today","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"T0nyLin"},"content":"     * @param medications list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"T0nyLin"},"content":"    public static void printTodayMedications(List\u003cMedication\u003e medications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(\"Here are the Daily Medications you have to take today: \");","lastModifiedDate":"2024-03-28"},{"lineNumber":239,"author":{"gitId":"T0nyLin"},"content":"        printTodayMedications(medications, morningMedications, \"Morning:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":240,"author":{"gitId":"T0nyLin"},"content":"        printTodayMedications(medications, afternoonMedications, \"Afternoon:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":241,"author":{"gitId":"T0nyLin"},"content":"        printTodayMedications(medications, eveningMedications, \"Evening:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":242,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":244,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":245,"author":{"gitId":"T0nyLin"},"content":"     * Prints the sub lists according to the period of the day","lastModifiedDate":"2024-03-28"},{"lineNumber":246,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":247,"author":{"gitId":"T0nyLin"},"content":"     * @param medications list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"T0nyLin"},"content":"     * @param subList sublist of daily medication","lastModifiedDate":"2024-03-28"},{"lineNumber":249,"author":{"gitId":"T0nyLin"},"content":"     * @param period time of the day","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":251,"author":{"gitId":"T0nyLin"},"content":"    public static void printTodayMedications(List\u003cMedication\u003e medications,","lastModifiedDate":"2024-03-28"},{"lineNumber":252,"author":{"gitId":"T0nyLin"},"content":"                                             List\u003cDailyMedication\u003e subList, String period) {","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"T0nyLin"},"content":"        if (!subList.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(period);","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"T0nyLin"},"content":"            Ui.printMedsLists(medications, subList, period);","lastModifiedDate":"2024-03-28"},{"lineNumber":256,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"T0nyLin"},"content":"     * Fetches the corresponding DailyMedication and set the medication to taken","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"T0nyLin"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException If listIndex is outside of range of DailyMedication list","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"wenenhoe"},"content":"     * @throws InsufficientQuantityException Existing quantity insufficient for operation","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException Medication object not found, unable to decrease quantity","lastModifiedDate":"2024-04-02"},{"lineNumber":267,"author":{"gitId":"T0nyLin"},"content":"     * @see DailyMedication#take()","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":269,"author":{"gitId":"wenenhoe"},"content":"    public static void takeDailyMedication(int listIndex, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":270,"author":{"gitId":"wenenhoe"},"content":"            throws IndexOutOfBoundsException, InsufficientQuantityException, MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":271,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d DailyMedicationManager.getDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"wenenhoe"},"content":"        if (dailyMedication.isTaken()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"wenenhoe"},"content":"            return; // Already taken, do not need to run additional code","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":275,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":276,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.decreaseMedicationQuantity(dailyMedication.getName(), period);","lastModifiedDate":"2024-03-30"},{"lineNumber":277,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"wenenhoe"},"content":"        dailyMedication.take();","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"T0nyLin"},"content":"        FileReaderWriter.saveDailyMedicationData(DailyMedicationManager.getDailyMedicationStringData());","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":281,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":282,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":283,"author":{"gitId":"T0nyLin"},"content":"     * Fetches the corresponding DailyMedication and set the medication to not taken","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":285,"author":{"gitId":"T0nyLin"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException If listIndex is outside of range of DailyMedication list","lastModifiedDate":"2024-04-02"},{"lineNumber":288,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException Medication object not found, unable to increase quantity","lastModifiedDate":"2024-04-02"},{"lineNumber":289,"author":{"gitId":"T0nyLin"},"content":"     * @see DailyMedication#untake()","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":291,"author":{"gitId":"wenenhoe"},"content":"    public static void untakeDailyMedication(int listIndex, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":292,"author":{"gitId":"wenenhoe"},"content":"            throws IndexOutOfBoundsException, MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":293,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d DailyMedicationManager.getDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"wenenhoe"},"content":"        if (!dailyMedication.isTaken()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"wenenhoe"},"content":"            return; // Already untaken, do not need to run additional code","lastModifiedDate":"2024-04-02"},{"lineNumber":296,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":297,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.increaseMedicationQuantity(dailyMedication.getName(), period);","lastModifiedDate":"2024-03-30"},{"lineNumber":299,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":300,"author":{"gitId":"wenenhoe"},"content":"        dailyMedication.untake();","lastModifiedDate":"2024-04-02"},{"lineNumber":301,"author":{"gitId":"T0nyLin"},"content":"        FileReaderWriter.saveDailyMedicationData(DailyMedicationManager.getDailyMedicationStringData());","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":303,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":304,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":305,"author":{"gitId":"T0nyLin"},"content":"     * Takes each DailyMedication object and adds to string of each object","lastModifiedDate":"2024-03-28"},{"lineNumber":306,"author":{"gitId":"T0nyLin"},"content":"     * to a list of String and return","lastModifiedDate":"2024-03-28"},{"lineNumber":307,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":308,"author":{"gitId":"T0nyLin"},"content":"     * @return A list of DailyMedication object to string","lastModifiedDate":"2024-03-28"},{"lineNumber":309,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":310,"author":{"gitId":"T0nyLin"},"content":"    public static List\u003cString\u003e getDailyMedicationStringData() {","lastModifiedDate":"2024-03-28"},{"lineNumber":311,"author":{"gitId":"T0nyLin"},"content":"        List\u003cString\u003e dailyMedicationStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":312,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication morningMedication : morningMedications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":313,"author":{"gitId":"T0nyLin"},"content":"            dailyMedicationStrings.add(\"M|\" + morningMedication.isTaken() + \"|\" + morningMedication.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":314,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":315,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication afternoonMedication : afternoonMedications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":316,"author":{"gitId":"T0nyLin"},"content":"            dailyMedicationStrings.add(\"A|\" + afternoonMedication.isTaken() + \"|\" + afternoonMedication.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":317,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":318,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication eveningMedication : eveningMedications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":319,"author":{"gitId":"T0nyLin"},"content":"            dailyMedicationStrings.add(\"E|\" + eveningMedication.isTaken() + \"|\" + eveningMedication.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":320,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":321,"author":{"gitId":"T0nyLin"},"content":"        return dailyMedicationStrings;","lastModifiedDate":"2024-03-28"},{"lineNumber":322,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":323,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":324,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":325,"author":{"gitId":"T0nyLin"},"content":"     * Checks if added medication is to be taken at morning/afternoon/evening","lastModifiedDate":"2024-03-28"},{"lineNumber":326,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":327,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":328,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":329,"author":{"gitId":"T0nyLin"},"content":"    public static void checkForDaily(Medication medication) {","lastModifiedDate":"2024-03-28"},{"lineNumber":330,"author":{"gitId":"wenenhoe"},"content":"        if (doesBelongToDailyList(medication)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":331,"author":{"gitId":"T0nyLin"},"content":"            addToSubLists(medication);","lastModifiedDate":"2024-03-28"},{"lineNumber":332,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":333,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":334,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":335,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":336,"author":{"gitId":"T0nyLin"},"content":"     * Returns boolean if medication can be added to today\u0027s daily list based on the repeat setting","lastModifiedDate":"2024-03-28"},{"lineNumber":337,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":338,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":339,"author":{"gitId":"T0nyLin"},"content":"     * @return true if medication can be added to today\u0027s list","lastModifiedDate":"2024-03-28"},{"lineNumber":340,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":341,"author":{"gitId":"wenenhoe"},"content":"    public static boolean doesBelongToDailyList(Medication medication) {","lastModifiedDate":"2024-04-03"},{"lineNumber":342,"author":{"gitId":"T0nyLin"},"content":"        int num \u003d medication.getRepeat();","lastModifiedDate":"2024-03-29"},{"lineNumber":343,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":344,"author":{"gitId":"T0nyLin"},"content":"        switch (num) {","lastModifiedDate":"2024-03-29"},{"lineNumber":345,"author":{"gitId":"T0nyLin"},"content":"        case 1:","lastModifiedDate":"2024-03-29"},{"lineNumber":346,"author":{"gitId":"T0nyLin"},"content":"            return true;                     //everyday","lastModifiedDate":"2024-03-28"},{"lineNumber":347,"author":{"gitId":"T0nyLin"},"content":"        case 2:","lastModifiedDate":"2024-03-29"},{"lineNumber":348,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 2); //every 2 days","lastModifiedDate":"2024-03-28"},{"lineNumber":349,"author":{"gitId":"T0nyLin"},"content":"        case 3:","lastModifiedDate":"2024-03-29"},{"lineNumber":350,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 3); //every 3 days","lastModifiedDate":"2024-03-28"},{"lineNumber":351,"author":{"gitId":"T0nyLin"},"content":"        case 4:","lastModifiedDate":"2024-03-29"},{"lineNumber":352,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 4); //every 4 days","lastModifiedDate":"2024-03-28"},{"lineNumber":353,"author":{"gitId":"T0nyLin"},"content":"        case 5:","lastModifiedDate":"2024-03-29"},{"lineNumber":354,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 5); //every 5 days","lastModifiedDate":"2024-03-29"},{"lineNumber":355,"author":{"gitId":"T0nyLin"},"content":"        case 6:","lastModifiedDate":"2024-03-29"},{"lineNumber":356,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 6); //every 6 days","lastModifiedDate":"2024-03-29"},{"lineNumber":357,"author":{"gitId":"T0nyLin"},"content":"        case 7:","lastModifiedDate":"2024-03-29"},{"lineNumber":358,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 7); //every 7 days","lastModifiedDate":"2024-03-28"},{"lineNumber":359,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-28"},{"lineNumber":360,"author":{"gitId":"T0nyLin"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":361,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":362,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":363,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":364,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":365,"author":{"gitId":"T0nyLin"},"content":"     * Determines the difference between today\u0027s date and the date medication was added","lastModifiedDate":"2024-03-28"},{"lineNumber":366,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":367,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":368,"author":{"gitId":"T0nyLin"},"content":"     * @param n repeat set by user","lastModifiedDate":"2024-03-28"},{"lineNumber":369,"author":{"gitId":"T0nyLin"},"content":"     * @return true if the modulus of the date difference is 0","lastModifiedDate":"2024-03-28"},{"lineNumber":370,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":371,"author":{"gitId":"T0nyLin"},"content":"    private static boolean isNDay(Medication medication, int n) {","lastModifiedDate":"2024-03-28"},{"lineNumber":372,"author":{"gitId":"T0nyLin"},"content":"        int dateNum \u003d medication.getDayAdded();","lastModifiedDate":"2024-03-28"},{"lineNumber":373,"author":{"gitId":"T0nyLin"},"content":"        int currentDayValue \u003d currentDate.getDayOfYear();","lastModifiedDate":"2024-03-28"},{"lineNumber":374,"author":{"gitId":"T0nyLin"},"content":"        int daysDiff \u003d currentDayValue - dateNum;","lastModifiedDate":"2024-03-28"},{"lineNumber":375,"author":{"gitId":"T0nyLin"},"content":"        return daysDiff % n \u003d\u003d 0;       //modulo to find out if dailyMedication can be added to today\u0027s list","lastModifiedDate":"2024-03-28"},{"lineNumber":376,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":377,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":378,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":379,"author":{"gitId":"T0nyLin"},"content":"     * Adds dailyMedication into sub list morning/afternoon/evening","lastModifiedDate":"2024-03-28"},{"lineNumber":380,"author":{"gitId":"T0nyLin"},"content":"     * and writes into the text file","lastModifiedDate":"2024-03-28"},{"lineNumber":381,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":382,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":383,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":384,"author":{"gitId":"T0nyLin"},"content":"    private static void addToSubLists(Medication medication) {","lastModifiedDate":"2024-03-28"},{"lineNumber":385,"author":{"gitId":"T0nyLin"},"content":"        if (medication.getDosageMorning() !\u003d 0.0) {","lastModifiedDate":"2024-03-28"},{"lineNumber":386,"author":{"gitId":"T0nyLin"},"content":"            DailyMedication dailyMedication \u003d new DailyMedication(medication.getName());","lastModifiedDate":"2024-04-03"},{"lineNumber":387,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":388,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":389,"author":{"gitId":"T0nyLin"},"content":"        if (medication.getDosageAfternoon() !\u003d 0.0) {","lastModifiedDate":"2024-03-28"},{"lineNumber":390,"author":{"gitId":"T0nyLin"},"content":"            DailyMedication dailyMedication \u003d new DailyMedication(medication.getName());","lastModifiedDate":"2024-04-03"},{"lineNumber":391,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.AFTERNOON);","lastModifiedDate":"2024-03-29"},{"lineNumber":392,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":393,"author":{"gitId":"T0nyLin"},"content":"        if (medication.getDosageEvening() !\u003d 0.0) {","lastModifiedDate":"2024-03-28"},{"lineNumber":394,"author":{"gitId":"T0nyLin"},"content":"            DailyMedication dailyMedication \u003d new DailyMedication(medication.getName());","lastModifiedDate":"2024-04-03"},{"lineNumber":395,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.EVENING);","lastModifiedDate":"2024-03-29"},{"lineNumber":396,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":397,"author":{"gitId":"T0nyLin"},"content":"        FileReaderWriter.saveDailyMedicationData(getDailyMedicationStringData());","lastModifiedDate":"2024-03-28"},{"lineNumber":398,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":399,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"e0958902":9,"annoy-o-mus":3,"T0nyLin":286,"wenenhoe":101}},{"path":"src/main/java/meditracker/exception/ArgumentNoValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentNoValueException extends Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentNoValueException(String errorContext) {","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"        super(errorContext);","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"wenenhoe":7}},{"path":"src/main/java/meditracker/exception/ArgumentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Exception to be thrown when required argument not found by ArgumentParser","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentNotFoundException extends Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentNotFoundException(String errorContext) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(errorContext);","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"    public ArgumentNotFoundException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"kyuichyi":3,"wenenhoe":10}},{"path":"src/main/java/meditracker/exception/CommandNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"// @@author nickczh","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"public class CommandNotFoundException extends Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"        return \"Invalid MediTracker command! Please refer to the user guide.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"// @@author","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"nickczh":8,"wenenhoe":2}},{"path":"src/main/java/meditracker/exception/DuplicateArgumentFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Exception to be thrown when duplicate argument found by ArgumentParser","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class DuplicateArgumentFoundException extends Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public DuplicateArgumentFoundException(String errorContext) {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(errorContext);","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"wenenhoe":10}},{"path":"src/main/java/meditracker/exception/FileReadWriteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":" * Exception related to the reading and writing to the file and directories.","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"public class FileReadWriteException extends Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"    public FileReadWriteException(String errorMessage) {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"        super(errorMessage);","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"annoy-o-mus":11}},{"path":"src/main/java/meditracker/exception/HelpInvokedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"public class HelpInvokedException extends Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"wenenhoe":4}},{"path":"src/main/java/meditracker/exception/InsufficientQuantityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"public class InsufficientQuantityException extends Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"    Double dosage;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"    Double quantity;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public InsufficientQuantityException(double dosage, double quantity) {","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public String getMessage() {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        return String.format(","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"                \"Insufficient quantity. Dosage Required -\u003e %.1f, Quantity Available -\u003e %.1f\",","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"                quantity);","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"wenenhoe":19}},{"path":"src/main/java/meditracker/exception/InvalidSimulatedTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.exception;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":" * An exception class thrown when the input does not fulfil the format of the simulated time.","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"public class InvalidSimulatedTimeException extends Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"    private final String specificErrorMessage;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"    public InvalidSimulatedTimeException(String specificErrorMessage) {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"        this.specificErrorMessage \u003d specificErrorMessage;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"    public String getMessage() {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"        String correctSyntaxMessage \u003d \"Please provide the simulated time in the following format: \"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"                + \"YYYY-MM-DDTHH:MM:SSZ\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"        String usageExampleMessage \u003d \"Examples: 2021-01-01T21:13:00Z, 2024-04-29T04:05:06Z\";","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"        return specificErrorMessage + System.lineSeparator() + correctSyntaxMessage","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"                + System.lineSeparator() + usageExampleMessage;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"annoy-o-mus":22}},{"path":"src/main/java/meditracker/exception/MediTrackerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * The MediTrackerException class represents an exception specific to the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * It extends the Exception class.","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class MediTrackerException extends Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a new MediTrackerException with the specified error context.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     * @param errorContext The error context describing the exception.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    public MediTrackerException(String errorContext) {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"        super(errorContext);","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":17}},{"path":"src/main/java/meditracker/exception/MedicationNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"public class MedicationNotFoundException extends Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"wenenhoe":4}},{"path":"src/main/java/meditracker/exception/UnknownArgumentFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"public class UnknownArgumentFoundException extends Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"    public UnknownArgumentFoundException(String errorContext) {","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"        super(errorContext);","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"wenenhoe":7}},{"path":"src/main/java/meditracker/library/LibraryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.library;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":" * Manages the searching of medications in the medication library.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"public class LibraryManager {","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"    private static final String FILE_PATH \u003d \"/medicationLibrary.txt\";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"    private static final List\u003cSearchResult\u003e medicationLibrary \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"    static {","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"        loadMedicationLibrary();","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":"    public LibraryManager() {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"kyuichyi"},"content":"     * Loads the medication library from a text file.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"kyuichyi"},"content":"    private static void loadMedicationLibrary() {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"kyuichyi"},"content":"        InputStream file \u003d LibraryManager.class.getResourceAsStream(FILE_PATH);","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"kyuichyi"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kyuichyi"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kyuichyi"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kyuichyi"},"content":"            String[] medicationDetails \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kyuichyi"},"content":"            medicationLibrary.add(new SearchResult(medicationDetails[0], medicationDetails[1], medicationDetails[2]));","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"kyuichyi"},"content":"     * Searches for medications in the library based on a keyword.","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults The list to store the search results.","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"kyuichyi"},"content":"     * @param keyword       The keyword to search for in the medication library.","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"kyuichyi"},"content":"    public void searchLibrary(List\u003cSearchResult\u003e searchResults, String keyword) {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"kyuichyi"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"kyuichyi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"kyuichyi"},"content":"        searchResults.clear();","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"        for (int i \u003d 0; i \u003c medicationLibrary.size(); i++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"kyuichyi"},"content":"            SearchResult medication \u003d medicationLibrary.get(i);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"kyuichyi"},"content":"            if (medication.getAllMedicationDetails().toLowerCase().contains(keyword)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"kyuichyi"},"content":"                searchResults.add(medication);","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"kyuichyi"},"content":"     * Searches medication names in the library based on a keyword.","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults The list of search results to store the search results.","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"kyuichyi"},"content":"     * @param keyword       The keyword to search for in the medication library.","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"kyuichyi"},"content":"    public void findMedication(List\u003cSearchResult\u003e searchResults, String keyword) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"kyuichyi"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kyuichyi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"kyuichyi"},"content":"        searchResults.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"kyuichyi"},"content":"        for (int i \u003d 0; i \u003c medicationLibrary.size(); i++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"kyuichyi"},"content":"            SearchResult medication \u003d medicationLibrary.get(i);","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"kyuichyi"},"content":"            if (medication.getName().toLowerCase().contains(keyword)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"kyuichyi"},"content":"                searchResults.add(medication);","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"kyuichyi"},"content":"     * Searches for medications based on the illness they treat.","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults The list of search results to store the search results.","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"kyuichyi"},"content":"     * @param keyword       The keyword to search for in the medication library.","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"kyuichyi"},"content":"    public void findIllness(List\u003cSearchResult\u003e searchResults, String keyword) {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"kyuichyi"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"kyuichyi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"kyuichyi"},"content":"        searchResults.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"kyuichyi"},"content":"        for (int i \u003d 0; i \u003c medicationLibrary.size(); i++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"kyuichyi"},"content":"            SearchResult medication \u003d medicationLibrary.get(i);","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"kyuichyi"},"content":"            if (medication.getIllness().toLowerCase().contains(keyword)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"kyuichyi"},"content":"                searchResults.add(medication);","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"kyuichyi"},"content":"     * Searches for medications based on their side effects.","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults The list of search results to store the search results.","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"kyuichyi"},"content":"     * @param keyword       The keyword to search for in the medication library.","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"kyuichyi"},"content":"    public void findSideEffects(List\u003cSearchResult\u003e searchResults, String keyword) {","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"kyuichyi"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"kyuichyi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"kyuichyi"},"content":"        searchResults.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"kyuichyi"},"content":"        for (int i \u003d 0; i \u003c medicationLibrary.size(); i++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"kyuichyi"},"content":"            SearchResult medication \u003d medicationLibrary.get(i);","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"kyuichyi"},"content":"            if (medication.getSideEffects().toLowerCase().contains(keyword)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"kyuichyi"},"content":"                searchResults.add(medication);","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"kyuichyi"},"content":"     * Prints the search results to the user interface.","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults The list of search results to print.","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"kyuichyi"},"content":"    public void printSearchResults(List\u003cSearchResult\u003e searchResults) {","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"kyuichyi"},"content":"        if (searchResults.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"nickczh"},"content":"            Ui.showNoSearchResultsMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"kyuichyi"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"nickczh"},"content":"            Ui.showSearchResults(searchResults);","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"nickczh":2,"kyuichyi":124}},{"path":"src/main/java/meditracker/library/SearchResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.library;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":" * Represents a search result containing details about a medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"public class SearchResult {","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"    private final String name;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"    private final String illness;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"    private final String sideEffects;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"     * Constructs a SearchResult object with the specified medication details.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"     * @param name The name of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"     * @param illness The illness(es) the medication is used to treat.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"     * @param sideEffects The possible side effects of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"    public SearchResult(String name, String illness, String sideEffects) {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"        this.illness \u003d illness;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"        this.sideEffects \u003d sideEffects;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":"     * Returns a string containing all the details of the medication.","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kyuichyi"},"content":"     * @return A string in the format \"name | illness | sideEffects\".","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kyuichyi"},"content":"    public String getAllMedicationDetails() {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kyuichyi"},"content":"        return this.name + \"|\" + this.illness + \"|\" + this.sideEffects;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"kyuichyi"},"content":"     * Gets the name of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"kyuichyi"},"content":"     * @return The name of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"kyuichyi"},"content":"    public String getName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"kyuichyi"},"content":"        return this.name;","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"kyuichyi"},"content":"     * Gets the illness(es) the medication is used to treat.","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"kyuichyi"},"content":"     * @return The illness(es) the medication is used to treat.","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"    public String getIllness() {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"kyuichyi"},"content":"        return this.illness;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"kyuichyi"},"content":"     * Gets the possible side effects of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"kyuichyi"},"content":"     * @return The possible side effects of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"kyuichyi"},"content":"    public String getSideEffects() {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"kyuichyi"},"content":"        return this.sideEffects;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"kyuichyi"},"content":"     * Overrides the toString method for the SearchResult class.","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"kyuichyi"},"content":"     * @return A string representation of the SearchResult object,","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"kyuichyi"},"content":"     *         including the name of the medication, the illness it treats,","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kyuichyi"},"content":"     *         and its possible side effects.","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"kyuichyi"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"kyuichyi"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"kyuichyi"},"content":"        return getName() + \"; Treats: \" + getIllness() + \"; May cause: \" + getSideEffects();","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"kyuichyi":71}},{"path":"src/main/java/meditracker/logging/MediLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.logging;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":" * Main Logging class to get the logger for logging outputs to the console.","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"public class MediLogger {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"    private static final String MEDILOGGER_NAME \u003d \"MediLogger\";","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    private static Logger mediLogger \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"     * Gets the default logger for the MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"     * If for some reason the default logger is not initialised when this function is called,","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"     * initialise the default logger and logs a warning.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The default logger for MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    public static Logger getMediLogger() {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"        if (mediLogger \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"            initialiseLogger();","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"            mediLogger.warning(\"Logger initialised from unintended function\");","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"        assert mediLogger !\u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"        return mediLogger;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     * Initialises the default logger to be used for the MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * The logger will send all the logging messages to the console.","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     * Currently, no support to write to a dedicated log file.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"    public static void initialiseLogger() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"        if (mediLogger !\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"            mediLogger.warning(\"Logger \" + MEDILOGGER_NAME + \" has been initialised already\");","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        mediLogger \u003d Logger.getLogger(MEDILOGGER_NAME);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        mediLogger.info(\"Logger initialised\");","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"annoy-o-mus":42}},{"path":"src/main/java/meditracker/medication/Medication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"// @@author nickczh","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * The Medication class represents a medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" * It stores information about the medication such as name, quantity, dosage, expiry date, intake frequency, remarks,","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":" * and whether it has been taken.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"public class Medication {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"    // Medication attributes are intentionally declared String. To be modified later.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"    private String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    private Double quantity;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    private Double dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    private Double dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    private Double dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"    private String expiryDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    private String remarks;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"    private int repeat;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"    private int dayAdded;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"     * Constructs a new Medication object with default placeholder values.","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"     * Used by MedicationManager to populate medication data from the save file.","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"    public Medication() {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"        final double placeholderValue \u003d -1.0;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"        setName(\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"        setQuantity(placeholderValue);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"        setDosageMorning(placeholderValue);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"        setDosageAfternoon(placeholderValue);","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"        setDosageEvening(placeholderValue);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"        setExpiryDate(\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"        setRemarks(\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"        setRepeat((int) placeholderValue);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"        setDayAdded((int) placeholderValue);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"     * Constructs a Medication object with the specified information.","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"     * @param name The name of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"     * @param quantity The quantity of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"     * @param dosageMorning The morning dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"     * @param dosageAfternoon The afternoon dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"     * @param dosageEvening The evening dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"     * @param expiryDate The expiry date of the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"     * @param remarks Any remarks or notes about the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"     * @param repeat The repeat frequency of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"    public Medication(String name, Double quantity,","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"                      Double dosageMorning, Double dosageAfternoon, Double dosageEvening,","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"                      String expiryDate, String remarks, int repeat, int dayAdded) {","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"        this.dosageMorning \u003d dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"        this.dosageAfternoon \u003d dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"        this.dosageEvening \u003d dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"        this.repeat \u003d repeat;","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"        this.dayAdded \u003d dayAdded;","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"    public String getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"nickczh"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"    public Double getQuantity() {","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"nickczh"},"content":"        return quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"nickczh"},"content":"    public void setQuantity(Double quantity) {","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"nickczh"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"    public Double getDosageMorning() {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"nickczh"},"content":"        return dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"nickczh"},"content":"    public void setDosageMorning(Double dosageMorning) {","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"nickczh"},"content":"        this.dosageMorning \u003d dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"nickczh"},"content":"    public Double getDosageAfternoon() {","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"nickczh"},"content":"        return dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"nickczh"},"content":"    public void setDosageAfternoon(Double dosageAfternoon) {","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"nickczh"},"content":"        this.dosageAfternoon \u003d dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"nickczh"},"content":"    public Double getDosageEvening() {","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"nickczh"},"content":"        return dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"nickczh"},"content":"    public void setDosageEvening(Double dosageEvening) {","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"nickczh"},"content":"        this.dosageEvening \u003d dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"nickczh"},"content":"    public String getExpiryDate() {","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"nickczh"},"content":"        return expiryDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"nickczh"},"content":"    public void setExpiryDate(String expiryDate) {","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"nickczh"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"nickczh"},"content":"    public String getRemarks() {","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"nickczh"},"content":"        return remarks;","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"nickczh"},"content":"    public void setRemarks(String remarks) {","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"nickczh"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"nickczh"},"content":"    public int getRepeat() {","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"nickczh"},"content":"        return repeat;","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"nickczh"},"content":"    public void setRepeat(int repeat) {","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"nickczh"},"content":"        this.repeat \u003d repeat;","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"nickczh"},"content":"    public int getDayAdded() {","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"nickczh"},"content":"        return dayAdded;","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"nickczh"},"content":"    public void setDayAdded(int dayAdded) {","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"nickczh"},"content":"        this.dayAdded \u003d dayAdded;","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"nickczh"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"nickczh"},"content":"        return getName() + \" | \" + getQuantity() +  \" | \" + getExpiryDate() + \" | \" + getRemarks();","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"nickczh"},"content":"     * Replaces Medication info with the specified Medication object info","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"nickczh"},"content":"     * @param medication Medication object values to replace with","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"nickczh"},"content":"    public void revertMedication(Medication medication) {","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"nickczh"},"content":"        setName(medication.getName());","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"nickczh"},"content":"        setQuantity(medication.getQuantity());","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"nickczh"},"content":"        setDosageMorning(medication.getDosageMorning());","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"nickczh"},"content":"        setDosageAfternoon(medication.getDosageAfternoon());","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"nickczh"},"content":"        setDosageEvening(medication.getDosageEvening());","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"nickczh"},"content":"        setExpiryDate(medication.getExpiryDate());","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"nickczh"},"content":"        setRemarks(medication.getRemarks());","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"nickczh"},"content":"        setRepeat(medication.getRepeat());","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"nickczh"},"content":"        setDayAdded(medication.getDayAdded());","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"nickczh"},"content":"     * Makes a deep copy of the specified Medication object","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"nickczh"},"content":"     * @param medication Medication object to deep copy","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"nickczh"},"content":"     * @return A deep copy of the specified Medication object","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"nickczh"},"content":"    public static Medication deepCopy(Medication medication) {","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"nickczh"},"content":"        Medication newMedication \u003d new Medication();","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"nickczh"},"content":"        newMedication.setName(medication.getName());","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"nickczh"},"content":"        newMedication.setQuantity(medication.getQuantity());","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"nickczh"},"content":"        newMedication.setDosageMorning(medication.getDosageMorning());","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"nickczh"},"content":"        newMedication.setDosageAfternoon(medication.getDosageAfternoon());","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"nickczh"},"content":"        newMedication.setDosageEvening(medication.getDosageEvening());","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"nickczh"},"content":"        newMedication.setExpiryDate(medication.getExpiryDate());","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"nickczh"},"content":"        newMedication.setRemarks(medication.getRemarks());","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"nickczh"},"content":"        newMedication.setRepeat(medication.getRepeat());","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"nickczh"},"content":"        newMedication.setDayAdded(medication.getDayAdded());","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"nickczh"},"content":"        return newMedication;","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"nickczh"},"content":"// @@author","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"nickczh":181}},{"path":"src/main/java/meditracker/medication/MedicationManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InsufficientQuantityException;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":" * The MedicationManager class represents a list of medications.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":" * It contains an ArrayList of Medication objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"public class MedicationManager {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    private static Logger logger \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    /** The list of medications stored in an ArrayList. */","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"    private static List\u003cMedication\u003e medications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"     * Prevents defaulting to the public constructor","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"     * that allows instantiation of the MedicationManager class","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"    private MedicationManager() {","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"     * Gets the size of list of medications","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"     * @return Total number of medications","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"    public static Integer getTotalMedications() {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"e0958902"},"content":"        return medications.size();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"     * Clears and resets MedicationManager","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"     * Used by tests and overwriting from the JSON save file.","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"    protected static void clearMedication() {","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"e0958902"},"content":"        medications.clear();","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * Adds a Medication to the list of Medication","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication to be added to the list","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"e0958902"},"content":"    public static void addMedication(Medication medication) {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        medications.add(medication);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveMediTrackerData(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"     * Gets the Medication object from the medications list.","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"     * @param listIndex Index of the medications list to get (1-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"     * @return Medication object at the corresponding index (0-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"e0958902"},"content":"    public static Medication getMedication(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        return medications.get(listIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"     * Gets the Medication object from the medications list.","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"     * Uses the Medication name to retrieve from the list.","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the medication to retrieve","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"     * @return Corresponding Medication object with the matched name","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException No Medication matching the specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"    public static Medication getMedication(String name) throws MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"        for (Medication medication : medications) {","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"            if (medication.getName().equals(name)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"                return medication;","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"        throw new MedicationNotFoundException();","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"e0958902"},"content":"    public static List\u003cMedication\u003e getMedications() {","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"        return medications;","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"     * Deletes the Medication object from the medications list.","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"     * @param listIndex Index of the medications list to delete (1-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"e0958902"},"content":"    public static void removeMedication(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"        medications.remove(listIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveMediTrackerData(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"     * Gets the dosage from the Medication object based the specified Period","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication object to obtain the dosage from","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day to reference","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"     * @return The appropriate dosage depending on the time Period","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"    public static Double getMedicationDosage(Medication medication, Period period) {","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"        double dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"        switch (period) {","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"        case MORNING:","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d medication.getDosageMorning();","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d medication.getDosageAfternoon();","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"        case EVENING:","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d medication.getDosageEvening();","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"        case UNKNOWN:","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"        case NONE:","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"        default:","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d 0.0;","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"        return dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"e0958902"},"content":"     * Shows the number of medications in the medication list.","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"e0958902"},"content":"     * Also lists all the medications in the medication list.","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"e0958902"},"content":"    public static void printAllMedications() {","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"e0958902"},"content":"        assert medications !\u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"e0958902"},"content":"        System.out.println(\"You have \" + MedicationManager.getTotalMedications()","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"e0958902"},"content":"                + \" medications listed below.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"e0958902"},"content":"        System.out.println(\"Format: Name | Quantity | Expiry Date | Remarks\");","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"T0nyLin"},"content":"        Ui.printMedsList(medications);","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"e0958902"},"content":"     * Prints the specific medication specific according to the medication list index","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"e0958902"},"content":"     * ","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"e0958902"},"content":"     * @param listIndex The index of the medication in the Medication list","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"e0958902"},"content":"    public static void printSpecificMedication(int listIndex) {","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"e0958902"},"content":"        assert medications !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"e0958902"},"content":"        Medication medication \u003d MedicationManager.getMedication(listIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"e0958902"},"content":"        Ui.printSpecificMed(medication);","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"annoy-o-mus"},"content":"    //@@author annoy-o-mus","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"annoy-o-mus"},"content":"     * Converts a String to a double.","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"annoy-o-mus"},"content":"     * Introduced to help populate the Medication object from the save file.","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"annoy-o-mus"},"content":"     * @param doubleString The String object to be converted to a double type.","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The value of type double. Placeholder value of -1.0 if an exception is thrown.","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"annoy-o-mus"},"content":"    private static double convertStringToDouble(String doubleString) {","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"annoy-o-mus"},"content":"        double placeholderValue \u003d -1.0;","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"annoy-o-mus"},"content":"            return Double.parseDouble(doubleString);","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Possibly corrupt data. Unable to parse String \u0027\" + doubleString","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"\u0027 into double. Using placeholder value -1.0\");","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"annoy-o-mus"},"content":"            return placeholderValue;","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Null Pointer passed for conversion to double. Using placeholder value -1.0\");","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"annoy-o-mus"},"content":"            return placeholderValue;","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"annoy-o-mus"},"content":"     * Populates the MedicationManager from the save file.","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"annoy-o-mus"},"content":"     * If there are corrupt data, it may be substituted with placeholder values.","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medInfoList The List of medication information that contains the (String, String) key-value.","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"annoy-o-mus"},"content":"    public static void addMedicationFromSaveFile(List\u003cMap\u003cString, String\u003e\u003e medInfoList) {","lastModifiedDate":"2024-03-30"},{"lineNumber":188,"author":{"gitId":"annoy-o-mus"},"content":"        clearMedication(); // Reset for the case of overwriting data with another JSON file.","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"annoy-o-mus"},"content":"        for (Map\u003cString, String\u003e medInfo : medInfoList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"annoy-o-mus"},"content":"            Medication medication \u003d new Medication();","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"annoy-o-mus"},"content":"            for (String key : medInfo.keySet()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"annoy-o-mus"},"content":"                ArgumentName keyEnum \u003d ArgumentName.getEnumOfArgumentValue(key);","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"annoy-o-mus"},"content":"                if (keyEnum \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"annoy-o-mus"},"content":"                    continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"annoy-o-mus"},"content":"                String value \u003d medInfo.get(key);","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"annoy-o-mus"},"content":"                switch (keyEnum) {","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"annoy-o-mus"},"content":"                case NAME:","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setName(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"annoy-o-mus"},"content":"                case QUANTITY:","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"annoy-o-mus"},"content":"                    double qty \u003d convertStringToDouble(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setQuantity(qty);","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"annoy-o-mus"},"content":"                case DOSAGE_MORNING:","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"annoy-o-mus"},"content":"                    double doseMorning \u003d convertStringToDouble(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setDosageMorning(doseMorning);","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"annoy-o-mus"},"content":"                case DOSAGE_AFTERNOON:","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"annoy-o-mus"},"content":"                    double doseAfternoon \u003d convertStringToDouble(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setDosageAfternoon(doseAfternoon);","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"annoy-o-mus"},"content":"                case DOSAGE_EVENING:","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"annoy-o-mus"},"content":"                    double doseEvening \u003d convertStringToDouble(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setDosageEvening(doseEvening);","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"annoy-o-mus"},"content":"                case EXPIRATION_DATE:","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setExpiryDate(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"annoy-o-mus"},"content":"                case REMARKS:","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setRemarks(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"annoy-o-mus"},"content":"                case REPEAT:","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"annoy-o-mus"},"content":"                    int repeatValue \u003d (int) convertStringToDouble(value);","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setRepeat(repeatValue);","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"annoy-o-mus"},"content":"                case DAY_ADDED:","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"annoy-o-mus"},"content":"                    int dayValue \u003d (int) convertStringToDouble(value);","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setDayAdded(dayValue);","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"annoy-o-mus"},"content":"                default:","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"annoy-o-mus"},"content":"                    logger.warning(\"Unhandled ArgumentName Enum Type \" + keyEnum.value);","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"annoy-o-mus"},"content":"            addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":237,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":239,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":240,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":241,"author":{"gitId":"annoy-o-mus"},"content":"     * Increases the medication quantity based on the specified time period","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medicationName Name of the medication to increase medication quantity","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"annoy-o-mus"},"content":"     * @param period Time period of day to reference","lastModifiedDate":"2024-03-30"},{"lineNumber":245,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws MedicationNotFoundException No Medication matching specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"annoy-o-mus"},"content":"    public static void increaseMedicationQuantity(String medicationName, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":248,"author":{"gitId":"annoy-o-mus"},"content":"            throws MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"annoy-o-mus"},"content":"        Medication medication \u003d getMedication(medicationName);","lastModifiedDate":"2024-03-30"},{"lineNumber":250,"author":{"gitId":"annoy-o-mus"},"content":"        double dosage \u003d getMedicationDosage(medication, period);","lastModifiedDate":"2024-03-30"},{"lineNumber":251,"author":{"gitId":"annoy-o-mus"},"content":"        double oldQuantity \u003d medication.getQuantity();","lastModifiedDate":"2024-03-30"},{"lineNumber":252,"author":{"gitId":"annoy-o-mus"},"content":"        double newQuantity \u003d oldQuantity + dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":253,"author":{"gitId":"annoy-o-mus"},"content":"        medication.setQuantity(newQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":254,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":255,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":256,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":257,"author":{"gitId":"annoy-o-mus"},"content":"     * Decreases the medication quantity based on the specified time period","lastModifiedDate":"2024-03-30"},{"lineNumber":258,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":259,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medicationName Name of the medication to decrease medication quantity","lastModifiedDate":"2024-03-30"},{"lineNumber":260,"author":{"gitId":"annoy-o-mus"},"content":"     * @param period Time period of day to reference","lastModifiedDate":"2024-03-30"},{"lineNumber":261,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws MedicationNotFoundException No Medication matching specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":262,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws InsufficientQuantityException Existing quantity insufficient for operation","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":264,"author":{"gitId":"annoy-o-mus"},"content":"    public static void decreaseMedicationQuantity(String medicationName, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"annoy-o-mus"},"content":"            throws MedicationNotFoundException, InsufficientQuantityException {","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"annoy-o-mus"},"content":"        Medication medication \u003d getMedication(medicationName);","lastModifiedDate":"2024-03-30"},{"lineNumber":267,"author":{"gitId":"annoy-o-mus"},"content":"        double dosage \u003d getMedicationDosage(medication, period);","lastModifiedDate":"2024-03-30"},{"lineNumber":268,"author":{"gitId":"annoy-o-mus"},"content":"        double oldQuantity \u003d medication.getQuantity();","lastModifiedDate":"2024-03-30"},{"lineNumber":269,"author":{"gitId":"annoy-o-mus"},"content":"        double newQuantity \u003d oldQuantity - dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":270,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":271,"author":{"gitId":"annoy-o-mus"},"content":"        if (newQuantity \u003c 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":272,"author":{"gitId":"annoy-o-mus"},"content":"            throw new InsufficientQuantityException(dosage, oldQuantity);","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":275,"author":{"gitId":"annoy-o-mus"},"content":"        medication.setQuantity(newQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":276,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":277,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":17,"e0958902":39,"annoy-o-mus":132,"T0nyLin":4,"wenenhoe":85}},{"path":"src/main/java/meditracker/storage/FilePathChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":" * A class that perform checks on the supplied file path.","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":" * This does not check for file permissions (to be created, read, accessed etc.).","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"public class FilePathChecker {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Logger MEDILOGGER \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"     * Checks if the Path object contains illegal folder names.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"     * They are generally targeted towards the Windows filesystem, but it also catches misuse of periods, potentially","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"     * as a way of path traversal.","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"     * @param path The Path object to check for illegal names (and improper use of periods).","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if illegal names are found, false otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    static boolean containsIllegalFolderNames(Path path) {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"        Iterator\u003cPath\u003e splitPath \u003d path.iterator();","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"        while (splitPath.hasNext()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"            Path subpath \u003d splitPath.next();","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"            String subpathString \u003d subpath.toString().toLowerCase();","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"            // Path should not have multiple periods or colons","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"            if (subpathString.contains(\"..\") || subpathString.contains(\":\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"                MEDILOGGER.warning(\"Sub-path contains .. or : which is not allowed.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"            if (subpathString.endsWith(\".\") || subpathString.endsWith(\" \")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"                MEDILOGGER.warning(\"Sub-path ends with \u0027.\u0027 or (space) which is not allowed.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"            // Credit: https://stackoverflow.com/a/31976060","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"            switch (subpathString) {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"            case \"con\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"            case \"prn\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"            case \"aux\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"            case \"nul\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com1\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com2\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com3\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com4\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com5\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com6\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com7\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com8\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com9\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt1\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt2\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt3\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt4\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt5\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt6\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt7\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt8\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt9\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"            case \".\": // Path should not have a lone period.","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"                MEDILOGGER.warning(\"Path contains potentially invalid folder: \" + subpathString);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"            default:","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"                continue;","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"        return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"     * Checks if the Path object has a valid root.","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"     * This applies to windows filesystem where there are multiple local drives with different drive letters.","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"     * Relative paths should always return true.","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"     * @param path The path object to be checked for the presence of the valid root.","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if it has a valid root, false otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"    private static boolean containsValidRoot(Path path) {","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"        Path absolutePath \u003d path.toAbsolutePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"        Path root \u003d absolutePath.getRoot();","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"        if (root \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"            assert false;","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"        if (Files.exists(root)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"File Root \" + root + \" does not exist on the filesystem.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"     * Checks the String input if it contains potentially illegal characters as a valid filepath.","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"     * The Path object does not contain illegal characters as the conversion from String to Path would have thrown","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"     * an `InvalidPathException` error.","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"     * @param inputToCheck The String input to check for illegal characters","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if an illegal character is found, false otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"    public static boolean containsIllegalCharacters (String inputToCheck) {","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"        // Credit: https://stackoverflow.com/a/31976060","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"        String[] illegalCharacters \u003d {\"\u003c\", \"\u003e\", \"\\\"\", \"\u0027\", \"|\", \"?\", \"*\"};","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"annoy-o-mus"},"content":"        for (String illegalChar : illegalCharacters) {","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"annoy-o-mus"},"content":"            if (inputToCheck.contains(illegalChar)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"                MEDILOGGER.warning(\"String contains potentially illegal character: \" + illegalChar);","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"annoy-o-mus"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"annoy-o-mus"},"content":"        return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"annoy-o-mus"},"content":"     * Runs a series of checks on the Path object to ensure that the naming of the filesystem path is sound.","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"annoy-o-mus"},"content":"     * @param path The Path object.","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if the Path object is valid for the filesystem, false otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"annoy-o-mus"},"content":"    public static boolean isValidFullPath(Path path) {","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"annoy-o-mus"},"content":"        if (path \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"annoy-o-mus"},"content":"        if (!containsValidRoot(path)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"annoy-o-mus"},"content":"        if (containsIllegalFolderNames(path)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"annoy-o-mus"},"content":"        Path fileName \u003d FileReaderWriter.getFullPathComponent(path,false);","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"annoy-o-mus"},"content":"        if (fileName \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"There is no valid file name supplied.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"annoy-o-mus"},"content":"        String fileNameString \u003d fileName.toString().toLowerCase();","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"annoy-o-mus"},"content":"        if (!fileNameString.endsWith(\".json\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"File does not end in .json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"annoy-o-mus"},"content":"        return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"annoy-o-mus"},"content":"     * Validates the path input and return the Path object if successfully validated.","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"annoy-o-mus"},"content":"     * @param fileLocationArgument The argument specifying the location of the file (as String)","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The Path object corresponding to the argument for the save file if it passes validation checks.","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"annoy-o-mus"},"content":"     *     null otherwise.","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"annoy-o-mus"},"content":"    public static Path validateUserPathArgument(String fileLocationArgument) {","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"annoy-o-mus"},"content":"        assert (fileLocationArgument !\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"annoy-o-mus"},"content":"        if (fileLocationArgument \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"annoy-o-mus"},"content":"        boolean hasIllegalCharacters \u003d FilePathChecker.containsIllegalCharacters(fileLocationArgument);","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"annoy-o-mus"},"content":"        if (hasIllegalCharacters) {","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"The supplied input contains potentially illegal characters. Please ensure that \"","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"the supplied path does not have illegal character\");","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"annoy-o-mus"},"content":"        Path pathOfSaveFile;","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"annoy-o-mus"},"content":"            pathOfSaveFile \u003d Path.of(fileLocationArgument);","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.severe(e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Unable to convert input into Path object. Data is not saved.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"annoy-o-mus"},"content":"        boolean isValidFilePath \u003d FilePathChecker.isValidFullPath(pathOfSaveFile);","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"annoy-o-mus"},"content":"        if (!isValidFilePath) {","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Path contains invalid folder names or missing valid file extension (.json).\");","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Please ensure the path contains valid folder names and ends with .json\");","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"annoy-o-mus"},"content":"        return pathOfSaveFile;","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"annoy-o-mus":196}},{"path":"src/main/java/meditracker/storage/FileReaderWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import static java.nio.file.StandardOpenOption.APPEND;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.MediTrackerConfig;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":" * A static class to handle the reading and writing to the filesystem.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"public class FileReaderWriter {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Logger logger \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"     * Returns either the Path of folder or the Path of file.","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"     * @param path The Path object containing both folder name and file name.","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     * @param getFolder Whether to return the Path of folder or the Path of file.","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The Path object of either the file name or the folder name. Null if the chosen field is empty.","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"    static Path getFullPathComponent(Path path, boolean getFolder) {","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"        if (path \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        if (getFolder) {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"            return path.getParent();","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"            return path.getFileName();","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"     * Creates new directories to allow writing of MediTracker data to the save files.","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"     * @param folderName The directory, including its parents, to create. If null, the creation is skipped.","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws FileReadWriteException When there is any issue creating the directories.","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"    private static void initialiseDirectory(Path folderName) throws FileReadWriteException {","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"        if (folderName \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"            logger.info(\"Directory portion is null. Skipping creation.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"            Files.createDirectories(folderName);","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"An IO Error has occurred. Directories may not have been created.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"Unable to create directories. Please make sure that the \"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"directory has the appropriate permissions for Meditracker to write to.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"     * Creates a temporary save file.","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"     * Also attempts to initialise the directory in case of a first-time save.","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"     * @param dir The directory for the temporary save file. If null, it will be the directory of the project root.","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The Path object of the save file. null if there is an issue with creating the save file.","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"    static Path createTempSaveFile(Path dir) {","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"        Path directory;","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"        if (dir \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"            directory \u003d Paths.get(\"\");","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"            directory \u003d dir;","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"            initialiseDirectory(directory);","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (FileReadWriteException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"            logger.severe(e.getMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"            return Files.createTempFile(directory,null,null);","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"            logger.severe(\"IO Error: Unable to create temp save file\");","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"            logger.severe(\"Unable to create temp save file. Please make sure that \"","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"the file has the appropriate permissions for MediTracker to write to.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"     * Reads the JSON data file to load and populate the MediTracker.","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"     * If the file is not found, a warning will be thrown to alert the user, and the program","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"     * will run without the saved data (fresh state).","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"    public static void loadMediTrackerData() {","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"        Path mediTrackerJsonPath \u003d MediTrackerConfig.getDefaultJsonSaveFilePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"        JsonImporter.processMediTrackerJsonFile(mediTrackerJsonPath);","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"     * Saves the medication information in MediTracker.","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"     * @param path The Path object (relative or absolute) to save the information to. If null, the path will be the","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"annoy-o-mus"},"content":"     *     path specified in `MediTrackerConfig`.","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if the saving is successful, false otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"annoy-o-mus"},"content":"    public static boolean saveMediTrackerData(Path path) {","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"annoy-o-mus"},"content":"        Path fullJsonPath;","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"annoy-o-mus"},"content":"        if (path \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"annoy-o-mus"},"content":"            fullJsonPath \u003d MediTrackerConfig.getDefaultJsonSaveFilePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"annoy-o-mus"},"content":"            fullJsonPath \u003d path;","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"annoy-o-mus"},"content":"        Path jsonFolder \u003d getFullPathComponent(fullJsonPath, true);","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"annoy-o-mus"},"content":"        Path tmpSaveFile \u003d createTempSaveFile(jsonFolder);","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"annoy-o-mus"},"content":"        if (tmpSaveFile \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"annoy-o-mus"},"content":"        boolean saveStatus \u003d JsonExporter.saveMedicationDataToJson(tmpSaveFile);","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"annoy-o-mus"},"content":"            if (saveStatus) {","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"annoy-o-mus"},"content":"                Files.move(tmpSaveFile,fullJsonPath, REPLACE_EXISTING);","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"annoy-o-mus"},"content":"            } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"annoy-o-mus"},"content":"                Files.delete(tmpSaveFile);","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"annoy-o-mus"},"content":"            logger.severe(\"IO Exception occurred when trying to update existing save file.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"annoy-o-mus"},"content":"        return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"annoy-o-mus"},"content":"     * Saves the daily medication information to a fixed file data/dailymed/today.txt.","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"annoy-o-mus"},"content":"     * @param dailyMedData A list of type String for the daily medication data.","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"annoy-o-mus"},"content":"    public static void saveDailyMedicationData(List\u003cString\u003e dailyMedData) {","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"annoy-o-mus"},"content":"        Path dailyMedFullSavePath \u003d MediTrackerConfig.getDailySaveFilePath();","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"annoy-o-mus"},"content":"        Path dailyMedFolder \u003d getFullPathComponent(dailyMedFullSavePath, true);","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"annoy-o-mus"},"content":"        Path tmpSaveFile \u003d createTempSaveFile(dailyMedFolder);","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"annoy-o-mus"},"content":"        if (tmpSaveFile \u003d\u003d null){","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //@@author annoy-o-mus-reused","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/6548204","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        boolean writeStatus \u003d false;","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            for (String stringData : dailyMedData) {","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                byte[] dataInBytes \u003d (stringData + System.lineSeparator()).getBytes();","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                Files.write(tmpSaveFile, dataInBytes, APPEND);","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            writeStatus \u003d true;","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            logger.severe(\"Unable to write DailyMedication data to file.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            if (writeStatus) {","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                Files.move(tmpSaveFile,dailyMedFullSavePath, REPLACE_EXISTING);","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                Files.delete(tmpSaveFile);","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"IO Exception occurred when trying to update existing save file.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Loads the daily medication information from a fixed file data/dailymed/today.txt.","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @return A list of string with the daily medication data. null if the file could not be loaded.","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e loadDailyMedicationData() {","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            Path dailyMedTextFile \u003d MediTrackerConfig.getDailySaveFilePath();","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Files.readAllLines(dailyMedTextFile);","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.warning(\"Unable to Read Daily medication data. \"","lastModifiedDate":"2024-03-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                    + \"Daily medication data starting with clean state.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"annoy-o-mus":159,"-":41}},{"path":"src/main/java/meditracker/storage/JsonExporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONArray;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONObject;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":" * A Class that converts Meditracker data to JSON and writes to the target file.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"class JsonExporter {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Logger logger \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"     * Converts the information inside a Medication object into a JSON Object.","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medInfo The Medication object.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The JSON object representing the Medication object.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"    private static JSONObject convertMedicationInfoToJsonObject(Medication medInfo) {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"        JSONObject medObject \u003d new JSONObject();","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.NAME.value, medInfo.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.QUANTITY.value, medInfo.getQuantity());","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.DOSAGE_MORNING.value, medInfo.getDosageMorning());","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.DOSAGE_AFTERNOON.value, medInfo.getDosageAfternoon());","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.DOSAGE_EVENING.value, medInfo.getDosageEvening());","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.EXPIRATION_DATE.value, medInfo.getExpiryDate());","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.REMARKS.value, medInfo.getRemarks());","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.REPEAT.value, medInfo.getRepeat());","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.DAY_ADDED.value, medInfo.getDayAdded());","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"        return medObject;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"     * Populates the JSON array with Medication information in JSON form.","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"     * @return JSON array containing a list of medication in JSON form.","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"    private static JSONArray populateJsonMedicationList() {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"        JSONArray medicationList \u003d new JSONArray();","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"        int numberOfMedication \u003d MedicationManager.getTotalMedications();","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"        // Start with 1 since the `getMedication` method will be converting from 1-based to 0-based","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"        for (int i \u003d 1; i \u003c\u003d numberOfMedication; i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"            Medication medicationInfo \u003d MedicationManager.getMedication(i);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"            JSONObject medObject \u003d convertMedicationInfoToJsonObject(medicationInfo);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"            medicationList.put(medObject);","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"        return medicationList;","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"     * Writes the JSON object (starting with the root) to specified file.","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"     * @param root The JSON object that contains all the JSON data.","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"     * @param fileToWrite The Path object containing the abstract pathname of the JSON file.","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"     * @return `true` if the data has been written to successfully, `false` otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"    private static boolean writeJsonData(JSONObject root, Path fileToWrite) {","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"            Files.write(fileToWrite, root.toString().getBytes());","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"            return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"            logger.severe(\"Unable to write data to JSON file.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"     * Save all the medication information into a JSON file.","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"     * @param fileToWrite The Path object containing the abstract pathname of the JSON file to write to.","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"     * @return `true` if the information is saved successfully, `false` otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"    static boolean saveMedicationDataToJson(Path fileToWrite) {","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"        // Solution on how to write to a JSON file is adapted from:","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"        // https://stackoverflow.com/a/62947435","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"        // and https://javadoc.io/doc/org.json/json/latest/org/json/JSONObject.html","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"        // and https://javadoc.io/doc/org.json/json/latest/org/json/JSONArray.html","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"        JSONObject rootData \u003d new JSONObject();","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        rootData.put(\"version\", 1.0);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"        JSONArray medicationList \u003d populateJsonMedicationList();","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"        rootData.put(\"medicationList\", medicationList);","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"        return writeJsonData(rootData, fileToWrite);","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"annoy-o-mus":99}},{"path":"src/main/java/meditracker/storage/JsonImporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONArray;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONException;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONObject;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":" * A class to handle the importing of raw json file data and process them.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":" * Passes the data in an intermediate format to the various Managers involved for them to initialise.","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"public class JsonImporter {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    private static Logger logger \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     * Converts information from JSONArray into a List of (String, String) mappings.","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * The JSONArray should contain purely JSONObjects, and each JSONObject should contain purely","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     * keys of type String and values of type String.","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"     * @param jsonArray A JSONArray of JSONObjects containing key-value pairs of type (String, String).","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"     * @return A list of (String, String) key-value pairs. May contain only partial entries if there are entries not","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"     *     in the specified type.","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"    private static List\u003cMap\u003cString, String\u003e\u003e convertJsonArrayToStringMap(JSONArray jsonArray) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        // Solution adapted from","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        // https://stackoverflow.com/questions/32823746/java-code-to-convert-json-into-text-in-key-value-pair","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        int numberOfElements \u003d jsonArray.length();","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"        List\u003cMap\u003cString, String\u003e\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"        for (int i \u003d 0; i \u003c numberOfElements; i++) {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"            Map\u003cString, String\u003e kvMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"            try {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"                JSONObject jsonObject \u003d jsonArray.getJSONObject(i);","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"                Iterator\u003cString\u003e keys \u003d jsonObject.keys();","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"                while (keys.hasNext()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"                    String key \u003d keys.next();","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"                    String value \u003d jsonObject.get(key).toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"                    kvMap.put(key, value);","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"                list.add(kvMap);","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"            } catch (JSONException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"                logger.warning(\"JSONArray to List\u003cMap\u003cString,String\u003e\u003e Error: \" + e.getMessage());","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"                logger.warning(\"Entry skipped.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"        return list;","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"     * Loads the file and returns JSON data as a raw string.","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"     * The JSON file should only contain one line of data. Any additional lines in the file will be ignored.","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"     * @param mediTrackerJsonPath The Path object specifying the path to the MediTracker save data.","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The JSON data as a String object. Null if the data cannot be loaded or is empty.","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"    private static String loadRawJsonFileData(Path mediTrackerJsonPath) {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"        List\u003cString\u003e jsonFileData \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"        // Choice of reader adapted from","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"        // https://www.stackchief.com/blog/FileReader%20vs%20BufferedReader%20vs%20Scanner%20%7C%20Java","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"        // and https://stackoverflow.com/a/20838298","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"            jsonFileData \u003d Files.readAllLines(mediTrackerJsonPath);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Unable to read from the JSON save file.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonFileData.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Empty JSON file.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonFileData.size() \u003e 1) {","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Multiple lines detected. JSON file should only contain one line of data. \"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"Only the first line will be loaded. Ignoring other lines.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        return jsonFileData.get(0);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"     * Reads from the JSON file and populates the various Managers with various information.","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"     * If the JSON file could not be found or if the structure is corrupted and could not be read,","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"     * a warning will be thrown to the user and the program will run as if it is the first time running.","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"     * @param mediTrackerJsonPath The Path object specifying the path to the MediTracker save data.","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if the JSON file has been successfully loaded, false otherwise.","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"    public static boolean processMediTrackerJsonFile(Path mediTrackerJsonPath) {","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"        if (mediTrackerJsonPath \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"No path specified to read the JSON file.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"        String jsonStringData \u003d loadRawJsonFileData(mediTrackerJsonPath);","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonStringData \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"annoy-o-mus"},"content":"        // Solution on reading and parsing a JSON file adapted from","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"        // https://stackoverflow.com/q/10926353","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"annoy-o-mus"},"content":"        JSONArray medicationList \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"annoy-o-mus"},"content":"            JSONObject rawJsonData \u003d new JSONObject(jsonStringData);","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"annoy-o-mus"},"content":"            medicationList \u003d rawJsonData.getJSONArray(\"medicationList\");","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (JSONException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"JSON Read Error: \" + e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"JSON Save Data not read and processed.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"annoy-o-mus"},"content":"        List\u003cMap\u003cString, String\u003e\u003e medicationStringMap \u003d convertJsonArrayToStringMap(medicationList);","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"annoy-o-mus"},"content":"        MedicationManager.addMedicationFromSaveFile(medicationStringMap);","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"annoy-o-mus"},"content":"        return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"annoy-o-mus":131}},{"path":"src/main/java/meditracker/time/MediTrackerTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.time;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.Clock;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.Instant;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.ZoneId;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Date;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.TimeZone;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.InvalidSimulatedTimeException;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"// The time travel implementation is inspired by","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"// https://www.baeldung.com/java-override-system-time","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":" * The single source of truth for time in MediTracker.","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"public class MediTrackerTime {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"    private static boolean isSimulatedTime \u003d false;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    private static Clock simulatedClock \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"     * Gets the current system time, or if the simulation flag is enabled, the simulated time.","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * @return System time. Simulated time if -sim flag is enabled in CLI.","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"    public static LocalTime getCurrentTime() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"        if (isSimulatedTime) {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"            return LocalTime.now(simulatedClock);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"            return LocalTime.now();","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"     * Gets the current system date, or if the simulation flag is enabled, the simulated date.","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"     * @return System date. Simulated date if -sim flag is enabled in CLI","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"    public static LocalDate getCurrentDate() {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"        if (isSimulatedTime) {","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"            return LocalDate.now(simulatedClock);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"            return LocalDate.now();","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"     * Sets up the program up to get the time from either the simulated time or the system time.","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"     * The simulated time will only override the system time if there is a -sim flag and a valid","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"     *     date and time format is provided (as per `time.Instant.parse`).","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"     * @param cliInput The input associated with the `-sim` flag","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws InvalidSimulatedTimeException When the format of the input does not match that required by the","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"     *     `time.Instant.parse` method","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"    private static void setMediTrackerTime(String cliInput) throws InvalidSimulatedTimeException {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"        Instant setTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"            setTime \u003d Instant.parse(cliInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"            throw new InvalidSimulatedTimeException(\"Invalid Date and Time Format!\");","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"        assert (setTime !\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"        // https://stackoverflow.com/a/11399538","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"        TimeZone tz \u003d TimeZone.getTimeZone(ZoneId.systemDefault());","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"        int offset \u003d tz.getOffset(new Date().getTime());","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"        setTime \u003d setTime.minusMillis(offset);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"        simulatedClock \u003d Clock.fixed(setTime, ZoneId.systemDefault().normalized());","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"        isSimulatedTime \u003d true;","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.now(simulatedClock);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(\"Developer Feature: Simulated Time Enabled. The time is now fixed at \" + localDateTime);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"     * Process the CLI input to check for the need to set up simulated time.","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"     * @param cliArguments The commandline arguments.","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws InvalidSimulatedTimeException If there is no argument provided with the `-sim` flag.","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"    public static void setUpSimulatedTime(String[] cliArguments) throws InvalidSimulatedTimeException {","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"        Iterator\u003cString\u003e stringIterator \u003d Arrays.stream(cliArguments).iterator();","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"        while (stringIterator.hasNext()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"            String s \u003d stringIterator.next();","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"            if (s.equals(\"-sim\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"                try {","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"                    String dateTimeString \u003d stringIterator.next();","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"                    MediTrackerTime.setMediTrackerTime(dateTimeString);","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"                    return;","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"                } catch (NoSuchElementException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"                    throw new InvalidSimulatedTimeException(\"Empty field after -sim flag!\");","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"annoy-o-mus":104}},{"path":"src/main/java/meditracker/time/Period.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.time;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"// @@author T0nyLin","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":" * Period enum to represent different time Periods and their corresponding TimeRange","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"public enum Period {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"    MORNING(LocalTime.MIDNIGHT, LocalTime.NOON.minusNanos(1)),","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"    AFTERNOON(LocalTime.NOON, LocalTime.of(18, 0).minusNanos(1)),","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"    EVENING(LocalTime.of(18, 0), LocalTime.MIDNIGHT.minusNanos(1)),","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"    UNKNOWN,","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    NONE;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    public final TimeRange timeRange;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"     * Constructs default Period with null timeRange attribute","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    Period() {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"        timeRange \u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"     * Constructs Period with a start and end LocalTime","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"     * @param start","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"     * @param end","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"    Period(LocalTime start, LocalTime end) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"        timeRange \u003d new TimeRange(start, end);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"     * Gets the time period based on which boolean value is set","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"     * @param isMorning Boolean value for if it is morning","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"     * @param isAfternoon Boolean value for if it is afternoon","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"     * @param isEvening Boolean value for if it is evening","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"     * @return Enum value for which time Period it is","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"    public static Period getPeriod(boolean isMorning, boolean isAfternoon, boolean isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"        if (!isMorning \u0026\u0026 !isAfternoon \u0026\u0026 !isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"            return NONE;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"        } else if (isMorning \u0026\u0026 !isAfternoon \u0026\u0026 !isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"            return MORNING;","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"        } else if (!isMorning \u0026\u0026 isAfternoon \u0026\u0026 !isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"            return AFTERNOON;","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"        } else if (!isMorning \u0026\u0026 !isAfternoon \u0026\u0026 isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"            return EVENING;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"        return UNKNOWN;","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"     * Gets the time period based on the given time","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"     * @param time LocalTime object representing the time to check","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"     * @return Enum value for which time Period it is","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"    public static Period getPeriod(LocalTime time) {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"        if (MORNING.timeRange.isWithinTimeRange(time)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"            return MORNING;","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"        } else if (AFTERNOON.timeRange.isWithinTimeRange(time)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"            return AFTERNOON;","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"        } else if (EVENING.timeRange.isWithinTimeRange(time)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"            return EVENING;","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"        return UNKNOWN;","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"// @@author","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"T0nyLin":69,"wenenhoe":4}},{"path":"src/main/java/meditracker/time/TimeRange.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.time;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"public class TimeRange {","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"    private final LocalTime start;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    private final LocalTime end;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"    public TimeRange(LocalTime start, LocalTime end) {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"     * Checks whether a given time is within the time range","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"     * @param time Given time to check the range","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"     * @return True if it is within the time range, else False","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    public boolean isWithinTimeRange(LocalTime time) {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"        boolean isWithinStartAndEnd \u003d time.isAfter(start) \u0026\u0026 time.isBefore(end);","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"        return start.equals(time) || end.equals(time) || isWithinStartAndEnd;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":24}},{"path":"src/main/java/meditracker/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.CommandName;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.SearchResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":" * The Ui class handles user interface-related operations.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":" * It includes methods to display welcome messages, exit messages, and read user commands.","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"public class Ui {","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"    static Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     * Prevents defaulting to the public constructor","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     * that allows instantiation of the Ui class","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    private Ui() {}","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"     * Displays the welcome message and introduction name.","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"        printIntroName();","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"        showWelcome();","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"     * Prints the introduction name banner.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"    public static void printIntroName() {","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"        // Solution below adapted by http://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dType%20Something%20","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"                    __      ______                      __                      \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"                \" /\u0027\\\\_/`\\\\           /\\\\ \\\\  __/\\\\__  _\\\\                    /\\\\ \\\\                     \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"                \"/\\\\      \\\\     __   \\\\_\\\\ \\\\/\\\\_\\\\/_/\\\\ \\\\/ _ __    __      ___\\\\ \\\\ \\\\/\u0027\\\\      __   _ __  \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"                \"\\\\ \\\\ \\\\__\\\\ \\\\  /\u0027__`\\\\ /\u0027_` \\\\/\\\\ \\\\ \\\\ \\\\ \\\\/\\\\`\u0027__\\\\/\u0027__`\\\\   /\u0027___\\\\ \\\\ , \u003c    /\u0027__`\\\\/\\\\`\u0027__\\\\\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"                +","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"                \" \\\\ \\\\ \\\\_/\\\\ \\\\/\\\\  __//\\\\ \\\\L\\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\//\\\\ \\\\L\\\\.\\\\_/\\\\ \\\\__/\\\\ \\\\ \\\\\\\\`\\\\ /\\\\\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"                \"  __/\\\\\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"                \" \\\\ \\\\/ \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"                \"  \\\\ \\\\_\\\\\\\\ \\\\_\\\\ \\\\____\\\\ \\\\___,_\\\\ \\\\_\\\\ \\\\ \\\\_\\\\ \\\\_\\\\\\\\ \\\\__/.\\\\_\\\\ \\\\____\\\\\\\\ \\\\_\\\\ \\\\_\\\\ \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"                \"\\\\____\\\\\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"                \"\\\\ \\\\_\\\\ \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"                \"   \\\\/_/ \\\\/_/\\\\/____/\\\\/__,_ /\\\\/_/  \\\\/_/\\\\/_/ \\\\/__/\\\\/_/\\\\/____/ \\\\/_/\\\\/_/\\\\/____/ \\\\/_/ \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"                \"                                                                                \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"                \"                                                                                \");","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"     * Displays a line divider.","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"    public static void showLine() {","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"     * Displays the welcome message.","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"    public static void showWelcome() {","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Welcome to MediTracker, your best companion to track your medicine intake.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(\"Let\u0027s begin tracking!\");","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        System.out.println();","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"nickczh"},"content":"     * Displays the exit message.","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"nickczh"},"content":"    public static void showExitMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Thank you for using MediTracker. Hope to see you again!\");","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"    public static void showSuccessMessage(String message) {","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"        System.out.print(\"SUCCESS: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(message);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"    public static void showErrorMessage(String message) {","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        System.out.print(\"ERROR: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(message);","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"    public static void showErrorMessage(Throwable throwable) {","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"        showErrorMessage(throwable.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"    public static void showHelpMessage(CommandName commandName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"        String helpMessage \u003d ArgumentHelper.getHelpMessage(commandName);","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(helpMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"    public static void showWarningMessage(String message) {","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"        System.out.print(\"WARNING: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(message);","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"nickczh"},"content":"     * Reads user input command.","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"nickczh"},"content":"     * @return The user input command as a String.","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"nickczh"},"content":"    public static String readCommand() {","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"        System.out.print(\"meditracker\u003e \");","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"nickczh"},"content":"        return input.nextLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":109,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"e0958902"},"content":"     * Prints the medication list","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"e0958902"},"content":"     * @param medications The list of medications","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"e0958902"},"content":"     * @param \u003cT\u003e Generic class for code reusability","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"nickczh"},"content":"    public static \u003cT\u003e void printMedsList(List\u003cT\u003e medications) {","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"T0nyLin"},"content":"        for (T medication : medications) {","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"T0nyLin"},"content":"            int numbering \u003d medications.indexOf(medication) + 1;","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"\\t\" + numbering + \". \" + medication);","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"e0958902"},"content":"     * Prints a specific medication in the medication list","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"e0958902"},"content":"     * @param medication Contains a medication in the medication list","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"e0958902"},"content":"    public static void printSpecificMed(Medication medication) {","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"e0958902"},"content":"        System.out.printf(\"Name: %s\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"e0958902"},"content":"                        \"Quantity: %.1f\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"e0958902"},"content":"                        \"Expiry Date: %s\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"e0958902"},"content":"                        \"Remarks: %s\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"e0958902"},"content":"                        \"Morning Dosage: %.1f\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"e0958902"},"content":"                        \"Afternoon Dosage: %.1f\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"e0958902"},"content":"                        \"Evening Dosage: %.1f\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"e0958902"},"content":"                        \"Repeat: %d\" + System.lineSeparator(),","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"e0958902"},"content":"                medication.getName(),","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"e0958902"},"content":"                medication.getQuantity(),","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"e0958902"},"content":"                medication.getExpiryDate(),","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"e0958902"},"content":"                medication.getRemarks(),","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"e0958902"},"content":"                medication.getDosageMorning(),","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"e0958902"},"content":"                medication.getDosageAfternoon(),","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"e0958902"},"content":"                medication.getDosageEvening(),","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"e0958902"},"content":"                medication.getRepeat(),","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"e0958902"},"content":"                medication.getDayAdded());","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"T0nyLin"},"content":"     * Prints the sub lists of dailyMedications based on the period","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"T0nyLin"},"content":"     * @param medsList list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"T0nyLin"},"content":"     * @param dailyMedications subList of dailyMedication","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"T0nyLin"},"content":"     * @param period Specified period of the day","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"T0nyLin"},"content":"    public static void printMedsLists(List\u003cMedication\u003e medsList,","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"T0nyLin"},"content":"                                      List\u003cDailyMedication\u003e dailyMedications, String period) {","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"T0nyLin"},"content":"        int numbering \u003d 0;","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication med: dailyMedications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"T0nyLin"},"content":"            String name \u003d med.getName();","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"T0nyLin"},"content":"            Double intakeDose;","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"T0nyLin"},"content":"            int index \u003d getIndex(medsList, name);","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"T0nyLin"},"content":"            if (period.equals(\"Morning:\")) {","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"T0nyLin"},"content":"                intakeDose \u003d medsList.get(index).getDosageMorning();","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"T0nyLin"},"content":"            } else if (period.equals(\"Afternoon:\")) {","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"T0nyLin"},"content":"                intakeDose \u003d medsList.get(index).getDosageAfternoon();","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"T0nyLin"},"content":"            } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"T0nyLin"},"content":"                intakeDose \u003d medsList.get(index).getDosageEvening();","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"T0nyLin"},"content":"            numbering++;","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"\\t\" + numbering + \". \" + med + \" | \" + intakeDose);","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"T0nyLin"},"content":"     * Gets index of the dailyMedication in the Main Medication list","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"T0nyLin"},"content":"     * @param medsList list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"T0nyLin"},"content":"     * @param name name of DailyMedication","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"T0nyLin"},"content":"     * @return index of the medication in main medication","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"T0nyLin"},"content":"    private static int getIndex(List\u003cMedication\u003e medsList, String name) {","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"T0nyLin"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"T0nyLin"},"content":"        for (Medication medication: medsList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"T0nyLin"},"content":"            if (medication.getName().equals(name)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"T0nyLin"},"content":"                return index;","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"T0nyLin"},"content":"            index++;","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"T0nyLin"},"content":"        return -1;","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"kyuichyi"},"content":"     * Prints when there are no search results found","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"nickczh"},"content":"    public static void showNoSearchResultsMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":197,"author":{"gitId":"kyuichyi"},"content":"        System.out.println(\"No search results found!\");","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"kyuichyi"},"content":"     * Prints when the library is corrupted","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"kyuichyi"},"content":"    public static void showLibraryIsCorruptedMessage() {","lastModifiedDate":"2024-04-01"},{"lineNumber":205,"author":{"gitId":"kyuichyi"},"content":"        System.out.println(\"The library is corrupted! Please download the library from the website.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":206,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":207,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":208,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"kyuichyi"},"content":"     * Prints the search results","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults list of search results","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"nickczh"},"content":"    public static void showSearchResults(List\u003cSearchResult\u003e searchResults) {","lastModifiedDate":"2024-03-23"},{"lineNumber":214,"author":{"gitId":"kyuichyi"},"content":"        System.out.println(\"Here are the search results:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"kyuichyi"},"content":"        for (int i \u003d 0; i \u003c searchResults.size(); i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"kyuichyi"},"content":"            System.out.println((i + 1) + \". \" + searchResults.get(i));","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":221,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"kyuichyi"},"content":"     * Prints when there is no keyword provided for search command","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"kyuichyi"},"content":"    public static void showSearchKeywordNotFoundMessage() {","lastModifiedDate":"2024-04-01"},{"lineNumber":225,"author":{"gitId":"kyuichyi"},"content":"        System.out.println(\"You have not provided a keyword to search for! Please try again.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":226,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":227,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"nickczh":74,"e0958902":33,"annoy-o-mus":1,"T0nyLin":59,"kyuichyi":35,"wenenhoe":25}},{"path":"src/test/java/meditracker/DummyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"public class DummyTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    public void testNothing_inputNothing_alwaysReturnTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"annoy-o-mus":13}},{"path":"src/test/java/meditracker/MediTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"class MediTrackerTest {","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"nickczh":1,"annoy-o-mus":1,"-":10}},{"path":"src/test/java/meditracker/QuerySpecificMedication.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"class QuerySpecificMedication {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"     * Queries the array list containing the medication data","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"    public void queryMedication_ifContains_expect() {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"        String inputString \u003d \"Omeprazole\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"        List\u003cString\u003e medications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"        String medOne \u003d \"Panadol\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"        String medTwo \u003d \"Omeprazole\";","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"        medications.add(medOne);","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"        medications.add(medTwo);","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"        for (String medicationName: medications) {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"            if (medicationName.equals(inputString)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"                assertTrue(true);","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"e0958902":29}},{"path":"src/test/java/meditracker/argument/ArgumentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentListTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    ArgumentList testArgumentList \u003d new ArgumentList(","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"            new NameArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"            new DosageMorningArgument(false),","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"            new QuantityArgument(false)","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    void argumentList_flagCollision_assertionError() {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"        Argument testArgument1 \u003d new Argument(","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.LIST_TYPE,","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"                \"-l\",","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"                \"\",","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"                true,","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"                true) {};","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        Argument testArgument2 \u003d new Argument(","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.LIST_INDEX,","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"                \"-l\",","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"                \"\",","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"                true,","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"                true) {};","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(AssertionError.class, () -\u003e new ArgumentList(testArgument1, testArgument2));","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    void parse_properArgumentString_argumentValuesObtained() {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -dM %s -q %s\", name, dosage, quantity);","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        } catch (ArgumentNotFoundException | DuplicateArgumentFoundException | HelpInvokedException |","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"                 ArgumentNoValueException | UnknownArgumentFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE_MORNING), dosage);","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"    void parse_missingArgumentSpecified_argumentNotFoundException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -dM %s\", name, dosage);","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"                ArgumentNotFoundException.class,","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"                () -\u003e testArgumentList.parse(testArgumentString)","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"wenenhoe":70}},{"path":"src/test/java/meditracker/argument/ArgumentParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentParserTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    ArgumentList testArgumentList \u003d new ArgumentList(","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"            new NameArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"            new QuantityArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"            new DosageMorningArgument(false),","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"            new RemarksArgument(false)","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_validArgumentString_parsesCorrectly() {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -dM %s -q %s -r %s\",","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"                remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        } catch (ArgumentNotFoundException | DuplicateArgumentFoundException | HelpInvokedException |","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"                 ArgumentNoValueException | UnknownArgumentFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE_MORNING), dosage);","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.REMARKS), remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_outOfOrderArgument_parsesCorrectly() {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -r %s -q %s -dM %s\",","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"                remarks,","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"                dosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        } catch (ArgumentNotFoundException | DuplicateArgumentFoundException | HelpInvokedException |","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"                 ArgumentNoValueException | UnknownArgumentFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE_MORNING), dosage);","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.REMARKS), remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_additionalSpacesInArguments_parsesCorrectly() {","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n      %s     -r    %s    -q     %s  -dM  %s    \",","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"                remarks,","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"                dosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"        } catch (ArgumentNotFoundException | DuplicateArgumentFoundException | HelpInvokedException |","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"                 ArgumentNoValueException | UnknownArgumentFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE_MORNING), dosage);","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.REMARKS), remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_duplicateArgumentFlags_duplicateArgumentFoundException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -dM %s -q %s -r %s -n %s\",","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"                remarks,","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"                name);","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"                DuplicateArgumentFoundException.class,","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"                () -\u003e testArgumentList.parse(testArgumentString)","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_missingArgumentFlags_argumentNotFoundException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -q %s -r %s\",","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"                remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"                ArgumentNotFoundException.class,","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"                () -\u003e testArgumentList.parse(testArgumentString)","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_missingArgumentValues_argumentNoValueException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -dM %s -q %s -r\",","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"                quantity);","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"                ArgumentNoValueException.class,","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"                () -\u003e testArgumentList.parse(testArgumentString)","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_unknownArgumentFlags_unknownArgumentFoundException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -m -dM %s -a -q %s -r %s -e\",","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"wenenhoe"},"content":"                remarks);","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"wenenhoe"},"content":"                UnknownArgumentFoundException.class,","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"wenenhoe"},"content":"                () -\u003e testArgumentList.parse(testArgumentString)","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"wenenhoe":169}},{"path":"src/test/java/meditracker/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"class AddCommandTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    public void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"    // 3 part format","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"    // methodBeingTested_conditionToTest_expectedOutcome","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    void execute_addCommand_expectOneMedication()","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"        // setup lines","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"add -n Medication_A -q 60.0 -e 01/07/25 -dM 500.0 -dA 250.0 \"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"                + \"-r cause_dizziness -rep 1\";","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"        AddCommand command \u003d new AddCommand(inputString);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"        // actual test","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"e0958902"},"content":"        assertEquals(1, MedicationManager.getTotalMedications());","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":16,"e0958902":8,"T0nyLin":1,"wenenhoe":18}},{"path":"src/test/java/meditracker/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    public void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectMedicationDeleted()","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"                60.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"                87);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.checkForDaily(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"delete -l 1\";","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"        DeleteCommand command \u003d new DeleteCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"e0958902"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e MedicationManager.getMedication(1));","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"e0958902":8,"nickczh":2,"T0nyLin":2,"wenenhoe":41}},{"path":"src/test/java/meditracker/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"class ListCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"    void execute_listCommand_expect() {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"        String medicationName \u003d \"Medication_B\";","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"                medicationName,","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"                30.0,","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"                null,","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"                null,","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"                null,","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"                \"01/08/25\",","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"                \"for_flu_or_allergy\",","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"                87","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"        assert MedicationManager.getTotalMedications() \u003e 0 : \"Total medications in medication must be greater \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"                \"than 0 after adding in\" + medicationName;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"        Medication addedMedication \u003d MedicationManager.getMedication(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"        assertEquals(addedMedication.getName(), medicationName);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"e0958902":32,"T0nyLin":3}},{"path":"src/test/java/meditracker/command/ModifyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"public class ModifyCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    public void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectMedicationModified()","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"                60.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"                87);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.checkForDaily(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        String newName \u003d \"Medication_B\";","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"modify -l 1 -n \" + newName;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        ModifyCommand command \u003d new ModifyCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"e0958902"},"content":"        Medication updatedMedication \u003d MedicationManager.getMedication(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(updatedMedication.getName(), newName);","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    void execute_outOfOrderArgument_expectMedicationModified()","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"                60.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"                87);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.checkForDaily(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        String newName \u003d \"Medication_B\";","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d String.format(\"modify -n %s -l 1\", newName);","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        ModifyCommand command \u003d new ModifyCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"e0958902"},"content":"        Medication updatedMedication \u003d MedicationManager.getMedication(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(updatedMedication.getName(), newName);","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nickczh":4,"e0958902":6,"T0nyLin":6,"wenenhoe":65}},{"path":"src/test/java/meditracker/command/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.LibraryManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.SearchResult;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"public class SearchCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"    void execute_searchCommandSearchAllFields_expectSearchResult()","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"            throws DuplicateArgumentFoundException, HelpInvokedException, ArgumentNotFoundException,","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"            ArgumentNoValueException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"        String keyword \u003d \"paracetamol\";","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"        String inputString \u003d \"search -a \" + keyword;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"kyuichyi"},"content":"        SearchResult searchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"kyuichyi"},"content":"                \"Paracetamol\",","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"kyuichyi"},"content":"                \"Fever, Pain\",","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"kyuichyi"},"content":"                \"Nausea, Liver damage (in high doses)\");","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"kyuichyi"},"content":"        LibraryManager libraryManager \u003d new LibraryManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"kyuichyi"},"content":"        SearchCommand command \u003d new SearchCommand(inputString);","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"kyuichyi"},"content":"        command.execute();","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e expectedSearchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(searchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"kyuichyi"},"content":"        libraryManager.searchLibrary(searchResults, keyword);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kyuichyi"},"content":"        assertEquals(expectedSearchResults.toString(), searchResults.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kyuichyi"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"kyuichyi"},"content":"    void execute_searchCommandSearchMedicationName_expectSearchResult()","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"            throws DuplicateArgumentFoundException, HelpInvokedException, ArgumentNotFoundException,","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"            ArgumentNoValueException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"kyuichyi"},"content":"        String keyword \u003d \"paracetamol\";","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"        String inputString \u003d \"search -n \" + keyword;","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"kyuichyi"},"content":"        SearchResult searchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"kyuichyi"},"content":"                \"Paracetamol\",","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"kyuichyi"},"content":"                \"Fever, Pain\",","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"kyuichyi"},"content":"                \"Nausea, Liver damage (in high doses)\");","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"kyuichyi"},"content":"        LibraryManager libraryManager \u003d new LibraryManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"kyuichyi"},"content":"        SearchCommand command \u003d new SearchCommand(inputString);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"kyuichyi"},"content":"        command.execute();","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e expectedSearchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(searchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"kyuichyi"},"content":"        libraryManager.findMedication(searchResults, keyword);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"kyuichyi"},"content":"        assertEquals(expectedSearchResults.toString(), searchResults.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"kyuichyi"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"kyuichyi"},"content":"    void execute_searchCommandSearchIllness_expectSearchResults()","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"            throws DuplicateArgumentFoundException, HelpInvokedException, ArgumentNotFoundException,","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"            ArgumentNoValueException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"kyuichyi"},"content":"        String keyword \u003d \"fever\";","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"kyuichyi"},"content":"        String inputString \u003d \"search -i \" + keyword;","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"kyuichyi"},"content":"        SearchResult firstSearchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"kyuichyi"},"content":"                \"Aspirin\",","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"kyuichyi"},"content":"                \"Headache, Fever\",","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"kyuichyi"},"content":"                \"Stomach irritation, Bleeding\");","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"kyuichyi"},"content":"        SearchResult secondSearchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"kyuichyi"},"content":"                \"Paracetamol\",","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"kyuichyi"},"content":"                \"Fever, Pain\",","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"kyuichyi"},"content":"                \"Nausea, Liver damage (in high doses)\");","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"kyuichyi"},"content":"        LibraryManager libraryManager \u003d new LibraryManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"kyuichyi"},"content":"        SearchCommand command \u003d new SearchCommand(inputString);","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"kyuichyi"},"content":"        command.execute();","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e expectedSearchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(firstSearchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(secondSearchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"kyuichyi"},"content":"        libraryManager.findIllness(searchResults, keyword);","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"kyuichyi"},"content":"        assertEquals(expectedSearchResults.toString(), searchResults.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"kyuichyi"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"kyuichyi"},"content":"    void execute_searchCommandSearchSideEffect_expectSearchResult()","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"            throws DuplicateArgumentFoundException, HelpInvokedException, ArgumentNotFoundException,","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"            ArgumentNoValueException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"kyuichyi"},"content":"        String keyword \u003d \"fatigue\";","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"kyuichyi"},"content":"        String inputString \u003d \"search -s \" + keyword;","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"kyuichyi"},"content":"        SearchResult firstSearchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"kyuichyi"},"content":"                \"Loratadine\",","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"kyuichyi"},"content":"                \"Allergy symptoms\",","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"kyuichyi"},"content":"                \"Headache, Fatigue\");","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"kyuichyi"},"content":"        SearchResult secondSearchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"kyuichyi"},"content":"                \"Losartan\",","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"kyuichyi"},"content":"                \"High blood pressure\",","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"kyuichyi"},"content":"                \"Dizziness, Fatigue\");","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"kyuichyi"},"content":"        SearchResult thirdSearchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"kyuichyi"},"content":"                \"Metoprolol\",","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"kyuichyi"},"content":"                \"High blood pressure\",","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"kyuichyi"},"content":"                \"Dizziness, Fatigue\");","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"kyuichyi"},"content":"        LibraryManager libraryManager \u003d new LibraryManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"kyuichyi"},"content":"        SearchCommand command \u003d new SearchCommand(inputString);","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"kyuichyi"},"content":"        command.execute();","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e expectedSearchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(firstSearchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(secondSearchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(thirdSearchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"kyuichyi"},"content":"        libraryManager.searchLibrary(searchResults, keyword);","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"kyuichyi"},"content":"        assertEquals(expectedSearchResults.toString(), searchResults.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"kyuichyi":125,"wenenhoe":10}},{"path":"src/test/java/meditracker/command/TakeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"public class TakeCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    public void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectDailyMedicationTaken()","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"                60.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"                1,","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"                87);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.checkForDaily(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d DailyMedicationManager.getDailyMedication(listIndex, Period.MORNING);","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d String.format(\"take -l %d -m\", listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        TakeCommand command \u003d new TakeCommand(inputString);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(dailyMedication.isTaken());","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"e0958902":1,"T0nyLin":8,"wenenhoe":49}},{"path":"src/test/java/meditracker/command/UntakeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"public class UntakeCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    public void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectDailyMedicationUntaken()","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(\"Medication_A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication, Period.MORNING);    //only doing for MORNING sub list","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"untake -l 1 -m\";","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        UntakeCommand command \u003d new UntakeCommand(inputString);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedication.isTaken());","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"e0958902":1,"T0nyLin":10,"wenenhoe":32}},{"path":"src/test/java/meditracker/dailymedication/DailyMedicationManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.dailymedication;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.command.AddCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNoValueException;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InsufficientQuantityException;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.UnknownArgumentFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"public class DailyMedicationManagerTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"    // @@author T0nyLin","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"    public static void resetDailyMedicationManager() throws InvocationTargetException,","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"            IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        Method resetDailyMedicationManagerMethod","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"                \u003d DailyMedicationManager.class.getDeclaredMethod(\"clearDailyMedication\");","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"        resetDailyMedicationManagerMethod.setAccessible(true);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        resetDailyMedicationManagerMethod.invoke(DailyMedicationManager.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"    // @@author","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    public void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        resetDailyMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"    public void addDailyMedication_genericDailyMedication_dailyMedicationAdded()","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, ArgumentNoValueException, DuplicateArgumentFoundException,","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"            HelpInvokedException, UnknownArgumentFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"add -n Medication_A -q 60.0 -e 01/07/25 -dM 500.0 -dA 250.0 \"","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"                + \"-dE 300.0 -r cause_dizziness -rep 1\";","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"        AddCommand command \u003d new AddCommand(inputString);","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"        List\u003cDailyMedication\u003e morningMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"        List\u003cDailyMedication\u003e afternoonMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"        List\u003cDailyMedication\u003e eveningMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication morningMeds \u003d new DailyMedication(\"Medication_A\");","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"        morningMedications.add(morningMeds);","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication afternoonMeds \u003d new DailyMedication(\"Medication_A\");","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"        afternoonMedications.add(afternoonMeds);","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication eveningMeds \u003d new DailyMedication(\"Medication_A\");","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"        eveningMedications.add(eveningMeds);","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"e0958902"},"content":"        List\u003cMedication\u003e medicationList \u003d MedicationManager.getMedications();","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.printTodayMedications(medicationList,","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"                morningMedications, \"Morning:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.printTodayMedications(medicationList,","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"                afternoonMedications, \"Afternoon:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.printTodayMedications(medicationList,","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"                eveningMedications, \"Evening:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication morningMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication afternoonMedicationTest \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"                DailyMedicationManager.getDailyMedication(actualIndex, Period.AFTERNOON);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication eveningMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.EVENING);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(morningMeds.toString(), morningMedicationTest.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(afternoonMeds.toString(), afternoonMedicationTest.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(eveningMeds.toString(), eveningMedicationTest.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"    public void takeDailyMedication_genericDailyMedication_dailyMedicationTaken()","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"            throws InsufficientQuantityException, MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"        String medicationName \u003d \"TestMedication\";","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"        double oldQuantity \u003d 60;","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"        double dosage \u003d 10;","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"                medicationName,","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"                oldQuantity,","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"                1,","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"                87);","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(medicationName);","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedication.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.takeDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(dailyMedicationTest.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"        double expectedQuantity \u003d oldQuantity - dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(medication.getQuantity(), expectedQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"    public void takeDailyMedication_lowQuantityMedication_insufficientQuantity() {","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"        String medicationName \u003d \"TestMedication\";","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"        double oldQuantity \u003d 5;","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"        double dosage \u003d 10;","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"                medicationName,","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"                oldQuantity,","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"                1,","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"                87);","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(medicationName);","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedication.isTaken());","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication, Period.MORNING);","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"                InsufficientQuantityException.class,","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"                () -\u003e DailyMedicationManager.takeDailyMedication(actualIndex, Period.MORNING));","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"    public void untakeDailyMedication_genericDailyMedication_dailyMedicationNotTaken()","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"wenenhoe"},"content":"            throws MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"wenenhoe"},"content":"        String medicationName \u003d \"TestMedication\";","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"wenenhoe"},"content":"        double oldQuantity \u003d 60;","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"wenenhoe"},"content":"        double dosage \u003d 10;","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"wenenhoe"},"content":"                medicationName,","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"wenenhoe"},"content":"                oldQuantity,","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"wenenhoe"},"content":"                1,","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"wenenhoe"},"content":"                87);","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(medicationName);","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"wenenhoe"},"content":"        dailyMedication.take();","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(dailyMedication.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.untakeDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedicationTest.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"wenenhoe"},"content":"        double expectedQuantity \u003d oldQuantity + dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(medication.getQuantity(), expectedQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"e0958902":2,"T0nyLin":57,"wenenhoe":120}},{"path":"src/test/java/meditracker/logging/MediLoggerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.logging;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"public class MediLoggerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    public void getMediLogger_noInput_loggerReturned() {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"        Logger log \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"        assertNotNull(log);","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"annoy-o-mus":17}},{"path":"src/test/java/meditracker/medication/MedicationManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.medication;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class MedicationManagerTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"    // @@author e0958902","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"    public static void resetMedicationManager() throws InvocationTargetException,","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"            IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"        Method resetMedicationManagerMethod","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"                \u003d MedicationManager.class.getDeclaredMethod(\"clearMedication\");","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"        resetMedicationManagerMethod.setAccessible(true);","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"        resetMedicationManagerMethod.invoke(MedicationManager.class);","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"    // @@author","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"e0958902":9,"wenenhoe":8}},{"path":"src/test/java/meditracker/storage/FilePathCheckerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"public class FilePathCheckerTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    public void isValidJsonFullPath_validFullPaths_returnedTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"        boolean result;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"        // https://www.baeldung.com/java-detect-os","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"        if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"            Path validRootDirectory \u003d Path.of(\"C:/noFolderExists/noFileExists.jsON\");","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"            result \u003d FilePathChecker.isValidFullPath(validRootDirectory);","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"            assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"        Path emptyFolderName \u003d Path.of(\"data/aa/////b/c//json.jSoN\");","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(emptyFolderName);","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"        Path validSubDirectory1 \u003d Path.of(\"/common/contains/com/json.JSON\");","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(validSubDirectory1);","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"        Path validSubdirectory2 \u003d Path.of (\"\\\\prnter\\\\auxiliary\\\\null\\\\json.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(validSubdirectory2);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"    public void isValidJsonFullPath_invalidExtensions_returnedFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        boolean result;","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"        Path emptyPath \u003d Path.of(\"\");","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(emptyPath);","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"        Path rootPath \u003d Path.of(\"/\");","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(rootPath);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"        Path emptyExtension \u003d Path.of(\"data/outfile\");","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(emptyExtension);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"        Path invalidExtension \u003d Path.of(\"data/notJsonExtension.exe\");","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(invalidExtension);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"    public void isValidJsonFullPath_invalidFolders_returnedFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"        boolean result;","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"        if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"            Path invalidRootDirectory \u003d Path.of(\"M:/noFolderExists/noFileExists.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"            result \u003d FilePathChecker.isValidFullPath(invalidRootDirectory);","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"            assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"        Path illegalFolderOne \u003d Path.of(\"CoM1/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(illegalFolderOne);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"        Path illegalFolderTwo \u003d Path.of(\"newFolder/prn/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(illegalFolderTwo);","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"        Path traversalFolders \u003d Path.of(\"../../testIllegal.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(traversalFolders);","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"        Path invalidSubDirectory \u003d Path.of(\"/common/contains/./json.JSON\");","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(invalidSubDirectory);","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"    public void containsIllegalCharacters_invalidCharacters_returnedTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"        boolean result;","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/\u003cout.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/out\u003e.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"        // The check for colon is done by `containsIllegalFolderNames` (for unix)","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"        // Furthermore, the `Path.of` will throw an `InvalidPathException` if it encounters the colon (for windows)","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/:fold/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"            Path path \u003d Path.of(\"/data/:fold/out.json\");","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"            result \u003d FilePathChecker.containsIllegalFolderNames(path);","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"            assertTrue(result);","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"            assertTrue(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/\\\"IllegalQuote\\\"/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/ou|t.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/?out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/*/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/\u0027IllegalQuote1\u0027/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"annoy-o-mus":124}},{"path":"src/test/java/meditracker/storage/JsonExporterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.MediTrackerConfig;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":" * A class to test the JSON export functionality.","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"public class JsonExporterTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    private static Path fileToExport \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"     * Pre-populate the medication manager with some medications that we need to simulate data exporting. They can be","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"     * potentially errornous (i.e. empty field where they are not supposed to be).","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"    @BeforeAll","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"    public static void initiateMedicationManager() {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"        Medication med1 \u003d new Medication(","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"                \"Test Valid Medication 1\",","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"                69.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"                \"23/11/24\",","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"                \"No Remarks\",","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"                87","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"        Medication med2 \u003d new Medication(","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"                \"Test Valid Medication 2\",","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"                10000.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"                \"01/01/25\",","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"                \"\",","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"                87","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"        Medication med3 \u003d new Medication(","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"                \"Invalid Medication 4\",","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"                999.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"                \"\",","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"                \"null\",","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"                87","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"        MedicationManager.addMedication(med1);","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"        MedicationManager.addMedication(med2);","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"        MedicationManager.addMedication(med3);","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"    public void setUpWriteFile() {","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"        Path jsonSaveFile \u003d MediTrackerConfig.getDefaultJsonSaveFilePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"        Path jsonFolder \u003d FileReaderWriter.getFullPathComponent(jsonSaveFile, true);","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"        fileToExport \u003d FileReaderWriter.createTempSaveFile(jsonFolder);","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"    @AfterEach","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"    public void cleanup() {","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"            if (fileToExport !\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"                Files.deleteIfExists(fileToExport);","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"    public void placeHolder() {","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"        JsonExporter.saveMedicationDataToJson(fileToExport);","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"annoy-o-mus":93}},{"path":"src/test/java/meditracker/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package meditracker.ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"//Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"class UiTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    private static final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    private static final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"    @BeforeAll","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    public static void setUpStream() {","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    @AfterAll","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    public static void restoreStreams() {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"    void printMedsList_sizeOfMedicationList_expectPrintedList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"        List\u003cDailyMedication\u003e medications \u003d new ArrayList\u003c\u003e(1);","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        Ui.printMedsList(medications);","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"        StringBuilder expectedOutput \u003d new StringBuilder();","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication dailyMedication : medications) {","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"            int numbering \u003d medications.indexOf(dailyMedication) + 1;","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"            expectedOutput.append(\"\\t\").","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"                    append(numbering).append(\". \").append(dailyMedication)","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(expectedOutput.toString(), output.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"e0958902":1,"T0nyLin":44}}]
