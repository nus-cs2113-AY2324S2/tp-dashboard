[{"path":".github/pull_request_template.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# Checklist for feature implementation and modification","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"Closes #\u003cIssue_Number\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"- [ ] Added relevant milestone (under milestone tab on the right)","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"- Implementation","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Sources (if any) credited under both relevant section(s) and Developer Guide (Acknowledgement)","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] JUnit Test(s)","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"- Documentation","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] JavaDoc for classes and methods","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"  - Developer Guide","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Design (Can add as a todo statement for later on)","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Implementation (Can add as a todo statement for later on)","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Relevant User Story present","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Non-functional requirement(s) that the feature addresses (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Glossary of the (technical) term(s) used (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Specialised instructions for manual testing (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"  - User Guide","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Description and usage of feature (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"  - Contributions (under `/docs/team/*.md`)","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Code/Feature/Enhancement contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Developer Guide contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] User Guide contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Misc and team-based admin tasks (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"# Checklist for non-implementation related PR","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"Closes #\u003cIssue_Number\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"- [ ] Added relevant milestone (under milestone tab on the right)","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"- Documentation (Contributions)","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Developer Guide contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] User Guide contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Review contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Miscellaneous and team-based admin tasks (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"# Additional Information","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- Add any useful information related to the PR here --\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"Nil","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"annoy-o-mus":37}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# MediTracker ","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"This is a project based off of a template for a greenfield Java project. Given below are instructions on how to use it.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"annoy-o-mus":2,"-":62}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    //https://central.sonatype.com/artifact/org.json/json","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    implementation group: \u0027org.json\u0027, name: \u0027json\u0027, version: \u002720240303\u0027","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"    mainClass.set(\"meditracker.MediTracker\")","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"    archiveBaseName.set(\"meditracker\")","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"annoy-o-mus":4,"T0nyLin":1,"-":44}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"    https://se-education.org/guides/conventions/java/basic.html","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2022-04-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2022-04-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2022-04-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2022-04-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2022-04-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2022-04-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2022-04-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2022-04-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2022-04-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2022-04-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2022-04-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2022-04-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2022-04-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-04-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2022-04-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2022-04-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2022-04-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2022-04-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2022-04-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2022-04-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2022-04-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2022-04-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2022-04-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2022-04-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2022-04-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2022-04-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2022-04-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2022-04-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2022-04-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2022-04-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2022-04-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2022-04-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2022-04-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":274,"author":{"gitId":"T0nyLin"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"T0nyLin":2,"-":285}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |    Name    | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"--------|:----------:|:--------------:|:---------:","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"![](https://avatars.githubusercontent.com/u/33289235) | Hoe Wen En | [Github](https://github.com/wenenhoe) | [Portfolio](team/wenenhoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"![](https://avatars.githubusercontent.com/u/48584322?v\u003d4) | Nick Chua  | [Github](https://github.com/nickczh) | [Portfolio](team/nickczh.md)","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"![](https://avatars.githubusercontent.com/u/122875764) | Nyan Lin Htet | [Github](https://github.com/T0nyLin) | [Portfolio](team/t0nylin.md)","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"![](https://avatars.githubusercontent.com/u/156929749) | Eric Sim Chong Li | [Github](https://github.com/e0958902) | [Portfolio](team/e0958902.md)","lastModifiedDate":"2024-04-06"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"![](avatars.githubusercontent.com/u/110549110) | Kaitlyn Chong | [Github](https://github.com/kyuichyi) | [Portfolio](team/kyuichyi.md)","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"![](https://avatars.githubusercontent.com/u/55198236) | Neo Song Xuan | [Github](https://github.com/annoy-o-mus) | [Portfolio](team/annoy-o-mus.md)","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"nickczh":2,"e0958902":1,"annoy-o-mus":1,"T0nyLin":1,"kyuichyi":1,"wenenhoe":1,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"layout: default","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"title: Developer Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"# MediTracker Developer Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"Ideas and structure for our Developer Guide: ","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"- [AddressBook 3](https://se-education.org/addressbook-level3/DeveloperGuide.html)","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"Ideas and structure for the User Guide: ","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"- [AddressBook 3](https://se-education.org/addressbook-level3/UserGuide.html)","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"- [Previous Team\u0027s User Guide](https://ay2223s1-cs2103t-w16-2.github.io/tp/UserGuide.html) for more styling inspiration and adaptation","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"Additional Packages used: ","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"- [JSON](https://github.com/stleary/JSON-java)","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"- GitHub\u0027s built-in Jekyll integration to allow us to render the documentation in a slightly different style.","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"# Overview","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"* [MediTracker Developer Guide](#meditracker-developer-guide)","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"  * [Acknowledgements](#acknowledgements)","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"* [Overview](#overview)","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"* [Setting up and getting started](#setting-up-and-getting-started)","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"  * [Setting up the project in your computer](#setting-up-the-project-in-your-computer)","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"* [Design \u0026 implementation](#design--implementation)","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"  * [Add Medication Command](#add-medication-command)","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"    * [Expanding Step 7](#expanding-step-7)","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"  * [Modify Medication Command](#modify-medication-command)","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"  * [List Medication Command](#list-medication-command)","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"  * [Utilising the Period and TimeRange](#utilising-the-period-and-timerange)","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"  * [View Medication Command](#view-medication-command)","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"  * [Search Medication Command](#search-medication-command)","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"  * [Utilising the argument parser](#utilising-the-argument-parser)","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"  * [Storage Design component](#storage-design-component)","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"  * [Exporting data](#exporting-data-)","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"  * [Importing data](#importing-data)","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"  * [Simulated Time](#simulated-time)","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"* [Product scope](#product-scope)","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"  * [Target user profile](#target-user-profile)","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"  * [Value proposition](#value-proposition)","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"  * [User Stories](#user-stories)","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"  * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"* [Instructions for manual testing](#instructions-for-manual-testing)","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"  * [Launching the Program](#launching-the-program)","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"  * [Adding some medication information](#adding-some-medication-information)","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"  * [Modifying some medication information](#modifying-some-medication-information)","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"  * [Taking the medication](#taking-the-medication)","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"  * [Saving data](#saving-data)","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"# Setting up and getting started","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"## Setting up the project in your computer","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"e0958902"},"content":"\u003cdiv class\u003d\"warning-box\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"e0958902"},"content":":warning: \u003cstrong\u003eWarning: \u003c/strong\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"e0958902"},"content":"Follow the steps in the following guide precisely...","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"e0958902"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"e0958902"},"content":"First, fork this [repo](https://github.com/AY2324S2-CS2113T-T09-1/tp), ","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"e0958902"},"content":"and clone the fork into your computer.","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"e0958902"},"content":"We highly recommend you to use Intellij IDEA.","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"e0958902"},"content":"1. **Configure the JDK**: Follow the ","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"e0958902"},"content":"[guide IDEA: Configuring the JDK](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) ","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"e0958902"},"content":"to ensure Intellij is configured to use JDK 11.","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"e0958902"},"content":"2. **Import the project as a Gradle project**: Follow the ","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"e0958902"},"content":"[guide IDEA: Importing a Gradle project](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) ","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"e0958902"},"content":"to import the project into IDEA.","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"e0958902"},"content":"3. **Verify the setup**: ","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"e0958902"},"content":"   1. meditracker.MediTracker and try a few commands.","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"e0958902"},"content":"   You can refer to our [UserGuide](UserGuide.md).","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"e0958902"},"content":"   2. Run the tests to ensure they all pass using Gradle.","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"e0958902"},"content":"      Open a console and run the command gradlew clean test (Mac/Linux: ./gradlew clean test)","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"# Design \u0026 implementation","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable. --\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":85,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- Comment: Perhaps add sequence diagram or class diagram here to show the interactions and relationships since this seems to involve quite a lot of classes? --\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"## Add Medication Command","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"nickczh"},"content":"The add medication command extends from the Command parent class and implements the following operations:","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"nickczh"},"content":"- `execute()` - Adds the medication object into the respective medication managers.","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"nickczh"},"content":"- `createMedication()` - Creates and populates a Medication object with values derived from parsed command-line arguments and the current date.","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"nickczh"},"content":"- `assertionTest()` - Asserts that medicine has been added to both medication managers.","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"nickczh"},"content":"Given below is an example usage scenario, along with the sequence diagram and how the add command behaves at each step:","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"![AddCommand.png](images/AddCommand.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"nickczh"},"content":"- Step 1. User initiates the process.","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"nickczh"},"content":"- Step 2. `AddCommand` constructs an instance using the constructor `AddCommand(String arguments)` which includes ","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"nickczh"},"content":"parsing the arguments.","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"nickczh"},"content":"- Step 3. `ArgumentList` parses the provided arguments.","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"nickczh"},"content":"- Step 4. `AddCommand` calls `execute()` to add the medication.","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"nickczh"},"content":"- Step 5. Inside `execute()`, AddCommand calls `createMedication()` to construct a `Medication` object.","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"nickczh"},"content":"- Step 6. Adds the newly created `Medication` object to `MedicationManager`.","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"nickczh"},"content":"- Step 7. Checks and updates daily medication records in `DailyMedicationManager`.","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"nickczh"},"content":"- Step 8. `Ui` displays success or error messages to the user.","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"T0nyLin"},"content":"### Expanding Step 7","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"T0nyLin"},"content":"![sublist](images/AddToSubLists.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"T0nyLin"},"content":"- Every medication is checked if they contain dosage for each `period` (morning, afternoon, evening) of the day.","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"T0nyLin"},"content":"- If `getDosage()` in each period is not null, then a new `dailyMedication` object is created with the `name`, `dosage` ","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"T0nyLin"},"content":"and `period` values.","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"T0nyLin"},"content":"- This `dailyMedication` is then added to the respective sub lists according to the `period`.","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"T0nyLin"},"content":"- Finally, the `dailyMedication` is saved into the text file and returns `true` if saved successfully.","lastModifiedDate":"2024-04-15"},{"lineNumber":115,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"---","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"## Modify Medication Command","lastModifiedDate":"2024-04-15"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"The modify medication command extends from Command parent class with the following methods:","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"- execute() - Executes the modify command and modifies an existing Medication object using the provided information","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"  in the medication list","lastModifiedDate":"2024-04-15"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"- updateMedication(medication:Medication) - Updates medication info based on the arguments passed in by the user","lastModifiedDate":"2024-04-15"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"- rollbackChanges(medication:Medication, medicationCopy:Medication) - Rollbacks the changes made to Medication and","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"  DailyMedication. The `medicationCopy` object will be read from and the `medication` will be written to for the","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"  rollback operation.","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"The `ModifyCommand` allows modifying information, such as the quantity, dosage, expiration date etc., that were","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"previously added with the `AddCommand`. Given below is the usage scenario of `ModifyCommand`:","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"![ModifyCommand.png](images/ModifyCommand.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"- Step 1. User initiates `ModifyCommand` using `MediTracker`","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"- Step 2. `ModifyCommand` constructs an instance using the constructor `ModifyCommand(arguments: String)`.","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"- Step 3. Then it uses a `Map\u003cArgumentName, String\u003e` to store the arguments parsed in","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"  `ArgumentList.parse(arguments: String)`.","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"- Step 4. A subsequent call to `execute()` will fetch the list index specified by the user using","lastModifiedDate":"2024-04-15"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"  `Command.getListIndex(parsedArguments: Map\u003cArgumentName, String\u003e)`","lastModifiedDate":"2024-04-15"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"- Step 5. The `Medication` associated at that index of all the medications will be fetched with","lastModifiedDate":"2024-04-15"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"  `MedicationManager.getMedication(listIndex: int)`","lastModifiedDate":"2024-04-15"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"- Step 6. `AddCommand` will perform a deep copy of the Medication object before calling","lastModifiedDate":"2024-04-15"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"  `updateMedication(medication: Medication)`","lastModifiedDate":"2024-04-15"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"- Step 7. If successful, it will show the success message on the command-line interface. Else, it will","lastModifiedDate":"2024-04-15"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"  show the error message and begin rollback process by calling","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"  `rollbackChanges(medication:Medication, medicationCopy:Medication)`","lastModifiedDate":"2024-04-15"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"Sequence Diagram for `updateMedication(medication:Medication)`","lastModifiedDate":"2024-04-15"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"![ModifyCommand_updateMedication.png](images/ModifyCommand_updateMedication.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"- Step 1. Iterate through all the arguments parsed from the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"- Step 2. If the `ArgumentName` is `ArgumentName.NAME`, the `DailyMedication` name will be updated.","lastModifiedDate":"2024-04-15"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"- Step 3. Set the appropriate `Medication` value depending on the `ArgumentName` type.","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"wenenhoe"},"content":"- Step 4. Check the validity of the `Medication` object.","lastModifiedDate":"2024-04-15"},{"lineNumber":152,"author":{"gitId":"wenenhoe"},"content":"- Step 5. Check if dosage or repeat frequency has been modified. If it has been modified, show the","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"wenenhoe"},"content":"  warning message to the user to notify them of the changes being reflected after today.","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"wenenhoe"},"content":"Sequence Diagram for `rollbackChanges(medication:Medication, medicationCopy:Medication)`","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"wenenhoe"},"content":"![ModifyCommand_rollbackChanges.png](images/ModifyCommand_rollbackChanges.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":157,"author":{"gitId":"wenenhoe"},"content":"- Step 1. Checks if `processedArguments` contain `ArgumentName.NAME`. If it does, revert the","lastModifiedDate":"2024-04-15"},{"lineNumber":158,"author":{"gitId":"wenenhoe"},"content":"  `DailyMedication` name as well.","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"wenenhoe"},"content":"- Step 2. Revert the `medication` object with the `medicationCopy`.","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"annoy-o-mus"},"content":"## List Medication Command","lastModifiedDate":"2024-04-15"},{"lineNumber":164,"author":{"gitId":"T0nyLin"},"content":"![sublist](images/ListCommand.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"e0958902"},"content":"The list medication command extends from Command parent class and contains the following methods:","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"kyuichyi"},"content":"- execute() - Executes the list command and performs its specific task, -t. ","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"T0nyLin"},"content":"- The task can be either `list -t all` to list all medications or `list -t today` to list medications for the day,","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"T0nyLin"},"content":"which is divided into three categories -\u003e Morning, Afternoon and Evening.","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":171,"author":{"gitId":"T0nyLin"},"content":"**The \u0027list -t\u0027 command requires the following:**","lastModifiedDate":"2024-04-08"},{"lineNumber":172,"author":{"gitId":"T0nyLin"},"content":"- \u0027all\u0027 - to run printAllMedications() from the MedicationManager.","lastModifiedDate":"2024-04-08"},{"lineNumber":173,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":174,"author":{"gitId":"T0nyLin"},"content":"**The following commands print medications to be taken in a day:**","lastModifiedDate":"2024-04-08"},{"lineNumber":175,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!--Comment: Perhaps clarify what is the difference between inputting \"today -m\", \"today -a\" and \"today -e\"? --\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":176,"author":{"gitId":"T0nyLin"},"content":"1. `today` - to run printMedications() from the DailyMedicationManager.","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"T0nyLin"},"content":"2. `today -m` to run printTodayMedications(List\u003cMedication\u003e medications, List\u003cDailyMedication\u003e subList, String period)","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"T0nyLin"},"content":"   from the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"T0nyLin"},"content":"3. `today -a` to run printTodayMedications(List\u003cMedication\u003e medications, List\u003cDailyMedication\u003e subList, String period)","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"T0nyLin"},"content":"   from the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"T0nyLin"},"content":"4. `today -e` to run printTodayMedications(List\u003cMedication\u003e medications, List\u003cDailyMedication\u003e subList, String period)","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"T0nyLin"},"content":"   from the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"T0nyLin"},"content":"* On first run, the programs reads into the MedicationManager and determines if a medication is to be added to today\u0027s ","lastModifiedDate":"2024-04-15"},{"lineNumber":185,"author":{"gitId":"T0nyLin"},"content":"list, based on the repeat value.","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"T0nyLin"},"content":"* The repeat value ranges from `1 to 7` (number of days in a week)","lastModifiedDate":"2024-04-08"},{"lineNumber":187,"author":{"gitId":"T0nyLin"},"content":"* This verifies if the user is taking that medication every day / every 2 days / every 3 days etc.","lastModifiedDate":"2024-04-08"},{"lineNumber":188,"author":{"gitId":"T0nyLin"},"content":"* Then, based on the dosage flags (from `add` command),","lastModifiedDate":"2024-04-08"},{"lineNumber":189,"author":{"gitId":"T0nyLin"},"content":"  * -dA [quantity] - will add the medication into the morningMedication list","lastModifiedDate":"2024-04-08"},{"lineNumber":190,"author":{"gitId":"T0nyLin"},"content":"  * -dM [quantity] - will add the medication into the afternoonMedication list","lastModifiedDate":"2024-04-08"},{"lineNumber":191,"author":{"gitId":"T0nyLin"},"content":"  * -dE [quantity] - will add the medication into the eveningMedication list","lastModifiedDate":"2024-04-08"},{"lineNumber":192,"author":{"gitId":"T0nyLin"},"content":"* Additional checks in `ListCommand.execute()` prevent user from entering unnecessary flags or words **after** ","lastModifiedDate":"2024-04-08"},{"lineNumber":193,"author":{"gitId":"T0nyLin"},"content":"`list -t all` and `list -t today (-m/-a/-e)`.","lastModifiedDate":"2024-04-08"},{"lineNumber":194,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":195,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":196,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":197,"author":{"gitId":"annoy-o-mus"},"content":"## Utilising the Period and TimeRange","lastModifiedDate":"2024-04-15"},{"lineNumber":198,"author":{"gitId":"T0nyLin"},"content":"* A day is divided into three `Periods`: Morning, afternoon and evening","lastModifiedDate":"2024-04-08"},{"lineNumber":199,"author":{"gitId":"T0nyLin"},"content":"* `TimeRange` determines the time when a medication is to be taken","lastModifiedDate":"2024-04-08"},{"lineNumber":200,"author":{"gitId":"T0nyLin"},"content":"  * Morning: from `Midnight` to `Noon`","lastModifiedDate":"2024-04-08"},{"lineNumber":201,"author":{"gitId":"T0nyLin"},"content":"  * Afternoon: from `Noon` to `6pm`","lastModifiedDate":"2024-04-08"},{"lineNumber":202,"author":{"gitId":"T0nyLin"},"content":"  * Evening: from `6pm` to `Midnight`","lastModifiedDate":"2024-04-08"},{"lineNumber":203,"author":{"gitId":"T0nyLin"},"content":"* `timeRange.isWithinTimeRange` detects if the current time of the day falls into one of the 3 periods, ","lastModifiedDate":"2024-04-08"},{"lineNumber":204,"author":{"gitId":"T0nyLin"},"content":"then automatically checks off the relevant medication in the DailyMedication list, without user specifying ","lastModifiedDate":"2024-04-08"},{"lineNumber":205,"author":{"gitId":"T0nyLin"},"content":"`(-m/-a/-e)` **after** `take -l [index]`.","lastModifiedDate":"2024-04-08"},{"lineNumber":206,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":207,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":208,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":209,"author":{"gitId":"annoy-o-mus"},"content":"## View Medication Command","lastModifiedDate":"2024-04-15"},{"lineNumber":210,"author":{"gitId":"e0958902"},"content":"The view medication command extends from Command parent class and contains the following:","lastModifiedDate":"2024-04-15"},{"lineNumber":211,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":212,"author":{"gitId":"e0958902"},"content":"With the help of a sequence diagram given below, it explains the usage scenario on how ","lastModifiedDate":"2024-04-15"},{"lineNumber":213,"author":{"gitId":"e0958902"},"content":"view command behaves at each step.","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"e0958902"},"content":"![ViewCommand.png](images/ViewCommand.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"e0958902"},"content":"- Step 1. User initiates a viewCommand via MediTracker.","lastModifiedDate":"2024-04-15"},{"lineNumber":217,"author":{"gitId":"e0958902"},"content":"- Step 2. `ViewCommand` constructs an instance using the constructor `ViewCommand(String arguments)`.","lastModifiedDate":"2024-04-15"},{"lineNumber":218,"author":{"gitId":"e0958902"},"content":"- Step 3. Then it uses an `ArgumentList` to store the arguments.","lastModifiedDate":"2024-04-15"},{"lineNumber":219,"author":{"gitId":"e0958902"},"content":"- Step 4. The ArgumentList is parsed in `ArgumentParser`.","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"e0958902"},"content":"- Step 5. `If` the parsed arguments is one, then `ViewCommand` calls `execute()` to show the specific medication","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"e0958902"},"content":"- Step 6. `execute()` calls `printSpecificMedication(medication) in `MedicationManager`.","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"e0958902"},"content":"- Step 7. `MedicationManager` then gets the medication via `getMedication(medication)` ","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"T0nyLin"},"content":"and displays the medication via `printSpecificMed(medicationDetails)` in `Ui`.","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"e0958902"},"content":"- Step 8. `Ui` displays a success message to the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"e0958902"},"content":"- Step 9. `Else`, if the parsed arguments is more than one, then `Ui` displays an error message to the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":226,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"kyuichyi"},"content":"  ","lastModifiedDate":"2024-04-15"},{"lineNumber":228,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"kyuichyi"},"content":"The search medication command allows users to search for medications from the local medication library.","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"kyuichyi"},"content":"The search medication command extends from Command parent class and contains the following methods:","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"kyuichyi"},"content":"- execute() - Executes the search function. It searches the local medication library for medication names, what","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"kyuichyi"},"content":"  illnesses they treat and their side effects, and prints the results to the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"kyuichyi"},"content":"Here is a sequence diagram that explains the usage for the search command:","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"kyuichyi"},"content":"![SearchCommand.png](images/SearchCommand.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":237,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":239,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":240,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!--Comment: Consider using a class diagram to illustrate this to provide visual feedback.--\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":242,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":243,"author":{"gitId":"annoy-o-mus"},"content":"## Utilising the argument parser","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":245,"author":{"gitId":"wenenhoe"},"content":"The `ArgumentParser` requires the following to work:","lastModifiedDate":"2024-03-26"},{"lineNumber":246,"author":{"gitId":"wenenhoe"},"content":"1. `ArgumentList` object","lastModifiedDate":"2024-03-26"},{"lineNumber":247,"author":{"gitId":"wenenhoe"},"content":"2. Raw user input in `String`","lastModifiedDate":"2024-03-26"},{"lineNumber":248,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":249,"author":{"gitId":"wenenhoe"},"content":"The `ArgumentList` object constitutes a combination of `Argument` objects. The constructor for ","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"wenenhoe"},"content":"the `ArgumentList` takes in a variable amount of `Argument`-extended classes. Additional assertion","lastModifiedDate":"2024-03-26"},{"lineNumber":251,"author":{"gitId":"wenenhoe"},"content":"tests have been added to ensure that certain attributes of the `Argument` classes do not clash with","lastModifiedDate":"2024-03-26"},{"lineNumber":252,"author":{"gitId":"wenenhoe"},"content":"one another. `HelpArgument` is automatically added when an `ArgumentList` object is instantiated.","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"wenenhoe"},"content":"Calling `ArgumentList.parse` with empty `String` or invoking with the argument `-h` will trigger the","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"wenenhoe"},"content":"help message to be printed on the console.","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!--Comment: Consider explaining how \"trigger\" works --\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":256,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":257,"author":{"gitId":"wenenhoe"},"content":"An `Argument` object consists of the following:","lastModifiedDate":"2024-03-26"},{"lineNumber":258,"author":{"gitId":"wenenhoe"},"content":"1. `name`: Name of the argument, uses enum type `ArgumentName` as this value is used by `ArgumentParser` as well","lastModifiedDate":"2024-03-26"},{"lineNumber":259,"author":{"gitId":"wenenhoe"},"content":"2. `flag`: Takes the form of `-*` where `*` represents any number of alphabetic characters","lastModifiedDate":"2024-03-26"},{"lineNumber":260,"author":{"gitId":"wenenhoe"},"content":"3. `help`: Used in printing help message to provide user with the usage for the argument","lastModifiedDate":"2024-04-15"},{"lineNumber":261,"author":{"gitId":"wenenhoe"},"content":"4. `isOptional`: A `boolean` value to specify whether this argument is optional or not. This value is utilised","lastModifiedDate":"2024-04-15"},{"lineNumber":262,"author":{"gitId":"wenenhoe"},"content":"by the `ArgumentParser` to determine whether the argument is required, and will throw a `ArgumentNotFound` ","lastModifiedDate":"2024-03-26"},{"lineNumber":263,"author":{"gitId":"wenenhoe"},"content":"exception if this argument is required but not found in user specified argument string.","lastModifiedDate":"2024-03-26"},{"lineNumber":264,"author":{"gitId":"wenenhoe"},"content":"5. `hasValue`: A `boolean` value to specify whether this argument has a corresponding value tied to it. ","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"wenenhoe"},"content":"`ArgumentParser` requires this to know whether to take the value specified by the user.","lastModifiedDate":"2024-03-26"},{"lineNumber":266,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":267,"author":{"gitId":"wenenhoe"},"content":"Additional information regarding the `ArgumentName` enum:","lastModifiedDate":"2024-03-26"},{"lineNumber":268,"author":{"gitId":"wenenhoe"},"content":"- To create a new enum, follow the following convention: `ALL_CAPS_NAME(“justFollowAttributeNamingConvention”)`","lastModifiedDate":"2024-03-26"},{"lineNumber":269,"author":{"gitId":"wenenhoe"},"content":"- This enum is used in `ArgumentParser` when it returns a `Map\u003cArgumentName, String\u003e`, where the enum is used as","lastModifiedDate":"2024-03-26"},{"lineNumber":270,"author":{"gitId":"wenenhoe"},"content":"the key. In order to query the returned data structure, you can utilise the same enum.","lastModifiedDate":"2024-03-26"},{"lineNumber":271,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":272,"author":{"gitId":"wenenhoe"},"content":"In order to utilise the argument parser,","lastModifiedDate":"2024-03-26"},{"lineNumber":273,"author":{"gitId":"wenenhoe"},"content":"1. Determine if the `Argument` variant already exist. If not, create a new class and extend the `Argument` class.","lastModifiedDate":"2024-03-26"},{"lineNumber":274,"author":{"gitId":"wenenhoe"},"content":"2. Prior to completing the creation of your new class, create a new enum in `ArgumentName`.","lastModifiedDate":"2024-03-26"},{"lineNumber":275,"author":{"gitId":"wenenhoe"},"content":"3. In the class/method that you intend to use the `ArgumentParser`, create a `ArgumentList` and specify the required","lastModifiedDate":"2024-03-26"},{"lineNumber":276,"author":{"gitId":"wenenhoe"},"content":"`Argument` objects.","lastModifiedDate":"2024-03-26"},{"lineNumber":277,"author":{"gitId":"wenenhoe"},"content":"4. Finally, invoking `ArgumentList.parse` with the `String` object to obtain the parsed argument values.","lastModifiedDate":"2024-03-26"},{"lineNumber":278,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":279,"author":{"gitId":"wenenhoe"},"content":"Overview of the `meditracker.argument` core classes:","lastModifiedDate":"2024-03-26"},{"lineNumber":280,"author":{"gitId":"wenenhoe"},"content":"![ArgumentPackageClassDiagram.png](images/ArgumentPackageClassDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":282,"author":{"gitId":"wenenhoe"},"content":"---","lastModifiedDate":"2024-03-26"},{"lineNumber":283,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":284,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"annoy-o-mus"},"content":"## Storage Design component","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"annoy-o-mus"},"content":"The `storage` package primarily consists of utility classes that serves to write to and read from the files and managers.","lastModifiedDate":"2024-04-15"},{"lineNumber":288,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"annoy-o-mus"},"content":"This package has 2 core utility classes: `FilePathChecker` and `FileReaderWriter`.","lastModifiedDate":"2024-04-15"},{"lineNumber":290,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"annoy-o-mus"},"content":"The `FilePathChecker` class handles all the input checking from the `load` and `save` commands to make sure that the path supplied is supported by the Operating System.","lastModifiedDate":"2024-04-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":293,"author":{"gitId":"annoy-o-mus"},"content":"The `FileReaderWriter` class serves as a facade class, the \"interface\" that handles all the exporting and importing related functionality.","lastModifiedDate":"2024-04-15"},{"lineNumber":294,"author":{"gitId":"annoy-o-mus"},"content":"All other functions and classes will have to call `FileReaderWriter` in order to read or save their data.","lastModifiedDate":"2024-04-15"},{"lineNumber":295,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":296,"author":{"gitId":"annoy-o-mus"},"content":"The `FileReaderWriter` then calls `JsonExporter`, `JsonImporter` and `DailyMedicationExporter` (all of them are package-private classes) depending on the kind of data and the operation (to save or load).","lastModifiedDate":"2024-04-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":298,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":299,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":300,"author":{"gitId":"annoy-o-mus"},"content":"## Exporting data ","lastModifiedDate":"2024-04-15"},{"lineNumber":301,"author":{"gitId":"annoy-o-mus"},"content":"![jsonFileExport.png](images/JsonFileExport.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":302,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":303,"author":{"gitId":"annoy-o-mus"},"content":"How the exporting works:","lastModifiedDate":"2024-04-15"},{"lineNumber":304,"author":{"gitId":"annoy-o-mus"},"content":"1. There are many ways in which the data gets saved (or exported). One of the way is after the user entered the `add` or `modify` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":305,"author":{"gitId":"annoy-o-mus"},"content":"2. The other way is when the user uses the `save` command with the path to save the data to.","lastModifiedDate":"2024-04-15"},{"lineNumber":306,"author":{"gitId":"annoy-o-mus"},"content":"3. Once the path validation checks by `FilePathChecker` are completed and determined to be valid, the `save` command will call the `FileReaderWriter` to:","lastModifiedDate":"2024-04-15"},{"lineNumber":307,"author":{"gitId":"annoy-o-mus"},"content":"   1. First write `Medication` related information to the JSON file. ","lastModifiedDate":"2024-04-15"},{"lineNumber":308,"author":{"gitId":"annoy-o-mus"},"content":"      1. The temporary file, which will be in the same directory as the JSON file, will be created and written to. In case of a write issue, the actual save file will not be affected.","lastModifiedDate":"2024-04-15"},{"lineNumber":309,"author":{"gitId":"annoy-o-mus"},"content":"      2. `JsonExporter` is then called to save the `Medication` data, converting it into a JSON-compatible format and then saved","lastModifiedDate":"2024-04-15"},{"lineNumber":310,"author":{"gitId":"annoy-o-mus"},"content":"   2. Next, it will write `DailyMedication` related information to the text files.","lastModifiedDate":"2024-04-15"},{"lineNumber":311,"author":{"gitId":"annoy-o-mus"},"content":"      1. The temporary file will be created in the same directory as the txt file.","lastModifiedDate":"2024-04-15"},{"lineNumber":312,"author":{"gitId":"annoy-o-mus"},"content":"      2. `DailyMedicationExporter` is then called to write to the txt file.","lastModifiedDate":"2024-04-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":314,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":315,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":316,"author":{"gitId":"annoy-o-mus"},"content":"## Importing data","lastModifiedDate":"2024-04-15"},{"lineNumber":317,"author":{"gitId":"annoy-o-mus"},"content":"![FileImport.png](images/FileImport.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":318,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":319,"author":{"gitId":"annoy-o-mus"},"content":"How the exporting works:","lastModifiedDate":"2024-04-15"},{"lineNumber":320,"author":{"gitId":"annoy-o-mus"},"content":"1. When the program first starts up, the program will first attempt to load the `Medication` and `DailyMedication` information from the default save location.","lastModifiedDate":"2024-04-15"},{"lineNumber":321,"author":{"gitId":"annoy-o-mus"},"content":"2. Another way is for the user to use the `load` command with the path to the JSON file to load from. ","lastModifiedDate":"2024-04-15"},{"lineNumber":322,"author":{"gitId":"annoy-o-mus"},"content":"3. Once the path validation checks by `FilePathChecker` are completed and determined to be valid, the `load` command will call the `FileReaderWriter` to load all MediTracker related data.","lastModifiedDate":"2024-04-15"},{"lineNumber":323,"author":{"gitId":"annoy-o-mus"},"content":"4. The loading of the JSON file for `Medication` data is independent of that of `DailyMedication` data. The failure of loading of one will not affect the other.","lastModifiedDate":"2024-04-15"},{"lineNumber":324,"author":{"gitId":"annoy-o-mus"},"content":"   1. For the importing of the JSON file, the `Medication` data is loaded and then `MedicationManager` is then called to populate the `Medication` information","lastModifiedDate":"2024-04-15"},{"lineNumber":325,"author":{"gitId":"annoy-o-mus"},"content":"   2. The text file will be read, the daily medication data is loaded, and then `DailyMedicationManager` is called to populate the daily medication information.","lastModifiedDate":"2024-04-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":327,"author":{"gitId":"annoy-o-mus"},"content":"## Simulated Time","lastModifiedDate":"2024-04-15"},{"lineNumber":328,"author":{"gitId":"annoy-o-mus"},"content":"This is implemented under `MediTrackerTime`. When the user types in `java -jar meditracker.jar -sim 2024-01-01T00:00:00Z` the program will first run the","lastModifiedDate":"2024-04-15"},{"lineNumber":329,"author":{"gitId":"annoy-o-mus"},"content":"`setUpSimulatedTime` function to check if the `-sim` flag is present and whether the following parameter is of the `YYYY-MM-DDTHH:MM:SSZ` format.","lastModifiedDate":"2024-04-15"},{"lineNumber":330,"author":{"gitId":"annoy-o-mus"},"content":"If it is of the right format, it will further proceed to set up and refer to the simulated time using `setMediTrackerTime`.","lastModifiedDate":"2024-04-15"},{"lineNumber":331,"author":{"gitId":"annoy-o-mus"},"content":"Otherwise, it will just refer to the system time as per normal. However, since we are using the `Clock.fixed` function, the time will be fixed at whatever was set in the commandline","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"annoy-o-mus"},"content":"and \"time\" will not progress.","lastModifiedDate":"2024-04-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":334,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":335,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":336,"author":{"gitId":"annoy-o-mus"},"content":"# Product scope","lastModifiedDate":"2024-04-15"},{"lineNumber":337,"author":{"gitId":"annoy-o-mus"},"content":"## Target user profile","lastModifiedDate":"2024-04-15"},{"lineNumber":338,"author":{"gitId":"e0958902"},"content":"People who are taking medications on a daily basis.","lastModifiedDate":"2024-03-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":340,"author":{"gitId":"annoy-o-mus"},"content":"## Value proposition","lastModifiedDate":"2024-04-15"},{"lineNumber":341,"author":{"gitId":"annoy-o-mus"},"content":"MediTracker ensures that you would not forget your overall schedule on what time and day to take your medication.","lastModifiedDate":"2024-04-09"},{"lineNumber":342,"author":{"gitId":"e0958902"},"content":"Ensuring that you would not forget your next dose of medication.","lastModifiedDate":"2024-03-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":344,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":346,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                                                                | So that I can ...                                                                                                                                      |","lastModifiedDate":"2020-05-24"},{"lineNumber":347,"author":{"gitId":"annoy-o-mus"},"content":"|---------|----------|------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":348,"author":{"gitId":"e0958902"},"content":"| v1.0    | user     | enter my medications with its relevant information in one go                 | add my medication entry efficiently and refer to them when I forget my medication information                                                          |","lastModifiedDate":"2024-03-29"},{"lineNumber":349,"author":{"gitId":"e0958902"},"content":"| v1.0    | user     | indicate the medications that I have taken                                   | know when is my next dose and how well I am following doctors orders, and show how well I am taking my medications at the appropriate times of the day |","lastModifiedDate":"2024-03-29"},{"lineNumber":350,"author":{"gitId":"e0958902"},"content":"| v1.0    | user     | know what medications i have to take throughout the day                      | mark them as taken or not, thus not miss or forget to take what I have to take for the day                                                             |","lastModifiedDate":"2024-03-29"},{"lineNumber":351,"author":{"gitId":"T0nyLin"},"content":"| v1.0    | user     | edit the details in my medication list                                       | ensure that its medication information is up-to-date with my modifications                                                                             |","lastModifiedDate":"2024-04-15"},{"lineNumber":352,"author":{"gitId":"T0nyLin"},"content":"| v1.0    | user     | delete medications medication list                                           | remove medications that I do not need will not be there anymore                                                                                        |","lastModifiedDate":"2024-03-29"},{"lineNumber":353,"author":{"gitId":"kyuichyi"},"content":"| v1.0    | user     | search medications from existing medicine library                            | search medications locally to have a quick preview of them and their purpose without the web                                                           |","lastModifiedDate":"2024-03-29"},{"lineNumber":354,"author":{"gitId":"kyuichyi"},"content":"| v1.0    | user     | know the list of medications I have added                                    | have a quick overview of the medication list and check the quantity and expiry date of each medication                                                 |","lastModifiedDate":"2024-03-29"},{"lineNumber":355,"author":{"gitId":"e0958902"},"content":"| v1.0    | user     | Save data locally                                                            | Use the application and see the data even when offline between sessions (data is persistent)                                                           |","lastModifiedDate":"2024-04-15"},{"lineNumber":356,"author":{"gitId":"e0958902"},"content":"| v1.0    | user     | Be able to load existing data                                                | I don\u0027t have to start from a fresh state everytime                                                                                                     |","lastModifiedDate":"2024-04-15"},{"lineNumber":357,"author":{"gitId":"T0nyLin"},"content":"| v2.0    | user     | see how much to be taken at each specific time of the day                    | have a quick overview of the list of medications to take at the specific period of the day                                                             |","lastModifiedDate":"2024-04-15"},{"lineNumber":358,"author":{"gitId":"T0nyLin"},"content":"| v2.0    | user     | retrieve all the values related to a medication                              | have a quickly verify all the details I have input for that particular medication                                                                      |","lastModifiedDate":"2024-04-15"},{"lineNumber":359,"author":{"gitId":"T0nyLin"},"content":"| v2.0    | user     | search medications by their side effects from existing medicine library      | search medications by their side effects locally to have a quick preview of them and their purpose without the web                                     |","lastModifiedDate":"2024-04-15"},{"lineNumber":360,"author":{"gitId":"T0nyLin"},"content":"| v2.0    | user     | search medications by their illness treatment from existing medicine library | search medications by their illness treatment locally to have a quick preview of them and their purpose without the web                                |","lastModifiedDate":"2024-04-15"},{"lineNumber":361,"author":{"gitId":"T0nyLin"},"content":"| v2.0    | user     | mark a medication as taken without specifying the period                     | reduce the hassle of telling the program explicitly that I have taken a medication for that period of the day                                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":362,"author":{"gitId":"e0958902"},"content":"| v2.0    | user     | Be able to save the file to a place of my choosing                           | I can easily refer or transfer the files to another system                                                                                             |","lastModifiedDate":"2024-04-15"},{"lineNumber":363,"author":{"gitId":"e0958902"},"content":"| v2.0    | user     | Be able to load existing data from a place I choose                          | load the data by typing rather than dragging to the default save location                                                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":364,"author":{"gitId":"T0nyLin"},"content":"| v2.1    | user     | know which medications are low in quantity                                   | filter from my list of medications and see which ones need to be restock soon                                                                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":365,"author":{"gitId":"T0nyLin"},"content":"| v2.1    | user     | know which medications are going to be expired                               | filter from my list of medications and see which ones are going to be expired                                                                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":366,"author":{"gitId":"T0nyLin"},"content":"| v2.1    | user     | filter my medications based on a keyword                                     | have a quick overview of the medication list and check the quantity and expiry date of each medication                                                 |","lastModifiedDate":"2024-04-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":368,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":371,"author":{"gitId":"annoy-o-mus"},"content":"- The user\u0027s program data (medication, daily medication) should be persistent between program sessions.","lastModifiedDate":"2024-04-15"},{"lineNumber":372,"author":{"gitId":"annoy-o-mus"},"content":"- Users should be able to modify the data separately from the program. ","lastModifiedDate":"2024-04-15"},{"lineNumber":373,"author":{"gitId":"annoy-o-mus"},"content":"- Users should be able to share or move the data easily between devices.","lastModifiedDate":"2024-04-15"},{"lineNumber":374,"author":{"gitId":"annoy-o-mus"},"content":"- Developers be able to test out certain time-based functionality (i.e. check if medicine has been taken on a certain date) without having to tweak the actual system clock.","lastModifiedDate":"2024-04-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":376,"author":{"gitId":"annoy-o-mus"},"content":"# Glossary","lastModifiedDate":"2024-04-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":378,"author":{"gitId":"T0nyLin"},"content":"| Term                  | Explanation                                                                                                                     |","lastModifiedDate":"2024-04-15"},{"lineNumber":379,"author":{"gitId":"annoy-o-mus"},"content":"|-----------------------|---------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"T0nyLin"},"content":"| JSON                  | JSON stands for JavaScript Object Notation, which is used to save **all** medications added by the user.                        |","lastModifiedDate":"2024-04-15"},{"lineNumber":381,"author":{"gitId":"T0nyLin"},"content":"| text file             | Medications to be taken for a particular day is saved in the text file, and a new text file is created at the start of the day. |","lastModifiedDate":"2024-04-15"},{"lineNumber":382,"author":{"gitId":"T0nyLin"},"content":"| Flags                 | Most commands in MediTracker uses the flags with the \"-\" to recognise values within certain fields. Eg. `-n`, `-a`, `-l`, etc.  |","lastModifiedDate":"2024-04-15"},{"lineNumber":383,"author":{"gitId":"annoy-o-mus"},"content":"| Medication Data       | Data related to the overview of the medication itself                                                                           |","lastModifiedDate":"2024-04-15"},{"lineNumber":384,"author":{"gitId":"annoy-o-mus"},"content":"| Daily Medication Data | Data related to the medication\u0027s current day dosage, including its status                                                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":385,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":386,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":387,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":388,"author":{"gitId":"annoy-o-mus"},"content":"# Instructions for manual testing","lastModifiedDate":"2024-04-15"},{"lineNumber":389,"author":{"gitId":"annoy-o-mus"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":390,"author":{"gitId":"annoy-o-mus"},"content":":information_source: \u003cstrong\u003eInfo: \u003c/strong\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":391,"author":{"gitId":"annoy-o-mus"},"content":"This section is only intended as a starting point for testers to get started on understanding \u003cb\u003eSOME\u003c/b\u003e of the core functionalities. ","lastModifiedDate":"2024-04-15"},{"lineNumber":392,"author":{"gitId":"annoy-o-mus"},"content":"The tester is expected to do more exploratory testing based on the \u003ca href\u003d\"UserGuide\"\u003eUser Guide\u003c/a\u003e.","lastModifiedDate":"2024-04-15"},{"lineNumber":393,"author":{"gitId":"annoy-o-mus"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":394,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":395,"author":{"gitId":"annoy-o-mus"},"content":"## Launching the Program","lastModifiedDate":"2024-04-15"},{"lineNumber":396,"author":{"gitId":"annoy-o-mus"},"content":"Follow the [Quick Start](UserGuide#quick-start) Section of the User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":397,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":398,"author":{"gitId":"annoy-o-mus"},"content":"\u003cdiv class\u003d\"note-box\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":399,"author":{"gitId":"annoy-o-mus"},"content":":notebook: \u003cstrong\u003eNote: \u003c/strong\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":400,"author":{"gitId":"annoy-o-mus"},"content":"If you want to simulate a time (Say 1 May 2024 6pm) instead of the default system time,","lastModifiedDate":"2024-04-15"},{"lineNumber":401,"author":{"gitId":"annoy-o-mus"},"content":"Instead of running \u003ccode\u003ejava -jar meditracker.jar\u003c/code\u003e, you can use \u003ccode\u003ejava -jar meditracker.jar -sim 2024-05-01T18:00:00Z\u003c/code\u003e instead.","lastModifiedDate":"2024-04-15"},{"lineNumber":402,"author":{"gitId":"annoy-o-mus"},"content":"Please remember that the time will be fixed at that time","lastModifiedDate":"2024-04-15"},{"lineNumber":403,"author":{"gitId":"annoy-o-mus"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":404,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":405,"author":{"gitId":"annoy-o-mus"},"content":"## Adding some medication information","lastModifiedDate":"2024-04-15"},{"lineNumber":406,"author":{"gitId":"annoy-o-mus"},"content":"Start populating some medication data with the following commands:","lastModifiedDate":"2024-04-15"},{"lineNumber":407,"author":{"gitId":"annoy-o-mus"},"content":"- `add -n Test Medication -q 100 -e 2026-02-02 -dM 1 -dA 2 -dE 3 -rep 4 -r nil`","lastModifiedDate":"2024-04-15"},{"lineNumber":408,"author":{"gitId":"annoy-o-mus"},"content":"- `add -n Test Medication Two -q 300 -e 2026-02-02 -dM 10 -dA 20 -dE 30.5 -rep 2 -r nil`","lastModifiedDate":"2024-04-15"},{"lineNumber":409,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":410,"author":{"gitId":"annoy-o-mus"},"content":"\u003cdiv class\u003d\"note-box\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":411,"author":{"gitId":"annoy-o-mus"},"content":":notebook: \u003cstrong\u003eNote: \u003c/strong\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":412,"author":{"gitId":"annoy-o-mus"},"content":"Our medication parser restricts the naming of medication to only alphabetic letters and space.","lastModifiedDate":"2024-04-15"},{"lineNumber":413,"author":{"gitId":"annoy-o-mus"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":414,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":415,"author":{"gitId":"annoy-o-mus"},"content":"Both should succeed without issues. You can run `list -t all` to check the current medication added.","lastModifiedDate":"2024-04-15"},{"lineNumber":416,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":417,"author":{"gitId":"annoy-o-mus"},"content":"At the same time, the Daily Medication information is also updated with the relevant dosage for the day. You can view those with the `list -t today` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":418,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":419,"author":{"gitId":"annoy-o-mus"},"content":"## Modifying some medication information","lastModifiedDate":"2024-04-15"},{"lineNumber":420,"author":{"gitId":"annoy-o-mus"},"content":"Modify the second medication\u0027s name using the following: ","lastModifiedDate":"2024-04-15"},{"lineNumber":421,"author":{"gitId":"annoy-o-mus"},"content":"- `modify -l 2 -n New Test Medication Name`","lastModifiedDate":"2024-04-15"},{"lineNumber":422,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":423,"author":{"gitId":"annoy-o-mus"},"content":"Run `list -t all` to see that the medication name has been changed.","lastModifiedDate":"2024-04-15"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":425,"author":{"gitId":"annoy-o-mus"},"content":"## Taking the medication","lastModifiedDate":"2024-04-15"},{"lineNumber":426,"author":{"gitId":"annoy-o-mus"},"content":"Use `take -l 1` to take the medication. By default, the program chooses the time based on either the simulated time or the system time.","lastModifiedDate":"2024-04-15"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":428,"author":{"gitId":"annoy-o-mus"},"content":"You can run `list -t today` to see that the medication has been taken.","lastModifiedDate":"2024-04-15"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":430,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":432,"author":{"gitId":"annoy-o-mus"},"content":"## Saving data","lastModifiedDate":"2024-04-15"},{"lineNumber":433,"author":{"gitId":"annoy-o-mus"},"content":"By default, data is automatically saved to the default location (under the `data` folder). you can just `exit` the program.","lastModifiedDate":"2024-04-15"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":435,"author":{"gitId":"annoy-o-mus"},"content":"The information will be saved as readable text files `.json` and `.txt` files. You can simulate a corrupted file by modifying, removing any of the fields or special syntax characters or introduce additional parameters.","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"e0958902":82,"nickczh":20,"annoy-o-mus":133,"T0nyLin":76,"kyuichyi":12,"wenenhoe":82,"-":30}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# MediTracker ","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"A place to track all your medications!","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"annoy-o-mus":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"---","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"layout: default","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"title: User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"---","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- ","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"CREDIT: We try to follow the ideas and structure of the following sample user guide:","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"https://se-education.org/addressbook-level3/UserGuide.html","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"--\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"# MediTracker User Guide","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"# Introduction","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"MediTracker is a desktop app for users who want to track their medication intake on a daily basis. It offers intuitive","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"features that works seamlessly right from the very beginning. With MediTracker, you do not have to worry about missing","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"your daily medication dose. It tracks your daily intake and reminds you when your remaining amount is low, and enables","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"data storage so that you can review your past medication intake.","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv style\u003d\"display: flex; justify-content: space-between; position: fixed; bottom: 0; left: 0; width: 100%;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    \u003cdiv\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"        \u003ca href\u003d\"#command-summary\"\u003e:arrow_up_down: Jump to Command Summary\u003c/a\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    \u003cdiv\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"        \u003ca href\u003d\"#table-of-contents\"\u003e:arrow_up_down: Jump to Table of Contents\u003c/a\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"# Table of Contents","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"Here are the comprehensive sections which MediTracker has to offer:","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"* [MediTracker User Guide](#meditracker-user-guide)","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"* [Introduction](#introduction)","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"* [Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"* [How to Use the User Guide](#how-to-use-the-user-guide)","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"* [Features](#features)","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"  * [Adding a medication `add`](#adding-a-medication-add)","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"  * [Listing medications `list`](#listing-medications-list)","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"    * [All medications](#all-medications)","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"    * [Daily medications](#daily-medications)","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"  * [Viewing medications `view`](#viewing-medications-view)","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"    * [View Medication by index](#view-medication-by-index)","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"    * [View Medication by name](#view-medication-by-name)","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"    * [View Medication by quantity](#view-medication-by-quantity)","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"    * [View Medication by expiry](#view-medication-by-expiry)","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"    * [View Medication by remarks](#view-medication-by-remarks)","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"  * [Record taking of medication](#record-taking-of-medication)","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"    * [Take Medication `take -l`](#take-medication-take--l)","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"    * [Untake Medication `untake -l`](#untake-medication-untake--l)","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"  * [Modify Medication Information `modify -l`](#modify-medication-information-modify--l)","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"  * [Delete Medication `delete -l`](#delete-medication-delete--l)","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"  * [Search](#search)","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"  * [Help](#help)","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"  * [General Data Management](#general-data-management)","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"    * [Saving to a file `save`](#saving-to-a-file-save)","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"    * [Reading from a file `load`](#reading-from-a-file-load)","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"    * [Editing the file](#editing-the-file)","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"  * [Setting an arbitrary time](#setting-an-arbitrary-time)","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"  * [Exit `exit`](#exit-exit)","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"* [Future Developments](#future-developments)","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"* [FAQ](#faq)","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"# How to Use the User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c!-- @@author annoy-o-mus-reused","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"reused from: https://ay2223s1-cs2103t-w16-2.github.io/tp/UserGuide.html#admonition-boxes","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"with minor modifications","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Throughout this guide, you may find coloured boxes containing highlighted pieces of text.","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"They are admonitions to help you take note of the content within.","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"| **Symbol**           | **Representation** | **Meaning**                                                                                  |","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"|----------------------|--------------------|----------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"| :notebook:           | Note               | Something you should keep in mind.                                                           ","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"| :bulb:               | Tip                | Something you might find useful.                                                             |","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"| :information_source: | Info               | Something you might find useful for the particular context.                                  |","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"| :warning:            | Warning            | Something that you should pay close attention to.                                            |","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"| :bangbang:           | Danger             | Something you you must pay attention to. There is a risk of program failure if not followed. |","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003c!-- @@author --\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"Below are some examples of highlighted pieces of text:","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"\u003cdiv class\u003d\"note-box\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":":notebook: \u003cstrong\u003eNote: \u003c/strong\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"A note to take note.","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"\u003cdiv class\u003d\"tip-box\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":":bulb: \u003cstrong\u003eTip: \u003c/strong\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"A useful tip.","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":":information_source: \u003cstrong\u003eInfo: \u003c/strong\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"Some informative text.","lastModifiedDate":"2024-04-12"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"\u003cdiv class\u003d\"warning-box\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":":warning: \u003cstrong\u003eWarning: \u003c/strong\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"Important text.","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"\u003cdiv class\u003d\"danger-box\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":":bangbang: \u003cstrong\u003eDanger: \u003c/strong\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"Extremely important text.","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"# Quick Start","lastModifiedDate":"2024-04-15"},{"lineNumber":117,"author":{"gitId":"nickczh"},"content":"1. Ensure that you have [Java 11](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html) ","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"nickczh"},"content":"or above installed. ","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"annoy-o-mus"},"content":"   - If you are using Windows:","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"T0nyLin"},"content":"     - Press the `Windows Key` on your keyboard and enter `Command Prompt` or `cmd` and press enter.","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"T0nyLin"},"content":"     - When the program opens, enter `java -version`.","lastModifiedDate":"2024-04-08"},{"lineNumber":122,"author":{"gitId":"e0958902"},"content":"   - If Java 11 is installed, you should get an output similar to below:\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"e0958902"},"content":"     ![img.png](images/Java11_Windows.png)\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"T0nyLin"},"content":"   - If you are using macOS/Linux:","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"T0nyLin"},"content":"     - Open the `Terminal`, then enter `java -version`.","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"e0958902"},"content":"   - If Java 11 is installed, you should get an output similar to below:\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"e0958902"},"content":"     ![img.png](images/Java11.png)\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"T0nyLin"},"content":"   - If you see otherwise, please follow the instructions from [here](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html#GUID-8677A77F-231A-40F7-98B9-1FD0B48C346A).","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"T0nyLin"},"content":"2. Once that is settled, head over to the [link](https://github.com/AY2324S2-CS2113T-T09-1/tp/releases/latest) to obtain the latest version of `MediTracker`.","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"T0nyLin"},"content":"3. Save the file in an empty folder in `Desktop`, then this will be your home folder for `MediTracker`.","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"e0958902"},"content":"4. Open up a Command Prompt/Terminal. ","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"e0958902"},"content":"   - You can use `cd` to navigate to the folder where you have saved the program in","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"e0958902"},"content":"   - Then enter `java -jar meditracker.jar` to start the app.","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"e0958902"},"content":"   - If MediTracker has run successfully, you should see the following:\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"e0958902"},"content":"   ![Windows cd](images/MediTracker-Startup-Logo.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":137,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":141,"author":{"gitId":"annoy-o-mus"},"content":"# Features","lastModifiedDate":"2024-04-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":143,"author":{"gitId":"annoy-o-mus"},"content":"NOTES about the command format:","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"- Each command starts with a command keyword","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"- Following which, you may specify additional options","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"- These options can be in round brackets `()` (which are mandatory arguments) and in square brackets `[]` (which are","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"optional arguments)","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"- Each option are specified with either just its flag (which is of the form `-*` where `*` signifies some alphabetic ","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"characters), or the flag coupled with a value","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"e0958902"},"content":"  ","lastModifiedDate":"2024-04-14"},{"lineNumber":152,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"tip-box\"\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":153,"author":{"gitId":"T0nyLin"},"content":":bulb: \u003cstrong\u003eTip: \u003c/strong\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"T0nyLin"},"content":"If you forget how to use each command, simply entering just the command word will display the help message with all its ","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"T0nyLin"},"content":"usage and option(s).","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":157,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"wenenhoe"},"content":"## Adding a medication `add`","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":164,"author":{"gitId":"nickczh"},"content":"Adds a medication to the medication manager.","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"e0958902"},"content":"Usage:","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"e0958902"},"content":"\tadd (-n name) (-q quantity) (-e expirationDate) (-dM dosageMorning)","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"wenenhoe"},"content":"\t(-dA dosageAfternoon) (-dE dosageEvening) (-rep repeat) [-r remarks]","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"wenenhoe"},"content":"\t[-h]","lastModifiedDate":"2024-04-15"},{"lineNumber":171,"author":{"gitId":"nickczh"},"content":"Options:","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"nickczh"},"content":"\t-n name                 Name of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"nickczh"},"content":"\t-q quantity             Quantity of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"nickczh"},"content":"\t-e expirationDate       Expiration date of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"nickczh"},"content":"\t-dM dosageMorning       Morning dosage of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"nickczh"},"content":"\t-dA dosageAfternoon     Afternoon dosage of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"nickczh"},"content":"\t-dE dosageEvening       Evening dosage of medication","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"e0958902"},"content":"\t-rep repeat             How often to take medication","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"e0958902"},"content":"\t                            (eg: Supply a number from 1 to 7)","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"T0nyLin"},"content":"\t-r remarks              Additional remarks on medication","lastModifiedDate":"2024-04-13"},{"lineNumber":181,"author":{"gitId":"T0nyLin"},"content":"\t-h                      Prints this help message","lastModifiedDate":"2024-04-13"},{"lineNumber":182,"author":{"gitId":"nickczh"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"tip-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":185,"author":{"gitId":"T0nyLin"},"content":":bulb: \u003cstrong\u003eTip: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":186,"author":{"gitId":"T0nyLin"},"content":"  \u003cul\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":187,"author":{"gitId":"e0958902"},"content":"    \u003cli\u003eThe remarks tag is optional.\u003c/li\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"T0nyLin"},"content":"    \u003cli\u003eThe expiration date must be in yyyy-MM-dd format.\u003c/li\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"wenenhoe"},"content":"    \u003cli\u003eYou should only specify numerical values for quantity and dosages. Specifying them with units, ","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"wenenhoe"},"content":"        such as mg/ml, will not be accepted as valid input.\u003c/li\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":191,"author":{"gitId":"T0nyLin"},"content":"  \u003c/ul\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":193,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"note-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":195,"author":{"gitId":"T0nyLin"},"content":":notebook: \u003cstrong\u003eNote: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":196,"author":{"gitId":"T0nyLin"},"content":"Remarks will default to Nil if it is not specified.","lastModifiedDate":"2024-04-13"},{"lineNumber":197,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":198,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":199,"author":{"gitId":"nickczh"},"content":"Examples:","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"e0958902"},"content":"* `meditracker\u003e add -n Medication A -q 5000 -e 2025-07-01 -dM 500 -dA 250 -dE 100 -rep 1 -r cause_dizziness`","lastModifiedDate":"2024-04-14"},{"lineNumber":202,"author":{"gitId":"e0958902"},"content":"* `meditracker\u003e add -n Medication B -q 1000 -e 2024-09-30 -dM 500 -dA 250 -dE 50 -rep 6`","lastModifiedDate":"2024-04-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":204,"author":{"gitId":"nickczh"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"nickczh"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"nickczh"},"content":"SUCCESS: Medicine has been added","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"nickczh"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":209,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":213,"author":{"gitId":"wenenhoe"},"content":"## Listing medications `list`","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"e0958902"},"content":"You can show the medications that you have added to the medication list, ","lastModifiedDate":"2024-04-10"},{"lineNumber":216,"author":{"gitId":"e0958902"},"content":"and show the medications that you will be taking for the day.","lastModifiedDate":"2024-04-10"},{"lineNumber":217,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-11"},{"lineNumber":219,"author":{"gitId":"T0nyLin"},"content":"Usage:","lastModifiedDate":"2024-04-11"},{"lineNumber":220,"author":{"gitId":"T0nyLin"},"content":"\tlist (-t listType) [-m] [-a] [-e] [-h]","lastModifiedDate":"2024-04-11"},{"lineNumber":221,"author":{"gitId":"T0nyLin"},"content":"Options:","lastModifiedDate":"2024-04-11"},{"lineNumber":222,"author":{"gitId":"T0nyLin"},"content":"\t-t listType     Lists medications accordingly","lastModifiedDate":"2024-04-11"},{"lineNumber":223,"author":{"gitId":"T0nyLin"},"content":"\t-m              Time of day: Morning","lastModifiedDate":"2024-04-11"},{"lineNumber":224,"author":{"gitId":"T0nyLin"},"content":"\t-a              Time of day: Afternoon","lastModifiedDate":"2024-04-11"},{"lineNumber":225,"author":{"gitId":"T0nyLin"},"content":"\t-e              Time of day: Evening","lastModifiedDate":"2024-04-11"},{"lineNumber":226,"author":{"gitId":"T0nyLin"},"content":"\t-h              Prints this help message","lastModifiedDate":"2024-04-11"},{"lineNumber":227,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-11"},{"lineNumber":228,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":229,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"wenenhoe"},"content":"### All medications","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"e0958902"},"content":"Displays the whole lists of medications that you have added to the medication list.","lastModifiedDate":"2024-04-10"},{"lineNumber":232,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"T0nyLin"},"content":"Example: `meditracker\u003e list -t all`","lastModifiedDate":"2024-04-13"},{"lineNumber":234,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"e0958902"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":237,"author":{"gitId":"e0958902"},"content":"You have 2 medications listed below.","lastModifiedDate":"2024-04-08"},{"lineNumber":238,"author":{"gitId":"e0958902"},"content":"   Name                           Quantity   Expiry       Remarks","lastModifiedDate":"2024-04-07"},{"lineNumber":239,"author":{"gitId":"e0958902"},"content":"1. Medication A                   5000.0     2025-07-01   cause_dizziness","lastModifiedDate":"2024-04-12"},{"lineNumber":240,"author":{"gitId":"e0958902"},"content":"2. Medication B                   1000.0     2024-09-30   Nil","lastModifiedDate":"2024-04-12"},{"lineNumber":241,"author":{"gitId":"e0958902"},"content":"Your list of medications has been successfully shown!","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":245,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":246,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":247,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":248,"author":{"gitId":"wenenhoe"},"content":"### Daily medications","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"T0nyLin"},"content":"Displays an overview of the list of medications that you will be taking for the day.","lastModifiedDate":"2024-04-03"},{"lineNumber":250,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"T0nyLin"},"content":"Example: `meditracker\u003e list -t today`","lastModifiedDate":"2024-04-13"},{"lineNumber":252,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"T0nyLin"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":254,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":255,"author":{"gitId":"T0nyLin"},"content":"Here are the Daily Medications you have to take today: ","lastModifiedDate":"2024-04-03"},{"lineNumber":256,"author":{"gitId":"T0nyLin"},"content":"Morning:","lastModifiedDate":"2024-04-03"},{"lineNumber":257,"author":{"gitId":"T0nyLin"},"content":"\t1. [ ] Medication A | 500.0","lastModifiedDate":"2024-04-13"},{"lineNumber":258,"author":{"gitId":"e0958902"},"content":"\t2. [ ] Medication B | 500.0","lastModifiedDate":"2024-04-14"},{"lineNumber":259,"author":{"gitId":"T0nyLin"},"content":"Afternoon:","lastModifiedDate":"2024-04-03"},{"lineNumber":260,"author":{"gitId":"T0nyLin"},"content":"\t1. [ ] Medication A | 250.0","lastModifiedDate":"2024-04-13"},{"lineNumber":261,"author":{"gitId":"e0958902"},"content":"\t2. [ ] Medication B | 250.0","lastModifiedDate":"2024-04-14"},{"lineNumber":262,"author":{"gitId":"T0nyLin"},"content":"Evening:","lastModifiedDate":"2024-04-13"},{"lineNumber":263,"author":{"gitId":"T0nyLin"},"content":"\t1. [ ] Medication A | 100.0","lastModifiedDate":"2024-04-13"},{"lineNumber":264,"author":{"gitId":"e0958902"},"content":"\t2. [ ] Medication B | 50.0","lastModifiedDate":"2024-04-14"},{"lineNumber":265,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":266,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":267,"author":{"gitId":"e0958902"},"content":"* If you want to specify a particular period of the day, simply enter `list -t today` followed by:","lastModifiedDate":"2024-04-14"},{"lineNumber":268,"author":{"gitId":"e0958902"},"content":"  * `-m`: Morning (Midnight to 12 Noon)","lastModifiedDate":"2024-04-14"},{"lineNumber":269,"author":{"gitId":"e0958902"},"content":"  * `-a`: Afternoon (12pm to 6pm)","lastModifiedDate":"2024-04-14"},{"lineNumber":270,"author":{"gitId":"e0958902"},"content":"  * `-e`: Evening (6pm to Midnight)","lastModifiedDate":"2024-04-14"},{"lineNumber":271,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":272,"author":{"gitId":"e0958902"},"content":"Example: `meditracker\u003e list -t today -m` will display the list of medications to be taken in the morning only","lastModifiedDate":"2024-04-14"},{"lineNumber":273,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":274,"author":{"gitId":"e0958902"},"content":"Output:","lastModifiedDate":"2024-04-14"},{"lineNumber":275,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":276,"author":{"gitId":"e0958902"},"content":"Here are the Daily Medications you have to take today: ","lastModifiedDate":"2024-04-14"},{"lineNumber":277,"author":{"gitId":"e0958902"},"content":"Morning:","lastModifiedDate":"2024-04-14"},{"lineNumber":278,"author":{"gitId":"e0958902"},"content":"\t1. [ ] Medication A | 500.0","lastModifiedDate":"2024-04-14"},{"lineNumber":279,"author":{"gitId":"e0958902"},"content":"\t2. [ ] Medication B | 500.0","lastModifiedDate":"2024-04-14"},{"lineNumber":280,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":281,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":282,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":283,"author":{"gitId":"T0nyLin"},"content":":information_source: \u003cstrong\u003eInfo: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":284,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":285,"author":{"gitId":"wenenhoe"},"content":"If you want to mark the medication you have taken, you can refer to the \u003ca href\u003d\"#take-medication-take--l\"\u003e\u003ccode\u003eTake ","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"T0nyLin"},"content":"Command\u003c/code\u003e\u003c/a\u003e.","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":288,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":289,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":290,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":291,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":292,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":293,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":294,"author":{"gitId":"wenenhoe"},"content":"## Viewing medications `view`","lastModifiedDate":"2024-04-15"},{"lineNumber":295,"author":{"gitId":"e0958902"},"content":"You can view detailed information about the medications you have added in the medication list.","lastModifiedDate":"2024-04-10"},{"lineNumber":296,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":297,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":298,"author":{"gitId":"e0958902"},"content":"Usage:","lastModifiedDate":"2024-04-14"},{"lineNumber":299,"author":{"gitId":"e0958902"},"content":"\tview [-l listIndex] [-n name] [-q quantity] [-e expirationDate] ","lastModifiedDate":"2024-04-14"},{"lineNumber":300,"author":{"gitId":"e0958902"},"content":"\t[-r remarks] [-h]","lastModifiedDate":"2024-04-14"},{"lineNumber":301,"author":{"gitId":"e0958902"},"content":"Options:","lastModifiedDate":"2024-04-14"},{"lineNumber":302,"author":{"gitId":"e0958902"},"content":"\t-l listIndex          Index of item in list","lastModifiedDate":"2024-04-14"},{"lineNumber":303,"author":{"gitId":"e0958902"},"content":"\t-n name               Name of medication","lastModifiedDate":"2024-04-14"},{"lineNumber":304,"author":{"gitId":"e0958902"},"content":"\t-q quantity           Quantity of medication","lastModifiedDate":"2024-04-14"},{"lineNumber":305,"author":{"gitId":"e0958902"},"content":"\t-e expirationDate     Expiration date of medication","lastModifiedDate":"2024-04-14"},{"lineNumber":306,"author":{"gitId":"e0958902"},"content":"\t-r remarks            Additional remarks on medication","lastModifiedDate":"2024-04-14"},{"lineNumber":307,"author":{"gitId":"e0958902"},"content":"\t-h                    Prints this help message","lastModifiedDate":"2024-04-14"},{"lineNumber":308,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-14"},{"lineNumber":309,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":310,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":311,"author":{"gitId":"T0nyLin"},"content":":information_source: \u003cstrong\u003eInfo: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":312,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":313,"author":{"gitId":"T0nyLin"},"content":"Perform \u003ca href\u003d\"#all-medications\"\u003e\u003ccode\u003elist -t all\u003c/code\u003e\u003c/a\u003e first to display the lists of medications","lastModifiedDate":"2024-04-13"},{"lineNumber":314,"author":{"gitId":"T0nyLin"},"content":"in medication list and use its fields for the features below.","lastModifiedDate":"2024-04-13"},{"lineNumber":315,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":316,"author":{"gitId":"e0958902"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":317,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":318,"author":{"gitId":"e0958902"},"content":"\u003cdiv class\u003d\"warning-box\"\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":319,"author":{"gitId":"e0958902"},"content":":warning: \u003cstrong\u003eWarning: \u003c/strong\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":320,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":321,"author":{"gitId":"e0958902"},"content":"You are only allowed to use one flag and argument.","lastModifiedDate":"2024-04-14"},{"lineNumber":322,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":323,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":324,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":325,"author":{"gitId":"e0958902"},"content":"This output will be shown if you used more than one flag and argument.","lastModifiedDate":"2024-04-09"},{"lineNumber":326,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-09"},{"lineNumber":327,"author":{"gitId":"e0958902"},"content":"ERROR: You can only have one flag!","lastModifiedDate":"2024-04-10"},{"lineNumber":328,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-09"},{"lineNumber":329,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":330,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":331,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":332,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":333,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":334,"author":{"gitId":"wenenhoe"},"content":"### View Medication by index","lastModifiedDate":"2024-04-15"},{"lineNumber":335,"author":{"gitId":"T0nyLin"},"content":"By using the index shown in the medication list [`list -t all`](#all-medications), ","lastModifiedDate":"2024-04-13"},{"lineNumber":336,"author":{"gitId":"e0958902"},"content":"you can see all the fields of that medication index.","lastModifiedDate":"2024-04-10"},{"lineNumber":337,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":338,"author":{"gitId":"e0958902"},"content":"Format: `view -l MEDICATION_INDEX`","lastModifiedDate":"2024-04-08"},{"lineNumber":339,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":340,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"tip-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":341,"author":{"gitId":"T0nyLin"},"content":":bulb: \u003cstrong\u003eTip: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":342,"author":{"gitId":"e0958902"},"content":"You are only allowed to use one flag and argument.","lastModifiedDate":"2024-04-14"},{"lineNumber":343,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":344,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":345,"author":{"gitId":"e0958902"},"content":"Example: `meditracker\u003e view -l 1`","lastModifiedDate":"2024-04-14"},{"lineNumber":346,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":347,"author":{"gitId":"e0958902"},"content":"Output:","lastModifiedDate":"2024-04-08"},{"lineNumber":348,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":349,"author":{"gitId":"nickczh"},"content":"Name: Medication A","lastModifiedDate":"2024-04-10"},{"lineNumber":350,"author":{"gitId":"e0958902"},"content":"Quantity: 5000.0","lastModifiedDate":"2024-04-08"},{"lineNumber":351,"author":{"gitId":"e0958902"},"content":"Expiry Date: 2025-07-01","lastModifiedDate":"2024-04-12"},{"lineNumber":352,"author":{"gitId":"e0958902"},"content":"Remarks: cause_dizziness","lastModifiedDate":"2024-04-08"},{"lineNumber":353,"author":{"gitId":"e0958902"},"content":"Morning Dosage: 500.0","lastModifiedDate":"2024-04-08"},{"lineNumber":354,"author":{"gitId":"e0958902"},"content":"Afternoon Dosage: 250.0","lastModifiedDate":"2024-04-08"},{"lineNumber":355,"author":{"gitId":"T0nyLin"},"content":"Evening Dosage: 100.0","lastModifiedDate":"2024-04-13"},{"lineNumber":356,"author":{"gitId":"e0958902"},"content":"Repeat: 1","lastModifiedDate":"2024-04-08"},{"lineNumber":357,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":358,"author":{"gitId":"e0958902"},"content":"SUCCESS: Medication details has been retrieved","lastModifiedDate":"2024-04-08"},{"lineNumber":359,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":360,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":361,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":362,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":363,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":364,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":365,"author":{"gitId":"wenenhoe"},"content":"### View Medication by name","lastModifiedDate":"2024-04-15"},{"lineNumber":366,"author":{"gitId":"e0958902"},"content":"You can view all medication information by its name.","lastModifiedDate":"2024-04-08"},{"lineNumber":367,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":368,"author":{"gitId":"e0958902"},"content":"Format: `view -n MEDICATION_NAME`","lastModifiedDate":"2024-04-08"},{"lineNumber":369,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":370,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"tip-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":371,"author":{"gitId":"T0nyLin"},"content":":bulb: \u003cstrong\u003eTip: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":372,"author":{"gitId":"e0958902"},"content":"You are only allowed to use one flag and argument.","lastModifiedDate":"2024-04-14"},{"lineNumber":373,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":374,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":375,"author":{"gitId":"e0958902"},"content":"Example: `meditracker\u003e view -n Medication B`","lastModifiedDate":"2024-04-14"},{"lineNumber":376,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":377,"author":{"gitId":"e0958902"},"content":"Output:","lastModifiedDate":"2024-04-08"},{"lineNumber":378,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":379,"author":{"gitId":"nickczh"},"content":"Name: Medication B","lastModifiedDate":"2024-04-10"},{"lineNumber":380,"author":{"gitId":"e0958902"},"content":"Quantity: 1000.0","lastModifiedDate":"2024-04-08"},{"lineNumber":381,"author":{"gitId":"e0958902"},"content":"Expiry Date: 2024-09-30","lastModifiedDate":"2024-04-12"},{"lineNumber":382,"author":{"gitId":"T0nyLin"},"content":"Remarks: Nil","lastModifiedDate":"2024-04-13"},{"lineNumber":383,"author":{"gitId":"e0958902"},"content":"Morning Dosage: 500.0","lastModifiedDate":"2024-04-08"},{"lineNumber":384,"author":{"gitId":"e0958902"},"content":"Afternoon Dosage: 250.0","lastModifiedDate":"2024-04-08"},{"lineNumber":385,"author":{"gitId":"e0958902"},"content":"Evening Dosage: 50.0","lastModifiedDate":"2024-04-08"},{"lineNumber":386,"author":{"gitId":"e0958902"},"content":"Repeat: 6","lastModifiedDate":"2024-04-08"},{"lineNumber":387,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":388,"author":{"gitId":"e0958902"},"content":"SUCCESS: Medication details has been retrieved","lastModifiedDate":"2024-04-08"},{"lineNumber":389,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":390,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":391,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":392,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":393,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":394,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":395,"author":{"gitId":"wenenhoe"},"content":"### View Medication by quantity","lastModifiedDate":"2024-04-15"},{"lineNumber":396,"author":{"gitId":"e0958902"},"content":"You can view all medication information by its quantity.","lastModifiedDate":"2024-04-08"},{"lineNumber":397,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":398,"author":{"gitId":"e0958902"},"content":"Format: `view -q MEDICATION_QUANTITY`","lastModifiedDate":"2024-04-08"},{"lineNumber":399,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":400,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"tip-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":401,"author":{"gitId":"T0nyLin"},"content":":bulb: \u003cstrong\u003eTip: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":402,"author":{"gitId":"e0958902"},"content":"You are only allowed to use one flag and argument.","lastModifiedDate":"2024-04-14"},{"lineNumber":403,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":404,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":405,"author":{"gitId":"e0958902"},"content":"Example: `meditracker\u003e view -q 1000`","lastModifiedDate":"2024-04-14"},{"lineNumber":406,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":407,"author":{"gitId":"e0958902"},"content":"Output:","lastModifiedDate":"2024-04-08"},{"lineNumber":408,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":409,"author":{"gitId":"nickczh"},"content":"Name: Medication B","lastModifiedDate":"2024-04-10"},{"lineNumber":410,"author":{"gitId":"e0958902"},"content":"Quantity: 1000.0","lastModifiedDate":"2024-04-08"},{"lineNumber":411,"author":{"gitId":"e0958902"},"content":"Expiry Date: 2024-09-30","lastModifiedDate":"2024-04-12"},{"lineNumber":412,"author":{"gitId":"T0nyLin"},"content":"Remarks: Nil","lastModifiedDate":"2024-04-13"},{"lineNumber":413,"author":{"gitId":"e0958902"},"content":"Morning Dosage: 500.0","lastModifiedDate":"2024-04-08"},{"lineNumber":414,"author":{"gitId":"e0958902"},"content":"Afternoon Dosage: 250.0","lastModifiedDate":"2024-04-08"},{"lineNumber":415,"author":{"gitId":"e0958902"},"content":"Evening Dosage: 50.0","lastModifiedDate":"2024-04-08"},{"lineNumber":416,"author":{"gitId":"e0958902"},"content":"Repeat: 6","lastModifiedDate":"2024-04-08"},{"lineNumber":417,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":418,"author":{"gitId":"e0958902"},"content":"SUCCESS: Medication details has been retrieved","lastModifiedDate":"2024-04-08"},{"lineNumber":419,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":420,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":421,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":422,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":423,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":424,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":425,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":426,"author":{"gitId":"wenenhoe"},"content":"### View Medication by expiry","lastModifiedDate":"2024-04-15"},{"lineNumber":427,"author":{"gitId":"e0958902"},"content":"You can view all medication information by its expiry year.","lastModifiedDate":"2024-04-08"},{"lineNumber":428,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":429,"author":{"gitId":"e0958902"},"content":"Format: `view -e MEDICATION_EXPIRY_IN_YYYY`","lastModifiedDate":"2024-04-14"},{"lineNumber":430,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":431,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"tip-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":432,"author":{"gitId":"T0nyLin"},"content":":bulb: \u003cstrong\u003eTip: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":433,"author":{"gitId":"e0958902"},"content":"You are only allowed to use one flag and argument.","lastModifiedDate":"2024-04-14"},{"lineNumber":434,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":435,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":436,"author":{"gitId":"e0958902"},"content":"Example: `meditracker\u003e view -e 2025`","lastModifiedDate":"2024-04-14"},{"lineNumber":437,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":438,"author":{"gitId":"e0958902"},"content":"Output:","lastModifiedDate":"2024-04-08"},{"lineNumber":439,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":440,"author":{"gitId":"nickczh"},"content":"Name: Medication A","lastModifiedDate":"2024-04-10"},{"lineNumber":441,"author":{"gitId":"e0958902"},"content":"Quantity: 5000.0","lastModifiedDate":"2024-04-08"},{"lineNumber":442,"author":{"gitId":"e0958902"},"content":"Expiry Date: 2025-07-01","lastModifiedDate":"2024-04-12"},{"lineNumber":443,"author":{"gitId":"e0958902"},"content":"Remarks: cause_dizziness","lastModifiedDate":"2024-04-08"},{"lineNumber":444,"author":{"gitId":"e0958902"},"content":"Morning Dosage: 500.0","lastModifiedDate":"2024-04-08"},{"lineNumber":445,"author":{"gitId":"e0958902"},"content":"Afternoon Dosage: 250.0","lastModifiedDate":"2024-04-08"},{"lineNumber":446,"author":{"gitId":"T0nyLin"},"content":"Evening Dosage: 100.0","lastModifiedDate":"2024-04-13"},{"lineNumber":447,"author":{"gitId":"e0958902"},"content":"Repeat: 1","lastModifiedDate":"2024-04-08"},{"lineNumber":448,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":449,"author":{"gitId":"nickczh"},"content":"Name: Medication B","lastModifiedDate":"2024-04-10"},{"lineNumber":450,"author":{"gitId":"e0958902"},"content":"Quantity: 1000.0","lastModifiedDate":"2024-04-08"},{"lineNumber":451,"author":{"gitId":"e0958902"},"content":"Expiry Date: 2024-09-30","lastModifiedDate":"2024-04-12"},{"lineNumber":452,"author":{"gitId":"T0nyLin"},"content":"Remarks: Nil","lastModifiedDate":"2024-04-13"},{"lineNumber":453,"author":{"gitId":"e0958902"},"content":"Morning Dosage: 500.0","lastModifiedDate":"2024-04-08"},{"lineNumber":454,"author":{"gitId":"e0958902"},"content":"Afternoon Dosage: 250.0","lastModifiedDate":"2024-04-08"},{"lineNumber":455,"author":{"gitId":"e0958902"},"content":"Evening Dosage: 50.0","lastModifiedDate":"2024-04-08"},{"lineNumber":456,"author":{"gitId":"e0958902"},"content":"Repeat: 6","lastModifiedDate":"2024-04-08"},{"lineNumber":457,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":458,"author":{"gitId":"e0958902"},"content":"SUCCESS: Medication details has been retrieved","lastModifiedDate":"2024-04-08"},{"lineNumber":459,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":460,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":461,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":462,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":463,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":464,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":465,"author":{"gitId":"wenenhoe"},"content":"### View Medication by remarks","lastModifiedDate":"2024-04-15"},{"lineNumber":466,"author":{"gitId":"e0958902"},"content":"You can view all medication information by its remarks.","lastModifiedDate":"2024-04-08"},{"lineNumber":467,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":468,"author":{"gitId":"e0958902"},"content":"Format: `view -r MEDICATION_REMARKS`","lastModifiedDate":"2024-04-14"},{"lineNumber":469,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":470,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"tip-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":471,"author":{"gitId":"T0nyLin"},"content":":bulb: \u003cstrong\u003eTip: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":472,"author":{"gitId":"e0958902"},"content":"You are only allowed to use one flag and argument.","lastModifiedDate":"2024-04-14"},{"lineNumber":473,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":474,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":475,"author":{"gitId":"e0958902"},"content":"Example: `meditracker\u003e view -r dizziness`","lastModifiedDate":"2024-04-14"},{"lineNumber":476,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":477,"author":{"gitId":"e0958902"},"content":"Output:","lastModifiedDate":"2024-04-08"},{"lineNumber":478,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":479,"author":{"gitId":"nickczh"},"content":"Name: Medication A","lastModifiedDate":"2024-04-10"},{"lineNumber":480,"author":{"gitId":"e0958902"},"content":"Quantity: 5000.0","lastModifiedDate":"2024-04-08"},{"lineNumber":481,"author":{"gitId":"e0958902"},"content":"Expiry Date: 2025-07-01","lastModifiedDate":"2024-04-12"},{"lineNumber":482,"author":{"gitId":"e0958902"},"content":"Remarks: cause_dizziness","lastModifiedDate":"2024-04-08"},{"lineNumber":483,"author":{"gitId":"e0958902"},"content":"Morning Dosage: 500.0","lastModifiedDate":"2024-04-08"},{"lineNumber":484,"author":{"gitId":"e0958902"},"content":"Afternoon Dosage: 250.0","lastModifiedDate":"2024-04-08"},{"lineNumber":485,"author":{"gitId":"T0nyLin"},"content":"Evening Dosage: 100.0","lastModifiedDate":"2024-04-13"},{"lineNumber":486,"author":{"gitId":"e0958902"},"content":"Repeat: 1","lastModifiedDate":"2024-04-08"},{"lineNumber":487,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":488,"author":{"gitId":"e0958902"},"content":"SUCCESS: Medication details has been retrieved","lastModifiedDate":"2024-04-08"},{"lineNumber":489,"author":{"gitId":"e0958902"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":490,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":491,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":492,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":493,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":494,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":495,"author":{"gitId":"wenenhoe"},"content":"## Record taking of medication","lastModifiedDate":"2024-04-15"},{"lineNumber":496,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":497,"author":{"gitId":"wenenhoe"},"content":"### Take Medication `take -l`","lastModifiedDate":"2024-04-15"},{"lineNumber":498,"author":{"gitId":"T0nyLin"},"content":"When you have taken your medication, you can type `take`, followed by the list index `-l listIndex` to mark it as taken.","lastModifiedDate":"2024-04-11"},{"lineNumber":499,"author":{"gitId":"T0nyLin"},"content":"You can obtain the list index by entering [`list -t today`](#daily-medications) and refer to the index for the ","lastModifiedDate":"2024-04-11"},{"lineNumber":500,"author":{"gitId":"T0nyLin"},"content":"medication you have taken. This command is time aware and will mark the index you specified based on what time of day ","lastModifiedDate":"2024-04-11"},{"lineNumber":501,"author":{"gitId":"T0nyLin"},"content":"it is. ","lastModifiedDate":"2024-04-11"},{"lineNumber":502,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":503,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"tip-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":504,"author":{"gitId":"T0nyLin"},"content":":bulb: \u003cstrong\u003eTip: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":505,"author":{"gitId":"T0nyLin"},"content":"Optionally, you can specify \u003ccode\u003e-m\u003c/code\u003e, \u003ccode\u003e-a\u003c/code\u003e, \u003ccode\u003e-e\u003c/code\u003e to override the time aware feature.","lastModifiedDate":"2024-04-13"},{"lineNumber":506,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":507,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":508,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":509,"author":{"gitId":"wenenhoe"},"content":"Usage:","lastModifiedDate":"2024-04-03"},{"lineNumber":510,"author":{"gitId":"wenenhoe"},"content":"\ttake (-l listIndex) [-m] [-a] [-e] [-h]","lastModifiedDate":"2024-04-03"},{"lineNumber":511,"author":{"gitId":"wenenhoe"},"content":"Options:","lastModifiedDate":"2024-04-03"},{"lineNumber":512,"author":{"gitId":"wenenhoe"},"content":"\t-l listIndex     Index of item in list","lastModifiedDate":"2024-04-03"},{"lineNumber":513,"author":{"gitId":"wenenhoe"},"content":"\t-m               Time of day: Morning","lastModifiedDate":"2024-04-03"},{"lineNumber":514,"author":{"gitId":"wenenhoe"},"content":"\t-a               Time of day: Afternoon","lastModifiedDate":"2024-04-03"},{"lineNumber":515,"author":{"gitId":"wenenhoe"},"content":"\t-e               Time of day: Evening","lastModifiedDate":"2024-04-03"},{"lineNumber":516,"author":{"gitId":"wenenhoe"},"content":"\t-h               Prints this help message","lastModifiedDate":"2024-04-03"},{"lineNumber":517,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":518,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":519,"author":{"gitId":"T0nyLin"},"content":"Examples:","lastModifiedDate":"2024-04-11"},{"lineNumber":520,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":521,"author":{"gitId":"T0nyLin"},"content":"* `meditracker\u003e take -l 1`","lastModifiedDate":"2024-04-11"},{"lineNumber":522,"author":{"gitId":"T0nyLin"},"content":"* `meditracker\u003e take -l 1 -m`","lastModifiedDate":"2024-04-11"},{"lineNumber":523,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":524,"author":{"gitId":"wenenhoe"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":525,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":526,"author":{"gitId":"T0nyLin"},"content":"INFO: Medication quantity decreased: 40.0 -\u003e 38.0","lastModifiedDate":"2024-04-11"},{"lineNumber":527,"author":{"gitId":"wenenhoe"},"content":"SUCCESS: Medicine has been taken","lastModifiedDate":"2024-04-03"},{"lineNumber":528,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":529,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":530,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":531,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":532,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":533,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":534,"author":{"gitId":"wenenhoe"},"content":"### Untake Medication `untake -l`","lastModifiedDate":"2024-04-15"},{"lineNumber":535,"author":{"gitId":"T0nyLin"},"content":"If you have accidentally entered the wrong command and wish to un-take the medication, you can type `untake`, ","lastModifiedDate":"2024-04-11"},{"lineNumber":536,"author":{"gitId":"T0nyLin"},"content":"followed by the list index `-l listIndex`. Similarly, you can obtain the list index by entering ","lastModifiedDate":"2024-04-11"},{"lineNumber":537,"author":{"gitId":"T0nyLin"},"content":"[`list -t today`](#daily-medications) and refer to the index for the medication you wish to un-mark. This command is ","lastModifiedDate":"2024-04-11"},{"lineNumber":538,"author":{"gitId":"T0nyLin"},"content":"time aware and will mark the index of the medication based on what time of day it is. ","lastModifiedDate":"2024-04-11"},{"lineNumber":539,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":540,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"tip-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":541,"author":{"gitId":"T0nyLin"},"content":":bulb: \u003cstrong\u003eTip: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":542,"author":{"gitId":"T0nyLin"},"content":"Optionally, you can specify \u003ccode\u003e-m\u003c/code\u003e, \u003ccode\u003e-a\u003c/code\u003e, \u003ccode\u003e-e\u003c/code\u003e to override the time aware feature.","lastModifiedDate":"2024-04-13"},{"lineNumber":543,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":544,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":545,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":546,"author":{"gitId":"wenenhoe"},"content":"Usage:","lastModifiedDate":"2024-04-03"},{"lineNumber":547,"author":{"gitId":"wenenhoe"},"content":"\tuntake (-l listIndex) [-m] [-a] [-e] [-h]","lastModifiedDate":"2024-04-03"},{"lineNumber":548,"author":{"gitId":"wenenhoe"},"content":"Options:","lastModifiedDate":"2024-04-03"},{"lineNumber":549,"author":{"gitId":"wenenhoe"},"content":"\t-l listIndex     Index of item in list","lastModifiedDate":"2024-04-03"},{"lineNumber":550,"author":{"gitId":"wenenhoe"},"content":"\t-m               Time of day: Morning","lastModifiedDate":"2024-04-03"},{"lineNumber":551,"author":{"gitId":"wenenhoe"},"content":"\t-a               Time of day: Afternoon","lastModifiedDate":"2024-04-03"},{"lineNumber":552,"author":{"gitId":"wenenhoe"},"content":"\t-e               Time of day: Evening","lastModifiedDate":"2024-04-03"},{"lineNumber":553,"author":{"gitId":"wenenhoe"},"content":"\t-h               Prints this help message","lastModifiedDate":"2024-04-03"},{"lineNumber":554,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":555,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":556,"author":{"gitId":"T0nyLin"},"content":"Examples: ","lastModifiedDate":"2024-04-11"},{"lineNumber":557,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":558,"author":{"gitId":"T0nyLin"},"content":"* `meditracker\u003e untake -l 1`","lastModifiedDate":"2024-04-11"},{"lineNumber":559,"author":{"gitId":"T0nyLin"},"content":"* `meditracker\u003e untake -l 1 -m`","lastModifiedDate":"2024-04-11"},{"lineNumber":560,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":561,"author":{"gitId":"wenenhoe"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":562,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":563,"author":{"gitId":"T0nyLin"},"content":"INFO: Medication quantity increased: 38.0 -\u003e 40.0","lastModifiedDate":"2024-04-13"},{"lineNumber":564,"author":{"gitId":"wenenhoe"},"content":"SUCCESS: Medicine has been untaken","lastModifiedDate":"2024-04-03"},{"lineNumber":565,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":566,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":567,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":568,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":569,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":570,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":571,"author":{"gitId":"wenenhoe"},"content":"## Modify Medication Information `modify -l`","lastModifiedDate":"2024-04-15"},{"lineNumber":572,"author":{"gitId":"wenenhoe"},"content":"If you require modification to the medication information, you can type `modify`, followed by the list index","lastModifiedDate":"2024-04-15"},{"lineNumber":573,"author":{"gitId":"wenenhoe"},"content":"`-l listIndex`. You can obtain the list index from the Medication List by entering [`list -t all`](#all-medications).","lastModifiedDate":"2024-04-15"},{"lineNumber":574,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":575,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":576,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv class\u003d\"tip-box\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":577,"author":{"gitId":"wenenhoe"},"content":":bulb: \u003cstrong\u003eTip: \u003c/strong\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":578,"author":{"gitId":"wenenhoe"},"content":"  \u003cul\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":579,"author":{"gitId":"wenenhoe"},"content":"    \u003cli\u003eThis command allows multiple flags to be specified in one line.","lastModifiedDate":"2024-04-15"},{"lineNumber":580,"author":{"gitId":"wenenhoe"},"content":"        (For each of the fields that you would like to modify, you can specify the corresponding flag and ","lastModifiedDate":"2024-04-15"},{"lineNumber":581,"author":{"gitId":"wenenhoe"},"content":"        the new value to make changes.)\u003c/li\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":582,"author":{"gitId":"wenenhoe"},"content":"    \u003cli\u003eYou should only specify numerical values for quantity and dosages. Specifying them with units, ","lastModifiedDate":"2024-04-15"},{"lineNumber":583,"author":{"gitId":"wenenhoe"},"content":"        such as mg/ml, will not be accepted as valid input.\u003c/li\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":584,"author":{"gitId":"wenenhoe"},"content":"  \u003c/ul\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":585,"author":{"gitId":"wenenhoe"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":586,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":587,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv class\u003d\"warning-box\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":588,"author":{"gitId":"wenenhoe"},"content":":warning: \u003cstrong\u003eWarning: \u003c/strong\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":589,"author":{"gitId":"wenenhoe"},"content":"New dosage and/or repeat frequency will be applied tomorrow/next time you require ","lastModifiedDate":"2024-04-15"},{"lineNumber":590,"author":{"gitId":"wenenhoe"},"content":"to take the medication (whichever occurs later). No changes will be made to today\u0027s list of ","lastModifiedDate":"2024-04-15"},{"lineNumber":591,"author":{"gitId":"wenenhoe"},"content":"medication to take.","lastModifiedDate":"2024-04-15"},{"lineNumber":592,"author":{"gitId":"wenenhoe"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":593,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":594,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":595,"author":{"gitId":"wenenhoe"},"content":"Usage:","lastModifiedDate":"2024-04-15"},{"lineNumber":596,"author":{"gitId":"wenenhoe"},"content":"\tmodify (-l listIndex) [-n name] [-q quantity] [-e expirationDate] ","lastModifiedDate":"2024-04-15"},{"lineNumber":597,"author":{"gitId":"wenenhoe"},"content":"\t[-dM dosageMorning] [-dA dosageAfternoon] [-dE dosageEvening] ","lastModifiedDate":"2024-04-15"},{"lineNumber":598,"author":{"gitId":"wenenhoe"},"content":"\t[-rep repeat] [-r remarks] [-h]","lastModifiedDate":"2024-04-15"},{"lineNumber":599,"author":{"gitId":"wenenhoe"},"content":"Options:","lastModifiedDate":"2024-04-15"},{"lineNumber":600,"author":{"gitId":"wenenhoe"},"content":"\t-l listIndex            Index of item in list","lastModifiedDate":"2024-04-15"},{"lineNumber":601,"author":{"gitId":"wenenhoe"},"content":"\t-n name                 Name of medication","lastModifiedDate":"2024-04-15"},{"lineNumber":602,"author":{"gitId":"wenenhoe"},"content":"\t-q quantity             Quantity of medication","lastModifiedDate":"2024-04-15"},{"lineNumber":603,"author":{"gitId":"wenenhoe"},"content":"\t-e expirationDate       Expiration date of medication","lastModifiedDate":"2024-04-15"},{"lineNumber":604,"author":{"gitId":"wenenhoe"},"content":"\t-dM dosageMorning       Morning dosage of medication","lastModifiedDate":"2024-04-15"},{"lineNumber":605,"author":{"gitId":"wenenhoe"},"content":"\t-dA dosageAfternoon     Afternoon dosage of medication","lastModifiedDate":"2024-04-15"},{"lineNumber":606,"author":{"gitId":"wenenhoe"},"content":"\t-dE dosageEvening       Evening dosage of medication","lastModifiedDate":"2024-04-15"},{"lineNumber":607,"author":{"gitId":"wenenhoe"},"content":"\t-rep repeat             How often to take medication","lastModifiedDate":"2024-04-15"},{"lineNumber":608,"author":{"gitId":"wenenhoe"},"content":"\t                            (eg: Supply a number from 1 to 7)","lastModifiedDate":"2024-04-15"},{"lineNumber":609,"author":{"gitId":"wenenhoe"},"content":"\t-r remarks              Additional remarks on medication","lastModifiedDate":"2024-04-15"},{"lineNumber":610,"author":{"gitId":"wenenhoe"},"content":"\t-h                      Prints this help message","lastModifiedDate":"2024-04-15"},{"lineNumber":611,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":612,"author":{"gitId":"wenenhoe"},"content":"Examples:","lastModifiedDate":"2024-04-15"},{"lineNumber":613,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":614,"author":{"gitId":"wenenhoe"},"content":"* `meditracker\u003e modify -l 1 -n MedB`","lastModifiedDate":"2024-04-15"},{"lineNumber":615,"author":{"gitId":"wenenhoe"},"content":"* `meditracker\u003e modify -l 1 -q 40 -dA 2`","lastModifiedDate":"2024-04-15"},{"lineNumber":616,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":617,"author":{"gitId":"wenenhoe"},"content":"Output:","lastModifiedDate":"2024-04-15"},{"lineNumber":618,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":619,"author":{"gitId":"wenenhoe"},"content":"SUCCESS: Medicine has been modified","lastModifiedDate":"2024-04-15"},{"lineNumber":620,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":621,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":622,"author":{"gitId":"wenenhoe"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":623,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":624,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":625,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":626,"author":{"gitId":"wenenhoe"},"content":"## Delete Medication `delete -l`","lastModifiedDate":"2024-04-15"},{"lineNumber":627,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":628,"author":{"gitId":"e0958902"},"content":"To delete a medication, you can type `delete`, followed by the list index `-l listIndex`. ","lastModifiedDate":"2024-04-14"},{"lineNumber":629,"author":{"gitId":"e0958902"},"content":"You can obtain the list index by entering [`list -t all`](#all-medications) to refer to the list of all medications.","lastModifiedDate":"2024-04-14"},{"lineNumber":630,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":631,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv class\u003d\"danger-box\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":632,"author":{"gitId":"wenenhoe"},"content":":bangbang: \u003cstrong\u003eDanger: \u003c/strong\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":633,"author":{"gitId":"wenenhoe"},"content":"This operation is irreversible. Once a medication is deleted, it cannot be restored back. Proceed with caution.","lastModifiedDate":"2024-04-15"},{"lineNumber":634,"author":{"gitId":"wenenhoe"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":635,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":636,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":637,"author":{"gitId":"wenenhoe"},"content":"Usage:","lastModifiedDate":"2024-04-03"},{"lineNumber":638,"author":{"gitId":"wenenhoe"},"content":"\tdelete (-l listIndex) [-h]","lastModifiedDate":"2024-04-03"},{"lineNumber":639,"author":{"gitId":"wenenhoe"},"content":"Options:","lastModifiedDate":"2024-04-03"},{"lineNumber":640,"author":{"gitId":"wenenhoe"},"content":"\t-l listIndex     Index of item in list","lastModifiedDate":"2024-04-03"},{"lineNumber":641,"author":{"gitId":"wenenhoe"},"content":"\t-h               Prints this help message","lastModifiedDate":"2024-04-03"},{"lineNumber":642,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":643,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":644,"author":{"gitId":"T0nyLin"},"content":"Example: `meditracker\u003e delete -l 2`","lastModifiedDate":"2024-04-11"},{"lineNumber":645,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":646,"author":{"gitId":"wenenhoe"},"content":"Output:","lastModifiedDate":"2024-04-03"},{"lineNumber":647,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":648,"author":{"gitId":"wenenhoe"},"content":"SUCCESS: Medicine has been deleted","lastModifiedDate":"2024-04-03"},{"lineNumber":649,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-03"},{"lineNumber":650,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":651,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":652,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":653,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":654,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":655,"author":{"gitId":"wenenhoe"},"content":"## Search","lastModifiedDate":"2024-04-15"},{"lineNumber":656,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":657,"author":{"gitId":"kyuichyi"},"content":"MediTracker has a built-in medication library where you can search for common medications. This library contains ","lastModifiedDate":"2024-04-15"},{"lineNumber":658,"author":{"gitId":"kyuichyi"},"content":"information on the medication name, the illness that the medication is used for, and the side effects of the medication.","lastModifiedDate":"2024-04-11"},{"lineNumber":659,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":660,"author":{"gitId":"kyuichyi"},"content":"\u003cdiv class\u003d\"note-box\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":661,"author":{"gitId":"kyuichyi"},"content":":notebook: \u003cstrong\u003eNote: \u003c/strong\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":662,"author":{"gitId":"kyuichyi"},"content":"The search command searches for medications from the built-in medication library, which is different from your personal ","lastModifiedDate":"2024-04-15"},{"lineNumber":663,"author":{"gitId":"kyuichyi"},"content":"medication list.","lastModifiedDate":"2024-04-15"},{"lineNumber":664,"author":{"gitId":"kyuichyi"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":665,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":666,"author":{"gitId":"kyuichyi"},"content":"To search for a medication in the library, you can type \u0027search\u0027, followed by the field you want to search for and the ","lastModifiedDate":"2024-04-11"},{"lineNumber":667,"author":{"gitId":"kyuichyi"},"content":"keyword.","lastModifiedDate":"2024-04-12"},{"lineNumber":668,"author":{"gitId":"kyuichyi"},"content":"You have to include at least one of the following flags: `-n`, `-i`, `-s`, `-a` to specify the field you want to ","lastModifiedDate":"2024-04-05"},{"lineNumber":669,"author":{"gitId":"kyuichyi"},"content":"search for.","lastModifiedDate":"2024-04-05"},{"lineNumber":670,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":671,"author":{"gitId":"kyuichyi"},"content":"```","lastModifiedDate":"2024-04-05"},{"lineNumber":672,"author":{"gitId":"e0958902"},"content":"Usage:","lastModifiedDate":"2024-04-14"},{"lineNumber":673,"author":{"gitId":"wenenhoe"},"content":"\tsearch [-n name] [-i illness] [-s sideEffects] [-a allFields] [-h]","lastModifiedDate":"2024-04-15"},{"lineNumber":674,"author":{"gitId":"kyuichyi"},"content":"Options:","lastModifiedDate":"2024-04-05"},{"lineNumber":675,"author":{"gitId":"kyuichyi"},"content":"    -n name                 Name of medication","lastModifiedDate":"2024-04-05"},{"lineNumber":676,"author":{"gitId":"kyuichyi"},"content":"    -i illness              Illness that the medication is used for","lastModifiedDate":"2024-04-05"},{"lineNumber":677,"author":{"gitId":"kyuichyi"},"content":"    -s sideEffects          Side effects of the medication","lastModifiedDate":"2024-04-05"},{"lineNumber":678,"author":{"gitId":"kyuichyi"},"content":"    -a allFields            Search all fields (name, illness, side effects)","lastModifiedDate":"2024-04-11"},{"lineNumber":679,"author":{"gitId":"kyuichyi"},"content":"    -h                      Prints this help message","lastModifiedDate":"2024-04-05"},{"lineNumber":680,"author":{"gitId":"kyuichyi"},"content":"```","lastModifiedDate":"2024-04-05"},{"lineNumber":681,"author":{"gitId":"kyuichyi"},"content":"Examples:","lastModifiedDate":"2024-04-05"},{"lineNumber":682,"author":{"gitId":"nickczh"},"content":"- `search -n Medication A`: Search for medication with the name `Medication A`","lastModifiedDate":"2024-04-10"},{"lineNumber":683,"author":{"gitId":"kyuichyi"},"content":"- `search -i Headache`: Search for medication that treats `Headache`","lastModifiedDate":"2024-04-05"},{"lineNumber":684,"author":{"gitId":"kyuichyi"},"content":"- `search -s Dizziness`: Search for medication with side effect `Dizziness`","lastModifiedDate":"2024-04-05"},{"lineNumber":685,"author":{"gitId":"kyuichyi"},"content":"- `search -a keyword`: Search for `keyword` in all fields in the library (name, illness, side effect)","lastModifiedDate":"2024-04-05"},{"lineNumber":686,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":687,"author":{"gitId":"kyuichyi"},"content":"Output:","lastModifiedDate":"2024-04-05"},{"lineNumber":688,"author":{"gitId":"kyuichyi"},"content":"```","lastModifiedDate":"2024-04-05"},{"lineNumber":689,"author":{"gitId":"kyuichyi"},"content":"Here are the search results:","lastModifiedDate":"2024-04-05"},{"lineNumber":690,"author":{"gitId":"nickczh"},"content":"1. Medication A; Treats: Headache; May cause: Dizziness","lastModifiedDate":"2024-04-10"},{"lineNumber":691,"author":{"gitId":"nickczh"},"content":"2. Medication B; Treats: Fever; Side Effects: Dizziness","lastModifiedDate":"2024-04-10"},{"lineNumber":692,"author":{"gitId":"kyuichyi"},"content":"```","lastModifiedDate":"2024-04-05"},{"lineNumber":693,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":694,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":695,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":696,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":697,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":698,"author":{"gitId":"wenenhoe"},"content":"## Help","lastModifiedDate":"2024-04-15"},{"lineNumber":699,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":700,"author":{"gitId":"wenenhoe"},"content":"If in any situation you are stuck while using MediTracker, please do not worry. The help command is specifically ","lastModifiedDate":"2024-04-15"},{"lineNumber":701,"author":{"gitId":"wenenhoe"},"content":"designed to guide users to use the MediTracker. All you need to do is to type in `help`.","lastModifiedDate":"2024-04-15"},{"lineNumber":702,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":703,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":704,"author":{"gitId":"wenenhoe"},"content":"Example: `meditracker\u003e help`","lastModifiedDate":"2024-04-15"},{"lineNumber":705,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":706,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":707,"author":{"gitId":"wenenhoe"},"content":"Output:","lastModifiedDate":"2024-04-15"},{"lineNumber":708,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":709,"author":{"gitId":"wenenhoe"},"content":"Here are the commands you can use with MediTracker:","lastModifiedDate":"2024-04-15"},{"lineNumber":710,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":711,"author":{"gitId":"wenenhoe"},"content":"\texit      Exits MediTracker.","lastModifiedDate":"2024-04-15"},{"lineNumber":712,"author":{"gitId":"wenenhoe"},"content":"\thelp      Lists all available commands and their description.","lastModifiedDate":"2024-04-15"},{"lineNumber":713,"author":{"gitId":"wenenhoe"},"content":"\tadd       Adds a medication to the medication manager.","lastModifiedDate":"2024-04-15"},{"lineNumber":714,"author":{"gitId":"wenenhoe"},"content":"\tview      Get information of a specific medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":715,"author":{"gitId":"wenenhoe"},"content":"\tmodify    Modify medication information.","lastModifiedDate":"2024-04-15"},{"lineNumber":716,"author":{"gitId":"wenenhoe"},"content":"\tlist      Summary of medications for the day.","lastModifiedDate":"2024-04-15"},{"lineNumber":717,"author":{"gitId":"wenenhoe"},"content":"\tdelete    Delete medication information.","lastModifiedDate":"2024-04-15"},{"lineNumber":718,"author":{"gitId":"wenenhoe"},"content":"\tsearch    Access medicine database.","lastModifiedDate":"2024-04-15"},{"lineNumber":719,"author":{"gitId":"wenenhoe"},"content":"\ttake      Record taking of medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":720,"author":{"gitId":"wenenhoe"},"content":"\tuntake    Record untaking of medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":721,"author":{"gitId":"wenenhoe"},"content":"\tsave      Saves the JSON file to the specified path.","lastModifiedDate":"2024-04-15"},{"lineNumber":722,"author":{"gitId":"wenenhoe"},"content":"\tload      Loads the JSON file from the specified path.","lastModifiedDate":"2024-04-15"},{"lineNumber":723,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":724,"author":{"gitId":"wenenhoe"},"content":"For more details about each command, simply type in the command name.","lastModifiedDate":"2024-04-15"},{"lineNumber":725,"author":{"gitId":"wenenhoe"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":726,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":727,"author":{"gitId":"wenenhoe"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":728,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":729,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":730,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":731,"author":{"gitId":"e0958902"},"content":"## General Data Management","lastModifiedDate":"2024-04-14"},{"lineNumber":732,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":733,"author":{"gitId":"wenenhoe"},"content":"### Saving to a file `save`","lastModifiedDate":"2024-04-15"},{"lineNumber":734,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":735,"author":{"gitId":"annoy-o-mus"},"content":"Saves the JSON file to the specified path.","lastModifiedDate":"2024-04-03"},{"lineNumber":736,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":737,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":738,"author":{"gitId":"T0nyLin"},"content":"Usage:","lastModifiedDate":"2024-04-13"},{"lineNumber":739,"author":{"gitId":"T0nyLin"},"content":"\tsave [-o saveFile] [-h]","lastModifiedDate":"2024-04-13"},{"lineNumber":740,"author":{"gitId":"T0nyLin"},"content":"Options:","lastModifiedDate":"2024-04-13"},{"lineNumber":741,"author":{"gitId":"T0nyLin"},"content":"\t-o saveFile     File path (including .json extension) to save to","lastModifiedDate":"2024-04-13"},{"lineNumber":742,"author":{"gitId":"T0nyLin"},"content":"\t-h              Prints this help message","lastModifiedDate":"2024-04-13"},{"lineNumber":743,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":744,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":745,"author":{"gitId":"annoy-o-mus"},"content":"Format: `save [-o saveFile]`","lastModifiedDate":"2024-04-03"},{"lineNumber":746,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":747,"author":{"gitId":"annoy-o-mus"},"content":"Examples:","lastModifiedDate":"2024-04-03"},{"lineNumber":748,"author":{"gitId":"annoy-o-mus"},"content":"- `save`: Save the file to the default location.","lastModifiedDate":"2024-04-03"},{"lineNumber":749,"author":{"gitId":"annoy-o-mus"},"content":"- `save -o data/testfolder/output.json`: Saves the file to specified location.","lastModifiedDate":"2024-04-15"},{"lineNumber":750,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":751,"author":{"gitId":"annoy-o-mus"},"content":"The default save location is `data/MediTrackerData.json`.","lastModifiedDate":"2024-04-03"},{"lineNumber":752,"author":{"gitId":"annoy-o-mus"},"content":"As far as possible, refrain from using spaces in the file path, especially with `-h` i.e. `path/to -h/`. ","lastModifiedDate":"2024-04-03"},{"lineNumber":753,"author":{"gitId":"annoy-o-mus"},"content":"This will trigger the help message to be displayed rather than processing the saving.","lastModifiedDate":"2024-04-03"},{"lineNumber":754,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":755,"author":{"gitId":"annoy-o-mus"},"content":"Also, ensure that the file does not end with a space or a dot (.); the file must end with `.json`.","lastModifiedDate":"2024-04-03"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":757,"author":{"gitId":"annoy-o-mus"},"content":"Ensure that the folder you are going to write to has the proper access rights. Don\u0027t write to system folders; it will likely fail.","lastModifiedDate":"2024-04-03"},{"lineNumber":758,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":759,"author":{"gitId":"annoy-o-mus"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":760,"author":{"gitId":"annoy-o-mus"},"content":":information_source: \u003cstrong\u003eInfo: \u003c/strong\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":761,"author":{"gitId":"annoy-o-mus"},"content":"The \u003ccode\u003edailymed\u003c/code\u003e folder will be created at the same level as that of the JSON file.","lastModifiedDate":"2024-04-15"},{"lineNumber":762,"author":{"gitId":"annoy-o-mus"},"content":"Keep both the folder structure and the file name as is as our loading functionality relies on this particular save format.","lastModifiedDate":"2024-04-15"},{"lineNumber":763,"author":{"gitId":"annoy-o-mus"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":764,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":765,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":766,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":767,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":768,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":769,"author":{"gitId":"wenenhoe"},"content":"### Reading from a file `load`","lastModifiedDate":"2024-04-15"},{"lineNumber":770,"author":{"gitId":"annoy-o-mus"},"content":"Loads the JSON files from the specified path.","lastModifiedDate":"2024-04-03"},{"lineNumber":771,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":772,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":773,"author":{"gitId":"T0nyLin"},"content":"Usage:","lastModifiedDate":"2024-04-13"},{"lineNumber":774,"author":{"gitId":"T0nyLin"},"content":"\tload (-in loadFile) [-h]","lastModifiedDate":"2024-04-13"},{"lineNumber":775,"author":{"gitId":"T0nyLin"},"content":"Options:","lastModifiedDate":"2024-04-13"},{"lineNumber":776,"author":{"gitId":"T0nyLin"},"content":"\t-in loadFile     File path (including .json extension) to load from","lastModifiedDate":"2024-04-13"},{"lineNumber":777,"author":{"gitId":"T0nyLin"},"content":"\t-h               Prints this help message","lastModifiedDate":"2024-04-13"},{"lineNumber":778,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-13"},{"lineNumber":779,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":780,"author":{"gitId":"annoy-o-mus"},"content":"Format: `load (-in loadFile)`","lastModifiedDate":"2024-04-03"},{"lineNumber":781,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":782,"author":{"gitId":"annoy-o-mus"},"content":"Examples:","lastModifiedDate":"2024-04-03"},{"lineNumber":783,"author":{"gitId":"annoy-o-mus"},"content":"- `load -in data/to/inputFile.json`","lastModifiedDate":"2024-04-03"},{"lineNumber":784,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":785,"author":{"gitId":"annoy-o-mus"},"content":"The default load location is `data/MediTrackerData.json`. This is done automatically when the program starts.","lastModifiedDate":"2024-04-03"},{"lineNumber":786,"author":{"gitId":"annoy-o-mus"},"content":"You should make sure that this file is present in the specified path. Alternatively, you can use the `load` command","lastModifiedDate":"2024-04-03"},{"lineNumber":787,"author":{"gitId":"annoy-o-mus"},"content":"to load the file.","lastModifiedDate":"2024-04-03"},{"lineNumber":788,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":789,"author":{"gitId":"annoy-o-mus"},"content":"As far as possible, refrain from using spaces in the file path, especially with `-h` i.e. `path/to -h/`.","lastModifiedDate":"2024-04-03"},{"lineNumber":790,"author":{"gitId":"annoy-o-mus"},"content":"This will trigger the help message to be displayed rather than processing the saving.","lastModifiedDate":"2024-04-03"},{"lineNumber":791,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":792,"author":{"gitId":"annoy-o-mus"},"content":"A prompt will then ask for your confirmation to overwrite existing data as an additional layer of safeguard.","lastModifiedDate":"2024-04-03"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":794,"author":{"gitId":"annoy-o-mus"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":795,"author":{"gitId":"annoy-o-mus"},"content":":information_source: \u003cstrong\u003eInfo: \u003c/strong\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":796,"author":{"gitId":"annoy-o-mus"},"content":"The \u003ccode\u003edailymed\u003c/code\u003e folder must be at the same level as that of the JSON file and the text file must be of format \u003ccode\u003eYYYY--MM-DD.txt\u003c/code\u003e or the program will fail to find the files needed to load ","lastModifiedDate":"2024-04-15"},{"lineNumber":797,"author":{"gitId":"annoy-o-mus"},"content":"to update the Daily Medications.","lastModifiedDate":"2024-04-15"},{"lineNumber":798,"author":{"gitId":"annoy-o-mus"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":799,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":800,"author":{"gitId":"wenenhoe"},"content":"\u003cdiv class\u003d\"warning-box\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":801,"author":{"gitId":"wenenhoe"},"content":":warning: \u003cstrong\u003eWarning: \u003c/strong\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":802,"author":{"gitId":"wenenhoe"},"content":"Loading will overwrite existing running data, so be sure to save a copy first before deciding to overwrite.","lastModifiedDate":"2024-04-15"},{"lineNumber":803,"author":{"gitId":"wenenhoe"},"content":"See the part on \u003ca href\u003d\"#editing-the-file\"\u003eEditing the File\u003c/a\u003e for warnings on modifying the saved file.","lastModifiedDate":"2024-04-15"},{"lineNumber":804,"author":{"gitId":"wenenhoe"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":805,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":806,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":807,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":808,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":809,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":810,"author":{"gitId":"wenenhoe"},"content":"### Editing the file","lastModifiedDate":"2024-04-15"},{"lineNumber":811,"author":{"gitId":"annoy-o-mus"},"content":"The medication information are saved in a `.json` format while the daily medication information are saved","lastModifiedDate":"2024-04-03"},{"lineNumber":812,"author":{"gitId":"T0nyLin"},"content":"in the `.txt` format (two independent files). Advanced users can modify either files directly.","lastModifiedDate":"2024-04-15"},{"lineNumber":813,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":814,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"danger-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":815,"author":{"gitId":"T0nyLin"},"content":":bangbang: \u003cstrong\u003eDanger: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":816,"author":{"gitId":"T0nyLin"},"content":"If the changes to the data file makes either its format or some of the fields contained therein invalid,","lastModifiedDate":"2024-04-13"},{"lineNumber":817,"author":{"gitId":"T0nyLin"},"content":"MediTracker may:","lastModifiedDate":"2024-04-12"},{"lineNumber":818,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":819,"author":{"gitId":"T0nyLin"},"content":"\u003col\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":820,"author":{"gitId":"T0nyLin"},"content":"  \u003cli\u003eDiscard all the data and start with a fresh state\u003c/li\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":821,"author":{"gitId":"annoy-o-mus"},"content":"  \u003cli\u003eTries to read some information, and fill in placeholder values for fields that fail to load, which may result in unexpected results \u003c/li\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":822,"author":{"gitId":"T0nyLin"},"content":"  \u003cli\u003eCrash due to bad data.\u003c/li\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":823,"author":{"gitId":"T0nyLin"},"content":"\u003c/ol\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":824,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":825,"author":{"gitId":"annoy-o-mus"},"content":"Some kinds of modifications that can render a file invalid include: ","lastModifiedDate":"2024-04-15"},{"lineNumber":826,"author":{"gitId":"annoy-o-mus"},"content":"\u003col\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":827,"author":{"gitId":"annoy-o-mus"},"content":"  \u003cli\u003eRemoving semicolons (:) from the JSON file\u003c/li\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":828,"author":{"gitId":"annoy-o-mus"},"content":"  \u003cli\u003eUsing NaN and large numbers (9999999999999)\u003c/li\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":829,"author":{"gitId":"annoy-o-mus"},"content":"\u003c/ol\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":830,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":831,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":832,"author":{"gitId":"T0nyLin"},"content":"\u003e Therefore, only edit the file if you are confident you can update it correctly.","lastModifiedDate":"2024-04-13"},{"lineNumber":833,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":834,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"warning-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":835,"author":{"gitId":"T0nyLin"},"content":":warning: \u003cstrong\u003eWarning: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":836,"author":{"gitId":"annoy-o-mus"},"content":"If you edit valid data directly inside the \u003ccode\u003e.json\u003c/code\u003e file, you might have to \u003cb\u003emodify the text file \u0026lt;TODAY_DATE\u0026gt;.txt in ","lastModifiedDate":"2024-04-15"},{"lineNumber":837,"author":{"gitId":"annoy-o-mus"},"content":"data/dailymed/\u003c/b\u003e as well. Otherwise, the next time MediTracker runs, it will continue to read the old data saved in the","lastModifiedDate":"2024-04-15"},{"lineNumber":838,"author":{"gitId":"T0nyLin"},"content":"\u0026lt;TODAY_DATE\u0026gt;.txt.","lastModifiedDate":"2024-04-13"},{"lineNumber":839,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":840,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":841,"author":{"gitId":"T0nyLin"},"content":"\u003cdiv class\u003d\"info-box\"\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":842,"author":{"gitId":"T0nyLin"},"content":":information_source: \u003cstrong\u003eInfo: \u003c/strong\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":843,"author":{"gitId":"annoy-o-mus"},"content":"As mentioned earlier, \u003ccode\u003e.json\u003c/code\u003e and \u003ccode\u003e.txt\u003c/code\u003e store All Medications and Daily Medications independently of each other. ","lastModifiedDate":"2024-04-15"},{"lineNumber":844,"author":{"gitId":"annoy-o-mus"},"content":"Therefore, in the case of data corruption in one of the files, please be minded that `list -t all` might display empty, while ","lastModifiedDate":"2024-04-15"},{"lineNumber":845,"author":{"gitId":"T0nyLin"},"content":"`list -t today` might display its contents normally, or vice versa. Or if both files are corrupted, both commands might ","lastModifiedDate":"2024-04-13"},{"lineNumber":846,"author":{"gitId":"T0nyLin"},"content":"not display anything at all.","lastModifiedDate":"2024-04-13"},{"lineNumber":847,"author":{"gitId":"T0nyLin"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":848,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":849,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":850,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":851,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":852,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":853,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":854,"author":{"gitId":"annoy-o-mus"},"content":"## Setting an arbitrary time","lastModifiedDate":"2024-04-15"},{"lineNumber":855,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":856,"author":{"gitId":"annoy-o-mus"},"content":"This feature is intended for developers to test out the features. ","lastModifiedDate":"2024-04-15"},{"lineNumber":857,"author":{"gitId":"annoy-o-mus"},"content":"To make use of this feature, simply add the following flag and argument **before running the program** (not during the program execution itself)","lastModifiedDate":"2024-04-15"},{"lineNumber":858,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":859,"author":{"gitId":"annoy-o-mus"},"content":"Example: `java -jar meditracker.jar -sim 2024-01-01T13:00:00Z`","lastModifiedDate":"2024-04-03"},{"lineNumber":860,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":861,"author":{"gitId":"annoy-o-mus"},"content":"The `-sim` flag informs the program that a simulated time is expected. The supplied date and time must be of the format specified above,","lastModifiedDate":"2024-04-03"},{"lineNumber":862,"author":{"gitId":"annoy-o-mus"},"content":"or else the parser will return an error. The supplied time is of the format `YYYY-MM-DDTHH:MM:SSZ`","lastModifiedDate":"2024-04-03"},{"lineNumber":863,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":864,"author":{"gitId":"annoy-o-mus"},"content":"In the above example, it will set the time for the program to be **1 Jan 2024, 1pm**.","lastModifiedDate":"2024-04-03"},{"lineNumber":865,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":866,"author":{"gitId":"annoy-o-mus"},"content":"The time will be fixed and will not \"move\" once the time has been set.","lastModifiedDate":"2024-04-15"},{"lineNumber":867,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":868,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":869,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":870,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":871,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":872,"author":{"gitId":"wenenhoe"},"content":"## Exit `exit`","lastModifiedDate":"2024-04-15"},{"lineNumber":873,"author":{"gitId":"T0nyLin"},"content":"A goodbye message is printed on the screen, and the program exits after.","lastModifiedDate":"2024-04-08"},{"lineNumber":874,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":875,"author":{"gitId":"T0nyLin"},"content":"Format: `exit`","lastModifiedDate":"2024-04-08"},{"lineNumber":876,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":877,"author":{"gitId":"T0nyLin"},"content":"Example: `meditracker\u003e exit`","lastModifiedDate":"2024-04-11"},{"lineNumber":878,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":879,"author":{"gitId":"T0nyLin"},"content":"Output:","lastModifiedDate":"2024-04-11"},{"lineNumber":880,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":881,"author":{"gitId":"T0nyLin"},"content":"Thank you for using MediTracker. Hope to see you again!","lastModifiedDate":"2024-04-08"},{"lineNumber":882,"author":{"gitId":"T0nyLin"},"content":"```","lastModifiedDate":"2024-04-08"},{"lineNumber":883,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":884,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":885,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":886,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":887,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":888,"author":{"gitId":"annoy-o-mus"},"content":"# Future Developments","lastModifiedDate":"2024-04-15"},{"lineNumber":889,"author":{"gitId":"annoy-o-mus"},"content":"- Support Different save file type (.csv)","lastModifiedDate":"2024-04-15"},{"lineNumber":890,"author":{"gitId":"annoy-o-mus"},"content":"- Better file path checks to differentiate Operating Systems","lastModifiedDate":"2024-04-15"},{"lineNumber":891,"author":{"gitId":"annoy-o-mus"},"content":"- Configuration File to change default file settings","lastModifiedDate":"2024-04-15"},{"lineNumber":892,"author":{"gitId":"annoy-o-mus"},"content":"- Show historical data of the list of medication taken daily (show records of medication taken in the past)","lastModifiedDate":"2024-04-15"},{"lineNumber":893,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":894,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":895,"author":{"gitId":"annoy-o-mus"},"content":"# FAQ","lastModifiedDate":"2024-04-15"},{"lineNumber":896,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2024-04-03"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":898,"author":{"gitId":"kyuichyi"},"content":"**A**: By default, all MediTracker-related data will be saved under the `data` folder. ","lastModifiedDate":"2024-04-12"},{"lineNumber":899,"author":{"gitId":"annoy-o-mus"},"content":"This folder resides at the same level as the `meditracker.jar` file.","lastModifiedDate":"2024-04-03"},{"lineNumber":900,"author":{"gitId":"annoy-o-mus"},"content":"To transfer the data, just copy/shift the `data` folder to the new computer, ","lastModifiedDate":"2024-04-03"},{"lineNumber":901,"author":{"gitId":"annoy-o-mus"},"content":"making sure it is at the same level as the `.jar` file.","lastModifiedDate":"2024-04-03"},{"lineNumber":902,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":903,"author":{"gitId":"annoy-o-mus"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":904,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":905,"author":{"gitId":"T0nyLin"},"content":"**Q**: Why does the program keep returning \"Invalid index specified\"?","lastModifiedDate":"2024-04-15"},{"lineNumber":906,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":907,"author":{"gitId":"T0nyLin"},"content":"**A**: Please make sure you are referring to the correct list. MediTracker uses [`list -t all`](#all-medications)","lastModifiedDate":"2024-04-15"},{"lineNumber":908,"author":{"gitId":"T0nyLin"},"content":"and [`list -t today`](#daily-medications) commands to display all medications and medications to be taken for the day, ","lastModifiedDate":"2024-04-15"},{"lineNumber":909,"author":{"gitId":"T0nyLin"},"content":"respectively. You may also use the `\u003ccommand\u003e -h` to see how the command works.","lastModifiedDate":"2024-04-15"},{"lineNumber":910,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":911,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":912,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":913,"author":{"gitId":"annoy-o-mus"},"content":"**Q**: How do I reset the program?","lastModifiedDate":"2024-04-15"},{"lineNumber":914,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":915,"author":{"gitId":"annoy-o-mus"},"content":"**A**: While we have yet to implement a reset functionality, there is a workaround. You can just delete the files at the default save location and the program will start with a fresh state.","lastModifiedDate":"2024-04-15"},{"lineNumber":916,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":917,"author":{"gitId":"annoy-o-mus"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":918,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":919,"author":{"gitId":"annoy-o-mus"},"content":"**Q**: Where is the default save location?","lastModifiedDate":"2024-04-15"},{"lineNumber":920,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":921,"author":{"gitId":"annoy-o-mus"},"content":"**A**: The `.json` file is by default saved under the `data` folder which you can find in the same folder as the program you are running on.","lastModifiedDate":"2024-04-15"},{"lineNumber":922,"author":{"gitId":"annoy-o-mus"},"content":"The `.txt` files containing daily information are located by default inside the `data/dailymed` folder","lastModifiedDate":"2024-04-15"},{"lineNumber":923,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":924,"author":{"gitId":"annoy-o-mus"},"content":"\u003cbr\u003e ","lastModifiedDate":"2024-04-15"},{"lineNumber":925,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":926,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":927,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":928,"author":{"gitId":"annoy-o-mus"},"content":"# Glossary","lastModifiedDate":"2024-04-15"},{"lineNumber":929,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":930,"author":{"gitId":"T0nyLin"},"content":"| Term  | Explanation                                                                                                                                                                                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":931,"author":{"gitId":"T0nyLin"},"content":"|-------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":932,"author":{"gitId":"T0nyLin"},"content":"| .json | JSON stands for JavaScript Object Notation, which is used to save **all** medications added by the user.                                                                                                      |","lastModifiedDate":"2024-04-15"},{"lineNumber":933,"author":{"gitId":"T0nyLin"},"content":"| .txt  | It represents a text file that contains plain text in the form of lines. \u003cbr/\u003eMedications to be taken for a particular day is saved in the text file, and a new text file is created at the start of the day. |","lastModifiedDate":"2024-04-15"},{"lineNumber":934,"author":{"gitId":"T0nyLin"},"content":"| Flags | Most commands in MediTracker uses the flags with the \"-\" to recognise values within certain fields. Eg. `-n`, `-a`, `-l`, etc.                                                                                |","lastModifiedDate":"2024-04-15"},{"lineNumber":935,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":936,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":938,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":940,"author":{"gitId":"annoy-o-mus"},"content":"# Command Summary","lastModifiedDate":"2024-04-15"},{"lineNumber":941,"author":{"gitId":"nickczh"},"content":"\u003c!-- Markdown table is not suitable as it does not provide text wrapping --\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":942,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":943,"author":{"gitId":"nickczh"},"content":"\u003ctable\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":944,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":945,"author":{"gitId":"nickczh"},"content":"    \u003cth\u003eAction\u003c/th\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":946,"author":{"gitId":"nickczh"},"content":"    \u003cth\u003eCommands\u003c/th\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":947,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":948,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":949,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003eAdd\u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":950,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":951,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":952,"author":{"gitId":"nickczh"},"content":"      \u003ccode\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":953,"author":{"gitId":"wenenhoe"},"content":"        add (-n name) (-q quantity) (-e expirationDate) (-dM dosageMorning) \u003cbr\u003e (-dA dosageAfternoon) ","lastModifiedDate":"2024-04-15"},{"lineNumber":954,"author":{"gitId":"wenenhoe"},"content":"        (-dE dosageEvening) (-rep repeat) [-r remarks] [-h]","lastModifiedDate":"2024-04-15"},{"lineNumber":955,"author":{"gitId":"nickczh"},"content":"      \u003c/code\u003e \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":956,"author":{"gitId":"nickczh"},"content":"      Example: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":957,"author":{"gitId":"nickczh"},"content":"      \u003ccode\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":958,"author":{"gitId":"wenenhoe"},"content":"        add -n Medication A -q 5000 -e 01/07/25 -dM 500 -dA 250 -dE 100 \u003cbr\u003e -r cause_dizziness -rep 1 ","lastModifiedDate":"2024-04-15"},{"lineNumber":959,"author":{"gitId":"nickczh"},"content":"      \u003c/code\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":960,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":961,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":962,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":963,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003eList\u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":964,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":965,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":966,"author":{"gitId":"nickczh"},"content":"      \u003ccode\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":967,"author":{"gitId":"nickczh"},"content":"      list (-t listType) [-m] [-a] [-e] [-h] ","lastModifiedDate":"2024-04-14"},{"lineNumber":968,"author":{"gitId":"nickczh"},"content":"      \u003c/code\u003e \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":969,"author":{"gitId":"wenenhoe"},"content":"      Example: \u003cbr\u003e\u003ccode\u003elist -t all\u003cbr\u003e\u003c/code\u003e\u003ccode\u003elist -t today\u003c/code\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":970,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":971,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":972,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":973,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003eView\u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":974,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":975,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":976,"author":{"gitId":"wenenhoe"},"content":"      \u003ccode\u003eview [-l listIndex] [-n name] [-q quantity] [-e expirationDate] \u003cbr\u003e [-r remarks] [-h]\u003c/code\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":977,"author":{"gitId":"wenenhoe"},"content":"      Example: \u003cbr\u003e\u003ccode\u003eview -l 1\u003cbr\u003e\u003c/code\u003e\u003ccode\u003eview -n Medication B\u003cbr\u003e\u003c/code\u003e\u003ccode\u003eview -q 1000\u003cbr\u003e\u003c/code\u003e\u003ccode\u003eview -e 2025\u003cbr\u003e\u003c/code\u003e\u003ccode\u003eview -r dizziness\u003c/code\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":978,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":979,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":980,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":981,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003eUpdate\u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":982,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":983,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":984,"author":{"gitId":"wenenhoe"},"content":"      \u003ccode\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":985,"author":{"gitId":"wenenhoe"},"content":"        modify (-l listIndex) [-n name] [-q quantity] [-e expirationDate] \u003cbr\u003e [-dM dosageMorning]","lastModifiedDate":"2024-04-15"},{"lineNumber":986,"author":{"gitId":"wenenhoe"},"content":"        [-dA dosageAfternoon] [-dE dosageEvening] [-rep repeat] [-r remarks] [-h]","lastModifiedDate":"2024-04-15"},{"lineNumber":987,"author":{"gitId":"wenenhoe"},"content":"      \u003c/code\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":988,"author":{"gitId":"wenenhoe"},"content":"      \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":989,"author":{"gitId":"wenenhoe"},"content":"      Example: \u003cbr\u003e\u003ccode\u003emodify -l 1 -n MedB\u003cbr\u003e\u003c/code\u003e\u003ccode\u003emodify -l 1 -q 40 -dA 2\u003c/code\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":990,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":991,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":992,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":993,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003eTake\u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":994,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":995,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":996,"author":{"gitId":"nickczh"},"content":"      \u003ccode\u003etake (-l listIndex) [-m] [-a] [-e] [-h] \u003c/code\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":997,"author":{"gitId":"wenenhoe"},"content":"      Example: \u003cbr\u003e\u003ccode\u003etake -l 1\u003cbr\u003e\u003c/code\u003e\u003ccode\u003etake -l 1 -m\u003c/code\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":998,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":999,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1000,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1001,"author":{"gitId":"wenenhoe"},"content":"    \u003ctd\u003eUntake\u003c/td\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":1002,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1003,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1004,"author":{"gitId":"nickczh"},"content":"      \u003ccode\u003euntake (-l listIndex) [-m] [-a] [-e] [-h] \u003c/code\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1005,"author":{"gitId":"wenenhoe"},"content":"      Example: \u003cbr\u003e\u003ccode\u003euntake -l 1\u003cbr\u003e\u003c/code\u003e\u003ccode\u003euntake -l 1 -m\u003c/code\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":1006,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1007,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1008,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1009,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003eDelete\u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1010,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1011,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1012,"author":{"gitId":"nickczh"},"content":"      \u003ccode\u003edelete (-l listIndex) [-h] \u003c/code\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1013,"author":{"gitId":"nickczh"},"content":"      Example: \u003cbr\u003e\u003ccode\u003edelete -l 2\u003c/code\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1014,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1015,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1016,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1017,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003eSearch\u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1018,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1019,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1020,"author":{"gitId":"wenenhoe"},"content":"      \u003ccode\u003esearch [-n name] [-i illness] [-s sideEffects] [-a allFields] [-h] \u003c/code\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":1021,"author":{"gitId":"wenenhoe"},"content":"      Example: \u003cbr\u003e\u003ccode\u003esearch -n Medication A\u003cbr\u003e\u003c/code\u003e\u003ccode\u003esearch -i Headache\u003c/code\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":1022,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1023,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1024,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1025,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003eHelp\u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1026,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1027,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1028,"author":{"gitId":"nickczh"},"content":"      \u003ccode\u003ehelp\u003c/code\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1029,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1030,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1031,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1032,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003eSave\u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1033,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1034,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1035,"author":{"gitId":"nickczh"},"content":"      \u003ccode\u003esave [-o saveFile] [-h] \u003c/code\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1036,"author":{"gitId":"wenenhoe"},"content":"      Example: \u003cbr\u003e\u003ccode\u003esave\u003cbr\u003e\u003c/code\u003e\u003ccode\u003esave -o data/testfolder/output.json\u003c/code\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":1037,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1038,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1039,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1040,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003eLoad\u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1041,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1042,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1043,"author":{"gitId":"nickczh"},"content":"      \u003ccode\u003eload (-in loadFile) \u003c/code\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1044,"author":{"gitId":"nickczh"},"content":"      Example: \u003cbr\u003e\u003ccode\u003eload -in data/to/inputFile.json\u003c/code\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1045,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1046,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1047,"author":{"gitId":"nickczh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1048,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003eExit\u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1049,"author":{"gitId":"nickczh"},"content":"    \u003ctd\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1050,"author":{"gitId":"nickczh"},"content":"      Format: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1051,"author":{"gitId":"nickczh"},"content":"      \u003ccode\u003eexit\u003c/code\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1052,"author":{"gitId":"nickczh"},"content":"    \u003c/td\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1053,"author":{"gitId":"nickczh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":1054,"author":{"gitId":"nickczh"},"content":"\u003c/table\u003e","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"e0958902":282,"nickczh":125,"annoy-o-mus":168,"T0nyLin":192,"kyuichyi":31,"wenenhoe":215,"-":41}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"---","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"# Front matter, do not remove","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"---","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"// Initial structure adapted from","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"// https://github.com/se-edu/addressbook-level3/blob/master/docs/assets/css/style.scss","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":".icon {","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"    height: 21px;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"    width: 21px","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"// Colour scheme adapted from","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"// https://ay2223s1-cs2103t-w16-2.github.io/tp/UserGuide.html#installation","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"// with modifications","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":".note-box {","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    padding: 15px;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"    border: 0px solid transparent;","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"    margin-bottom: 20px;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    border-radius: 8px;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"    border-left-width: 4px;","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    color: #444450;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    background-color: #f8f8f9;","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    border-color: #ceced5;","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":".tip-box {","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    padding: 15px;","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"    border: 0px solid transparent;","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"    margin-bottom: 20px;","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"    border-radius: 8px;","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"    border-left-width: 4px;","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"    color: #257425;","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"    background-color: #e6f5e6;","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"    border-color: #9ee09e;","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":".info-box {","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"    padding: 15px;","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"    border: 0px solid transparent;","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"    margin-bottom: 20px;","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"    border-radius: 8px;","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"    border-left-width: 4px;","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"    color: #31708f;","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"    background-color: #d9edf7;","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"    border-color: #a7d5ec;","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":".warning-box {","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"    padding: 15px;","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"    border: 0px solid transparent;","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"    margin-bottom: 20px;","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"    border-radius: 8px;","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"    border-left-width: 4px;","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"    color: #5E4703;","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"    background-color: #fff5d5;","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"    border-color: #ffe285;","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":".danger-box {","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"    padding: 15px;","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"    border: 0px solid transparent;","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"    margin-bottom: 20px;","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"    border-radius: 8px;","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"    border-left-width: 4px;","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"    color: #850005;","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"    background-color: #ffebec;","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"    border-color: #ffb8bb;","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"// The below are overriding styles for the code chunks and blocks","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":".highlighter-rouge {","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"  border-color:#BEBEC6","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":".highlight {","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"  border-left-width:4px;","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"  border-color:#212126","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"nickczh":1,"annoy-o-mus":76}},{"path":"docs/diagrams/AddCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"@startuml","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"actor User","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"participant \":AddCommand\" as AddCommand","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"participant \":ArgumentList\" as ArgumentList","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n MedicationManager\" as MedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n DailyMedicationManager\" as DailyMedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n Ui\" as Ui","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"User -\u003e AddCommand ** : new AddCommand(arguments)","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"activate AddCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e ArgumentList: parse(arguments)","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"activate ArgumentList","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"ArgumentList --\u003e AddCommand: return parsedArguments","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"deactivate ArgumentList","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e AddCommand: execute()","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"activate AddCommand #FFBBBB","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e AddCommand: createMedication()","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"activate AddCommand #FFCCCC","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e MedicationManager: addMedication(medication)","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"activate MedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"MedicationManager --\u003e AddCommand: return","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"deactivate MedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e DailyMedicationManager: checkForDaily(medication)","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"activate DailyMedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"DailyMedicationManager --\u003e AddCommand: return","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"deactivate DailyMedicationManager","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"deactivate AddCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"AddCommand -\u003e Ui: showSuccessMessage(\"Medicine has been added\")","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"activate Ui","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"Ui --\u003e AddCommand: return","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"deactivate Ui","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"deactivate AddCommand","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"return User","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"@enduml","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"nickczh":37,"T0nyLin":1}},{"path":"docs/diagrams/AddToSubLists.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"actor User","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n :DailyMedicationManager\" as DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"participant \"period:Period\" as Period","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"participant \"medication:Medication\" as Medication","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"User -\u003e DailyMedicationManager: addToSublists(medication)","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"activate DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"    loop all periods","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager -\u003e Period: gePeriod()","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"        activate Period","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"        return period","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"        deactivate Period","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager -\u003e Medication: getDosage(), getName()","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"        activate Medication","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"        return dosage, name","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"        deactivate Medication","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager -\u003e \"dailyMedication:DailyMedication\" as DailyMeds ** : new DailyMedication(name, dosage, period)","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"        activate DailyMeds","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"        return dailyMedication","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"        deactivate DailyMeds","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager -\u003e DailyMedicationManager: addDailyMedication(dailyMedication)","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"        activate DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"        return","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        participant \"\u003c\u003cclass\u003e\u003e\\n :FileReaderWriter\" as FileReaderWriter","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager -\u003e FileReaderWriter: saveDailyMedicationData(null)","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"        activate FileReaderWriter","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"        return true","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"    end","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"DailyMedicationManager --\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"deactivate DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"T0nyLin":34}},{"path":"docs/diagrams/ArgumentPackageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"hide circle","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"class ArgumentName \u003c\u003cenumeration\u003e\u003e {","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"    DOSAGE_MORNING","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    DOSAGE_AFTERNOON","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    DOSAGE_EVENING","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"    EXPIRATION_DATE","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"    REPEAT","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"    DAY_ADDED","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    LIST_INDEX","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    NAME","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    QUANTITY","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    REMARKS","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    LIST_TYPE","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"    HELP","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    MORNING","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    AFTERNOON","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    EVENING","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    ILLNESS","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    SIDE_EFFECTS","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    ALL_FIELDS","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    SAVE_FILE","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    LOAD_FILE","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"class Argument {","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    -flag: String","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    -help: String","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    -isOptional: boolean","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    -hasValue: boolean","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"class ArgumentParser {","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"    #parsedArguments: Map\u003cArgumentName, String\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    #checkForMissingRequiredArguments()","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"    #checkForUnknownArguments(rawInputSplit: List\u003cString\u003e)","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    -checkArgumentValue(Argument argument, String argValue)","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    -getArgumentValue(rawInputSplit: List\u003cString\u003e, startIndex: int, endIndex: int)","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"    -getArgumentIndex(rawInputSplit: List\u003cString\u003e, flag: String)","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    -getArgumentIndexes(rawInputSplit: List\u003cString\u003e): SortedMap\u003cInteger, Argument\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"    -getArgumentValues(indexes: SortedMap\u003cInteger, Argument\u003e, rawInputSplit: List\u003cString\u003e)","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"class ArgumentList {","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    +parse(String rawInput): Map\u003cArgumentName, String\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"class ArgumentHelper {","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"    +{static} getHelpMessage(commandName: CommandName): String","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"    +{static} getHelpMessage(commandName: CommandName, argumentList: ArgumentList): String","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    -{static} getUsage(commandName: CommandName, argumentList: ArgumentList): String","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    -{static} getOptions(argumentList: ArgumentList): String","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    -{static} getArgumentFormat(argument: Argument): String","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"ArgumentParser o--\u003e \"1\" ArgumentList","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"ArgumentList *-\u003e \"1..*\" Argument","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"Argument -\u003e \"1\" ArgumentName","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"wenenhoe":62}},{"path":"docs/diagrams/FileImport.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"participant \":LoadCommand\" as LC","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n FileReaderWriter\" as FRW","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n JsonImporter\" as JI","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n MedicationManager\" as MM","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n DailyMedicationManager\" as DMM","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"-\u003e LC: execute()","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"activate LC","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"LC -\u003e FRW: loadMediTrackerData(jsonPath:Path)","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"activate FRW","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"FRW -\u003e JI: processMedicationJsonFile(jsonPath:Path)","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"activate JI","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"JI -\u003e MM: addMedicationFromSaveFile(data)","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"activate MM","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"JI \u003c-- MM","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"deactivate MM","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"FRW \u003c-- JI","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"deactivate JI","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"FRW -\u003e FRW: loadDailyMedicationData(dailyMedPath:Path)","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"activate FRW","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"alt dailyMedData \u003d\u003d null","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"FRW -\u003e DMM : createDailyMedicationManager()","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"activate DMM","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"FRW \u003c-- DMM","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"deactivate DMM","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"else else","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"FRW -\u003e DMM :importDailyMedicationManager(dailyMedData)","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"activate DMM","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"FRW \u003c-- DMM","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"deactivate DMM","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"end","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"FRW --\u003e FRW","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"deactivate FRW","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"LC \u003c-- FRW :","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"deactivate FRW","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"\u003c-- LC","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"deactivate LC","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"annoy-o-mus":56}},{"path":"docs/diagrams/JsonFileExport.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"@startuml","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"participant \":SaveCommand\" as SC","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n FileReaderWriter\" as FRW","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n JsonExporter\" as JE","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n DailyMedicationExporter\" as DME","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"-\u003e SC: execute()","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"activate SC","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"SC -\u003e FRW: saveMedicationData(jsonPath:Path)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"activate FRW","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"FRW -\u003e FRW: getCreatedTemporarySaveFile(jsonPath:Path)","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"activate FRW","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"FRW --\u003e FRW: tmpSaveFile:Path","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"deactivate FRW","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"FRW -\u003e JE: saveMedicationDataToJson(tmpSaveFile:Path)","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"activate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"JE -\u003e JE: populateJsonMedicationList()","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"activate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"JE --\u003e JE: medicationList:JSONArray","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"deactivate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"JE-\u003eJE: writeJsonData(rootData:JSONObject, fileToWrite:Path)","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"activate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"JE --\u003e JE: :boolean","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"deactivate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"JE --\u003e FRW: saveStatus:boolean","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"deactivate JE","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"note over FRW","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"Checks save status","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"overwrites the output file with the temp file","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"and deletes the temp file","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"end note","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"SC \u003c-- FRW: :boolean","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"deactivate FRW","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"SC -\u003e FRW: saveDailyMedicationData(jsonPath:Path)","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"activate FRW","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"FRW -\u003e FRW: getCreatedTemporarySaveFile(jsonPath:Path)","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"activate FRW","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"FRW --\u003e FRW: tmpSaveFile:Path","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"deactivate FRW","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"FRW -\u003e DME: writeDailyMedicationToFile(tmpSaveFile:Path)","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"activate DME","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"FRW \u003c-- DME: saveStatus:boolean","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"deactivate DME","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"note over FRW","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"Checks save status","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"overwrites the output file with the temp file","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"and deletes the temp file","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"end note","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"SC \u003c-- FRW : :boolean","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"deactivate FRW","lastModifiedDate":"2024-04-08"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"\u003c-- SC","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"deactivate SC","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"@enduml","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"annoy-o-mus":74}},{"path":"docs/diagrams/ListCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"actor User","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"participant \":ListCommand\" as LC","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"participant \"ARGUMENT_LIST:ArgumentList\" as AL","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"User -\u003e LC ** : new ListCommand(argument)","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"activate LC","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"LC -\u003e AL: parse(argument)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"activate AL","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"AL -\u003e \"parsedArguments:ArgumentParser\" as AP ** : new ArgumentParser(argument)","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"activate AP","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"return argumentParser.parsedArguments","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"return parsedArguments","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"deactivate AP","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"deactivate AL","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"participant \":ArgumentName\" as AN","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n :MedicationManager\" as MM","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n :DailyMedicationManager\" as DM","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n :Ui\" as UI","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"LC -\u003e AN: parsedArguments.get()","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"return listTypeString","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"LC -\u003e LC: execute()","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"activate LC","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    alt listTypeString.equals(\"all\")","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"        LC -\u003e MM: printAllMeds()","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"        activate MM","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"        return","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"        deactivate MM","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"    else listTypeString.equals(\"today\")","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        LC -\u003e DM: printTodayMeds()","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        activate DM","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"        return","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"        deactivate DM","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"    else else","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"        LC -\u003e UI: showErrorMessage(\"Unknown list type\")","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"        activate UI","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"        return","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"        deactivate UI","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"    end","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"LC --\u003e LC","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"deactivate LC","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"LC --\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"deactivate LC","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"nickczh":1,"T0nyLin":47}},{"path":"docs/diagrams/ModifyCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"actor User","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"participant \":ModifyCommand\" as ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"participant \":ArgumentList\" as ArgumentList","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n Command\" as Command","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n MedicationManager\" as MedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n Medication\" as Medication","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n Ui\" as Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"User -\u003e ModifyCommand **: new ModifyCommand(arguments)","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"activate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    ModifyCommand -\u003e ArgumentList: parse(arguments)","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    activate ArgumentList","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    ArgumentList --\u003e ModifyCommand: return parsedArguments","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    ModifyCommand --\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"deactivate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"User -\u003e ModifyCommand: execute()","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"activate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    ModifyCommand -\u003e Command: getListIndex(parsedArguments)","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    activate Command","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    Command --\u003e ModifyCommand: listIndex:int","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    deactivate Command","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    ModifyCommand -\u003e MedicationManager: getMedication(listIndex)","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    activate MedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    alt Try (While no exception thrown)","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager --\u003e ModifyCommand: medication:Medication","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        deactivate MedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        ModifyCommand -\u003e Medication: deepCopy(medication)","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        activate Medication","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        Medication --\u003e ModifyCommand: medicationCopy:Medication","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"        deactivate Medication","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        ModifyCommand -\u003e ModifyCommand: updateMedication(medication)","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        activate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        alt Try (While no exception thrown)","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"            ref over ModifyCommand: Call to updateMedication(medication) in separate diagram","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"            ModifyCommand -\u003e Ui: showSuccessMessage(\"Medicine has been modified\")","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"            activate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"            Ui --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"            deactivate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"            ModifyCommand --\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        else MediTrackerException e","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"            ModifyCommand -\u003e Ui: showErrorMessage(e)","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"            activate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"            Ui --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"            deactivate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"            ModifyCommand -\u003e Ui: showWarningMessage(\"Rolling back changes...\")","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"            activate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"            Ui --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"            deactivate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"            ModifyCommand -\u003e ModifyCommand: rollbackChanges(medication, medicationCopy)","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"            activate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"            alt Try (While no exception thrown)","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"                ref over ModifyCommand: Call to rollbackChanges(medication, medicationCopy) in separate diagram","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"            else MediTrackerException ex","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"                ModifyCommand -\u003e Ui: showErrorMessage(ex)","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"                activate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"                Ui --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"                deactivate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"                ModifyCommand --\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"            end","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"            deactivate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"            ModifyCommand --\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"            deactivate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        end","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"    else IndexOutOfBoundsException caught","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"          ModifyCommand -\u003e Ui: showErrorMessage(\"Invalid index specified\")","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"          activate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"          Ui --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"          deactivate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"          ModifyCommand --\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"          deactivate ArgumentList","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"          deactivate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"    end","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"wenenhoe":85}},{"path":"docs/diagrams/ModifyCommand_rollbackChanges.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"participant \":ModifyCommand\" as ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"participant \"medication:Medication\" as MED","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"participant \"medicationCopy:Medication\" as COPY","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n DailyMedicationManager\" as DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"activate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"activate MED","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"activate COPY","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"ModifyCommand -\u003e ModifyCommand: rollbackChanges(medication, medicationCopy)","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"activate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"opt processedArguments contains ArgumentName.NAME","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    ModifyCommand -\u003e COPY: getName()","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    activate COPY","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    COPY --\u003e ModifyCommand: oldName:String","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"    deactivate COPY","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    ModifyCommand -\u003e DailyMedicationManager: updateDailyMedicationName(medication, oldName)","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    activate DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    DailyMedicationManager --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    deactivate DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"end","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"ModifyCommand -\u003e MED: revertMedication(medicationCopy)","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"activate MED","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"MED --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"deactivate MED","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"ModifyCommand --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"deactivate COPY","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"deactivate MED","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"deactivate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"wenenhoe":32}},{"path":"docs/diagrams/ModifyCommand_updateMedication.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"participant \":ModifyCommand\" as ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"participant \"medication:Medication\" as MED","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n DailyMedicationManager\" as DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n Ui\" as Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"activate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"activate MED","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"ModifyCommand -\u003e ModifyCommand: updateMedication(medication)","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"activate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"loop all entries (argumentName, argumentValue) in parsedArguments","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    opt argumentName \u003d\u003d ArgumentName.NAME","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        ModifyCommand -\u003e DailyMedicationManager: updateDailyMedicationName(medication, argumentValue)","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        activate DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"        deactivate DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    end","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    ModifyCommand -\u003e MED: setMedicationValue(argumentName, argumentValue)","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    activate MED","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    MED --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    deactivate MED","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"end","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"ModifyCommand -\u003e MED: checkValidity()","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"activate MED","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"MED --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"deactivate MED","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"ModifyCommand -\u003e ModifyCommand: checkDosageOrRepeatModified(medication)","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"activate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"ModifyCommand -\u003e DailyMedicationManager: doesBelongToDailyList(medication)","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"activate DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"DailyMedicationManager --\u003e ModifyCommand: doesBelongToDailyList:boolean","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"deactivate DailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"opt Does belong to daily list and has modified dosage and/or repeat","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    ModifyCommand -\u003e Ui: showWarningMessage(warningMessage)","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    activate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"    Ui --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    deactivate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"end","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"deactivate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"ModifyCommand --\u003e ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"deactivate MED","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"deactivate ModifyCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"wenenhoe":49}},{"path":"docs/diagrams/ViewCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"actor User #e67678","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"title View Command Sequence Diagram","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"participant \":ViewCommand\" as ViewCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"participant \"ARGUMENT_LIST:ArgumentList\" as ArgumentList","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"participant \":ArgumentParser\" as ArgumentParser","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"participant \":ArgumentName\" as ArgumentName","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n MedicationManager\" as MedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n Ui\" as Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"User --\u003e ViewCommand ** : new ViewCommand(argument)","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"activate ViewCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"ViewCommand -\u003e ArgumentList: parse(argument)","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"activate ArgumentList #e67678","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"ArgumentList -\u003e ArgumentParser ** : New ArgumentParser(argument)","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"activate ArgumentParser #a67671","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"ArgumentParser --[#red]\u003e ArgumentList: parsedArguments","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"deactivate ArgumentParser","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"ArgumentList --[#red]\u003e ViewCommand: parsedArguments","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"deactivate ArgumentList","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"ViewCommand -\u003e ViewCommand: \u003cfont color\u003dblue\u003e execute(medication)","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"activate ViewCommand #65c2a6","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"    alt oneParsedArgument","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"        ViewCommand -\u003e MedicationManager: printSpecificMedication(medication)","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"        activate MedicationManager #d192d0","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"        MedicationManager -\u003e MedicationManager: getMedication(medication)","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"        MedicationManager -\u003e Ui: \u003cfont color\u003dblue\u003e printSpecificMed(medicationDetails)","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"        activate Ui #c6d67e","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"        Ui --[#red]\u003e MedicationManager: \u003cfont color\u003dred\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"        MedicationManager --[#red]\u003e ViewCommand: \u003cfont color\u003dred\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"        deactivate MedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"e0958902"},"content":"        ViewCommand -\u003e Ui: showSuccessMessage(\"Medication details has been retrieved\")","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"e0958902"},"content":"        Ui --[#red]\u003e ViewCommand: \u003cfont color\u003dred\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"        deactivate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"e0958902"},"content":"    else #transparent more\\nThanOne\\nParsed\\nArgs","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"e0958902"},"content":"        ViewCommand -\u003e Ui: showErrorMessage(\"You can only have one flag!\")","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"        activate Ui #c6d67e","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"        Ui --[#red]\u003e ViewCommand: \u003cfont color\u003dred\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"e0958902"},"content":"        deactivate Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"e0958902"},"content":"    end","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"e0958902"},"content":"ViewCommand --[#blue]\u003e ViewCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"e0958902"},"content":"deactivate ViewCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"e0958902"},"content":"User \u003c[#red]-- ViewCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"e0958902"},"content":"deactivate ViewCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"e0958902"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"e0958902":53}},{"path":"docs/team/annoy-o-mus.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# Song Xuan - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"## Overview: MediTracker","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"The MediTracker project aims to track the medication usage and ensure that the user stays on track with their medication schedule.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"It also aims to keep track of the (past) medication that has been taken.","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"## Summary of Contributions","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"For my part, I implemented the storage package for the team. This includes ","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"- Saving and Writing to and from the `.json` and `.txt` files.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"- Getting and Passing data to and from `MedicationManager` and `DailyMedicationManager` to write to the files above.","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"- Performing Path sanitisation checks.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"Furthermore, I have implemented the `save` and `load` commands to make use of the above functionality and to allow ","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"users to be able to specify where they want to save to.","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"I have also implemented the simulated time feature for us (the developers) to test MediTracker related data from ","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"another time or date without having to tweak the system time, and a custom logger to log certain warnings to stderr.","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"### Code related Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"[Link to Code Dashboard](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dannoy-o-mus\u0026breakdown\u003dtrue)","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"Key Features:","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"- Saving and Reading from files (Medication data to and from JSON)","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"  - [#25](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/25), [#27](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/27), [#55](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/55)","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"- Saving and reading from files (DailyMedication data to and from `.txt`)","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"  - [#48](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/48), [#121](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/121), [#226](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/226)","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"- Offer custom saving functionality with path sanitisation checks (`save` and `load` commands)","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"  - [#96](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/96), [#97](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/97), [#100](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/100)","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"- Logging for MediTracker (`MediLogger`)","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"  - [#41](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/41), [#45](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/45), [#46](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/46)","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"- Simulated Time for development (`MediTrackerTime`)","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"  - [#43](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/43)","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"### Miscellaneous Code Contributions (Styling and Quality related)","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"Issues [#140](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/140), [#146](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/146),[#222](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/222), [#241](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/241)","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"- Brought in DG comments from other users in the main repo ([#211](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/211))","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"- Populate some related instructions under manual testing.","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"- Introduced some Non-Functional Requirements relating to my part (Modify and share data, time support for developers)","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"- Introduced users stories relating to my part (saving and loading)","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"- Exporting and Importing data process (with sequence diagram)","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"- Storage Design component","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- To talk about Issue 25 --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"### PR Reviews","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"[#2](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/2), [#5](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/5), ","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"[#40](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/40), [#44](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/44), ","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"[#51](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/51), [#66](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/66), ","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"[#82](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/82), [#87](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/87), ","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"[#93](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/93), [#111](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/111), ","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"[#209](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/209), [#215](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/215), ","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"[#218](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/218), [#221](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/221), ","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"[#227](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/227), [#237](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/237)","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"[#240](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/240), [#246](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/246)","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"### Team-based tasks","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"- Added PR Template ([#11](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/11), [#21](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/21)).","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"- Set up the GitHub Team organisation and Repo","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"  - Restricted direct master branch merging","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"  - Disabled rebase and squash merging (thanks @wenenhoe)","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"- Brought in the JSON package (https://github.com/stleary/JSON-java) ([#26](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/26))","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"- Created the Jekyll configuration and introduced admonition template ([#76](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/76))","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"annoy-o-mus":68}},{"path":"docs/team/e0958902.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"# Eric Sim Chong Li - Project Portfolio Page","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"## MediTracker","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"The following contains my contribution summary and pull request reviews on our product, MediTracker.","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"MediTracker is a command-line interface application where it allows users to keep track of their ","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"daily medications and get reminded of low quantity and nearing expiry medications.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"* [Overview](#overview)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"* [Summary of Contributions](#summary-of-contributions)","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"  * [Code Contributed](#code-contributed)","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"  * [Enhancements implemented](#enhancements-implemented)","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"  * [Developer Guide Contributions](#developer-guide-contributions)","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"  * [User Guide Contributions](#user-guide-contributions)","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"  * [Review/mentoring contributions](#reviewmentoring-contributions)","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"  * [Team-based tasks and contributions beyond the project team](#team-based-tasks-and-contributions-beyond-the-project-team)","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"- Created relevant tags and milestones.","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"- Map some of the user stories to issues.","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"- Reviewed multiple pull requests (PR).","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"- Added guide on how to improve on ListCommand and ViewCommand in the developer guide.","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"- [PR #49:](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/49) List all medications from \u0027MedicationManager\u0027.","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"- [PR #15:](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/127) Show detailed view of a medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"- [PR #206](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/206) ","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"  - Update view feature to have more supported flags. ","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"  - Fix `IndexOutOfBoundsException` for `view` command \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"  (Related issues: #171, #169, #165, #152). ","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"  - Fix `NumberFormatException` for `view` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"e0958902"},"content":"  - Fix unaligned medication list output (Related issue: #166).","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"e0958902"},"content":"- [PR #214:](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/214)","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"Fix User Guide to explicitly state the requirements for every flag.","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"e0958902"},"content":"- [PR #202:](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/220)","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"e0958902"},"content":"Fix Expiry date issues (Related Issues: #192, #188, #187, #186, #161).\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"### Code Contributed","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"Here is the [RepoSense link](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003de0958902\u0026breakdown\u003dtrue) ","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"e0958902"},"content":"of my code contributions.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"e0958902"},"content":"### Enhancements implemented","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"e0958902"},"content":"- Implemented the ListCommand to query relevant fields in the Medication Manager ","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"e0958902"},"content":"containing the medication list. e.g `list -t all`.","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"e0958902"},"content":"- Implemented the ViewCommand to display all relevant fields of a medication, ","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"e0958902"},"content":"where it supports different flags with its argument. e.g `view -e 2025`.","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"e0958902"},"content":"- Performed JUnit tests on the methods used in List and View Commands.","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"e0958902"},"content":"- Ensured that the User Guide is consistent across all commands/features.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"e0958902"},"content":"- Information on how ListCommand and ViewCommand works, and how to use it.","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"e0958902"},"content":"- Included relevant diagrams to illustrate how ListCommand and ViewCommand works.","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"e0958902"},"content":"- Relevant user stories done in milestones.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"e0958902"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"e0958902"},"content":"- Updated user guide to include listing of all medications.","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"e0958902"},"content":"- Updated user guide to include viewing of specific medications.","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"e0958902"},"content":"- Ensured that the formatting, alignment, and consistency is in place across all pages.","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"e0958902"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"e0958902"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"e0958902"},"content":"### Review/mentoring contributions","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"e0958902"},"content":"- [#9](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/17) Add JavaDoc and other documentation to Ui.","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"e0958902"},"content":"- [#18](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/18) Created class to test for searching medication from external database.","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"e0958902"},"content":"- [#20](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/20) feat: Mark medication taken.","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"e0958902"},"content":"- [#23](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/23) Misc: change package name and update PR Template.","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"e0958902"},"content":"- [#53](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/53) Add medication info into daily.","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"e0958902"},"content":"- [#73](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/73) refactor: Modify Ui to be static.","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"e0958902"},"content":"- [#75](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/75) feat: More flags for Add command, Exception Handling and Double casting","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"e0958902"},"content":"- [#84](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/84) Separate daily medications to sub lists.","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"e0958902"},"content":"- [#88](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/88) Update list all medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"e0958902"},"content":"- [#89](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/89) DG: Adds DG from Lin Htet.","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"e0958902"},"content":"- [#90](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/90) DG: Add DG by kyuichyi.","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"e0958902"},"content":"- [#95](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/95) feat: Add take untake enhancements.","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"e0958902"},"content":"- [#98](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/98) Update style: styling update.","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"e0958902"},"content":"- [#115](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/115) test: add tests for search command functionality","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"e0958902"},"content":"- [#116](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/116) Obj for each sub list.","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"e0958902"},"content":"- [#126](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/126) refactor: Remove prompt from Argument classes.","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"e0958902"},"content":"- [#127](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/127) Query specific medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"e0958902"},"content":"- [#129](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/129) fix(bug): ModifyCommand handle erroneous data and fix AddCommand error handling.","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"e0958902"},"content":"- [#134](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/134) Updates UG: Lin Htet.","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"e0958902"},"content":"- [#139](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/139) docs: Update DG for Add command with sequence diagram.","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"e0958902"},"content":"- [#210](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/210) fix: Fix Add Command PE-D issues.","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"e0958902"},"content":"- [#212](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/212) docs: Update Dev Guide based on comments.","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"e0958902"},"content":"- [#213](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/213) Improve logging: Song Xuan.","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"e0958902"},"content":"- [#238](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/238) docs: Update search in UG.","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"e0958902"},"content":"- [#239](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/239) style: fix style.","lastModifiedDate":"2024-04-15"},{"lineNumber":95,"author":{"gitId":"e0958902"},"content":"- [#243](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/243) test: Add modify tests.","lastModifiedDate":"2024-04-15"},{"lineNumber":96,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":97,"author":{"gitId":"e0958902"},"content":"### Team-based tasks and contributions beyond the project team","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"e0958902"},"content":"- Created relevant tags and milestones to have a soft and hard deadline.","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"e0958902"},"content":"- Answered some questions in the forum and encouraged others to join and verify.","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"e0958902"},"content":"- Ensured that assertions is enabled in Gradle.","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"e0958902"},"content":"- Polish up the consistency of sections in the User Guide.\u003cbr\u003e","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"e0958902":101}},{"path":"docs/team/kyuichyi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"# Kaitlyn Chong - Project Portfolio Page","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"### Code related Contributions","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"- Issue #38: Query Medication Library","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"- Issue #63: Include medicationLibrary.txt in packaged .jar","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"- Issue #107: Add flags to `search` command","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"- Issue #114: Add tests for search command","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"- Issue #158: Update user guide to specify how `search` function works (Related issues: #160, #180, #193, #196, #197)","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"- Information on how to use SearchCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"- Added some user stories","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"### User Guide Contributions","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"- Added information on how to use `search`","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"### PR Reviews","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"#9, #78, #104, #144","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"### Team-based tasks","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"- Submitted first draft of UG to Canvas","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"kyuichyi":22}},{"path":"docs/team/nickczh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"# Nick Chua - Project Portfolio Page","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"## Overview","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"### Code related Contributions","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"- Issue [#14](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/14): ","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"Add Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"- Issue [#16](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/16):","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"Add medication entry and information via one-line command","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"- Issue [#52](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/52): ","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"Bridging DailyMedicationManager and MedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"- Issue [#71](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/71): ","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"Add assertion to Add command","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"- Issue [#72](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/72): ","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"Modify Ui to be static","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"- Issue [#74](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/74): ","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"More flags for Add command and Exception Handling","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"- Issue [#150](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/150): ","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"Enhance code quality for stricter styling checks","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"- Issue [#159](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/159): ","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"[PE-D][Tester E] Remarks changes from null to empty upon restart of application","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"- Issue [#182](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/182): ","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"[PE-D][Tester C] Lack of /help page","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"- Issue [#184](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/184): ","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"[PE-D][Tester F] using an example from the user guide is causing an error","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"- Issue [#191](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/191): ","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"[PE-D][Tester F] empty input is allowed when adding","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"- Issue [#231](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/231): ","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"NoSuchElementException when program is terminated with Ctrl-C","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"- Issue [#235](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/235): ","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"UG Command Summary, Table of Contents linking and back","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"- Add command specifications","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"- Sequence diagram for Add Command (Issue [#138](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/138))","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"### User Guide Contributions","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"- Table of Contents","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"- Add command","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"  - Description","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"  - Command Format","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"  - Example","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"  - Output","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"- Command Summary","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"- Help command","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"### PR Reviews","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"[#42](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/42), ","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"[#61](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/61), ","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"[#62](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/62), ","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"[#64](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/64), ","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"[#70](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/70), ","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"[#73](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/73), ","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"[#75](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/75), ","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"[#127](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/127), ","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"[#131](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/131), ","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"[#132](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/132), ","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"[#142](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/142), ","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"[#144](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/144), ","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"[#227](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/227)","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"### Team-based tasks","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"- Request permission for use of JSON-Java package in cs2113 forum","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"  [(Issue #16)](https://github.com/nus-cs2113-AY2324S2/forum/issues/16)","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"- Update Gradle configuration files at the start of Tp","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"nickczh":67}},{"path":"docs/team/t0nylin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"# Nyan Lin Htet - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"The following contains my contribution summary and pull request reviews.","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"- [Issue #13](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/13): Query Certain Time of the Day Medication Information in `DailyMedication`","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"- [Issue #34](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/34): Query `DailyMedication` list","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"- [Issue #50](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/50): Parse each row read from file int `DailyMedicationManager`","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"- [Issue #52](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/52): Bridging `DailyMedicationManager` and `MedicationManager`","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"- [Issue #69](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/69): Store `DailyMedication` list into textfile","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"- [Issue #79](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/79): Create private Ui constructor","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"- [Issue #81](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/81): Modify `DailyMedicationManager` to static","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"- [Issue #105](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/105): Fix bug to separate dailyMedication Object for items in each sub list","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"- [Issue #110](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/110): Fix bug to addCommand crash when repeat flag is not supplied","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"- [Issue #163](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/163): Fix out of bounds check for repeat flag","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"- [Issue #172](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/172): Fix extra flags in list today command","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"- [Issue #176](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/176): Fix \"list -t all command\" to properly exclude subsequent flags usage","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"- [Issue #199](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/199): Add \u0027exit\u0027 command in User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"- [Issue #164](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/164): Handle data corruption during imports from files","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"- [Issue #174](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/174): Specifying the correct list index to refer when using take command","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"- [Issue #177](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/177): Specifying the correct list index to refer when using untake command","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"- [Issue #183](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/183): Specifying the correct list index to refer when using delete command","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"- [Issue #198](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/198): Specifying the correct list index to refer when using take command","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"- [Issue #201](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/201): Stating the usage of -h in list command","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"- [Issue #200](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/200): Stating in UG that entering the command word alone with print the help message","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"- [Issue #147](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/147): Abidance to a stricter checkstyle","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"- Added some user stories into the table","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"- Added a sequence diagram for how a medication is added into dailyMedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"- Added command guide for  how list -t today -m/-a/-e will print","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"  - Explained how the time ranges affect the addition of each medication into their sub lists","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"- Added more user stories for v2.0 and v.21","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"- Added a Glossary section","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"- Summary of list for the Daily Medication","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"- Added breakdown of sub lists within the Daily Medication list","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"- Helped to construct clearer instructions in UG, especially issues found from PE-D","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"- Added a Glossary section","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"### PR Reviews","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"[PR #4](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/4),","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"[PR #5](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/5),","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"[PR #8](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/8),","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"[PR #10](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/10),","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"[PR #54](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/54),","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"[PR #56](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/56),","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"[PR #57](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/57),","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"[PR #68](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/68),","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"[PR #75](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/75),","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"[PR #78](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/78),","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"[PR #85](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/85),","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"[PR #88](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/88),","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"[PR #133](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/133),","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"[PR #135](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/135),","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"[PR #144](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/144),","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"[PR #207](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/207),","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"[PR #213](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/213),","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"[PR #223](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/223),","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"[PR #229](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/229),","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"[PR #242](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/242),","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"[PR #247](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/247),","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"[PR #248](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/248),","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"[PR #252](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/252),","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"[PR #253](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/253)","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"### Team-based tasks","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"- Book room for weekly project meetings","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"- Formats and fixes links in UserGuide, affected by HTML rendering for Markdown syntax\u0027s","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"T0nyLin":72}},{"path":"docs/team/wenenhoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"# Hoe Wen En - Project Portfolio Page","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"## Overview","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"* [Summary of Contributions](#summary-of-contributions)","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"* [Code related Contributions](#code-related-contributions)","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"* [Developer Guide Contributions](#developer-guide-contributions)","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"* [User Guide Contributions](#user-guide-contributions)","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"* [PR Reviews](#pr-reviews)","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"* [Team-based tasks](#team-based-tasks)","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"- Implemented argument parser to","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"  - Handle all `Command`\u0027s arguments ([#40](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/40))","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"  - Generate and print help messages for each `Command` ([#87](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/87))","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"  - (Planned but cancelled) guided prompt","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"- Implemented `take` and `untake` commands","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"  - Underlying data structure to manage taken status ([#20](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/20))","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"  - Commands themselves ([#54](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/54))","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"- Implemented `modify` command ([#40](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/40))","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"- Implemented `delete` command ([#44](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/44))","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"- Enhance Ui to have methods to print different types of messages ","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"  ([#111](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/111))","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"- Refactor data validation to unify all into Medication setters ","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"  ([#221](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/221))","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"- Refactor argument exceptions to simplify exceptions thrown ","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"  ([#229](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/229))","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"### Code related Contributions","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"- [#19](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/19):","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"  Mark taken status for `DailyMedication`","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"- [#36](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/36): ","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"  Added argument parser to handle all `Command`s\u0027 arguments + ","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"  Modify medication information through command             ","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"- [#37](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/37):","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"  Delete medication from `MedicationManager`","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"- [#60](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/60):","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"  Bug `modify` overwrite other fields erroneously","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"- [#65](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/65):","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"  Bug Modify medication name does not update `DailyMedication` name","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"- [#77](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/77):","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"  Add support for no value flag arguments","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"- [#86](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/86):","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"  Add help messages for the different commands","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"- [#91](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/91):","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"  Add time period arguments and quantity management logic","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"- [#103](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/103):","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"  Remove and replace unused arguments","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"- [#94](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/94):","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"  Program crashes when provided empty arguments","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"- [#102](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/102):","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"  Program crashes when provided invalid index","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"- [#118](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/118):","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"  Enhance Ui to have methods to print different types of messages","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"- [#119](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/119):","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"  Add tests and handle exceptions for index of bound, missing medication, ","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"  unknown arguments, arguments with no value specified","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"- [#120](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/120):","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"  Add missing logic to `modify` and `delete` command","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"- [#125](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/125):","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"  Remove unused guided prompt from argument classes","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"- [#128](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/128):","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"  Fix `modify` handle erroneous data and fix `add` error handling","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"- [#154](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/154):","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"  Fix `NumberFormatException` for `modify` command ","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"  (Related to issues [#155](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/155),","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"  [#179](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/179))","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"- [#194](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/194):","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"  Fix `NumberFormatException` for `delete` command ","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"  (Related to issues [#204](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/204))","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"- [#156](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/156):","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"  Fix `NumberFormatException` for `take` command ","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"  (Related to issues [#195](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/195))","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"- [#178](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/178):","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"  Fix `take` and `untake` commands show unchanged if quantity unchanged","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"- [#203](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/203):","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"  Fix `modify` not updating daily list when dosages are modified","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"- [#205](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/205):","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"  Fix large value not handled by `add` and `modify`","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"- [#224](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/224):","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"  Move all validation to Medication setters so all values are validated","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"- [#123](https://github.com/AY2324S2-CS2113T-T09-1/tp/issues/123):","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"  Refactor argument exceptions to simplify exceptions thrown","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"- Information related to how `ArgumentParser` works","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"- Included what is required to add on and further extend the argument package","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"if more `Argument`s are needed","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"- Added information on how help messages for `ArgumentList` is generated","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"- Added sequence diagrams for `ModifyCommand`","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"- Added class diagram for `meditracker.argument` package core classes","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"- Added description on command format","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"- Added information on how to use `modify`, `delete`, `take` and `untake`","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"### PR Reviews","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"[#3](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/3),","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"[#6](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/6),","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"[#7](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/7),","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"[#10](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/10),","lastModifiedDate":"2024-04-15"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"[#12](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/12),","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"[#17](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/17),","lastModifiedDate":"2024-04-15"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"[#22](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/22),","lastModifiedDate":"2024-04-15"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"[#28](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/28),","lastModifiedDate":"2024-04-15"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"[#33](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/33),","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"[#35](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/35),","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"[#47](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/47),","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"[#49](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/49),","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"[#58](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/58),","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"[#59](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/59),","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"[#73](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/73),","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"[#75](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/75),","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"[#80](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/80),","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"[#84](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/84),","lastModifiedDate":"2024-04-15"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"[#101](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/101),","lastModifiedDate":"2024-04-15"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"[#108](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/108),","lastModifiedDate":"2024-04-15"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"[#109](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/109),","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"[#112](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/112),","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"[#113](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/113),","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"[#117](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/117),","lastModifiedDate":"2024-04-15"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"[#122](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/122),","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"[#124](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/124),","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"[#132](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/132),","lastModifiedDate":"2024-04-15"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"[#136](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/136),","lastModifiedDate":"2024-04-15"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"[#141](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/141),","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"[#206](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/206),","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"[#208](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/208),","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"[#210](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/210),","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"[#216](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/216),","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"[#219](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/219),","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"[#220](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/220),","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"[#228](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/228),","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"[#230](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/230),","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"[#232](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/232),","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"[#234](https://github.com/AY2324S2-CS2113T-T09-1/tp/pull/234)","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"### Team-based tasks","lastModifiedDate":"2024-04-07"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"- Manage product development and resolve feature conflicts","lastModifiedDate":"2024-04-07"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"- Disabled squash and rebase merging for Pull Requests","lastModifiedDate":"2024-04-07"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"- Published v1.0 product in GitHub releases","lastModifiedDate":"2024-04-07"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"- Published v2.0 product and user guide in GitHub releases","lastModifiedDate":"2024-04-07"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"- Issue triaging of bug reports from Practical Exam Dry Run","lastModifiedDate":"2024-04-07"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"  (Grouping similar bug reports and assigning to relevant team members)","lastModifiedDate":"2024-04-07"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"- Added bottom navigation bar for quick access to Table of Contents ","lastModifiedDate":"2024-04-15"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"and Command Summary in User Guide","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"wenenhoe":145}},{"path":"src/main/java/meditracker/MediTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.command.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.CommandName;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.CommandParser;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.CommandNotFoundException;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.InvalidSimulatedTimeException;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":" * The main class for the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":" * It initializes the user interface and runs the application loop.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"public class MediTracker {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"     * Runs the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"     * This method displays a welcome message, reads user commands, and processes them until the user exits the","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"     * application.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    public static void run() {","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        //@@author nickczh-reused","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/nickczh/ip","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        //with minor modifications","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            Ui.showLine();","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            String fullCommand \u003d Ui.readCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            CommandParser commandParser;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                commandParser \u003d new CommandParser(fullCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            } catch (CommandNotFoundException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                // Just pressing enter into console, skip processing","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            CommandName commandName \u003d commandParser.getCommandName();","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            Command command;","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                command \u003d commandParser.getCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            } catch (CommandNotFoundException | ArgumentException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                Ui.showErrorMessage(e);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            } catch (HelpInvokedException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                Ui.showHelpMessage(commandName);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Starts the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * It creates a new MediTracker object and calls its run() method.","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param args Command-line arguments for the program.","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            MediTrackerTime.setUpSimulatedTime(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (InvalidSimulatedTimeException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        MediLogger.initialiseMediLogger();","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FileReaderWriter.loadMediTrackerData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        run();","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":13,"annoy-o-mus":7,"wenenhoe":5,"-":53}},{"path":"src/main/java/meditracker/argument/AfternoonArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument to represent afternoon.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class AfternoonArgument extends Argument {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"     * Constructs an AfternoonArgument with whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public AfternoonArgument(boolean isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.AFTERNOON,","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                \"-a\",","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"                \"Time of day: Afternoon\",","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":22}},{"path":"src/main/java/meditracker/argument/AllFieldsArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.argument;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":" * Argument for the illness treated by the medicine.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"public class AllFieldsArgument extends Argument {","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"    public AllFieldsArgument(boolean isOptional) {","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"        super(","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"                ArgumentName.ALL_FIELDS,","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"                \"-a\",","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"                \"Finds keyword from all fields of the library.\",","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"                isOptional,","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"                true","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"        );","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kyuichyi":16}},{"path":"src/main/java/meditracker/argument/Argument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument class to store the name of the argument,","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" * corresponding flag for it, the prompt that will be used","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" * to guide the user to input that argument, help message","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":" * if user require additional context, whether the argument","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":" * is optional or not, and whether the argument has a","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":" * corresponding value.","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"public abstract class Argument {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    private final ArgumentName name;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    private final String flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    private final String help;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    private final boolean isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    private final boolean hasValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"     * Constructs Argument object with the fields required to","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"     * handle this input type","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the argument","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     * @param flag Corresponding flag for the argument, takes the form of \"-*\"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     *             where \"*\" represents a single letter","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     * @param help Help message for additional context","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether this argument is optional or required","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * @param hasValue Whether this argument requires a value specified with it","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    public Argument(ArgumentName name,","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"                    String flag,","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"                    String help,","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"                    boolean isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"                    boolean hasValue) {","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        this.help \u003d help;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        this.isOptional \u003d isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        this.hasValue \u003d hasValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentName getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    public String getFlag() {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        return flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    public String getHelp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"        return help;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    public boolean isOptional() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        return isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    public boolean hasValue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        return hasValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":60}},{"path":"src/main/java/meditracker/argument/ArgumentHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.AddCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.CommandName;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.DeleteCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.ListCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.LoadCommand;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.ModifyCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.SaveCommand;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"import meditracker.command.SearchCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.TakeCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.UntakeCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.ViewCommand;","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":" * ArgumentHelper class to handle generating the help messages,","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":" * consisting of the general command usage and a breakdown of the","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":" * various command argument options.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentHelper {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     * Gets the help message for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * @param commandName Enum of the Command that is getting the help message","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     * @return The help message for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    public static String getHelpMessage(CommandName commandName) {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        switch (commandName) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        case ADD:","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            return AddCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        case MODIFY:","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            return ModifyCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        case LIST:","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            return ListCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"e0958902"},"content":"        case VIEW:","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"            return ViewCommand.HELP_MESSAGE;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        case DELETE:","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"            return DeleteCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        case TAKE:","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"            return TakeCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"        case UNTAKE:","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"            return UntakeCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"kyuichyi"},"content":"        case SEARCH:","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"            return SearchCommand.HELP_MESSAGE;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        case SAVE:","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"            return SaveCommand.HELP_MESSAGE;","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"        case LOAD:","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"            return LoadCommand.HELP_MESSAGE;","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        case EXIT: // fall through","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        case UNKNOWN: // fall through","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"            throw new IllegalStateException(\"No available help message for \" + commandName);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"     * Generates the help message for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"     * @param commandName Enum of the Command that is generating the help message","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList Corresponding list of Argument for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"     * @return The help message generated for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"    public static String getHelpMessage(CommandName commandName, ArgumentList argumentList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        String usage \u003d getUsage(commandName, argumentList);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"        String options \u003d getOptions(argumentList);","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        message.append(usage).append(System.lineSeparator()).append(options);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        return message.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"     * Generates the usage for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"     * @param commandName Enum of the Command that is generating the help message","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList Corresponding list of Argument for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"     * @return The usage for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"    private static String getUsage(CommandName commandName, ArgumentList argumentList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"        StringBuilder usageString \u003d new StringBuilder(\"Usage:\");","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        usageString.append(System.lineSeparator());","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"        String command \u003d commandName.name().toLowerCase();","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"        usageString.append(\"\\t\").append(command);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"        List\u003cArgument\u003e arguments \u003d argumentList.getArguments();","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument : arguments) {","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"            boolean isOptional \u003d argument.isOptional();","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"            String argumentFormat \u003d ArgumentHelper.getArgumentFormat(argument);","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"            if (isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"                argumentFormat \u003d String.format(\" [%s]\", argumentFormat);","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"                argumentFormat \u003d String.format(\" (%s)\", argumentFormat);","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"            usageString.append(argumentFormat);","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"        return usageString.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"     * Generates the command options for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList Corresponding list of Argument for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"     * @return The command options for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"    private static String getOptions(ArgumentList argumentList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"        StringBuilder optionsString \u003d new StringBuilder(\"Options:\");","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"        List\u003cArgument\u003e arguments \u003d argumentList.getArguments();","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"        int maxWidth \u003d arguments.stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"                .map(ArgumentHelper::getArgumentFormat)","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"                .map(String::length)","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"                .max(Integer::compareTo).get() + 5;","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument : arguments) {","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"            String argumentFormat \u003d ArgumentHelper.getArgumentFormat(argument);","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"            String helpMessage \u003d argument.getHelp();","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"            String formatSpecifier \u003d \"\\t%-\" + maxWidth + \"s%s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"            String argumentHelpMessage \u003d String.format(formatSpecifier, argumentFormat, helpMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"            optionsString.append(System.lineSeparator());","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"            optionsString.append(argumentHelpMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"        return optionsString.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"     * Formats the argument depending on whether it has value or not","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"     * @param argument Argument to format","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"     * @return The string in the format of flag (and name)","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"    private static String getArgumentFormat(Argument argument) {","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"        String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d argument.getName().value;","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"        boolean hasValue \u003d argument.hasValue();","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"        if (hasValue) {","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"            return String.format(\"%s %s\", flag, name);","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"            return String.format(\"%s\", flag);","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"e0958902":2,"annoy-o-mus":4,"kyuichyi":3,"wenenhoe":141}},{"path":"src/main/java/meditracker/argument/ArgumentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":" * ArgumentList class for managing a list of Argument","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":" * Calls on ArgumentParser when parse method is invoked","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":" * @see ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentList {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    private final List\u003cArgument\u003e arguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"     * Constructs ArgumentList to take in variable length of Argument","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     * Assertion test is used to check no flag collision for the","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     * arguments specified","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments Arguments to be included in the list","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentList(Argument... arguments) {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"        List\u003cArgument\u003e newArguments \u003d new ArrayList\u003c\u003e(List.of(arguments));","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        newArguments.add(new HelpArgument());","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        this.arguments \u003d newArguments;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        // assertion test: check for flag collisions","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        Set\u003cString\u003e flags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument: arguments) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"            assert !flags.contains(flag);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            flags.add(flag);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     * Parses user raw input arguments into ArgumentName and","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     * corresponding argument value","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInput Raw input to be parsed","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     * @return A map of argument name as key and the corresponding value","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException Argument flag specified not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     *              or when argument requires value but no value specified,","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     *              or when unknown argument flags found in user input,","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     *              or when duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     * @see ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    public Map\u003cArgumentName, String\u003e parse(String rawInput) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"        ArgumentParser argumentParser \u003d new ArgumentParser(this, rawInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"        boolean hasCalledForHelp \u003d argumentParser.parsedArguments.containsKey(ArgumentName.HELP);","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        if (hasCalledForHelp) {","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"            throw new HelpInvokedException();","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        argumentParser.checkForMissingRequiredArguments(); // throws ArgumentException","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        return argumentParser.parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"    public List\u003cArgument\u003e getArguments() {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        return arguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":69}},{"path":"src/main/java/meditracker/argument/ArgumentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * ArgumentName enum to standardise the enum values for use","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" * by Command classes and ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"public enum ArgumentName {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"    DOSAGE_MORNING(\"dosageMorning\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    DOSAGE_AFTERNOON(\"dosageAfternoon\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"    DOSAGE_EVENING(\"dosageEvening\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"    EXPIRATION_DATE(\"expirationDate\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"    REPEAT(\"repeat\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    DAY_ADDED(\"dayAdded\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    LIST_INDEX(\"listIndex\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    NAME(\"name\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    QUANTITY(\"quantity\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"    REMARKS(\"remarks\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    LIST_TYPE(\"listType\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    HELP(\"help\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    MORNING(\"morning\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    AFTERNOON(\"afternoon\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    EVENING(\"evening\"),","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"    ILLNESS(\"illness\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"    SIDE_EFFECTS(\"sideEffects\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    ALL_FIELDS(\"allFields\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    SAVE_FILE(\"saveFile\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"    LOAD_FILE(\"loadFile\");","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    public final String value;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    ArgumentName(String value) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"     * Performs a reverse search to get the enum value from the associated string.","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"     * @param valueToCompare The String value to compare to get the enum.","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The corresponding enum if it matches the value compared. Null otherwise.","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"     * @see meditracker.command.CommandName for a similar implementation (adapted from there)","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"    public static ArgumentName getEnumOfArgumentValue(String valueToCompare) {","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"        // Original implementation: https://www.baeldung.com/java-enum-values","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"        for (ArgumentName argName : values()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"            if (argName.value.equals(valueToCompare)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"                return argName;","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"        return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nickczh":4,"e0958902":1,"annoy-o-mus":22,"kyuichyi":2,"wenenhoe":22}},{"path":"src/main/java/meditracker/argument/ArgumentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import java.util.SortedMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":" * ArgumentParser class to handle parsing of user input","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":" * All arguments have to be specified with a flag.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"class ArgumentParser {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    protected final Map\u003cArgumentName, String\u003e parsedArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    private final ArgumentList argumentList;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     * Constructs ArgumentParser that parses raw input into corresponding key value pairs","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList List of argument","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInput Raw input to be parsed","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException Duplicate argument flag found,","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     *              or when argument requires value but no value specified,","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"     *              or when unknown argument flags found in user input,","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    ArgumentParser(ArgumentList argumentList, String rawInput) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        this.argumentList \u003d argumentList;","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        List\u003cString\u003e rawInputSplit \u003d List.of(rawInput.split(\" \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"        checkForUnknownArguments(rawInputSplit);","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        SortedMap\u003cInteger, Argument\u003e indexes \u003d getArgumentIndexes(rawInputSplit);","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"        if (indexes.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"            throw new HelpInvokedException();","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        getArgumentValues(indexes, rawInputSplit);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     * Checks for missing required arguments","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException Argument flag specified not found","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"    void checkForMissingRequiredArguments() throws ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument: argumentList.getArguments()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"            String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"            boolean isFoundInParsedArgs \u003d parsedArguments.containsKey(argument.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"            boolean isRequired \u003d !argument.isOptional();","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"            boolean isMissing \u003d isRequired \u0026\u0026 !isFoundInParsedArgs;","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"            if (isMissing) {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"                // arg keyword not found in additional input","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"                String errorContext \u003d String.format(\"Missing \\\"%s\\\" argument\", flag);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"                throw new ArgumentException(errorContext);","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // @@author wenenhoe-reused","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/wenenhoe/ip with minor modifications","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Checks if unknown argument flags are found in user input","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ArgumentException When unknown argument flags found in user input","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void checkForUnknownArguments(List\u003cString\u003e rawInputSplit) throws ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argumentFlags \u003d argumentList.getArguments().stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(Argument::getFlag)","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * regex pattern to find all flags with the form of `-*`","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         * where `*` represents any number of alphabetic characters","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String pattern \u003d \"^-.+$\";","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e unknownFlags \u003d rawInputSplit.stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .filter((input) -\u003e input.matches(pattern) \u0026\u0026 !argumentFlags.contains(input))","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!unknownFlags.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            String unknownFlagsString \u003d String.join(\" \", unknownFlags);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            String errorContext \u003d String.format(\"Unknown argument flags found: %s\", unknownFlagsString);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ArgumentException(errorContext);","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"     * Checks if argument is expecting a value and whether a value is specified","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"     * @param argument Argument to verify its value is expected or not","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"     * @param argValue User-provided input","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException When argument requires value but no value specified, or","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"     *              when unknown argument value found in user input","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"    private static void checkArgumentValue(Argument argument, String argValue)","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"        boolean hasValue \u003d argument.hasValue();","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"        boolean hasArgValue \u003d !argValue.isEmpty();","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"        if (hasValue \u0026\u0026 !hasArgValue) {","lastModifiedDate":"2024-04-10"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"            String errorContext \u003d String.format(\"No value found for argument \\\"%s\\\"\", argument.getFlag());","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"            throw new ArgumentException(errorContext);","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"        } else if (!hasValue \u0026\u0026 hasArgValue) {","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"            String errorContext \u003d String.format(\"Unexpected value found (\\\"%s\\\") for argument \\\"%s\\\"\",","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"                    argValue,","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"                    argument.getFlag());","lastModifiedDate":"2024-04-10"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"            throw new ArgumentException(errorContext);","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"        } // else (!hasValue \u0026\u0026 !hasArgValue) + (hasValue \u0026\u0026 hasArgValue)","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"     * Obtains argument value using start and end index of the raw input list","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"     * @param startIndex Start index in rawInputSplit of argument value","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"     * @param endIndex End index in rawInputSplit of argument value","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"     * @return Corresponding argument value, joined with spaces","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"    private static String getArgumentValue(List\u003cString\u003e rawInputSplit, int startIndex, int endIndex) {","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"        List\u003cString\u003e argContentList \u003d rawInputSplit.subList(startIndex, endIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"        return String.join(\" \", argContentList).strip();","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"     * Obtains the argument index from the raw input list","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"     * @param flag Argument flag to index","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"     * @return Index of the argument flag","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException Duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"    private static int getArgumentIndex(List\u003cString\u003e rawInputSplit, String flag)","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"        int firstFlagIndex \u003d rawInputSplit.indexOf(flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"        int lastFlagIndex \u003d rawInputSplit.lastIndexOf(flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"        if (firstFlagIndex !\u003d lastFlagIndex) {","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"            String errorContext \u003d String.format(\"Duplicate \\\"%s\\\" argument found\", flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"            throw new ArgumentException(errorContext);","lastModifiedDate":"2024-04-14"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"        return firstFlagIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    // @@author wenenhoe-reused","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/wenenhoe/ip with minor modifications","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Sorts a list of argument flags and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @return A sorted map of arguments and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @throws ArgumentException Duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private SortedMap\u003cInteger, Argument\u003e getArgumentIndexes(List\u003cString\u003e rawInputSplit)","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throws ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        SortedMap\u003cInteger, Argument\u003e indexes \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        for (Argument argument: argumentList.getArguments()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            int flagIndex \u003d ArgumentParser.getArgumentIndex(rawInputSplit, flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            boolean isNotFound \u003d flagIndex \u003d\u003d -1;","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            if (!isNotFound) {","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                indexes.put(flagIndex, argument);","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return indexes;","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    // @@author wenenhoe-reused","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    // Reused from https://github.com/wenenhoe/ip with modifications to support","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    // arguments without corresponding value","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Obtains a map of argument flags and their corresponding value, using a sorted ordering","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * of the argument flags indexes.","lastModifiedDate":"2024-03-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @param indexes A sorted map of arguments and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @throws ArgumentException When argument requires value but no value specified, or","lastModifiedDate":"2024-04-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *              when unknown argument value found in user input","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private void getArgumentValues(SortedMap\u003cInteger, Argument\u003e indexes, List\u003cString\u003e rawInputSplit)","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throws ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Argument argument \u003d indexes.get(indexes.firstKey());","lastModifiedDate":"2024-03-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ArgumentName argKey \u003d argument.getName();","lastModifiedDate":"2024-03-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        int startIndex \u003d indexes.firstKey() + 1; // position after argument flag","lastModifiedDate":"2024-03-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        int endIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        boolean isSkipFirst \u003d false;","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cInteger, Argument\u003e index: indexes.entrySet()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (!isSkipFirst) {","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                isSkipFirst \u003d true; // Skips first map entry","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            endIndex \u003d index.getKey();","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            String argValue \u003d ArgumentParser.getArgumentValue(rawInputSplit, startIndex, endIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            checkArgumentValue(argument, argValue);","lastModifiedDate":"2024-04-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            parsedArguments.put(argKey, argValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            argument \u003d index.getValue();","lastModifiedDate":"2024-03-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            argKey \u003d argument.getName();","lastModifiedDate":"2024-03-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            startIndex \u003d endIndex + 1; // position after argument flag","lastModifiedDate":"2024-03-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        endIndex \u003d rawInputSplit.size();","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        String argValue \u003d ArgumentParser.getArgumentValue(rawInputSplit, startIndex, endIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        checkArgumentValue(argument, argValue);","lastModifiedDate":"2024-04-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        parsedArguments.put(argKey, argValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":124,"-":95}},{"path":"src/main/java/meditracker/argument/DosageAfternoonArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the afternoon dosage of medication to be taken.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class DosageAfternoonArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a DosageAfternoonArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public DosageAfternoonArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"                ArgumentName.DOSAGE_AFTERNOON,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-dA\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"                \"Afternoon dosage of medication\",","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":20,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/DosageEveningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the evening dosage of medication to be taken.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class DosageEveningArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a DosageEveningArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public DosageEveningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"                ArgumentName.DOSAGE_EVENING,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-dE\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"                \"Evening dosage of medication\",","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":20,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/DosageMorningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the morning dosage of medication to be taken.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class DosageMorningArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a DosageMorningArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public DosageMorningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"                ArgumentName.DOSAGE_MORNING,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-dM\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"                \"Morning dosage of medication\",","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":20,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/EveningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument to represent evening.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class EveningArgument extends Argument {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"     * Constructs an EveningArgument with whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public EveningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.EVENING,","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                \"-e\",","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"                \"Time of day: Evening\",","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":22}},{"path":"src/main/java/meditracker/argument/ExpirationDateArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Expiration date of medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class ExpirationDateArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"     * Constructs an ExpirationDateArgument with whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public ExpirationDateArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.EXPIRATION_DATE,","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                \"-e\",","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"                \"Expiration date of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":22}},{"path":"src/main/java/meditracker/argument/HelpArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Help argument to print help message","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class HelpArgument extends Argument {","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    protected HelpArgument() {","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.HELP,","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-h\",","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Prints this help message\",","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                true,","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/argument/IllnessArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.argument;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":" * Argument for the illness treated by the medicine.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"public class IllnessArgument extends Argument {","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"    public IllnessArgument(boolean isOptional) {","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"        super(","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"                ArgumentName.ILLNESS,","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"                \"-i\",","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"                \"Illness treated by the medicine\",","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"                isOptional,","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"                true","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"        );","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kyuichyi":16}},{"path":"src/main/java/meditracker/argument/ListIndexArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * List index of Medication or DailyMedication.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class ListIndexArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"     * Constructs an ListIndexArgument with whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public ListIndexArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.LIST_INDEX,","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                \"-l\",","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"                \"Index of item in list\",","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":22}},{"path":"src/main/java/meditracker/argument/ListTypeArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Lists the summary of the medications in Medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"public class ListTypeArgument extends Argument {","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"     * Constructs an ListTypeArgument with whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"    public ListTypeArgument(boolean isOptional) {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"        super(","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"                ArgumentName.LIST_TYPE,","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"                \"-t\",","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"                \"Lists medications accordingly\",","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"        );","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"e0958902":13,"wenenhoe":9}},{"path":"src/main/java/meditracker/argument/LoadArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.argument;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":" * Contains the attributes of the load argument of the associated `load` command.","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"public class LoadArgument extends Argument {","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"     * Sets up the attributes of the load argument of the associated `load` command.","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    public LoadArgument() {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"        super(","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"                ArgumentName.LOAD_FILE,","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"                \"-in\",","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"                \"File path (including .json extension) to load from\",","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"                false,","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"                true","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"annoy-o-mus":19}},{"path":"src/main/java/meditracker/argument/MorningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument to represent morning.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class MorningArgument extends Argument {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"     * Constructs an MorningArgument with whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public MorningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.MORNING,","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                \"-m\",","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"                \"Time of day: Morning\",","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":22}},{"path":"src/main/java/meditracker/argument/NameArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument for name of medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class NameArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"     * Constructs an NameArgument with whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public NameArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.NAME,","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                \"-n\",","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"                \"Name of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":22}},{"path":"src/main/java/meditracker/argument/QuantityArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument for quantity of medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class QuantityArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"     * Constructs an QuantityArgument with whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public QuantityArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.QUANTITY,","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                \"-q\",","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"                \"Quantity of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":22}},{"path":"src/main/java/meditracker/argument/RemarksArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument for remarks of medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class RemarksArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"     * Constructs an RemarksArgument with whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether the argument is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public RemarksArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.REMARKS,","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                \"-r\",","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"                \"Additional remarks on medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":22}},{"path":"src/main/java/meditracker/argument/RepeatArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the repeat frequency of medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class RepeatArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a RepeatArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public RepeatArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"             ArgumentName.REPEAT,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-rep\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"                \"How often to take medication (eg: Supply a number from 1 to 7)\",","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":19,"T0nyLin":1,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/SaveArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.argument;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":" * Contains the attributes of the save argument of the associated `save` command.","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"public class SaveArgument extends Argument {","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"     * Sets up the attributes of the save argument of the associated `save` command.","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    public SaveArgument() {","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"        super(","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"                ArgumentName.SAVE_FILE,","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"                \"-o\",","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"                \"File path (including .json extension) to save to\",","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"                true,","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"                true","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"annoy-o-mus":19}},{"path":"src/main/java/meditracker/argument/SideEffectsArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.argument;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":" * Argument for the side effects of the medication.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"public class SideEffectsArgument extends Argument {","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"    public SideEffectsArgument(boolean isOptional) {","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"        super(","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"                ArgumentName.SIDE_EFFECTS,","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"                \"-s\",","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"                \"Side effects of the medication\",","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"                isOptional,","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"                true","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"        );","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kyuichyi":16}},{"path":"src/main/java/meditracker/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.DosageAfternoonArgument;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.DosageEveningArgument;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.DosageMorningArgument;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.ExpirationDateArgument;","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.NameArgument;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.QuantityArgument;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.RemarksArgument;","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.RepeatArgument;","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"// @@author nickczh","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":" * The AddCommand class represents a command to add a new medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"     * The argumentList contains all the arguments needed for adding a medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"            new NameArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"            new QuantityArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"            new ExpirationDateArgument(false),","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"            new DosageMorningArgument(false),","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"            new DosageAfternoonArgument(false),","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"            new DosageEveningArgument(false),","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"            new RepeatArgument(false),","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"            new RemarksArgument(true)","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"    );","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.ADD, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"     * Constructs an AddCommand object with the specified arguments.","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"     * @throws ArgumentException Argument flag specified not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"     *              or when argument requires value but no value specified,","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"     *              or when unknown argument flags found in user input,","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"     *              or when duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"    public AddCommand(String arguments) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"        if (!parsedArguments.containsKey(ArgumentName.REMARKS)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"            parsedArguments.put(ArgumentName.REMARKS, null);","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"nickczh"},"content":"     * Executes the add command.","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"     * This method creates a new Medication object and adds it to the MedicationManager.","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"nickczh"},"content":"     * It performs an assertion test which tests that the medication has been added and","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"nickczh"},"content":"     * displays a message confirming the addition of the medication.","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"nickczh"},"content":"    public void execute() {","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"nickczh"},"content":"        Medication medication;","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"nickczh"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"nickczh"},"content":"            medication \u003d createMedication();","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"nickczh"},"content":"            MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"nickczh"},"content":"        } catch (MediTrackerException e) {","lastModifiedDate":"2024-04-11"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"            Ui.showErrorMessage(e);","lastModifiedDate":"2024-04-11"},{"lineNumber":82,"author":{"gitId":"nickczh"},"content":"            return;","lastModifiedDate":"2024-04-11"},{"lineNumber":83,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":84,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"nickczh"},"content":"        DailyMedicationManager.checkForDaily(medication);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"nickczh"},"content":"        assertionTest();","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"nickczh"},"content":"        Ui.showSuccessMessage(\"Medicine has been added\");","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"nickczh"},"content":"     * Creates a new Medication object, initializing it with values derived from both","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"nickczh"},"content":"     * parsed command-line arguments and the current date.","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"nickczh"},"content":"     * This method iterates through each entry in the parsedArguments map, which contains","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"nickczh"},"content":"     * argument names paired with their corresponding values. Each argument is added to the","lastModifiedDate":"2024-04-15"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"     * Medication object. Additionally, the current day of the year is calculated and set","lastModifiedDate":"2024-04-15"},{"lineNumber":96,"author":{"gitId":"nickczh"},"content":"     * as DAY_ADDED in the Medication object.","lastModifiedDate":"2024-04-15"},{"lineNumber":97,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"nickczh"},"content":"     * @return A fully populated Medication object with values set from command-line arguments","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"nickczh"},"content":"     *         and the current day of the year.","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"nickczh"},"content":"    Medication createMedication() throws MediTrackerException {","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"nickczh"},"content":"        Medication medication \u003d new Medication();","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"nickczh"},"content":"        for (Map.Entry\u003cArgumentName, String\u003e keyValuePair : parsedArguments.entrySet()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"nickczh"},"content":"            ArgumentName argumentName \u003d keyValuePair.getKey();","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"nickczh"},"content":"            String argumentValue \u003d keyValuePair.getValue();","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"nickczh"},"content":"            medication.setMedicationValue(argumentName, argumentValue);","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"nickczh"},"content":"        LocalDate currentDate \u003d MediTrackerTime.getCurrentDate();","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"nickczh"},"content":"        int dayAdded \u003d currentDate.getDayOfYear();","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"nickczh"},"content":"        medication.setMedicationValue(ArgumentName.DAY_ADDED, String.valueOf(dayAdded));","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"nickczh"},"content":"        return medication;","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"nickczh"},"content":"     * Performs assertion tests for medication and daily medication managers.","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"nickczh"},"content":"    private void assertionTest() {","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"nickczh"},"content":"        assert MedicationManager.getTotalMedications() !\u003d 0 : \"Total medications in medication \"","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"nickczh"},"content":"                + \"manager should not be 0!\";","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"nickczh"},"content":"// @@author","lastModifiedDate":"2024-04-06"}],"authorContributionMap":{"nickczh":119,"annoy-o-mus":1,"T0nyLin":2,"wenenhoe":4}},{"path":"src/main/java/meditracker/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     * Executes the command","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    public abstract void execute();","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"     * Returns the boolean to exit the program.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"     * @return False which continues program.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"        return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * Gets the list index from a map of argument name and value and parses as integer","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"     * @param parsedArguments A map of argument name as key and the corresponding value","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"     * @return The integer parsed or 0 if unable to parse","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    public static int getListIndex(Map\u003cArgumentName, String\u003e parsedArguments) {","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            return Integer.parseInt(listIndexString);","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            // list index is 1-base indexing. 0 will result in index out of bounds.","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"            return 0;","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     * Gets the period of day based on what period flag was set","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     * @param parsedArguments A map of argument name as key and the corresponding value","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     * @return The period determined from the flag set","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"    public static Period getPeriod(Map\u003cArgumentName, String\u003e parsedArguments) {","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        boolean isMorning \u003d parsedArguments.get(ArgumentName.MORNING) !\u003d null;","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"        boolean isAfternoon \u003d parsedArguments.get(ArgumentName.AFTERNOON) !\u003d null;","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        boolean isEvening \u003d parsedArguments.get(ArgumentName.EVENING) !\u003d null;","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        Period period \u003d Period.getPeriod(isMorning, isAfternoon, isEvening);","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        if (period \u003d\u003d Period.NONE) {","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"            period \u003d Period.getPeriod(MediTrackerTime.getCurrentTime());","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        return period;","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":17,"wenenhoe":41}},{"path":"src/main/java/meditracker/command/CommandName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * The CommandName enum represents the names of commands supported by the application.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"public enum CommandName {","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"    UNKNOWN(\"unknown\", \"\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"    EXIT(\"exit\", \"Exits MediTracker.\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    HELP(\"help\", \"Lists all available commands and their description.\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"    ADD(\"add\", \"Adds a medication to the medication manager.\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"    VIEW(\"view\", \"Get information of a specific medication.\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"    MODIFY(\"modify\", \"Modify medication information.\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    LIST(\"list\", \"Summary of medications for the day.\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    DELETE(\"delete\", \"Delete medication information.\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    SEARCH(\"search\", \"Access medicine database.\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    TAKE(\"take\", \"Record taking of medication.\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"    UNTAKE(\"untake\", \"Record untaking of medication.\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    SAVE(\"save\", \"Saves the JSON file to the specified path.\"),","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"    LOAD(\"load\", \"Loads the JSON file from the specified path.\");","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    public final String value;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    public final String description;","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"     * Constructs a CommandName enum with the specified string value.","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"     * @param value The string value associated with the command name.","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"     * @param description The string description associated with the command.","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"    CommandName(String value, String description) {","lastModifiedDate":"2024-04-09"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"     * Returns the CommandName enum based on the provided string label.","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"     * @param label The string label representing a command name.","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"     * @return The CommandName enum corresponding to the label, or UNKNOWN if not found.","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // @@author Baeldung","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Reused from https://www.baeldung.com/java-enum-values","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static CommandName valueOfLabel(String label) {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (CommandName e : values()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            if (e.value.equals(label)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                return e;","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return CommandName.UNKNOWN;","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":40,"-":12}},{"path":"src/main/java/meditracker/command/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.CommandNotFoundException;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"// @@author nickczh","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":" * The Parser class parses user input commands into Command objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"public class CommandParser {","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"    private final CommandName commandName;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    private final String arguments;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"     * Parses a full command string into a CommandName enum and arguments.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"     * @param fullCommand The full command string entered by the user.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"     * @throws CommandNotFoundException Command specified not found","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    public CommandParser(String fullCommand) throws CommandNotFoundException {","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"        if (fullCommand.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"            throw new CommandNotFoundException();","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"        // Removes all trailing and leading whitespaces","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"        fullCommand \u003d fullCommand.strip();","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"        String[] commands \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"        arguments \u003d (commands.length \u003d\u003d 2) ? commands[1] : \"\";","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"        commandName \u003d CommandName.valueOfLabel(commands[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"     * Gets the Command object based on the CommandName enum type","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"     * @return A Command object corresponding to the parsed command.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"     * @throws ArgumentException Argument flag specified not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"     *              or when argument requires value but no value specified,","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"     *              or when unknown argument flags found in user input,","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"     *              or when duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"     * @throws CommandNotFoundException Command specified not found","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"    public Command getCommand()","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"            throws HelpInvokedException, ArgumentException, CommandNotFoundException {","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"        switch (commandName) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"        case EXIT:","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"        case HELP:","lastModifiedDate":"2024-04-09"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-04-09"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"        case ADD:","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"            return new AddCommand(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"        case MODIFY:","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"            return new ModifyCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"        case LIST:","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"            return new ListCommand(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"        case VIEW:","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"            return new ViewCommand(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"        case DELETE:","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"            return new DeleteCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"        case SEARCH:","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"            return new SearchCommand(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"        case TAKE:","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"            return new TakeCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"        case UNTAKE:","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"            return new UntakeCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"        case SAVE:","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"nickczh"},"content":"            return new SaveCommand(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"        case LOAD:","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"nickczh"},"content":"            return new LoadCommand(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"nickczh"},"content":"        case UNKNOWN:","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"            // fall through","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"nickczh"},"content":"        default:","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"nickczh"},"content":"            throw new CommandNotFoundException();","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"nickczh"},"content":"    public CommandName getCommandName() {","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"nickczh"},"content":"        return commandName;","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"nickczh"},"content":"// @@author","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"nickczh":80,"wenenhoe":3}},{"path":"src/main/java/meditracker/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":" * The DeleteCommand class represents a command to delete an existing medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false)","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.DELETE, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a DeleteCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException Argument flag specified not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"     *              or when argument requires value but no value specified,","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"     *              or when unknown argument flags found in user input,","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     *              or when duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    public DeleteCommand(String arguments) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     * Executes the delete command.","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     * This method deletes an existing Medication object using the provided information in the medication list.","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the deletion of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Command.getListIndex(parsedArguments);","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        Medication medication;","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"            medication \u003d MedicationManager.getMedication(listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"e0958902"},"content":"        MedicationManager.removeMedication(listIndex);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        if (DailyMedicationManager.doesBelongToDailyList(medication)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"            deleteDailyMedication(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        Ui.showSuccessMessage(\"Medicine has been deleted\");","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"     * Delete all instance of DailyMedication related to the Medication object","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"     * @param medication The Medication object that will result in the deletion of","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"     *                   DailyMedication objects","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"    private static void deleteDailyMedication(Medication medication) {","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d medication.getName();","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        for (Period period : Period.values()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"            if (!medication.hasDosage(period)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"                continue;","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"            try {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"                DailyMedicationManager.removeDailyMedication(name, period);","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"            } catch (MedicationNotFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"                Ui.showWarningMessage(\"Possible corruption of data. \"","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"                        + \"Unable to remove DailyMedication when using `delete`\");","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"e0958902":2,"wenenhoe":88}},{"path":"src/main/java/meditracker/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" * The ExitCommand class represents a command to exit the application.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     * Executes the exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"     * This method displays the exit message using the provided user interface.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"        Ui.showExitMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"     * @return true indicating that this is an exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"        return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":26,"e0958902":1}},{"path":"src/main/java/meditracker/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-09"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-09"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" * Represents a command to display help information for all available commands in MediTracker.","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":" *","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":" * This command lists all available commands along with a brief description of each.","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":" * It extends the Command class and overrides the execute method to perform the action.","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-04-09"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"     * Executes the help command to display a list of available commands and descriptions.","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"     * It prints a header message followed by each command\u0027s name and description.","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    public void execute() {","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"        System.out.println();","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"        Ui.showLine();","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Here are the commands you can use with MediTracker:\" + System.lineSeparator());","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"        getCommandNamesAndDescription();","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"        System.out.println();","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"For more details about each command, simply type in the command name.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"     * Retrieves and prints the names and descriptions of all available commands, except for the UNKNOWN command.","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"     * Iterates through the CommandName enum values, skipping the UNKNOWN command,","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"     * and prints each command\u0027s name and its description to the console.","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"    public void getCommandNamesAndDescription() {","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"        for (CommandName commandName : CommandName.values()) {","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"            if (commandName.equals(CommandName.UNKNOWN)) {","lastModifiedDate":"2024-04-09"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"                continue;","lastModifiedDate":"2024-04-09"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"            }","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"            String helpMessage \u003d String.format(\"\\t%-10s%s\", commandName.value, commandName.description);","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"            System.out.println(helpMessage);","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-04-09"}],"authorContributionMap":{"nickczh":41}},{"path":"src/main/java/meditracker/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.AfternoonArgument;","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-04-08"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.EveningArgument;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.ListTypeArgument;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.MorningArgument;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":" * The ListCommand class represents a command to list the medications.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"            new ListTypeArgument(false),","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"            new MorningArgument(true),","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"            new AfternoonArgument(true),","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"            new EveningArgument(true)","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    );","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.LIST, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a ListCommand object with the specified arguments.","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing information to be parsed.","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException Argument flag specified not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     *              or when argument requires value but no value specified,","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     *              or when unknown argument flags found in user input,","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     *              or when duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    public ListCommand(String arguments) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"e0958902"},"content":"     * Executes the list command and performs its specific task, -t.","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"     * Uses a switch to do list all and list today","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"e0958902"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"e0958902"},"content":"        String listTypeString \u003d parsedArguments.get(ArgumentName.LIST_TYPE);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"        boolean isMorning \u003d parsedArguments.get(ArgumentName.MORNING) !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"        boolean isAfternoon \u003d parsedArguments.get(ArgumentName.AFTERNOON) !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"        boolean isEvening \u003d parsedArguments.get(ArgumentName.EVENING) !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"        Period period \u003d Period.getPeriod(isMorning, isAfternoon, isEvening);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"        // checks if user added extra flags or words after \"list -t all\"","lastModifiedDate":"2024-04-08"},{"lineNumber":63,"author":{"gitId":"e0958902"},"content":"        switch (listTypeString) {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"e0958902"},"content":"        case \"all\":","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"            if (parsedArguments.size() \u003e 1) {","lastModifiedDate":"2024-04-09"},{"lineNumber":66,"author":{"gitId":"e0958902"},"content":"                Ui.showErrorMessage(String.format(\"List type -\u003e \\\"%s\\\" not compatible with \"","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"e0958902"},"content":"                         + \"\\\"list -t all\\\" command.\", period));","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"                return;","lastModifiedDate":"2024-04-09"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-04-09"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"            MedicationManager.printAllMedications();","lastModifiedDate":"2024-04-09"},{"lineNumber":71,"author":{"gitId":"e0958902"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"        case \"today\":","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"            switch (period) {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"            case MORNING: // fall through","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"            case AFTERNOON: // fall through","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"            case EVENING:","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"                DailyMedicationManager.printTodayMedications(period);","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"                break;","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"            case NONE:","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"                DailyMedicationManager.printTodayMedications();","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"            case UNKNOWN:","lastModifiedDate":"2024-04-08"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"                Ui.showErrorMessage(String.format(\"Unknown list type -\u003e \\\"%s\\\"\", period));","lastModifiedDate":"2024-04-08"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"                break;","lastModifiedDate":"2024-04-08"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"            default:","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"                Ui.showErrorMessage(String.format(\"Unknown list type -\u003e \\\"%s\\\"\", listTypeString));","lastModifiedDate":"2024-04-08"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"e0958902"},"content":"        default:","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(String.format(\"Unknown list type -\u003e \\\"%s\\\"\", listTypeString));","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"e0958902":33,"T0nyLin":41,"wenenhoe":19}},{"path":"src/main/java/meditracker/command/LoadCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.LoadArgument;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FilePathChecker;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":" * A class that handles the `load` command and its relevant arguments.","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    private static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(new LoadArgument());","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.LOAD, ARGUMENT_LIST);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    private Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     * Parses the arguments associated with the `load` command.","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments Associated arguments, if any.","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws HelpInvokedException When help argument is used.","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException If compulsory arguments are not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"     *     or if any argument with a compulsory value is not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"     *     or if there are duplicate arguments,","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"     *     or if an argument not supported by the command is found.","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"    public LoadCommand(String arguments) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"     * Confirms that the user wants to overwrite existing Meditracker data.","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if the user confirms to overwrite, false otherwise.","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"    private boolean confirmUserOverwrite() {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(\"Confirm overwrite existing MediTracker data with the file specified. (y/N)\");","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"        String input \u003d Ui.readCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"        return input.equalsIgnoreCase(\"y\");","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"     * Executes the `load` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"    public void execute() {","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"        assert (parsedArguments !\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"        String loadFileLocation \u003d parsedArguments.get(ArgumentName.LOAD_FILE);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"        Path pathOfJsonLoadFile \u003d FilePathChecker.getValidatedUserPathArgument(loadFileLocation);","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"        if (pathOfJsonLoadFile \u003d\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"        boolean fileExists \u003d Files.exists(pathOfJsonLoadFile);","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"        if (!fileExists) {","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"The provided file does not exist\");","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Full path of provided input: \" + pathOfJsonLoadFile.toAbsolutePath());","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"        if (!confirmUserOverwrite()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.loadMediTrackerData(pathOfJsonLoadFile);","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"annoy-o-mus":65,"wenenhoe":11}},{"path":"src/main/java/meditracker/command/ModifyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.DosageAfternoonArgument;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.DosageEveningArgument;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.DosageMorningArgument;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ExpirationDateArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.NameArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.QuantityArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.RemarksArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.RepeatArgument;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":" * The ModifyCommand class represents a command to modify an existing medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"public class ModifyCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false),","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            new NameArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"            new QuantityArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            new ExpirationDateArgument(true),","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"            new DosageMorningArgument(true),","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"            new DosageAfternoonArgument(true),","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"            new DosageEveningArgument(true),","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"            new RepeatArgument(true),","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"            new RemarksArgument(true)","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.MODIFY, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    private final List\u003cArgumentName\u003e processedArguments;","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a ModifyCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException Argument flag specified not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"     *              or when argument requires value but no value specified,","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"     *              or when unknown argument flags found in user input,","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"     *              or when duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"    public ModifyCommand(String arguments) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        processedArguments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"     * Executes the modify command.","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"     * This method modifies an existing Medication object using the provided information in the medication list.","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the modification of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"        Medication medication;","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Command.getListIndex(parsedArguments);","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"            medication \u003d MedicationManager.getMedication(listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments.remove(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"        if (parsedArguments.isEmpty()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"            Ui.showSuccessMessage(\"No changes specified. Medicine not modified.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"        Medication medicationCopy \u003d Medication.deepCopy(medication);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"            updateMedication(medication);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"        } catch (MediTrackerException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(e);","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"            Ui.showWarningMessage(\"Rolling back changes...\");","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"            try {","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"                rollbackChanges(medication, medicationCopy);","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"            } catch (MediTrackerException ex) {","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"                Ui.showErrorMessage(ex);","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"                return;","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"            Ui.showInfoMessage(\"Changes have been rolled back. Medicine not modified.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"        Ui.showSuccessMessage(\"Medicine has been modified\");","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"     * Rollbacks the changes made to Medication and DailyMedication","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication object in MedicationManager. To be written to.","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"     * @param medicationCopy Backup copy of original Medication object. To be read from.","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"     * @throws MediTrackerException Unable to revert Medication","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"    private void rollbackChanges(Medication medication, Medication medicationCopy) throws MediTrackerException {","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"        if (processedArguments.contains(ArgumentName.NAME)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"            String oldName \u003d medicationCopy.getName();","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"            DailyMedicationManager.updateDailyMedicationName(medication, oldName);","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"        medication.revertMedication(medicationCopy);","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"     * Updates Medication info","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication object to update","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"    private void updateMedication(Medication medication) throws MediTrackerException {","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"        for (Map.Entry\u003cArgumentName, String\u003e argument: parsedArguments.entrySet()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"            ArgumentName argumentName \u003d argument.getKey();","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"            String argumentValue \u003d argument.getValue();","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"            if (argumentName \u003d\u003d ArgumentName.NAME) {","lastModifiedDate":"2024-04-13"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"                DailyMedicationManager.updateDailyMedicationName(medication, argumentValue);","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"            medication.setMedicationValue(argumentName, argumentValue);","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"            processedArguments.add(argumentName);","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"        medication.checkValidity();","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"        checkDosageOrRepeatModified(medication);","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"     * Checks whether dosage and/or repeat was modified and also if all dosages are 0","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication object being checked","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"    private void checkDosageOrRepeatModified(Medication medication) {","lastModifiedDate":"2024-04-13"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"        boolean doesBelongToDailyList \u003d DailyMedicationManager.doesBelongToDailyList(medication);","lastModifiedDate":"2024-04-10"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"        if (!doesBelongToDailyList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"            // Warning message below does not apply for today as medication not part of today\u0027s list","lastModifiedDate":"2024-04-10"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":151,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":152,"author":{"gitId":"wenenhoe"},"content":"        boolean hasDosageMorning \u003d parsedArguments.containsKey(ArgumentName.DOSAGE_MORNING);","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"wenenhoe"},"content":"        boolean hasDosageAfternoon \u003d parsedArguments.containsKey(ArgumentName.DOSAGE_AFTERNOON);","lastModifiedDate":"2024-04-10"},{"lineNumber":154,"author":{"gitId":"wenenhoe"},"content":"        boolean hasDosageEvening \u003d parsedArguments.containsKey(ArgumentName.DOSAGE_EVENING);","lastModifiedDate":"2024-04-10"},{"lineNumber":155,"author":{"gitId":"wenenhoe"},"content":"        boolean hasRepeat \u003d parsedArguments.containsKey(ArgumentName.REPEAT);","lastModifiedDate":"2024-04-10"},{"lineNumber":156,"author":{"gitId":"wenenhoe"},"content":"        if (hasDosageMorning || hasDosageAfternoon || hasDosageEvening || hasRepeat) {","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"wenenhoe"},"content":"            String message \u003d","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"wenenhoe"},"content":"                    \"New dosage and/or repeat frequency will be applied tomorrow/next time you require \"","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"wenenhoe"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"wenenhoe"},"content":"                    + \"to take the medication (whichever occurs later). No changes will be made to today\u0027s list of \"","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"wenenhoe"},"content":"                    + System.lineSeparator()","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"wenenhoe"},"content":"                    + \"medication to take.\";","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"wenenhoe"},"content":"            Ui.showWarningMessage(message);","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":165,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":166,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"e0958902":1,"annoy-o-mus":1,"T0nyLin":1,"wenenhoe":163}},{"path":"src/main/java/meditracker/command/SaveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.SaveArgument;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FilePathChecker;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.MediTrackerFileConfig;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":" * A class that handles the `save` command and its relevant arguments.","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"    private static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(new SaveArgument());","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.SAVE, ARGUMENT_LIST);","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    private Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"     * Parses the arguments associated with the `save` command.","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"     * If empty, the parsed arguments will receive `null`.","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"     * @param arguments Associated arguments, if any.","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws HelpInvokedException If the help message is invoked.","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException If compulsory arguments are not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"     *     or if any argument with a compulsory value is not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"     *     or if there are duplicate arguments,","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"     *     or if an argument not supported by the command is found.","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"    public SaveCommand(String arguments) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"            parsedArguments \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"            parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"     * Saves MediTracker information to the default save location specified in `MediTrackerFileConfig`.","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"     * Includes the Medication data (in JSON) and DailyMedication data (in txt).","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"    private void saveToDefaultLocation() {","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        boolean isSaveSuccessful \u003d FileReaderWriter.saveMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"        if (!isSaveSuccessful) {","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"An error occurred while saving Medication data. Data is not saved.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"            Path defaultJsonPath \u003d MediTrackerFileConfig.getDefaultJsonSaveFilePath();","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"            Path absoluteJsonPath \u003d defaultJsonPath.toAbsolutePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Medication Data successfully saved to: \" + absoluteJsonPath);","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Use the -o flag to save the data to another location.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"        isSaveSuccessful \u003d FileReaderWriter.saveDailyMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"        if (!isSaveSuccessful) {","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"An error occurred while saving DailyMedication Data. Data is not saved.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"            Path dailyMedPath \u003d MediTrackerFileConfig.getDailymedFilePath(null);","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"            Path absoluteDailyMedPath \u003d dailyMedPath.toAbsolutePath();","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"DailyMedication Data successfully saved to: \" + absoluteDailyMedPath);","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"     * Saves MediTracker information to the specified location.","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"     * Includes the Medication data (in JSON) and DailyMedication data (in txt).","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"     * The DailyMedication data will be saved relative to the JSON file.","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"     * @param jsonSaveFilePath The location of the JSON file to save to.","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"    private void saveToSpecifiedLocation(Path jsonSaveFilePath) {","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"        boolean isSaveSuccessful \u003d FileReaderWriter.saveMedicationData(jsonSaveFilePath);","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"        if (!isSaveSuccessful) {","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"An error occurred while saving Medication Data. Data is not saved.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"            Path absoluteJsonPath \u003d jsonSaveFilePath.toAbsolutePath();","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Medication Data successfully saved to: \" + absoluteJsonPath);","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"        Path dailyMedPath \u003d MediTrackerFileConfig.getDailymedFilePath(jsonSaveFilePath);","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"        isSaveSuccessful \u003d FileReaderWriter.saveDailyMedicationData(dailyMedPath);","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"        if (!isSaveSuccessful) {","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"An error occurred while saving DailyMedication Data. Data is not saved.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"            Path absoluteDailyMedPath \u003d dailyMedPath.toAbsolutePath();","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"DailyMedication Data successfully saved to: \" + absoluteDailyMedPath);","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"     * Executes the `save` command.","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"    public void execute() {","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"        if (parsedArguments \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"            saveToDefaultLocation();","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"        assert (parsedArguments !\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"        String saveFileLocation \u003d parsedArguments.get(ArgumentName.SAVE_FILE);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"        Path pathOfJsonSaveFile \u003d FilePathChecker.getValidatedUserPathArgument(saveFileLocation);","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"        if (pathOfJsonSaveFile !\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"            saveToSpecifiedLocation(pathOfJsonSaveFile);","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"annoy-o-mus":105,"wenenhoe":6}},{"path":"src/main/java/meditracker/command/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.IllnessArgument;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.NameArgument;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.AllFieldsArgument;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"import meditracker.argument.SideEffectsArgument;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.LibraryManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.SearchResult;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"// @@author kyuichyi","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":" * Represents a command to search for medications from the local medication library based on a keyword.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"public class SearchCommand extends Command{","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":"    /*","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"kyuichyi"},"content":"     * The argumentList contains all the arguments needed for searching for medication from the medication library.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"kyuichyi"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kyuichyi"},"content":"            new NameArgument(true),","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kyuichyi"},"content":"            new IllnessArgument(true),","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kyuichyi"},"content":"            new SideEffectsArgument(true),","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kyuichyi"},"content":"            new AllFieldsArgument(true)","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"kyuichyi"},"content":"    );","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"kyuichyi"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.SEARCH, ARGUMENT_LIST);","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"kyuichyi"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"kyuichyi"},"content":"     * Constructs a new search command with the specified keyword.","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"kyuichyi"},"content":"     * @param arguments The keyword to search for in the medication library.","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"kyuichyi"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"kyuichyi"},"content":"     * @throws ArgumentException Argument flag specified not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"kyuichyi"},"content":"     *              or when argument requires value but no value specified,","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"kyuichyi"},"content":"     *              or when unknown argument flags found in user input,","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"kyuichyi"},"content":"     *              or when duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"kyuichyi"},"content":"    public SearchCommand(String arguments) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"kyuichyi"},"content":"     * Executes the search command based on the keyword.","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"kyuichyi"},"content":"     * @throws NullPointerException if the keyword is not found.","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"kyuichyi"},"content":"     * @throws IllegalArgumentException if the library is corrupted.","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"kyuichyi"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"kyuichyi"},"content":"    public void execute() throws NullPointerException, IllegalArgumentException {","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"kyuichyi"},"content":"        LibraryManager libraryManager \u003d new LibraryManager();","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"kyuichyi"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"kyuichyi"},"content":"            String keyword;","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"kyuichyi"},"content":"            if (parsedArguments.containsKey(ArgumentName.ALL_FIELDS)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"kyuichyi"},"content":"                keyword \u003d parsedArguments.get(ArgumentName.ALL_FIELDS).toLowerCase().trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"kyuichyi"},"content":"                libraryManager.searchLibrary(searchResults, keyword);","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"kyuichyi"},"content":"            } else if (parsedArguments.containsKey(ArgumentName.NAME)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"kyuichyi"},"content":"                keyword \u003d parsedArguments.get(ArgumentName.NAME).toLowerCase().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"kyuichyi"},"content":"                libraryManager.findMedication(searchResults, keyword);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"kyuichyi"},"content":"            } else if (parsedArguments.containsKey(ArgumentName.ILLNESS)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"kyuichyi"},"content":"                keyword \u003d parsedArguments.get(ArgumentName.ILLNESS).toLowerCase().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"kyuichyi"},"content":"                libraryManager.findIllness(searchResults, keyword);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"kyuichyi"},"content":"            } else if (parsedArguments.containsKey(ArgumentName.SIDE_EFFECTS)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"kyuichyi"},"content":"                keyword \u003d parsedArguments.get(ArgumentName.SIDE_EFFECTS).toLowerCase().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"kyuichyi"},"content":"                libraryManager.findSideEffects(searchResults, keyword);","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"kyuichyi"},"content":"            libraryManager.printSearchResults(searchResults);","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"kyuichyi"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"kyuichyi"},"content":"            Ui.showSearchKeywordNotFoundMessage();","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"kyuichyi"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"kyuichyi"},"content":"            Ui.showLibraryIsCorruptedMessage();","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"kyuichyi"},"content":"// @@author","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"kyuichyi":84,"wenenhoe":1}},{"path":"src/main/java/meditracker/command/TakeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.AfternoonArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.EveningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.MorningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InsufficientQuantityException;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationUnchangedException;","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":" * The TakeCommand class represents a command to take a daily medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"public class TakeCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false),","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"            new MorningArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"            new AfternoonArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"            new EveningArgument(true)","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.TAKE, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a TakeCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException Argument flag specified not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     *              or when argument requires value but no value specified,","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     *              or when unknown argument flags found in user input,","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     *              or when duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    public TakeCommand(String arguments) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     * Executes the take command.","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * This method marks an existing Medication object using the provided list index.","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the modification of the daily medication status.","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    public void execute() {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        Period period \u003d Command.getPeriod(parsedArguments);","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"        if (period \u003d\u003d Period.UNKNOWN) {","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Unable to determine time period. \"","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"                    + \"Please select only 1 of following flag: -m/-a/-e\");","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Command.getListIndex(parsedArguments);","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"            DailyMedicationManager.takeDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"        } catch (InsufficientQuantityException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(e);","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        } catch (MedicationNotFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"            Ui.showWarningMessage(\"Possible data corruption: Medication not found\");","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        } catch (MedicationUnchangedException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"            Ui.showSuccessMessage(\"Medication already taken, no changes were made\");","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"        Ui.showSuccessMessage(\"Medicine has been taken\");","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":82}},{"path":"src/main/java/meditracker/command/UntakeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.AfternoonArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.EveningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.MorningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationUnchangedException;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":" * The UntakeCommand class represents a command to untake a daily medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"public class UntakeCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false),","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"            new MorningArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"            new AfternoonArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"            new EveningArgument(true)","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.UNTAKE, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a UntakeCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException Argument flag specified not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     *              or when argument requires value but no value specified,","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     *              or when unknown argument flags found in user input,","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     *              or when duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    public UntakeCommand(String arguments) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * Executes the untake command.","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     * This method unmarks an existing Medication object using the provided list index.","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the modification of the daily medication status.","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    public void execute() {","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"        Period period \u003d Command.getPeriod(parsedArguments);","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        if (period \u003d\u003d Period.UNKNOWN) {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Unable to determine time period. \"","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"                    + \"Please select only 1 of following flag: -m/-a/-e\");","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Command.getListIndex(parsedArguments);","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"            DailyMedicationManager.untakeDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"            Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        } catch (MedicationNotFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"            Ui.showWarningMessage(\"Possible data corruption: Medication not found\");","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        } catch (MedicationUnchangedException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"            Ui.showSuccessMessage(\"Medication already untaken, no changes were made\");","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"        Ui.showSuccessMessage(\"Medicine has been untaken\");","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":78}},{"path":"src/main/java/meditracker/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ExpirationDateArgument;","lastModifiedDate":"2024-04-06"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.NameArgument;","lastModifiedDate":"2024-04-06"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.QuantityArgument;","lastModifiedDate":"2024-04-06"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.RemarksArgument;","lastModifiedDate":"2024-04-06"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-06"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-06"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":" * The ViewCommand class represents a command to print an existing medication.","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":" * It extends the Command class.","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"            new ListIndexArgument(true),","lastModifiedDate":"2024-04-06"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"            new NameArgument(true),","lastModifiedDate":"2024-04-06"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"            new QuantityArgument(true),","lastModifiedDate":"2024-04-06"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"            new ExpirationDateArgument(true),","lastModifiedDate":"2024-04-06"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"            new RemarksArgument(true)","lastModifiedDate":"2024-04-06"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"    );","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.VIEW, ARGUMENT_LIST);","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-06"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"     * Constructs a ViewCommand object with the specified arguments.","lastModifiedDate":"2024-04-08"},{"lineNumber":37,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-06"},{"lineNumber":38,"author":{"gitId":"e0958902"},"content":"     * @param arguments The arguments containing information to be parsed.","lastModifiedDate":"2024-04-06"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-04-06"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentException Argument flag specified not found,","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     *              or when argument requires value but no value specified,","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     *              or when unknown argument flags found in user input,","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     *              or when duplicate argument flag found","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-06"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    public ViewCommand(String arguments) throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"e0958902"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"e0958902"},"content":"     * Executes the view command.","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"e0958902"},"content":"     * This method parses the input index and get the medication in the medication list","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"e0958902"},"content":"     * it then prints the medication name with its fields from the medication list","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"e0958902"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"e0958902"},"content":"        try {","lastModifiedDate":"2024-04-06"},{"lineNumber":57,"author":{"gitId":"e0958902"},"content":"            if (parsedArguments.size() \u003e 1) {","lastModifiedDate":"2024-04-09"},{"lineNumber":58,"author":{"gitId":"e0958902"},"content":"                Ui.showErrorMessage(\"You can only have one flag!\");","lastModifiedDate":"2024-04-09"},{"lineNumber":59,"author":{"gitId":"e0958902"},"content":"            } else {","lastModifiedDate":"2024-04-09"},{"lineNumber":60,"author":{"gitId":"e0958902"},"content":"                executeFlag();","lastModifiedDate":"2024-04-06"},{"lineNumber":61,"author":{"gitId":"e0958902"},"content":"                Ui.showSuccessMessage(\"Medication details has been retrieved\");","lastModifiedDate":"2024-04-08"},{"lineNumber":62,"author":{"gitId":"e0958902"},"content":"            }","lastModifiedDate":"2024-04-09"},{"lineNumber":63,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":64,"author":{"gitId":"e0958902"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-06"},{"lineNumber":65,"author":{"gitId":"e0958902"},"content":"            String errorContext \u003d String.format(\"Invalid medication index specified. %s. \"","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"e0958902"},"content":"                     + \"Medicine can not be found\", e.getMessage());","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"e0958902"},"content":"            Ui.showErrorMessage(errorContext);","lastModifiedDate":"2024-04-06"},{"lineNumber":68,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":69,"author":{"gitId":"e0958902"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-04-06"},{"lineNumber":70,"author":{"gitId":"e0958902"},"content":"            String errorContext \u003d String.format(\"You have to input a number. %s. \"","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"e0958902"},"content":"                     + \"Medicine can not be found\", e.getMessage());","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"e0958902"},"content":"            Ui.showErrorMessage(errorContext);","lastModifiedDate":"2024-04-06"},{"lineNumber":73,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":74,"author":{"gitId":"e0958902"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-06"},{"lineNumber":75,"author":{"gitId":"e0958902"},"content":"            String errorContext \u003d String.format(\"Please enter a number. %s. \"","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"e0958902"},"content":"                     + \"Medicine can not be found\", e.getMessage());","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"e0958902"},"content":"            Ui.showErrorMessage(errorContext);","lastModifiedDate":"2024-04-06"},{"lineNumber":78,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":79,"author":{"gitId":"e0958902"},"content":"        } catch (MedicationNotFoundException e) {","lastModifiedDate":"2024-04-06"},{"lineNumber":80,"author":{"gitId":"e0958902"},"content":"            String errorContext \u003d String.format(\"Medicine can not be found. %s. \",","lastModifiedDate":"2024-04-08"},{"lineNumber":81,"author":{"gitId":"e0958902"},"content":"                    e.getMessage());","lastModifiedDate":"2024-04-08"},{"lineNumber":82,"author":{"gitId":"e0958902"},"content":"            Ui.showErrorMessage(errorContext);","lastModifiedDate":"2024-04-06"},{"lineNumber":83,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":84,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":85,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":86,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":87,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":88,"author":{"gitId":"e0958902"},"content":"     * Executes the first flag in the user input.","lastModifiedDate":"2024-04-08"},{"lineNumber":89,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-08"},{"lineNumber":90,"author":{"gitId":"e0958902"},"content":"     * @throws MedicationNotFoundException When no medication can be found","lastModifiedDate":"2024-04-08"},{"lineNumber":91,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":92,"author":{"gitId":"e0958902"},"content":"    private void executeFlag() throws MedicationNotFoundException {","lastModifiedDate":"2024-04-06"},{"lineNumber":93,"author":{"gitId":"e0958902"},"content":"        if (parsedArguments.containsKey(ArgumentName.LIST_INDEX)) {","lastModifiedDate":"2024-04-06"},{"lineNumber":94,"author":{"gitId":"e0958902"},"content":"            int listIndex \u003d Command.getListIndex(parsedArguments);","lastModifiedDate":"2024-04-09"},{"lineNumber":95,"author":{"gitId":"e0958902"},"content":"            MedicationManager.printSpecificMedication(listIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":97,"author":{"gitId":"e0958902"},"content":"        } else if (parsedArguments.containsKey(ArgumentName.NAME)) {","lastModifiedDate":"2024-04-06"},{"lineNumber":98,"author":{"gitId":"e0958902"},"content":"            String medicationNames \u003d parsedArguments.get(ArgumentName.NAME);","lastModifiedDate":"2024-04-06"},{"lineNumber":99,"author":{"gitId":"e0958902"},"content":"            MedicationManager.showMedicationsByName(medicationNames);","lastModifiedDate":"2024-04-06"},{"lineNumber":100,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":101,"author":{"gitId":"e0958902"},"content":"        } else if (parsedArguments.containsKey(ArgumentName.QUANTITY)) {","lastModifiedDate":"2024-04-06"},{"lineNumber":102,"author":{"gitId":"e0958902"},"content":"            Double medicationQuantity \u003d Double.parseDouble(parsedArguments.get(ArgumentName.QUANTITY));","lastModifiedDate":"2024-04-06"},{"lineNumber":103,"author":{"gitId":"e0958902"},"content":"            MedicationManager.showMedicationsByQuantity(medicationQuantity);","lastModifiedDate":"2024-04-08"},{"lineNumber":104,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":105,"author":{"gitId":"e0958902"},"content":"        } else if (parsedArguments.containsKey(ArgumentName.EXPIRATION_DATE)) {","lastModifiedDate":"2024-04-06"},{"lineNumber":106,"author":{"gitId":"e0958902"},"content":"            String medicationExpiryDate \u003d parsedArguments.get(ArgumentName.EXPIRATION_DATE);","lastModifiedDate":"2024-04-06"},{"lineNumber":107,"author":{"gitId":"e0958902"},"content":"            MedicationManager.showMedicationsByExpiry(medicationExpiryDate);","lastModifiedDate":"2024-04-08"},{"lineNumber":108,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":109,"author":{"gitId":"e0958902"},"content":"        } else if (parsedArguments.containsKey(ArgumentName.REMARKS)) {","lastModifiedDate":"2024-04-06"},{"lineNumber":110,"author":{"gitId":"e0958902"},"content":"            String medicationRemarks \u003d parsedArguments.get(ArgumentName.REMARKS);","lastModifiedDate":"2024-04-06"},{"lineNumber":111,"author":{"gitId":"e0958902"},"content":"            MedicationManager.showMedicationsByRemarks(medicationRemarks);","lastModifiedDate":"2024-04-06"},{"lineNumber":112,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":113,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":114,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"e0958902":108,"wenenhoe":6}},{"path":"src/main/java/meditracker/dailymedication/DailyMedication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package meditracker.dailymedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"// @@author T0nyLin","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":" * Stores name and the status of daily medication (taken or not)","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"public class DailyMedication {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"    private static final Logger MEDILOGGER \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    private Period period;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"    private String name;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    private boolean isTaken;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    private double dosage;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     * Constructs DailyMedication with medication name and status of daily medication (taken or not)","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     * @param name Name of the medication to be taken","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"     * @param dosage Dosage to be taken at a particular time of the day","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"     * @param period Period of the day to take medication","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    public DailyMedication(String name, double dosage, Period period) {","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"        this.isTaken \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"        this.period \u003d period;","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"    public String getName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        return name;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"    public boolean isTaken() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"        return isTaken;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"    public void take() {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"        isTaken \u003d true;","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"    public void untake() {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"        isTaken \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"    public Period getPeriod() {","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"        return period;","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"    public void setPeriod(Period period) {","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"        this.period \u003d period;","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"    public double getDosage() {","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"        return dosage;","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"    public void setDosage(double dosage) {","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"     * String format to print on the application when user runs list -t today","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"     * @return Formatted String in the way it should look like","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"        String takenIcon \u003d isTaken ? \"[X]\" : \"[ ]\"; // X identify medication as taken","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"        return String.format(\"%s %s | %.1f\", takenIcon, name, dosage);","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"     * String format to save the today\u0027s medication data into text file","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"     * @return Formatted String to save in text file","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"    public String toStringData() {","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"        return String.format(\"%s|%b|%s|%f\", period.badge, isTaken, name, dosage);","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"T0nyLin"},"content":"     * Parses String read from text file","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"T0nyLin"},"content":"     * @param data the String to split according to the specified splitter","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"T0nyLin"},"content":"     * @return Daily Medication to be saved into the DailyMedication lists","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"T0nyLin"},"content":"    public static DailyMedication fromStringData(String data) {","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"T0nyLin"},"content":"        String[] fields \u003d data.split(\"\\\\|\");","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"T0nyLin"},"content":"        Period period \u003d Period.getPeriod(fields[0].toUpperCase());","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"T0nyLin"},"content":"        double dosage;","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"T0nyLin"},"content":"        if (fields.length !\u003d 4) {","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"T0nyLin"},"content":"            MEDILOGGER.warning(\"Unable to import data from text file. \"","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"T0nyLin"},"content":"                    + \"Potentially due to corruption of data. --\u003e (Skipping over medication for \"","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"T0nyLin"},"content":"                    + fields[0] + \" period)\");","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"T0nyLin"},"content":"            return null;","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"T0nyLin"},"content":"        if (period \u003d\u003d Period.UNKNOWN) {","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"T0nyLin"},"content":"            MEDILOGGER.warning(\"Assigned medication period not recognised. \\\"\" + fields[2]","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"T0nyLin"},"content":"                    + \"\\\" not imported into today\u0027s list for \" + period + \" period.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"T0nyLin"},"content":"            return null;","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"T0nyLin"},"content":"            dosage \u003d Double.parseDouble(fields[3]);","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"T0nyLin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"T0nyLin"},"content":"            MEDILOGGER.warning(\"Medication dosage not recognised. \\\"\" + fields[3]","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"T0nyLin"},"content":"                    + \"\\\" not imported into today\u0027s list for \" + period + \" period.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"T0nyLin"},"content":"            return null;","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(fields[2].trim(), dosage, period);","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"T0nyLin"},"content":"        boolean isTaken \u003d Boolean.parseBoolean(fields[1].toLowerCase().trim());","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"T0nyLin"},"content":"        if (isTaken) {","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"T0nyLin"},"content":"            dailyMedication.take();","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"T0nyLin"},"content":"        } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"T0nyLin"},"content":"            dailyMedication.untake();","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"T0nyLin"},"content":"        return dailyMedication;","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"T0nyLin"},"content":"// @@author","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"T0nyLin":133,"wenenhoe":1}},{"path":"src/main/java/meditracker/dailymedication/DailyMedicationManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package meditracker.dailymedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InsufficientQuantityException;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationUnchangedException;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":" * Manages a list of DailyMedication and CRUD-operations (Create, Read, Update, Delete)","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":" *","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":" * @see DailyMedication","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"public class DailyMedicationManager {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    private static final List\u003cDailyMedication\u003e morningMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"    private static final List\u003cDailyMedication\u003e afternoonMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    private static final List\u003cDailyMedication\u003e eveningMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    private static final LocalDate currentDate \u003d MediTrackerTime.getCurrentDate();","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"     * Prevents defaulting to the public constructor","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"     * that allows instantiation of the DailyMedicationManager class","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"    private DailyMedicationManager() {","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"     * Creates DailyMedicationManager to save medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"     * so that program can output to textfile","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"     * @see DailyMedication","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"e0958902"},"content":"    public static void createDailyMedicationManager() {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"        clearDailyMedication(); // For when loading from save file","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"        for (Medication medication : MedicationManager.getMedications()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"            checkForDaily(medication);","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"     * Reads each lines from textfile to process and save into DailyMedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"     * @param lines lines of String read from each row in the textfile","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"    public static void importDailyMedicationManager(List\u003cString\u003e lines) {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"        clearDailyMedication(); // For when loading from save file","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"        for (String line : lines) {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"            parseImportedLine(line);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"     * Separates each row by the separator and add into the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"     * @param line each line read from the textfile","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"    private static void parseImportedLine(String line) {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedication \u003d DailyMedication.fromStringData(line);","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"        if (dailyMedication \u003d\u003d null) {","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"            return;","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"        addDailyMedication(dailyMedication);","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"     * Clears and resets DailyMedicationManager for testing purpose","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"    protected static void clearDailyMedication() {","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"        morningMedications.clear();","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"        afternoonMedications.clear();","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"        eveningMedications.clear();","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"     * Adds a DailyMedication to the list of DailyMedication","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"     * @param dailyMedication DailyMedication to be added to the list","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"    public static void addDailyMedication(DailyMedication dailyMedication) {","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"        Period period \u003d dailyMedication.getPeriod();","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"T0nyLin"},"content":"        switch (period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"T0nyLin"},"content":"        case MORNING:","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"T0nyLin"},"content":"            morningMedications.add(dailyMedication);","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"T0nyLin"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"T0nyLin"},"content":"            afternoonMedications.add(dailyMedication);","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"T0nyLin"},"content":"        case EVENING:","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"T0nyLin"},"content":"            eveningMedications.add(dailyMedication);","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"Cannot add to sublist\");","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"     * Removes the DailyMedication object in the corresponding Period list that","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"     * matches the specified name.","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the DailyMedications object to get","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException No DailyMedication matching specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"    public static void removeDailyMedication(String name, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"            throws MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d getDailyMedicationIndex(name, period);","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"        switch (period) {","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"        case MORNING:","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"            morningMedications.remove(listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"            afternoonMedications.remove(listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"        case EVENING:","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"            eveningMedications.remove(listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"        default:","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + period);","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"T0nyLin"},"content":"     * Gets the DailyMedication object from the morning/afternoon/evening lists","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"T0nyLin"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"T0nyLin"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"T0nyLin"},"content":"     * @return DailyMedication object at the corresponding index (0-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"T0nyLin"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"T0nyLin"},"content":"    public static DailyMedication getDailyMedication(int listIndex, Period period) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"T0nyLin"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"T0nyLin"},"content":"        switch (period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"T0nyLin"},"content":"        case MORNING:","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"T0nyLin"},"content":"            return morningMedications.get(listIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"T0nyLin"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"T0nyLin"},"content":"            return afternoonMedications.get(listIndex);","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"T0nyLin"},"content":"        case EVENING:","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"T0nyLin"},"content":"            return eveningMedications.get(listIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"T0nyLin"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + period);","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"wenenhoe"},"content":"     * Gets the DailyMedication object from the morning/afternoon/evening lists","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the DailyMedications object to get","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"wenenhoe"},"content":"     * @return DailyMedication object that matches the specified name","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException No DailyMedication matching specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"wenenhoe"},"content":"    public static DailyMedication getDailyMedication(String name, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"wenenhoe"},"content":"            throws IndexOutOfBoundsException, MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d getDailyMedicationIndex(name, period); // 0-based indexing","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"wenenhoe"},"content":"        listIndex++; // Convert to 1-based indexing","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"wenenhoe"},"content":"        return getDailyMedication(listIndex, period);","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"wenenhoe"},"content":"     * Gets the DailyMedication index in the morning/afternoon/evening lists","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the DailyMedications object to get","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"wenenhoe"},"content":"     * @return Index of the DailyMedication object that matches the specified name","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException No DailyMedication matching specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"wenenhoe"},"content":"    public static int getDailyMedicationIndex(String name, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"wenenhoe"},"content":"            throws MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"wenenhoe"},"content":"        List\u003cDailyMedication\u003e dailyMedications \u003d getDailyMedications(period);","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"wenenhoe"},"content":"        for (int i \u003d 0; i \u003c dailyMedications.size(); i++) {","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"wenenhoe"},"content":"            DailyMedication dailyMedication \u003d dailyMedications.get(i);","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"wenenhoe"},"content":"            if (dailyMedication.getName().equals(name)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"wenenhoe"},"content":"                return i;","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"wenenhoe"},"content":"        throw new MedicationNotFoundException();","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"wenenhoe"},"content":"     * Gets the relevant list of DailyMedication objects depending on the time period of day","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"wenenhoe"},"content":"     * @return The relevant list of DailyMedication objects","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"T0nyLin"},"content":"    public static List\u003cDailyMedication\u003e getDailyMedications(Period period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"T0nyLin"},"content":"        switch (period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"T0nyLin"},"content":"        case MORNING:","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"T0nyLin"},"content":"            return morningMedications;","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"T0nyLin"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"T0nyLin"},"content":"            return afternoonMedications;","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"T0nyLin"},"content":"        case EVENING:","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"T0nyLin"},"content":"            return eveningMedications;","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"T0nyLin"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + period);","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"T0nyLin"},"content":"     * Prints all medications to be taken today","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"T0nyLin"},"content":"    public static void printTodayMedications() {","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(\"Here are the Daily Medications you have to take today: \");","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"T0nyLin"},"content":"        printTodayMedications(Period.MORNING);","lastModifiedDate":"2024-04-14"},{"lineNumber":217,"author":{"gitId":"T0nyLin"},"content":"        printTodayMedications(Period.AFTERNOON);","lastModifiedDate":"2024-04-14"},{"lineNumber":218,"author":{"gitId":"T0nyLin"},"content":"        printTodayMedications(Period.EVENING);","lastModifiedDate":"2024-04-14"},{"lineNumber":219,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"T0nyLin"},"content":"     * Prints the sub lists according to the period of the day","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"T0nyLin"},"content":"     * @param period time of the day","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"T0nyLin"},"content":"    public static void printTodayMedications(Period period) {","lastModifiedDate":"2024-04-14"},{"lineNumber":227,"author":{"gitId":"T0nyLin"},"content":"        List\u003cDailyMedication\u003e subList \u003d getDailyMedications(period);","lastModifiedDate":"2024-04-14"},{"lineNumber":228,"author":{"gitId":"T0nyLin"},"content":"        assert subList !\u003d null;","lastModifiedDate":"2024-04-14"},{"lineNumber":229,"author":{"gitId":"T0nyLin"},"content":"        if (!subList.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(period + \":\");","lastModifiedDate":"2024-04-14"},{"lineNumber":231,"author":{"gitId":"T0nyLin"},"content":"            Ui.printMedsList(subList);","lastModifiedDate":"2024-04-14"},{"lineNumber":232,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":236,"author":{"gitId":"wenenhoe"},"content":"     * Updates Medication and all instances of DailyMedication name to new name","lastModifiedDate":"2024-04-13"},{"lineNumber":237,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":238,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication object being updated","lastModifiedDate":"2024-04-13"},{"lineNumber":239,"author":{"gitId":"wenenhoe"},"content":"     * @param newName New name to replace with","lastModifiedDate":"2024-04-13"},{"lineNumber":240,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":241,"author":{"gitId":"wenenhoe"},"content":"    public static void updateDailyMedicationName(Medication medication, String newName) {","lastModifiedDate":"2024-04-13"},{"lineNumber":242,"author":{"gitId":"wenenhoe"},"content":"        if (!DailyMedicationManager.doesBelongToDailyList(medication)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":243,"author":{"gitId":"wenenhoe"},"content":"            return;","lastModifiedDate":"2024-04-13"},{"lineNumber":244,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":245,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":246,"author":{"gitId":"wenenhoe"},"content":"        for (Period period : Period.values()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":247,"author":{"gitId":"wenenhoe"},"content":"            if (!medication.hasDosage(period)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":248,"author":{"gitId":"wenenhoe"},"content":"                continue;","lastModifiedDate":"2024-04-13"},{"lineNumber":249,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":250,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":251,"author":{"gitId":"wenenhoe"},"content":"            DailyMedication dailyMedication;","lastModifiedDate":"2024-04-13"},{"lineNumber":252,"author":{"gitId":"wenenhoe"},"content":"            try {","lastModifiedDate":"2024-04-13"},{"lineNumber":253,"author":{"gitId":"wenenhoe"},"content":"                String oldName \u003d medication.getName();","lastModifiedDate":"2024-04-13"},{"lineNumber":254,"author":{"gitId":"wenenhoe"},"content":"                dailyMedication \u003d DailyMedicationManager.getDailyMedication(oldName, period);","lastModifiedDate":"2024-04-13"},{"lineNumber":255,"author":{"gitId":"wenenhoe"},"content":"            } catch (MedicationNotFoundException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":256,"author":{"gitId":"wenenhoe"},"content":"                String message \u003d String.format(\"Possible data corruption: Medication missing from %s list\", period);","lastModifiedDate":"2024-04-13"},{"lineNumber":257,"author":{"gitId":"wenenhoe"},"content":"                Ui.showWarningMessage(message);","lastModifiedDate":"2024-04-13"},{"lineNumber":258,"author":{"gitId":"wenenhoe"},"content":"                continue;","lastModifiedDate":"2024-04-13"},{"lineNumber":259,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":260,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":261,"author":{"gitId":"wenenhoe"},"content":"            dailyMedication.setName(newName);","lastModifiedDate":"2024-04-13"},{"lineNumber":262,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":263,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveDailyMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":264,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":265,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":266,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":267,"author":{"gitId":"T0nyLin"},"content":"     * Fetches the corresponding DailyMedication and set the medication to taken","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":269,"author":{"gitId":"T0nyLin"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException If listIndex is outside of range of DailyMedication list","lastModifiedDate":"2024-04-02"},{"lineNumber":272,"author":{"gitId":"wenenhoe"},"content":"     * @throws InsufficientQuantityException Existing quantity insufficient for operation","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException Medication object not found, unable to decrease quantity","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationUnchangedException Medication object no state change, already taken","lastModifiedDate":"2024-04-07"},{"lineNumber":275,"author":{"gitId":"T0nyLin"},"content":"     * @see DailyMedication#take()","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":277,"author":{"gitId":"wenenhoe"},"content":"    public static void takeDailyMedication(int listIndex, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":278,"author":{"gitId":"wenenhoe"},"content":"            throws IndexOutOfBoundsException, InsufficientQuantityException, MedicationNotFoundException,","lastModifiedDate":"2024-04-07"},{"lineNumber":279,"author":{"gitId":"wenenhoe"},"content":"            MedicationUnchangedException {","lastModifiedDate":"2024-04-07"},{"lineNumber":280,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d DailyMedicationManager.getDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"wenenhoe"},"content":"        if (dailyMedication.isTaken()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":282,"author":{"gitId":"wenenhoe"},"content":"            // Already taken, do not need to run additional code","lastModifiedDate":"2024-04-07"},{"lineNumber":283,"author":{"gitId":"wenenhoe"},"content":"            throw new MedicationUnchangedException();","lastModifiedDate":"2024-04-07"},{"lineNumber":284,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":285,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":286,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.decreaseMedicationQuantity(dailyMedication.getName(), period);","lastModifiedDate":"2024-03-30"},{"lineNumber":287,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"wenenhoe"},"content":"        dailyMedication.take();","lastModifiedDate":"2024-04-02"},{"lineNumber":289,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveDailyMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":290,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":291,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":292,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":293,"author":{"gitId":"T0nyLin"},"content":"     * Fetches the corresponding DailyMedication and set the medication to not taken","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":295,"author":{"gitId":"T0nyLin"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException If listIndex is outside of range of DailyMedication list","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException Medication object not found, unable to increase quantity","lastModifiedDate":"2024-04-02"},{"lineNumber":299,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationUnchangedException Medication object no state change, already untaken","lastModifiedDate":"2024-04-07"},{"lineNumber":300,"author":{"gitId":"T0nyLin"},"content":"     * @see DailyMedication#untake()","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":302,"author":{"gitId":"wenenhoe"},"content":"    public static void untakeDailyMedication(int listIndex, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":303,"author":{"gitId":"wenenhoe"},"content":"            throws IndexOutOfBoundsException, MedicationNotFoundException, MedicationUnchangedException {","lastModifiedDate":"2024-04-07"},{"lineNumber":304,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d DailyMedicationManager.getDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"wenenhoe"},"content":"        if (!dailyMedication.isTaken()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":306,"author":{"gitId":"wenenhoe"},"content":"            // Already untaken, do not need to run additional code","lastModifiedDate":"2024-04-07"},{"lineNumber":307,"author":{"gitId":"wenenhoe"},"content":"            throw new MedicationUnchangedException();","lastModifiedDate":"2024-04-07"},{"lineNumber":308,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":309,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":310,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.increaseMedicationQuantity(dailyMedication.getName(), period);","lastModifiedDate":"2024-03-30"},{"lineNumber":311,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":312,"author":{"gitId":"wenenhoe"},"content":"        dailyMedication.untake();","lastModifiedDate":"2024-04-02"},{"lineNumber":313,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveDailyMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":314,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":315,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":316,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":317,"author":{"gitId":"T0nyLin"},"content":"     * Takes each DailyMedication object and adds to string of each object","lastModifiedDate":"2024-03-28"},{"lineNumber":318,"author":{"gitId":"T0nyLin"},"content":"     * to a list of String and return","lastModifiedDate":"2024-03-28"},{"lineNumber":319,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":320,"author":{"gitId":"T0nyLin"},"content":"     * @return A list of DailyMedication object to string","lastModifiedDate":"2024-03-28"},{"lineNumber":321,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":322,"author":{"gitId":"T0nyLin"},"content":"    public static List\u003cString\u003e getDailyMedicationStringData() {","lastModifiedDate":"2024-03-28"},{"lineNumber":323,"author":{"gitId":"T0nyLin"},"content":"        List\u003cString\u003e dailyMedicationStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":324,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication morningMedication : morningMedications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":325,"author":{"gitId":"T0nyLin"},"content":"            dailyMedicationStrings.add(morningMedication.toStringData());","lastModifiedDate":"2024-04-14"},{"lineNumber":326,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":327,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication afternoonMedication : afternoonMedications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":328,"author":{"gitId":"T0nyLin"},"content":"            dailyMedicationStrings.add(afternoonMedication.toStringData());","lastModifiedDate":"2024-04-14"},{"lineNumber":329,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":330,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication eveningMedication : eveningMedications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":331,"author":{"gitId":"T0nyLin"},"content":"            dailyMedicationStrings.add(eveningMedication.toStringData());","lastModifiedDate":"2024-04-14"},{"lineNumber":332,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":333,"author":{"gitId":"T0nyLin"},"content":"        return dailyMedicationStrings;","lastModifiedDate":"2024-03-28"},{"lineNumber":334,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":335,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":336,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":337,"author":{"gitId":"T0nyLin"},"content":"     * Checks if added medication is to be taken at morning/afternoon/evening","lastModifiedDate":"2024-03-28"},{"lineNumber":338,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":339,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":340,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":341,"author":{"gitId":"T0nyLin"},"content":"    public static void checkForDaily(Medication medication) {","lastModifiedDate":"2024-03-28"},{"lineNumber":342,"author":{"gitId":"wenenhoe"},"content":"        if (doesBelongToDailyList(medication)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":343,"author":{"gitId":"T0nyLin"},"content":"            addToSubLists(medication);","lastModifiedDate":"2024-03-28"},{"lineNumber":344,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":345,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":346,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":347,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":348,"author":{"gitId":"T0nyLin"},"content":"     * Returns boolean if medication can be added to today\u0027s daily list based on the repeat setting","lastModifiedDate":"2024-03-28"},{"lineNumber":349,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":350,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":351,"author":{"gitId":"T0nyLin"},"content":"     * @return true if medication can be added to today\u0027s list","lastModifiedDate":"2024-03-28"},{"lineNumber":352,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":353,"author":{"gitId":"wenenhoe"},"content":"    public static boolean doesBelongToDailyList(Medication medication) {","lastModifiedDate":"2024-04-03"},{"lineNumber":354,"author":{"gitId":"T0nyLin"},"content":"        int num \u003d medication.getRepeat();","lastModifiedDate":"2024-03-29"},{"lineNumber":355,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":356,"author":{"gitId":"T0nyLin"},"content":"        switch (num) {","lastModifiedDate":"2024-03-29"},{"lineNumber":357,"author":{"gitId":"T0nyLin"},"content":"        case 1:","lastModifiedDate":"2024-03-29"},{"lineNumber":358,"author":{"gitId":"T0nyLin"},"content":"            return true; //everyday","lastModifiedDate":"2024-03-28"},{"lineNumber":359,"author":{"gitId":"T0nyLin"},"content":"        case 2:","lastModifiedDate":"2024-03-29"},{"lineNumber":360,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 2); //every 2 days","lastModifiedDate":"2024-03-28"},{"lineNumber":361,"author":{"gitId":"T0nyLin"},"content":"        case 3:","lastModifiedDate":"2024-03-29"},{"lineNumber":362,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 3); //every 3 days","lastModifiedDate":"2024-03-28"},{"lineNumber":363,"author":{"gitId":"T0nyLin"},"content":"        case 4:","lastModifiedDate":"2024-03-29"},{"lineNumber":364,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 4); //every 4 days","lastModifiedDate":"2024-03-28"},{"lineNumber":365,"author":{"gitId":"T0nyLin"},"content":"        case 5:","lastModifiedDate":"2024-03-29"},{"lineNumber":366,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 5); //every 5 days","lastModifiedDate":"2024-03-29"},{"lineNumber":367,"author":{"gitId":"T0nyLin"},"content":"        case 6:","lastModifiedDate":"2024-03-29"},{"lineNumber":368,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 6); //every 6 days","lastModifiedDate":"2024-03-29"},{"lineNumber":369,"author":{"gitId":"T0nyLin"},"content":"        case 7:","lastModifiedDate":"2024-03-29"},{"lineNumber":370,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 7); //every 7 days","lastModifiedDate":"2024-03-28"},{"lineNumber":371,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-28"},{"lineNumber":372,"author":{"gitId":"T0nyLin"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":373,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":374,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":375,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":376,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":377,"author":{"gitId":"T0nyLin"},"content":"     * Determines the difference between today\u0027s date and the date medication was added","lastModifiedDate":"2024-03-28"},{"lineNumber":378,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":379,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":380,"author":{"gitId":"T0nyLin"},"content":"     * @param n repeat set by user","lastModifiedDate":"2024-03-28"},{"lineNumber":381,"author":{"gitId":"T0nyLin"},"content":"     * @return true if the modulus of the date difference is 0","lastModifiedDate":"2024-03-28"},{"lineNumber":382,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":383,"author":{"gitId":"T0nyLin"},"content":"    private static boolean isNDay(Medication medication, int n) {","lastModifiedDate":"2024-03-28"},{"lineNumber":384,"author":{"gitId":"T0nyLin"},"content":"        int dateNum \u003d medication.getDayAdded();","lastModifiedDate":"2024-03-28"},{"lineNumber":385,"author":{"gitId":"T0nyLin"},"content":"        int currentDayValue \u003d currentDate.getDayOfYear();","lastModifiedDate":"2024-03-28"},{"lineNumber":386,"author":{"gitId":"T0nyLin"},"content":"        int daysDiff \u003d currentDayValue - dateNum;","lastModifiedDate":"2024-03-28"},{"lineNumber":387,"author":{"gitId":"T0nyLin"},"content":"        return daysDiff % n \u003d\u003d 0; //modulo to find out if dailyMedication can be added to today\u0027s list","lastModifiedDate":"2024-03-28"},{"lineNumber":388,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":389,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":390,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":391,"author":{"gitId":"T0nyLin"},"content":"     * Adds dailyMedication into sub list morning/afternoon/evening","lastModifiedDate":"2024-03-28"},{"lineNumber":392,"author":{"gitId":"T0nyLin"},"content":"     * and writes into the text file","lastModifiedDate":"2024-03-28"},{"lineNumber":393,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":394,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":395,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":396,"author":{"gitId":"T0nyLin"},"content":"    private static void addToSubLists(Medication medication) {","lastModifiedDate":"2024-03-28"},{"lineNumber":397,"author":{"gitId":"wenenhoe"},"content":"        for (Period period : Period.values()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":398,"author":{"gitId":"wenenhoe"},"content":"            if (!medication.hasDosage(period)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":399,"author":{"gitId":"wenenhoe"},"content":"                continue;","lastModifiedDate":"2024-04-10"},{"lineNumber":400,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":401,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":402,"author":{"gitId":"T0nyLin"},"content":"            double dosage;","lastModifiedDate":"2024-04-14"},{"lineNumber":403,"author":{"gitId":"T0nyLin"},"content":"            switch (period) {","lastModifiedDate":"2024-04-14"},{"lineNumber":404,"author":{"gitId":"T0nyLin"},"content":"            case MORNING:","lastModifiedDate":"2024-04-14"},{"lineNumber":405,"author":{"gitId":"T0nyLin"},"content":"                dosage \u003d medication.getDosageMorning();","lastModifiedDate":"2024-04-14"},{"lineNumber":406,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-04-10"},{"lineNumber":407,"author":{"gitId":"T0nyLin"},"content":"            case AFTERNOON:","lastModifiedDate":"2024-04-14"},{"lineNumber":408,"author":{"gitId":"T0nyLin"},"content":"                dosage \u003d medication.getDosageAfternoon();","lastModifiedDate":"2024-04-14"},{"lineNumber":409,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-04-10"},{"lineNumber":410,"author":{"gitId":"T0nyLin"},"content":"            case EVENING:","lastModifiedDate":"2024-04-14"},{"lineNumber":411,"author":{"gitId":"T0nyLin"},"content":"                dosage \u003d medication.getDosageEvening();","lastModifiedDate":"2024-04-14"},{"lineNumber":412,"author":{"gitId":"T0nyLin"},"content":"                break;","lastModifiedDate":"2024-04-14"},{"lineNumber":413,"author":{"gitId":"T0nyLin"},"content":"            default:","lastModifiedDate":"2024-04-14"},{"lineNumber":414,"author":{"gitId":"T0nyLin"},"content":"                continue;","lastModifiedDate":"2024-04-14"},{"lineNumber":415,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":416,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":417,"author":{"gitId":"T0nyLin"},"content":"            DailyMedication dailyMedication \u003d new DailyMedication(medication.getName(), dosage, period);","lastModifiedDate":"2024-04-14"},{"lineNumber":418,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication);","lastModifiedDate":"2024-04-14"},{"lineNumber":419,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":420,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveDailyMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":421,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":422,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"e0958902":9,"annoy-o-mus":9,"T0nyLin":263,"wenenhoe":141}},{"path":"src/main/java/meditracker/exception/ArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Exception thrown when ArgumentParser encounters an argument-related error.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentException extends Exception {","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a InsufficientQuantityException with the error context.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * @param errorContext Error context.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentException(String errorContext) {","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        super(errorContext);","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"wenenhoe":16}},{"path":"src/main/java/meditracker/exception/CommandNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.command.HelpCommand;","lastModifiedDate":"2024-04-09"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"// @@author nickczh","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":" * Represents an exception that is thrown when an invalid command is entered in MediTracker.","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":" * This exception triggers the display of the help menu by executing the HelpCommand.","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":" * It extends the Exception class.","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"public class CommandNotFoundException extends Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    HelpCommand helpCommand;","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"     * Constructs a CommandNotFoundException and initializes the HelpCommand instance.","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    public CommandNotFoundException() {","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"        helpCommand \u003d new HelpCommand();","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"     * Overrides the getMessage method to execute the help command and return an error message.","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"     * When this exception is caught, it triggers the display of the help menu","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"     * by executing the HelpCommand before returning the error message.","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"     * @return The error message indicating an invalid MediTracker command.","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"        helpCommand.execute();","lastModifiedDate":"2024-04-09"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"        return \"Invalid MediTracker command.\";","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"// @@author","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"nickczh":34,"wenenhoe":2}},{"path":"src/main/java/meditracker/exception/FileReadWriteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":" * Exception related to the reading and writing to the file and directories.","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"public class FileReadWriteException extends Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"    public FileReadWriteException(String errorMessage) {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"        super(errorMessage);","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"annoy-o-mus":11}},{"path":"src/main/java/meditracker/exception/HelpInvokedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Exception thrown when help is invoked by user.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" * Breaks the normal code execution chain, allowing for","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" * help message to be printed.","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"public class HelpInvokedException extends Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"wenenhoe":9}},{"path":"src/main/java/meditracker/exception/InsufficientQuantityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Exception thrown when Medication object has insufficient quantity available to take medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class InsufficientQuantityException extends Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    private final Double dosage;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    private final Double quantity;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a InsufficientQuantityException with the specified dosage and total quantity.","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"     * @param dosage Dosage of medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"     * @param quantity Total quantity of medication.","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    public InsufficientQuantityException(double dosage, double quantity) {","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    public String getMessage() {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"        return String.format(","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"                \"Insufficient quantity. Dosage Required -\u003e %.1f, Quantity Available -\u003e %.1f\",","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"                quantity);","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"wenenhoe":28}},{"path":"src/main/java/meditracker/exception/InvalidSimulatedTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.exception;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":" * An exception class thrown when the input does not fulfil the format of the simulated time.","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"public class InvalidSimulatedTimeException extends Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"    private String specificErrorMessage;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"    public InvalidSimulatedTimeException(String specificErrorMessage) {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"        this.specificErrorMessage \u003d specificErrorMessage;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"    public String getMessage() {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"        String correctSyntaxMessage \u003d \"Please provide the simulated time in the following format: \"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"                + \"YYYY-MM-DDTHH:MM:SSZ\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"        String usageExampleMessage \u003d \"Examples: 2021-01-01T21:13:00Z, 2024-04-29T04:05:06Z\";","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"        return specificErrorMessage + System.lineSeparator() + correctSyntaxMessage","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"                + System.lineSeparator() + usageExampleMessage;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"annoy-o-mus":22}},{"path":"src/main/java/meditracker/exception/MediTrackerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * The MediTrackerException class represents an exception specific to the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * It extends the Exception class.","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class MediTrackerException extends Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a new MediTrackerException with the specified error context.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     * @param errorContext The error context describing the exception.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    public MediTrackerException(String errorContext) {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"        super(errorContext);","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":17}},{"path":"src/main/java/meditracker/exception/MedicationNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Exception thrown when Medication required not found.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class MedicationNotFoundException extends Exception {","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"wenenhoe":7}},{"path":"src/main/java/meditracker/exception/MedicationUnchangedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Exception thrown when Medication is unchanged.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class MedicationUnchangedException extends Exception {","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"wenenhoe":7}},{"path":"src/main/java/meditracker/library/LibraryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.library;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":" * Manages the searching of medications in the medication library.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"public class LibraryManager {","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"    private static final String FILE_PATH \u003d \"/medicationLibrary.txt\";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"    private static final List\u003cSearchResult\u003e medicationLibrary \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"    static {","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"        loadMedicationLibrary();","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":"    public LibraryManager() {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"kyuichyi"},"content":"     * Loads the medication library from a text file.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"kyuichyi"},"content":"    private static void loadMedicationLibrary() {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"kyuichyi"},"content":"        InputStream file \u003d LibraryManager.class.getResourceAsStream(FILE_PATH);","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"kyuichyi"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kyuichyi"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kyuichyi"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kyuichyi"},"content":"            String[] medicationDetails \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kyuichyi"},"content":"            medicationLibrary.add(new SearchResult(medicationDetails[0], medicationDetails[1], medicationDetails[2]));","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"kyuichyi"},"content":"     * Searches for medications in the library based on a keyword.","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults The list to store the search results.","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"kyuichyi"},"content":"     * @param keyword       The keyword to search for in the medication library.","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"kyuichyi"},"content":"    public void searchLibrary(List\u003cSearchResult\u003e searchResults, String keyword) {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"kyuichyi"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"kyuichyi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"kyuichyi"},"content":"        searchResults.clear();","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"        for (int i \u003d 0; i \u003c medicationLibrary.size(); i++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"kyuichyi"},"content":"            SearchResult medication \u003d medicationLibrary.get(i);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"kyuichyi"},"content":"            if (medication.getAllMedicationDetails().toLowerCase().contains(keyword)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"kyuichyi"},"content":"                searchResults.add(medication);","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"kyuichyi"},"content":"     * Searches medication names in the library based on a keyword.","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults The list of search results to store the search results.","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"kyuichyi"},"content":"     * @param keyword       The keyword to search for in the medication library.","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"kyuichyi"},"content":"    public void findMedication(List\u003cSearchResult\u003e searchResults, String keyword) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"kyuichyi"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kyuichyi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"kyuichyi"},"content":"        searchResults.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"kyuichyi"},"content":"        for (int i \u003d 0; i \u003c medicationLibrary.size(); i++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"kyuichyi"},"content":"            SearchResult medication \u003d medicationLibrary.get(i);","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"kyuichyi"},"content":"            if (medication.getName().toLowerCase().contains(keyword)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"kyuichyi"},"content":"                searchResults.add(medication);","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"kyuichyi"},"content":"     * Searches for medications based on the illness they treat.","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults The list of search results to store the search results.","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"kyuichyi"},"content":"     * @param keyword       The keyword to search for in the medication library.","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"kyuichyi"},"content":"    public void findIllness(List\u003cSearchResult\u003e searchResults, String keyword) {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"kyuichyi"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"kyuichyi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"kyuichyi"},"content":"        searchResults.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"kyuichyi"},"content":"        for (int i \u003d 0; i \u003c medicationLibrary.size(); i++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"kyuichyi"},"content":"            SearchResult medication \u003d medicationLibrary.get(i);","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"kyuichyi"},"content":"            if (medication.getIllness().toLowerCase().contains(keyword)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"kyuichyi"},"content":"                searchResults.add(medication);","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"kyuichyi"},"content":"     * Searches for medications based on their side effects.","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults The list of search results to store the search results.","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"kyuichyi"},"content":"     * @param keyword       The keyword to search for in the medication library.","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"kyuichyi"},"content":"    public void findSideEffects(List\u003cSearchResult\u003e searchResults, String keyword) {","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"kyuichyi"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"kyuichyi"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"kyuichyi"},"content":"        searchResults.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"kyuichyi"},"content":"        for (int i \u003d 0; i \u003c medicationLibrary.size(); i++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"kyuichyi"},"content":"            SearchResult medication \u003d medicationLibrary.get(i);","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"kyuichyi"},"content":"            if (medication.getSideEffects().toLowerCase().contains(keyword)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"kyuichyi"},"content":"                searchResults.add(medication);","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"kyuichyi"},"content":"     * Prints the search results to the user interface.","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults The list of search results to print.","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"kyuichyi"},"content":"    public void printSearchResults(List\u003cSearchResult\u003e searchResults) {","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"kyuichyi"},"content":"        if (searchResults.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"nickczh"},"content":"            Ui.showNoSearchResultsMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"kyuichyi"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"nickczh"},"content":"            Ui.showSearchResults(searchResults);","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"nickczh":2,"kyuichyi":124}},{"path":"src/main/java/meditracker/library/SearchResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.library;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":" * Represents a search result containing details about a medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"public class SearchResult {","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"    private final String name;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"    private final String illness;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"    private final String sideEffects;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"     * Constructs a SearchResult object with the specified medication details.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"     * @param name The name of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"     * @param illness The illness(es) the medication is used to treat.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"     * @param sideEffects The possible side effects of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"    public SearchResult(String name, String illness, String sideEffects) {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"        this.illness \u003d illness;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"        this.sideEffects \u003d sideEffects;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":"     * Returns a string containing all the details of the medication.","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kyuichyi"},"content":"     * @return A string in the format \"name | illness | sideEffects\".","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kyuichyi"},"content":"    public String getAllMedicationDetails() {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kyuichyi"},"content":"        return this.name + \"|\" + this.illness + \"|\" + this.sideEffects;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"kyuichyi"},"content":"     * Gets the name of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"kyuichyi"},"content":"     * @return The name of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"kyuichyi"},"content":"    public String getName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"kyuichyi"},"content":"        return this.name;","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"kyuichyi"},"content":"     * Gets the illness(es) the medication is used to treat.","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"kyuichyi"},"content":"     * @return The illness(es) the medication is used to treat.","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"    public String getIllness() {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"kyuichyi"},"content":"        return this.illness;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"kyuichyi"},"content":"     * Gets the possible side effects of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"kyuichyi"},"content":"     * @return The possible side effects of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"kyuichyi"},"content":"    public String getSideEffects() {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"kyuichyi"},"content":"        return this.sideEffects;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"kyuichyi"},"content":"     * Overrides the toString method for the SearchResult class.","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"kyuichyi"},"content":"     * @return A string representation of the SearchResult object,","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"kyuichyi"},"content":"     *         including the name of the medication, the illness it treats,","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kyuichyi"},"content":"     *         and its possible side effects.","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"kyuichyi"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"kyuichyi"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"kyuichyi"},"content":"        return getName() + \"; Treats: \" + getIllness() + \"; May cause: \" + getSideEffects();","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"kyuichyi":71}},{"path":"src/main/java/meditracker/logging/MediLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.logging;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Formatter;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":" * Main Logging class to get the logger for logging outputs to the console.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"public class MediLogger {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    private static final String MEDILOGGER_NAME \u003d \"MediLogger\";","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    private static Logger mediLogger \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"     * Gets the default logger for the MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The default logger for MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"    public static Logger getMediLogger() {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"        if (mediLogger \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"            initialiseMediLogger();","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"        assert mediLogger !\u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"        return mediLogger;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     * Initialises the default logger to be used for the MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * The logger will send all the logging messages to the console.","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     * Currently, no support to write to a dedicated log file.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"    public static void initialiseMediLogger() {","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"        if (mediLogger \u003d\u003d null) {","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"            mediLogger \u003d Logger.getLogger(MEDILOGGER_NAME);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"            configureMediLogger();","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"            mediLogger.info(\"MediLogger initialised\");","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        assert mediLogger !\u003d null;","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"     * Configures the default MediLogger to print in a certain way.","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"    private static void configureMediLogger() {","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        //@@author annoy-o-mus-reused","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/53211725","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mediLogger.setUseParentHandlers(false);","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ConsoleHandler handler \u003d new ConsoleHandler();","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Formatter formatter \u003d new MediLoggerFormatter();","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        handler.setFormatter(formatter);","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        mediLogger.addHandler(handler);","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        mediLogger.setLevel(Level.INFO);","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"annoy-o-mus":47,"-":13}},{"path":"src/main/java/meditracker/logging/MediLoggerFormatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.logging;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Formatter;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.LogRecord;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"//@@author annoy-o-mus-reused","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"//Reused from https://stackoverflow.com/a/53211725","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class to format the MediLogger.","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class MediLoggerFormatter extends Formatter {","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // ANSI escape codes","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ANSI_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ANSI_YELLOW \u003d \"\\u001B[33m\";","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String ANSI_GREY \u003d \"\\u001B[90m\";","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ANSI_CYAN \u003d \"\\u001B[36m\";","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Called for every console log message","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public String format(LogRecord record) {","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String loggingLevelName \u003d record.getLevel().getName();","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        switch (loggingLevelName) {","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        case \"WARNING\":","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            builder.append(ANSI_YELLOW);","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        case \"SEVERE\":","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            builder.append(ANSI_RED);","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        case \"INFO\":","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            builder.append(ANSI_GREY);","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            builder.append(ANSI_CYAN);","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        builder.append(\"[\");","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        builder.append(loggingLevelName);","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        builder.append(\"] \");","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        builder.append(record.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Object[] params \u003d record.getParameters();","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (params !\u003d null) {","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            builder.append(\"\\t\");","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c params.length; i++) {","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                builder.append(params[i]);","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                if (i \u003c params.length - 1) {","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    builder.append(\", \");","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        builder.append(ANSI_RESET);","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        builder.append(System.lineSeparator());","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"annoy-o-mus":6,"-":57}},{"path":"src/main/java/meditracker/medication/Medication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import java.util.Objects;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import org.json.JSONException;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import org.json.JSONObject;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"// @@author nickczh","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":" * The Medication class represents a medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":" * It stores information about the medication such as name, quantity, dosage, expiry date, intake frequency, remarks,","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":" * and whether it has been taken.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"public class Medication {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"    private String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"    private Double quantity;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"    private Double dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"    private Double dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"    private Double dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"    private LocalDate expiryDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"    private String remarks;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"    private int repeat;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"    private int dayAdded;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"     * Constructs a new Medication object with null values.","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"    public Medication() {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"     * Constructs a Medication object with the specified information.","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"     * @param name The name of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"     * @param quantity The quantity of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"     * @param dosageMorning The morning dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"     * @param dosageAfternoon The afternoon dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"     * @param dosageEvening The evening dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"     * @param expiryDate The expiry date of the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"     * @param remarks Any remarks or notes about the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"     * @param repeat The repeat frequency of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"    public Medication(String name, Double quantity,","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"                      Double dosageMorning, Double dosageAfternoon, Double dosageEvening,","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"                      LocalDate expiryDate, String remarks, int repeat, int dayAdded) {","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"        this.dosageMorning \u003d dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"        this.dosageAfternoon \u003d dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"        this.dosageEvening \u003d dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"        this.repeat \u003d repeat;","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"        this.dayAdded \u003d dayAdded;","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"    // @@author","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"     * Checks the validity of the Medication object","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"     * @throws MediTrackerException If Medication has uninitialised values or has no dosages","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"    public void checkValidity() throws MediTrackerException {","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"        boolean isUninitialised \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"                name \u003d\u003d null","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"                || quantity \u003d\u003d null","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"                || dosageMorning \u003d\u003d null","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"                || dosageAfternoon \u003d\u003d null","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"                || dosageEvening \u003d\u003d null","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"                || expiryDate \u003d\u003d null","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"                || remarks \u003d\u003d null","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"                || repeat \u003d\u003d 0","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"                || dayAdded \u003d\u003d 0;","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        if (isUninitialised) {","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"            throw new MediTrackerException(\"Medication has uninitialised values. Discarding Medication.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"        if (hasNoDosages()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"            throw new MediTrackerException(\"Medication has no dosages. \"","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"                    + \"Please ensure at least 1 period of day has dosage (-dM, -dA and/or -dE).\");","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"nickczh"},"content":"    // @@author nickczh","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"nickczh"},"content":"    public String getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"nickczh"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"nickczh"},"content":"     * Sets the name of medication without checks","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"nickczh"},"content":"     * @param name Name of the medication","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"nickczh"},"content":"    protected void setNameUnchecked(String name) {","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"nickczh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"nickczh"},"content":"     * Sets the name if it contains alphabetic characters and spaces only","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"nickczh"},"content":"     * @param name Name of the medication","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"nickczh"},"content":"     * @throws MediTrackerException If medication name contains non-alphabetic characters","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"nickczh"},"content":"    protected void setName(String name) throws MediTrackerException {","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"nickczh"},"content":"        // Check if the medication name contains only alphabetic characters","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"nickczh"},"content":"        boolean isAlphabetic \u003d name.matches(\"^[a-zA-Z ]+$\");","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"nickczh"},"content":"        // If the name contains non-alphabetic characters, throw an exception","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"nickczh"},"content":"        if (!isAlphabetic) {","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"nickczh"},"content":"            throw new MediTrackerException(\"Please enter a proper medication name.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"nickczh"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"nickczh"},"content":"    public Double getQuantity() {","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"nickczh"},"content":"        return quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"nickczh"},"content":"    protected void setQuantity(Double quantity) {","lastModifiedDate":"2024-04-13"},{"lineNumber":131,"author":{"gitId":"nickczh"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"nickczh"},"content":"    public Double getDosageMorning() {","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"nickczh"},"content":"        return dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"nickczh"},"content":"    protected void setDosageMorning(Double dosageMorning) {","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"nickczh"},"content":"        this.dosageMorning \u003d dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"nickczh"},"content":"    public Double getDosageAfternoon() {","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"nickczh"},"content":"        return dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"nickczh"},"content":"    protected void setDosageAfternoon(Double dosageAfternoon) {","lastModifiedDate":"2024-04-13"},{"lineNumber":147,"author":{"gitId":"nickczh"},"content":"        this.dosageAfternoon \u003d dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"nickczh"},"content":"    public Double getDosageEvening() {","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"nickczh"},"content":"        return dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"nickczh"},"content":"    protected void setDosageEvening(Double dosageEvening) {","lastModifiedDate":"2024-04-13"},{"lineNumber":155,"author":{"gitId":"nickczh"},"content":"        this.dosageEvening \u003d dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"nickczh"},"content":"    // @@author","lastModifiedDate":"2024-04-13"},{"lineNumber":159,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":160,"author":{"gitId":"e0958902"},"content":"    public LocalDate getExpiryDate() {","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"wenenhoe"},"content":"        return expiryDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"e0958902"},"content":"    public void setExpiryDate(LocalDate expiryDate) {","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"wenenhoe"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"nickczh"},"content":"    // @@author nickczh","lastModifiedDate":"2024-04-13"},{"lineNumber":169,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":170,"author":{"gitId":"nickczh"},"content":"    public String getRemarks() {","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"nickczh"},"content":"        return remarks;","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":175,"author":{"gitId":"nickczh"},"content":"     * Checks and sets the remarks. Defaults to Nil if remarks is null.","lastModifiedDate":"2024-04-13"},{"lineNumber":176,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":177,"author":{"gitId":"nickczh"},"content":"     * @param remarks Remarks value to checked and set","lastModifiedDate":"2024-04-13"},{"lineNumber":178,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":179,"author":{"gitId":"nickczh"},"content":"    protected void setRemarks(String remarks) {","lastModifiedDate":"2024-04-13"},{"lineNumber":180,"author":{"gitId":"nickczh"},"content":"        this.remarks \u003d Objects.requireNonNullElse(remarks, \"Nil\");","lastModifiedDate":"2024-04-13"},{"lineNumber":181,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"nickczh"},"content":"    // @@author","lastModifiedDate":"2024-04-13"},{"lineNumber":184,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":185,"author":{"gitId":"T0nyLin"},"content":"    // @@author T0nyLin","lastModifiedDate":"2024-04-13"},{"lineNumber":186,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":187,"author":{"gitId":"T0nyLin"},"content":"    public int getRepeat() {","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"T0nyLin"},"content":"        return repeat;","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":192,"author":{"gitId":"T0nyLin"},"content":"     * Sets the repeat value of Medication object without checks","lastModifiedDate":"2024-04-13"},{"lineNumber":193,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":194,"author":{"gitId":"T0nyLin"},"content":"     * @param repeat  Repeat value to be set","lastModifiedDate":"2024-04-13"},{"lineNumber":195,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":196,"author":{"gitId":"T0nyLin"},"content":"    protected void setRepeatUnchecked(int repeat) {","lastModifiedDate":"2024-04-13"},{"lineNumber":197,"author":{"gitId":"T0nyLin"},"content":"        this.repeat \u003d repeat;","lastModifiedDate":"2024-04-13"},{"lineNumber":198,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":199,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":200,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":201,"author":{"gitId":"T0nyLin"},"content":"     * Checks if repeat is within range of 1 to 7","lastModifiedDate":"2024-04-13"},{"lineNumber":202,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":203,"author":{"gitId":"T0nyLin"},"content":"     * @param repeatStr Repeat value to be parsed, checked and set","lastModifiedDate":"2024-04-13"},{"lineNumber":204,"author":{"gitId":"T0nyLin"},"content":"     * @throws MediTrackerException When the value is not within the specified range","lastModifiedDate":"2024-04-13"},{"lineNumber":205,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":206,"author":{"gitId":"T0nyLin"},"content":"    protected void setRepeat(String repeatStr) throws MediTrackerException {","lastModifiedDate":"2024-04-13"},{"lineNumber":207,"author":{"gitId":"T0nyLin"},"content":"        int repeat \u003d convertStringToInteger(repeatStr);","lastModifiedDate":"2024-04-13"},{"lineNumber":208,"author":{"gitId":"T0nyLin"},"content":"        if (repeat \u003c 1 || repeat \u003e 7) {","lastModifiedDate":"2024-04-13"},{"lineNumber":209,"author":{"gitId":"T0nyLin"},"content":"            throw new MediTrackerException(\"Provide a \\\"-rep\\\" number from 1 to 7\");","lastModifiedDate":"2024-04-13"},{"lineNumber":210,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":211,"author":{"gitId":"T0nyLin"},"content":"        this.repeat \u003d repeat;","lastModifiedDate":"2024-03-25"},{"lineNumber":212,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"T0nyLin"},"content":"    public int getDayAdded() {","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"T0nyLin"},"content":"        return dayAdded;","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"T0nyLin"},"content":"    protected void setDayAdded(int dayAdded) {","lastModifiedDate":"2024-04-13"},{"lineNumber":219,"author":{"gitId":"T0nyLin"},"content":"        this.dayAdded \u003d dayAdded;","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"T0nyLin"},"content":"    // @@author","lastModifiedDate":"2024-04-13"},{"lineNumber":223,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":224,"author":{"gitId":"annoy-o-mus"},"content":"    // @@author annoy-o-mus","lastModifiedDate":"2024-04-13"},{"lineNumber":225,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":226,"author":{"gitId":"annoy-o-mus"},"content":"     * Calls the setter method with the parsed data based on the argumentName specified.","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":228,"author":{"gitId":"annoy-o-mus"},"content":"     * @param argumentName ArgumentName that identifies what type of data it is.","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"annoy-o-mus"},"content":"     * @param argumentValue Value of the data to be (converted and) set.","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws MediTrackerException If it fails the checks and/or parsing.","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":232,"author":{"gitId":"annoy-o-mus"},"content":"    public void setMedicationValue(ArgumentName argumentName, String argumentValue) throws MediTrackerException {","lastModifiedDate":"2024-04-13"},{"lineNumber":233,"author":{"gitId":"annoy-o-mus"},"content":"        switch (argumentName) {","lastModifiedDate":"2024-04-13"},{"lineNumber":234,"author":{"gitId":"annoy-o-mus"},"content":"        case NAME:","lastModifiedDate":"2024-04-13"},{"lineNumber":235,"author":{"gitId":"annoy-o-mus"},"content":"            setName(argumentValue);","lastModifiedDate":"2024-04-13"},{"lineNumber":236,"author":{"gitId":"annoy-o-mus"},"content":"            break;","lastModifiedDate":"2024-04-13"},{"lineNumber":237,"author":{"gitId":"annoy-o-mus"},"content":"        case QUANTITY:","lastModifiedDate":"2024-04-13"},{"lineNumber":238,"author":{"gitId":"annoy-o-mus"},"content":"            double quantity \u003d convertStringToDouble(argumentValue);","lastModifiedDate":"2024-04-13"},{"lineNumber":239,"author":{"gitId":"annoy-o-mus"},"content":"            setQuantity(quantity);","lastModifiedDate":"2024-04-13"},{"lineNumber":240,"author":{"gitId":"annoy-o-mus"},"content":"            break;","lastModifiedDate":"2024-04-13"},{"lineNumber":241,"author":{"gitId":"annoy-o-mus"},"content":"        case DOSAGE_MORNING:","lastModifiedDate":"2024-04-13"},{"lineNumber":242,"author":{"gitId":"annoy-o-mus"},"content":"            double dosageMorning \u003d convertStringToDouble(argumentValue);","lastModifiedDate":"2024-04-13"},{"lineNumber":243,"author":{"gitId":"annoy-o-mus"},"content":"            setDosageMorning(dosageMorning);","lastModifiedDate":"2024-04-13"},{"lineNumber":244,"author":{"gitId":"annoy-o-mus"},"content":"            break;","lastModifiedDate":"2024-04-13"},{"lineNumber":245,"author":{"gitId":"annoy-o-mus"},"content":"        case DOSAGE_AFTERNOON:","lastModifiedDate":"2024-04-13"},{"lineNumber":246,"author":{"gitId":"annoy-o-mus"},"content":"            double dosageAfternoon \u003d convertStringToDouble(argumentValue);","lastModifiedDate":"2024-04-13"},{"lineNumber":247,"author":{"gitId":"annoy-o-mus"},"content":"            setDosageAfternoon(dosageAfternoon);","lastModifiedDate":"2024-04-13"},{"lineNumber":248,"author":{"gitId":"annoy-o-mus"},"content":"            break;","lastModifiedDate":"2024-04-13"},{"lineNumber":249,"author":{"gitId":"annoy-o-mus"},"content":"        case DOSAGE_EVENING:","lastModifiedDate":"2024-04-13"},{"lineNumber":250,"author":{"gitId":"annoy-o-mus"},"content":"            double dosageEvening \u003d convertStringToDouble(argumentValue);","lastModifiedDate":"2024-04-13"},{"lineNumber":251,"author":{"gitId":"annoy-o-mus"},"content":"            setDosageEvening(dosageEvening);","lastModifiedDate":"2024-04-13"},{"lineNumber":252,"author":{"gitId":"annoy-o-mus"},"content":"            break;","lastModifiedDate":"2024-04-13"},{"lineNumber":253,"author":{"gitId":"annoy-o-mus"},"content":"        case EXPIRATION_DATE:","lastModifiedDate":"2024-04-13"},{"lineNumber":254,"author":{"gitId":"annoy-o-mus"},"content":"            LocalDate expiryDate \u003d convertStringToLocalDate(argumentValue);","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"annoy-o-mus"},"content":"            setExpiryDate(expiryDate);","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"annoy-o-mus"},"content":"            break;","lastModifiedDate":"2024-04-13"},{"lineNumber":257,"author":{"gitId":"annoy-o-mus"},"content":"        case REMARKS:","lastModifiedDate":"2024-04-13"},{"lineNumber":258,"author":{"gitId":"annoy-o-mus"},"content":"            setRemarks(argumentValue);","lastModifiedDate":"2024-04-13"},{"lineNumber":259,"author":{"gitId":"annoy-o-mus"},"content":"            break;","lastModifiedDate":"2024-04-13"},{"lineNumber":260,"author":{"gitId":"annoy-o-mus"},"content":"        case REPEAT:","lastModifiedDate":"2024-04-13"},{"lineNumber":261,"author":{"gitId":"annoy-o-mus"},"content":"            setRepeat(argumentValue);","lastModifiedDate":"2024-04-13"},{"lineNumber":262,"author":{"gitId":"annoy-o-mus"},"content":"            break;","lastModifiedDate":"2024-04-13"},{"lineNumber":263,"author":{"gitId":"annoy-o-mus"},"content":"        case DAY_ADDED:","lastModifiedDate":"2024-04-13"},{"lineNumber":264,"author":{"gitId":"annoy-o-mus"},"content":"            int dayAdded \u003d convertStringToInteger(argumentValue);","lastModifiedDate":"2024-04-13"},{"lineNumber":265,"author":{"gitId":"annoy-o-mus"},"content":"            setDayAdded(dayAdded);","lastModifiedDate":"2024-04-13"},{"lineNumber":266,"author":{"gitId":"annoy-o-mus"},"content":"            break;","lastModifiedDate":"2024-04-13"},{"lineNumber":267,"author":{"gitId":"annoy-o-mus"},"content":"        default:","lastModifiedDate":"2024-04-13"},{"lineNumber":268,"author":{"gitId":"annoy-o-mus"},"content":"            throw new MediTrackerException(\"Unexpected argument name: \" + argumentName);","lastModifiedDate":"2024-04-15"},{"lineNumber":269,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":270,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":271,"author":{"gitId":"annoy-o-mus"},"content":"    // @@author","lastModifiedDate":"2024-04-13"},{"lineNumber":272,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":273,"author":{"gitId":"e0958902"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":274,"author":{"gitId":"e0958902"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":275,"author":{"gitId":"e0958902"},"content":"        return getName() + \" | \" + getQuantity() + \" | \" + getExpiryDate() + \" | \" + getRemarks();","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":277,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":278,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-09"},{"lineNumber":279,"author":{"gitId":"wenenhoe"},"content":"     * Checks if Medication has dosage at given Period","lastModifiedDate":"2024-04-09"},{"lineNumber":280,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-09"},{"lineNumber":281,"author":{"gitId":"wenenhoe"},"content":"     * @param period Period to check for dosage","lastModifiedDate":"2024-04-09"},{"lineNumber":282,"author":{"gitId":"wenenhoe"},"content":"     * @return True if medication has dosage at Period, else false","lastModifiedDate":"2024-04-09"},{"lineNumber":283,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-09"},{"lineNumber":284,"author":{"gitId":"wenenhoe"},"content":"    public boolean hasDosage(Period period) {","lastModifiedDate":"2024-04-09"},{"lineNumber":285,"author":{"gitId":"wenenhoe"},"content":"        switch (period) {","lastModifiedDate":"2024-04-09"},{"lineNumber":286,"author":{"gitId":"wenenhoe"},"content":"        case MORNING:","lastModifiedDate":"2024-04-09"},{"lineNumber":287,"author":{"gitId":"wenenhoe"},"content":"            return getDosageMorning() \u003e 0.0;","lastModifiedDate":"2024-04-10"},{"lineNumber":288,"author":{"gitId":"wenenhoe"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-04-09"},{"lineNumber":289,"author":{"gitId":"wenenhoe"},"content":"            return getDosageAfternoon() \u003e 0.0;","lastModifiedDate":"2024-04-10"},{"lineNumber":290,"author":{"gitId":"wenenhoe"},"content":"        case EVENING:","lastModifiedDate":"2024-04-09"},{"lineNumber":291,"author":{"gitId":"wenenhoe"},"content":"            return getDosageEvening() \u003e 0.0;","lastModifiedDate":"2024-04-10"},{"lineNumber":292,"author":{"gitId":"wenenhoe"},"content":"        default:","lastModifiedDate":"2024-04-09"},{"lineNumber":293,"author":{"gitId":"wenenhoe"},"content":"            return false;","lastModifiedDate":"2024-04-09"},{"lineNumber":294,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":295,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":296,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":297,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":298,"author":{"gitId":"wenenhoe"},"content":"     * Checks if medication has any dosages","lastModifiedDate":"2024-04-10"},{"lineNumber":299,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":300,"author":{"gitId":"wenenhoe"},"content":"     * @return True if medication has no dosages for morning, afternoon and evening, else false","lastModifiedDate":"2024-04-10"},{"lineNumber":301,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":302,"author":{"gitId":"wenenhoe"},"content":"    public boolean hasNoDosages() {","lastModifiedDate":"2024-04-10"},{"lineNumber":303,"author":{"gitId":"wenenhoe"},"content":"        boolean hasNoDosageMorning \u003d !hasDosage(Period.MORNING);","lastModifiedDate":"2024-04-10"},{"lineNumber":304,"author":{"gitId":"wenenhoe"},"content":"        boolean hasNoDosageAfternoon \u003d !hasDosage(Period.AFTERNOON);","lastModifiedDate":"2024-04-10"},{"lineNumber":305,"author":{"gitId":"wenenhoe"},"content":"        boolean hasNoDosageEvening \u003d !hasDosage(Period.EVENING);","lastModifiedDate":"2024-04-10"},{"lineNumber":306,"author":{"gitId":"wenenhoe"},"content":"        return hasNoDosageMorning \u0026\u0026 hasNoDosageAfternoon \u0026\u0026 hasNoDosageEvening;","lastModifiedDate":"2024-04-10"},{"lineNumber":307,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":308,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":309,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":310,"author":{"gitId":"wenenhoe"},"content":"     * Replaces Medication info with the specified Medication object info","lastModifiedDate":"2024-04-03"},{"lineNumber":311,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":312,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication object values to replace with","lastModifiedDate":"2024-04-03"},{"lineNumber":313,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":314,"author":{"gitId":"wenenhoe"},"content":"    public void revertMedication(Medication medication) throws MediTrackerException {","lastModifiedDate":"2024-04-13"},{"lineNumber":315,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":316,"author":{"gitId":"wenenhoe"},"content":"            setName(medication.getName());","lastModifiedDate":"2024-04-03"},{"lineNumber":317,"author":{"gitId":"wenenhoe"},"content":"            setRepeat(String.valueOf(medication.getRepeat()));","lastModifiedDate":"2024-04-13"},{"lineNumber":318,"author":{"gitId":"wenenhoe"},"content":"        } catch (MediTrackerException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":319,"author":{"gitId":"wenenhoe"},"content":"            // critical error as this should not happen","lastModifiedDate":"2024-04-13"},{"lineNumber":320,"author":{"gitId":"wenenhoe"},"content":"            throw new MediTrackerException(\"Critical issue occurred, unable to revert Medication.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":321,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":322,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":323,"author":{"gitId":"wenenhoe"},"content":"        setQuantity(medication.getQuantity());","lastModifiedDate":"2024-04-03"},{"lineNumber":324,"author":{"gitId":"wenenhoe"},"content":"        setDosageMorning(medication.getDosageMorning());","lastModifiedDate":"2024-04-03"},{"lineNumber":325,"author":{"gitId":"wenenhoe"},"content":"        setDosageAfternoon(medication.getDosageAfternoon());","lastModifiedDate":"2024-04-03"},{"lineNumber":326,"author":{"gitId":"wenenhoe"},"content":"        setDosageEvening(medication.getDosageEvening());","lastModifiedDate":"2024-04-03"},{"lineNumber":327,"author":{"gitId":"wenenhoe"},"content":"        setExpiryDate(medication.getExpiryDate());","lastModifiedDate":"2024-04-03"},{"lineNumber":328,"author":{"gitId":"wenenhoe"},"content":"        setRemarks(medication.getRemarks());","lastModifiedDate":"2024-04-03"},{"lineNumber":329,"author":{"gitId":"wenenhoe"},"content":"        setDayAdded(medication.getDayAdded());","lastModifiedDate":"2024-04-03"},{"lineNumber":330,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":331,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":332,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":333,"author":{"gitId":"wenenhoe"},"content":"     * Makes a deep copy of the specified Medication object","lastModifiedDate":"2024-04-03"},{"lineNumber":334,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":335,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication object to deep copy","lastModifiedDate":"2024-04-03"},{"lineNumber":336,"author":{"gitId":"wenenhoe"},"content":"     * @return A deep copy of the specified Medication object","lastModifiedDate":"2024-04-03"},{"lineNumber":337,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":338,"author":{"gitId":"wenenhoe"},"content":"    public static Medication deepCopy(Medication medication) {","lastModifiedDate":"2024-04-03"},{"lineNumber":339,"author":{"gitId":"wenenhoe"},"content":"        Medication newMedication \u003d new Medication();","lastModifiedDate":"2024-04-03"},{"lineNumber":340,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":341,"author":{"gitId":"wenenhoe"},"content":"        newMedication.setNameUnchecked(medication.getName());","lastModifiedDate":"2024-04-13"},{"lineNumber":342,"author":{"gitId":"wenenhoe"},"content":"        newMedication.setQuantity(medication.getQuantity());","lastModifiedDate":"2024-04-03"},{"lineNumber":343,"author":{"gitId":"wenenhoe"},"content":"        newMedication.setDosageMorning(medication.getDosageMorning());","lastModifiedDate":"2024-04-03"},{"lineNumber":344,"author":{"gitId":"wenenhoe"},"content":"        newMedication.setDosageAfternoon(medication.getDosageAfternoon());","lastModifiedDate":"2024-04-03"},{"lineNumber":345,"author":{"gitId":"wenenhoe"},"content":"        newMedication.setDosageEvening(medication.getDosageEvening());","lastModifiedDate":"2024-04-03"},{"lineNumber":346,"author":{"gitId":"wenenhoe"},"content":"        newMedication.setExpiryDate(medication.getExpiryDate());","lastModifiedDate":"2024-04-03"},{"lineNumber":347,"author":{"gitId":"wenenhoe"},"content":"        newMedication.setRemarks(medication.getRemarks());","lastModifiedDate":"2024-04-03"},{"lineNumber":348,"author":{"gitId":"wenenhoe"},"content":"        newMedication.setRepeatUnchecked(medication.getRepeat());","lastModifiedDate":"2024-04-13"},{"lineNumber":349,"author":{"gitId":"wenenhoe"},"content":"        newMedication.setDayAdded(medication.getDayAdded());","lastModifiedDate":"2024-04-03"},{"lineNumber":350,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":351,"author":{"gitId":"wenenhoe"},"content":"        return newMedication;","lastModifiedDate":"2024-04-03"},{"lineNumber":352,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":353,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":354,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":355,"author":{"gitId":"nickczh"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-04-10"},{"lineNumber":356,"author":{"gitId":"nickczh"},"content":"        // self check","lastModifiedDate":"2024-04-10"},{"lineNumber":357,"author":{"gitId":"nickczh"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-04-10"},{"lineNumber":358,"author":{"gitId":"nickczh"},"content":"            return true;","lastModifiedDate":"2024-04-10"},{"lineNumber":359,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":360,"author":{"gitId":"nickczh"},"content":"        // null check","lastModifiedDate":"2024-04-10"},{"lineNumber":361,"author":{"gitId":"nickczh"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2024-04-10"},{"lineNumber":362,"author":{"gitId":"nickczh"},"content":"            return false;","lastModifiedDate":"2024-04-10"},{"lineNumber":363,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":364,"author":{"gitId":"nickczh"},"content":"        // type check and cast","lastModifiedDate":"2024-04-10"},{"lineNumber":365,"author":{"gitId":"nickczh"},"content":"        if (getClass() !\u003d o.getClass()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":366,"author":{"gitId":"nickczh"},"content":"            return false;","lastModifiedDate":"2024-04-10"},{"lineNumber":367,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":368,"author":{"gitId":"nickczh"},"content":"        Medication medication \u003d (Medication) o;","lastModifiedDate":"2024-04-10"},{"lineNumber":369,"author":{"gitId":"nickczh"},"content":"        // field comparison","lastModifiedDate":"2024-04-10"},{"lineNumber":370,"author":{"gitId":"nickczh"},"content":"        return Objects.equals(getName(), medication.getName())","lastModifiedDate":"2024-04-10"},{"lineNumber":371,"author":{"gitId":"nickczh"},"content":"                \u0026\u0026 Objects.equals(getQuantity(), medication.getQuantity())","lastModifiedDate":"2024-04-10"},{"lineNumber":372,"author":{"gitId":"nickczh"},"content":"                \u0026\u0026 Objects.equals(getDosageMorning(), medication.getDosageMorning())","lastModifiedDate":"2024-04-10"},{"lineNumber":373,"author":{"gitId":"nickczh"},"content":"                \u0026\u0026 Objects.equals(getDosageAfternoon(), medication.getDosageAfternoon())","lastModifiedDate":"2024-04-10"},{"lineNumber":374,"author":{"gitId":"nickczh"},"content":"                \u0026\u0026 Objects.equals(getDosageEvening(), medication.getDosageEvening())","lastModifiedDate":"2024-04-10"},{"lineNumber":375,"author":{"gitId":"nickczh"},"content":"                \u0026\u0026 Objects.equals(getExpiryDate(), medication.getExpiryDate())","lastModifiedDate":"2024-04-10"},{"lineNumber":376,"author":{"gitId":"nickczh"},"content":"                \u0026\u0026 Objects.equals(getRemarks(), medication.getRemarks())","lastModifiedDate":"2024-04-10"},{"lineNumber":377,"author":{"gitId":"nickczh"},"content":"                \u0026\u0026 Objects.equals(getRepeat(), medication.getRepeat())","lastModifiedDate":"2024-04-10"},{"lineNumber":378,"author":{"gitId":"nickczh"},"content":"                \u0026\u0026 Objects.equals(getDayAdded(), medication.getDayAdded());","lastModifiedDate":"2024-04-10"},{"lineNumber":379,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":380,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":381,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":382,"author":{"gitId":"wenenhoe"},"content":"     * Converts a String to a double.","lastModifiedDate":"2024-04-13"},{"lineNumber":383,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":384,"author":{"gitId":"wenenhoe"},"content":"     * @param doubleString The String object to be converted to a double type.","lastModifiedDate":"2024-04-13"},{"lineNumber":385,"author":{"gitId":"wenenhoe"},"content":"     * @return The value of type double.","lastModifiedDate":"2024-04-13"},{"lineNumber":386,"author":{"gitId":"wenenhoe"},"content":"     * @throws MediTrackerException If unable to parse string to double or not storable in JSON.","lastModifiedDate":"2024-04-13"},{"lineNumber":387,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":388,"author":{"gitId":"wenenhoe"},"content":"    private static double convertStringToDouble(String doubleString) throws MediTrackerException {","lastModifiedDate":"2024-04-13"},{"lineNumber":389,"author":{"gitId":"wenenhoe"},"content":"        double value;","lastModifiedDate":"2024-04-13"},{"lineNumber":390,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":391,"author":{"gitId":"wenenhoe"},"content":"            value \u003d Double.parseDouble(doubleString);","lastModifiedDate":"2024-04-13"},{"lineNumber":392,"author":{"gitId":"wenenhoe"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":393,"author":{"gitId":"wenenhoe"},"content":"            throw new MediTrackerException(\"Unable to parse String \u0027\" + doubleString + \"\u0027 into double.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":394,"author":{"gitId":"wenenhoe"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":395,"author":{"gitId":"wenenhoe"},"content":"            throw new MediTrackerException(\"Null Pointer passed for conversion to double.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":396,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":397,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":398,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":399,"author":{"gitId":"wenenhoe"},"content":"            JSONObject.testValidity(value);","lastModifiedDate":"2024-04-13"},{"lineNumber":400,"author":{"gitId":"wenenhoe"},"content":"        } catch (JSONException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":401,"author":{"gitId":"wenenhoe"},"content":"            String errorContext \u003d String.format(","lastModifiedDate":"2024-04-13"},{"lineNumber":402,"author":{"gitId":"wenenhoe"},"content":"                    \"Provided value \\\"%s\\\" not supported as it is either too large or NaN.\",","lastModifiedDate":"2024-04-13"},{"lineNumber":403,"author":{"gitId":"wenenhoe"},"content":"                    doubleString);","lastModifiedDate":"2024-04-13"},{"lineNumber":404,"author":{"gitId":"wenenhoe"},"content":"            throw new MediTrackerException(errorContext);","lastModifiedDate":"2024-04-13"},{"lineNumber":405,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":406,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":407,"author":{"gitId":"wenenhoe"},"content":"        return value;","lastModifiedDate":"2024-04-13"},{"lineNumber":408,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":409,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":410,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":411,"author":{"gitId":"wenenhoe"},"content":"     * Converts a String to an integer.","lastModifiedDate":"2024-04-13"},{"lineNumber":412,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":413,"author":{"gitId":"wenenhoe"},"content":"     * @param integerString The String object to be converted to an integer type.","lastModifiedDate":"2024-04-13"},{"lineNumber":414,"author":{"gitId":"wenenhoe"},"content":"     * @return The value of type integer.","lastModifiedDate":"2024-04-13"},{"lineNumber":415,"author":{"gitId":"wenenhoe"},"content":"     * @throws MediTrackerException If unable to parse string to integer or not storable in JSON.","lastModifiedDate":"2024-04-13"},{"lineNumber":416,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":417,"author":{"gitId":"wenenhoe"},"content":"    private static int convertStringToInteger(String integerString) throws MediTrackerException {","lastModifiedDate":"2024-04-13"},{"lineNumber":418,"author":{"gitId":"wenenhoe"},"content":"        int value;","lastModifiedDate":"2024-04-13"},{"lineNumber":419,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":420,"author":{"gitId":"wenenhoe"},"content":"            value \u003d Integer.parseInt(integerString);","lastModifiedDate":"2024-04-13"},{"lineNumber":421,"author":{"gitId":"wenenhoe"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":422,"author":{"gitId":"wenenhoe"},"content":"            throw new MediTrackerException(\"Unable to parse String \u0027\" + integerString + \"\u0027 into integer.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":423,"author":{"gitId":"wenenhoe"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":424,"author":{"gitId":"wenenhoe"},"content":"            throw new MediTrackerException(\"Null Pointer passed for conversion to integer.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":425,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":426,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":427,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":428,"author":{"gitId":"wenenhoe"},"content":"            JSONObject.testValidity(value);","lastModifiedDate":"2024-04-13"},{"lineNumber":429,"author":{"gitId":"wenenhoe"},"content":"        } catch (JSONException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":430,"author":{"gitId":"wenenhoe"},"content":"            String errorContext \u003d String.format(","lastModifiedDate":"2024-04-13"},{"lineNumber":431,"author":{"gitId":"wenenhoe"},"content":"                    \"Provided value \\\"%s\\\" not supported as it is either too large or NaN.\",","lastModifiedDate":"2024-04-13"},{"lineNumber":432,"author":{"gitId":"wenenhoe"},"content":"                    integerString);","lastModifiedDate":"2024-04-13"},{"lineNumber":433,"author":{"gitId":"wenenhoe"},"content":"            throw new MediTrackerException(errorContext);","lastModifiedDate":"2024-04-13"},{"lineNumber":434,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":435,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":436,"author":{"gitId":"wenenhoe"},"content":"        return value;","lastModifiedDate":"2024-04-13"},{"lineNumber":437,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":438,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":439,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":440,"author":{"gitId":"e0958902"},"content":"     * Converts String to LocalDate","lastModifiedDate":"2024-04-14"},{"lineNumber":441,"author":{"gitId":"e0958902"},"content":"     * Also checks if the user input String is expired or is an invalid date format","lastModifiedDate":"2024-04-14"},{"lineNumber":442,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":443,"author":{"gitId":"e0958902"},"content":"     * @param expiryDateString The String object to be converted to an LocalDate type in yyyy-MM-dd format","lastModifiedDate":"2024-04-14"},{"lineNumber":444,"author":{"gitId":"e0958902"},"content":"     * @throws MediTrackerException When the date entered is in wrong format or is already expired","lastModifiedDate":"2024-04-14"},{"lineNumber":445,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":446,"author":{"gitId":"e0958902"},"content":"    private static LocalDate convertStringToLocalDate(String expiryDateString) throws MediTrackerException {","lastModifiedDate":"2024-04-14"},{"lineNumber":447,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":448,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":449,"author":{"gitId":"e0958902"},"content":"        LocalDate currentDate \u003d MediTrackerTime.getCurrentDate();","lastModifiedDate":"2024-04-14"},{"lineNumber":450,"author":{"gitId":"e0958902"},"content":"        try {","lastModifiedDate":"2024-04-14"},{"lineNumber":451,"author":{"gitId":"e0958902"},"content":"            parsedExpiryDate \u003d LocalDate.parse(expiryDateString, dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":452,"author":{"gitId":"e0958902"},"content":"            if (parsedExpiryDate.isBefore(currentDate) || parsedExpiryDate.equals(currentDate)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":453,"author":{"gitId":"e0958902"},"content":"                throw new MediTrackerException(\"You are not allowed to enter expired medications!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":454,"author":{"gitId":"e0958902"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":455,"author":{"gitId":"e0958902"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":456,"author":{"gitId":"e0958902"},"content":"            throw new MediTrackerException(\"Please enter a valid expiry date in yyyy-MM-dd!\");","lastModifiedDate":"2024-04-14"},{"lineNumber":457,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":458,"author":{"gitId":"e0958902"},"content":"        return parsedExpiryDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":459,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":460,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"nickczh":163,"e0958902":31,"annoy-o-mus":48,"T0nyLin":38,"wenenhoe":180}},{"path":"src/main/java/meditracker/medication/MedicationManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"import java.util.List;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InsufficientQuantityException;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":" * The MedicationManager class represents a list of medications.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":" * It contains an ArrayList of Medication objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"public class MedicationManager {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"    /** The list of medications stored in an ArrayList. */","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"    private static List\u003cMedication\u003e medications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"     * Prevents defaulting to the public constructor","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"     * that allows instantiation of the MedicationManager class","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"    private MedicationManager() {","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"     * Gets the size of list of medications","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"     * @return Total number of medications","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"    public static Integer getTotalMedications() {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"        return medications.size();","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"     * Clears and resets MedicationManager","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"     * Used by tests and overwriting from the JSON save file.","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"e0958902"},"content":"    protected static void clearMedication() {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"        medications.clear();","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     * Adds a Medication to the list of Medication","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication to be added to the list","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"kyuichyi"},"content":"     * @throws MediTrackerException When a duplicate medication is found","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"e0958902"},"content":"    public static void addMedication(Medication medication) throws MediTrackerException {","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"e0958902"},"content":"        medication.checkValidity();","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"e0958902"},"content":"        checkForDuplicateMedication(medication.getName());","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"        medications.add(medication);","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"e0958902"},"content":"    protected static void addMedicationWithoutChecks(Medication medication) {","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        medications.add(medication);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":65,"author":{"gitId":"kyuichyi"},"content":"     * Checks for duplicate medication in the list of medications.","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"kyuichyi"},"content":"     * @param name Name of the medication to retrieve","lastModifiedDate":"2024-04-11"},{"lineNumber":68,"author":{"gitId":"kyuichyi"},"content":"     * @throws MediTrackerException When a duplicate medication is found","lastModifiedDate":"2024-04-11"},{"lineNumber":69,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":70,"author":{"gitId":"kyuichyi"},"content":"    private static void checkForDuplicateMedication(String name) throws MediTrackerException {","lastModifiedDate":"2024-04-11"},{"lineNumber":71,"author":{"gitId":"e0958902"},"content":"        name \u003d name.toLowerCase();","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"kyuichyi"},"content":"        for (Medication medication : medications) {","lastModifiedDate":"2024-04-11"},{"lineNumber":73,"author":{"gitId":"kyuichyi"},"content":"            if (medication.getName().toLowerCase().equals(name)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":74,"author":{"gitId":"kyuichyi"},"content":"                throw new MediTrackerException(\"Medication already exists in the list!\");","lastModifiedDate":"2024-04-11"},{"lineNumber":75,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":76,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":77,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":78,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"     * Gets the Medication object from the medications list.","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"     * @param listIndex Index of the medications list to get (1-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"     * @return Medication object at the corresponding index (0-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"e0958902"},"content":"    public static Medication getMedication(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"        return medications.get(listIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"     * Gets the Medication object from the medications list.","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"     * Uses the Medication name to retrieve from the list.","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the medication to retrieve","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"     * @return Corresponding Medication object with the matched name","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException No Medication matching the specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"    public static Medication getMedication(String name) throws MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"        for (Medication medication : medications) {","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"            if (medication.getName().equals(name)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"                return medication;","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"        throw new MedicationNotFoundException();","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-06"},{"lineNumber":110,"author":{"gitId":"e0958902"},"content":"     * Gets the Medication object from the medications list.","lastModifiedDate":"2024-04-06"},{"lineNumber":111,"author":{"gitId":"e0958902"},"content":"     * Uses the Medication quantity to retrieve medications from the list.","lastModifiedDate":"2024-04-08"},{"lineNumber":112,"author":{"gitId":"e0958902"},"content":"     * Shows all medications that is equal to or less than specified quantity,","lastModifiedDate":"2024-04-08"},{"lineNumber":113,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-06"},{"lineNumber":114,"author":{"gitId":"e0958902"},"content":"     * @param quantity Quantity of the medication to retrieve in double","lastModifiedDate":"2024-04-08"},{"lineNumber":115,"author":{"gitId":"e0958902"},"content":"     * @throws MedicationNotFoundException No Medication matching specified name found","lastModifiedDate":"2024-04-08"},{"lineNumber":116,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-06"},{"lineNumber":117,"author":{"gitId":"e0958902"},"content":"    public static void showMedicationsByQuantity(Double quantity) throws MedicationNotFoundException {","lastModifiedDate":"2024-04-08"},{"lineNumber":118,"author":{"gitId":"e0958902"},"content":"        int medicationsFound \u003d 0;","lastModifiedDate":"2024-04-06"},{"lineNumber":119,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":120,"author":{"gitId":"e0958902"},"content":"        for (Medication medication : medications) {","lastModifiedDate":"2024-04-06"},{"lineNumber":121,"author":{"gitId":"e0958902"},"content":"            Double medicationListQuantity \u003d medication.getQuantity();","lastModifiedDate":"2024-04-08"},{"lineNumber":122,"author":{"gitId":"e0958902"},"content":"            if (Double.compare(medicationListQuantity, quantity) \u003c\u003d 0) {","lastModifiedDate":"2024-04-08"},{"lineNumber":123,"author":{"gitId":"e0958902"},"content":"                medicationsFound++;","lastModifiedDate":"2024-04-06"},{"lineNumber":124,"author":{"gitId":"e0958902"},"content":"                Ui.printSpecificMed(medication);","lastModifiedDate":"2024-04-06"},{"lineNumber":125,"author":{"gitId":"e0958902"},"content":"            }","lastModifiedDate":"2024-04-06"},{"lineNumber":126,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":127,"author":{"gitId":"e0958902"},"content":"        if (medicationsFound \u003d\u003d 0) {","lastModifiedDate":"2024-04-08"},{"lineNumber":128,"author":{"gitId":"e0958902"},"content":"            throw new MedicationNotFoundException();","lastModifiedDate":"2024-04-08"},{"lineNumber":129,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":130,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":131,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":132,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-06"},{"lineNumber":133,"author":{"gitId":"e0958902"},"content":"     * Gets the Medication object from the medications list.","lastModifiedDate":"2024-04-06"},{"lineNumber":134,"author":{"gitId":"e0958902"},"content":"     * Uses the Medication name to retrieve medications from the list.","lastModifiedDate":"2024-04-06"},{"lineNumber":135,"author":{"gitId":"e0958902"},"content":"     * Shows all medications that contains the name.","lastModifiedDate":"2024-04-08"},{"lineNumber":136,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-06"},{"lineNumber":137,"author":{"gitId":"e0958902"},"content":"     * @param name Name of the medication to find and retrieve","lastModifiedDate":"2024-04-06"},{"lineNumber":138,"author":{"gitId":"e0958902"},"content":"     * @throws MedicationNotFoundException No Medication matching specified name found","lastModifiedDate":"2024-04-06"},{"lineNumber":139,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-06"},{"lineNumber":140,"author":{"gitId":"e0958902"},"content":"    public static void showMedicationsByName(String name) throws MedicationNotFoundException {","lastModifiedDate":"2024-04-06"},{"lineNumber":141,"author":{"gitId":"e0958902"},"content":"        int medicationsFound \u003d 0;","lastModifiedDate":"2024-04-06"},{"lineNumber":142,"author":{"gitId":"kyuichyi"},"content":"        String nameToSearch \u003d name.toLowerCase();","lastModifiedDate":"2024-04-11"},{"lineNumber":143,"author":{"gitId":"e0958902"},"content":"        for (Medication medication : medications) {","lastModifiedDate":"2024-04-06"},{"lineNumber":144,"author":{"gitId":"e0958902"},"content":"            String medicationName \u003d medication.getName().toLowerCase();","lastModifiedDate":"2024-04-08"},{"lineNumber":145,"author":{"gitId":"kyuichyi"},"content":"            if (medicationName.contains(nameToSearch)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":146,"author":{"gitId":"e0958902"},"content":"                medicationsFound++;","lastModifiedDate":"2024-04-06"},{"lineNumber":147,"author":{"gitId":"e0958902"},"content":"                Ui.printSpecificMed(medication);","lastModifiedDate":"2024-04-06"},{"lineNumber":148,"author":{"gitId":"e0958902"},"content":"            }","lastModifiedDate":"2024-04-06"},{"lineNumber":149,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":150,"author":{"gitId":"e0958902"},"content":"        if (medicationsFound \u003d\u003d 0) {","lastModifiedDate":"2024-04-06"},{"lineNumber":151,"author":{"gitId":"e0958902"},"content":"            throw new MedicationNotFoundException();","lastModifiedDate":"2024-04-06"},{"lineNumber":152,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":153,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":154,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":155,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-06"},{"lineNumber":156,"author":{"gitId":"e0958902"},"content":"     * Gets the Medication object from the medications list.","lastModifiedDate":"2024-04-06"},{"lineNumber":157,"author":{"gitId":"e0958902"},"content":"     * Uses the Medication expiry to retrieve medications from the list.","lastModifiedDate":"2024-04-08"},{"lineNumber":158,"author":{"gitId":"e0958902"},"content":"     * Shows all medications that will expire by the year that the user has input.","lastModifiedDate":"2024-04-08"},{"lineNumber":159,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-06"},{"lineNumber":160,"author":{"gitId":"e0958902"},"content":"     * @param expiry Expiry of the medication to find and retrieve","lastModifiedDate":"2024-04-08"},{"lineNumber":161,"author":{"gitId":"e0958902"},"content":"     * @throws MedicationNotFoundException No Medication matching specified name found","lastModifiedDate":"2024-04-08"},{"lineNumber":162,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-06"},{"lineNumber":163,"author":{"gitId":"e0958902"},"content":"    public static void showMedicationsByExpiry(String expiry) throws MedicationNotFoundException {","lastModifiedDate":"2024-04-08"},{"lineNumber":164,"author":{"gitId":"e0958902"},"content":"        int medicationsFound \u003d 0;","lastModifiedDate":"2024-04-06"},{"lineNumber":165,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":166,"author":{"gitId":"e0958902"},"content":"        for (Medication medication : medications) {","lastModifiedDate":"2024-04-06"},{"lineNumber":167,"author":{"gitId":"e0958902"},"content":"            int medicationYear \u003d medication.getExpiryDate().getYear();","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"e0958902"},"content":"            int userYear \u003d Integer.parseInt(expiry);","lastModifiedDate":"2024-04-08"},{"lineNumber":169,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":170,"author":{"gitId":"e0958902"},"content":"            if (medicationYear \u003c\u003d userYear) {","lastModifiedDate":"2024-04-08"},{"lineNumber":171,"author":{"gitId":"e0958902"},"content":"                medicationsFound++;","lastModifiedDate":"2024-04-06"},{"lineNumber":172,"author":{"gitId":"e0958902"},"content":"                Ui.printSpecificMed(medication);","lastModifiedDate":"2024-04-06"},{"lineNumber":173,"author":{"gitId":"e0958902"},"content":"            }","lastModifiedDate":"2024-04-06"},{"lineNumber":174,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":175,"author":{"gitId":"e0958902"},"content":"        if (medicationsFound \u003d\u003d 0) {","lastModifiedDate":"2024-04-08"},{"lineNumber":176,"author":{"gitId":"e0958902"},"content":"            throw new MedicationNotFoundException();","lastModifiedDate":"2024-04-08"},{"lineNumber":177,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":178,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":179,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":180,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-06"},{"lineNumber":181,"author":{"gitId":"e0958902"},"content":"     * Gets the Medication object from the medications list.","lastModifiedDate":"2024-04-06"},{"lineNumber":182,"author":{"gitId":"e0958902"},"content":"     * Uses the Medication remarks to retrieve medications from the list.","lastModifiedDate":"2024-04-06"},{"lineNumber":183,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-06"},{"lineNumber":184,"author":{"gitId":"e0958902"},"content":"     * @param remarks Remarks of the medication to find and retrieve","lastModifiedDate":"2024-04-08"},{"lineNumber":185,"author":{"gitId":"e0958902"},"content":"     * @throws MedicationNotFoundException No Medication matching specified name found","lastModifiedDate":"2024-04-08"},{"lineNumber":186,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-06"},{"lineNumber":187,"author":{"gitId":"e0958902"},"content":"    public static void showMedicationsByRemarks(String remarks) throws MedicationNotFoundException {","lastModifiedDate":"2024-04-08"},{"lineNumber":188,"author":{"gitId":"e0958902"},"content":"        int medicationsFound \u003d 0;","lastModifiedDate":"2024-04-06"},{"lineNumber":189,"author":{"gitId":"kyuichyi"},"content":"        String remarksToSearch \u003d remarks.toLowerCase();","lastModifiedDate":"2024-04-11"},{"lineNumber":190,"author":{"gitId":"e0958902"},"content":"        for (Medication medication : medications) {","lastModifiedDate":"2024-04-06"},{"lineNumber":191,"author":{"gitId":"e0958902"},"content":"            String medicationRemarks \u003d medication.getRemarks().toLowerCase();","lastModifiedDate":"2024-04-08"},{"lineNumber":192,"author":{"gitId":"kyuichyi"},"content":"            if (medicationRemarks.contains(remarksToSearch)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":193,"author":{"gitId":"e0958902"},"content":"                medicationsFound++;","lastModifiedDate":"2024-04-06"},{"lineNumber":194,"author":{"gitId":"e0958902"},"content":"                Ui.printSpecificMed(medication);","lastModifiedDate":"2024-04-06"},{"lineNumber":195,"author":{"gitId":"e0958902"},"content":"            }","lastModifiedDate":"2024-04-06"},{"lineNumber":196,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-06"},{"lineNumber":197,"author":{"gitId":"e0958902"},"content":"        if (medicationsFound \u003d\u003d 0) {","lastModifiedDate":"2024-04-08"},{"lineNumber":198,"author":{"gitId":"e0958902"},"content":"            throw new MedicationNotFoundException();","lastModifiedDate":"2024-04-08"},{"lineNumber":199,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":200,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-06"},{"lineNumber":201,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":202,"author":{"gitId":"e0958902"},"content":"    public static List\u003cMedication\u003e getMedications() {","lastModifiedDate":"2024-03-30"},{"lineNumber":203,"author":{"gitId":"T0nyLin"},"content":"        return medications;","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"wenenhoe"},"content":"     * Deletes the Medication object from the medications list.","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"wenenhoe"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-18"},{"lineNumber":209,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"wenenhoe"},"content":"     * @param listIndex Index of the medications list to delete (1-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"e0958902"},"content":"    public static void removeMedication(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-30"},{"lineNumber":214,"author":{"gitId":"wenenhoe"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"wenenhoe"},"content":"        medications.remove(listIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":217,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":220,"author":{"gitId":"wenenhoe"},"content":"     * Gets the dosage from the Medication object based the specified Period","lastModifiedDate":"2024-03-30"},{"lineNumber":221,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":222,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication object to obtain the dosage from","lastModifiedDate":"2024-03-30"},{"lineNumber":223,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day to reference","lastModifiedDate":"2024-03-30"},{"lineNumber":224,"author":{"gitId":"wenenhoe"},"content":"     * @return The appropriate dosage depending on the time Period","lastModifiedDate":"2024-03-30"},{"lineNumber":225,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":226,"author":{"gitId":"wenenhoe"},"content":"    public static Double getMedicationDosage(Medication medication, Period period) {","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"wenenhoe"},"content":"        double dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":228,"author":{"gitId":"wenenhoe"},"content":"        switch (period) {","lastModifiedDate":"2024-03-30"},{"lineNumber":229,"author":{"gitId":"wenenhoe"},"content":"        case MORNING:","lastModifiedDate":"2024-03-30"},{"lineNumber":230,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d medication.getDosageMorning();","lastModifiedDate":"2024-03-30"},{"lineNumber":231,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":232,"author":{"gitId":"wenenhoe"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-30"},{"lineNumber":233,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d medication.getDosageAfternoon();","lastModifiedDate":"2024-03-30"},{"lineNumber":234,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":235,"author":{"gitId":"wenenhoe"},"content":"        case EVENING:","lastModifiedDate":"2024-03-30"},{"lineNumber":236,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d medication.getDosageEvening();","lastModifiedDate":"2024-03-30"},{"lineNumber":237,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":238,"author":{"gitId":"wenenhoe"},"content":"        case UNKNOWN:","lastModifiedDate":"2024-03-30"},{"lineNumber":239,"author":{"gitId":"wenenhoe"},"content":"        case NONE:","lastModifiedDate":"2024-03-30"},{"lineNumber":240,"author":{"gitId":"wenenhoe"},"content":"        default:","lastModifiedDate":"2024-03-30"},{"lineNumber":241,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d 0.0;","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":245,"author":{"gitId":"wenenhoe"},"content":"        return dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":246,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":248,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":249,"author":{"gitId":"e0958902"},"content":"     * Shows the number of medications in the medication list.","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"e0958902"},"content":"     * Also lists all the medications in the medication list.","lastModifiedDate":"2024-03-20"},{"lineNumber":251,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":252,"author":{"gitId":"e0958902"},"content":"    public static void printAllMedications() {","lastModifiedDate":"2024-03-30"},{"lineNumber":253,"author":{"gitId":"e0958902"},"content":"        assert medications !\u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":254,"author":{"gitId":"e0958902"},"content":"        Ui.printMedicationList(medications);","lastModifiedDate":"2024-04-07"},{"lineNumber":255,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":256,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":258,"author":{"gitId":"e0958902"},"content":"     * Prints the specific medication specific according to the medication list index.","lastModifiedDate":"2024-04-08"},{"lineNumber":259,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":260,"author":{"gitId":"e0958902"},"content":"     * @param listIndex The index of the medication in the Medication list","lastModifiedDate":"2024-04-03"},{"lineNumber":261,"author":{"gitId":"e0958902"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-04-06"},{"lineNumber":262,"author":{"gitId":"e0958902"},"content":"     * @throws NullPointerException Trying to access non-existent object","lastModifiedDate":"2024-04-06"},{"lineNumber":263,"author":{"gitId":"e0958902"},"content":"     * @throws NumberFormatException When a string is keyed in for the index","lastModifiedDate":"2024-04-06"},{"lineNumber":264,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":265,"author":{"gitId":"e0958902"},"content":"    public static void printSpecificMedication(int listIndex)","lastModifiedDate":"2024-04-06"},{"lineNumber":266,"author":{"gitId":"e0958902"},"content":"            throws IndexOutOfBoundsException, NullPointerException, NumberFormatException {","lastModifiedDate":"2024-04-06"},{"lineNumber":267,"author":{"gitId":"e0958902"},"content":"        assert medications !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":268,"author":{"gitId":"e0958902"},"content":"        Medication medication \u003d MedicationManager.getMedication(listIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":269,"author":{"gitId":"e0958902"},"content":"        Ui.printSpecificMed(medication);","lastModifiedDate":"2024-04-03"},{"lineNumber":270,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":271,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":272,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":273,"author":{"gitId":"annoy-o-mus"},"content":"     * Populates the MedicationManager from the save file.","lastModifiedDate":"2024-03-28"},{"lineNumber":274,"author":{"gitId":"annoy-o-mus"},"content":"     * If there are corrupt data, it may be substituted with placeholder values.","lastModifiedDate":"2024-03-28"},{"lineNumber":275,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":276,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medInfoList The List of medication information that contains the (String, String) key-value.","lastModifiedDate":"2024-03-28"},{"lineNumber":277,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":278,"author":{"gitId":"e0958902"},"content":"    public static void addMedicationFromSaveFile(List\u003cMap\u003cString, String\u003e\u003e medInfoList) {","lastModifiedDate":"2024-03-30"},{"lineNumber":279,"author":{"gitId":"annoy-o-mus"},"content":"        clearMedication(); // Reset for the case of overwriting data with another JSON file.","lastModifiedDate":"2024-04-03"},{"lineNumber":280,"author":{"gitId":"annoy-o-mus"},"content":"        for (Map\u003cString, String\u003e medInfo : medInfoList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":281,"author":{"gitId":"annoy-o-mus"},"content":"            Medication medication \u003d new Medication();","lastModifiedDate":"2024-03-28"},{"lineNumber":282,"author":{"gitId":"annoy-o-mus"},"content":"            for (String key : medInfo.keySet()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":283,"author":{"gitId":"annoy-o-mus"},"content":"                ArgumentName keyEnum \u003d ArgumentName.getEnumOfArgumentValue(key);","lastModifiedDate":"2024-03-28"},{"lineNumber":284,"author":{"gitId":"annoy-o-mus"},"content":"                if (keyEnum \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":285,"author":{"gitId":"annoy-o-mus"},"content":"                    continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":286,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":287,"author":{"gitId":"annoy-o-mus"},"content":"                String value \u003d medInfo.get(key);","lastModifiedDate":"2024-03-28"},{"lineNumber":288,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":289,"author":{"gitId":"e0958902"},"content":"                try {","lastModifiedDate":"2024-04-14"},{"lineNumber":290,"author":{"gitId":"e0958902"},"content":"                    medication.setMedicationValue(keyEnum, value);","lastModifiedDate":"2024-04-14"},{"lineNumber":291,"author":{"gitId":"e0958902"},"content":"                } catch (MediTrackerException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":292,"author":{"gitId":"e0958902"},"content":"                    Ui.showErrorMessage(e);","lastModifiedDate":"2024-04-14"},{"lineNumber":293,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":294,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":295,"author":{"gitId":"kyuichyi"},"content":"            try {","lastModifiedDate":"2024-04-11"},{"lineNumber":296,"author":{"gitId":"e0958902"},"content":"                addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":297,"author":{"gitId":"kyuichyi"},"content":"            } catch (MediTrackerException e) {","lastModifiedDate":"2024-04-11"},{"lineNumber":298,"author":{"gitId":"kyuichyi"},"content":"                Ui.showErrorMessage(e);","lastModifiedDate":"2024-04-11"},{"lineNumber":299,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-04-11"},{"lineNumber":300,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":301,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":302,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":303,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":304,"author":{"gitId":"wenenhoe"},"content":"     * Increases the medication quantity based on the specified time period","lastModifiedDate":"2024-03-30"},{"lineNumber":305,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":306,"author":{"gitId":"wenenhoe"},"content":"     * @param medicationName Name of the medication to increase medication quantity","lastModifiedDate":"2024-03-30"},{"lineNumber":307,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day to reference","lastModifiedDate":"2024-03-30"},{"lineNumber":308,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException No Medication matching specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":309,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":310,"author":{"gitId":"wenenhoe"},"content":"    public static void increaseMedicationQuantity(String medicationName, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":311,"author":{"gitId":"wenenhoe"},"content":"            throws MedicationNotFoundException {","lastModifiedDate":"2024-04-02"},{"lineNumber":312,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d getMedication(medicationName);","lastModifiedDate":"2024-03-30"},{"lineNumber":313,"author":{"gitId":"wenenhoe"},"content":"        double dosage \u003d getMedicationDosage(medication, period);","lastModifiedDate":"2024-03-30"},{"lineNumber":314,"author":{"gitId":"wenenhoe"},"content":"        double oldQuantity \u003d medication.getQuantity();","lastModifiedDate":"2024-03-30"},{"lineNumber":315,"author":{"gitId":"wenenhoe"},"content":"        double newQuantity \u003d oldQuantity + dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":316,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":317,"author":{"gitId":"wenenhoe"},"content":"        String message \u003d String.format(\"Medication quantity increased: %.1f -\u003e %.1f\",","lastModifiedDate":"2024-04-07"},{"lineNumber":318,"author":{"gitId":"wenenhoe"},"content":"                oldQuantity,","lastModifiedDate":"2024-04-07"},{"lineNumber":319,"author":{"gitId":"wenenhoe"},"content":"                newQuantity);","lastModifiedDate":"2024-04-07"},{"lineNumber":320,"author":{"gitId":"wenenhoe"},"content":"        Ui.showInfoMessage(message);","lastModifiedDate":"2024-04-07"},{"lineNumber":321,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":322,"author":{"gitId":"wenenhoe"},"content":"        medication.setQuantity(newQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":323,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":324,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":325,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":326,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":327,"author":{"gitId":"wenenhoe"},"content":"     * Decreases the medication quantity based on the specified time period","lastModifiedDate":"2024-03-30"},{"lineNumber":328,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":329,"author":{"gitId":"wenenhoe"},"content":"     * @param medicationName Name of the medication to decrease medication quantity","lastModifiedDate":"2024-03-30"},{"lineNumber":330,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day to reference","lastModifiedDate":"2024-03-30"},{"lineNumber":331,"author":{"gitId":"wenenhoe"},"content":"     * @throws MedicationNotFoundException No Medication matching specified name found","lastModifiedDate":"2024-04-02"},{"lineNumber":332,"author":{"gitId":"wenenhoe"},"content":"     * @throws InsufficientQuantityException Existing quantity insufficient for operation","lastModifiedDate":"2024-04-02"},{"lineNumber":333,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":334,"author":{"gitId":"wenenhoe"},"content":"    public static void decreaseMedicationQuantity(String medicationName, Period period)","lastModifiedDate":"2024-04-02"},{"lineNumber":335,"author":{"gitId":"wenenhoe"},"content":"            throws MedicationNotFoundException, InsufficientQuantityException {","lastModifiedDate":"2024-04-02"},{"lineNumber":336,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d getMedication(medicationName);","lastModifiedDate":"2024-03-30"},{"lineNumber":337,"author":{"gitId":"wenenhoe"},"content":"        double dosage \u003d getMedicationDosage(medication, period);","lastModifiedDate":"2024-03-30"},{"lineNumber":338,"author":{"gitId":"wenenhoe"},"content":"        double oldQuantity \u003d medication.getQuantity();","lastModifiedDate":"2024-03-30"},{"lineNumber":339,"author":{"gitId":"wenenhoe"},"content":"        double newQuantity \u003d oldQuantity - dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":340,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":341,"author":{"gitId":"wenenhoe"},"content":"        if (newQuantity \u003c 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":342,"author":{"gitId":"wenenhoe"},"content":"            throw new InsufficientQuantityException(dosage, oldQuantity);","lastModifiedDate":"2024-04-02"},{"lineNumber":343,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":344,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"wenenhoe"},"content":"        String message \u003d String.format(\"Medication quantity decreased: %.1f -\u003e %.1f\",","lastModifiedDate":"2024-04-07"},{"lineNumber":346,"author":{"gitId":"wenenhoe"},"content":"                oldQuantity,","lastModifiedDate":"2024-04-07"},{"lineNumber":347,"author":{"gitId":"wenenhoe"},"content":"                newQuantity);","lastModifiedDate":"2024-04-07"},{"lineNumber":348,"author":{"gitId":"wenenhoe"},"content":"        Ui.showInfoMessage(message);","lastModifiedDate":"2024-04-07"},{"lineNumber":349,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":350,"author":{"gitId":"wenenhoe"},"content":"        medication.setQuantity(newQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":351,"author":{"gitId":"annoy-o-mus"},"content":"        FileReaderWriter.saveMedicationData(null);","lastModifiedDate":"2024-04-13"},{"lineNumber":352,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":353,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":15,"e0958902":147,"annoy-o-mus":30,"T0nyLin":3,"kyuichyi":24,"wenenhoe":134}},{"path":"src/main/java/meditracker/storage/DailyMedicationExporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import static java.nio.file.StandardOpenOption.APPEND;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.List;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":" * A package-private class that processes DailyMedication data and writes to the target file.","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"class DailyMedicationExporter {","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Logger MEDILOGGER \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"     * Writes DailyMedication data to target file.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"     * @param saveFile The Path of the file to save to.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"     * @return `true` if the saving succeeded, `false` otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    static boolean writeDailyMedicationToFile(Path saveFile) {","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"        List\u003cString\u003e dailyMedData \u003d DailyMedicationManager.getDailyMedicationStringData();","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        //@@author annoy-o-mus-reused","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/6548204","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            for (String stringData : dailyMedData) {","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                byte[] dataInBytes \u003d (stringData + System.lineSeparator()).getBytes();","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Files.write(saveFile, dataInBytes, APPEND);","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            MEDILOGGER.severe(\"Unable to write DailyMedication data to file.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"annoy-o-mus":28,"-":15}},{"path":"src/main/java/meditracker/storage/FilePathChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":" * A utility class that perform checks on the supplied file path (format checks).","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":" * This does not check for file permissions (to be created, read, accessed etc.).","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"public class FilePathChecker {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Logger MEDILOGGER \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"     * Checks if the Path object contains illegal folder names.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"     * They are generally targeted towards the Windows filesystem,","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"     * but it also catches misuse of periods, as a way of path traversal.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"     * @param path The Path object to check for illegal names (and improper use of periods).","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if illegal names are found, false otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    static boolean containsIllegalFolderNames(Path path) {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"        Iterator\u003cPath\u003e splitPath \u003d path.iterator();","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"        while (splitPath.hasNext()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"            Path subpath \u003d splitPath.next();","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"            String subpathString \u003d subpath.toString().toLowerCase();","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"            // Path should not have multiple periods or colons","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"            if (subpathString.contains(\"..\") || subpathString.contains(\":\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"                MEDILOGGER.warning(\"Sub-path contains .. or : which is not allowed.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"            if (subpathString.endsWith(\".\") || subpathString.endsWith(\" \")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"                MEDILOGGER.warning(\"Sub-path ends with \u0027.\u0027 or (space) which is not allowed.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"            // Credit: https://stackoverflow.com/a/31976060","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"            switch (subpathString) {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"            case \"con\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"            case \"prn\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"            case \"aux\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"            case \"nul\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com1\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com2\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com3\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com4\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com5\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com6\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com7\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com8\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"            case \"com9\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt1\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt2\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt3\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt4\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt5\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt6\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt7\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt8\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"            case \"lpt9\": // fallthrough","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"            case \".\": // Path should not have a lone period.","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"                MEDILOGGER.warning(\"Path contains potentially invalid folder: \" + subpathString);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"            default:","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"                continue;","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"        return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"     * Checks if the Path object has a valid root.","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"     * This applies to the Windows filesystem where there are multiple local drives with different drive letters.","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"     * Relative paths should always return true.","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"     * @param path The path object to be checked for the presence of the valid root.","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if it has a valid root, false otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"    private static boolean containsValidRoot(Path path) {","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"        Path absolutePath \u003d path.toAbsolutePath();","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"        Path root \u003d absolutePath.getRoot();","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"        if (root \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"            // This block should never be triggered","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.severe(\"Absolute path does not contain a root.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"        if (Files.exists(root)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"File Root \" + root + \" does not exist on the filesystem.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"     * Checks the String input if it contains potentially illegal characters as a valid filepath.","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"     * This method serves as an informational check to inform the user of illegal characters.","lastModifiedDate":"2024-04-15"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"     * The Path object does not contain illegal characters as the conversion from String to Path later","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"     *     would have thrown an `InvalidPathException` error.","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"     * @param inputToCheck The String input to check for illegal characters.","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if an illegal character is found, false otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"    static boolean containsIllegalCharacters(String inputToCheck) {","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"        // Credit: https://stackoverflow.com/a/31976060","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"        String[] illegalCharacters \u003d {\"\u003c\", \"\u003e\", \"\\\"\", \"\u0027\", \"|\", \"?\", \"*\"};","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"annoy-o-mus"},"content":"        for (String illegalChar : illegalCharacters) {","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"            if (inputToCheck.contains(illegalChar)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"annoy-o-mus"},"content":"                MEDILOGGER.warning(\"String contains potentially illegal character: \" + illegalChar);","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"annoy-o-mus"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"annoy-o-mus"},"content":"        return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"annoy-o-mus"},"content":"     * Runs a series of checks on the Path object to ensure that the naming of the filesystem path is sound.","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"annoy-o-mus"},"content":"     * @param path The Path object.","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"annoy-o-mus"},"content":"     * @return true if the Path object is valid for the filesystem, false otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"annoy-o-mus"},"content":"    static boolean isValidFullPath(Path path) {","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"annoy-o-mus"},"content":"        if (path \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"annoy-o-mus"},"content":"        if (!containsValidRoot(path)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"annoy-o-mus"},"content":"        if (containsIllegalFolderNames(path)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"annoy-o-mus"},"content":"        Path fileName \u003d FileReaderWriter.getFullPathComponent(path, false);","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"annoy-o-mus"},"content":"        if (fileName \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"There is no valid file name supplied.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"annoy-o-mus"},"content":"        String fileNameString \u003d fileName.toString().toLowerCase();","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"annoy-o-mus"},"content":"        if (!fileNameString.endsWith(\".json\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"File does not end in .json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"annoy-o-mus"},"content":"        return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"annoy-o-mus"},"content":"     * Validates the string input and return the Path object if successfully validated.","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"annoy-o-mus"},"content":"     * @param fileLocationArgument The argument specifying the location of the file (as String).","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The Path object corresponding to the string argument for the save file if it passes validation checks,","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"annoy-o-mus"},"content":"     *     null otherwise.","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"annoy-o-mus"},"content":"    public static Path getValidatedUserPathArgument(String fileLocationArgument) {","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"annoy-o-mus"},"content":"        if (fileLocationArgument \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"annoy-o-mus"},"content":"        boolean hasIllegalCharacters \u003d FilePathChecker.containsIllegalCharacters(fileLocationArgument);","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"annoy-o-mus"},"content":"        if (hasIllegalCharacters) {","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"The supplied input contains potentially illegal characters. Please ensure that \"","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"the supplied path does not have illegal character\");","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"annoy-o-mus"},"content":"        Path pathOfSaveFile;","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"annoy-o-mus"},"content":"            pathOfSaveFile \u003d Path.of(fileLocationArgument);","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.severe(e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Unable to convert input into Path object. Data is not saved.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"annoy-o-mus"},"content":"        boolean isValidFilePath \u003d FilePathChecker.isValidFullPath(pathOfSaveFile);","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"annoy-o-mus"},"content":"        if (!isValidFilePath) {","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Path contains invalid folder names or missing valid file extension (.json).\");","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(\"Please ensure the path contains valid folder names and ends with .json\");","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"annoy-o-mus"},"content":"        return pathOfSaveFile;","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"annoy-o-mus":193}},{"path":"src/main/java/meditracker/storage/FileReaderWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":" * A facade (static) class to handle the reading and writing to the filesystem.","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"public class FileReaderWriter {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Logger MEDILOGGER \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"     * Returns either the Path of folder or the Path of file.","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"     * @param path The Path object containing both the folder path and file name.","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"     * @param getFolder `true` to get the Path of folder, `false` to get the file name.","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The Path object of either the file name or the folder path. `null` if the chosen field is empty.","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"    static Path getFullPathComponent(Path path, boolean getFolder) {","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"        if (path \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"        if (getFolder) {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"            return path.getParent();","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"            return path.getFileName();","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"     * Returns the temporary save file which is in the same directory as the final save file.","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"     * The temp file is to ensure we overwrite the existing save file only if writing to the temp file succeed.","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"     * @param path The path of the final save file.","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The Path of the temp file. `null` if there are issues creating the file.","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"    static Path getCreatedTemporarySaveFile(Path path) {","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"        Path folder \u003d getFullPathComponent(path, true);","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"        return createTempSaveFile(folder);","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"     * Writes or overwrites the save file with the temp file and deletes the temp file.","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"     * @param saveFile The save file to write to.","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"     * @param tempFile The temp file to write to the save file.","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"     * @param isTempFileSaveSuccess Whether the saving to the temp file was a success.","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"     * @return `true` if the save file has been successfully written or overwritten, `false` otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"    private static boolean processTempFileOverwrite(Path saveFile, Path tempFile, boolean isTempFileSaveSuccess) {","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"        if (saveFile \u003d\u003d null || tempFile \u003d\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"            if (isTempFileSaveSuccess) {","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"                Files.move(tempFile, saveFile, REPLACE_EXISTING);","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"                return true;","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"            } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"                Files.delete(tempFile);","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"                return false;","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.severe(\"IO Exception occurred when trying to update existing save file.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.severe(\"There is a risk of corruption in the save file. Try saving to another place.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"     * Creates new directories to allow writing of MediTracker data to the save files.","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"     * @param folderName The directory, including its parents, to create. If null, the creation is skipped.","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws FileReadWriteException When there is any issue creating the directories.","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"    private static void initialiseDirectory(Path folderName) throws FileReadWriteException {","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"        if (folderName \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.info(\"Directory portion is null. Skipping creation.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"            Files.createDirectories(folderName);","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"An IO Error has occurred. Directories may not have been created.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"Unable to create directories. Please make sure that the \"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"directory has the appropriate permissions for Meditracker to write to.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"     * Creates a temporary save file.","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"     * Also attempts to initialise the directory in case of a first-time save.","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"     * @param dir The directory for the temporary save file. If null, it will be the directory of the project root.","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The Path object of the save file. `null` if there is an issue with creating the temp save file.","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"    private static Path createTempSaveFile(Path dir) {","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"        Path directory;","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"        if (dir \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"annoy-o-mus"},"content":"            directory \u003d Paths.get(\"\");","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"            directory \u003d dir;","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"annoy-o-mus"},"content":"            initialiseDirectory(directory);","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (FileReadWriteException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.severe(e.getMessage());","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"annoy-o-mus"},"content":"            return Files.createTempFile(directory, null, null);","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.severe(\"IO Error: Unable to create temp save file\");","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.severe(\"Unable to create temp save file. Please make sure that \"","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"the file has the appropriate permissions for MediTracker to write to.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"annoy-o-mus"},"content":"     * Saves the Medication information in MediTracker.","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"annoy-o-mus"},"content":"     * @param path The Path object (relative or absolute) to save the information to. If null, the path will be the","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"annoy-o-mus"},"content":"     *     default path specified in `MediTrackerFileConfig`.","lastModifiedDate":"2024-04-15"},{"lineNumber":143,"author":{"gitId":"annoy-o-mus"},"content":"     * @return `true` if the saving is successful, `false` otherwise.","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"annoy-o-mus"},"content":"    public static boolean saveMedicationData(Path path) {","lastModifiedDate":"2024-04-13"},{"lineNumber":146,"author":{"gitId":"annoy-o-mus"},"content":"        Path fullJsonPath;","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"annoy-o-mus"},"content":"        if (path \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"annoy-o-mus"},"content":"            fullJsonPath \u003d MediTrackerFileConfig.getDefaultJsonSaveFilePath();","lastModifiedDate":"2024-04-15"},{"lineNumber":149,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"annoy-o-mus"},"content":"            fullJsonPath \u003d path;","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"annoy-o-mus"},"content":"        Path tmpSaveFile \u003d getCreatedTemporarySaveFile(fullJsonPath);","lastModifiedDate":"2024-04-13"},{"lineNumber":154,"author":{"gitId":"annoy-o-mus"},"content":"        if (tmpSaveFile \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"annoy-o-mus"},"content":"        boolean saveSuccess \u003d JsonExporter.saveMedicationDataToJson(tmpSaveFile);","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"annoy-o-mus"},"content":"        return processTempFileOverwrite(fullJsonPath, tmpSaveFile, saveSuccess);","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"annoy-o-mus"},"content":"     * Saves the DailyMedication information to a text file under a predefined sub-folder.","lastModifiedDate":"2024-04-15"},{"lineNumber":164,"author":{"gitId":"annoy-o-mus"},"content":"     * This sub-folder (relative to JSON file) can be found under `MediTrackerFileConfig`.","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"annoy-o-mus"},"content":"     * This sub-folder name cannot be changed.","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"annoy-o-mus"},"content":"     * @param suppliedDailyPath The DailyMedication file to save to. If null, the path will be built based on the","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"annoy-o-mus"},"content":"     *     default directory the JSON file resides in `MediTrackerFileConfig`.","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"annoy-o-mus"},"content":"     * @return `true` if successfully saved, `false` otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":170,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"annoy-o-mus"},"content":"    public static boolean saveDailyMedicationData(Path suppliedDailyPath) {","lastModifiedDate":"2024-04-13"},{"lineNumber":172,"author":{"gitId":"annoy-o-mus"},"content":"        Path dailyMedSavePath;","lastModifiedDate":"2024-04-13"},{"lineNumber":173,"author":{"gitId":"annoy-o-mus"},"content":"        if (suppliedDailyPath \u003d\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":174,"author":{"gitId":"annoy-o-mus"},"content":"            dailyMedSavePath \u003d MediTrackerFileConfig.getDailymedFilePath(null);","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":176,"author":{"gitId":"annoy-o-mus"},"content":"            dailyMedSavePath \u003d suppliedDailyPath;","lastModifiedDate":"2024-04-13"},{"lineNumber":177,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":178,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":179,"author":{"gitId":"annoy-o-mus"},"content":"        if (dailyMedSavePath \u003d\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":180,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-13"},{"lineNumber":181,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":182,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":183,"author":{"gitId":"annoy-o-mus"},"content":"        Path tmpSaveFile \u003d getCreatedTemporarySaveFile(dailyMedSavePath);","lastModifiedDate":"2024-04-13"},{"lineNumber":184,"author":{"gitId":"annoy-o-mus"},"content":"        if (tmpSaveFile \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-04-13"},{"lineNumber":186,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"annoy-o-mus"},"content":"        boolean saveSuccess \u003d DailyMedicationExporter.writeDailyMedicationToFile(tmpSaveFile);","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"annoy-o-mus"},"content":"        return processTempFileOverwrite(dailyMedSavePath, tmpSaveFile, saveSuccess);","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":193,"author":{"gitId":"annoy-o-mus"},"content":"     * Loads all MediTracker related data.","lastModifiedDate":"2024-04-13"},{"lineNumber":194,"author":{"gitId":"annoy-o-mus"},"content":"     * This includes the JSON data for the Medication(s) and the txt data for DailyMedication(s).","lastModifiedDate":"2024-04-15"},{"lineNumber":195,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":196,"author":{"gitId":"annoy-o-mus"},"content":"     * @param jsonPath The Path of the json file. If `null`, will attempt to load from the default location.","lastModifiedDate":"2024-04-15"},{"lineNumber":197,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":198,"author":{"gitId":"annoy-o-mus"},"content":"    public static void loadMediTrackerData(Path jsonPath) {","lastModifiedDate":"2024-04-13"},{"lineNumber":199,"author":{"gitId":"annoy-o-mus"},"content":"        Path jsonFilePath;","lastModifiedDate":"2024-04-13"},{"lineNumber":200,"author":{"gitId":"annoy-o-mus"},"content":"        Path dailyMedFilePath;","lastModifiedDate":"2024-04-15"},{"lineNumber":201,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonPath \u003d\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":202,"author":{"gitId":"annoy-o-mus"},"content":"            jsonFilePath \u003d MediTrackerFileConfig.getDefaultJsonSaveFilePath();","lastModifiedDate":"2024-04-15"},{"lineNumber":203,"author":{"gitId":"annoy-o-mus"},"content":"            dailyMedFilePath \u003d MediTrackerFileConfig.getDailymedFilePath(null);","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":205,"author":{"gitId":"annoy-o-mus"},"content":"            jsonFilePath \u003d jsonPath;","lastModifiedDate":"2024-04-13"},{"lineNumber":206,"author":{"gitId":"annoy-o-mus"},"content":"            dailyMedFilePath \u003d MediTrackerFileConfig.getDailymedFilePath(jsonPath);","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":208,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":209,"author":{"gitId":"annoy-o-mus"},"content":"        JsonImporter.processMedicationJsonFile(jsonFilePath);","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"annoy-o-mus"},"content":"        loadDailyMedicationData(dailyMedFilePath);","lastModifiedDate":"2024-04-13"},{"lineNumber":211,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":212,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":213,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"annoy-o-mus"},"content":"     * Loads DailyMedication information from a text file under a predefined sub-folder.","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"annoy-o-mus"},"content":"     * This sub-folder name (relative to JSON file) can be found under `MediTrackerFileConfig`.","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"annoy-o-mus"},"content":"     * The sub-folder name is fixed.","lastModifiedDate":"2024-04-15"},{"lineNumber":217,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"annoy-o-mus"},"content":"     * @param dailyMedPath Path of the txt file containing the DailyMedication information.","lastModifiedDate":"2024-04-13"},{"lineNumber":219,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"annoy-o-mus"},"content":"    private static void loadDailyMedicationData(Path dailyMedPath) {","lastModifiedDate":"2024-04-13"},{"lineNumber":221,"author":{"gitId":"annoy-o-mus"},"content":"        MEDILOGGER.info(\"Reading DailyMedication data...\");","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"annoy-o-mus"},"content":"        List\u003cString\u003e dailyMedData;","lastModifiedDate":"2024-04-13"},{"lineNumber":223,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"annoy-o-mus"},"content":"            dailyMedData \u003d Files.readAllLines(dailyMedPath);","lastModifiedDate":"2024-04-13"},{"lineNumber":225,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"IOException. Unable to Read Daily medication data.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":227,"author":{"gitId":"annoy-o-mus"},"content":"            dailyMedData \u003d null;","lastModifiedDate":"2024-04-13"},{"lineNumber":228,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":229,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"Null path supplied. Unable to read daily medication data.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":230,"author":{"gitId":"annoy-o-mus"},"content":"            dailyMedData \u003d null;","lastModifiedDate":"2024-04-13"},{"lineNumber":231,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":232,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":233,"author":{"gitId":"annoy-o-mus"},"content":"        if (dailyMedData \u003d\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":234,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.info(\"No DailyMedication data.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.info(\"Loading default DailyMedication data based on Medication...\");","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"annoy-o-mus"},"content":"            DailyMedicationManager.createDailyMedicationManager();","lastModifiedDate":"2024-04-13"},{"lineNumber":237,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":238,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.info(\"Loading DailyMedication data...\");","lastModifiedDate":"2024-04-15"},{"lineNumber":239,"author":{"gitId":"annoy-o-mus"},"content":"            DailyMedicationManager.importDailyMedicationManager(dailyMedData);","lastModifiedDate":"2024-04-13"},{"lineNumber":240,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":242,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"annoy-o-mus":242}},{"path":"src/main/java/meditracker/storage/JsonExporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONArray;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONException;","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONObject;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":" * A class that converts Medication data to JSON and writes to the target file.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"class JsonExporter {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Logger MEDILOGGER \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"     * Converts the information inside a Medication object into a JSON Object.","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medInfo The Medication object.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The JSON object representing the Medication object.","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"    private static JSONObject convertMedicationInfoToJsonObject(Medication medInfo) {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"        JSONObject medObject \u003d new JSONObject();","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"            medObject.put(ArgumentName.NAME.value, medInfo.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"            medObject.put(ArgumentName.EXPIRATION_DATE.value, medInfo.getExpiryDate());","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"            medObject.put(ArgumentName.REMARKS.value, medInfo.getRemarks());","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"            medObject.put(ArgumentName.QUANTITY.value, medInfo.getQuantity());","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"            medObject.put(ArgumentName.DOSAGE_MORNING.value, medInfo.getDosageMorning());","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"            medObject.put(ArgumentName.DOSAGE_AFTERNOON.value, medInfo.getDosageAfternoon());","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"            medObject.put(ArgumentName.DOSAGE_EVENING.value, medInfo.getDosageEvening());","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"            medObject.put(ArgumentName.REPEAT.value, medInfo.getRepeat());","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"            medObject.put(ArgumentName.DAY_ADDED.value, medInfo.getDayAdded());","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (JSONException e) {","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.severe(e.getMessage());","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.severe(\"Entry not saved to JSON file.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        return medObject;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"     * Populates the JSON array with Medication information in JSON form.","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"     * @return JSON array containing a list of medication in JSON form.","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"    private static JSONArray populateJsonMedicationList() {","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"        JSONArray medicationList \u003d new JSONArray();","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"        int numberOfMedication \u003d MedicationManager.getTotalMedications();","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"        // Start with 1 since the `getMedication` method will be converting from 1-based to 0-based","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"        for (int i \u003d 1; i \u003c\u003d numberOfMedication; i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"            Medication medicationInfo \u003d MedicationManager.getMedication(i);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"            JSONObject medObject \u003d convertMedicationInfoToJsonObject(medicationInfo);","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"            medicationList.put(medObject);","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"        return medicationList;","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"     * Writes the JSON object (starting with the root) to specified file.","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"     * @param root The JSON object that contains all the JSON data.","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"     * @param fileToWrite The Path object containing the abstract pathname of the JSON file.","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"     * @return `true` if the data has been written to successfully, `false` otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"    private static boolean writeJsonData(JSONObject root, Path fileToWrite) {","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"            Files.write(fileToWrite, root.toString().getBytes());","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"            return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.severe(\"Unable to write data to JSON file.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"     * Save all the medication information into a JSON file.","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"     * @param fileToWrite The Path object containing the abstract pathname of the JSON file to write to.","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"     * @return `true` if the information is saved successfully, `false` otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"    static boolean saveMedicationDataToJson(Path fileToWrite) {","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        // Solution on how to write to a JSON file is adapted from:","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"        // https://stackoverflow.com/a/62947435","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"        // and https://javadoc.io/doc/org.json/json/latest/org/json/JSONObject.html","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"        // and https://javadoc.io/doc/org.json/json/latest/org/json/JSONArray.html","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"        JSONObject rootData \u003d new JSONObject();","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"        rootData.put(\"version\", 1.0);","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"        JSONArray medicationList \u003d populateJsonMedicationList();","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"        rootData.put(\"medicationList\", medicationList);","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"        return writeJsonData(rootData, fileToWrite);","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"annoy-o-mus":105}},{"path":"src/main/java/meditracker/storage/JsonImporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONArray;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONException;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONObject;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":" * A class to handle the importing of raw json file data.","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":" * Passes the intermediate data to MedicationManager to process.","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"class JsonImporter {","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Logger MEDILOGGER \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     * Converts information from JSONArray into a List of (String, String) mappings.","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * The JSONArray should contain purely JSONObjects (with no additional nesting),","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     *     and each JSONObject should contain purely keys of type String and values of type String.","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"     * @param jsonArray A JSONArray of JSONObjects containing key-value pairs of type (String, String).","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"     * @return A list of (String, String) key-value pairs. May contain only partial entries if there are entries not","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"     *     in the specified type.","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"    private static List\u003cMap\u003cString, String\u003e\u003e convertJsonArrayToStringMap(JSONArray jsonArray) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        // Solution adapted from","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        // https://stackoverflow.com/questions/32823746/java-code-to-convert-json-into-text-in-key-value-pair","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        int numberOfElements \u003d jsonArray.length();","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"        List\u003cMap\u003cString, String\u003e\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"        for (int i \u003d 0; i \u003c numberOfElements; i++) {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"            Map\u003cString, String\u003e kvMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"            try {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"                JSONObject jsonObject \u003d jsonArray.getJSONObject(i);","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"                Iterator\u003cString\u003e keys \u003d jsonObject.keys();","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"                while (keys.hasNext()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"                    String key \u003d keys.next();","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"                    String value \u003d jsonObject.get(key).toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"                    kvMap.put(key, value);","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"                list.add(kvMap);","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"            } catch (JSONException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"                MEDILOGGER.warning(\"JSONArray to List\u003cMap\u003cString,String\u003e\u003e Error: \" + e.getMessage());","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"                MEDILOGGER.warning(\"Entry skipped.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"        return list;","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"     * Loads from the file and returns JSON data as a raw string.","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"     * The JSON file should only contain one line of data. Any additional lines in the file will be ignored.","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"     * @param jsonPath The Path object specifying the path to the JSON save data.","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The JSON data as a String object. Null if the data cannot be loaded or is empty.","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"    private static String loadRawJsonFileData(Path jsonPath) {","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"        List\u003cString\u003e jsonFileData \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"        // Choice of reader adapted from","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"        // https://www.stackchief.com/blog/FileReader%20vs%20BufferedReader%20vs%20Scanner%20%7C%20Java","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"        // and https://stackoverflow.com/a/20838298","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"            jsonFileData \u003d Files.readAllLines(jsonPath);","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"Unable to read from the JSON save file.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonFileData.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"Empty JSON file.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonFileData.size() \u003e 1) {","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"Multiple lines detected. JSON file should only contain one line of data. \"","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"Only the first line will be loaded. Ignoring other lines.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        return jsonFileData.get(0);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"     * Reads from the JSON file and sends MedicationManager the required information.","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"     * If the JSON file could not be found or if the structure is corrupted and could not be read,","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"     *     a warning will be thrown to the user and the program will run with a clean state.","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medicationJsonPath The Path object specifying the path to the JSON save data.","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"    static void processMedicationJsonFile(Path medicationJsonPath) {","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"        if (medicationJsonPath \u003d\u003d null) {","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"No path specified to read the JSON file.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"        String jsonStringData \u003d loadRawJsonFileData(medicationJsonPath);","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonStringData \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"Empty JSON file.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"annoy-o-mus"},"content":"        // Solution on reading and parsing a JSON file adapted from","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"        // https://stackoverflow.com/q/10926353","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"annoy-o-mus"},"content":"        MEDILOGGER.info(\"Reading JSON file...\");","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"annoy-o-mus"},"content":"        JSONArray medicationList \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"annoy-o-mus"},"content":"            JSONObject rawJsonData \u003d new JSONObject(jsonStringData);","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"annoy-o-mus"},"content":"            medicationList \u003d rawJsonData.getJSONArray(\"medicationList\");","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (JSONException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"JSON Read Error: \" + e.getMessage());","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"annoy-o-mus"},"content":"            MEDILOGGER.warning(\"JSON Save Data not read and processed.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"annoy-o-mus"},"content":"        MEDILOGGER.info(\"JSON file Read. Loading Medication data...\");","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"annoy-o-mus"},"content":"        List\u003cMap\u003cString, String\u003e\u003e medicationStringMap \u003d convertJsonArrayToStringMap(medicationList);","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"annoy-o-mus"},"content":"        MedicationManager.addMedicationFromSaveFile(medicationStringMap);","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"annoy-o-mus":132}},{"path":"src/main/java/meditracker/storage/MediTrackerFileConfig.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":" * A class that holds configuration related properties.","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":" * This is to allow the user to customise certain user preferences. (To be implemented beyond v2.1).","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"public class MediTrackerFileConfig {","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    /* Path to save Medication related information.*/","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    private static final Path DEFAULT_JSON_SAVE_FILE_PATH \u003d Path.of(\"data/MedicationData.json\");","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    /* Folder containing daily medication for the different days.*/","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    /* Folder name is FIXED and should always be RELATIVE to the JSON save file.*/","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"    private static final String DAILY_SAVE_FOLDER_NAME \u003d \"dailymed\";","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    public static Path getDefaultJsonSaveFilePath() {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"        return DEFAULT_JSON_SAVE_FILE_PATH;","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"     * Gets the file name to save DailyMedication data.","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"     * @return file name in the YYYY-MM-DD.txt format.","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"    private static String getDailySaveFileName() {","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"        String date \u003d MediTrackerTime.getCurrentDate().toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"        return (date + \".txt\");","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"     * Returns the Path of the file to save the DailyMedication information to.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"     * This path will be relative to the JSON file.","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"     * @param jsonFilePath The path of the JSON file. If null, it will take the default JSON path.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"     * @return Path of the save file (.txt) for the daily medication.","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"    public static Path getDailymedFilePath(Path jsonFilePath) {","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"        Path jsonFolder;","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonFilePath \u003d\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"            jsonFolder \u003d FileReaderWriter.getFullPathComponent(DEFAULT_JSON_SAVE_FILE_PATH, true);","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"            jsonFolder \u003d FileReaderWriter.getFullPathComponent(jsonFilePath, true);","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonFolder \u003d\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"            return Path.of(DAILY_SAVE_FOLDER_NAME, getDailySaveFileName());","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"            return Path.of(jsonFolder.toString(), DAILY_SAVE_FOLDER_NAME, getDailySaveFileName());","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"annoy-o-mus":54}},{"path":"src/main/java/meditracker/time/MediTrackerTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.time;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.Clock;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.Instant;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.ZoneId;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Date;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.TimeZone;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.InvalidSimulatedTimeException;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"// The time travel implementation is inspired by","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"// https://www.baeldung.com/java-override-system-time","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":" * The single source of truth for time in MediTracker.","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"public class MediTrackerTime {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"    private static boolean isSimulatedTime \u003d false;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    private static Clock simulatedClock \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"     * Returns the current system time, or if the simulation flag is enabled, the simulated time.","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * @return System time. Simulated time if -sim flag is enabled in CLI when program starts.","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"    public static LocalTime getCurrentTime() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"        if (isSimulatedTime) {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"            return LocalTime.now(simulatedClock);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"            return LocalTime.now();","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"     * Gets the current system date, or if the simulation flag is enabled, the simulated date.","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"     * @return System date. Simulated date if -sim flag is enabled in CLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"    public static LocalDate getCurrentDate() {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"        if (isSimulatedTime) {","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"            return LocalDate.now(simulatedClock);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"            return LocalDate.now();","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"     * Sets up the program up to get the time from either the simulated time or the system time.","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"     * The simulated time will only override the system time if there is a -sim flag and a valid","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"     *     date and time format is provided (as per `time.Instant.parse`).","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"     * @param cliInput The input associated with the `-sim` flag.","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws InvalidSimulatedTimeException When the format of the input does not match that required by the","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"     *     `time.Instant.parse` method.","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"    private static void setMediTrackerTime(String cliInput) throws InvalidSimulatedTimeException {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"        Instant setTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"            setTime \u003d Instant.parse(cliInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"            throw new InvalidSimulatedTimeException(\"Invalid Date and Time Format!\");","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"        assert (setTime !\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"        // https://stackoverflow.com/a/11399538","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"        TimeZone tz \u003d TimeZone.getTimeZone(ZoneId.systemDefault());","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"        int offset \u003d tz.getOffset(new Date().getTime());","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"        setTime \u003d setTime.minusMillis(offset);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"        simulatedClock \u003d Clock.fixed(setTime, ZoneId.systemDefault().normalized());","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"        isSimulatedTime \u003d true;","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.now(simulatedClock);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"        System.out.println(\"Developer Feature: Simulated Time Enabled. The time is now fixed at \" + localDateTime);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"     * Process the CLI input to check for the need to set up simulated time.","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"     * @param cliArguments The commandline arguments.","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws InvalidSimulatedTimeException If there is no argument provided with the `-sim` flag.","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"    public static void setUpSimulatedTime(String[] cliArguments) throws InvalidSimulatedTimeException {","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"        Iterator\u003cString\u003e stringIterator \u003d Arrays.stream(cliArguments).iterator();","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"        while (stringIterator.hasNext()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"            String s \u003d stringIterator.next();","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"            if (s.equals(\"-sim\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"                try {","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"                    String dateTimeString \u003d stringIterator.next();","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"                    MediTrackerTime.setMediTrackerTime(dateTimeString);","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"                    return;","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"                } catch (NoSuchElementException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"                    throw new InvalidSimulatedTimeException(\"Empty field after -sim flag!\");","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"annoy-o-mus":104}},{"path":"src/main/java/meditracker/time/Period.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.time;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"// @@author T0nyLin","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":" * Period enum to represent different time Periods and their corresponding TimeRange","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"public enum Period {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"    MORNING(\"M\", LocalTime.MIDNIGHT, LocalTime.NOON.minusNanos(1)),","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"    AFTERNOON(\"A\", LocalTime.NOON, LocalTime.of(18, 0).minusNanos(1)),","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"    EVENING(\"E\", LocalTime.of(18, 0), LocalTime.MIDNIGHT.minusNanos(1)),","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"    UNKNOWN,","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"    NONE;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"    public final String badge;","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    public final TimeRange timeRange;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     * Constructs default Period with null timeRange attribute","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"    Period() {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"        timeRange \u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"        badge \u003d \"-\";","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"     * Constructs Period with a start and end LocalTime","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"     * @param badge Single character badge to represent the period","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"     * @param start time of the period","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"     * @param end time of the period","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"    Period(String badge, LocalTime start, LocalTime end) {","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        this.timeRange \u003d new TimeRange(start, end);","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"        this.badge \u003d badge;","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"     * Gets the time period based on which boolean value is set","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"     * @param isMorning Boolean value for if it is morning","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"     * @param isAfternoon Boolean value for if it is afternoon","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"     * @param isEvening Boolean value for if it is evening","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"     * @return Enum value for which time Period it is","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"    public static Period getPeriod(boolean isMorning, boolean isAfternoon, boolean isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"        if (!isMorning \u0026\u0026 !isAfternoon \u0026\u0026 !isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"            return NONE;","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"        } else if (isMorning \u0026\u0026 !isAfternoon \u0026\u0026 !isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"            return MORNING;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"        } else if (!isMorning \u0026\u0026 isAfternoon \u0026\u0026 !isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"            return AFTERNOON;","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"        } else if (!isMorning \u0026\u0026 !isAfternoon \u0026\u0026 isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"            return EVENING;","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"        return UNKNOWN;","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"     * Gets the time period based on the given time","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"     * @param time LocalTime object representing the time to check","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"     * @return Enum value for which time Period it is","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"    public static Period getPeriod(LocalTime time) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"        if (MORNING.timeRange.isWithinTimeRange(time)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"            return MORNING;","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"        } else if (AFTERNOON.timeRange.isWithinTimeRange(time)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"            return AFTERNOON;","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"        } else if (EVENING.timeRange.isWithinTimeRange(time)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"            return EVENING;","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"        return UNKNOWN;","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"    public static Period getPeriod(String badge) {","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"        for (Period period : Period.values()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"            if (period.badge.equals(badge)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"                return period;","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"        return UNKNOWN;","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"// @@author","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"T0nyLin":82,"wenenhoe":4}},{"path":"src/main/java/meditracker/time/TimeRange.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.time;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" * Manages a start and end time, to maintain information on a time range.","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"public class TimeRange {","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"    private final LocalTime start;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"    private final LocalTime end;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a TimeRange using the start and end time.","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"     * @param start Start time of TimeRange.","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"     * @param end End time of TimeRange.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    public TimeRange(LocalTime start, LocalTime end) {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     * Checks whether a given time is within the time range.","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     * @param time Given time to check the range.","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * @return True if it is within the time range, else False.","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    public boolean isWithinTimeRange(LocalTime time) {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        boolean isWithinStartAndEnd \u003d time.isAfter(start) \u0026\u0026 time.isBefore(end);","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        return start.equals(time) || end.equals(time) || isWithinStartAndEnd;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":33}},{"path":"src/main/java/meditracker/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.CommandName;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.SearchResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":" * The Ui class handles user interface-related operations.","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":" * It includes methods to display welcome messages, exit messages, and read user commands.","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"public class Ui {","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    static Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"     * Prevents defaulting to the public constructor","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"     * that allows instantiation of the Ui class","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"    private Ui() {}","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"     * Displays the welcome message and introduction name.","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"        printIntroName();","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"        showWelcome();","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"     * Prints the introduction name banner.","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"    public static void printIntroName() {","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"        // Solution below adapted by http://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dType%20Something%20","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"                    __      ______                      __                      \"","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"                + \" /\u0027\\\\_/`\\\\           /\\\\ \\\\  __/\\\\__  _\\\\                    /\\\\ \\\\                     \"","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"                + \"/\\\\      \\\\     __   \\\\_\\\\ \\\\/\\\\_\\\\/_/\\\\ \\\\/ _ __    __      ___\\\\ \\\\ \\\\/\u0027\\\\      __   _ __  \"","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"                + \"\\\\ \\\\ \\\\__\\\\ \\\\  /\u0027__`\\\\ /\u0027_` \\\\/\\\\ \\\\ \\\\ \\\\ \\\\/\\\\`\u0027__\\\\/\u0027__`\\\\   /\u0027___\\\\ \\\\ , \u003c    /\u0027__`\\\\/\\\\`\u0027__\\\\\"","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"                + \" \\\\ \\\\ \\\\_/\\\\ \\\\/\\\\  __//\\\\ \\\\L\\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\//\\\\ \\\\L\\\\.\\\\_/\\\\ \\\\__/\\\\ \\\\ \\\\\\\\`\\\\ /\\\\\"","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"                + \"  __/\\\\\"","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"                + \" \\\\ \\\\/ \"","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"                + \"  \\\\ \\\\_\\\\\\\\ \\\\_\\\\ \\\\____\\\\ \\\\___,_\\\\ \\\\_\\\\ \\\\ \\\\_\\\\ \\\\_\\\\\\\\ \\\\__/.\\\\_\\\\ \\\\____\\\\\\\\ \\\\_\\\\ \\\\_\\\\ \"","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"                + \"\\\\____\\\\\"","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"                + \"\\\\ \\\\_\\\\ \"","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"                + \"   \\\\/_/ \\\\/_/\\\\/____/\\\\/__,_ /\\\\/_/  \\\\/_/\\\\/_/ \\\\/__/\\\\/_/\\\\/____/ \\\\/_/\\\\/_/\\\\/____/ \\\\/_/ \"","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"                + \"                                                                                \"","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"                + \"                                                                                \");","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"     * Displays a line divider.","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"    public static void showLine() {","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"nickczh"},"content":"     * Displays the welcome message.","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"    public static void showWelcome() {","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Welcome to MediTracker, your best companion to track your medicine intake.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(\"Let\u0027s begin tracking!\");","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"        System.out.println();","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":78,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":79,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"nickczh"},"content":"     * Displays the exit message.","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"nickczh"},"content":"    public static void showExitMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Thank you for using MediTracker. Hope to see you again!\");","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"     * Prints success message onto console. Prepends success message with","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"     * \u003ccode\u003eSUCCESS: \u003c/code\u003e.","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"     * @param message Success message to be appended to.","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"    public static void showSuccessMessage(String message) {","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"        System.out.print(\"SUCCESS: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(message);","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"     * Prints error message onto console. Prepends error message with","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"     * \u003ccode\u003eERROR: \u003c/code\u003e.","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"     * @param message Error message to be appended to.","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"    public static void showErrorMessage(String message) {","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"        System.out.print(\"ERROR: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(message);","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"     * Prints error message onto console. Prepends error message with","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"     * \u003ccode\u003eERROR: \u003c/code\u003e.","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"     * @param throwable Error throwable to get message from.","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"    public static void showErrorMessage(Throwable throwable) {","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"        showErrorMessage(throwable.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"     * Gets and prints the help message for the command specified.","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"     * @param commandName Command help message to print.","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"    public static void showHelpMessage(CommandName commandName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"        String helpMessage \u003d ArgumentHelper.getHelpMessage(commandName);","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(helpMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"     * Prints warning message onto console. Prepends warning message with","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"     * \u003ccode\u003eWARNING: \u003c/code\u003e.","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"     * @param message Warning message to be appended to.","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"    public static void showWarningMessage(String message) {","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"        System.out.print(\"WARNING: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(message);","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"     * Prints info message onto console. Prepends info message with","lastModifiedDate":"2024-04-15"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"     * \u003ccode\u003eINFO: \u003c/code\u003e.","lastModifiedDate":"2024-04-15"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"     * @param message Info message to be appended to.","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"    public static void showInfoMessage(String message) {","lastModifiedDate":"2024-04-07"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"        System.out.print(\"INFO: \");","lastModifiedDate":"2024-04-07"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(message);","lastModifiedDate":"2024-04-07"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":150,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"nickczh"},"content":"     * Reads a command from the user input, prompting with \"meditracker\u003e \".","lastModifiedDate":"2024-04-14"},{"lineNumber":152,"author":{"gitId":"nickczh"},"content":"     * This method continuously waits and reads user input until a command is entered.","lastModifiedDate":"2024-04-14"},{"lineNumber":153,"author":{"gitId":"nickczh"},"content":"     * If there is no more input (end of stream), the method will display an exit message and terminate the program.","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"nickczh"},"content":"     * @return The input entered by the user. If the program terminates due to no more input, null is returned.","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"nickczh"},"content":"    public static String readCommand() {","lastModifiedDate":"2024-03-23"},{"lineNumber":158,"author":{"gitId":"wenenhoe"},"content":"        System.out.print(\"meditracker\u003e \");","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"nickczh"},"content":"        try {","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"nickczh"},"content":"            return input.nextLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":161,"author":{"gitId":"nickczh"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"nickczh"},"content":"            Ui.showExitMessage();","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"nickczh"},"content":"            System.exit(0);","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"nickczh"},"content":"            return null;","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":168,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"e0958902"},"content":"     * Prints the medication list","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"e0958902"},"content":"     * @param medications The list of medications","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"e0958902"},"content":"     * @param \u003cT\u003e Generic class for code reusability","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"nickczh"},"content":"    public static \u003cT\u003e void printMedsList(List\u003cT\u003e medications) {","lastModifiedDate":"2024-03-23"},{"lineNumber":175,"author":{"gitId":"T0nyLin"},"content":"        for (T medication : medications) {","lastModifiedDate":"2024-03-15"},{"lineNumber":176,"author":{"gitId":"T0nyLin"},"content":"            int numbering \u003d medications.indexOf(medication) + 1;","lastModifiedDate":"2024-03-15"},{"lineNumber":177,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"\\t\" + numbering + \". \" + medication);","lastModifiedDate":"2024-03-15"},{"lineNumber":178,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":179,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":182,"author":{"gitId":"e0958902"},"content":"     * Prints all the medications in the medication list.","lastModifiedDate":"2024-04-07"},{"lineNumber":183,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":184,"author":{"gitId":"e0958902"},"content":"     * @param medications Contains the list of medications.","lastModifiedDate":"2024-04-07"},{"lineNumber":185,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":186,"author":{"gitId":"e0958902"},"content":"    public static void printMedicationList(List\u003cMedication\u003e medications) {","lastModifiedDate":"2024-04-07"},{"lineNumber":187,"author":{"gitId":"e0958902"},"content":"        int totalMedications \u003d MedicationManager.getTotalMedications();","lastModifiedDate":"2024-04-07"},{"lineNumber":188,"author":{"gitId":"e0958902"},"content":"        if (totalMedications \u003e 0) {","lastModifiedDate":"2024-04-07"},{"lineNumber":189,"author":{"gitId":"e0958902"},"content":"            String headerFormat \u003d \"   %-30s %-10s %-12s %-30s\";","lastModifiedDate":"2024-04-13"},{"lineNumber":190,"author":{"gitId":"e0958902"},"content":"            String name \u003d \"Name\";","lastModifiedDate":"2024-04-07"},{"lineNumber":191,"author":{"gitId":"e0958902"},"content":"            String quantity \u003d \"Quantity\";","lastModifiedDate":"2024-04-07"},{"lineNumber":192,"author":{"gitId":"e0958902"},"content":"            String expiryDate \u003d \"Expiry\";","lastModifiedDate":"2024-04-07"},{"lineNumber":193,"author":{"gitId":"e0958902"},"content":"            String remarks \u003d \"Remarks\";","lastModifiedDate":"2024-04-07"},{"lineNumber":194,"author":{"gitId":"e0958902"},"content":"            System.out.println(\"You have \" + totalMedications + \" medications listed below.\");","lastModifiedDate":"2024-04-07"},{"lineNumber":195,"author":{"gitId":"e0958902"},"content":"            System.out.printf(headerFormat + System.lineSeparator(), name, quantity, expiryDate, remarks);","lastModifiedDate":"2024-04-11"},{"lineNumber":196,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":197,"author":{"gitId":"e0958902"},"content":"            for (Medication medication : medications) {","lastModifiedDate":"2024-04-07"},{"lineNumber":198,"author":{"gitId":"e0958902"},"content":"                int numbering \u003d medications.indexOf(medication) + 1;","lastModifiedDate":"2024-04-07"},{"lineNumber":199,"author":{"gitId":"e0958902"},"content":"                String bodyFormat \u003d \"%-30.30s %-10.1f %-12s %-30s \";","lastModifiedDate":"2024-04-13"},{"lineNumber":200,"author":{"gitId":"e0958902"},"content":"                System.out.printf(numbering + \". \" + bodyFormat + System.lineSeparator(),","lastModifiedDate":"2024-04-11"},{"lineNumber":201,"author":{"gitId":"e0958902"},"content":"                        medication.getName(),","lastModifiedDate":"2024-04-07"},{"lineNumber":202,"author":{"gitId":"e0958902"},"content":"                        medication.getQuantity(),","lastModifiedDate":"2024-04-07"},{"lineNumber":203,"author":{"gitId":"e0958902"},"content":"                        medication.getExpiryDate(),","lastModifiedDate":"2024-04-07"},{"lineNumber":204,"author":{"gitId":"e0958902"},"content":"                        medication.getRemarks());","lastModifiedDate":"2024-04-07"},{"lineNumber":205,"author":{"gitId":"e0958902"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":206,"author":{"gitId":"e0958902"},"content":"            System.out.println(\"Your list of medications has been successfully shown!\");","lastModifiedDate":"2024-04-07"},{"lineNumber":207,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":208,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":209,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":210,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"e0958902"},"content":"     * Prints a specific medication in the medication list","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"e0958902"},"content":"     * @param medication Contains a medication in the medication list","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"e0958902"},"content":"    public static void printSpecificMed(Medication medication) {","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"e0958902"},"content":"        System.out.printf(\"Name: %s\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"e0958902"},"content":"                        \"Quantity: %.1f\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"e0958902"},"content":"                        \"Expiry Date: %s\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"e0958902"},"content":"                        \"Remarks: %s\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"e0958902"},"content":"                        \"Morning Dosage: %.1f\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"e0958902"},"content":"                        \"Afternoon Dosage: %.1f\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":222,"author":{"gitId":"e0958902"},"content":"                        \"Evening Dosage: %.1f\" + System.lineSeparator() +","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"e0958902"},"content":"                        \"Repeat: %d\" + System.lineSeparator(),","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"e0958902"},"content":"                medication.getName(),","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"e0958902"},"content":"                medication.getQuantity(),","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"e0958902"},"content":"                medication.getExpiryDate(),","lastModifiedDate":"2024-04-03"},{"lineNumber":227,"author":{"gitId":"e0958902"},"content":"                medication.getRemarks(),","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"e0958902"},"content":"                medication.getDosageMorning(),","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"e0958902"},"content":"                medication.getDosageAfternoon(),","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"e0958902"},"content":"                medication.getDosageEvening(),","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"e0958902"},"content":"                medication.getRepeat(),","lastModifiedDate":"2024-04-03"},{"lineNumber":232,"author":{"gitId":"e0958902"},"content":"                medication.getDayAdded());","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"e0958902"},"content":"        System.out.println();","lastModifiedDate":"2024-04-10"},{"lineNumber":234,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":235,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"kyuichyi"},"content":"     * Prints when there are no search results found","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"nickczh"},"content":"    public static void showNoSearchResultsMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":240,"author":{"gitId":"kyuichyi"},"content":"        System.out.println(\"No search results found!\");","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":242,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":243,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"kyuichyi"},"content":"     * Prints when the library is corrupted","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"kyuichyi"},"content":"    public static void showLibraryIsCorruptedMessage() {","lastModifiedDate":"2024-04-01"},{"lineNumber":248,"author":{"gitId":"kyuichyi"},"content":"        System.out.println(\"The library is corrupted! Please download the library from the website.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":249,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":250,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":251,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"kyuichyi"},"content":"     * Prints the search results","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"kyuichyi"},"content":"     * @param searchResults list of search results","lastModifiedDate":"2024-04-02"},{"lineNumber":255,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"nickczh"},"content":"    public static void showSearchResults(List\u003cSearchResult\u003e searchResults) {","lastModifiedDate":"2024-03-23"},{"lineNumber":257,"author":{"gitId":"kyuichyi"},"content":"        System.out.println(\"Here are the search results:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":258,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":259,"author":{"gitId":"kyuichyi"},"content":"        for (int i \u003d 0; i \u003c searchResults.size(); i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":260,"author":{"gitId":"kyuichyi"},"content":"            System.out.println((i + 1) + \". \" + searchResults.get(i));","lastModifiedDate":"2024-03-20"},{"lineNumber":261,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":262,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":263,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":264,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"kyuichyi"},"content":"     * Prints when there is no keyword provided for search command","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":267,"author":{"gitId":"kyuichyi"},"content":"    public static void showSearchKeywordNotFoundMessage() {","lastModifiedDate":"2024-04-01"},{"lineNumber":268,"author":{"gitId":"kyuichyi"},"content":"        System.out.println(\"You have not provided a keyword to search for! Please try again.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":269,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":270,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"nickczh":91,"e0958902":64,"annoy-o-mus":1,"T0nyLin":14,"kyuichyi":35,"wenenhoe":65}},{"path":"src/test/java/meditracker/MediTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"class MediTrackerTest {","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"nickczh":1,"annoy-o-mus":1,"-":10}},{"path":"src/test/java/meditracker/argument/ArgumentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentListTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    private final ArgumentList testArgumentList \u003d new ArgumentList(","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"            new NameArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"            new DosageMorningArgument(false),","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"            new QuantityArgument(false)","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    void argumentList_flagCollision_assertionError() {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"        Argument testArgument1 \u003d new Argument(","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.LIST_TYPE,","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"                \"-l\",","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"                \"\",","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"                true,","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"                true) {};","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"        Argument testArgument2 \u003d new Argument(","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.LIST_INDEX,","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"                \"-l\",","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"                \"\",","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"                true,","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"                true) {};","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(AssertionError.class, () -\u003e new ArgumentList(testArgument1, testArgument2));","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"    void parse_properArgumentString_argumentValuesObtained() {","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -dM %s -q %s\", name, dosage, quantity);","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        } catch (HelpInvokedException | ArgumentException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE_MORNING), dosage);","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    void parse_missingArgumentSpecified_argumentException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -dM %s\", name, dosage);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(ArgumentException.class, () -\u003e testArgumentList.parse(testArgumentString));","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"wenenhoe":64}},{"path":"src/test/java/meditracker/argument/ArgumentParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentParserTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    private final ArgumentList testArgumentList \u003d new ArgumentList(","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"            new NameArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"            new QuantityArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"            new DosageMorningArgument(false),","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"            new RemarksArgument(false)","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_validArgumentString_parsesCorrectly() {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -dM %s -q %s -r %s\",","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"                remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        } catch (HelpInvokedException | ArgumentException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE_MORNING), dosage);","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.REMARKS), remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_outOfOrderArgument_parsesCorrectly() {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -r %s -q %s -dM %s\",","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"                remarks,","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"                dosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        } catch (HelpInvokedException | ArgumentException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE_MORNING), dosage);","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.REMARKS), remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_additionalSpacesInArguments_parsesCorrectly() {","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n      %s     -r    %s    -q     %s  -dM  %s    \",","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"                remarks,","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"                dosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"        } catch (HelpInvokedException | ArgumentException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE_MORNING), dosage);","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.REMARKS), remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_duplicateArgumentFlags_argumentException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -dM %s -q %s -r %s -n %s\",","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"                remarks,","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"                name);","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(ArgumentException.class, () -\u003e testArgumentList.parse(testArgumentString));","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_missingArgumentFlags_argumentException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -q %s -r %s\",","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"                remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(ArgumentException.class, () -\u003e testArgumentList.parse(testArgumentString));","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_missingArgumentValues_argumentException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -dM %s -q %s -r\",","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"                quantity);","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(ArgumentException.class, () -\u003e testArgumentList.parse(testArgumentString));","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_unknownArgumentFlags_argumentException() {","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -m -dM %s -a -q %s -r %s -e\",","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"                remarks);","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(ArgumentException.class, () -\u003e testArgumentList.parse(testArgumentString));","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"wenenhoe":152}},{"path":"src/test/java/meditracker/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"// @@author nickczh","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"import meditracker.time.MediTrackerTime;","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"class AddCommandTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"    public void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"    // 3 part format","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"    // unitBeingTested_descriptionOfTestInputs_expectedOutcome","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"    void execute_correctExampleInput_expectOneMedication()","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"            throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"        // setup lines","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"        String inputString \u003d \"add -n Medication A -q 5000 -e 2025-07-01 \"","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"                + \"-dM 500 -dA 250 -dE 100 -r cause_dizziness -rep 1\";","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"        AddCommand command \u003d new AddCommand(inputString);","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"        // actual test","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"        assertEquals(1, MedicationManager.getTotalMedications());","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"    void execute_invalidCharactersInMedicationName_expectZeroMedication()","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"            throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"        // setup lines","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"        String inputString \u003d \"add -n Medication_A -q 60 -e 2025-07-01 -dM 500.0 -dA 250.0 -dE 100.0\"","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"                + \"-r cause_dizziness -rep 1\";","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"        AddCommand command \u003d new AddCommand(inputString);","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"        command.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"        // actual test","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"        assertEquals(0, MedicationManager.getTotalMedications());","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"    void execute_emptyMedicationName_expectZeroMedication()","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"            throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"        // setup lines","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"        String inputString \u003d \"add -n \\\" \\\" -q 60 -e 2025-07-01 -dM 500.0 -dA 250.0 -dE 100.0\"","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"                + \"-r cause_dizziness -rep 1\";","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"nickczh"},"content":"        AddCommand command \u003d new AddCommand(inputString);","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"        command.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"nickczh"},"content":"        // actual test","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"        assertEquals(0, MedicationManager.getTotalMedications());","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"nickczh"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"nickczh"},"content":"    void createMedication_correctExampleInput_success()","lastModifiedDate":"2024-04-10"},{"lineNumber":78,"author":{"gitId":"nickczh"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"nickczh"},"content":"        // setup lines","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"nickczh"},"content":"        String inputString \u003d \"add -n Medication A -q 5000 -e 2025-07-01 -dM 500 -dA 250 -dE 100 \"","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"                + \"-r cause_dizziness -rep 1\";","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"nickczh"},"content":"        AddCommand command \u003d new AddCommand(inputString);","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"nickczh"},"content":"        // Get the current date and the day of the year","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"nickczh"},"content":"        LocalDate currentDate \u003d MediTrackerTime.getCurrentDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"nickczh"},"content":"        int dayAdded \u003d currentDate.getDayOfYear();","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"nickczh"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"nickczh"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2025-07-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"nickczh"},"content":"        Medication medication \u003d new Medication(\"Medication A\",","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"nickczh"},"content":"                5000.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"nickczh"},"content":"                500.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"nickczh"},"content":"                250.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"nickczh"},"content":"                100.0,","lastModifiedDate":"2024-04-11"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"nickczh"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"nickczh"},"content":"                1, dayAdded);","lastModifiedDate":"2024-04-10"},{"lineNumber":98,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"nickczh"},"content":"        // actual test","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"nickczh"},"content":"        assertEquals(medication, command.createMedication());","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"nickczh"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"nickczh"},"content":"    void createMedication_incorrectQuantityInput_exceptionThrown()","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"nickczh"},"content":"            throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"nickczh"},"content":"        // setup lines","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"nickczh"},"content":"        String inputString \u003d \"add -n Medication A -q %%% -e 2025-07-01 -dM 500 -dA 250 -dE 100 \"","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"nickczh"},"content":"                + \"-r cause_dizziness -rep 1\";","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"nickczh"},"content":"        AddCommand command \u003d new AddCommand(inputString);","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":111,"author":{"gitId":"nickczh"},"content":"        // actual test","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"nickczh"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"nickczh"},"content":"            assertEquals(new Medication(), command.createMedication());","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"nickczh"},"content":"            fail();","lastModifiedDate":"2024-04-10"},{"lineNumber":115,"author":{"gitId":"nickczh"},"content":"        } catch (MediTrackerException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"nickczh"},"content":"            assertEquals(\"Unable to parse String \u0027%%%\u0027 into double.\", e.getMessage());","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"nickczh"},"content":"// @@author","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"nickczh":119,"wenenhoe":1}},{"path":"src/test/java/meditracker/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectMedicationDeleted()","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2025-07-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"                60.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"                87);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.checkForDaily(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"-l 1\";","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        DeleteCommand command \u003d new DeleteCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"e0958902"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e MedicationManager.getMedication(1));","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"    void execute_erroneousListIndex_errorMessagePrinted()","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        //Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(new PrintStream(output)); // set up capture stream","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"        String expectedOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        new DeleteCommand(\"-l \u0027\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        String actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        new DeleteCommand(\"-l string\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"        new DeleteCommand(\"-l 4 [-h]\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(originalOut); // restore stream","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"e0958902":8,"nickczh":2,"T0nyLin":2,"kyuichyi":2,"wenenhoe":75}},{"path":"src/test/java/meditracker/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.DosageMorningArgument;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.NameArgument;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.QuantityArgument;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"import meditracker.argument.RemarksArgument;","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":" * This test file is to perform tests on ListCommands","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"class ListCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"    private final ArgumentList testArgumentList \u003d new ArgumentList(","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"            new NameArgument(false),","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"            new QuantityArgument(false),","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"            new DosageMorningArgument(false),","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"            new RemarksArgument(false)","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    );","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"e0958902"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"e0958902"},"content":"    @AfterEach","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"    void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"e0958902"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"    void execute_listCommand_expect() throws MediTrackerException {","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"e0958902"},"content":"        String medicationName \u003d \"Medication_B\";","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2025-08-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"e0958902"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"e0958902"},"content":"                medicationName,","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"                30.0,","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"e0958902"},"content":"                \"for_flu_or_allergy\",","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"                87","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"e0958902"},"content":"        assert MedicationManager.getTotalMedications() \u003e 0 : \"Total medications in medication must be greater \"","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"e0958902"},"content":"                + \"than 0 after adding in\" + medicationName;","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"e0958902"},"content":"        Medication addedMedication \u003d MedicationManager.getMedication(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"e0958902"},"content":"        assertEquals(addedMedication.getName(), medicationName);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"e0958902"},"content":"    // Solution below adapted by https://stackoverflow.com/questions/32241057/","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"e0958902"},"content":"    void execute_listAllMedications_expectToShowAllMedicationsInMedicationList()","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"e0958902"},"content":"        String medicationNameOne \u003d \"Dexamethasone\";","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"e0958902"},"content":"        Double medicationQuantityOne \u003d 20.0;","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"e0958902"},"content":"        String expiryDateOne \u003d \"2025-01-31\";","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDateOne \u003d LocalDate.parse(expiryDateOne, dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"e0958902"},"content":"        String medicationRemarksOne \u003d \"aggression, weight gain, nausea\";","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"e0958902"},"content":"        Medication medicationOne \u003d new Medication(","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"e0958902"},"content":"                medicationNameOne,","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"e0958902"},"content":"                medicationQuantityOne,","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":88,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":90,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDateOne,","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"e0958902"},"content":"                medicationRemarksOne,","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"e0958902"},"content":"                1,","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"e0958902"},"content":"                94);","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"e0958902"},"content":"        String medicationNameTwo \u003d \"Dextromethorphan\";","lastModifiedDate":"2024-04-10"},{"lineNumber":95,"author":{"gitId":"e0958902"},"content":"        Double medicationQuantityTwo \u003d 30.0;","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"e0958902"},"content":"        String expiryDateTwo \u003d \"2026-02-28\";","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDateTwo \u003d LocalDate.parse(expiryDateTwo, dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"e0958902"},"content":"        String medicationRemarksTwo \u003d \"restlessness, nausea\";","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"e0958902"},"content":"        Medication medicationTwo \u003d new Medication(","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"e0958902"},"content":"                medicationNameTwo,","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"e0958902"},"content":"                medicationQuantityTwo,","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDateTwo,","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"e0958902"},"content":"                medicationRemarksTwo,","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"e0958902"},"content":"                1,","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"e0958902"},"content":"                95);","lastModifiedDate":"2024-04-10"},{"lineNumber":109,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medicationOne);","lastModifiedDate":"2024-04-10"},{"lineNumber":111,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medicationTwo);","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"e0958902"},"content":"        assert MedicationManager.getTotalMedications() \u003e 1 : \"Total medications in medication must be greater \"","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"e0958902"},"content":"                + \"than 0 after adding in\" + medicationNameOne + \"and\" + medicationNameTwo;","lastModifiedDate":"2024-04-15"},{"lineNumber":115,"author":{"gitId":"e0958902"},"content":"        // Store current System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"e0958902"},"content":"        PrintStream oldOut \u003d System.out;","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"e0958902"},"content":"        // Create a ByteArrayOutputStream to get the output from the call to print","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"e0958902"},"content":"        ByteArrayOutputStream content \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-10"},{"lineNumber":120,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":121,"author":{"gitId":"e0958902"},"content":"        // Change System.out to point out to our stream","lastModifiedDate":"2024-04-10"},{"lineNumber":122,"author":{"gitId":"e0958902"},"content":"        System.setOut(new PrintStream(content));","lastModifiedDate":"2024-04-10"},{"lineNumber":123,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":124,"author":{"gitId":"e0958902"},"content":"        String inputString \u003d \"list -t all\";","lastModifiedDate":"2024-04-10"},{"lineNumber":125,"author":{"gitId":"e0958902"},"content":"        ListCommand command \u003d new ListCommand(inputString);","lastModifiedDate":"2024-04-10"},{"lineNumber":126,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":127,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":128,"author":{"gitId":"e0958902"},"content":"        // Reset back to System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":129,"author":{"gitId":"e0958902"},"content":"        System.setOut(oldOut);","lastModifiedDate":"2024-04-10"},{"lineNumber":130,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":131,"author":{"gitId":"e0958902"},"content":"        // Output contains the content from the stream","lastModifiedDate":"2024-04-10"},{"lineNumber":132,"author":{"gitId":"e0958902"},"content":"        String output \u003d content.toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":133,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":134,"author":{"gitId":"e0958902"},"content":"        String title \u003d \"You have \" + MedicationManager.getTotalMedications() + \" medications listed below.\"","lastModifiedDate":"2024-04-10"},{"lineNumber":135,"author":{"gitId":"e0958902"},"content":"                + System.lineSeparator();","lastModifiedDate":"2024-04-10"},{"lineNumber":136,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"e0958902"},"content":"        String headerFormat \u003d \"   %-30s %-10s %-12s %-30s%n\";","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"e0958902"},"content":"        String bodyFormat \u003d \"%-30.30s %-10.1f %-12s %-30s %n\";","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":140,"author":{"gitId":"e0958902"},"content":"        String name \u003d \"Name\";","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"e0958902"},"content":"        String quantity \u003d \"Quantity\";","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"e0958902"},"content":"        String expiryDate \u003d \"Expiry\";","lastModifiedDate":"2024-04-10"},{"lineNumber":143,"author":{"gitId":"e0958902"},"content":"        String remarks \u003d \"Remarks\";","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"e0958902"},"content":"        String successMessage \u003d \"Your list of medications has been successfully shown!\";","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":146,"author":{"gitId":"e0958902"},"content":"        String body \u003d String.format(title","lastModifiedDate":"2024-04-15"},{"lineNumber":147,"author":{"gitId":"e0958902"},"content":"                        + headerFormat","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"e0958902"},"content":"                        + \"1. \" + bodyFormat","lastModifiedDate":"2024-04-15"},{"lineNumber":149,"author":{"gitId":"e0958902"},"content":"                        + \"2. \" + bodyFormat","lastModifiedDate":"2024-04-15"},{"lineNumber":150,"author":{"gitId":"e0958902"},"content":"                        + successMessage","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"e0958902"},"content":"                        + System.lineSeparator(),","lastModifiedDate":"2024-04-15"},{"lineNumber":152,"author":{"gitId":"e0958902"},"content":"                name, quantity, expiryDate, remarks,","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"e0958902"},"content":"                medicationNameOne, medicationQuantityOne, expiryDateOne, medicationRemarksOne,","lastModifiedDate":"2024-04-14"},{"lineNumber":154,"author":{"gitId":"e0958902"},"content":"                medicationNameTwo, medicationQuantityTwo, expiryDateTwo, medicationRemarksTwo);","lastModifiedDate":"2024-04-14"},{"lineNumber":155,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":156,"author":{"gitId":"e0958902"},"content":"        assertEquals(output, body);","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":159,"author":{"gitId":"T0nyLin"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"wenenhoe"},"content":"    void listAllMedication_extraFlagAfterCommand_showErrorMessage() throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"T0nyLin"},"content":"        PrintStream oldOut \u003d System.out;","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":163,"author":{"gitId":"T0nyLin"},"content":"        // Create a ByteArrayOutputStream to get the output from the call to print","lastModifiedDate":"2024-04-14"},{"lineNumber":164,"author":{"gitId":"T0nyLin"},"content":"        ByteArrayOutputStream content \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"T0nyLin"},"content":"        // Change System.out to point out to our stream","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(new PrintStream(content));","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"T0nyLin"},"content":"        // Execute the view by name command","lastModifiedDate":"2024-04-14"},{"lineNumber":170,"author":{"gitId":"T0nyLin"},"content":"        String inputString \u003d \"list -t all -a\";","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"T0nyLin"},"content":"        ListCommand command \u003d new ListCommand(inputString);","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"T0nyLin"},"content":"        command.execute();","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"T0nyLin"},"content":"        // Reset back to System.out","lastModifiedDate":"2024-04-14"},{"lineNumber":175,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(oldOut);","lastModifiedDate":"2024-04-14"},{"lineNumber":176,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":177,"author":{"gitId":"T0nyLin"},"content":"        // Output contains the content from the stream","lastModifiedDate":"2024-04-14"},{"lineNumber":178,"author":{"gitId":"T0nyLin"},"content":"        String output \u003d content.toString();","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"T0nyLin"},"content":"        assertTrue(output.contains(\"ERROR: List type -\u003e \\\"AFTERNOON\\\" not compatible with \\\"list -t all\\\" command.\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":181,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":182,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":183,"author":{"gitId":"T0nyLin"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"wenenhoe"},"content":"    void listAllMedication_extraWordsAfterCommand_showErrorMessage() throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":185,"author":{"gitId":"T0nyLin"},"content":"        PrintStream oldOut \u003d System.out;","lastModifiedDate":"2024-04-14"},{"lineNumber":186,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":187,"author":{"gitId":"T0nyLin"},"content":"        // Create a ByteArrayOutputStream to get the output from the call to print","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"T0nyLin"},"content":"        ByteArrayOutputStream content \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"T0nyLin"},"content":"        // Change System.out to point out to our stream","lastModifiedDate":"2024-04-14"},{"lineNumber":191,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(new PrintStream(content));","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"T0nyLin"},"content":"        // Execute the view by name command","lastModifiedDate":"2024-04-14"},{"lineNumber":194,"author":{"gitId":"T0nyLin"},"content":"        String inputString \u003d \"list -t all asdf\";","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"T0nyLin"},"content":"        ListCommand command \u003d new ListCommand(inputString);","lastModifiedDate":"2024-04-14"},{"lineNumber":196,"author":{"gitId":"T0nyLin"},"content":"        command.execute();","lastModifiedDate":"2024-04-14"},{"lineNumber":197,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":198,"author":{"gitId":"T0nyLin"},"content":"        // Reset back to System.out","lastModifiedDate":"2024-04-14"},{"lineNumber":199,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(oldOut);","lastModifiedDate":"2024-04-14"},{"lineNumber":200,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":201,"author":{"gitId":"T0nyLin"},"content":"        // Output contains the content from the stream","lastModifiedDate":"2024-04-14"},{"lineNumber":202,"author":{"gitId":"T0nyLin"},"content":"        String output \u003d content.toString();","lastModifiedDate":"2024-04-14"},{"lineNumber":203,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":204,"author":{"gitId":"T0nyLin"},"content":"        assertTrue(output.contains(\"ERROR: Unknown list type -\u003e \\\"all asdf\\\"\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":205,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":206,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":207,"author":{"gitId":"T0nyLin"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":208,"author":{"gitId":"T0nyLin"},"content":"    void listAllMedication_unknownFlagAfterCommand_showErrorMessage() {","lastModifiedDate":"2024-04-14"},{"lineNumber":209,"author":{"gitId":"T0nyLin"},"content":"        String testArgumentString \u003d \"list -t all -asdf\";","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"T0nyLin"},"content":"        assertThrows(","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"T0nyLin"},"content":"                ArgumentException.class, ()","lastModifiedDate":"2024-04-15"},{"lineNumber":213,"author":{"gitId":"T0nyLin"},"content":"                        -\u003e testArgumentList.parse(testArgumentString)","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"T0nyLin"},"content":"        );","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":216,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":217,"author":{"gitId":"T0nyLin"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":218,"author":{"gitId":"wenenhoe"},"content":"    void listDailyMedication_extraWordsAfterCommand_showErrorMessage() throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":219,"author":{"gitId":"T0nyLin"},"content":"        PrintStream oldOut \u003d System.out;","lastModifiedDate":"2024-04-14"},{"lineNumber":220,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"T0nyLin"},"content":"        // Create a ByteArrayOutputStream to get the output from the call to print","lastModifiedDate":"2024-04-14"},{"lineNumber":222,"author":{"gitId":"T0nyLin"},"content":"        ByteArrayOutputStream content \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-14"},{"lineNumber":223,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":224,"author":{"gitId":"T0nyLin"},"content":"        // Change System.out to point out to our stream","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(new PrintStream(content));","lastModifiedDate":"2024-04-14"},{"lineNumber":226,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":227,"author":{"gitId":"T0nyLin"},"content":"        // Execute the view by name command","lastModifiedDate":"2024-04-14"},{"lineNumber":228,"author":{"gitId":"T0nyLin"},"content":"        String inputString \u003d \"list -t today asdf\";","lastModifiedDate":"2024-04-14"},{"lineNumber":229,"author":{"gitId":"T0nyLin"},"content":"        ListCommand command \u003d new ListCommand(inputString);","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"T0nyLin"},"content":"        command.execute();","lastModifiedDate":"2024-04-14"},{"lineNumber":231,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":232,"author":{"gitId":"T0nyLin"},"content":"        // Reset back to System.out","lastModifiedDate":"2024-04-14"},{"lineNumber":233,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(oldOut);","lastModifiedDate":"2024-04-14"},{"lineNumber":234,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":235,"author":{"gitId":"T0nyLin"},"content":"        // Output contains the content from the stream","lastModifiedDate":"2024-04-14"},{"lineNumber":236,"author":{"gitId":"T0nyLin"},"content":"        String output \u003d content.toString();","lastModifiedDate":"2024-04-14"},{"lineNumber":237,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":238,"author":{"gitId":"T0nyLin"},"content":"        assertTrue(output.contains(\"ERROR: Unknown list type -\u003e \\\"today asdf\\\"\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":239,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":240,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":241,"author":{"gitId":"T0nyLin"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":242,"author":{"gitId":"wenenhoe"},"content":"    void listDailyMedication_extraFlagsAfterCommand_showErrorMessage() throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":243,"author":{"gitId":"T0nyLin"},"content":"        PrintStream oldOut \u003d System.out;","lastModifiedDate":"2024-04-14"},{"lineNumber":244,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":245,"author":{"gitId":"T0nyLin"},"content":"        // Create a ByteArrayOutputStream to get the output from the call to print","lastModifiedDate":"2024-04-14"},{"lineNumber":246,"author":{"gitId":"T0nyLin"},"content":"        ByteArrayOutputStream content \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-14"},{"lineNumber":247,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":248,"author":{"gitId":"T0nyLin"},"content":"        // Change System.out to point out to our stream","lastModifiedDate":"2024-04-14"},{"lineNumber":249,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(new PrintStream(content));","lastModifiedDate":"2024-04-14"},{"lineNumber":250,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":251,"author":{"gitId":"T0nyLin"},"content":"        // Execute the view by name command","lastModifiedDate":"2024-04-14"},{"lineNumber":252,"author":{"gitId":"T0nyLin"},"content":"        String inputString \u003d \"list -t today -a -m\";","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"T0nyLin"},"content":"        ListCommand command \u003d new ListCommand(inputString);","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"T0nyLin"},"content":"        command.execute();","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":256,"author":{"gitId":"T0nyLin"},"content":"        // Reset back to System.out","lastModifiedDate":"2024-04-14"},{"lineNumber":257,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(oldOut);","lastModifiedDate":"2024-04-14"},{"lineNumber":258,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":259,"author":{"gitId":"T0nyLin"},"content":"        // Output contains the content from the stream","lastModifiedDate":"2024-04-14"},{"lineNumber":260,"author":{"gitId":"T0nyLin"},"content":"        String output \u003d content.toString();","lastModifiedDate":"2024-04-14"},{"lineNumber":261,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":262,"author":{"gitId":"T0nyLin"},"content":"        assertTrue(output.contains(\"ERROR: Unknown list type -\u003e \\\"UNKNOWN\\\"\"));","lastModifiedDate":"2024-04-14"},{"lineNumber":263,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":264,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":265,"author":{"gitId":"T0nyLin"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":266,"author":{"gitId":"T0nyLin"},"content":"    void listDailyMedication_unknownFlagAfterCommand_showErrorMessage() {","lastModifiedDate":"2024-04-14"},{"lineNumber":267,"author":{"gitId":"T0nyLin"},"content":"        String testArgumentString \u003d \"list -t today -a -asd\";","lastModifiedDate":"2024-04-14"},{"lineNumber":268,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":269,"author":{"gitId":"T0nyLin"},"content":"        assertThrows(","lastModifiedDate":"2024-04-14"},{"lineNumber":270,"author":{"gitId":"T0nyLin"},"content":"                ArgumentException.class, ()","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"T0nyLin"},"content":"                        -\u003e testArgumentList.parse(testArgumentString)","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"T0nyLin"},"content":"        );","lastModifiedDate":"2024-04-14"},{"lineNumber":273,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":274,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":275,"author":{"gitId":"T0nyLin"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":276,"author":{"gitId":"T0nyLin"},"content":"    void listDailyMedication_extraWordsAfterFlag_showErrorMessage() {","lastModifiedDate":"2024-04-14"},{"lineNumber":277,"author":{"gitId":"T0nyLin"},"content":"        String testArgumentString \u003d \"list -t today -a asdf\";","lastModifiedDate":"2024-04-14"},{"lineNumber":278,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":279,"author":{"gitId":"T0nyLin"},"content":"        assertThrows(","lastModifiedDate":"2024-04-14"},{"lineNumber":280,"author":{"gitId":"T0nyLin"},"content":"                ArgumentException.class, ()","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"T0nyLin"},"content":"                        -\u003e testArgumentList.parse(testArgumentString)","lastModifiedDate":"2024-04-15"},{"lineNumber":282,"author":{"gitId":"T0nyLin"},"content":"        );","lastModifiedDate":"2024-04-14"},{"lineNumber":283,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":284,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"e0958902":135,"T0nyLin":137,"kyuichyi":3,"wenenhoe":9}},{"path":"src/test/java/meditracker/command/ModifyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"public class ModifyCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    void setupMedication() throws MediTrackerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2025-07-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"                \"Medication A\",","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"                60.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"                87);","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.checkForDaily(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    private static String getExpectedOutput(ByteArrayOutputStream output, String errorMessage) {","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        Ui.showErrorMessage(errorMessage);","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        Ui.showWarningMessage(\"Rolling back changes...\");","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        Ui.showInfoMessage(\"Changes have been rolled back. Medicine not modified.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"        String expectedOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"        return expectedOutput;","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    @AfterEach","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectMedicationModified()","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        setupMedication();","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        String newName \u003d \"Medication B\";","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"-l 1 -n \" + newName;","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        ModifyCommand command \u003d new ModifyCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"e0958902"},"content":"        Medication updatedMedication \u003d MedicationManager.getMedication(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(updatedMedication.getName(), newName);","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"    void execute_outOfOrderArgument_expectMedicationModified()","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        setupMedication();","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"        String newName \u003d \"Medication B\";","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d String.format(\"-n %s -l 1\", newName);","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"        ModifyCommand command \u003d new ModifyCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"e0958902"},"content":"        Medication updatedMedication \u003d MedicationManager.getMedication(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(updatedMedication.getName(), newName);","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"    void execute_erroneousListIndex_errorMessagePrinted() throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"        //Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(new PrintStream(output)); // set up capture stream","lastModifiedDate":"2024-04-07"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"        Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-07"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"        String expectedOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l \u0027\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"        String actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l string\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 4 [-h]\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(originalOut); // restore stream","lastModifiedDate":"2024-04-07"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"    void execute_onlyListIndex_noChangesSpecified()","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException, MediTrackerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"        //Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-04-15"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(new PrintStream(output)); // set up capture stream","lastModifiedDate":"2024-04-15"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"        Ui.showSuccessMessage(\"No changes specified. Medicine not modified.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"        String expectedOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"        setupMedication();","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"        String actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(originalOut); // restore stream","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"    void execute_invalidName_rollbackChanges()","lastModifiedDate":"2024-04-15"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException, MediTrackerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"        //Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-04-15"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-15"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(new PrintStream(output)); // set up capture stream","lastModifiedDate":"2024-04-15"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"        setupMedication();","lastModifiedDate":"2024-04-15"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -q 70 -n Medication_B\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"        String actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"wenenhoe"},"content":"        String expectedOutput \u003d getExpectedOutput(output, \"Please enter a proper medication name.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":152,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(originalOut); // restore stream","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":157,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":158,"author":{"gitId":"wenenhoe"},"content":"    void execute_invalidQuantity_rollbackChanges()","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException, MediTrackerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"wenenhoe"},"content":"        //Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"wenenhoe"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"wenenhoe"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(new PrintStream(output)); // set up capture stream","lastModifiedDate":"2024-04-15"},{"lineNumber":164,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"wenenhoe"},"content":"        setupMedication();","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -q seventy -n Medication B\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"wenenhoe"},"content":"        String actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"wenenhoe"},"content":"        String expectedOutput \u003d getExpectedOutput(output, \"Unable to parse String \u0027seventy\u0027 into double.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":171,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":172,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":173,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(originalOut); // restore stream","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":176,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"wenenhoe"},"content":"    void execute_invalidDosage_rollbackChanges()","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException, MediTrackerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"wenenhoe"},"content":"        //Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"wenenhoe"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"wenenhoe"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(new PrintStream(output)); // set up capture stream","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"wenenhoe"},"content":"        setupMedication();","lastModifiedDate":"2024-04-15"},{"lineNumber":185,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -q 70 -dM ten\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"wenenhoe"},"content":"        String actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"wenenhoe"},"content":"        String expectedOutput \u003d getExpectedOutput(output, \"Unable to parse String \u0027ten\u0027 into double.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":191,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":192,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -q 70 -dM ten\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":193,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":194,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":195,"author":{"gitId":"wenenhoe"},"content":"        expectedOutput \u003d getExpectedOutput(output, \"Unable to parse String \u0027ten\u0027 into double.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":196,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":197,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":198,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -q 70 -dA ten\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":199,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":200,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":201,"author":{"gitId":"wenenhoe"},"content":"        expectedOutput \u003d getExpectedOutput(output, \"Unable to parse String \u0027ten\u0027 into double.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":202,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":203,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -q 70 -dE ten\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":205,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":206,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"wenenhoe"},"content":"        expectedOutput \u003d getExpectedOutput(output, \"Unable to parse String \u0027ten\u0027 into double.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":208,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":209,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":210,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -q 70 -dM 0 -dA 0 -dE 0\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":211,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":212,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":213,"author":{"gitId":"wenenhoe"},"content":"        expectedOutput \u003d getExpectedOutput(","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"wenenhoe"},"content":"                output,","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"wenenhoe"},"content":"                \"Medication has no dosages. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"wenenhoe"},"content":"                        \"Please ensure at least 1 period of day has dosage (-dM, -dA and/or -dE).\");","lastModifiedDate":"2024-04-15"},{"lineNumber":217,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":218,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":219,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(originalOut); // restore stream","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"wenenhoe"},"content":"    void execute_invalidExpirationDate_rollbackChanges()","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException, MediTrackerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"wenenhoe"},"content":"        //Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-04-15"},{"lineNumber":226,"author":{"gitId":"wenenhoe"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"wenenhoe"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-15"},{"lineNumber":228,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(new PrintStream(output)); // set up capture stream","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"wenenhoe"},"content":"        setupMedication();","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -e 3000-13-32\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"wenenhoe"},"content":"        String actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"wenenhoe"},"content":"        String expectedOutput \u003d getExpectedOutput(output, \"Please enter a valid expiry date in yyyy-MM-dd!\");","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":237,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":238,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -e 1900-12-31\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":239,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":240,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"wenenhoe"},"content":"        expectedOutput \u003d getExpectedOutput(output, \"You are not allowed to enter expired medications!\");","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":243,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(originalOut); // restore stream","lastModifiedDate":"2024-04-15"},{"lineNumber":245,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":246,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":247,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-15"},{"lineNumber":248,"author":{"gitId":"wenenhoe"},"content":"    void execute_invalidRepeat_rollbackChanges()","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException, MediTrackerException {","lastModifiedDate":"2024-04-15"},{"lineNumber":250,"author":{"gitId":"wenenhoe"},"content":"        //Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-04-15"},{"lineNumber":251,"author":{"gitId":"wenenhoe"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-15"},{"lineNumber":252,"author":{"gitId":"wenenhoe"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-15"},{"lineNumber":253,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(new PrintStream(output)); // set up capture stream","lastModifiedDate":"2024-04-15"},{"lineNumber":254,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":255,"author":{"gitId":"wenenhoe"},"content":"        setupMedication();","lastModifiedDate":"2024-04-15"},{"lineNumber":256,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":257,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -rep 1.0E1000\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":258,"author":{"gitId":"wenenhoe"},"content":"        String actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":259,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":260,"author":{"gitId":"wenenhoe"},"content":"        String expectedOutput \u003d getExpectedOutput(output, \"Unable to parse String \u00271.0E1000\u0027 into integer.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":261,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":262,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -rep NaN\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":264,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":266,"author":{"gitId":"wenenhoe"},"content":"        expectedOutput \u003d getExpectedOutput(output, \"Unable to parse String \u0027NaN\u0027 into integer.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":267,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":269,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -rep 1.0E-1000\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":270,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"wenenhoe"},"content":"        expectedOutput \u003d getExpectedOutput(output, \"Unable to parse String \u00271.0E-1000\u0027 into integer.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -rep 0\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":276,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":277,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"wenenhoe"},"content":"        expectedOutput \u003d getExpectedOutput(output, \"Provide a \\\"-rep\\\" number from 1 to 7\");","lastModifiedDate":"2024-04-15"},{"lineNumber":279,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":280,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"wenenhoe"},"content":"        new ModifyCommand(\"-l 1 -rep 8\").execute();","lastModifiedDate":"2024-04-15"},{"lineNumber":282,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-15"},{"lineNumber":283,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-15"},{"lineNumber":284,"author":{"gitId":"wenenhoe"},"content":"        expectedOutput \u003d getExpectedOutput(output, \"Provide a \\\"-rep\\\" number from 1 to 7\");","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(originalOut); // restore stream","lastModifiedDate":"2024-04-15"},{"lineNumber":288,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":289,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"e0958902":8,"nickczh":2,"T0nyLin":4,"kyuichyi":2,"wenenhoe":273}},{"path":"src/test/java/meditracker/command/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.LibraryManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.SearchResult;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"public class SearchCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"    void execute_searchCommandSearchAllFields_expectSearchResult()","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"        String keyword \u003d \"paracetamol\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"        String inputString \u003d \"search -a \" + keyword;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":"        SearchResult searchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"                \"Paracetamol\",","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"                \"Fever, Pain\",","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":"                \"Nausea, Liver damage (in high doses)\");","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"kyuichyi"},"content":"        LibraryManager libraryManager \u003d new LibraryManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"kyuichyi"},"content":"        SearchCommand command \u003d new SearchCommand(inputString);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"kyuichyi"},"content":"        command.execute();","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e expectedSearchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(searchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"kyuichyi"},"content":"        libraryManager.searchLibrary(searchResults, keyword);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"kyuichyi"},"content":"        assertEquals(expectedSearchResults.toString(), searchResults.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"kyuichyi"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"kyuichyi"},"content":"    void execute_searchCommandSearchMedicationName_expectSearchResult()","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"kyuichyi"},"content":"        String keyword \u003d \"paracetamol\";","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"kyuichyi"},"content":"        String inputString \u003d \"search -n \" + keyword;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"kyuichyi"},"content":"        SearchResult searchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"                \"Paracetamol\",","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"kyuichyi"},"content":"                \"Fever, Pain\",","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"                \"Nausea, Liver damage (in high doses)\");","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"kyuichyi"},"content":"        LibraryManager libraryManager \u003d new LibraryManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"kyuichyi"},"content":"        SearchCommand command \u003d new SearchCommand(inputString);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"kyuichyi"},"content":"        command.execute();","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e expectedSearchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(searchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"kyuichyi"},"content":"        libraryManager.findMedication(searchResults, keyword);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"kyuichyi"},"content":"        assertEquals(expectedSearchResults.toString(), searchResults.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"kyuichyi"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"kyuichyi"},"content":"    void execute_searchCommandSearchIllness_expectSearchResults()","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"kyuichyi"},"content":"        String keyword \u003d \"fever\";","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"kyuichyi"},"content":"        String inputString \u003d \"search -i \" + keyword;","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"kyuichyi"},"content":"        SearchResult firstSearchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"kyuichyi"},"content":"                \"Aspirin\",","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"kyuichyi"},"content":"                \"Headache, Fever\",","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"kyuichyi"},"content":"                \"Stomach irritation, Bleeding\");","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"kyuichyi"},"content":"        SearchResult secondSearchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"kyuichyi"},"content":"                \"Paracetamol\",","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"kyuichyi"},"content":"                \"Fever, Pain\",","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"kyuichyi"},"content":"                \"Nausea, Liver damage (in high doses)\");","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"kyuichyi"},"content":"        LibraryManager libraryManager \u003d new LibraryManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"kyuichyi"},"content":"        SearchCommand command \u003d new SearchCommand(inputString);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"kyuichyi"},"content":"        command.execute();","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e expectedSearchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(firstSearchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(secondSearchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"kyuichyi"},"content":"        libraryManager.findIllness(searchResults, keyword);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"kyuichyi"},"content":"        assertEquals(expectedSearchResults.toString(), searchResults.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"kyuichyi"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"kyuichyi"},"content":"    void execute_searchCommandSearchSideEffect_expectSearchResult()","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"kyuichyi"},"content":"        String keyword \u003d \"fatigue\";","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"kyuichyi"},"content":"        String inputString \u003d \"search -s \" + keyword;","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"kyuichyi"},"content":"        SearchResult firstSearchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"kyuichyi"},"content":"                \"Loratadine\",","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"kyuichyi"},"content":"                \"Allergy symptoms\",","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"kyuichyi"},"content":"                \"Headache, Fatigue\");","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"kyuichyi"},"content":"        SearchResult secondSearchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"kyuichyi"},"content":"                \"Losartan\",","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"kyuichyi"},"content":"                \"High blood pressure\",","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"kyuichyi"},"content":"                \"Dizziness, Fatigue\");","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"kyuichyi"},"content":"        SearchResult thirdSearchResult \u003d new SearchResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"kyuichyi"},"content":"                \"Metoprolol\",","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"kyuichyi"},"content":"                \"High blood pressure\",","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"kyuichyi"},"content":"                \"Dizziness, Fatigue\");","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"kyuichyi"},"content":"        LibraryManager libraryManager \u003d new LibraryManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"kyuichyi"},"content":"        SearchCommand command \u003d new SearchCommand(inputString);","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"kyuichyi"},"content":"        command.execute();","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e expectedSearchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(firstSearchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(secondSearchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"kyuichyi"},"content":"        expectedSearchResults.add(thirdSearchResult);","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"kyuichyi"},"content":"        List\u003cSearchResult\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"kyuichyi"},"content":"        libraryManager.searchLibrary(searchResults, keyword);","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"kyuichyi"},"content":"        assertEquals(expectedSearchResults.toString(), searchResults.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"kyuichyi":123,"wenenhoe":5}},{"path":"src/test/java/meditracker/command/TakeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"public class TakeCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectDailyMedicationTaken()","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2025-07-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"                60.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"                10.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"                1,","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"                87);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.checkForDaily(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d DailyMedicationManager.getDailyMedication(listIndex, Period.MORNING);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d String.format(\"take -l %d -m\", listIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"        TakeCommand command \u003d new TakeCommand(inputString);","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(dailyMedication.isTaken());","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"    void execute_erroneousListIndex_errorMessagePrinted() throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        //Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(new PrintStream(output)); // set up capture stream","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        String expectedOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"        new TakeCommand(\"-l \u0027\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        String actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"        new TakeCommand(\"-l string\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"        new TakeCommand(\"-l 4 [-h]\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(originalOut); // restore stream","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"e0958902":4,"T0nyLin":5,"kyuichyi":2,"wenenhoe":82}},{"path":"src/test/java/meditracker/command/UntakeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"public class UntakeCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectDailyMedicationUntaken() throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(\"Medication_A\", 10, Period.MORNING);","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication); // only doing for MORNING sub list","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"untake -l 1 -m\";","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        UntakeCommand command \u003d new UntakeCommand(inputString);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedication.isTaken());","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    void execute_erroneousListIndex_errorMessagePrinted() throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        //Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(new PrintStream(output)); // set up capture stream","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        Ui.showErrorMessage(\"Invalid index specified\");","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        String expectedOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"        new UntakeCommand(\"-l \u0027\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        String actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        new UntakeCommand(\"-l string\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        new UntakeCommand(\"-l 4 [-h]\").execute();","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        actualOutput \u003d output.toString();","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        output.reset();","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"        System.setOut(originalOut); // restore stream","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"e0958902":1,"T0nyLin":8,"wenenhoe":63}},{"path":"src/test/java/meditracker/command/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.command;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"import meditracker.dailymedication.DailyMedicationManagerTest;","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":" * This test file is to perform tests on ViewCommands","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"public class ViewCommandTest {","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"    @AfterEach","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"    void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"        DailyMedicationManagerTest.resetDailyMedicationManager();","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"e0958902"},"content":"    void execute_viewCommandByIndex_expectMedicationShownByIndex()","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"        String medicationName \u003d \"Medication_I\";","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2024-08-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"e0958902"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"                        medicationName,","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"                1000.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"e0958902"},"content":"                15.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"e0958902"},"content":"                0.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"e0958902"},"content":"                15.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"e0958902"},"content":"                \"drowsiness\",","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"e0958902"},"content":"                1,","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"e0958902"},"content":"                90);","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"e0958902"},"content":"        assert MedicationManager.getTotalMedications() \u003e 0 : \"Total medications in medication must be greater \"","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"                + \"than 0 after adding in\" + medicationName;","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"e0958902"},"content":"        int medicationIndex \u003d 1;","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"e0958902"},"content":"        String inputString \u003d \"view -l \" + medicationIndex;","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"e0958902"},"content":"        ViewCommand command \u003d new ViewCommand(inputString);","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"e0958902"},"content":"        Medication expectedMedication \u003d MedicationManager.getMedication(medicationIndex);","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"e0958902"},"content":"        assertEquals(expectedMedication.getName(), medicationName);","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"e0958902"},"content":"    // Solution below adapted by https://stackoverflow.com/questions/32241057/","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"e0958902"},"content":"    void execute_viewCommandByName_expectMedicationShownByName()","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"e0958902"},"content":"        String medicationName \u003d \"Medication_N\";","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2024-08-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"e0958902"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"e0958902"},"content":"                medicationName,","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"e0958902"},"content":"                1000.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"e0958902"},"content":"                15.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":78,"author":{"gitId":"e0958902"},"content":"                0.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"e0958902"},"content":"                15.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"e0958902"},"content":"                \"drowsiness\",","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"e0958902"},"content":"                1,","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"e0958902"},"content":"                91);","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"e0958902"},"content":"        assert MedicationManager.getTotalMedications() \u003e 0 : \"Total medications in medication must be greater \"","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"e0958902"},"content":"                + \"than 0 after adding in\" + medicationName;","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"e0958902"},"content":"        // Store current System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":90,"author":{"gitId":"e0958902"},"content":"        PrintStream oldOut \u003d System.out;","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"e0958902"},"content":"        // Create a ByteArrayOutputStream to get the output from the call to print","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"e0958902"},"content":"        ByteArrayOutputStream content \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":95,"author":{"gitId":"e0958902"},"content":"        // Change System.out to point out to our stream","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"e0958902"},"content":"        System.setOut(new PrintStream(content));","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":98,"author":{"gitId":"e0958902"},"content":"        // Execute the view by name command","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"e0958902"},"content":"        String inputString \u003d \"view -n \" + medicationName;","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"e0958902"},"content":"        ViewCommand command \u003d new ViewCommand(inputString);","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"e0958902"},"content":"        // Reset back to System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"e0958902"},"content":"        System.setOut(oldOut);","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"e0958902"},"content":"        // Output contains the content from the stream","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"e0958902"},"content":"        String output \u003d content.toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":109,"author":{"gitId":"e0958902"},"content":"        assertTrue(output.contains(\"Name: \" + medicationName));","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":111,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"e0958902"},"content":"    void execute_viewCommandByQuantity_expectMedicationShownByQuantity()","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"e0958902"},"content":"        String medicationName \u003d \"Medication_Q\";","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"e0958902"},"content":"        Double medicationQuantity \u003d 1231.5;","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2027-12-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"e0958902"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-04-10"},{"lineNumber":120,"author":{"gitId":"e0958902"},"content":"                medicationName,","lastModifiedDate":"2024-04-10"},{"lineNumber":121,"author":{"gitId":"e0958902"},"content":"                medicationQuantity,","lastModifiedDate":"2024-04-10"},{"lineNumber":122,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":123,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":124,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":125,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"e0958902"},"content":"                \"depression\",","lastModifiedDate":"2024-04-10"},{"lineNumber":127,"author":{"gitId":"e0958902"},"content":"                1,","lastModifiedDate":"2024-04-10"},{"lineNumber":128,"author":{"gitId":"e0958902"},"content":"                92);","lastModifiedDate":"2024-04-10"},{"lineNumber":129,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-04-10"},{"lineNumber":130,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":131,"author":{"gitId":"e0958902"},"content":"        assert MedicationManager.getTotalMedications() \u003e 0 : \"Total medications in medication must be greater \"","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"e0958902"},"content":"                + \"than 0 after adding in\" + medicationName;","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"e0958902"},"content":"        // Store current System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":134,"author":{"gitId":"e0958902"},"content":"        PrintStream oldOut \u003d System.out;","lastModifiedDate":"2024-04-10"},{"lineNumber":135,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":136,"author":{"gitId":"e0958902"},"content":"        // Create a ByteArrayOutputStream to get the output from the call to print","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"e0958902"},"content":"        ByteArrayOutputStream content \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":139,"author":{"gitId":"e0958902"},"content":"        // Change System.out to point out to our stream","lastModifiedDate":"2024-04-10"},{"lineNumber":140,"author":{"gitId":"e0958902"},"content":"        System.setOut(new PrintStream(content));","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"e0958902"},"content":"        // Execute the view by name command","lastModifiedDate":"2024-04-10"},{"lineNumber":143,"author":{"gitId":"e0958902"},"content":"        String inputString \u003d \"view -q \" + medicationQuantity;","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"e0958902"},"content":"        ViewCommand command \u003d new ViewCommand(inputString);","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":146,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":147,"author":{"gitId":"e0958902"},"content":"        // Reset back to System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":148,"author":{"gitId":"e0958902"},"content":"        System.setOut(oldOut);","lastModifiedDate":"2024-04-10"},{"lineNumber":149,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"e0958902"},"content":"        // Output contains the content from the stream","lastModifiedDate":"2024-04-10"},{"lineNumber":151,"author":{"gitId":"e0958902"},"content":"        String output \u003d content.toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":152,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"e0958902"},"content":"        assertTrue(output.contains(\"Name: \" + medicationName));","lastModifiedDate":"2024-04-10"},{"lineNumber":154,"author":{"gitId":"e0958902"},"content":"        assertTrue(output.contains(\"Quantity: \" + medicationQuantity));","lastModifiedDate":"2024-04-10"},{"lineNumber":155,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":156,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"e0958902"},"content":"    void execute_viewCommandByExpiry_expectMedicationShownByExpiry()","lastModifiedDate":"2024-04-10"},{"lineNumber":159,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":160,"author":{"gitId":"e0958902"},"content":"        String medicationName \u003d \"Medication_E\";","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"e0958902"},"content":"        Double medicationQuantity \u003d 30.0;","lastModifiedDate":"2024-04-10"},{"lineNumber":162,"author":{"gitId":"e0958902"},"content":"        String medicationExpiryYear \u003d \"2024\";","lastModifiedDate":"2024-04-12"},{"lineNumber":163,"author":{"gitId":"e0958902"},"content":"        String medicationExpiry \u003d medicationExpiryYear + \"-11-20\";","lastModifiedDate":"2024-04-12"},{"lineNumber":164,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(medicationExpiry, dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":167,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"e0958902"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-04-10"},{"lineNumber":169,"author":{"gitId":"e0958902"},"content":"                medicationName,","lastModifiedDate":"2024-04-10"},{"lineNumber":170,"author":{"gitId":"e0958902"},"content":"                medicationQuantity,","lastModifiedDate":"2024-04-10"},{"lineNumber":171,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":172,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":173,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":174,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":175,"author":{"gitId":"e0958902"},"content":"                \"depression\",","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"e0958902"},"content":"                1,","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"e0958902"},"content":"                93);","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-04-10"},{"lineNumber":179,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"e0958902"},"content":"        assert MedicationManager.getTotalMedications() \u003e 0 : \"Total medications in medication must be greater \"","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"e0958902"},"content":"                + \"than 0 after adding in\" + medicationName;","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"e0958902"},"content":"        // Store current System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":183,"author":{"gitId":"e0958902"},"content":"        PrintStream oldOut \u003d System.out;","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":185,"author":{"gitId":"e0958902"},"content":"        // Create a ByteArrayOutputStream to get the output from the call to print","lastModifiedDate":"2024-04-10"},{"lineNumber":186,"author":{"gitId":"e0958902"},"content":"        ByteArrayOutputStream content \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-10"},{"lineNumber":187,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":188,"author":{"gitId":"e0958902"},"content":"        // Change System.out to point out to our stream","lastModifiedDate":"2024-04-10"},{"lineNumber":189,"author":{"gitId":"e0958902"},"content":"        System.setOut(new PrintStream(content));","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":191,"author":{"gitId":"e0958902"},"content":"        // Execute the view by name command","lastModifiedDate":"2024-04-10"},{"lineNumber":192,"author":{"gitId":"e0958902"},"content":"        String inputString \u003d \"view -e \" + medicationExpiryYear;","lastModifiedDate":"2024-04-10"},{"lineNumber":193,"author":{"gitId":"e0958902"},"content":"        ViewCommand command \u003d new ViewCommand(inputString);","lastModifiedDate":"2024-04-10"},{"lineNumber":194,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":195,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":196,"author":{"gitId":"e0958902"},"content":"        // Reset back to System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":197,"author":{"gitId":"e0958902"},"content":"        System.setOut(oldOut);","lastModifiedDate":"2024-04-10"},{"lineNumber":198,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":199,"author":{"gitId":"e0958902"},"content":"        // Output contains the content from the stream","lastModifiedDate":"2024-04-10"},{"lineNumber":200,"author":{"gitId":"e0958902"},"content":"        String output \u003d content.toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":201,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":202,"author":{"gitId":"e0958902"},"content":"        assertTrue(output.contains(\"Name: \" + medicationName));","lastModifiedDate":"2024-04-10"},{"lineNumber":203,"author":{"gitId":"e0958902"},"content":"        assertTrue(output.contains(\"Quantity: \" + medicationQuantity));","lastModifiedDate":"2024-04-10"},{"lineNumber":204,"author":{"gitId":"e0958902"},"content":"        assertTrue(output.contains(\"Expiry Date: \" + medicationExpiry));","lastModifiedDate":"2024-04-10"},{"lineNumber":205,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":206,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":207,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":208,"author":{"gitId":"e0958902"},"content":"    void execute_viewCommandByRemarks_expectMedicationShownByRemarks()","lastModifiedDate":"2024-04-10"},{"lineNumber":209,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"e0958902"},"content":"        String medicationNameOne \u003d \"Dexamethasone\";","lastModifiedDate":"2024-04-10"},{"lineNumber":211,"author":{"gitId":"e0958902"},"content":"        String medicationRemarksOne \u003d \"aggression, weight gain, nausea\";","lastModifiedDate":"2024-04-10"},{"lineNumber":212,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":213,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDateOne \u003d LocalDate.parse(\"2025-01-31\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":214,"author":{"gitId":"e0958902"},"content":"        Medication medicationOne \u003d new Medication(","lastModifiedDate":"2024-04-10"},{"lineNumber":215,"author":{"gitId":"e0958902"},"content":"                medicationNameOne,","lastModifiedDate":"2024-04-10"},{"lineNumber":216,"author":{"gitId":"e0958902"},"content":"                20.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":217,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":218,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":219,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":220,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDateOne,","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"e0958902"},"content":"                medicationRemarksOne,","lastModifiedDate":"2024-04-10"},{"lineNumber":222,"author":{"gitId":"e0958902"},"content":"                1,","lastModifiedDate":"2024-04-10"},{"lineNumber":223,"author":{"gitId":"e0958902"},"content":"                94);","lastModifiedDate":"2024-04-10"},{"lineNumber":224,"author":{"gitId":"e0958902"},"content":"        String medicationNameTwo \u003d \"Dextromethorphan\";","lastModifiedDate":"2024-04-10"},{"lineNumber":225,"author":{"gitId":"e0958902"},"content":"        String medicationRemarksTwo \u003d \"restlessness, nausea\";","lastModifiedDate":"2024-04-10"},{"lineNumber":226,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDateTwo \u003d LocalDate.parse(\"2025-02-31\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":227,"author":{"gitId":"e0958902"},"content":"        Medication medicationTwo \u003d new Medication(","lastModifiedDate":"2024-04-10"},{"lineNumber":228,"author":{"gitId":"e0958902"},"content":"                medicationNameTwo,","lastModifiedDate":"2024-04-10"},{"lineNumber":229,"author":{"gitId":"e0958902"},"content":"                30.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":230,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":231,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":232,"author":{"gitId":"e0958902"},"content":"                10.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":233,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDateTwo,","lastModifiedDate":"2024-04-14"},{"lineNumber":234,"author":{"gitId":"e0958902"},"content":"                medicationRemarksTwo,","lastModifiedDate":"2024-04-10"},{"lineNumber":235,"author":{"gitId":"e0958902"},"content":"                1,","lastModifiedDate":"2024-04-10"},{"lineNumber":236,"author":{"gitId":"e0958902"},"content":"                95);","lastModifiedDate":"2024-04-10"},{"lineNumber":237,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medicationOne);","lastModifiedDate":"2024-04-10"},{"lineNumber":238,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medicationTwo);","lastModifiedDate":"2024-04-10"},{"lineNumber":239,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":240,"author":{"gitId":"e0958902"},"content":"        assert MedicationManager.getTotalMedications() \u003e 1 : \"Total medications in medication must be greater \"","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"e0958902"},"content":"                + \"than 0 after adding in\" + medicationNameOne + \"and\" + medicationNameTwo;","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"e0958902"},"content":"        // Store current System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":243,"author":{"gitId":"e0958902"},"content":"        PrintStream oldOut \u003d System.out;","lastModifiedDate":"2024-04-10"},{"lineNumber":244,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":245,"author":{"gitId":"e0958902"},"content":"        // Create a ByteArrayOutputStream to get the output from the call to print","lastModifiedDate":"2024-04-10"},{"lineNumber":246,"author":{"gitId":"e0958902"},"content":"        ByteArrayOutputStream content \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-10"},{"lineNumber":247,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":248,"author":{"gitId":"e0958902"},"content":"        // Change System.out to point out to our stream","lastModifiedDate":"2024-04-10"},{"lineNumber":249,"author":{"gitId":"e0958902"},"content":"        System.setOut(new PrintStream(content));","lastModifiedDate":"2024-04-10"},{"lineNumber":250,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":251,"author":{"gitId":"e0958902"},"content":"        // Execute the view by name command","lastModifiedDate":"2024-04-10"},{"lineNumber":252,"author":{"gitId":"e0958902"},"content":"        String commonRemark \u003d \"nausea\";","lastModifiedDate":"2024-04-10"},{"lineNumber":253,"author":{"gitId":"e0958902"},"content":"        String inputString \u003d \"view -r \" + commonRemark;","lastModifiedDate":"2024-04-10"},{"lineNumber":254,"author":{"gitId":"e0958902"},"content":"        ViewCommand command \u003d new ViewCommand(inputString);","lastModifiedDate":"2024-04-10"},{"lineNumber":255,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":256,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":257,"author":{"gitId":"e0958902"},"content":"        // Reset back to System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":258,"author":{"gitId":"e0958902"},"content":"        System.setOut(oldOut);","lastModifiedDate":"2024-04-10"},{"lineNumber":259,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":260,"author":{"gitId":"e0958902"},"content":"        // Output contains the content from the stream","lastModifiedDate":"2024-04-10"},{"lineNumber":261,"author":{"gitId":"e0958902"},"content":"        String output \u003d content.toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":262,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":263,"author":{"gitId":"e0958902"},"content":"        assertTrue(output.contains(\"Name: \" + medicationNameOne));","lastModifiedDate":"2024-04-10"},{"lineNumber":264,"author":{"gitId":"e0958902"},"content":"        assertTrue(output.contains(\"Remarks: \" + medicationRemarksOne));","lastModifiedDate":"2024-04-10"},{"lineNumber":265,"author":{"gitId":"e0958902"},"content":"        assertTrue(output.contains(\"Name: \" + medicationNameTwo));","lastModifiedDate":"2024-04-10"},{"lineNumber":266,"author":{"gitId":"e0958902"},"content":"        assertTrue(output.contains(\"Remarks: \" + medicationRemarksTwo));","lastModifiedDate":"2024-04-10"},{"lineNumber":267,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":268,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":269,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":270,"author":{"gitId":"e0958902"},"content":"    void execute_viewCommandWithMultipleFlags_expectErrorMessage()","lastModifiedDate":"2024-04-10"},{"lineNumber":271,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, MediTrackerException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":272,"author":{"gitId":"e0958902"},"content":"        String medicationName \u003d \"Medication_F\";","lastModifiedDate":"2024-04-10"},{"lineNumber":273,"author":{"gitId":"e0958902"},"content":"        Double medicationQuantity \u003d 30.0;","lastModifiedDate":"2024-04-10"},{"lineNumber":274,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":275,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2024-08-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":276,"author":{"gitId":"e0958902"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-04-10"},{"lineNumber":277,"author":{"gitId":"e0958902"},"content":"                medicationName,","lastModifiedDate":"2024-04-10"},{"lineNumber":278,"author":{"gitId":"e0958902"},"content":"                medicationQuantity,","lastModifiedDate":"2024-04-10"},{"lineNumber":279,"author":{"gitId":"e0958902"},"content":"                25.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":280,"author":{"gitId":"e0958902"},"content":"                25.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":281,"author":{"gitId":"e0958902"},"content":"                0.0,","lastModifiedDate":"2024-04-10"},{"lineNumber":282,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":283,"author":{"gitId":"e0958902"},"content":"                \"blurry_vision\",","lastModifiedDate":"2024-04-10"},{"lineNumber":284,"author":{"gitId":"e0958902"},"content":"                1,","lastModifiedDate":"2024-04-10"},{"lineNumber":285,"author":{"gitId":"e0958902"},"content":"                96);","lastModifiedDate":"2024-04-10"},{"lineNumber":286,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-04-10"},{"lineNumber":287,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":288,"author":{"gitId":"e0958902"},"content":"        assert MedicationManager.getTotalMedications() \u003e 0 : \"Total medications in medication must be greater \"","lastModifiedDate":"2024-04-15"},{"lineNumber":289,"author":{"gitId":"e0958902"},"content":"                + \"than 0 after adding in\" + medicationName;","lastModifiedDate":"2024-04-15"},{"lineNumber":290,"author":{"gitId":"e0958902"},"content":"        // Store current System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":291,"author":{"gitId":"e0958902"},"content":"        PrintStream oldOut \u003d System.out;","lastModifiedDate":"2024-04-10"},{"lineNumber":292,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":293,"author":{"gitId":"e0958902"},"content":"        // Create a ByteArrayOutputStream to get the output from the call to print","lastModifiedDate":"2024-04-10"},{"lineNumber":294,"author":{"gitId":"e0958902"},"content":"        ByteArrayOutputStream content \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-10"},{"lineNumber":295,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":296,"author":{"gitId":"e0958902"},"content":"        // Change System.out to point out to our stream","lastModifiedDate":"2024-04-10"},{"lineNumber":297,"author":{"gitId":"e0958902"},"content":"        System.setOut(new PrintStream(content));","lastModifiedDate":"2024-04-10"},{"lineNumber":298,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":299,"author":{"gitId":"e0958902"},"content":"        // Execute the view by name command","lastModifiedDate":"2024-04-10"},{"lineNumber":300,"author":{"gitId":"e0958902"},"content":"        String inputString \u003d \"view -n \" + medicationName + \"-q \" + medicationQuantity;","lastModifiedDate":"2024-04-10"},{"lineNumber":301,"author":{"gitId":"e0958902"},"content":"        ViewCommand command \u003d new ViewCommand(inputString);","lastModifiedDate":"2024-04-10"},{"lineNumber":302,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-04-10"},{"lineNumber":303,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":304,"author":{"gitId":"e0958902"},"content":"        // Reset back to System.out","lastModifiedDate":"2024-04-10"},{"lineNumber":305,"author":{"gitId":"e0958902"},"content":"        System.setOut(oldOut);","lastModifiedDate":"2024-04-10"},{"lineNumber":306,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":307,"author":{"gitId":"e0958902"},"content":"        // Output contains the content from the stream","lastModifiedDate":"2024-04-10"},{"lineNumber":308,"author":{"gitId":"e0958902"},"content":"        String output \u003d content.toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":309,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":310,"author":{"gitId":"e0958902"},"content":"        assertTrue(output.contains(\"ERROR: Medicine can not be found.\"));","lastModifiedDate":"2024-04-10"},{"lineNumber":311,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":312,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"e0958902":306,"wenenhoe":6}},{"path":"src/test/java/meditracker/dailymedication/DailyMedicationManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.dailymedication;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"import meditracker.command.AddCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentException;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.InsufficientQuantityException;","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.MediTrackerException;","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.MedicationNotFoundException;","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"import meditracker.exception.MedicationUnchangedException;","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManagerTest;","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"public class DailyMedicationManagerTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"    // @@author T0nyLin","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"    public static void resetDailyMedicationManager() throws InvocationTargetException,","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"            IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        Method resetDailyMedicationManagerMethod \u003d","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"                DailyMedicationManager.class.getDeclaredMethod(\"clearDailyMedication\");","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"        resetDailyMedicationManagerMethod.setAccessible(true);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        resetDailyMedicationManagerMethod.invoke(DailyMedicationManager.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"    // @@author","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"    @AfterEach","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    public void resetManagers() throws InvocationTargetException, IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        resetDailyMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        MedicationManagerTest.resetMedicationManager();","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"    public void addDailyMedication_genericDailyMedication_dailyMedicationAdded()","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"            throws HelpInvokedException, ArgumentException {","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"e0958902"},"content":"        String inputString \u003d \"add -n Medication A -q 60.0 -e 2025-07-01 -dM 500.0 -dA 250.0 \"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"                + \"-dE 300.0 -r cause_dizziness -rep 1\";","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"        AddCommand command \u003d new AddCommand(inputString);","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication morningMeds \u003d new DailyMedication(\"Medication A\", 500, Period.MORNING);","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication afternoonMeds \u003d new DailyMedication(\"Medication A\", 250, Period.AFTERNOON);","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication eveningMeds \u003d new DailyMedication(\"Medication A\", 300, Period.EVENING);","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication morningMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication afternoonMedicationTest \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"                DailyMedicationManager.getDailyMedication(actualIndex, Period.AFTERNOON);","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication eveningMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.EVENING);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(morningMeds.toString(), morningMedicationTest.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(afternoonMeds.toString(), afternoonMedicationTest.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(eveningMeds.toString(), eveningMedicationTest.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"    public void takeDailyMedication_genericDailyMedication_dailyMedicationTaken()","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"kyuichyi"},"content":"            throws InsufficientQuantityException, MedicationNotFoundException, MedicationUnchangedException,","lastModifiedDate":"2024-04-11"},{"lineNumber":78,"author":{"gitId":"kyuichyi"},"content":"            MediTrackerException {","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"        String medicationName \u003d \"TestMedication\";","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"        double oldQuantity \u003d 60;","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"        double dosage \u003d 10;","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2025-07-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"                medicationName,","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"                oldQuantity,","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"                1,","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"                87);","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(medicationName, dosage, Period.MORNING);","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedication.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication);","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.takeDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(dailyMedicationTest.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"        double expectedQuantity \u003d oldQuantity - dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(medication.getQuantity(), expectedQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"kyuichyi"},"content":"    public void takeDailyMedication_lowQuantityMedication_insufficientQuantity() throws MediTrackerException {","lastModifiedDate":"2024-04-11"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"        String medicationName \u003d \"TestMedication\";","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"        double oldQuantity \u003d 5;","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"        double dosage \u003d 10;","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2025-07-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"                medicationName,","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"                oldQuantity,","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"                1,","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"                87);","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(medicationName, dosage, Period.MORNING);","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedication.isTaken());","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication);","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"T0nyLin"},"content":"                InsufficientQuantityException.class, ()","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"T0nyLin"},"content":"                        -\u003e DailyMedicationManager.takeDailyMedication(actualIndex, Period.MORNING));","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"    public void untakeDailyMedication_genericDailyMedication_dailyMedicationNotTaken()","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"kyuichyi"},"content":"            throws MedicationNotFoundException, MedicationUnchangedException, MediTrackerException {","lastModifiedDate":"2024-04-11"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"        String medicationName \u003d \"TestMedication\";","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"        double oldQuantity \u003d 60;","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"        double dosage \u003d 10;","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"e0958902"},"content":"        LocalDate parsedExpiryDate \u003d LocalDate.parse(\"2025-07-01\", dateTimeFormatter);","lastModifiedDate":"2024-04-14"},{"lineNumber":145,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"                medicationName,","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"                oldQuantity,","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"                0.0,","lastModifiedDate":"2024-04-13"},{"lineNumber":151,"author":{"gitId":"e0958902"},"content":"                parsedExpiryDate,","lastModifiedDate":"2024-04-14"},{"lineNumber":152,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"wenenhoe"},"content":"                1,","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"wenenhoe"},"content":"                87);","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(medicationName, dosage, Period.MORNING);","lastModifiedDate":"2024-04-14"},{"lineNumber":158,"author":{"gitId":"wenenhoe"},"content":"        dailyMedication.take();","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(dailyMedication.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication);","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.untakeDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedicationTest.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"wenenhoe"},"content":"        double expectedQuantity \u003d oldQuantity + dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(medication.getQuantity(), expectedQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"e0958902":11,"T0nyLin":54,"kyuichyi":9,"wenenhoe":95}},{"path":"src/test/java/meditracker/logging/MediLoggerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.logging;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"public class MediLoggerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    public void getMediLogger_noInput_loggerReturned() {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"        Logger mediLogger \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"        assertNotNull(mediLogger);","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"annoy-o-mus":17}},{"path":"src/test/java/meditracker/medication/MedicationManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.medication;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":" * This test file is to perform tests on the MedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"public class MedicationManagerTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"    // @@author e0958902","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"     * Resets the MedicationManager","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"     * @throws InvocationTargetException when it fails to call the reset method","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"     * @throws IllegalAccessException when the method can not access the specified class","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"     * @throws NoSuchMethodException when getDeclareMethod does not accept the specified parameter","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"    public static void resetMedicationManager() throws InvocationTargetException,","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"            IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"        Method resetMedicationManagerMethod \u003d MedicationManager.class.getDeclaredMethod(\"clearMedication\");","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"        resetMedicationManagerMethod.setAccessible(true);","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"        resetMedicationManagerMethod.invoke(MedicationManager.class);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"    // @@author","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"e0958902":18,"wenenhoe":8}},{"path":"src/test/java/meditracker/storage/FilePathCheckerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"public class FilePathCheckerTest {","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    public void isValidJsonFullPath_validFullPaths_returnedTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"        boolean result;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"        // OS check adapted from: https://www.baeldung.com/java-detect-os","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"        if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"            Path validRootDirectory \u003d Path.of(\"C:/noFolderExists/noFileExists.jsON\");","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"            result \u003d FilePathChecker.isValidFullPath(validRootDirectory);","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"            assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"        Path emptyFolderName \u003d Path.of(\"data/aa/////b/c//json.jSoN\");","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(emptyFolderName);","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"        Path validSubDirectory1 \u003d Path.of(\"/common/contains/com/json.JSON\");","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(validSubDirectory1);","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"        Path validSubdirectory2 \u003d Path.of(\"\\\\prnter\\\\auxiliary\\\\null\\\\json.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(validSubdirectory2);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"    public void isValidJsonFullPath_invalidExtensions_returnedFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        boolean result;","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"        Path emptyPath \u003d Path.of(\"\");","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(emptyPath);","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"        Path rootPath \u003d Path.of(\"/\");","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(rootPath);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"        Path emptyExtension \u003d Path.of(\"data/outfile\");","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(emptyExtension);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"        Path invalidExtension \u003d Path.of(\"data/notJsonExtension.exe\");","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(invalidExtension);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"    public void isValidJsonFullPath_invalidFolders_returnedFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"        boolean result;","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"        // OS check adapted from: https://www.baeldung.com/java-detect-os","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"        if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"            Path invalidRootDirectory \u003d Path.of(\"M:/noFolderExists/noFileExists.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"            result \u003d FilePathChecker.isValidFullPath(invalidRootDirectory);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"            assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"        Path illegalFolderOne \u003d Path.of(\"CoM1/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(illegalFolderOne);","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"        Path illegalFolderTwo \u003d Path.of(\"newFolder/prn/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(illegalFolderTwo);","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"        Path traversalFolders \u003d Path.of(\"../../testIllegal.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(traversalFolders);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"        Path invalidSubDirectory \u003d Path.of(\"/common/contains/./json.JSON\");","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.isValidFullPath(invalidSubDirectory);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"    public void containsIllegalCharacters_invalidCharacters_returnedTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"        boolean result;","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/\u003cout.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/out\u003e.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"        // The check for colon is done by `containsIllegalFolderNames` (for unix)","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"        // Furthermore, the `Path.of` will throw an `InvalidPathException` if it encounters the colon (for windows)","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/:fold/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"        assertFalse(result);","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"            Path path \u003d Path.of(\"/data/:fold/out.json\");","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"            result \u003d FilePathChecker.containsIllegalFolderNames(path);","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"            assertTrue(result);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"            assertTrue(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/\\\"IllegalQuote\\\"/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/ou|t.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/?out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/*/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"annoy-o-mus"},"content":"        result \u003d FilePathChecker.containsIllegalCharacters(\"/data/\u0027IllegalQuote1\u0027/out.json\");","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(result);","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"annoy-o-mus":125}},{"path":"src/test/java/meditracker/storage/JsonExporterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":" * A class to test the JSON export functionality.","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"public class JsonExporterTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"    private static Path fileToExport \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"     * Pre-populate the medication manager with some medications that we need to simulate data exporting. They can be","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"     * potentially errornous (i.e. empty field where they are not supposed to be).","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"    @BeforeAll","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    public static void initiateMedicationManager()","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"        Method addMedicationWithoutChecksMethod \u003d","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"                MedicationManager.class.getDeclaredMethod(\"addMedicationWithoutChecks\", Medication.class);","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"        addMedicationWithoutChecksMethod.setAccessible(true);","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        Medication med1 \u003d new Medication(","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"                \"Test Valid Medication one\",","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"                69.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"                1.0,","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"                2.0,","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"                LocalDate.parse(\"2024-11-23\", dateTimeFormatter),","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"                \"No Remarks\",","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"                87","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"        Medication med2 \u003d new Medication(","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"                \"Test Valid Medication two\",","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"                10000.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"                1.0,","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"                LocalDate.parse(\"2025-01-01\", dateTimeFormatter),","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"                \"\",","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"                87","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"        Medication med3 \u003d new Medication(","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"                \"Invalid Medication name 4\",","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"                999.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"e0958902"},"content":"                LocalDate.parse(\"2025-01-01\", dateTimeFormatter),","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"                \"null\",","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"                87","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        addMedicationWithoutChecksMethod.invoke(MedicationManager.class, med1);","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"        addMedicationWithoutChecksMethod.invoke(MedicationManager.class, med2);","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        addMedicationWithoutChecksMethod.invoke(MedicationManager.class, med3);","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"    public void setUpWriteFile() {","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"        Path jsonSaveFile \u003d MediTrackerFileConfig.getDefaultJsonSaveFilePath();","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"        fileToExport \u003d FileReaderWriter. getCreatedTemporarySaveFile(jsonSaveFile);","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"    @AfterEach","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"    public void cleanup() {","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"            if (fileToExport !\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"                Files.deleteIfExists(fileToExport);","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"    public void placeHolder() {","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"        JsonExporter.saveMedicationDataToJson(fileToExport);","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"e0958902":6,"nickczh":6,"annoy-o-mus":73,"T0nyLin":6,"wenenhoe":8}},{"path":"src/test/java/meditracker/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package meditracker.ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"//Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"class UiTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    private static final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"    private static final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    @BeforeAll","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"    public static void setUpStream() {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    @AfterAll","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"    public static void restoreStreams() {","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"    void printMedsList_sizeOfMedicationList_expectPrintedList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"        List\u003cDailyMedication\u003e medications \u003d new ArrayList\u003c\u003e(1);","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        Ui.printMedsList(medications);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"        StringBuilder expectedOutput \u003d new StringBuilder();","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication dailyMedication : medications) {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"            int numbering \u003d medications.indexOf(dailyMedication) + 1;","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"            expectedOutput.append(\"\\t\")","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"                    .append(numbering).append(\". \").append(dailyMedication)","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(expectedOutput.toString(), output.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"e0958902":1,"T0nyLin":45}}]
