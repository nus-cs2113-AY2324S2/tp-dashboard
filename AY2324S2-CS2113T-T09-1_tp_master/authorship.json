[{"path":".github/pull_request_template.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# Checklist for feature implementation and modification","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"Closes #\u003cIssue_Number\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"- [ ] Added relevant milestone (under milestone tab on the right)","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"- Implementation","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Sources (if any) credited under both relevant section(s) and Developer Guide (Acknowledgement)","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] JUnit Test(s)","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"- Documentation","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] JavaDoc for classes and methods","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"  - Developer Guide","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Design (Can add as a todo statement for later on)","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Implementation (Can add as a todo statement for later on)","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Relevant User Story present","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Non-functional requirement(s) that the feature addresses (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Glossary of the (technical) term(s) used (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Specialised instructions for manual testing (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"  - User Guide","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Description and usage of feature (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"  - Contributions (under `/docs/team/*.md`)","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Code/Feature/Enhancement contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Developer Guide contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] User Guide contribution","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    - [ ] Misc and team-based admin tasks (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"# Checklist for non-implementation related PR","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"Closes #\u003cIssue_Number\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"- [ ] Added relevant milestone (under milestone tab on the right)","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"- Documentation (Contributions)","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Developer Guide contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] User Guide contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Review contributions (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"  - [ ] Miscellaneous and team-based admin tasks (if any)","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"# Additional Information","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- Add any useful information related to the PR here --\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"Nil","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"annoy-o-mus":37}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# MediTracker ","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"This is a project based off of a template for a greenfield Java project. Given below are instructions on how to use it.","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"annoy-o-mus":2,"-":62}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    //https://central.sonatype.com/artifact/org.json/json","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    implementation group: \u0027org.json\u0027, name: \u0027json\u0027, version: \u002720240303\u0027","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"    mainClass.set(\"meditracker.MediTracker\")","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"    archiveBaseName.set(\"meditracker\")","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"annoy-o-mus":4,"T0nyLin":1,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |    Name    | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"--------|:----------:|:--------------:|:---------:","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"![](https://avatars.githubusercontent.com/u/33289235) | Hoe Wen En | [Github](https://github.com/wenenhoe) | [Portfolio](team/wenenhoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"![](https://avatars.githubusercontent.com/u/48584322?v\u003d4) | Nick Chua  | [Github](https://github.com/nickczh) | [Portfolio](team/nickchua.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"![](https://avatars.githubusercontent.com/u/122875764) | Nyan Lin Htet | [Github](https://github.com/T0nyLin) | [Portfolio](team/linhtet.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"![](https://avatars.githubusercontent.com/u/156929749) | Eric Sim Chong Li | [Github](https://github.com/e0958902) | [Portfolio](team/ericsimchongli.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"![](avatars.githubusercontent.com/u/110549110) | Kaitlyn Chong | [Github](https://github.com/kyuichyi) | [Portfolio](team/kaitlynchong.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"![](https://avatars.githubusercontent.com/u/55198236) | Neo Song Xuan | [Github](https://github.com/annoy-o-mus) | [Portfolio](team/songxuan.md)","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"nickczh":2,"e0958902":1,"annoy-o-mus":1,"T0nyLin":1,"kyuichyi":1,"wenenhoe":1,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"Ideas and structure for the Developer Guide: https://se-education.org/addressbook-level3/DeveloperGuide.html","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"Ideas and structure for the User Guide: https://se-education.org/addressbook-level3/UserGuide.html","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"Additional Packages used: JSON","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"## Setting up and getting started","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"### Add Medication Command","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"The add medication command extends from the Command parent class and implements the following operations:","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"- execute(MedicationManager, DailyMedicationManager, Ui) - Adds the medication object into the respective medication managers.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"- setMedicineAttributes() - Sets the medicine object\u0027s attributes to be added to the medicine managers. ","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"- assertionTest(MedicationManager, DailyMedicationManager) - Asserts that medicine has been added to both medication managers.","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"- parseStringToValues(Arguments) - Parses string input for medicine quantity and dosage into double type.","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"Given below is an example usage scenario and how the add command behaves at each step.","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"- Step 1. To be added.","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"- Step 2. To be added.","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"---","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"### List Medication Command","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"The list medication command extends from Command parent class and contains the following methods:","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"- execute(MedicationManager medicationManager) - Executes the list command and performs its specific task, -t.","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"```Where the task can be either \u0027list -t all\u0027 to list all medications or \u0027list -t today\u0027 to list medications for the day, which is divided into three categories -\u003e Morning, Afternoon and Evening. ```","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"e0958902"},"content":"The \u0027list -t\u0027 command requires the following:","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"e0958902"},"content":"1. \u0027all\u0027 - to run printAllMedications() from the MedicationManager.","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"2. \u0027today\u0027 - to run printMedications() from the DailyMedicationManager.","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"3. \u0027today -m\u0027 to run printTodayMedications(List\u003cMedication\u003e medications, List\u003cDailyMedication\u003e subList, String period)","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"   from the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"4. \u0027today -a\u0027 to run printTodayMedications(List\u003cMedication\u003e medications, List\u003cDailyMedication\u003e subList, String period)","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"   from the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"5. \u0027today -e\u0027 to run printTodayMedications(List\u003cMedication\u003e medications, List\u003cDailyMedication\u003e subList, String period)","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"   from the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"### Search Medication Command","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"kyuichyi"},"content":"The search medication command extends from Command parent class and contains the following methods:","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"- execute(MedicationManager, DailyMedicationManager, Ui) - Searches the local medication library for medication names,","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"kyuichyi"},"content":"what illnesses they treat and their side effects, and prints the results to the user.","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"kyuichyi"},"content":"The \u0027search\u0027 command requires the following:","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"kyuichyi"},"content":"1. To be added.","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"### Utilising the argument parser","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"The `ArgumentParser` requires the following to work:","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"1. `ArgumentList` object","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"2. Raw user input in `String`","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"The `ArgumentList` object constitutes a combination of `Argument` objects. The constructor for ","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"the `ArgumentList` takes in a variable amount of `Argument`-extended classes. Additional assertion","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"tests have been added to ensure that certain attributes of the `Argument` classes do not clash with","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"one another. `HelpArgument` is automatically added when an `ArgumentList` object is instantiated.","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"Calling `ArgumentList.parse` with empty `String` or invoking with the argument `-h` will trigger the","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"help message to be printed on the console.","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"An `Argument` object consists of the following:","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"1. `name`: Name of the argument, uses enum type `ArgumentName` as this value is used by `ArgumentParser` as well","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"2. `flag`: Takes the form of `-*` where `*` represents any number of alphabetic characters","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"3. `prompt`: Used within the guided prompt system","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"4. `help`: Used in printing help message to provide user with the usage for the argument","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"5. `isOptional`: A `boolean` value to specify whether this argument is optional or not. This value is utilised","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"by the `ArgumentParser` to determine whether the argument is required, and will throw a `ArgumentNotFound` ","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"exception if this argument is required but not found in user specified argument string.","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"6. `hasValue`: A `boolean` value to specify whether this argument has a corresponding value tied to it. ","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"`ArgumentParser` requires this to know whether to take the value specified by the user.","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"Additional information regarding the `ArgumentName` enum:","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"- To create a new enum, follow the following convention: `ALL_CAPS_NAME(“justFollowAttributeNamingConvention”)`","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"- This enum is used in `ArgumentParser` when it returns a `Map\u003cArgumentName, String\u003e`, where the enum is used as","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"the key. In order to query the returned data structure, you can utilise the same enum.","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"In order to utilise the argument parser,","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"1. Determine if the `Argument` variant already exist. If not, create a new class and extend the `Argument` class.","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"2. Prior to completing the creation of your new class, create a new enum in `ArgumentName`.","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"3. In the class/method that you intend to use the `ArgumentParser`, create a `ArgumentList` and specify the required","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"`Argument` objects.","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"4. Finally, invoking `ArgumentList.parse` with the `String` object to obtain the parsed argument values.","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"Overview of the `meditracker.argument` core classes:","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"- TODO: Add class diagrams and/or object diagrams required to illustrate the above information","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"---","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Design and Implementation of the Logging Functionaity (SX) (Issue #41)","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Design and Implementing of the Load and Save functionality (SX) (Issue #25)","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Design and Implementing of the Reading and Writing of JSON file (SX) (Issue #27)","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Consider the design and impl. of #48","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":103,"author":{"gitId":"e0958902"},"content":"People who are taking medications on a daily basis.","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"e0958902"},"content":"MediTracker ensures that you would now forget your overall schedule on what time and day to take your medication.","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"e0958902"},"content":"Ensuring that you would not forget your next dose of medication.","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"|Version| As a ...          | I want to ...                                                | So that I can ...                                                                                                                                      |","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"e0958902"},"content":"|--------|-------------------|--------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"e0958902"},"content":"|v1.0| user              | enter my medications with its relevant information in one go | add my medication entry efficiently and refer to them when I forget my medication information                                                          |","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"e0958902"},"content":"|v1.0| user              | indicate the medications that I have taken                   | know when is my next dose and how well I am following doctors orders, and show how well I am taking my medications at the appropriate times of the day |","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"e0958902"},"content":"|v1.0| user              | know what medications i have to take throughout the day      | mark them as takenor not, thus not miss or forget to take what I have to take for the day                                                              |","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"e0958902"},"content":"|v1.0| user              | edit the details in my medication list                       | ensure that its medication information is up-to-date with my medifications                                                                             |","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"T0nyLin"},"content":"|v1.0| user              | delete medications medication list                           | remove medications that I do not need will not be there anymore                                                                                        |","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"kyuichyi"},"content":"|v1.0| user              | search medications from existing medicine library            | search medications locally to have a quick preview of them and their purpose without the web                                                           |","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"annoy-o-mus"},"content":"|v1.0| multipurpose user | Store data locally                                           | Use the application and see the data even when offline between sessions                                                                                |","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"kyuichyi"},"content":"|v1.0| user              | know the list of medications I have added                    | have a quick overview of the medication list and check the quantity and expiry date of each medication                                                 |","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"e0958902"},"content":"|v2.0| user              | find a to-do item by name                                    | locate a to-do without having to go through the entire list                                                                                            |","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"annoy-o-mus"},"content":"- The user\u0027s program data should be persistent between program sessions.","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"},{"lineNumber":135,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Talk about how to test with different kinds of JSON file, and provide a sample JSON file with instructions on how to use it. (SX)","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"e0958902":19,"nickczh":12,"annoy-o-mus":14,"T0nyLin":7,"kyuichyi":10,"wenenhoe":41,"-":32}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# MediTracker ","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"A place to track all your medications!","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"annoy-o-mus":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- ","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"CREDIT: We try to follow the ideas and structure of the following sample user guide:","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"https://se-education.org/addressbook-level3/UserGuide.html","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"--\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{Give a product intro}","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* The `TODO_NAME` cannot contain punctuation.  ","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"- TODO: Add warning about modifying the text files","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"annoy-o-mus":7,"-":42}},{"path":"docs/team/ericsimchongli.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"# Eric Sim Chong Li - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"The following contains my contribution summary and pull request reviews.","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"- Created relevant milestones labels","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"- Map some of the user stories to issues","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"- Reviewed multiple pull requests (PR)","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"- Issue #49: list all medications from \u0027MedicationManager\u0027 ","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"- Added guide on how to improve on ListCommand in the developer guide","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"- Information on how ListCommand works and how to use it.","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"- Relevant user stories done in milestone v1.0","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"- To be filled in.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"### PR Reviews","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"#9, #18, #20, #23, #53, #73, #75","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"e0958902":21}},{"path":"docs/team/kaitlynchong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"# Kaitlyn Chong - Project Portfolio Page","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"kyuichyi":1,"-":5}},{"path":"docs/team/linhtet.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"# Nyan Lin Htet - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"The following contains my contribution summary and pull request reviews.","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"- Issue #13: Query Certain Time of the Day Medication Information in `DailyMedication`","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"- Issue #34: Query `DailyMedication` list","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"- Issue #50: Parse each row read from file int `DailyMedicationManager`","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"- Issue #52: Bridging `DailyMedicationManager` and `MedicationManager`","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"- Issue #69: Store `DailyMedication` list into testfile","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"- Issue #79: Create private Ui constructor","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"- Issue #81: Modify `DailyMedicationManager` to static","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"- Added some user stories into the table","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"- Added command guide for list -t today -m/-a/-e will print","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"- To be filled in.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"### PR Reviews","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"#4, #5, #8, #10, #54, #56, #57, #68, #75, #78, #85, #88","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"T0nyLin":24}},{"path":"docs/team/nickchua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"# Nick Chua - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"#### Refactor:","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"- Package names","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"- Gradle configuration files","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"#### Ui:","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"- Develop the user interface for the MediTracker. ","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"- It includes getting the user input, printing the welcome, exit message and more.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"#### Command:","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"- Create command abstract class, AddCommand and ExitCommand. Add JUnit test for AddCommand.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"#### Medication:","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"- Create Medication class and MedicationList class","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"#### Defensive code:","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"Handled exceptions in MediTracker class as well as invalid command input in Command class.","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":18}},{"path":"docs/team/songxuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"# Song Xuan - Project Portfolio Page","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"## Overview","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"## Summary of Contributions","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"### Code related Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #41: Create a common logging class for the whole program","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #25: Create and Open the JSON save file ","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #27, #55: Read and Write medication-related data to JSON file","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #48: Read and wrote daily medication related data to txt file","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"- Issue #41: Introduce MediTracker Logger for logging","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"\u003c!-- To talk about Issue 25 --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"### PR Reviews","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"#2, #5, #40, #44, #51, #66, #82, #87","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"### Team-based tasks","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"- Added PR Template (#11, #21).","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"- Set up the GitHub Team organisation and Repo","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"  - Restricted direct master branch merging","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"  - Disabled rebase and squash merging (thanks @wenenhoe)","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"- Brought in the JSON package (https://github.com/stleary/JSON-java) (#26)","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"annoy-o-mus":28}},{"path":"docs/team/wenenhoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"# Hoe Wen En - Project Portfolio Page","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"## Overview","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"### Code related Contributions","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"- Issue #19: Mark taken status for `DailyMedication`","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"- Issue #36: Added argument parser to handle all `Command`s\u0027 arguments +","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"             Modify medication information through command             ","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"- Issue #37: Delete medication from `MedicationManager`","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"- Issue #60: Bug `ModifyCommand` overwrite other fields erroneously","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"- Issue #65: Bug Modify medication name does not update `DailyMedication` name","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"- Issue #77: Add support for no value flag arguments","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"- Issue #86: Add help messages for the different commands","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"- Issue #91: Add time period arguments and quantity management logic","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"### Developer Guide Contributions","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"- Information related to how `ArgumentParser` works","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"- Included what is required to add on and further extend the argument package","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"if more `Argument`s are needed","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"- Added information on how help messages for `ArgumentList` is generated","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"### User Guide Contributions","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"### PR Reviews","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"#3, #6, #7, #10, #12, #17, #22, #28, #33, ","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"#35, #47, #49, #58, #59, #73, #75, #80, #84","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"wenenhoe":28}},{"path":"src/main/java/meditracker/MediTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"import meditracker.command.Command;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.CommandName;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.CommandParser;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.CommandNotFoundException;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InvalidArgumentException;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":" * The main class for the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":" * It initializes the user interface and runs the application loop.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"public class MediTracker {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    private MedicationManager medicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"     * Constructs a new MediTracker object and initializes both medicationManager and","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"     * dailyMedicationManager.","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"    public MediTracker() {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"        DailyMedicationManager.createDailyMedicationManager();","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"     * Constructs a new MediTracker object with data from save file for DailyMedicationManager","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"     * @param dailyMedicationList Daily medication","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"    public MediTracker(List\u003cString\u003e dailyMedicationList) {","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.importDailyMedicationManager(dailyMedicationList);","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"     * Runs the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"     * This method displays a welcome message, reads user commands, and processes them until the user exits the","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"     * application.","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"     * @throws FileReadWriteException when there is error to write into text file.","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"    public void run() throws FileReadWriteException {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        //@@author nickczh-reused","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/nickczh/ip","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        //with minor modifications","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        FileReaderWriter.loadMediTrackerData(medicationManager);","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Ui.showLine();","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            String fullCommand \u003d Ui.readCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            CommandParser commandParser;","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                commandParser \u003d new CommandParser(fullCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            } catch (CommandNotFoundException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                // Just pressing enter into console, skip processing","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            CommandName commandName \u003d commandParser.getCommandName();","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Command command;","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                command \u003d commandParser.getCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            } catch (ArgumentNotFoundException | DuplicateArgumentFoundException | CommandNotFoundException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            } catch (HelpInvokedException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                String helpMessage \u003d ArgumentHelper.getHelpMessage(commandName);","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                System.out.println(helpMessage);","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            } catch (FileReadWriteException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                throw new FileReadWriteException(\"IO Error: Unable to write to text File\");","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            } catch (InvalidArgumentException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Starts the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * It creates a new MediTracker object and calls its run() method.","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws FileReadWriteException when there is error to write into text file.","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static void main(String[] args) throws FileReadWriteException {","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        MediLogger.initialiseLogger();","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        List\u003cString\u003e dailyMedicationList \u003d FileReaderWriter.loadDailyMedicationData();","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (dailyMedicationList \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            new MediTracker().run();","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            new MediTracker(dailyMedicationList).run();","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":22,"e0958902":1,"annoy-o-mus":14,"T0nyLin":5,"wenenhoe":11,"-":60}},{"path":"src/main/java/meditracker/argument/AfternoonArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument to represent afternoon","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class AfternoonArgument extends Argument {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public AfternoonArgument(boolean isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.AFTERNOON,","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-a\",","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Time of day: Afternoon\",","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":17}},{"path":"src/main/java/meditracker/argument/Argument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument class to store the name of the argument,","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" * corresponding flag for it, the prompt that will be used","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" * to guide the user to input that argument, help message","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":" * if user require additional context, whether the argument","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":" * is optional or not, and whether the argument has a","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":" * corresponding value.","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"public abstract class Argument {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    private final ArgumentName name;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    private final String flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    private final String prompt;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    private final String help;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    private final boolean isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"    private final boolean hasValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"     * Constructs Argument object with the fields required to","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"     * handle this input type","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the argument","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     * @param flag Corresponding flag for the argument, takes the form of \"-*\"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     *             where \"*\" represents a single letter","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     * @param prompt Guided prompt message","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * @param help Help message for additional context","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     * @param isOptional Whether this argument is optional or required","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"     * @param hasValue Whether this argument requires a value specified with it","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    public Argument(ArgumentName name,","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"                    String flag,","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"                    String prompt,","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"                    String help,","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"                    boolean isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"                    boolean hasValue) {","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"        this.prompt \u003d prompt;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        this.help \u003d help;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        this.isOptional \u003d isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        this.hasValue \u003d hasValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentName getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    public String getFlag() {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"        return flag;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    public String getPrompt() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        return prompt;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    public String getHelp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        return help;","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"    public boolean isOptional() {","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        return isOptional;","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"    public boolean hasValue() {","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        return hasValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":68}},{"path":"src/main/java/meditracker/argument/ArgumentHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.AddCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.CommandName;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.DeleteCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.ListCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.ModifyCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.TakeCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.command.UntakeCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":" * ArgumentHelper class to handle generating the help messages,","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":" * consisting of the general command usage and a breakdown of the","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":" * various command argument options.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentHelper {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"     * Gets the help message for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     * @param commandName Enum of the Command that is getting the help message","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     * @return The help message for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    public static String getHelpMessage(CommandName commandName) {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        switch (commandName) {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"        case ADD:","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"            return AddCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        case MODIFY:","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"            return ModifyCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"        case LIST:","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            return ListCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        case DELETE:","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            return DeleteCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        case TAKE:","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            return TakeCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        case UNTAKE:","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"            return UntakeCommand.HELP_MESSAGE;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        case SEARCH: // fall through","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        case EXIT: // fall through","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        case UNKNOWN: // fall through","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"            throw new IllegalStateException(\"No available help message for \" + commandName);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * Generates the help message for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * @param commandName Enum of the Command that is generating the help message","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList Corresponding list of Argument for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     * @return The help message generated for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    public static String getHelpMessage(CommandName commandName, ArgumentList argumentList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"        String usage \u003d getUsage(commandName, argumentList);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        String options \u003d getOptions(argumentList);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        message.append(usage).append(System.lineSeparator()).append(options);","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        return message.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"     * Generates the usage for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"     * @param commandName Enum of the Command that is generating the help message","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList Corresponding list of Argument for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"     * @return The usage for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"    private static String getUsage(CommandName commandName, ArgumentList argumentList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        StringBuilder usageString \u003d new StringBuilder(\"Usage:\");","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        usageString.append(System.lineSeparator());","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        String command \u003d commandName.name().toLowerCase();","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"        usageString.append(\"\\t\").append(command);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"        List\u003cArgument\u003e arguments \u003d argumentList.getArguments();","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument : arguments) {","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"            boolean isOptional \u003d argument.isOptional();","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"            String argumentFormat \u003d ArgumentHelper.getArgumentFormat(argument);","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"            if (isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"                argumentFormat \u003d String.format(\" [%s]\", argumentFormat);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"                argumentFormat \u003d String.format(\" (%s)\", argumentFormat);","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"            usageString.append(argumentFormat);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"        return usageString.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"     * Generates the command options for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList Corresponding list of Argument for that Command","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"     * @return The command options for the corresponding Command","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"    private static String getOptions(ArgumentList argumentList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"        StringBuilder optionsString \u003d new StringBuilder(\"Options:\");","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"        List\u003cArgument\u003e arguments \u003d argumentList.getArguments();","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"        int maxWidth \u003d arguments.stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"                .map(ArgumentHelper::getArgumentFormat)","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"                .map(String::length)","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"                .max(Integer::compareTo).get() + 5;","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument : arguments) {","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"            String argumentFormat \u003d ArgumentHelper.getArgumentFormat(argument);","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"            String helpMessage \u003d argument.getHelp();","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"            String formatSpecifier \u003d \"\\t%-\" + maxWidth + \"s%s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"            String argumentHelpMessage \u003d String.format(formatSpecifier, argumentFormat, helpMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"            optionsString.append(System.lineSeparator());","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"            optionsString.append(argumentHelpMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"        return optionsString.toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"     * Formats the argument depending on whether it has value or not","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"     * @param argument Argument to format","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"     * @return The string in the format of flag (and name)","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"    private static String getArgumentFormat(Argument argument) {","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"        String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d argument.getName().value;","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"        boolean hasValue \u003d argument.hasValue();","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"        if (hasValue) {","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"            return String.format(\"%s %s\", flag, name);","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"            return String.format(\"%s\", flag);","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":139}},{"path":"src/main/java/meditracker/argument/ArgumentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":" * ArgumentList class for managing a list of Argument","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":" * Calls on ArgumentParser when parse method is invoked","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":" * @see ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentList {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    private final List\u003cArgument\u003e arguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     * Constructs ArgumentList to take in variable length of Argument","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     * Assertion test is used to check no flag collision for the","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     * arguments specified","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments Arguments to be included in the list","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentList(Argument... arguments) {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        List\u003cArgument\u003e newArguments \u003d new ArrayList\u003c\u003e(List.of(arguments));","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        newArguments.add(new HelpArgument());","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        this.arguments \u003d newArguments;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        // assertion test: check for flag collisions","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        Set\u003cString\u003e flags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument: arguments) {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"            String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            assert !flags.contains(flag);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"            flags.add(flag);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     * Parses user raw input arguments into ArgumentName and","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     * corresponding argument value","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInput Raw input to be parsed","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     * @return A map of argument name as key and the corresponding value","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException When argument required not found","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException When duplicate argument found","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * @see ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    public Map\u003cArgumentName, String\u003e parse(String rawInput)","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"        ArgumentParser argumentParser \u003d new ArgumentParser(this, rawInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"        boolean hasCalledForHelp \u003d argumentParser.parsedArguments.get(ArgumentName.HELP) !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        if (hasCalledForHelp) {","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"            throw new HelpInvokedException();","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        argumentParser.checkForMissingRequiredArguments(); // throws ArgumentNotFoundException","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        return argumentParser.parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"    public List\u003cArgument\u003e getArguments() {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        return arguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":69}},{"path":"src/main/java/meditracker/argument/ArgumentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * ArgumentName enum to standardise the enum values for use","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" * by Command classes and ArgumentParser","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"public enum ArgumentName {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    DOSAGE(\"dosage\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    DOSAGE_MORNING(\"dosageMorning\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"    DOSAGE_AFTERNOON(\"dosageAfternoon\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"    DOSAGE_EVENING(\"dosageEvening\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    EXPIRATION_DATE(\"expirationDate\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    INTAKE_FREQUENCY(\"intakeFrequency\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    REPEAT(\"repeat\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"    DAY_ADDED(\"dayAdded\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    LIST_INDEX(\"listIndex\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"    NAME(\"name\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    QUANTITY(\"quantity\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"    REMARKS(\"remarks\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    LIST_TYPE(\"listType\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    HELP(\"help\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    MORNING(\"morning\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    AFTERNOON(\"afternoon\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    EVENING(\"evening\");","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    public final String value;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    ArgumentName(String value) {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"    //@@author annoy-o-mus","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"     * Performs a reverse search to get the enum value from the associated string.","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"     * @param valueToCompare The String value to compare to get the enum.","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The corresponding enum if it matches the value compared. Null otherwise.","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"     * @see meditracker.command.CommandName for a similar implementation (adapted from there)","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"    public static ArgumentName getEnumOfArgumentValue(String valueToCompare) {","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"        for (ArgumentName argName : values()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"            if (argName.value.equals(valueToCompare)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"                return argName;","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"        return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nickczh":4,"e0958902":1,"annoy-o-mus":19,"wenenhoe":24}},{"path":"src/main/java/meditracker/argument/ArgumentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import java.util.SortedMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import java.util.TreeMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":" * ArgumentParser class to handle parsing of user input","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":" * All arguments have to be specified with a flag.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"class ArgumentParser {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    protected final Map\u003cArgumentName, String\u003e parsedArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    private final ArgumentList argumentList;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"     * Constructs ArgumentParser that parses raw input into corresponding key value pairs","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"     * @param argumentList List of argument","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInput Raw input to be parsed","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentParser(ArgumentList argumentList, String rawInput)","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"            throws DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        this.argumentList \u003d argumentList;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        List\u003cString\u003e rawInputSplit \u003d List.of(rawInput.split(\" \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        SortedMap\u003cInteger, Argument\u003e indexes \u003d getArgumentIndexes(rawInputSplit);","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        if (indexes.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            throw new HelpInvokedException();","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"        getArgumentValues(indexes, rawInputSplit);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     * Checks for missing required arguments","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    public void checkForMissingRequiredArguments() throws ArgumentNotFoundException {","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"        for (Argument argument: argumentList.getArguments()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"            String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"            boolean isFoundInParsedArgs \u003d parsedArguments.containsKey(argument.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"            boolean isRequired \u003d !argument.isOptional();","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"            boolean isMissing \u003d isRequired \u0026\u0026 !isFoundInParsedArgs;","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"            if (isMissing) {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"                // arg keyword not found in additional input","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"                String errorContext \u003d String.format(\"Missing \\\"%s\\\" argument\", flag);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"                throw new ArgumentNotFoundException(errorContext);","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"     * Obtains argument value using start and end index of the raw input list","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"     * @param startIndex Start index in rawInputSplit of argument value","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"     * @param endIndex End index in rawInputSplit of argument value","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"     * @return Corresponding argument value, joined with spaces","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"    private static String getArgumentValue(List\u003cString\u003e rawInputSplit, int startIndex, int endIndex) {","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        List\u003cString\u003e argContentList \u003d rawInputSplit.subList(startIndex, endIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        return String.join(\" \", argContentList).strip();","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"     * Obtains the argument index from the raw input list","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"     * @param flag Argument flag to index","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"     * @return Index of the argument flag","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"    private static int getArgumentIndex(List\u003cString\u003e rawInputSplit, String flag)","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"            throws DuplicateArgumentFoundException {","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"        int firstFlagIndex \u003d rawInputSplit.indexOf(flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"        int lastFlagIndex \u003d rawInputSplit.lastIndexOf(flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"        if (firstFlagIndex !\u003d lastFlagIndex) {","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"            String errorContext \u003d String.format(\"Duplicate \\\"%s\\\" argument found\", flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"            throw new DuplicateArgumentFoundException(errorContext);","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"        return firstFlagIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"     * Sorts a list of argument flags and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"     * @return A sorted map of arguments and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    //@@author wenenhoe-reused","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/wenenhoe/ip with minor modifications","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private SortedMap\u003cInteger, Argument\u003e getArgumentIndexes(List\u003cString\u003e rawInputSplit)","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throws DuplicateArgumentFoundException {","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        SortedMap\u003cInteger, Argument\u003e indexes \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        for (Argument argument: argumentList.getArguments()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            String flag \u003d argument.getFlag();","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            int flagIndex \u003d ArgumentParser.getArgumentIndex(rawInputSplit, flag);","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            boolean isNotFound \u003d flagIndex \u003d\u003d -1;","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (!isNotFound) {","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                indexes.put(flagIndex, argument);","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return indexes;","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Obtains a map of argument flags and their corresponding value, using a sorted ordering","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * of the argument flags indexes.","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @param indexes A sorted map of arguments and their corresponding indexes","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @param rawInputSplit List of raw input split by spaces","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //@@author wenenhoe-reused","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/wenenhoe/ip with modifications to support","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //arguments without corresponding value","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void getArgumentValues(SortedMap\u003cInteger, Argument\u003e indexes, List\u003cString\u003e rawInputSplit) {","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Argument argument \u003d indexes.get(indexes.firstKey());","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        ArgumentName argKey \u003d argument.getName();","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        boolean hasValue \u003d argument.hasValue();","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        int startIndex \u003d indexes.firstKey() + 1; // position after argument flag","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        int endIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        boolean isSkipFirst \u003d false;","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cInteger, Argument\u003e index: indexes.entrySet()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            if (!isSkipFirst) {","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                isSkipFirst \u003d true; // Skips first map entry","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            endIndex \u003d index.getKey();","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String argValue;","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            if (hasValue) {","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                argValue \u003d ArgumentParser.getArgumentValue(rawInputSplit, startIndex, endIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                argValue \u003d \"\"; // No value to be stored","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            parsedArguments.put(argKey, argValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            argument \u003d index.getValue();","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            argKey \u003d argument.getName();","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            hasValue \u003d argument.hasValue();","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            startIndex \u003d endIndex + 1; // position after argument flag","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        endIndex \u003d rawInputSplit.size();","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String argValue \u003d ArgumentParser.getArgumentValue(rawInputSplit, startIndex, endIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        parsedArguments.put(argKey, argValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":101,"-":61}},{"path":"src/main/java/meditracker/argument/DosageAfternoonArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the afternoon dosage of medication to be taken.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class DosageAfternoonArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a DosageAfternoonArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public DosageAfternoonArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"                ArgumentName.DOSAGE_AFTERNOON,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-dA\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"                \"What is the afternoon dosage of this medication?\",","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"                \"Afternoon dosage of medication\",","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":21,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/DosageArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Dosage of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class DosageArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public DosageArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.DOSAGE,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-d\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"How much medication should you take?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Dosage of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":17}},{"path":"src/main/java/meditracker/argument/DosageEveningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the evening dosage of medication to be taken.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class DosageEveningArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a DosageEveningArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public DosageEveningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"                ArgumentName.DOSAGE_EVENING,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-dE\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"                \"What is the evening dosage of this medication?\",","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"                \"Evening dosage of medication\",","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":21,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/DosageMorningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the morning dosage of medication to be taken.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class DosageMorningArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a DosageMorningArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public DosageMorningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"                ArgumentName.DOSAGE_MORNING,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-dM\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"                \"What is the morning dosage of this medication?\",","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"                \"Morning dosage of medication\",","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":21,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/EveningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument to represent evening","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class EveningArgument extends Argument {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public EveningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.EVENING,","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-e\",","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Time of day: Evening\",","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":17}},{"path":"src/main/java/meditracker/argument/ExpirationDateArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Expiration date of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class ExpirationDateArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public ExpirationDateArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.EXPIRATION_DATE,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-e\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"When does the medication expire?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Expiration date of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":17}},{"path":"src/main/java/meditracker/argument/HelpArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Help argument to print help message","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class HelpArgument extends Argument {","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    protected HelpArgument() {","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.HELP,","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-h\",","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"What do you need help with?\",","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Prints this help message\",","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                true,","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"wenenhoe":17}},{"path":"src/main/java/meditracker/argument/IntakeFrequencyArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the intake frequency of medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"public class IntakeFrequencyArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs an IntakeFrequencyArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    public IntakeFrequencyArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.INTAKE_FREQUENCY,","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"                \"-f\",","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"                \"How often should this medication be taken during the day?\",","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"                \"Intake frequency of medication during the day\",","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nickczh":9,"wenenhoe":14}},{"path":"src/main/java/meditracker/argument/ListIndexArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * List index of Medication or DailyMedication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class ListIndexArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public ListIndexArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.LIST_INDEX,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-l\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"What is the index of item in list?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Index of item in list\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":17}},{"path":"src/main/java/meditracker/argument/ListTypeArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":" * Lists the summary of the medications in Medication","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"public class ListTypeArgument extends Argument {","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"    public ListTypeArgument(boolean isOptional) {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"        super(","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"                ArgumentName.LIST_TYPE,","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"                \"-t\",","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"                \"Show today/morning/afternoon/evening/all medications?\",","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"                \"Lists medications accordingly\",","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"        );","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"e0958902":15,"wenenhoe":2}},{"path":"src/main/java/meditracker/argument/MorningArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Argument to represent morning","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class MorningArgument extends Argument {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public MorningArgument(boolean isOptional) {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.MORNING,","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-m\",","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Time of day: Morning\",","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"                false","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":17}},{"path":"src/main/java/meditracker/argument/NameArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Name of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class NameArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public NameArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.NAME,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-n\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"What is the name of the medication?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Name of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":17}},{"path":"src/main/java/meditracker/argument/QuantityArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Quantity of medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class QuantityArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public QuantityArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.QUANTITY,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-q\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"How much of the medication do you have?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Quantity of medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":17}},{"path":"src/main/java/meditracker/argument/RemarksArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Remarks for medication","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class RemarksArgument extends Argument {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public RemarksArgument(boolean isOptional) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.REMARKS,","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"                \"-r\",","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"                \"Any additional remarks?\",","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"                \"Additional remarks on medication\",","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":17}},{"path":"src/main/java/meditracker/argument/RepeatArgument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * Represents the repeat frequency of medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * Extends the Argument class.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class RepeatArgument extends Argument {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a RepeatArgument object with the specified optional status.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     * @param isOptional true if the argument is optional, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    public RepeatArgument(boolean isOptional) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"        super(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"             ArgumentName.REPEAT,","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"                \"-rep\",","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"                \"How often do you need to take this medication?\",","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"                \"How often to take medication (eg: once a day, once every week)\",","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"                isOptional,","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"                true","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":21,"wenenhoe":2}},{"path":"src/main/java/meditracker/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.RepeatArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.DosageAfternoonArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.DosageMorningArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.DosageEveningArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.NameArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.QuantityArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.DosageArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.ExpirationDateArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.IntakeFrequencyArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"import meditracker.argument.RemarksArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":" * The AddCommand class represents a command to add a new medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"     * The argumentList contains all the arguments needed for adding a medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"            new NameArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"            new QuantityArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"            new DosageArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"            new DosageMorningArgument(true),","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"            new DosageAfternoonArgument(true),","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"            new DosageEveningArgument(true),","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"            new ExpirationDateArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"            new IntakeFrequencyArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"            new RemarksArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"            new RepeatArgument(true)","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"    );","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.ADD, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"    private double medicationQuantity;","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"    private double medicationDosage;","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"    private double medicationDosageMorning \u003d 0.0;","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"    private double medicationDosageAfternoon \u003d 0.0;","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"    private double medicationDosageEvening \u003d 0.0;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"     * Constructs an AddCommand object with the specified arguments.","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"     * @throws ArgumentNotFoundException if a required argument is not found.","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument found","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"    public AddCommand(String arguments)","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"nickczh"},"content":"     * Executes the add command.","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"nickczh"},"content":"     * This method creates a new Medication object using the provided information and adds it to the medication list.","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"nickczh"},"content":"     * It also displays a message confirming the addition of the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"nickczh"},"content":"     * @throws NullPointerException   if any of the required objects are null.","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"nickczh"},"content":"     * @throws NumberFormatException  if there is an error in parsing numeric values.","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"e0958902"},"content":"    public void execute() throws NullPointerException,","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"nickczh"},"content":"            NumberFormatException {","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"nickczh"},"content":"        Medication medication \u003d createMedication();","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.checkForDaily(medication);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"e0958902"},"content":"        assertionTest();","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"nickczh"},"content":"        Ui.showAddCommandMessage();","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"nickczh"},"content":"     * Sets the medication attributes based on parsed arguments.","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"     * @throws NumberFormatException if there is an error in parsing numeric values.","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"nickczh"},"content":"     * @throws NullPointerException  if any of the required arguments are null.","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"nickczh"},"content":"    private Medication createMedication() throws NumberFormatException, NullPointerException {","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"        String medicationName \u003d parsedArguments.get(ArgumentName.NAME);","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"nickczh"},"content":"        String expiryDate \u003d parsedArguments.get(ArgumentName.EXPIRATION_DATE);","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"nickczh"},"content":"        String intakeFreq \u003d parsedArguments.get(ArgumentName.INTAKE_FREQUENCY);","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"nickczh"},"content":"        String remarks \u003d parsedArguments.get(ArgumentName.REMARKS);","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"T0nyLin"},"content":"        int repeat \u003d Integer.parseInt(parsedArguments.get(ArgumentName.REPEAT));","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"nickczh"},"content":"        String medicationQuantityArg \u003d parsedArguments.get(ArgumentName.QUANTITY);","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"nickczh"},"content":"        String medicationDosageArg \u003d parsedArguments.get(ArgumentName.DOSAGE);","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"nickczh"},"content":"        String medicationDosageMorningArg \u003d parsedArguments.get(ArgumentName.DOSAGE_MORNING);","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"nickczh"},"content":"        String medicationDosageAfternoonArg \u003d parsedArguments.get(ArgumentName.DOSAGE_AFTERNOON);","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"nickczh"},"content":"        String medicationDosageEveningArg \u003d parsedArguments.get(ArgumentName.DOSAGE_EVENING);","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"nickczh"},"content":"        parseStringToValues(medicationQuantityArg, medicationDosageArg, medicationDosageMorningArg,","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"nickczh"},"content":"                medicationDosageAfternoonArg, medicationDosageEveningArg);","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"T0nyLin"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"T0nyLin"},"content":"        int dayAdded \u003d currentDate.getDayOfYear();","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"nickczh"},"content":"        return new Medication(medicationName, medicationQuantity, medicationDosage,","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"nickczh"},"content":"                medicationDosageMorning, medicationDosageAfternoon, medicationDosageEvening,","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"T0nyLin"},"content":"                expiryDate, intakeFreq, remarks, repeat, dayAdded);","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"nickczh"},"content":"     * Performs assertion tests for medication and daily medication managers.","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"e0958902"},"content":"    private void assertionTest() {","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"e0958902"},"content":"        assert MedicationManager.getTotalMedications() !\u003d 0 : \"Total medications in medication \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"nickczh"},"content":"                \"manager should not be 0!\";","lastModifiedDate":"2024-03-22"},{"lineNumber":129,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"nickczh"},"content":"     * Parses string values to double for medication attributes.","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"nickczh"},"content":"     * @param medicationQuantity      The quantity of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"nickczh"},"content":"     * @param medicationDosage        The dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"nickczh"},"content":"     * @param medicationDosageMorning The morning dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"nickczh"},"content":"     * @param medicationDosageAfternoon The afternoon dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"nickczh"},"content":"     * @param medicationDosageEvening The evening dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"nickczh"},"content":"     * @throws NumberFormatException if there is an error in parsing numeric values.","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"nickczh"},"content":"     * @throws NullPointerException  if any of the required arguments are null.","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"nickczh"},"content":"    private void parseStringToValues(String medicationQuantity, String medicationDosage,","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"nickczh"},"content":"                                     String medicationDosageMorning,","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"nickczh"},"content":"                                     String medicationDosageAfternoon, String medicationDosageEvening)","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"nickczh"},"content":"            throws NumberFormatException, NullPointerException {","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"nickczh"},"content":"        this.medicationQuantity \u003d Double.parseDouble(medicationQuantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"nickczh"},"content":"        this.medicationDosage \u003d Double.parseDouble(medicationDosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"nickczh"},"content":"        if (medicationDosageMorning !\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"nickczh"},"content":"            this.medicationDosageMorning \u003d Double.parseDouble(medicationDosageMorning);","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"nickczh"},"content":"        if (medicationDosageAfternoon !\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"nickczh"},"content":"            this.medicationDosageAfternoon \u003d Double.parseDouble(medicationDosageAfternoon);","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"nickczh"},"content":"        if (medicationDosageEvening !\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"nickczh"},"content":"            this.medicationDosageEvening \u003d Double.parseDouble(medicationDosageEvening);","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"nickczh"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":131,"e0958902":6,"T0nyLin":10,"wenenhoe":14}},{"path":"src/main/java/meditracker/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InvalidArgumentException;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    private MedicationManager medicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * Executes the command","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    public abstract void execute() throws FileReadWriteException, InvalidArgumentException;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"     * Returns the boolean to exit the program.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"     * @return False which continues program.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"        return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":18,"T0nyLin":1,"wenenhoe":5}},{"path":"src/main/java/meditracker/command/CommandName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * The CommandName enum represents the names of commands supported by the application.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":"public enum CommandName {","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    UNKNOWN(\"unknown\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"    EXIT(\"exit\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    ADD(\"add\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"    MODIFY(\"modify\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    SEARCH(\"search\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    TAKE(\"take\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    UNTAKE(\"untake\");","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"    public final String value;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"     * Constructs a CommandName enum with the specified string value.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"     * @param value The string value associated with the command name.","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"    CommandName(String value) {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"        this.value \u003d value;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"     * Returns the CommandName enum based on the provided string label.","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"     * @param label The string label representing a command name.","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"     * @return The CommandName enum corresponding to the label, or null if not found.","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // @@author Baeldung","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Reused from https://www.baeldung.com/java-enum-values","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static CommandName valueOfLabel(String label) {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        for (CommandName e : values()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            if (e.value.equals(label)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                return e;","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return CommandName.UNKNOWN;","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"nickczh":32,"wenenhoe":1,"-":12}},{"path":"src/main/java/meditracker/command/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.CommandNotFoundException;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":" * The Parser class parses user input commands into Command objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"public class CommandParser {","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    private final CommandName commandName;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    private final String arguments;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"     * Parses a full command string into a CommandName enum and arguments.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"     * @param fullCommand The full command string entered by the user.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"     * @throws CommandNotFoundException Command specified not found","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    public CommandParser(String fullCommand) throws CommandNotFoundException {","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"        if (fullCommand.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"            throw new CommandNotFoundException();","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        String[] commands \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        arguments \u003d (commands.length \u003d\u003d 2) ? commands[1] : \"\";","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"        commandName \u003d CommandName.valueOfLabel(commands[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"     * Gets the Command object based on the CommandName enum type","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"     * @return A Command object corresponding to the parsed command.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException When argument required not found","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException When duplicate argument found","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     * @throws CommandNotFoundException Command specified not found","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    public Command getCommand()","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException,","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"            CommandNotFoundException {","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"        switch (commandName) {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"        case EXIT:","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"        case ADD:","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"            return new AddCommand(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"        case MODIFY:","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"            return new ModifyCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"        case LIST:","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"e0958902"},"content":"            return new ListCommand(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"        case DELETE:","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"            return new DeleteCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"        case SEARCH:","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"kyuichyi"},"content":"            return new SearchCommand(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"        case TAKE:","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"            return new TakeCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"        case UNTAKE:","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"            return new UntakeCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        case UNKNOWN:","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"            // fall through","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"        default:","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"            throw new CommandNotFoundException();","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"    public CommandName getCommandName() {","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        return commandName;","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":27,"e0958902":1,"kyuichyi":1,"wenenhoe":41}},{"path":"src/main/java/meditracker/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":" * The DeleteCommand class represents a command to delete an existing medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false)","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.DELETE, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a DeleteCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    public DeleteCommand(String arguments)","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     * Executes the delete command.","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     * This method deletes an existing Medication object using the provided information in the medication list.","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the deletion of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"e0958902"},"content":"        MedicationManager.removeMedication(listIndex);","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"        // TODO: remove medication from DailyMedicationManager as well.","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"        Ui.showDeleteCommandMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"e0958902":3,"nickczh":1,"T0nyLin":2,"wenenhoe":50}},{"path":"src/main/java/meditracker/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" * The ExitCommand class represents a command to exit the application.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     * Executes the exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"     * This method displays the exit message using the provided user interface.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"        Ui.showExitMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"     * @return true indicating that this is an exit command.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"        return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":26,"e0958902":1,"wenenhoe":1}},{"path":"src/main/java/meditracker/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import meditracker.argument.ListTypeArgument;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":" * The ListCommand class represents a command to list the medications.","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"            new ListTypeArgument(false));","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.LIST, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a ListCommand object with the specified arguments.","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing information to be parsed.","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    public ListCommand(String arguments)","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"e0958902"},"content":"     * Executes the list command and performs its specific task, -t.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"e0958902"},"content":"     * Uses a switch to do a, list all and, list today","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"e0958902"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"e0958902"},"content":"        String listTypeString \u003d parsedArguments.get(ArgumentName.LIST_TYPE);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"e0958902"},"content":"        ","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"e0958902"},"content":"        switch (listTypeString) {","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"e0958902"},"content":"        case \"all\":","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"e0958902"},"content":"            MedicationManager.printAllMedications();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"e0958902"},"content":"            break;","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"        case \"today\":","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"e0958902"},"content":"            DailyMedicationManager.printTodayMedications(MedicationManager.getMedications());","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"        case \"today-m\":","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"            List\u003cDailyMedication\u003e morningMedications \u003d DailyMedicationManager.getDailyMedications(Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"e0958902"},"content":"            DailyMedicationManager.printTodayMedications(MedicationManager.getMedications(),","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"                    morningMedications, \"Morning:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"        case \"today-a\":","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"            List\u003cDailyMedication\u003e afternoonMedications \u003d DailyMedicationManager.getDailyMedications(Period.AFTERNOON);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"e0958902"},"content":"            DailyMedicationManager.printTodayMedications(MedicationManager.getMedications(),","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"                    afternoonMedications, \"Afternoon:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"        case \"today-e\":","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"            List\u003cDailyMedication\u003e eveningMedications \u003d DailyMedicationManager.getDailyMedications(Period.EVENING);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"e0958902"},"content":"            DailyMedicationManager.printTodayMedications(MedicationManager.getMedications(),","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"                    eveningMedications, \"Evening:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"e0958902"},"content":"        default:","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"e0958902"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + listTypeString);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"e0958902":43,"T0nyLin":17,"wenenhoe":19}},{"path":"src/main/java/meditracker/command/ModifyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.DosageArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ExpirationDateArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.IntakeFrequencyArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.NameArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.QuantityArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.RemarksArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":" * The ModifyCommand class represents a command to modify an existing medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"public class ModifyCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false),","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            new NameArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            new QuantityArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"            new DosageArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            new ExpirationDateArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"            new IntakeFrequencyArgument(true),","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            new RemarksArgument(true)","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.MODIFY, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a ModifyCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing medication information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"    public ModifyCommand(String arguments)","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"     * Executes the modify command.","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"     * This method modifies an existing Medication object using the provided information in the medication list.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the modification of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"e0958902"},"content":"        Medication medication \u003d MedicationManager.getMedication(listIndex);","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        for (Map.Entry\u003cArgumentName, String\u003e argument: parsedArguments.entrySet()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"            ArgumentName argumentName \u003d argument.getKey();","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"            String argumentValue \u003d argument.getValue();","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"            switch (argumentName) {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"            case DOSAGE:","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"                medication.setDosage(Double.parseDouble(argumentValue));","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"            case EXPIRATION_DATE:","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"                medication.setExpiryDate(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"            case INTAKE_FREQUENCY:","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"                medication.setIntakeFreq(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"            case LIST_INDEX:","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"                continue;","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"            case NAME:","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"                medication.setName(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"                // Update medication name in DailyMedication","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"                DailyMedication dailyMedication \u003d DailyMedicationManager.getDailyMedication(listIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"                dailyMedication.setName(argumentValue);","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"                // TODO: update afternoon and evening list","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"            case QUANTITY:","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"nickczh"},"content":"                medication.setQuantity(Double.parseDouble(argumentValue));","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"            case REMARKS:","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"                medication.setRemarks(argumentValue);","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"                break;","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"            default:","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + argumentName);","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"nickczh"},"content":"        Ui.showModifyCommandMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"e0958902":2,"nickczh":3,"T0nyLin":4,"wenenhoe":95}},{"path":"src/main/java/meditracker/command/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.LibraryManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":" * Represents a command to search for medications from the local medication library based on a keyword.","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"     * Constructs a SearchCommand object with the specified keyword.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"     * @param arguments The keyword to search for.","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"    public SearchCommand(String arguments) {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"        this.keyword \u003d arguments;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":"     * Executes the search command to search for medications based on the provided keyword","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"kyuichyi"},"content":"     * and displays the search results on the user interface.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"kyuichyi"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"    public void execute() {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"kyuichyi"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"kyuichyi"},"content":"            LibraryManager libraryManager \u003d new LibraryManager();","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"kyuichyi"},"content":"            libraryManager.searchMedication(keyword);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"            libraryManager.printSearchResults();","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"kyuichyi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"            Ui.showLibraryNotFoundMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"e0958902":1,"nickczh":2,"kyuichyi":36}},{"path":"src/main/java/meditracker/command/TakeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.AfternoonArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.EveningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.MorningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InvalidArgumentException;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":" * The TakeCommand class represents a command to take a daily medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"public class TakeCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false),","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"            new MorningArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"            new AfternoonArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"            new EveningArgument(true)","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.TAKE, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a TakeCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    public TakeCommand(String arguments)","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     * Executes the take command.","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * This method marks an existing Medication object using the provided list index.","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the modification of the daily medication status.","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"    public void execute() throws FileReadWriteException, InvalidArgumentException {","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        boolean isMorning \u003d parsedArguments.get(ArgumentName.MORNING) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        boolean isAfternoon \u003d parsedArguments.get(ArgumentName.AFTERNOON) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        boolean isEvening \u003d parsedArguments.get(ArgumentName.EVENING) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        Period period \u003d Period.getPeriod(isMorning, isAfternoon, isEvening);","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        if (period \u003d\u003d Period.NONE) {","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"            period \u003d Period.getPeriod(LocalTime.now());","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        if (period \u003d\u003d Period.UNKNOWN) {","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"            throw new InvalidArgumentException(\"Unable to determine time period. \" +","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"                    \"Please select 1 flag only or try again later.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.takeDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"nickczh"},"content":"        Ui.showTakeCommandMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nickczh":1,"wenenhoe":75}},{"path":"src/main/java/meditracker/command/UntakeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.AfternoonArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentHelper;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentList;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.EveningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.ListIndexArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.argument.MorningArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InvalidArgumentException;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":" * The UntakeCommand class represents a command to untake a daily medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":" * It extends the Command class.","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"public class UntakeCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    public static final ArgumentList ARGUMENT_LIST \u003d new ArgumentList(","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"            new ListIndexArgument(false),","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"            new MorningArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"            new AfternoonArgument(true),","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"            new EveningArgument(true)","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"    public static final String HELP_MESSAGE \u003d ArgumentHelper.getHelpMessage(CommandName.UNTAKE, ARGUMENT_LIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    private final Map\u003cArgumentName, String\u003e parsedArguments;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     * Constructs a UntakeCommand object with the specified arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     * @param arguments The arguments containing information to be parsed.","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     * @throws ArgumentNotFoundException Argument flag specified not found","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     * @throws DuplicateArgumentFoundException Duplicate argument flag found","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"     * @throws HelpInvokedException When help argument is used or help message needed","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    public UntakeCommand(String arguments)","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        parsedArguments \u003d ARGUMENT_LIST.parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     * Executes the untake command.","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"     * This method unmarks an existing Medication object using the provided list index.","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"     * It also displays a message confirming the modification of the daily medication status.","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"     * @throws FileReadWriteException when there is error to write into text file.","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"    public void execute() throws FileReadWriteException, InvalidArgumentException {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        String listIndexString \u003d parsedArguments.get(ArgumentName.LIST_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"        int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        boolean isMorning \u003d parsedArguments.get(ArgumentName.MORNING) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        boolean isAfternoon \u003d parsedArguments.get(ArgumentName.AFTERNOON) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        boolean isEvening \u003d parsedArguments.get(ArgumentName.EVENING) !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        Period period \u003d Period.getPeriod(isMorning, isAfternoon, isEvening);","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        if (period \u003d\u003d Period.NONE) {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"            period \u003d Period.getPeriod(LocalTime.now());","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"        if (period \u003d\u003d Period.UNKNOWN) {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"            throw new InvalidArgumentException(\"Unable to determine time period. \" +","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"                    \"Please select 1 flag only or try again later.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.untakeDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"nickczh"},"content":"        Ui.showUntakeCommandMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nickczh":1,"T0nyLin":1,"wenenhoe":75}},{"path":"src/main/java/meditracker/dailymedication/DailyMedication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package meditracker.dailymedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Stores name and the status of daily medication (taken or not)","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class DailyMedication {","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    private String name;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"    private boolean isTaken;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"     * Constructs DailyMedication with medication name and status of daily medication (taken or not)","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the medication to be taken","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    public DailyMedication(String name) {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"        this.isTaken \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    public String getName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"        return name;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    public boolean isTaken() {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        return isTaken;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    public void take() {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        isTaken \u003d true;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"    public void untake() {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        isTaken \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"        String takenIcon \u003d isTaken ? \"[X]\" : \"[ ]\"; // X identify medication as taken","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        return String.format(\"%s %s\", takenIcon, name);","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"T0nyLin":7,"wenenhoe":38}},{"path":"src/main/java/meditracker/dailymedication/DailyMedicationManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package meditracker.dailymedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import meditracker.storage.FileReaderWriter;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":" * Manages a list of DailyMedication and CRUD-operations (Create, Read, Update, Delete)","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":" *","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":" * @see DailyMedication","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"public class DailyMedicationManager {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"    private static final List\u003cDailyMedication\u003e morningMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    private static final List\u003cDailyMedication\u003e afternoonMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"    private static final List\u003cDailyMedication\u003e eveningMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    private static final LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"     * Prevents defaulting to the public constructor","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"     * that allows instantiation of the DailyMedicationManager class","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"    private DailyMedicationManager() {","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"     * Creates DailyMedicationManager to save medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"     * so that program can output to textfile","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"     * @see DailyMedication","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"e0958902"},"content":"    public static void createDailyMedicationManager() {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"        for (Medication medication : MedicationManager.getMedications()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"            if (shouldAddToDailyList(medication)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"                addToSubLists(medication);","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"T0nyLin"},"content":"     * Reads each lines from textfile to process and save into DailyMedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"     * @param lines lines of String read from each row in the textfile","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"    public static void importDailyMedicationManager(List\u003cString\u003e lines) {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"                parseImportedLine(line);","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"Error\" + e.getMessage());","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"     * Separates each row by the separator and add into the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"     * @param line each line read from the textfile","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"     * @return dailyMedication object to add into the DailyMedicationManager","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"    private static void parseImportedLine(String line) {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"T0nyLin"},"content":"        String[] fields \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"        boolean isTaken \u003d Boolean.parseBoolean(fields[1].trim());","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(fields[2].trim());","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"        if (isTaken) {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"            dailyMedication.take();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"            dailyMedication.untake();","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"T0nyLin"},"content":"        addImportToSubLists(fields[0], dailyMedication);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"     * Imports data from the read text file","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"     * @param period time of the day","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"     * @param dailyMedication daily medication to be taken for the day to add to respective sub lists","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"    private static void addImportToSubLists(String period, DailyMedication dailyMedication) {","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"        if (period.equals(\"M\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"        } else if (period.equals(\"A\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.AFTERNOON);","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"T0nyLin"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.EVENING);","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"T0nyLin"},"content":"     * Clears and resets DailyMedicationManager for testing purpose","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"T0nyLin"},"content":"    protected static void clearDailyMedication() {","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"T0nyLin"},"content":"        morningMedications.clear();","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"T0nyLin"},"content":"        afternoonMedications.clear();","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"T0nyLin"},"content":"        eveningMedications.clear();","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"T0nyLin"},"content":"     * Adds a DailyMedication to the list of DailyMedication","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"T0nyLin"},"content":"     * @param dailyMedication DailyMedication to be added to the list","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"T0nyLin"},"content":"    public static void addDailyMedication(DailyMedication dailyMedication, Period period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"T0nyLin"},"content":"        switch (period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"T0nyLin"},"content":"        case MORNING:","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"T0nyLin"},"content":"            morningMedications.add(dailyMedication);","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"T0nyLin"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"T0nyLin"},"content":"            afternoonMedications.add(dailyMedication);","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"T0nyLin"},"content":"        case EVENING:","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"T0nyLin"},"content":"            eveningMedications.add(dailyMedication);","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"T0nyLin"},"content":"            break;","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"Cannot add to sublist\");","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"T0nyLin"},"content":"     * Gets the DailyMedication object from the morning/afternoon/evening lists","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"T0nyLin"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"T0nyLin"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"T0nyLin"},"content":"     * @return DailyMedication object at the corresponding index (0-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"T0nyLin"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"T0nyLin"},"content":"    public static DailyMedication getDailyMedication(int listIndex, Period period) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"T0nyLin"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"T0nyLin"},"content":"        switch (period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"T0nyLin"},"content":"        case MORNING:","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"T0nyLin"},"content":"            return morningMedications.get(listIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"T0nyLin"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"T0nyLin"},"content":"            return afternoonMedications.get(listIndex);","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"T0nyLin"},"content":"        case EVENING:","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"T0nyLin"},"content":"            return eveningMedications.get(listIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"T0nyLin"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + period);","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"     * Gets the relevant list of DailyMedication objects depending on the time period of day","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"wenenhoe"},"content":"     * @return The relevant list of DailyMedication objects","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"T0nyLin"},"content":"    public static List\u003cDailyMedication\u003e getDailyMedications(Period period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"T0nyLin"},"content":"        switch (period) {","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"T0nyLin"},"content":"        case MORNING:","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"T0nyLin"},"content":"            return morningMedications;","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"T0nyLin"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"T0nyLin"},"content":"            return afternoonMedications;","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"T0nyLin"},"content":"        case EVENING:","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"T0nyLin"},"content":"            return eveningMedications;","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"T0nyLin"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + period);","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"T0nyLin"},"content":"     * Prints all medications to be taken today","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"T0nyLin"},"content":"     * @param medications list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"T0nyLin"},"content":"    public static void printTodayMedications(List\u003cMedication\u003e medications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"T0nyLin"},"content":"        System.out.println(\"Here are the Daily Medications you have to take today: \");","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"T0nyLin"},"content":"        printTodayMedications(medications, morningMedications, \"Morning:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"T0nyLin"},"content":"        printTodayMedications(medications, afternoonMedications, \"Afternoon:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"T0nyLin"},"content":"        printTodayMedications(medications, eveningMedications, \"Evening:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"T0nyLin"},"content":"     * Prints the sub lists according to the period of the day","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"T0nyLin"},"content":"     * @param medications list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"T0nyLin"},"content":"     * @param subList sublist of daily medication","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"T0nyLin"},"content":"     * @param period time of the day","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"T0nyLin"},"content":"    public static void printTodayMedications(List\u003cMedication\u003e medications,","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"T0nyLin"},"content":"                                             List\u003cDailyMedication\u003e subList, String period) {","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"T0nyLin"},"content":"        if (!subList.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(period);","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"T0nyLin"},"content":"            Ui.printMedsLists(medications, subList, period);","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"T0nyLin"},"content":"     * Fetches the corresponding DailyMedication and set the medication to taken","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"T0nyLin"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"T0nyLin"},"content":"     * @throws FileReadWriteException when unable to write to textfile","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"T0nyLin"},"content":"     * @see DailyMedication#take()","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"wenenhoe"},"content":"    public static void takeDailyMedication(int listIndex, Period period) throws FileReadWriteException {","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d DailyMedicationManager.getDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"T0nyLin"},"content":"        dailyMedication.take();","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.decreaseMedicationQuantity(dailyMedication.getName(), period);","lastModifiedDate":"2024-03-30"},{"lineNumber":207,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"T0nyLin"},"content":"            FileReaderWriter.saveDailyMedicationData(DailyMedicationManager.getDailyMedicationStringData());","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"T0nyLin"},"content":"        } catch (FileReadWriteException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"T0nyLin"},"content":"            throw new FileReadWriteException(\"IO Error: Unable to write to JSON File\");","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"T0nyLin"},"content":"     * Fetches the corresponding DailyMedication and set the medication to not taken","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"T0nyLin"},"content":"     * @param listIndex Index of the dailyMedications list to update (1-based indexing)","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day (Morning, afternoon or evening)","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"T0nyLin"},"content":"     * @throws FileReadWriteException when unable to write to textfile","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"T0nyLin"},"content":"     * @see DailyMedication#untake()","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"wenenhoe"},"content":"    public static void untakeDailyMedication(int listIndex, Period period) throws FileReadWriteException {","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d DailyMedicationManager.getDailyMedication(listIndex, period);","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"T0nyLin"},"content":"        dailyMedication.untake();","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.increaseMedicationQuantity(dailyMedication.getName(), period);","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"T0nyLin"},"content":"            FileReaderWriter.saveDailyMedicationData(DailyMedicationManager.getDailyMedicationStringData());","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"T0nyLin"},"content":"        } catch (FileReadWriteException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"T0nyLin"},"content":"            throw new FileReadWriteException(\"IO Error: Unable to write to text File\");","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"T0nyLin"},"content":"     * Takes each DailyMedication object and adds to string of each object","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"T0nyLin"},"content":"     * to a list of String and return","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":239,"author":{"gitId":"T0nyLin"},"content":"     * @return A list of DailyMedication object to string","lastModifiedDate":"2024-03-28"},{"lineNumber":240,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":241,"author":{"gitId":"T0nyLin"},"content":"    public static List\u003cString\u003e getDailyMedicationStringData() {","lastModifiedDate":"2024-03-28"},{"lineNumber":242,"author":{"gitId":"T0nyLin"},"content":"        List\u003cString\u003e dailyMedicationStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication morningMedication : morningMedications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":244,"author":{"gitId":"T0nyLin"},"content":"            dailyMedicationStrings.add(\"M|\" + morningMedication.isTaken() + \"|\" + morningMedication.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":245,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":246,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication afternoonMedication : afternoonMedications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":247,"author":{"gitId":"T0nyLin"},"content":"            dailyMedicationStrings.add(\"A|\" + afternoonMedication.isTaken() + \"|\" + afternoonMedication.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":249,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication eveningMedication : eveningMedications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"T0nyLin"},"content":"            dailyMedicationStrings.add(\"E|\" + eveningMedication.isTaken() + \"|\" + eveningMedication.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":251,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":252,"author":{"gitId":"T0nyLin"},"content":"        return dailyMedicationStrings;","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":256,"author":{"gitId":"T0nyLin"},"content":"     * Checks if added medication is to be taken at morning/afternoon/evening","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"T0nyLin"},"content":"    public static void checkForDaily(Medication medication) {","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"T0nyLin"},"content":"        if (shouldAddToDailyList(medication)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"T0nyLin"},"content":"            addToSubLists(medication);","lastModifiedDate":"2024-03-28"},{"lineNumber":263,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":264,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":265,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":266,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":267,"author":{"gitId":"T0nyLin"},"content":"     * Returns boolean if medication can be added to today\u0027s daily list based on the repeat setting","lastModifiedDate":"2024-03-28"},{"lineNumber":268,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":269,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":270,"author":{"gitId":"T0nyLin"},"content":"     * @return true if medication can be added to today\u0027s list","lastModifiedDate":"2024-03-28"},{"lineNumber":271,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":272,"author":{"gitId":"T0nyLin"},"content":"    private static boolean shouldAddToDailyList(Medication medication) {","lastModifiedDate":"2024-03-28"},{"lineNumber":273,"author":{"gitId":"T0nyLin"},"content":"        int num \u003d medication.getRepeat();","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":275,"author":{"gitId":"T0nyLin"},"content":"        switch (num) {","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"T0nyLin"},"content":"        case 1:","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"T0nyLin"},"content":"            return true;                     //everyday","lastModifiedDate":"2024-03-28"},{"lineNumber":278,"author":{"gitId":"T0nyLin"},"content":"        case 2:","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 2); //every 2 days","lastModifiedDate":"2024-03-28"},{"lineNumber":280,"author":{"gitId":"T0nyLin"},"content":"        case 3:","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 3); //every 3 days","lastModifiedDate":"2024-03-28"},{"lineNumber":282,"author":{"gitId":"T0nyLin"},"content":"        case 4:","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 4); //every 4 days","lastModifiedDate":"2024-03-28"},{"lineNumber":284,"author":{"gitId":"T0nyLin"},"content":"        case 5:","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 5); //every 5 days","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"T0nyLin"},"content":"        case 6:","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 6); //every 6 days","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"T0nyLin"},"content":"        case 7:","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"T0nyLin"},"content":"            return isNDay(medication, 7); //every 7 days","lastModifiedDate":"2024-03-28"},{"lineNumber":290,"author":{"gitId":"T0nyLin"},"content":"        default:","lastModifiedDate":"2024-03-28"},{"lineNumber":291,"author":{"gitId":"T0nyLin"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":292,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":293,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":294,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":295,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":296,"author":{"gitId":"T0nyLin"},"content":"     * Determines the difference between today\u0027s date and the date medication was added","lastModifiedDate":"2024-03-28"},{"lineNumber":297,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":298,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":299,"author":{"gitId":"T0nyLin"},"content":"     * @param n repeat set by user","lastModifiedDate":"2024-03-28"},{"lineNumber":300,"author":{"gitId":"T0nyLin"},"content":"     * @return true if the modulus of the date difference is 0","lastModifiedDate":"2024-03-28"},{"lineNumber":301,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":302,"author":{"gitId":"T0nyLin"},"content":"    private static boolean isNDay(Medication medication, int n) {","lastModifiedDate":"2024-03-28"},{"lineNumber":303,"author":{"gitId":"T0nyLin"},"content":"        int dateNum \u003d medication.getDayAdded();","lastModifiedDate":"2024-03-28"},{"lineNumber":304,"author":{"gitId":"T0nyLin"},"content":"        int currentDayValue \u003d currentDate.getDayOfYear();","lastModifiedDate":"2024-03-28"},{"lineNumber":305,"author":{"gitId":"T0nyLin"},"content":"        int daysDiff \u003d currentDayValue - dateNum;","lastModifiedDate":"2024-03-28"},{"lineNumber":306,"author":{"gitId":"T0nyLin"},"content":"        return daysDiff % n \u003d\u003d 0;       //modulo to find out if dailyMedication can be added to today\u0027s list","lastModifiedDate":"2024-03-28"},{"lineNumber":307,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":308,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":309,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":310,"author":{"gitId":"T0nyLin"},"content":"     * Adds dailyMedication into sub list morning/afternoon/evening","lastModifiedDate":"2024-03-28"},{"lineNumber":311,"author":{"gitId":"T0nyLin"},"content":"     * and writes into the text file","lastModifiedDate":"2024-03-28"},{"lineNumber":312,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":313,"author":{"gitId":"T0nyLin"},"content":"     * @param medication list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":314,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":315,"author":{"gitId":"T0nyLin"},"content":"    private static void addToSubLists(Medication medication) {","lastModifiedDate":"2024-03-28"},{"lineNumber":316,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(medication.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":317,"author":{"gitId":"T0nyLin"},"content":"        if (medication.getDosageMorning() !\u003d 0.0) {","lastModifiedDate":"2024-03-28"},{"lineNumber":318,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":319,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":320,"author":{"gitId":"T0nyLin"},"content":"        if (medication.getDosageAfternoon() !\u003d 0.0) {","lastModifiedDate":"2024-03-28"},{"lineNumber":321,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.AFTERNOON);","lastModifiedDate":"2024-03-29"},{"lineNumber":322,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":323,"author":{"gitId":"T0nyLin"},"content":"        if (medication.getDosageEvening() !\u003d 0.0) {","lastModifiedDate":"2024-03-28"},{"lineNumber":324,"author":{"gitId":"T0nyLin"},"content":"            addDailyMedication(dailyMedication, Period.EVENING);","lastModifiedDate":"2024-03-29"},{"lineNumber":325,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":326,"author":{"gitId":"T0nyLin"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":327,"author":{"gitId":"T0nyLin"},"content":"            FileReaderWriter.saveDailyMedicationData(getDailyMedicationStringData());","lastModifiedDate":"2024-03-28"},{"lineNumber":328,"author":{"gitId":"T0nyLin"},"content":"        } catch (FileReadWriteException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":329,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"Cannot write into today.txt\");","lastModifiedDate":"2024-03-28"},{"lineNumber":330,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":331,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":332,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"e0958902":9,"T0nyLin":305,"wenenhoe":18}},{"path":"src/main/java/meditracker/exception/ArgumentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Exception to be thrown when required argument not found by ArgumentParser","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentNotFoundException extends Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public ArgumentNotFoundException(String errorContext) {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(errorContext);","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"wenenhoe":10}},{"path":"src/main/java/meditracker/exception/CommandNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"public class CommandNotFoundException extends Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"    public String getMessage() {","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"        return \"Invalid MediTracker command! Please refer to the user guide.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"wenenhoe":8}},{"path":"src/main/java/meditracker/exception/DuplicateArgumentFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":" * Exception to be thrown when duplicate argument found by ArgumentParser","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"public class DuplicateArgumentFoundException extends Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    public DuplicateArgumentFoundException(String errorContext) {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"        super(errorContext);","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"wenenhoe":10}},{"path":"src/main/java/meditracker/exception/FileReadWriteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":" * Exception related to the reading and writing to the file and directories.","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"public class FileReadWriteException extends Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"    public FileReadWriteException(String errorMessage) {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"        super(errorMessage);","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"annoy-o-mus":11}},{"path":"src/main/java/meditracker/exception/HelpInvokedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"public class HelpInvokedException extends Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"wenenhoe":4}},{"path":"src/main/java/meditracker/exception/InvalidArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"public class InvalidArgumentException extends Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"    public InvalidArgumentException(String errorContext) {","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"        super(errorContext);","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":7}},{"path":"src/main/java/meditracker/exception/MediTrackerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.exception;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * The MediTrackerException class represents an exception specific to the MediTracker application.","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * It extends the Exception class.","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"public class MediTrackerException extends Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"     * Constructs a new MediTrackerException with the specified error context.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"     * @param errorContext The error context describing the exception.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    public MediTrackerException(String errorContext) {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"        super(errorContext);","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":17}},{"path":"src/main/java/meditracker/library/LibraryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.library;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":" * Manages the searching of medications in the medication library.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"public class LibraryManager {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"    private static final String FILE_PATH \u003d \"/medicationLibrary.txt\";","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"    private final List\u003cSearchResult\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"     * Searches for medications in the library based on a keyword.","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"     * @param keyword The keyword to search for in the medication library.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"     * @throws FileNotFoundException If the medication library file is not found.","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"kyuichyi"},"content":"    public void searchMedication(String keyword) throws FileNotFoundException {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"kyuichyi"},"content":"        InputStream file \u003d getClass().getResourceAsStream(FILE_PATH);","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"kyuichyi"},"content":"        Scanner scanner \u003d new Scanner(Objects.requireNonNull(file));","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"kyuichyi"},"content":"        searchResults.clear();","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"kyuichyi"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"kyuichyi"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"kyuichyi"},"content":"            if (line.toLowerCase().contains(keyword.trim().toLowerCase())) {","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"kyuichyi"},"content":"                String[] medicationDetails \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"kyuichyi"},"content":"                searchResults.add(new SearchResult(medicationDetails[0], medicationDetails[1], medicationDetails[2]));","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"kyuichyi"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"kyuichyi"},"content":"     * Prints the search results to the user interface.","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"    public void printSearchResults() {","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"kyuichyi"},"content":"        if (searchResults.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"            Ui.showNoSearchResultsMessage();","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"kyuichyi"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"            Ui.showSearchResults(searchResults);","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"nickczh":3,"kyuichyi":46}},{"path":"src/main/java/meditracker/library/SearchResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kyuichyi"},"content":"package meditracker.library;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":" * Represents a search result containing details about a medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"public class SearchResult {","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"    private final String name;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"    private final String illness;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"    private final String sideEffects;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"     * Constructs a SearchResult object with the specified medication details.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"kyuichyi"},"content":"     * @param name        The name of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"kyuichyi"},"content":"     * @param illness     The illness(es) the medication is used to treat.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"kyuichyi"},"content":"     * @param sideEffects The possible side effects of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"kyuichyi"},"content":"    public SearchResult(String name, String illness, String sideEffects) {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"kyuichyi"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kyuichyi"},"content":"        this.illness \u003d illness;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"kyuichyi"},"content":"        this.sideEffects \u003d sideEffects;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"kyuichyi"},"content":"     * Gets the name of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"kyuichyi"},"content":"     * @return The name of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"kyuichyi"},"content":"    public String getName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"kyuichyi"},"content":"        return this.name;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"kyuichyi"},"content":"     * Gets the illness(es) the medication is used to treat.","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"kyuichyi"},"content":"     * @return The illness(es) the medication is used to treat.","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"kyuichyi"},"content":"    public String getIllness() {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"kyuichyi"},"content":"        return this.illness;","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"kyuichyi"},"content":"     * Gets the possible side effects of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"kyuichyi"},"content":"     * @return The possible side effects of the medication.","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"kyuichyi"},"content":"    public String getSideEffects() {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"kyuichyi"},"content":"        return this.sideEffects;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"kyuichyi"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"kyuichyi"},"content":"     * Returns a string representation of the SearchResult object.","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"kyuichyi"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"kyuichyi"},"content":"     * @return A string representation of the SearchResult object.","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"kyuichyi"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"kyuichyi"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"kyuichyi"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"kyuichyi"},"content":"        return getName() + \"; Treats: \" + getIllness() + \"; May cause: \" + getSideEffects();","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"kyuichyi":60}},{"path":"src/main/java/meditracker/logging/MediLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.logging;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":" * Main Logging class to get the logger for logging outputs to the console.","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"public class MediLogger {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"    private static final String MEDILOGGER_NAME \u003d \"MediLogger\";","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    private static Logger mediLogger \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"     * Gets the default logger for the MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"     * If for some reason the default logger is not initialised when this function is called,","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"     * initialise the default logger and logs a warning.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The default logger for MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    public static Logger getMediLogger() {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"        if (mediLogger \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"            initialiseLogger();","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"            mediLogger.warning(\"Logger initialised from unintended function\");","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"        assert mediLogger !\u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"        return mediLogger;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     * Initialises the default logger to be used for the MediTracker project.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * The logger will send all the logging messages to the console.","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     * Currently, no support to write to a dedicated log file.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"    public static void initialiseLogger() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"        if (mediLogger !\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"            mediLogger.warning(\"Logger \" + MEDILOGGER_NAME + \" has been initialised already\");","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        mediLogger \u003d Logger.getLogger(MEDILOGGER_NAME);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        mediLogger.info(\"Logger initialised\");","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"annoy-o-mus":42}},{"path":"src/main/java/meditracker/medication/Medication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":" * The Medication class represents a medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"nickczh"},"content":" * It stores information about the medication such as name, quantity, dosage, expiry date, intake frequency, remarks,","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"nickczh"},"content":" * and whether it has been taken.","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"public class Medication {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"    // Medication attributes are intentionally declared String. To be modified later.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"    private String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"    private Double quantity;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":"    private Double dosage;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"    private Double dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    private Double dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"    private Double dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"    private String expiryDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":"    private String intakeFreq;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"nickczh"},"content":"    private String remarks;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"    private int repeat;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    private int dayAdded;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"     * Constructs a new Medication object with default placeholder values.","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"     * Used by MedicationManager to populate medication data from the save file.","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"    public Medication() {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"        final double placeholderValue \u003d -1.0;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"        setName(\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"        setQuantity(placeholderValue);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"        setDosage(placeholderValue);","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"        setDosageMorning(placeholderValue);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"        setDosageAfternoon(placeholderValue);","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"        setDosageEvening(placeholderValue);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"        setExpiryDate(\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        setIntakeFreq(\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        setRemarks(\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        setRepeat((int) placeholderValue);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        setDayAdded((int) placeholderValue);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"     * Constructs a Medication object with the specified information.","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"     * @param name The name of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"     * @param quantity The quantity of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     * @param dosage The dosage of the medication.","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"     * @param dosageMorning The morning dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"     * @param dosageAfternoon The afternoon dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"     * @param dosageEvening The evening dosage of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"     * @param expiryDate The expiry date of the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"     * @param intakeFreq The intake frequency of the medication in a day.","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"     * @param remarks Any remarks or notes about the medication.","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"     * @param repeat The repeat frequency of the medication.","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"    public Medication(String name, Double quantity, Double dosage, Double dosageMorning, Double dosageAfternoon,","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"                      Double dosageEvening, String expiryDate,","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"                      String intakeFreq, String remarks, int repeat, int dayAdded) {","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"        this.dosageMorning \u003d dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"        this.dosageAfternoon \u003d dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"        this.dosageEvening \u003d dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"        this.intakeFreq \u003d intakeFreq;","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"        this.repeat \u003d repeat;","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"        this.dayAdded \u003d dayAdded;","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"    public String getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"nickczh"},"content":"    public Double getQuantity() {","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"        return quantity;","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"nickczh"},"content":"    public void setQuantity(Double quantity) {","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"nickczh"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"nickczh"},"content":"    public Double getDosage() {","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"        return dosage;","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"nickczh"},"content":"    public void setDosage(Double dosage) {","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"nickczh"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"nickczh"},"content":"    public Double getDosageMorning() {","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"nickczh"},"content":"        return dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"nickczh"},"content":"    public void setDosageMorning(Double dosageMorning) {","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"nickczh"},"content":"        this.dosageMorning \u003d dosageMorning;","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"nickczh"},"content":"    public Double getDosageAfternoon() {","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"nickczh"},"content":"        return dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"nickczh"},"content":"    public void setDosageAfternoon(Double dosageAfternoon) {","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"nickczh"},"content":"        this.dosageAfternoon \u003d dosageAfternoon;","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"nickczh"},"content":"    public Double getDosageEvening() {","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"nickczh"},"content":"        return dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"nickczh"},"content":"    public void setDosageEvening(Double dosageEvening) {","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"nickczh"},"content":"        this.dosageEvening \u003d dosageEvening;","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"    public String getExpiryDate() {","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"        return expiryDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"    public void setExpiryDate(String expiryDate) {","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"    public String getIntakeFreq() {","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"        return intakeFreq;","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"    public void setIntakeFreq(String intakeFreq) {","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"        this.intakeFreq \u003d intakeFreq;","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"    public String getRemarks() {","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"        return remarks;","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"    public void setRemarks(String remarks) {","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"wenenhoe"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"T0nyLin"},"content":"    public int getRepeat() {","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"nickczh"},"content":"        return repeat;","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"T0nyLin"},"content":"    public void setRepeat(int repeat) {","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"nickczh"},"content":"        this.repeat \u003d repeat;","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"T0nyLin"},"content":"    public int getDayAdded() {","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"T0nyLin"},"content":"        return dayAdded;","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"annoy-o-mus"},"content":"    public void setDayAdded(int dayAdded) {","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"annoy-o-mus"},"content":"        this.dayAdded \u003d dayAdded;","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"e0958902"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"e0958902"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"e0958902"},"content":"        return getName() + \" | \" + getQuantity() +  \" | \" + getExpiryDate() + \" | \" + getRemarks();","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":77,"e0958902":5,"annoy-o-mus":25,"T0nyLin":9,"wenenhoe":48}},{"path":"src/main/java/meditracker/medication/MedicationManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker.medication;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"import meditracker.ui.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"import static meditracker.storage.FileReaderWriter.saveMediTrackerData;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":" * The MedicationManager class represents a list of medications.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":" * It contains an ArrayList of Medication objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"public class MedicationManager {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"    private static Logger logger \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"nickczh"},"content":"    /** The list of medications stored in an ArrayList. */","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"    private static List\u003cMedication\u003e medications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"     * Prevents defaulting to the public constructor","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"     * that allows instantiation of the MedicationManager class","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"    private MedicationManager() {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"     * Gets the size of list of medications","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"     * @return Total number of medications","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"    public static Integer getTotalMedications() {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"        return medications.size();","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"e0958902"},"content":"     * Clears and resets MedicationManager for testing purpose","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"e0958902"},"content":"    protected static void clearMedication() {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"        medications.clear();","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"     * Adds a Medication to the list of Medication","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication to be added to the list","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"e0958902"},"content":"    public static void addMedication(Medication medication) {","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        medications.add(medication);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"e0958902"},"content":"        saveMediTrackerData();","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"     * Gets the Medication object from the medications list.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"     * @param listIndex Index of the medications list to get (1-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"     * @return Medication object at the corresponding index (0-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"e0958902"},"content":"    public static Medication getMedication(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        return medications.get(listIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"     * Gets the Medication object from the medications list.","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"     * Uses the Medication name to retrieve from the list.","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"     * @param name Name of the medication to retrieve","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"     * @return Corresponding Medication object with the matched name","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"    public static Medication getMedication(String name) {","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        for (Medication medication : medications) {","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"            if (medication.getName().equals(name)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"                return medication;","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"        return null;","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"e0958902"},"content":"    public static List\u003cMedication\u003e getMedications() {","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"T0nyLin"},"content":"        return medications;","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"     * Deletes the Medication object from the medications list.","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"     * Also converts the index to 0-based indexing before being used.","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"     * @param listIndex Index of the medications list to delete (1-based indexing)","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"     * @throws IndexOutOfBoundsException Out of range index specified","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"e0958902"},"content":"    public static void removeMedication(int listIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"        listIndex--; // Decremented to 0-base indexing","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"        medications.remove(listIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"e0958902"},"content":"        saveMediTrackerData();","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"     * Gets the dosage from the Medication object based the specified Period","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"     * @param medication Medication object to obtain the dosage from","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"     * @param period Time period of day to reference","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"     * @return The appropriate dosage depending on the time Period","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"    public static Double getMedicationDosage(Medication medication, Period period) {","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"        double dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"        switch (period) {","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"        case MORNING:","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d medication.getDosageMorning();","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"        case AFTERNOON:","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d medication.getDosageAfternoon();","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"        case EVENING:","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d medication.getDosageEvening();","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"        case UNKNOWN:","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"        case NONE:","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"        default:","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"            dosage \u003d 0.0;","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"        return dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"e0958902"},"content":"     * Shows the number of medications in the medication list.","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"e0958902"},"content":"     * Also lists all the medications in the medication list.","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"e0958902"},"content":"    public static void printAllMedications() {","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"e0958902"},"content":"        assert medications !\u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"e0958902"},"content":"        System.out.println(\"You have \" + getTotalMedications() + \" medications listed below.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"e0958902"},"content":"        System.out.println(\"Format: Name | Quantity | Expiry Date | Remarks\");","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"T0nyLin"},"content":"        Ui.printMedsList(medications);","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"annoy-o-mus"},"content":"    //@@author annoy-o-mus","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"annoy-o-mus"},"content":"     * Converts a String to a double.","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"annoy-o-mus"},"content":"     * Introduced to help populate the Medication object from the save file.","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"annoy-o-mus"},"content":"     * @param doubleString The String object to be converted to a double type.","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The value of type double. Placeholder value of -1.0 if an exception is thrown.","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"annoy-o-mus"},"content":"    private static double convertStringToDouble(String doubleString) {","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"annoy-o-mus"},"content":"        double placeholderValue \u003d -1.0;","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"annoy-o-mus"},"content":"            return Double.parseDouble(doubleString);","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Possibly corrupt data. Unable to parse String \u0027\" + doubleString","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"\u0027 into double. Using placeholder value -1.0\");","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"annoy-o-mus"},"content":"            return placeholderValue;","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Null Pointer passed for conversion to double. Using placeholder value -1.0\");","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"annoy-o-mus"},"content":"            return placeholderValue;","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"annoy-o-mus"},"content":"    //@@author annoy-o-mus","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"annoy-o-mus"},"content":"     * Populates the MedicationManager from the save file.","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"annoy-o-mus"},"content":"     * If there are corrupt data, it may be substituted with placeholder values.","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medInfoList The List of medication information that contains the (String, String) key-value.","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"annoy-o-mus"},"content":"    public static void addMedicationFromSaveFile(List\u003cMap\u003cString, String\u003e\u003e medInfoList) {","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"annoy-o-mus"},"content":"        for (Map\u003cString, String\u003e medInfo : medInfoList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"annoy-o-mus"},"content":"            Medication medication \u003d new Medication();","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"annoy-o-mus"},"content":"            for (String key : medInfo.keySet()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"annoy-o-mus"},"content":"                ArgumentName keyEnum \u003d ArgumentName.getEnumOfArgumentValue(key);","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"annoy-o-mus"},"content":"                if (keyEnum \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"annoy-o-mus"},"content":"                    continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"annoy-o-mus"},"content":"                String value \u003d medInfo.get(key);","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"annoy-o-mus"},"content":"                switch (keyEnum) {","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"annoy-o-mus"},"content":"                case NAME:","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setName(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"annoy-o-mus"},"content":"                case QUANTITY:","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"annoy-o-mus"},"content":"                    double qty \u003d convertStringToDouble(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setQuantity(qty);","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"annoy-o-mus"},"content":"                case DOSAGE:","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"annoy-o-mus"},"content":"                    double dose \u003d convertStringToDouble(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setDosage(dose);","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"annoy-o-mus"},"content":"                case DOSAGE_MORNING:","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"annoy-o-mus"},"content":"                    double doseMorning \u003d convertStringToDouble(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setDosageMorning(doseMorning);","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"annoy-o-mus"},"content":"                case DOSAGE_AFTERNOON:","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"annoy-o-mus"},"content":"                    double doseAfternoon \u003d convertStringToDouble(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setDosageAfternoon(doseAfternoon);","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"annoy-o-mus"},"content":"                case DOSAGE_EVENING:","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"annoy-o-mus"},"content":"                    double doseEvening \u003d convertStringToDouble(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setDosageEvening(doseEvening);","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"annoy-o-mus"},"content":"                case EXPIRATION_DATE:","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setExpiryDate(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"annoy-o-mus"},"content":"                case INTAKE_FREQUENCY:","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setIntakeFreq(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"annoy-o-mus"},"content":"                case REMARKS:","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setRemarks(value);","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"annoy-o-mus"},"content":"                case REPEAT:","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"annoy-o-mus"},"content":"                    int repeatValue \u003d (int) convertStringToDouble(value);","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setRepeat(repeatValue);","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"annoy-o-mus"},"content":"                case DAY_ADDED:","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"annoy-o-mus"},"content":"                    int dayValue \u003d (int) convertStringToDouble(value);","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"annoy-o-mus"},"content":"                    medication.setDayAdded(dayValue);","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"annoy-o-mus"},"content":"                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"annoy-o-mus"},"content":"                default:","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"annoy-o-mus"},"content":"                    logger.warning(\"Unhandled ArgumentName Enum Type \" + keyEnum.value);","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"annoy-o-mus"},"content":"            addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":229,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":232,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":233,"author":{"gitId":"annoy-o-mus"},"content":"     * Increases the medication quantity based on the specified time period","lastModifiedDate":"2024-03-30"},{"lineNumber":234,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":235,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medicationName Name of the medication to increase medication quantity","lastModifiedDate":"2024-03-30"},{"lineNumber":236,"author":{"gitId":"annoy-o-mus"},"content":"     * @param period Time period of day to reference","lastModifiedDate":"2024-03-30"},{"lineNumber":237,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":238,"author":{"gitId":"annoy-o-mus"},"content":"    public static void increaseMedicationQuantity(String medicationName, Period period) {","lastModifiedDate":"2024-03-30"},{"lineNumber":239,"author":{"gitId":"annoy-o-mus"},"content":"        Medication medication \u003d getMedication(medicationName);","lastModifiedDate":"2024-03-30"},{"lineNumber":240,"author":{"gitId":"annoy-o-mus"},"content":"        if (medication \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":241,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"annoy-o-mus"},"content":"        double dosage \u003d getMedicationDosage(medication, period);","lastModifiedDate":"2024-03-30"},{"lineNumber":245,"author":{"gitId":"annoy-o-mus"},"content":"        double oldQuantity \u003d medication.getQuantity();","lastModifiedDate":"2024-03-30"},{"lineNumber":246,"author":{"gitId":"annoy-o-mus"},"content":"        double newQuantity \u003d oldQuantity + dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"annoy-o-mus"},"content":"        medication.setQuantity(newQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":248,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":249,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":250,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":251,"author":{"gitId":"annoy-o-mus"},"content":"     * Decreases the medication quantity based on the specified time period","lastModifiedDate":"2024-03-30"},{"lineNumber":252,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":253,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medicationName Name of the medication to decrease medication quantity","lastModifiedDate":"2024-03-30"},{"lineNumber":254,"author":{"gitId":"annoy-o-mus"},"content":"     * @param period Time period of day to reference","lastModifiedDate":"2024-03-30"},{"lineNumber":255,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":256,"author":{"gitId":"annoy-o-mus"},"content":"    public static void decreaseMedicationQuantity(String medicationName, Period period) {","lastModifiedDate":"2024-03-30"},{"lineNumber":257,"author":{"gitId":"annoy-o-mus"},"content":"        Medication medication \u003d getMedication(medicationName);","lastModifiedDate":"2024-03-30"},{"lineNumber":258,"author":{"gitId":"annoy-o-mus"},"content":"        if (medication \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":259,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-03-30"},{"lineNumber":260,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":261,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":262,"author":{"gitId":"annoy-o-mus"},"content":"        double dosage \u003d getMedicationDosage(medication, period);","lastModifiedDate":"2024-03-30"},{"lineNumber":263,"author":{"gitId":"annoy-o-mus"},"content":"        double oldQuantity \u003d medication.getQuantity();","lastModifiedDate":"2024-03-30"},{"lineNumber":264,"author":{"gitId":"annoy-o-mus"},"content":"        double newQuantity \u003d oldQuantity - dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":265,"author":{"gitId":"annoy-o-mus"},"content":"        medication.setQuantity(newQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":266,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":267,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":17,"e0958902":32,"annoy-o-mus":132,"T0nyLin":4,"wenenhoe":82}},{"path":"src/main/java/meditracker/storage/FileReaderWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.File;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":" * A static class to handle the reading and writing to the filesystem.","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":" * Currently, only supports the default path and file.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"public class FileReaderWriter {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"    private static Logger logger \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    private static String jsonDataFileName \u003d \"MediTrackerData.json\";","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    private static String jsonDataFolderName \u003d \"data\";","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"    private static String dailyMedicationFileName \u003d \"today.txt\"; // To be changed in v2.0","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"    private static String dailyMedicationFolderName \u003d \"data/dailymed\";","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"    private static String getJsonDataFolderName() {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"        return jsonDataFolderName;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"    private static String getDailyMedicationFolderName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"        return dailyMedicationFolderName;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"    private static String getFullJsonDataFilePath() {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        return jsonDataFolderName + \"/\" + jsonDataFileName;","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"    private static String getFullDailyMedFilePath() {","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"        return dailyMedicationFolderName + \"/\" + dailyMedicationFileName;","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"     * Creates new directories to allow for writing of MediTracker data to the save file.","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"     * Currently, only implements the default paths and files.","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"     * @param folderName The diretory, including its parents, to initialise.","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws FileReadWriteException When there is any issue creating the directories.","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"    private static void initialiseDirectory(String folderName) throws FileReadWriteException {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"        File directory \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"        // Solution adapted from: https://stackoverflow.com/a/3634879","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"            directory \u003d new File(folderName);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"Unable to create folder: Folder name to contain the JSON file is null\");","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"            directory.mkdirs();","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"Unable to create directories. Please make sure that the \"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"directory has the appropriate permissions for Meditracker to write to.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"     * Creates a JSON save file and writes.","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"     * Also attempts to reinitialise the directory in case of a first-time save.","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The File object that corresponds to the write file.","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws FileReadWriteException If the file is unable to be created due to system issues.","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"    public static File createJsonSaveFile() throws FileReadWriteException {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"        String fullFilePath \u003d getFullJsonDataFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"        initialiseDirectory(getJsonDataFolderName());","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"        File fileToWrite \u003d new File(fullFilePath);","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"            // TODO: Introduce a more robust way (rename, create then delete - Done by another function)","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"            // TODO: Also to take into account empty file for first run.","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"            fileToWrite.delete();","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"            fileToWrite.createNewFile();","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"            return fileToWrite;","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"IO Error: Unable to write to JSON File\");","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"Unable to create save JSON file. Please make sure that \"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"the file has the appropriate permissions for MediTracker to write to.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"     * Reads the JSON file to load and populate the MediTracker.","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"     * If the file is not found, a warning will be thrown to alert the user, and the program","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"     * will execute without the saved data (fresh state).","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medicationManager The instance of MedicationManager.","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"    public static void loadMediTrackerData(MedicationManager medicationManager) {","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"        Path mediTrackerJsonPath \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"            // https://stackoverflow.com/a/20838298","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"            mediTrackerJsonPath \u003d FileSystems.getDefault().getPath(getFullJsonDataFilePath());","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Unable to find the file \" + jsonDataFileName + \" to read from. \"","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"Program will run with no data loaded.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"annoy-o-mus"},"content":"        if (mediTrackerJsonPath !\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"annoy-o-mus"},"content":"            JsonImporter.processMediTrackerJsonFile(mediTrackerJsonPath);","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"annoy-o-mus"},"content":"     * Saves the medication information found in `MedicationManager`.","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"annoy-o-mus"},"content":"    public static void saveMediTrackerData() {","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"annoy-o-mus"},"content":"            File fileToWrite \u003d createJsonSaveFile();","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"annoy-o-mus"},"content":"            JsonExporter.saveMedicationDataToJson(fileToWrite);","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"annoy-o-mus"},"content":"            //TODO: Delete the renamed save file by `createJsonSaveFile`","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (FileReadWriteException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"annoy-o-mus"},"content":"     * Saves the daily medication information to a fixed file data/dailymed/today.txt.","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"annoy-o-mus"},"content":"     * The file creation is the same as `createJsonSaveFile` (to be abstracted).","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"annoy-o-mus"},"content":"     * The saving functionality will be improved in v2.0.","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"annoy-o-mus"},"content":"     * @param dailyMedData A list of type String for the daily medication data.","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"annoy-o-mus"},"content":"     * @throws FileReadWriteException if there is an issue creating the file.","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"annoy-o-mus"},"content":"    public static void saveDailyMedicationData(List\u003cString\u003e dailyMedData) throws FileReadWriteException {","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"annoy-o-mus"},"content":"        initialiseDirectory(getDailyMedicationFolderName());","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"annoy-o-mus"},"content":"        // This part is similar to `createJsonSaveFile()`","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"annoy-o-mus"},"content":"        File fileToWrite \u003d new File(getFullDailyMedFilePath());","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"annoy-o-mus"},"content":"            fileToWrite.delete();","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"annoy-o-mus"},"content":"            fileToWrite.createNewFile();","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"IO Error: Unable to write to JSON File\");","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"annoy-o-mus"},"content":"            throw new FileReadWriteException(\"Unable to create save JSON file. Please make sure that \"","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"the file has the appropriate permissions for MediTracker to write to.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        //@@author annoy-o-mus-reused","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/6548204","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            FileWriter f \u003d new FileWriter(fileToWrite);","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            for (String stringData : dailyMedData) {","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                f.write(stringData + System.lineSeparator());","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            f.flush();","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            f.close();","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Loads the daily medication information from a fixed file data/dailymed/today.txt.","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * The loading functionality will be improved in v2.0.","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @return A list of string with the daily medication data. null if the file could not be loaded.","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e loadDailyMedicationData() {","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            Path dailyMedTextFile \u003d FileSystems.getDefault().getPath(getFullDailyMedFilePath());","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Files.readAllLines(dailyMedTextFile);","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.warning(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"annoy-o-mus":154,"-":31}},{"path":"src/main/java/meditracker/storage/JsonExporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.File;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONArray;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONObject;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.argument.ArgumentName;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":" * A Class that converts Meditracker data to JSON and writes to the target file.","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"class JsonExporter {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"     * Converts the information inside a Medication object into a JSON Object.","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"     * @param medInfo The Medication object.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The JSON object representing the Medication object.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"    private static JSONObject convertMedicationInfoToJsonObject(Medication medInfo) {","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"        JSONObject medObject \u003d new JSONObject();","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.NAME.value, medInfo.getName());","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.QUANTITY.value, medInfo.getQuantity());","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.DOSAGE.value, medInfo.getDosage());","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.DOSAGE_MORNING.value, medInfo.getDosageMorning());","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.DOSAGE_AFTERNOON.value, medInfo.getDosageAfternoon());","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.DOSAGE_EVENING.value, medInfo.getDosageEvening());","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.EXPIRATION_DATE.value, medInfo.getExpiryDate());","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.INTAKE_FREQUENCY.value, medInfo.getIntakeFreq());","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.REMARKS.value, medInfo.getRemarks());","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.REPEAT.value, medInfo.getRepeat());","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        medObject.put(ArgumentName.DAY_ADDED.value, medInfo.getDayAdded());","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        return medObject;","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"     * Populates the JSON array with Medication information in JSON form.","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"     * @return JSON array containing a list of medication in JSON form.","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"    private static JSONArray populateJsonMedicationList() {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"        JSONArray medicationList \u003d new JSONArray();","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"        int numberOfMedication \u003d MedicationManager.getTotalMedications();","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"        // Start with 1 since the `getMedication` method will be converting from 1-based to 0-based","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"        for (int i \u003d 1; i \u003c\u003d numberOfMedication; i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"            Medication medicationInfo \u003d MedicationManager.getMedication(i);","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"            JSONObject medObject \u003d convertMedicationInfoToJsonObject(medicationInfo);","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"            medicationList.put(medObject);","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"        return medicationList;","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"     * Writes the JSON object (starting with the root) to specified file.","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"     * @param root The JSON object that contains all the JSON data.","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"     * @param fileToWrite The File object containing the abstract pathname of the JSON file.","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"    private static void writeJsonData(JSONObject root, File fileToWrite) {","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"            FileWriter fileWriter \u003d new FileWriter(fileToWrite);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"            fileWriter.write(root.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"            fileWriter.flush();","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"            fileWriter.close();","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"     * Save all the medication information into a JSON file.","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"     * @param fileToWrite The File object containing the abstract pathname of the JSON file to write to.","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"    static void saveMedicationDataToJson(File fileToWrite) {","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"        // Solution on how to write to a JSON file is adapted from:","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"        // https://stackoverflow.com/a/62947435","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"        // and https://javadoc.io/doc/org.json/json/latest/org/json/JSONObject.html","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"        // and https://javadoc.io/doc/org.json/json/latest/org/json/JSONArray.html","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"        JSONObject rootData \u003d new JSONObject();","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"        rootData.put(\"version\", 1.0);","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"        JSONArray medicationList \u003d populateJsonMedicationList();","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        rootData.put(\"medicationList\", medicationList);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"        writeJsonData(rootData, fileToWrite);","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"annoy-o-mus":96}},{"path":"src/main/java/meditracker/storage/JsonImporter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONArray;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONException;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"import org.json.JSONObject;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.logging.MediLogger;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":" * A class to handle the importing of raw json file data and process them.","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":" * Passes the data in an intermediate format to the various Managers involved for them to initialise.","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"public class JsonImporter {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    private static Logger logger \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"     * Converts information from JSONArray into a List of (String, String) mappings.","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"     * The JSONArray should contain purely JSONObjects, and each JSONObject should contain purely","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"     * keys of type String and values of type String.","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"     * @param jsonArray A JSONArray of JSONObjects containing key-value pairs of type (String, String).","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"     * @return A list of (String, String) key-value pairs. May contain only partial entries if there are entries not","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"     *     in the specified type.","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"    private static List\u003cMap\u003cString, String\u003e\u003e convertJsonArrayToStringMap(JSONArray jsonArray) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"        // Solution adapted from","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"        // https://stackoverflow.com/questions/32823746/java-code-to-convert-json-into-text-in-key-value-pair","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        int numberOfElements \u003d jsonArray.length();","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"        List\u003cMap\u003cString, String\u003e\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"        for (int i \u003d 0; i \u003c numberOfElements; i++) {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"            Map\u003cString, String\u003e kvMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"            try {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"                JSONObject jsonObject \u003d jsonArray.getJSONObject(i);","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"                Iterator\u003cString\u003e keys \u003d jsonObject.keys();","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"                while (keys.hasNext()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"                    String key \u003d keys.next();","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"                    String value \u003d jsonObject.get(key).toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"                    kvMap.put(key, value);","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"                list.add(kvMap);","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"            } catch (JSONException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"                logger.warning(\"JSONArray to List\u003cMap\u003cString,String\u003e\u003e Error: \" + e.getMessage());","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"                logger.warning(\"Entry skipped.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"                continue;","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"        return list;","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"     * Loads the file and returns JSON data as a raw string.","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"     * The JSON file should only contain one line of data. Any additional lines in the file will be ignored.","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"     * @param mediTrackerJsonPath The Path object specifying the path to the MediTracker save data.","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"     * @return The JSON data as a String object. Null if the data cannot be loaded or is empty.","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"    private static String loadRawJsonFileData(Path mediTrackerJsonPath) {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"        List\u003cString\u003e jsonFileData \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"        // Choice of reader adapted from","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"        // https://www.stackchief.com/blog/FileReader%20vs%20BufferedReader%20vs%20Scanner%20%7C%20Java","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"        // and https://stackoverflow.com/a/20838298","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"            jsonFileData \u003d Files.readAllLines(mediTrackerJsonPath);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Unable to read from the JSON save file. Defaulting to empty state.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonFileData.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Empty JSON file.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"            return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonFileData.size() \u003e 1) {","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"Multiple lines detected. JSON file should only contain one line of data. \"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"                    + \"Only the first line will be loaded. Ignoring other lines.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"        return jsonFileData.get(0);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"annoy-o-mus"},"content":"     * Reads from the JSON file and populates the various Managers with various information.","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"annoy-o-mus"},"content":"     * If the JSON file could not be found or if the structure is corrupted and could not be read,","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"annoy-o-mus"},"content":"     * a warning will be thrown to the user and the program will run as if it is the first time running.","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"annoy-o-mus"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"annoy-o-mus"},"content":"     * @param mediTrackerJsonPath The Path object specifying the path to the MediTracker save data.","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"annoy-o-mus"},"content":"    static void processMediTrackerJsonFile(Path mediTrackerJsonPath) {","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"annoy-o-mus"},"content":"        String jsonStringData \u003d loadRawJsonFileData(mediTrackerJsonPath);","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"annoy-o-mus"},"content":"        if (jsonStringData \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"annoy-o-mus"},"content":"        // Solution on reading and parsing a JSON file adapted from","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"annoy-o-mus"},"content":"        // https://stackoverflow.com/q/10926353","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"annoy-o-mus"},"content":"        JSONArray medicationList \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"annoy-o-mus"},"content":"            JSONObject rawJsonData \u003d new JSONObject(jsonStringData);","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"annoy-o-mus"},"content":"            medicationList \u003d rawJsonData.getJSONArray(\"medicationList\");","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (JSONException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"JSON Read Error: \" + e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"annoy-o-mus"},"content":"            logger.warning(\"JSON Save Data not read and processed. Going with Empty state.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"annoy-o-mus"},"content":"            return;","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"annoy-o-mus"},"content":"        List\u003cMap\u003cString, String\u003e\u003e medicationStringMap \u003d convertJsonArrayToStringMap(medicationList);","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"annoy-o-mus"},"content":"        MedicationManager.addMedicationFromSaveFile(medicationStringMap);","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"annoy-o-mus":124}},{"path":"src/main/java/meditracker/time/Period.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.time;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":" * Period enum to represent different time Periods and their corresponding TimeRange","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"public enum Period {","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"    MORNING(LocalTime.MIDNIGHT, LocalTime.NOON.minusNanos(1)),","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"    AFTERNOON(LocalTime.NOON, LocalTime.of(18, 0).minusNanos(1)),","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"    EVENING(LocalTime.of(18, 0), LocalTime.MIDNIGHT.minusNanos(1)),","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    UNKNOWN,","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"    NONE;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"    public final TimeRange timeRange;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"     * Constructs default Period with null timeRange attribute","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    Period() {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"        timeRange \u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"     * Constructs Period with a start and end LocalTime","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"     * @param start","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"     * @param end","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    Period(LocalTime start, LocalTime end) {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"        timeRange \u003d new TimeRange(start, end);","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"     * Gets the time period based on which boolean value is set","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"     * @param isMorning Boolean value for if it is morning","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"     * @param isAfternoon Boolean value for if it is afternoon","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"     * @param isEvening Boolean value for if it is evening","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"     * @return Enum value for which time Period it is","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    public static Period getPeriod(boolean isMorning, boolean isAfternoon, boolean isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"        if (!isMorning \u0026\u0026 !isAfternoon \u0026\u0026 !isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"            return NONE;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"        } else if (isMorning \u0026\u0026 !isAfternoon \u0026\u0026 !isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"            return MORNING;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        } else if (!isMorning \u0026\u0026 isAfternoon \u0026\u0026 !isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"            return AFTERNOON;","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        } else if (!isMorning \u0026\u0026 !isAfternoon \u0026\u0026 isEvening) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"            return EVENING;","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        return UNKNOWN;","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"     * Gets the time period based on the given time","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"     * @param time LocalTime object representing the time to check","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"     * @return Enum value for which time Period it is","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"    public static Period getPeriod(LocalTime time) {","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        if (MORNING.timeRange.isWithinTimeRange(time)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"            return MORNING;","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        } else if (AFTERNOON.timeRange.isWithinTimeRange(time)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"            return AFTERNOON;","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        } else if (EVENING.timeRange.isWithinTimeRange(time)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"            return EVENING;","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"        return UNKNOWN;","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":71}},{"path":"src/main/java/meditracker/time/TimeRange.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.time;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"public class TimeRange {","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"    private final LocalTime start;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"    private final LocalTime end;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"    public TimeRange(LocalTime start, LocalTime end) {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"     * Checks whether a given time is within the time range","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"     * @param time Given time to check the range","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"     * @return True if it is within the time range, else False","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    public boolean isWithinTimeRange(LocalTime time) {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"        boolean isWithinStartAndEnd \u003d time.isAfter(start) \u0026\u0026 time.isBefore(end);","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"        return start.equals(time) || end.equals(time) || isWithinStartAndEnd;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"wenenhoe":24}},{"path":"src/main/java/meditracker/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"import meditracker.library.SearchResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"nickczh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"nickczh"},"content":" * The Ui class handles user interface-related operations.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"nickczh"},"content":" * It includes methods to display welcome messages, exit messages, and read user commands.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"nickczh"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"public class Ui {","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"    static Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"     * Prevents defaulting to the public constructor","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"     * that allows instantiation of the Ui class","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    private Ui() {}","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"     * Displays the welcome message and introduction name.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"        printIntroName();","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"        showWelcome();","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"     * Prints the introduction name banner.","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"    public static void printIntroName() {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"        // Solution below adapted by http://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dType%20Something%20","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"                    __      ______                      __                      \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"                \" /\u0027\\\\_/`\\\\           /\\\\ \\\\  __/\\\\__  _\\\\                    /\\\\ \\\\                     \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"                \"/\\\\      \\\\     __   \\\\_\\\\ \\\\/\\\\_\\\\/_/\\\\ \\\\/ _ __    __      ___\\\\ \\\\ \\\\/\u0027\\\\      __   _ __  \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"                \"\\\\ \\\\ \\\\__\\\\ \\\\  /\u0027__`\\\\ /\u0027_` \\\\/\\\\ \\\\ \\\\ \\\\ \\\\/\\\\`\u0027__\\\\/\u0027__`\\\\   /\u0027___\\\\ \\\\ , \u003c    /\u0027__`\\\\/\\\\`\u0027__\\\\\\n\"","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"                +","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"nickczh"},"content":"                \" \\\\ \\\\ \\\\_/\\\\ \\\\/\\\\  __//\\\\ \\\\L\\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\//\\\\ \\\\L\\\\.\\\\_/\\\\ \\\\__/\\\\ \\\\ \\\\\\\\`\\\\ /\\\\\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"nickczh"},"content":"                \"  __/\\\\\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"nickczh"},"content":"                \" \\\\ \\\\/ \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"nickczh"},"content":"                \"  \\\\ \\\\_\\\\\\\\ \\\\_\\\\ \\\\____\\\\ \\\\___,_\\\\ \\\\_\\\\ \\\\ \\\\_\\\\ \\\\_\\\\\\\\ \\\\__/.\\\\_\\\\ \\\\____\\\\\\\\ \\\\_\\\\ \\\\_\\\\ \" +","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"nickczh"},"content":"                \"\\\\____\\\\\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"nickczh"},"content":"                \"\\\\ \\\\_\\\\ \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"nickczh"},"content":"                \"   \\\\/_/ \\\\/_/\\\\/____/\\\\/__,_ /\\\\/_/  \\\\/_/\\\\/_/ \\\\/__/\\\\/_/\\\\/____/ \\\\/_/\\\\/_/\\\\/____/ \\\\/_/ \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"nickczh"},"content":"                \"                                                                                \\n\" +","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"nickczh"},"content":"                \"                                                                                \");","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"     * Displays a line divider.","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"nickczh"},"content":"    public static void showLine() {","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"nickczh"},"content":"     * Displays the welcome message.","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"nickczh"},"content":"    public static void showWelcome() {","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Welcome to MediTracker, your best companion to track your medicine intake.\");","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Let\u0027s begin tracking!\\n\");","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"nickczh"},"content":"     * Displays the exit message.","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"nickczh"},"content":"    public static void showExitMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Thank you for using MediTracker. Hope to see you again!\");","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"nickczh"},"content":"    public static void showAddCommandMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"nickczh"},"content":"        System.out.println(\"Medicine has been successfully added!\");","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"nickczh"},"content":"    public static void showModifyCommandMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(\"Medicine has been successfully modified!\");","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"nickczh"},"content":"    public static void showListCommandMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"e0958902"},"content":"        System.out.println(\"Your list of medications has been successfully shown!\");","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"nickczh"},"content":"    public static void showDeleteCommandMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(\"Medicine has been successfully deleted\");","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"nickczh"},"content":"    public static void showTakeCommandMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(\"Medicine has been successfully taken\");","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"nickczh"},"content":"    public static void showUntakeCommandMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"        System.out.println(\"Medicine has been successfully untaken\");","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"nickczh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"nickczh"},"content":"     * Reads user input command.","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"nickczh"},"content":"     * @return The user input command as a String.","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"nickczh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"nickczh"},"content":"    public static String readCommand() {","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"nickczh"},"content":"        return input.nextLine();","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"e0958902"},"content":"     * Prints the medication list","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"e0958902"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"e0958902"},"content":"     * @param medications The list of medications","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"e0958902"},"content":"     * @param \u003cT\u003e Generic class for code reusability","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"nickczh"},"content":"    public static \u003cT\u003e void printMedsList(List\u003cT\u003e medications) {","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"T0nyLin"},"content":"        for (T medication : medications) {","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"T0nyLin"},"content":"            int numbering \u003d medications.indexOf(medication) + 1;","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"\\t\" + numbering + \". \" + medication);","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"T0nyLin"},"content":"     * Prints the sub lists of dailyMedications based on the period","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"T0nyLin"},"content":"     * @param medsList list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"T0nyLin"},"content":"     * @param dailyMedications subList of dailyMedication","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"T0nyLin"},"content":"     * @param period Specified period of the day","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"T0nyLin"},"content":"    public static void printMedsLists(List\u003cMedication\u003e medsList,","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"T0nyLin"},"content":"                                      List\u003cDailyMedication\u003e dailyMedications, String period) {","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"T0nyLin"},"content":"        int numbering \u003d 0;","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication med: dailyMedications) {","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"T0nyLin"},"content":"            String name \u003d med.getName();","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"T0nyLin"},"content":"            Double intakeDose;","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"T0nyLin"},"content":"            int index \u003d getIndex(medsList, name);","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"T0nyLin"},"content":"            if (period.equals(\"Morning:\")) {","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"T0nyLin"},"content":"                intakeDose \u003d medsList.get(index).getDosageMorning();","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"T0nyLin"},"content":"            } else if (period.equals(\"Afternoon:\")) {","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"T0nyLin"},"content":"                intakeDose \u003d medsList.get(index).getDosageAfternoon();","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"T0nyLin"},"content":"            } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"T0nyLin"},"content":"                intakeDose \u003d medsList.get(index).getDosageEvening();","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"T0nyLin"},"content":"            numbering++;","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"T0nyLin"},"content":"            System.out.println(\"\\t\" + numbering + \". \" + med + \" | \" + intakeDose);","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"T0nyLin"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"T0nyLin"},"content":"     * Gets index of the dailyMedication in the Main Medication list","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"T0nyLin"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"T0nyLin"},"content":"     * @param medsList list of medications from MedicationManager","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"T0nyLin"},"content":"     * @param name name of DailyMedication","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"T0nyLin"},"content":"     * @return index of the medication in main medication","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"T0nyLin"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"T0nyLin"},"content":"    private static int getIndex(List\u003cMedication\u003e medsList, String name) {","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"T0nyLin"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"T0nyLin"},"content":"        for (Medication medication: medsList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"T0nyLin"},"content":"            if (medication.getName().equals(name)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"T0nyLin"},"content":"                return index;","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"T0nyLin"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"T0nyLin"},"content":"            index++;","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"T0nyLin"},"content":"        return -1;","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"nickczh"},"content":"    public static void showLibraryNotFoundMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":166,"author":{"gitId":"kyuichyi"},"content":"        System.out.println(\"Library not found! Please download the library from the website.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"nickczh"},"content":"    public static void showNoSearchResultsMessage() {","lastModifiedDate":"2024-03-23"},{"lineNumber":170,"author":{"gitId":"kyuichyi"},"content":"        System.out.println(\"No search results found!\");","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"nickczh"},"content":"    public static void showSearchResults(List\u003cSearchResult\u003e searchResults) {","lastModifiedDate":"2024-03-23"},{"lineNumber":174,"author":{"gitId":"kyuichyi"},"content":"        System.out.println(\"Here are the search results:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"kyuichyi"},"content":"        for (int i \u003d 0; i \u003c searchResults.size(); i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"kyuichyi"},"content":"            System.out.println((i + 1) + \". \" + searchResults.get(i));","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"kyuichyi"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"nickczh":83,"e0958902":10,"annoy-o-mus":1,"T0nyLin":59,"kyuichyi":15,"wenenhoe":12}},{"path":"src/test/java/meditracker/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nickczh"},"content":"package meditracker;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"nickczh"},"content":"import meditracker.command.AddCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"nickczh"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"nickczh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"nickczh"},"content":"class AddCommandTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"    public void resetMedicationManager() throws InvocationTargetException,","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"            IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"        Method resetMedicationManagerMethod","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"                \u003d MedicationManager.class.getDeclaredMethod(\"clearMedication\");","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"        resetMedicationManagerMethod.setAccessible(true);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"        resetMedicationManagerMethod.invoke(MedicationManager.class);","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"nickczh"},"content":"    // 3 part format","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"nickczh"},"content":"    // methodBeingTested_conditionToTest_expectedOutcome","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    void execute_addCommand_expectOneMedication()","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"        // setup lines","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"        String inputString \u003d \"add -n Medication_A -q 60.0 -d 500.0 -e 01/07/25 -f morning -dM 500.0 -dA 250.0 \"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"                + \"-r cause_dizziness -rep 1\";","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"        AddCommand command \u003d new AddCommand(inputString);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"nickczh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"nickczh"},"content":"        // actual test","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"        assertEquals(1, MedicationManager.getTotalMedications());","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"nickczh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"nickczh"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"nickczh":18,"e0958902":15,"T0nyLin":2,"wenenhoe":6}},{"path":"src/test/java/meditracker/DailyMedicationManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.command.AddCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"public class DailyMedicationManagerTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"    public void resetDailyMedicationManager() throws InvocationTargetException,","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"            IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"        Method resetDailyMedicationManagerMethod","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"                \u003d DailyMedicationManager.class.getDeclaredMethod(\"clearDailyMedication\");","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"        resetDailyMedicationManagerMethod.setAccessible(true);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        resetDailyMedicationManagerMethod.invoke(DailyMedicationManager.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"    public void resetMedicationManager() throws InvocationTargetException,","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"            IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        Method resetMedicationManagerMethod","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"                \u003d MedicationManager.class.getDeclaredMethod(\"clearMedication\");","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        resetMedicationManagerMethod.setAccessible(true);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"        resetMedicationManagerMethod.invoke(MedicationManager.class);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    public void addDailyMedication_genericDailyMedication_dailyMedicationAdded()","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"T0nyLin"},"content":"        String inputString \u003d \"add -n Medication_A -q 60.0 -d 500.0 -e 01/07/25 -f morning -dM 500.0 -dA 250.0 \"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"T0nyLin"},"content":"                + \"-dE 300.0 -r cause_dizziness -rep 1\";","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"T0nyLin"},"content":"        AddCommand command \u003d new AddCommand(inputString);","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"T0nyLin"},"content":"        List\u003cDailyMedication\u003e morningMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"T0nyLin"},"content":"        List\u003cDailyMedication\u003e afternoonMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"T0nyLin"},"content":"        List\u003cDailyMedication\u003e eveningMedications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication morningMeds \u003d new DailyMedication(\"Medication_A\");","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"        morningMedications.add(morningMeds);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication afternoonMeds \u003d new DailyMedication(\"Medication_A\");","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"T0nyLin"},"content":"        afternoonMedications.add(afternoonMeds);","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication eveningMeds \u003d new DailyMedication(\"Medication_A\");","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"T0nyLin"},"content":"        eveningMedications.add(eveningMeds);","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"e0958902"},"content":"        List\u003cMedication\u003e medicationList \u003d MedicationManager.getMedications();","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.printTodayMedications(medicationList,","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"T0nyLin"},"content":"                morningMedications, \"Morning:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.printTodayMedications(medicationList,","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"T0nyLin"},"content":"                afternoonMedications, \"Afternoon:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.printTodayMedications(medicationList,","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"T0nyLin"},"content":"                eveningMedications, \"Evening:\");","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication morningMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication afternoonMedicationTest \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"T0nyLin"},"content":"                DailyMedicationManager.getDailyMedication(actualIndex, Period.AFTERNOON);","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication eveningMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.EVENING);","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(morningMeds.toString(), morningMedicationTest.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(afternoonMeds.toString(), afternoonMedicationTest.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(eveningMeds.toString(), eveningMedicationTest.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"T0nyLin"},"content":"    public void takeDailyMedication_genericDailyMedication_dailyMedicationTaken() throws FileReadWriteException {","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"        String medicationName \u003d \"TestMedication\";","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"        double oldQuantity \u003d 60;","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"        double dosage \u003d 10;","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"                medicationName,","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"                oldQuantity,","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"                500.0,","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"                \"morning\",","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"                1,","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"                87);","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(medicationName);","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedication.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.takeDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(dailyMedicationTest.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"        double expectedQuantity \u003d oldQuantity - dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(medication.getQuantity(), expectedQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"T0nyLin"},"content":"    public void untakeDailyMedication_genericDailyMedication_dailyMedicationNotTaken() throws FileReadWriteException {","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"        String medicationName \u003d \"TestMedication\";","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"        double oldQuantity \u003d 60;","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"        double dosage \u003d 10;","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"                medicationName,","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"                oldQuantity,","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"                500.0,","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"                null,","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"wenenhoe"},"content":"                \"morning\",","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"wenenhoe"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"wenenhoe"},"content":"                1,","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"wenenhoe"},"content":"                87);","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"wenenhoe"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(medicationName);","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"wenenhoe"},"content":"        dailyMedication.take();","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(dailyMedication.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"wenenhoe"},"content":"        int actualIndex \u003d 1; // 1-based indexing","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"wenenhoe"},"content":"        DailyMedicationManager.untakeDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedicationTest \u003d DailyMedicationManager.getDailyMedication(actualIndex, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedicationTest.isTaken());","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"wenenhoe"},"content":"        double expectedQuantity \u003d oldQuantity + dosage;","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(medication.getQuantity(), expectedQuantity);","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"e0958902":2,"T0nyLin":62,"wenenhoe":86}},{"path":"src/test/java/meditracker/DummyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"public class DummyTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"    public void testNothing_inputNothing_alwaysReturnTrue() {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"annoy-o-mus":13}},{"path":"src/test/java/meditracker/MediTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"nickczh"},"content":"class MediTrackerTest {","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"nickczh":1,"annoy-o-mus":1,"-":10}},{"path":"src/test/java/meditracker/QuerySpecificMedication.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"class QuerySpecificMedication {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"     * Queries the array list containing the medication data","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"    public void queryMedication_ifContains_expect() {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"        String inputString \u003d \"Omeprazole\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"        List\u003cString\u003e medications \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"        String medOne \u003d \"Panadol\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"        String medTwo \u003d \"Omeprazole\";","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"        medications.add(medOne);","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"        medications.add(medTwo);","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"        for (String medicationName: medications) {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"            if (medicationName.equals(inputString)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"                assertTrue(true);","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"e0958902"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"e0958902":29}},{"path":"src/test/java/meditracker/SearchMedicationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"kyuichyi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"kyuichyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"kyuichyi"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"kyuichyi"},"content":"class SearchMedicationTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"kyuichyi"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"kyuichyi"},"content":"    public void sampleTest() {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"kyuichyi"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"kyuichyi"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"kyuichyi"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"annoy-o-mus":1,"kyuichyi":11}},{"path":"src/test/java/meditracker/argument/ArgumentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentListTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    ArgumentList testArgumentList \u003d new ArgumentList(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"            new NameArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"            new DosageArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"            new QuantityArgument(false)","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    void argumentList_flagCollision_assertionError() {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"        Argument testArgument1 \u003d new Argument(","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.LIST_TYPE,","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"                \"-l\",","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"                \"\",","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"                \"\",","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"                true,","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"                true) {};","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"        Argument testArgument2 \u003d new Argument(","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"                ArgumentName.LIST_INDEX,","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"                \"-l\",","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"                \"\",","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"                \"\",","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"                true,","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"                true) {};","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(AssertionError.class, () -\u003e new ArgumentList(testArgument1, testArgument2));","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"    void parse_properArgumentString_argumentValuesObtained() {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -d %s -q %s\", name, dosage, quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        } catch (ArgumentNotFoundException | DuplicateArgumentFoundException | HelpInvokedException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE), dosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"    void parse_missingArgumentSpecified_argumentNotFoundException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -d %s\", name, dosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"                ArgumentNotFoundException.class,","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"                () -\u003e testArgumentList.parse(testArgumentString)","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"wenenhoe":69}},{"path":"src/test/java/meditracker/argument/ArgumentParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.argument;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"public class ArgumentParserTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"    ArgumentList testArgumentList \u003d new ArgumentList(","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"            new NameArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"            new QuantityArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"            new DosageArgument(false),","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"            new RemarksArgument(false)","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"    );","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_validArgumentString_parsesCorrectly() {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -d %s -q %s -r %s\",","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"                remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"        } catch (ArgumentNotFoundException | DuplicateArgumentFoundException | HelpInvokedException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE), dosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.REMARKS), remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_outOfOrderArgument_parsesCorrectly() {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -r %s -q %s -d %s\",","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"wenenhoe"},"content":"                remarks,","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"                dosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"wenenhoe"},"content":"        } catch (ArgumentNotFoundException | DuplicateArgumentFoundException | HelpInvokedException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE), dosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.REMARKS), remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_additionalSpacesInArguments_parsesCorrectly() {","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n      %s     -r    %s    -q     %s  -d  %s    \",","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"wenenhoe"},"content":"                remarks,","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"wenenhoe"},"content":"                dosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"wenenhoe"},"content":"        Map\u003cArgumentName, String\u003e parsedArgs;","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"wenenhoe"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"wenenhoe"},"content":"            parsedArgs \u003d testArgumentList.parse(testArgumentString);","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"wenenhoe"},"content":"        } catch (ArgumentNotFoundException | DuplicateArgumentFoundException | HelpInvokedException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"wenenhoe"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"wenenhoe"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.NAME), name);","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.DOSAGE), dosage);","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.QUANTITY), quantity);","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(parsedArgs.get(ArgumentName.REMARKS), remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_duplicateArgumentFlags_duplicateArgumentFoundException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"wenenhoe"},"content":"        String dosage \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -d %s -q %s -r %s -n %s\",","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"wenenhoe"},"content":"                dosage,","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"wenenhoe"},"content":"                remarks,","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"wenenhoe"},"content":"                name);","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"wenenhoe"},"content":"                DuplicateArgumentFoundException.class,","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"wenenhoe"},"content":"                () -\u003e testArgumentList.parse(testArgumentString)","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"wenenhoe"},"content":"    void argumentParser_missingArgumentFlags_argumentNotFoundException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"wenenhoe"},"content":"        String name \u003d \"Medication\";","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"wenenhoe"},"content":"        String quantity \u003d \"2000\";","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"wenenhoe"},"content":"        String remarks \u003d \"Take before meals\";","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"wenenhoe"},"content":"        String testArgumentString \u003d String.format(\"-n %s -q %s -r %s\",","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"wenenhoe"},"content":"                name,","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"wenenhoe"},"content":"                quantity,","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"wenenhoe"},"content":"                remarks);","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"wenenhoe"},"content":"        assertThrows(","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"wenenhoe"},"content":"                ArgumentNotFoundException.class,","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"wenenhoe"},"content":"                () -\u003e testArgumentList.parse(testArgumentString)","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"wenenhoe"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"wenenhoe":130}},{"path":"src/test/java/meditracker/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"    public void resetMedicationManager() throws InvocationTargetException,","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"            IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"        Method resetMedicationManagerMethod","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"                \u003d MedicationManager.class.getDeclaredMethod(\"clearMedication\");","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"        resetMedicationManagerMethod.setAccessible(true);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"        resetMedicationManagerMethod.invoke(MedicationManager.class);","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectMedicationDeleted()","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"nickczh"},"content":"                60.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"nickczh"},"content":"                500.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"nickczh"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"nickczh"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"nickczh"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"                \"morning\",","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"nickczh"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"                87);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"e0958902"},"content":"        MedicationManager.printAllMedications();","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"delete -l 1\";","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"        DeleteCommand command \u003d new DeleteCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"e0958902"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e MedicationManager.getMedication(1));","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"e0958902":19,"nickczh":6,"T0nyLin":2,"wenenhoe":25}},{"path":"src/test/java/meditracker/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0958902"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"e0958902"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"e0958902"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"e0958902"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"e0958902"},"content":"class ListCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"e0958902"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"e0958902"},"content":"    void execute_listCommand_expect() {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"e0958902"},"content":"        String medicationName \u003d \"Medication_B\";","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"e0958902"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"e0958902"},"content":"                medicationName,","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"e0958902"},"content":"                30.0,","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"e0958902"},"content":"                1000.0,","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"e0958902"},"content":"                null,","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"e0958902"},"content":"                null,","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"e0958902"},"content":"                null,","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"e0958902"},"content":"                \"01/08/25\",","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"e0958902"},"content":"                \"night\",","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"e0958902"},"content":"                \"for_flu_or_allergy\",","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"                87","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        );","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"e0958902"},"content":"        assert MedicationManager.getTotalMedications() \u003e 0 : \"Total medications in medication must be greater \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"                \"than 0 after adding in\" + medicationName;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"e0958902"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"e0958902"},"content":"        Medication addedMedication \u003d MedicationManager.getMedication(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"        assertEquals(addedMedication.getName(), medicationName);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"e0958902"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"e0958902"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"e0958902":34,"T0nyLin":3}},{"path":"src/test/java/meditracker/command/ModifyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"wenenhoe"},"content":"public class ModifyCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectMedicationModified()","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"nickczh"},"content":"                60.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"nickczh"},"content":"                500.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"nickczh"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"nickczh"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"nickczh"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"wenenhoe"},"content":"                \"morning\",","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"nickczh"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"                87);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(\"Medication_A\");","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication, Period.MORNING);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        String newName \u003d \"Medication_B\";","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"modify -l 1 -n \" + newName;","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"wenenhoe"},"content":"        ModifyCommand command \u003d new ModifyCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"e0958902"},"content":"        Medication updatedMedication \u003d MedicationManager.getMedication(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"        assertEquals(updatedMedication.getName(), newName);","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"wenenhoe"},"content":"    void execute_outOfOrderArgument_expectMedicationModified()","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"wenenhoe"},"content":"        Medication medication \u003d new Medication(","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"wenenhoe"},"content":"                \"Medication_A\",","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"nickczh"},"content":"                60.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"nickczh"},"content":"                500.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"T0nyLin"},"content":"                300.0,","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"nickczh"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"nickczh"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"wenenhoe"},"content":"                \"01/07/25\",","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"wenenhoe"},"content":"                \"morning\",","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"nickczh"},"content":"                \"cause_dizziness\",","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"T0nyLin"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"T0nyLin"},"content":"                87);","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"e0958902"},"content":"        MedicationManager.addMedication(medication);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"wenenhoe"},"content":"        String newName \u003d \"Medication_B\";","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d String.format(\"modify -n %s -l 1\", newName);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"wenenhoe"},"content":"        ModifyCommand command \u003d new ModifyCommand(inputString);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"e0958902"},"content":"        Medication updatedMedication \u003d MedicationManager.getMedication(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(updatedMedication.getName().equals(newName));","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"nickczh":11,"e0958902":6,"T0nyLin":10,"wenenhoe":44}},{"path":"src/test/java/meditracker/command/TakeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InvalidArgumentException;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"public class TakeCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"    public void resetDailyMedicationManager() throws InvocationTargetException,","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"            IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"        Method resetDailyMedicationManagerMethod","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"                \u003d DailyMedicationManager.class.getDeclaredMethod(\"clearDailyMedication\");","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"        resetDailyMedicationManagerMethod.setAccessible(true);","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        resetDailyMedicationManagerMethod.invoke(DailyMedicationManager.class);","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectDailyMedicationTaken()","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException,","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            FileReadWriteException, InvalidArgumentException {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(\"Medication_A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication, Period.MORNING);  //only test Morning for now","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"take -l 1 -m\";","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        TakeCommand command \u003d new TakeCommand(inputString);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        assertTrue(dailyMedication.isTaken());","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"e0958902":1,"T0nyLin":18,"wenenhoe":24}},{"path":"src/test/java/meditracker/command/UntakeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wenenhoe"},"content":"package meditracker.command;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedicationManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.ArgumentNotFoundException;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.DuplicateArgumentFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.HelpInvokedException;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"wenenhoe"},"content":"import meditracker.exception.InvalidArgumentException;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"wenenhoe"},"content":"import meditracker.time.Period;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"wenenhoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"wenenhoe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"wenenhoe"},"content":"public class UntakeCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"    public void resetDailyMedicationManager() throws InvocationTargetException,","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"            IllegalAccessException, NoSuchMethodException {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"        Method resetDailyMedicationManagerMethod","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"                \u003d DailyMedicationManager.class.getDeclaredMethod(\"clearDailyMedication\");","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"        resetDailyMedicationManagerMethod.setAccessible(true);","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        resetDailyMedicationManagerMethod.invoke(DailyMedicationManager.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"wenenhoe"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"wenenhoe"},"content":"    void execute_inOrderArgument_expectDailyMedicationUntaken()","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"wenenhoe"},"content":"            throws ArgumentNotFoundException, DuplicateArgumentFoundException, HelpInvokedException,","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"wenenhoe"},"content":"            FileReadWriteException, InvalidArgumentException {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"wenenhoe"},"content":"        DailyMedication dailyMedication \u003d new DailyMedication(\"Medication_A\");","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"T0nyLin"},"content":"        DailyMedicationManager.addDailyMedication(dailyMedication, Period.MORNING);    //only doing for MORNING sub list","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"wenenhoe"},"content":"        String inputString \u003d \"untake -l 1 -m\";","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"wenenhoe"},"content":"        UntakeCommand command \u003d new UntakeCommand(inputString);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"e0958902"},"content":"        command.execute();","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"wenenhoe"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"wenenhoe"},"content":"        assertFalse(dailyMedication.isTaken());","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"wenenhoe"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"wenenhoe"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"e0958902":1,"T0nyLin":17,"wenenhoe":25}},{"path":"src/test/java/meditracker/logging/MediLoggerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.logging;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"public class MediLoggerTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"    public void getMediLogger_noInput_loggerReturned() {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"        Logger log \u003d MediLogger.getMediLogger();","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"        assertNotNull(log);","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"annoy-o-mus":17}},{"path":"src/test/java/meditracker/storage/JsonExporterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"annoy-o-mus"},"content":"package meditracker.storage;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"annoy-o-mus"},"content":"import java.io.File;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"annoy-o-mus"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.exception.FileReadWriteException;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.Medication;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"annoy-o-mus"},"content":"import meditracker.medication.MedicationManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"annoy-o-mus"},"content":"//@@author annoy-o-mus","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"annoy-o-mus"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"annoy-o-mus"},"content":" * A class to test the JSON export functionality.","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"annoy-o-mus"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"annoy-o-mus"},"content":"public class JsonExporterTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"annoy-o-mus"},"content":"    private static File exportedJsonFile \u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"annoy-o-mus"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"annoy-o-mus"},"content":"     * Pre-populate the medication manager with some medications that we need to simulate data exporting. They can be","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"annoy-o-mus"},"content":"     * potentially errornous (i.e. empty field where they are not supposed to be).","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"annoy-o-mus"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"annoy-o-mus"},"content":"    @BeforeAll","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"annoy-o-mus"},"content":"    public static void initiateMedicationManager() {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"annoy-o-mus"},"content":"        Medication med1 \u003d new Medication(","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"annoy-o-mus"},"content":"                \"Test Valid Medication 1\",","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"annoy-o-mus"},"content":"                69.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"annoy-o-mus"},"content":"                1.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"annoy-o-mus"},"content":"                \"23/11/24\",","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"annoy-o-mus"},"content":"                \"2\",","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"annoy-o-mus"},"content":"                \"No Remarks\",","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"annoy-o-mus"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"annoy-o-mus"},"content":"                87","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"annoy-o-mus"},"content":"        Medication med2 \u003d new Medication(","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"annoy-o-mus"},"content":"                \"Test Valid Medication 2\",","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"annoy-o-mus"},"content":"                10000.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"annoy-o-mus"},"content":"                10.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"annoy-o-mus"},"content":"                null,","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"annoy-o-mus"},"content":"                \"01/01/25\",","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"annoy-o-mus"},"content":"                \"4\",","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"annoy-o-mus"},"content":"                \"\",","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"annoy-o-mus"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"annoy-o-mus"},"content":"                87","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"annoy-o-mus"},"content":"        Medication med3 \u003d new Medication(","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"annoy-o-mus"},"content":"                \"Invalid Medication 4\",","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"annoy-o-mus"},"content":"                999.0,","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"annoy-o-mus"},"content":"                3.1425926535,","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"annoy-o-mus"},"content":"                0.0,","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"annoy-o-mus"},"content":"                \"\",","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"annoy-o-mus"},"content":"                \"\",","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"annoy-o-mus"},"content":"                \"null\",","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"annoy-o-mus"},"content":"                1,","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"annoy-o-mus"},"content":"                87","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"annoy-o-mus"},"content":"        );","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"annoy-o-mus"},"content":"        MedicationManager.addMedication(med1);","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"annoy-o-mus"},"content":"        MedicationManager.addMedication(med2);","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"annoy-o-mus"},"content":"        MedicationManager.addMedication(med3);","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"annoy-o-mus"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"annoy-o-mus"},"content":"    public void setUpWriteFile() {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"annoy-o-mus"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"annoy-o-mus"},"content":"            exportedJsonFile \u003d FileReaderWriter.createJsonSaveFile();","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"annoy-o-mus"},"content":"        } catch (FileReadWriteException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"annoy-o-mus"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"annoy-o-mus"},"content":"    @AfterEach","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"annoy-o-mus"},"content":"    public void cleanup() {","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"annoy-o-mus"},"content":"        if (exportedJsonFile !\u003d null \u0026\u0026 exportedJsonFile.exists()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"annoy-o-mus"},"content":"            exportedJsonFile.delete();","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"annoy-o-mus"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"annoy-o-mus"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"annoy-o-mus"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"annoy-o-mus"},"content":"    public void placeHolder() {","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"annoy-o-mus"},"content":"        JsonExporter.saveMedicationDataToJson(exportedJsonFile);","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"annoy-o-mus"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"annoy-o-mus"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"annoy-o-mus":96}},{"path":"src/test/java/meditracker/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"T0nyLin"},"content":"package meditracker.ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"T0nyLin"},"content":"import meditracker.dailymedication.DailyMedication;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"T0nyLin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"T0nyLin"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"T0nyLin"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"T0nyLin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"T0nyLin"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"T0nyLin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"T0nyLin"},"content":"//Solution below adapted by https://stackoverflow.com/questions/58665761","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"T0nyLin"},"content":"class UiTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"T0nyLin"},"content":"    private static final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"T0nyLin"},"content":"    private static final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"T0nyLin"},"content":"    @BeforeAll","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"T0nyLin"},"content":"    public static void setUpStream() {","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"T0nyLin"},"content":"    @AfterAll","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"T0nyLin"},"content":"    public static void restoreStreams() {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"T0nyLin"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"T0nyLin"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"T0nyLin"},"content":"    void printMedsList_sizeOfMedicationList_expectPrintedList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"T0nyLin"},"content":"        List\u003cDailyMedication\u003e medications \u003d new ArrayList\u003c\u003e(1);","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"T0nyLin"},"content":"        Ui.printMedsList(medications);","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"e0958902"},"content":"        StringBuilder expectedOutput \u003d new StringBuilder();","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"T0nyLin"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"T0nyLin"},"content":"        for (DailyMedication dailyMedication : medications) {","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"T0nyLin"},"content":"            int numbering \u003d medications.indexOf(dailyMedication) + 1;","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"T0nyLin"},"content":"            expectedOutput.append(\"\\t\").","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"T0nyLin"},"content":"                    append(numbering).append(\". \").append(dailyMedication)","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"T0nyLin"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"T0nyLin"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"T0nyLin"},"content":"        assertEquals(expectedOutput.toString(), output.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"T0nyLin"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"T0nyLin"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"e0958902":1,"T0nyLin":44}}]
